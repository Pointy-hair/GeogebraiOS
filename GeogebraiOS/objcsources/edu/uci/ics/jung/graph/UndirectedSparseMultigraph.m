//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/graph/AbstractGraph.h"
#include "edu/uci/ics/jung/graph/AbstractTypedGraph.h"
#include "edu/uci/ics/jung/graph/UndirectedGraph.h"
#include "edu/uci/ics/jung/graph/UndirectedSparseMultigraph.h"
#include "edu/uci/ics/jung/graph/util/EdgeType.h"
#include "edu/uci/ics/jung/graph/util/Pair.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/Factory.h"

@interface EduUciIcsJungGraphUndirectedSparseMultigraph_$1 : NSObject < OrgApacheCommonsCollections15Factory >

- (id<EduUciIcsJungGraphUndirectedGraph>)create;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungGraphUndirectedSparseMultigraph_$1)

__attribute__((unused)) static void EduUciIcsJungGraphUndirectedSparseMultigraph_$1_init(EduUciIcsJungGraphUndirectedSparseMultigraph_$1 *self);

__attribute__((unused)) static EduUciIcsJungGraphUndirectedSparseMultigraph_$1 *new_EduUciIcsJungGraphUndirectedSparseMultigraph_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungGraphUndirectedSparseMultigraph_$1)

@implementation EduUciIcsJungGraphUndirectedSparseMultigraph

+ (id<OrgApacheCommonsCollections15Factory>)getFactory {
  return EduUciIcsJungGraphUndirectedSparseMultigraph_getFactory();
}

- (instancetype)init {
  EduUciIcsJungGraphUndirectedSparseMultigraph_init(self);
  return self;
}

- (id<JavaUtilCollection>)getEdges {
  return JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(edges_)) keySet]);
}

- (id<JavaUtilCollection>)getVertices {
  return JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(vertices_)) keySet]);
}

- (jboolean)containsVertexWithId:(id)vertex {
  return [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(vertices_)) keySet])) containsWithId:vertex];
}

- (jboolean)containsEdgeWithId:(id)edge {
  return [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(edges_)) keySet])) containsWithId:edge];
}

- (id<JavaUtilCollection>)getIncident_internalWithId:(id)vertex {
  return [((id<JavaUtilMap>) nil_chk(vertices_)) getWithId:vertex];
}

- (jboolean)addVertexWithId:(id)vertex {
  if (vertex == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"vertex may not be null");
  }
  if (![self containsVertexWithId:vertex]) {
    (void) [((id<JavaUtilMap>) nil_chk(vertices_)) putWithId:vertex withId:new_JavaUtilHashSet_init()];
    return YES;
  }
  else {
    return NO;
  }
}

- (jboolean)removeVertexWithId:(id)vertex {
  if (![self containsVertexWithId:vertex]) return NO;
  for (id __strong edge in new_JavaUtilArrayList_initWithJavaUtilCollection_([self getIncident_internalWithId:vertex])) [self removeEdgeWithId:edge];
  (void) [((id<JavaUtilMap>) nil_chk(vertices_)) removeWithId:vertex];
  return YES;
}

- (jboolean)addEdgeWithId:(id)edge
                   withId:(id)v1
                   withId:(id)v2
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edgeType {
  return [self addEdgeWithId:edge withEduUciIcsJungGraphUtilPair:new_EduUciIcsJungGraphUtilPair_initWithId_withId_(v1, v2) withEduUciIcsJungGraphUtilEdgeTypeEnum:edgeType];
}

- (jboolean)addEdgeWithId:(id)edge
withEduUciIcsJungGraphUtilPair:(EduUciIcsJungGraphUtilPair *)endpoints
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edge_type {
  [self validateEdgeTypeWithEduUciIcsJungGraphUtilEdgeTypeEnum:edge_type];
  EduUciIcsJungGraphUtilPair *new_endpoints = [self getValidatedEndpointsWithId:edge withEduUciIcsJungGraphUtilPair:endpoints];
  if (new_endpoints == nil) return NO;
  id v1 = [((EduUciIcsJungGraphUtilPair *) nil_chk(endpoints)) getFirst];
  id v2 = [endpoints getSecond];
  (void) [((id<JavaUtilMap>) nil_chk(edges_)) putWithId:edge withId:new_endpoints];
  if (![self containsVertexWithId:v1]) [self addVertexWithId:v1];
  if (![self containsVertexWithId:v2]) [self addVertexWithId:v2];
  [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(vertices_)) getWithId:v1])) addWithId:edge];
  [((id<JavaUtilSet>) nil_chk([vertices_ getWithId:v2])) addWithId:edge];
  return YES;
}

- (jboolean)removeEdgeWithId:(id)edge {
  if (![self containsEdgeWithId:edge]) return NO;
  EduUciIcsJungGraphUtilPair *endpoints = [self getEndpointsWithId:edge];
  id v1 = [((EduUciIcsJungGraphUtilPair *) nil_chk(endpoints)) getFirst];
  id v2 = [endpoints getSecond];
  [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(vertices_)) getWithId:v1])) removeWithId:edge];
  [((id<JavaUtilSet>) nil_chk([vertices_ getWithId:v2])) removeWithId:edge];
  (void) [((id<JavaUtilMap>) nil_chk(edges_)) removeWithId:edge];
  return YES;
}

- (id<JavaUtilCollection>)getInEdgesWithId:(id)vertex {
  return [self getIncidentEdgesWithId:vertex];
}

- (id<JavaUtilCollection>)getOutEdgesWithId:(id)vertex {
  return [self getIncidentEdgesWithId:vertex];
}

- (id<JavaUtilCollection>)getPredecessorsWithId:(id)vertex {
  return [self getNeighborsWithId:vertex];
}

- (id<JavaUtilCollection>)getSuccessorsWithId:(id)vertex {
  return [self getNeighborsWithId:vertex];
}

- (id<JavaUtilCollection>)getNeighborsWithId:(id)vertex {
  if (![self containsVertexWithId:vertex]) return nil;
  id<JavaUtilSet> neighbors = new_JavaUtilHashSet_init();
  for (id __strong edge in nil_chk([self getIncident_internalWithId:vertex])) {
    EduUciIcsJungGraphUtilPair *endpoints = [self getEndpointsWithId:edge];
    id e_a = [((EduUciIcsJungGraphUtilPair *) nil_chk(endpoints)) getFirst];
    id e_b = [endpoints getSecond];
    if ([nil_chk(vertex) isEqual:e_a]) [neighbors addWithId:e_b];
    else [neighbors addWithId:e_a];
  }
  return JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_(neighbors);
}

- (id<JavaUtilCollection>)getIncidentEdgesWithId:(id)vertex {
  if (![self containsVertexWithId:vertex]) return nil;
  return JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_([self getIncident_internalWithId:vertex]);
}

- (id)findEdgeWithId:(id)v1
              withId:(id)v2 {
  if (![self containsVertexWithId:v1] || ![self containsVertexWithId:v2]) return nil;
  for (id __strong edge in nil_chk([self getIncident_internalWithId:v1])) {
    EduUciIcsJungGraphUtilPair *endpoints = [self getEndpointsWithId:edge];
    id e_a = [((EduUciIcsJungGraphUtilPair *) nil_chk(endpoints)) getFirst];
    id e_b = [endpoints getSecond];
    if (([nil_chk(v1) isEqual:e_a] && [nil_chk(v2) isEqual:e_b]) || ([v1 isEqual:e_b] && [nil_chk(v2) isEqual:e_a])) return edge;
  }
  return nil;
}

- (EduUciIcsJungGraphUtilPair *)getEndpointsWithId:(id)edge {
  return [((id<JavaUtilMap>) nil_chk(edges_)) getWithId:edge];
}

- (id)getDestWithId:(id)directed_edge {
  return nil;
}

- (id)getSourceWithId:(id)directed_edge {
  return nil;
}

- (jboolean)isDestWithId:(id)vertex
                  withId:(id)edge {
  return NO;
}

- (jboolean)isSourceWithId:(id)vertex
                    withId:(id)edge {
  return NO;
}

- (jint)getEdgeCount {
  return [((id<JavaUtilMap>) nil_chk(edges_)) size];
}

- (jint)getVertexCount {
  return [((id<JavaUtilMap>) nil_chk(vertices_)) size];
}

- (EduUciIcsJungGraphUndirectedSparseMultigraph *)newInstance {
  return new_EduUciIcsJungGraphUndirectedSparseMultigraph_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFactory", NULL, "Lorg.apache.commons.collections15.Factory;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>()Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/UndirectedGraph<TV;TE;>;>;" },
    { "init", "UndirectedSparseMultigraph", NULL, 0x1, NULL, NULL },
    { "getEdges", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "getVertices", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "containsVertexWithId:", "containsVertex", "Z", 0x1, NULL, "(TV;)Z" },
    { "containsEdgeWithId:", "containsEdge", "Z", 0x1, NULL, "(TE;)Z" },
    { "getIncident_internalWithId:", "getIncident_internal", "Ljava.util.Collection;", 0x4, NULL, "(TV;)Ljava/util/Collection<TE;>;" },
    { "addVertexWithId:", "addVertex", "Z", 0x1, NULL, "(TV;)Z" },
    { "removeVertexWithId:", "removeVertex", "Z", 0x1, NULL, "(TV;)Z" },
    { "addEdgeWithId:withId:withId:withEduUciIcsJungGraphUtilEdgeTypeEnum:", "addEdge", "Z", 0x1, NULL, "(TE;TV;TV;Ledu/uci/ics/jung/graph/util/EdgeType;)Z" },
    { "addEdgeWithId:withEduUciIcsJungGraphUtilPair:withEduUciIcsJungGraphUtilEdgeTypeEnum:", "addEdge", "Z", 0x1, NULL, "(TE;Ledu/uci/ics/jung/graph/util/Pair<+TV;>;Ledu/uci/ics/jung/graph/util/EdgeType;)Z" },
    { "removeEdgeWithId:", "removeEdge", "Z", 0x1, NULL, "(TE;)Z" },
    { "getInEdgesWithId:", "getInEdges", "Ljava.util.Collection;", 0x1, NULL, "(TV;)Ljava/util/Collection<TE;>;" },
    { "getOutEdgesWithId:", "getOutEdges", "Ljava.util.Collection;", 0x1, NULL, "(TV;)Ljava/util/Collection<TE;>;" },
    { "getPredecessorsWithId:", "getPredecessors", "Ljava.util.Collection;", 0x1, NULL, "(TV;)Ljava/util/Collection<TV;>;" },
    { "getSuccessorsWithId:", "getSuccessors", "Ljava.util.Collection;", 0x1, NULL, "(TV;)Ljava/util/Collection<TV;>;" },
    { "getNeighborsWithId:", "getNeighbors", "Ljava.util.Collection;", 0x1, NULL, "(TV;)Ljava/util/Collection<TV;>;" },
    { "getIncidentEdgesWithId:", "getIncidentEdges", "Ljava.util.Collection;", 0x1, NULL, "(TV;)Ljava/util/Collection<TE;>;" },
    { "findEdgeWithId:withId:", "findEdge", "TE;", 0x1, NULL, "(TV;TV;)TE;" },
    { "getEndpointsWithId:", "getEndpoints", "Ledu.uci.ics.jung.graph.util.Pair;", 0x1, NULL, "(TE;)Ledu/uci/ics/jung/graph/util/Pair<TV;>;" },
    { "getDestWithId:", "getDest", "TV;", 0x1, NULL, "(TE;)TV;" },
    { "getSourceWithId:", "getSource", "TV;", 0x1, NULL, "(TE;)TV;" },
    { "isDestWithId:withId:", "isDest", "Z", 0x1, NULL, "(TV;TE;)Z" },
    { "isSourceWithId:withId:", "isSource", "Z", 0x1, NULL, "(TV;TE;)Z" },
    { "getEdgeCount", NULL, "I", 0x1, NULL, NULL },
    { "getVertexCount", NULL, "I", 0x1, NULL, NULL },
    { "newInstance", NULL, "Ledu.uci.ics.jung.graph.UndirectedSparseMultigraph;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vertices_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;Ljava/util/Set<TE;>;>;",  },
    { "edges_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TE;Ledu/uci/ics/jung/graph/util/Pair<TV;>;>;",  },
  };
  static const char *superclass_type_args[] = {"TV;", "TE;"};
  static const J2ObjcClassInfo _EduUciIcsJungGraphUndirectedSparseMultigraph = { 2, "UndirectedSparseMultigraph", "edu.uci.ics.jung.graph", NULL, 0x1, 27, methods, 2, fields, 2, superclass_type_args, 0, NULL, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>Ledu/uci/ics/jung/graph/AbstractTypedGraph<TV;TE;>;Ledu/uci/ics/jung/graph/UndirectedGraph<TV;TE;>;Ledu/uci/ics/jung/graph/MultiGraph<TV;TE;>;" };
  return &_EduUciIcsJungGraphUndirectedSparseMultigraph;
}

@end

id<OrgApacheCommonsCollections15Factory> EduUciIcsJungGraphUndirectedSparseMultigraph_getFactory() {
  EduUciIcsJungGraphUndirectedSparseMultigraph_initialize();
  return new_EduUciIcsJungGraphUndirectedSparseMultigraph_$1_init();
}

void EduUciIcsJungGraphUndirectedSparseMultigraph_init(EduUciIcsJungGraphUndirectedSparseMultigraph *self) {
  (void) EduUciIcsJungGraphAbstractTypedGraph_initWithEduUciIcsJungGraphUtilEdgeTypeEnum_(self, EduUciIcsJungGraphUtilEdgeTypeEnum_get_UNDIRECTED());
  self->vertices_ = new_JavaUtilHashMap_init();
  self->edges_ = new_JavaUtilHashMap_init();
}

EduUciIcsJungGraphUndirectedSparseMultigraph *new_EduUciIcsJungGraphUndirectedSparseMultigraph_init() {
  EduUciIcsJungGraphUndirectedSparseMultigraph *self = [EduUciIcsJungGraphUndirectedSparseMultigraph alloc];
  EduUciIcsJungGraphUndirectedSparseMultigraph_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungGraphUndirectedSparseMultigraph)

@implementation EduUciIcsJungGraphUndirectedSparseMultigraph_$1

- (id<EduUciIcsJungGraphUndirectedGraph>)create {
  return new_EduUciIcsJungGraphUndirectedSparseMultigraph_init();
}

- (instancetype)init {
  EduUciIcsJungGraphUndirectedSparseMultigraph_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", NULL, "Ledu.uci.ics.jung.graph.UndirectedGraph;", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "EduUciIcsJungGraphUndirectedSparseMultigraph", "getFactory" };
  static const J2ObjcClassInfo _EduUciIcsJungGraphUndirectedSparseMultigraph_$1 = { 2, "", "edu.uci.ics.jung.graph", "UndirectedSparseMultigraph", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/UndirectedGraph<TV;TE;>;>;" };
  return &_EduUciIcsJungGraphUndirectedSparseMultigraph_$1;
}

@end

void EduUciIcsJungGraphUndirectedSparseMultigraph_$1_init(EduUciIcsJungGraphUndirectedSparseMultigraph_$1 *self) {
  (void) NSObject_init(self);
}

EduUciIcsJungGraphUndirectedSparseMultigraph_$1 *new_EduUciIcsJungGraphUndirectedSparseMultigraph_$1_init() {
  EduUciIcsJungGraphUndirectedSparseMultigraph_$1 *self = [EduUciIcsJungGraphUndirectedSparseMultigraph_$1 alloc];
  EduUciIcsJungGraphUndirectedSparseMultigraph_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungGraphUndirectedSparseMultigraph_$1)
