//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/graph/OrderedKAryTree.java
//

#ifndef _EduUciIcsJungGraphOrderedKAryTree_H_
#define _EduUciIcsJungGraphOrderedKAryTree_H_

#include "J2ObjC_header.h"
#include "edu/uci/ics/jung/graph/AbstractTypedGraph.h"
#include "edu/uci/ics/jung/graph/Tree.h"

@class EduUciIcsJungGraphUtilEdgeTypeEnum;
@class EduUciIcsJungGraphUtilPair;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol OrgApacheCommonsCollections15Factory;

@interface EduUciIcsJungGraphOrderedKAryTree : EduUciIcsJungGraphAbstractTypedGraph < EduUciIcsJungGraphTree > {
 @public
  id<JavaUtilMap> edge_vpairs_;
  id<JavaUtilMap> vertex_data_;
  jint height_;
  id root_;
  jint order_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)order;

- (jboolean)addEdgeWithId:(id)edge
   withJavaUtilCollection:(id<JavaUtilCollection>)vertices
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edge_type;

- (jboolean)addEdgeWithId:(id)edge
withEduUciIcsJungGraphUtilPair:(EduUciIcsJungGraphUtilPair *)endpoints
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edgeType;

- (jboolean)addEdgeWithId:(id)e
                   withId:(id)parent
                   withId:(id)child;

- (jboolean)addEdgeWithId:(id)e
                   withId:(id)v1
                   withId:(id)v2
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edge_type;

- (jboolean)addEdgeWithId:(id)e
                   withId:(id)parent
                   withId:(id)child
                  withInt:(jint)index;

- (jboolean)addVertexWithId:(id)vertex;

- (jboolean)containsEdgeWithId:(id)edge;

- (jboolean)containsVertexWithId:(id)vertex;

- (id)findEdgeWithId:(id)v1
              withId:(id)v2;

- (id<JavaUtilCollection>)findEdgeSetWithId:(id)v1
                                     withId:(id)v2;

- (id)getChildWithId:(id)vertex
             withInt:(jint)index;

- (jint)getChildCountWithId:(id)vertex;

- (id)getChildEdgeWithId:(id)vertex
                 withInt:(jint)index;

- (id<JavaUtilCollection>)getChildEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getChildrenWithId:(id)vertex;

- (jint)getDepthWithId:(id)vertex;

- (id)getDestWithId:(id)directed_edge;

- (jint)getEdgeCount;

- (id<JavaUtilCollection>)getEdges;

- (EduUciIcsJungGraphUtilPair *)getEndpointsWithId:(id)edge;

+ (id<OrgApacheCommonsCollections15Factory>)getFactoryWithInt:(jint)order;

- (jint)getHeight;

- (jint)getIncidentCountWithId:(id)edge;

- (id<JavaUtilCollection>)getIncidentEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getIncidentVerticesWithId:(id)edge;

- (id<JavaUtilCollection>)getInEdgesWithId:(id)vertex;

- (jint)getNeighborCountWithId:(id)vertex;

- (id<JavaUtilCollection>)getNeighborsWithId:(id)vertex;

- (id)getOppositeWithId:(id)vertex
                 withId:(id)edge;

- (id<JavaUtilCollection>)getOutEdgesWithId:(id)vertex;

- (id)getParentWithId:(id)vertex;

- (id)getParentEdgeWithId:(id)vertex;

- (jint)getPredecessorCountWithId:(id)vertex;

- (id<JavaUtilCollection>)getPredecessorsWithId:(id)vertex;

- (id)getRoot;

- (id)getSourceWithId:(id)directed_edge;

- (jint)getSuccessorCountWithId:(id)vertex;

- (id<JavaUtilCollection>)getSuccessorsWithId:(id)vertex;

- (id<JavaUtilCollection>)getTrees;

- (jint)getVertexCount;

- (id<JavaUtilCollection>)getVertices;

- (jint)inDegreeWithId:(id)vertex;

- (jboolean)isDestWithId:(id)vertex
                  withId:(id)edge;

- (jboolean)isIncidentWithId:(id)vertex
                      withId:(id)edge;

- (jboolean)isLeafWithId:(id)vertex;

- (jboolean)isNeighborWithId:(id)v1
                      withId:(id)v2;

- (jboolean)isPredecessorWithId:(id)v1
                         withId:(id)v2;

- (jboolean)isRootWithId:(id)vertex;

- (jboolean)isSourceWithId:(id)vertex
                    withId:(id)edge;

- (jboolean)isSuccessorWithId:(id)v1
                       withId:(id)v2;

- (EduUciIcsJungGraphOrderedKAryTree *)newInstance OBJC_METHOD_FAMILY_NONE;

- (jint)outDegreeWithId:(id)vertex;

- (jboolean)removeEdgeWithId:(id)edge;

- (jboolean)removeVertexWithId:(id)vertex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungGraphOrderedKAryTree)

J2OBJC_FIELD_SETTER(EduUciIcsJungGraphOrderedKAryTree, edge_vpairs_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduUciIcsJungGraphOrderedKAryTree, vertex_data_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduUciIcsJungGraphOrderedKAryTree, root_, id)

FOUNDATION_EXPORT id<OrgApacheCommonsCollections15Factory> EduUciIcsJungGraphOrderedKAryTree_getFactoryWithInt_(jint order);

FOUNDATION_EXPORT void EduUciIcsJungGraphOrderedKAryTree_initWithInt_(EduUciIcsJungGraphOrderedKAryTree *self, jint order);

FOUNDATION_EXPORT EduUciIcsJungGraphOrderedKAryTree *new_EduUciIcsJungGraphOrderedKAryTree_initWithInt_(jint order) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungGraphOrderedKAryTree)

@interface EduUciIcsJungGraphOrderedKAryTree_VertexData : NSObject {
 @public
  id<JavaUtilList> child_edges_;
  id parent_edge_;
  jint depth_;
}

#pragma mark Protected

- (instancetype)initWithEduUciIcsJungGraphOrderedKAryTree:(EduUciIcsJungGraphOrderedKAryTree *)outer$
                                                   withId:(id)parent_edge
                                                  withInt:(jint)depth;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungGraphOrderedKAryTree_VertexData)

J2OBJC_FIELD_SETTER(EduUciIcsJungGraphOrderedKAryTree_VertexData, child_edges_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduUciIcsJungGraphOrderedKAryTree_VertexData, parent_edge_, id)

FOUNDATION_EXPORT void EduUciIcsJungGraphOrderedKAryTree_VertexData_initWithEduUciIcsJungGraphOrderedKAryTree_withId_withInt_(EduUciIcsJungGraphOrderedKAryTree_VertexData *self, EduUciIcsJungGraphOrderedKAryTree *outer$, id parent_edge, jint depth);

FOUNDATION_EXPORT EduUciIcsJungGraphOrderedKAryTree_VertexData *new_EduUciIcsJungGraphOrderedKAryTree_VertexData_initWithEduUciIcsJungGraphOrderedKAryTree_withId_withInt_(EduUciIcsJungGraphOrderedKAryTree *outer$, id parent_edge, jint depth) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungGraphOrderedKAryTree_VertexData)

#endif // _EduUciIcsJungGraphOrderedKAryTree_H_
