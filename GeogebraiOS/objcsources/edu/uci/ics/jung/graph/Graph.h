//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/graph/Graph.java
//

#ifndef _EduUciIcsJungGraphGraph_H_
#define _EduUciIcsJungGraphGraph_H_

#include "J2ObjC_header.h"
#include "edu/uci/ics/jung/graph/Hypergraph.h"

@class EduUciIcsJungGraphUtilEdgeTypeEnum;
@class EduUciIcsJungGraphUtilPair;
@protocol JavaUtilCollection;

@protocol EduUciIcsJungGraphGraph < EduUciIcsJungGraphHypergraph, NSObject, JavaObject >

- (id<JavaUtilCollection>)getInEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getOutEdgesWithId:(id)vertex;

- (id<JavaUtilCollection>)getPredecessorsWithId:(id)vertex;

- (id<JavaUtilCollection>)getSuccessorsWithId:(id)vertex;

- (jint)inDegreeWithId:(id)vertex;

- (jint)outDegreeWithId:(id)vertex;

- (jboolean)isPredecessorWithId:(id)v1
                         withId:(id)v2;

- (jboolean)isSuccessorWithId:(id)v1
                       withId:(id)v2;

- (jint)getPredecessorCountWithId:(id)vertex;

- (jint)getSuccessorCountWithId:(id)vertex;

- (id)getSourceWithId:(id)directed_edge;

- (id)getDestWithId:(id)directed_edge;

- (jboolean)isSourceWithId:(id)vertex
                    withId:(id)edge;

- (jboolean)isDestWithId:(id)vertex
                  withId:(id)edge;

- (jboolean)addEdgeWithId:(id)e
                   withId:(id)v1
                   withId:(id)v2;

- (jboolean)addEdgeWithId:(id)e
                   withId:(id)v1
                   withId:(id)v2
withEduUciIcsJungGraphUtilEdgeTypeEnum:(EduUciIcsJungGraphUtilEdgeTypeEnum *)edgeType;

- (EduUciIcsJungGraphUtilPair *)getEndpointsWithId:(id)edge;

- (id)getOppositeWithId:(id)vertex
                 withId:(id)edge;

- (id<EduUciIcsJungGraphGraph>)newInstance OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungGraphGraph)

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungGraphGraph)

#endif // _EduUciIcsJungGraphGraph_H_
