//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.h"
#include "edu/uci/ics/jung/algorithms/scoring/VoltageScorer.h"
#include "edu/uci/ics/jung/algorithms/scoring/util/UniformDegreeWeight.h"
#include "edu/uci/ics/jung/graph/Hypergraph.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/Transformer.h"

@implementation EduUciIcsJungAlgorithmsScoringVoltageScorer

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
        withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)edge_weights
                                     withJavaUtilMap:(id<JavaUtilMap>)source_voltages
                              withJavaUtilCollection:(id<JavaUtilCollection>)sinks {
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilMap_withJavaUtilCollection_(self, g, edge_weights, source_voltages, sinks);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
        withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)edge_weights
                              withJavaUtilCollection:(id<JavaUtilCollection>)sources
                              withJavaUtilCollection:(id<JavaUtilCollection>)sinks {
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_withJavaUtilCollection_(self, g, edge_weights, sources, sinks);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
                              withJavaUtilCollection:(id<JavaUtilCollection>)sources
                              withJavaUtilCollection:(id<JavaUtilCollection>)sinks {
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilCollection_withJavaUtilCollection_(self, g, sources, sinks);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
                                     withJavaUtilMap:(id<JavaUtilMap>)source_voltages
                              withJavaUtilCollection:(id<JavaUtilCollection>)sinks {
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilMap_withJavaUtilCollection_(self, g, source_voltages, sinks);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
        withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)edge_weights
                                              withId:(id)source
                                              withId:(id)sink {
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withId_withId_(self, g, edge_weights, source, sink);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
                                              withId:(id)source
                                              withId:(id)sink {
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withId_withId_(self, g, source, sink);
  return self;
}

- (void)initialize__ {
  [super initialize__];
  if ([((id<JavaUtilMap>) nil_chk(source_voltages_)) isEmpty] || [((id<JavaUtilCollection>) nil_chk(sinks_)) isEmpty]) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Both sources and sinks (grounds) must be defined");
  if ([source_voltages_ size] + [((id<JavaUtilCollection>) nil_chk(sinks_)) size] > [((id<EduUciIcsJungGraphHypergraph>) nil_chk(graph_)) getVertexCount]) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Source/sink sets overlap, or contain vertices not in graph");
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([source_voltages_ entrySet])) {
    id v = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if ([sinks_ containsWithId:v]) @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"Vertex ", v, @" is incorrectly specified as both source and sink"));
    jdouble value = [((NSNumber *) nil_chk([entry_ getValue])) doubleValue];
    if (value <= 0) @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"Source vertex ", v, @" has negative voltage"));
  }
  for (id __strong v in nil_chk([graph_ getVertices])) {
    if ([source_voltages_ containsKeyWithId:v]) [self setOutputValueWithId:v withId:JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk([source_voltages_ getWithId:v])) doubleValue])];
    else [self setOutputValueWithId:v withId:JavaLangDouble_valueOfWithDouble_(0.0)];
  }
}

- (jdouble)updateWithId:(id)v {
  NSNumber *source_volts = [((id<JavaUtilMap>) nil_chk(source_voltages_)) getWithId:v];
  if (source_volts != nil) {
    [self setOutputValueWithId:v withId:JavaLangDouble_valueOfWithDouble_([source_volts doubleValue])];
    return 0.0;
  }
  if ([((id<JavaUtilCollection>) nil_chk(sinks_)) containsWithId:v]) {
    [self setOutputValueWithId:v withId:JavaLangDouble_valueOfWithDouble_(0.0)];
    return 0.0;
  }
  id<JavaUtilCollection> edges = [((id<EduUciIcsJungGraphHypergraph>) nil_chk(graph_)) getInEdgesWithId:v];
  jdouble voltage_sum = 0;
  jdouble weight_sum = 0;
  for (id __strong e in nil_chk(edges)) {
    jint incident_count = [self getAdjustedIncidentCountWithId:e];
    for (id __strong w in nil_chk([graph_ getIncidentVerticesWithId:e])) {
      if (![nil_chk(w) isEqual:v] || hyperedges_are_self_loops_) {
        jdouble weight = [((NSNumber *) nil_chk([self getEdgeWeightWithId:w withId:e])) doubleValue] / incident_count;
        voltage_sum += [((JavaLangDouble *) nil_chk([self getCurrentValueWithId:w])) doubleValue] * weight;
        weight_sum += weight;
      }
    }
  }
  if (voltage_sum == 0 || weight_sum == 0) {
    [self setOutputValueWithId:v withId:JavaLangDouble_valueOfWithDouble_(0.0)];
    return [((JavaLangDouble *) nil_chk([self getCurrentValueWithId:v])) doubleValue];
  }
  [self setOutputValueWithId:v withId:JavaLangDouble_valueOfWithDouble_(voltage_sum / weight_sum)];
  return JavaLangMath_absWithDouble_([((JavaLangDouble *) nil_chk([self getCurrentValueWithId:v])) doubleValue] - voltage_sum / weight_sum);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Transformer:withJavaUtilMap:withJavaUtilCollection:", "VoltageScorer", NULL, 0x1, NULL, NULL },
    { "initWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Transformer:withJavaUtilCollection:withJavaUtilCollection:", "VoltageScorer", NULL, 0x1, NULL, NULL },
    { "initWithEduUciIcsJungGraphHypergraph:withJavaUtilCollection:withJavaUtilCollection:", "VoltageScorer", NULL, 0x1, NULL, NULL },
    { "initWithEduUciIcsJungGraphHypergraph:withJavaUtilMap:withJavaUtilCollection:", "VoltageScorer", NULL, 0x1, NULL, NULL },
    { "initWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Transformer:withId:withId:", "VoltageScorer", NULL, 0x1, NULL, "(Ledu/uci/ics/jung/graph/Hypergraph<TV;TE;>;Lorg/apache/commons/collections15/Transformer<TE;+Ljava/lang/Number;>;TV;TV;)V" },
    { "initWithEduUciIcsJungGraphHypergraph:withId:withId:", "VoltageScorer", NULL, 0x1, NULL, "(Ledu/uci/ics/jung/graph/Hypergraph<TV;TE;>;TV;TV;)V" },
    { "initialize__", "initialize", "V", 0x1, NULL, NULL },
    { "updateWithId:", "update", "D", 0x1, NULL, "(TV;)D" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "source_voltages_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;+Ljava/lang/Number;>;",  },
    { "sinks_", NULL, 0x4, "Ljava.util.Collection;", NULL, "Ljava/util/Collection<TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TV;", "TE;", "Ljava.lang.Double;"};
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsScoringVoltageScorer = { 2, "VoltageScorer", "edu.uci.ics.jung.algorithms.scoring", NULL, 0x1, 8, methods, 2, fields, 3, superclass_type_args, 0, NULL, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>Ledu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer<TV;TE;Ljava/lang/Double;>;Ledu/uci/ics/jung/algorithms/scoring/VertexScorer<TV;Ljava/lang/Double;>;" };
  return &_EduUciIcsJungAlgorithmsScoringVoltageScorer;
}

@end

void EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilMap_withJavaUtilCollection_(EduUciIcsJungAlgorithmsScoringVoltageScorer *self, id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> edge_weights, id<JavaUtilMap> source_voltages, id<JavaUtilCollection> sinks) {
  (void) EduUciIcsJungAlgorithmsScoringAbstractIterativeScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_(self, g, edge_weights);
  self->source_voltages_ = source_voltages;
  self->sinks_ = sinks;
  [self initialize__];
}

EduUciIcsJungAlgorithmsScoringVoltageScorer *new_EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilMap_withJavaUtilCollection_(id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> edge_weights, id<JavaUtilMap> source_voltages, id<JavaUtilCollection> sinks) {
  EduUciIcsJungAlgorithmsScoringVoltageScorer *self = [EduUciIcsJungAlgorithmsScoringVoltageScorer alloc];
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilMap_withJavaUtilCollection_(self, g, edge_weights, source_voltages, sinks);
  return self;
}

void EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_withJavaUtilCollection_(EduUciIcsJungAlgorithmsScoringVoltageScorer *self, id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> edge_weights, id<JavaUtilCollection> sources, id<JavaUtilCollection> sinks) {
  (void) EduUciIcsJungAlgorithmsScoringAbstractIterativeScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_(self, g, edge_weights);
  id<JavaUtilMap> unit_voltages = new_JavaUtilHashMap_init();
  for (id __strong v in nil_chk(sources)) (void) [unit_voltages putWithId:v withId:new_JavaLangDouble_initWithDouble_(1.0)];
  self->source_voltages_ = unit_voltages;
  self->sinks_ = sinks;
  [self initialize__];
}

EduUciIcsJungAlgorithmsScoringVoltageScorer *new_EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_withJavaUtilCollection_(id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> edge_weights, id<JavaUtilCollection> sources, id<JavaUtilCollection> sinks) {
  EduUciIcsJungAlgorithmsScoringVoltageScorer *self = [EduUciIcsJungAlgorithmsScoringVoltageScorer alloc];
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_withJavaUtilCollection_(self, g, edge_weights, sources, sinks);
  return self;
}

void EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilCollection_withJavaUtilCollection_(EduUciIcsJungAlgorithmsScoringVoltageScorer *self, id<EduUciIcsJungGraphHypergraph> g, id<JavaUtilCollection> sources, id<JavaUtilCollection> sinks) {
  (void) EduUciIcsJungAlgorithmsScoringAbstractIterativeScorer_initWithEduUciIcsJungGraphHypergraph_(self, g);
  id<JavaUtilMap> unit_voltages = new_JavaUtilHashMap_init();
  for (id __strong v in nil_chk(sources)) (void) [unit_voltages putWithId:v withId:new_JavaLangDouble_initWithDouble_(1.0)];
  self->source_voltages_ = unit_voltages;
  self->sinks_ = sinks;
  [self initialize__];
}

EduUciIcsJungAlgorithmsScoringVoltageScorer *new_EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilCollection_withJavaUtilCollection_(id<EduUciIcsJungGraphHypergraph> g, id<JavaUtilCollection> sources, id<JavaUtilCollection> sinks) {
  EduUciIcsJungAlgorithmsScoringVoltageScorer *self = [EduUciIcsJungAlgorithmsScoringVoltageScorer alloc];
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilCollection_withJavaUtilCollection_(self, g, sources, sinks);
  return self;
}

void EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilMap_withJavaUtilCollection_(EduUciIcsJungAlgorithmsScoringVoltageScorer *self, id<EduUciIcsJungGraphHypergraph> g, id<JavaUtilMap> source_voltages, id<JavaUtilCollection> sinks) {
  (void) EduUciIcsJungAlgorithmsScoringAbstractIterativeScorer_initWithEduUciIcsJungGraphHypergraph_(self, g);
  self->source_voltages_ = source_voltages;
  self->sinks_ = sinks;
  self->edge_weights_ = new_EduUciIcsJungAlgorithmsScoringUtilUniformDegreeWeight_initWithEduUciIcsJungGraphHypergraph_(g);
  [self initialize__];
}

EduUciIcsJungAlgorithmsScoringVoltageScorer *new_EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilMap_withJavaUtilCollection_(id<EduUciIcsJungGraphHypergraph> g, id<JavaUtilMap> source_voltages, id<JavaUtilCollection> sinks) {
  EduUciIcsJungAlgorithmsScoringVoltageScorer *self = [EduUciIcsJungAlgorithmsScoringVoltageScorer alloc];
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilMap_withJavaUtilCollection_(self, g, source_voltages, sinks);
  return self;
}

void EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withId_withId_(EduUciIcsJungAlgorithmsScoringVoltageScorer *self, id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> edge_weights, id source, id sink) {
  (void) EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withJavaUtilMap_withJavaUtilCollection_(self, g, edge_weights, JavaUtilCollections_singletonMapWithId_withId_(source, JavaLangDouble_valueOfWithDouble_(1.0)), JavaUtilCollections_singletonListWithId_(sink));
  [self initialize__];
}

EduUciIcsJungAlgorithmsScoringVoltageScorer *new_EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withId_withId_(id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> edge_weights, id source, id sink) {
  EduUciIcsJungAlgorithmsScoringVoltageScorer *self = [EduUciIcsJungAlgorithmsScoringVoltageScorer alloc];
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withId_withId_(self, g, edge_weights, source, sink);
  return self;
}

void EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withId_withId_(EduUciIcsJungAlgorithmsScoringVoltageScorer *self, id<EduUciIcsJungGraphHypergraph> g, id source, id sink) {
  (void) EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withJavaUtilMap_withJavaUtilCollection_(self, g, JavaUtilCollections_singletonMapWithId_withId_(source, JavaLangDouble_valueOfWithDouble_(1.0)), JavaUtilCollections_singletonListWithId_(sink));
  [self initialize__];
}

EduUciIcsJungAlgorithmsScoringVoltageScorer *new_EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withId_withId_(id<EduUciIcsJungGraphHypergraph> g, id source, id sink) {
  EduUciIcsJungAlgorithmsScoringVoltageScorer *self = [EduUciIcsJungAlgorithmsScoringVoltageScorer alloc];
  EduUciIcsJungAlgorithmsScoringVoltageScorer_initWithEduUciIcsJungGraphHypergraph_withId_withId_(self, g, source, sink);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsScoringVoltageScorer)
