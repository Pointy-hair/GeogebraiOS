//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java
//

#ifndef _EduUciIcsJungAlgorithmsBlockmodelVertexPartition_H_
#define _EduUciIcsJungAlgorithmsBlockmodelVertexPartition_H_

#include "J2ObjC_header.h"

@protocol EduUciIcsJungGraphGraph;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

@interface EduUciIcsJungAlgorithmsBlockmodelVertexPartition : NSObject

#pragma mark Public

- (instancetype)initWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)g
                         withJavaUtilCollection:(id<JavaUtilCollection>)vertex_sets;

- (instancetype)initWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)g
                                withJavaUtilMap:(id<JavaUtilMap>)partition_map;

- (instancetype)initWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)g
                                withJavaUtilMap:(id<JavaUtilMap>)partition_map
                         withJavaUtilCollection:(id<JavaUtilCollection>)vertex_sets;

- (id<EduUciIcsJungGraphGraph>)getGraph;

- (id<JavaUtilCollection>)getVertexPartitions;

- (id<JavaUtilMap>)getVertexToPartitionMap;

- (jint)numPartitions;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungAlgorithmsBlockmodelVertexPartition)

FOUNDATION_EXPORT void EduUciIcsJungAlgorithmsBlockmodelVertexPartition_initWithEduUciIcsJungGraphGraph_withJavaUtilMap_(EduUciIcsJungAlgorithmsBlockmodelVertexPartition *self, id<EduUciIcsJungGraphGraph> g, id<JavaUtilMap> partition_map);

FOUNDATION_EXPORT EduUciIcsJungAlgorithmsBlockmodelVertexPartition *new_EduUciIcsJungAlgorithmsBlockmodelVertexPartition_initWithEduUciIcsJungGraphGraph_withJavaUtilMap_(id<EduUciIcsJungGraphGraph> g, id<JavaUtilMap> partition_map) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void EduUciIcsJungAlgorithmsBlockmodelVertexPartition_initWithEduUciIcsJungGraphGraph_withJavaUtilMap_withJavaUtilCollection_(EduUciIcsJungAlgorithmsBlockmodelVertexPartition *self, id<EduUciIcsJungGraphGraph> g, id<JavaUtilMap> partition_map, id<JavaUtilCollection> vertex_sets);

FOUNDATION_EXPORT EduUciIcsJungAlgorithmsBlockmodelVertexPartition *new_EduUciIcsJungAlgorithmsBlockmodelVertexPartition_initWithEduUciIcsJungGraphGraph_withJavaUtilMap_withJavaUtilCollection_(id<EduUciIcsJungGraphGraph> g, id<JavaUtilMap> partition_map, id<JavaUtilCollection> vertex_sets) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void EduUciIcsJungAlgorithmsBlockmodelVertexPartition_initWithEduUciIcsJungGraphGraph_withJavaUtilCollection_(EduUciIcsJungAlgorithmsBlockmodelVertexPartition *self, id<EduUciIcsJungGraphGraph> g, id<JavaUtilCollection> vertex_sets);

FOUNDATION_EXPORT EduUciIcsJungAlgorithmsBlockmodelVertexPartition *new_EduUciIcsJungAlgorithmsBlockmodelVertexPartition_initWithEduUciIcsJungGraphGraph_withJavaUtilCollection_(id<EduUciIcsJungGraphGraph> g, id<JavaUtilCollection> vertex_sets) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungAlgorithmsBlockmodelVertexPartition)

#endif // _EduUciIcsJungAlgorithmsBlockmodelVertexPartition_H_
