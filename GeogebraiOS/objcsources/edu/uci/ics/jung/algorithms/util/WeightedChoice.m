//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/algorithms/util/WeightedChoice.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/util/WeightedChoice.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Queue.h"
#include "java/util/Random.h"
#include "java/util/Set.h"

@interface EduUciIcsJungAlgorithmsUtilWeightedChoice () {
 @public
  id<JavaUtilList> item_pairs_;
  JavaUtilRandom *random_;
}

- (void)enqueueItemWithId:(id)key
               withDouble:(jdouble)value
               withDouble:(jdouble)threshold
        withJavaUtilQueue:(id<JavaUtilQueue>)light_weights
        withJavaUtilQueue:(id<JavaUtilQueue>)heavy_weights;

@end

J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilWeightedChoice, item_pairs_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilWeightedChoice, random_, JavaUtilRandom *)

__attribute__((unused)) static void EduUciIcsJungAlgorithmsUtilWeightedChoice_enqueueItemWithId_withDouble_withDouble_withJavaUtilQueue_withJavaUtilQueue_(EduUciIcsJungAlgorithmsUtilWeightedChoice *self, id key, jdouble value, jdouble threshold, id<JavaUtilQueue> light_weights, id<JavaUtilQueue> heavy_weights);

@interface EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair : NSObject {
 @public
  id light_;
  id heavy_;
  jdouble weight_;
}

- (instancetype)initWithEduUciIcsJungAlgorithmsUtilWeightedChoice:(EduUciIcsJungAlgorithmsUtilWeightedChoice *)outer$
                                                           withId:(id)light
                                                           withId:(id)heavy
                                                       withDouble:(jdouble)weight;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair)

J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair, light_, id)
J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair, heavy_, id)

__attribute__((unused)) static void EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *self, EduUciIcsJungAlgorithmsUtilWeightedChoice *outer$, id light, id heavy, jdouble weight);

__attribute__((unused)) static EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *new_EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(EduUciIcsJungAlgorithmsUtilWeightedChoice *outer$, id light, id heavy, jdouble weight) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair)

@implementation EduUciIcsJungAlgorithmsUtilWeightedChoice

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)item_weights {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_(self, item_weights);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)item_weights
                         withDouble:(jdouble)threshold {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withDouble_(self, item_weights, threshold);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)item_weights
                 withJavaUtilRandom:(JavaUtilRandom *)random {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_(self, item_weights, random);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)item_weights
                 withJavaUtilRandom:(JavaUtilRandom *)random
                         withDouble:(jdouble)threshold {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_withDouble_(self, item_weights, random, threshold);
  return self;
}

- (void)enqueueItemWithId:(id)key
               withDouble:(jdouble)value
               withDouble:(jdouble)threshold
        withJavaUtilQueue:(id<JavaUtilQueue>)light_weights
        withJavaUtilQueue:(id<JavaUtilQueue>)heavy_weights {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_enqueueItemWithId_withDouble_withDouble_withJavaUtilQueue_withJavaUtilQueue_(self, key, value, threshold, light_weights, heavy_weights);
}

- (void)setRandomSeedWithLong:(jlong)seed {
  [((JavaUtilRandom *) nil_chk(self->random_)) setSeedWithLong:seed];
}

- (id)nextItem {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *item_pair = [item_pairs_ getWithInt:[((JavaUtilRandom *) nil_chk(random_)) nextIntWithInt:[((id<JavaUtilList>) nil_chk(item_pairs_)) size]]];
  if ([random_ nextDouble] < ((EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *) nil_chk(item_pair))->weight_) return item_pair->light_;
  return item_pair->heavy_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:", "WeightedChoice", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:withDouble:", "WeightedChoice", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:withJavaUtilRandom:", "WeightedChoice", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:withJavaUtilRandom:withDouble:", "WeightedChoice", NULL, 0x1, NULL, NULL },
    { "enqueueItemWithId:withDouble:withDouble:withJavaUtilQueue:withJavaUtilQueue:", "enqueueItem", "V", 0x2, NULL, "(TT;DDLjava/util/Queue<Ledu/uci/ics/jung/algorithms/util/WeightedChoice$ItemPair;>;Ljava/util/Queue<Ledu/uci/ics/jung/algorithms/util/WeightedChoice$ItemPair;>;)V" },
    { "setRandomSeedWithLong:", "setRandomSeed", "V", 0x1, NULL, NULL },
    { "nextItem", NULL, "TT;", 0x1, NULL, "()TT;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "item_pairs_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Ledu/uci/ics/jung/algorithms/util/WeightedChoice$ItemPair;>;",  },
    { "random_", NULL, 0x2, "Ljava.util.Random;", NULL, NULL,  },
    { "DEFAULT_THRESHOLD_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = EduUciIcsJungAlgorithmsUtilWeightedChoice_DEFAULT_THRESHOLD },
  };
  static const char *inner_classes[] = {"Ledu.uci.ics.jung.algorithms.util.WeightedChoice$ItemPair;"};
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsUtilWeightedChoice = { 2, "WeightedChoice", "edu.uci.ics.jung.algorithms.util", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_EduUciIcsJungAlgorithmsUtilWeightedChoice;
}

@end

void EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_(EduUciIcsJungAlgorithmsUtilWeightedChoice *self, id<JavaUtilMap> item_weights) {
  (void) EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_withDouble_(self, item_weights, new_JavaUtilRandom_init(), EduUciIcsJungAlgorithmsUtilWeightedChoice_DEFAULT_THRESHOLD);
}

EduUciIcsJungAlgorithmsUtilWeightedChoice *new_EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_(id<JavaUtilMap> item_weights) {
  EduUciIcsJungAlgorithmsUtilWeightedChoice *self = [EduUciIcsJungAlgorithmsUtilWeightedChoice alloc];
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_(self, item_weights);
  return self;
}

void EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withDouble_(EduUciIcsJungAlgorithmsUtilWeightedChoice *self, id<JavaUtilMap> item_weights, jdouble threshold) {
  (void) EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_withDouble_(self, item_weights, new_JavaUtilRandom_init(), threshold);
}

EduUciIcsJungAlgorithmsUtilWeightedChoice *new_EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withDouble_(id<JavaUtilMap> item_weights, jdouble threshold) {
  EduUciIcsJungAlgorithmsUtilWeightedChoice *self = [EduUciIcsJungAlgorithmsUtilWeightedChoice alloc];
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withDouble_(self, item_weights, threshold);
  return self;
}

void EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_(EduUciIcsJungAlgorithmsUtilWeightedChoice *self, id<JavaUtilMap> item_weights, JavaUtilRandom *random) {
  (void) EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_withDouble_(self, item_weights, random, EduUciIcsJungAlgorithmsUtilWeightedChoice_DEFAULT_THRESHOLD);
}

EduUciIcsJungAlgorithmsUtilWeightedChoice *new_EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_(id<JavaUtilMap> item_weights, JavaUtilRandom *random) {
  EduUciIcsJungAlgorithmsUtilWeightedChoice *self = [EduUciIcsJungAlgorithmsUtilWeightedChoice alloc];
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_(self, item_weights, random);
  return self;
}

void EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_withDouble_(EduUciIcsJungAlgorithmsUtilWeightedChoice *self, id<JavaUtilMap> item_weights, JavaUtilRandom *random, jdouble threshold) {
  (void) NSObject_init(self);
  if ([((id<JavaUtilMap>) nil_chk(item_weights)) isEmpty]) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Item weights must be non-empty");
  jint item_count = [item_weights size];
  self->item_pairs_ = new_JavaUtilArrayList_initWithInt_(item_count);
  jdouble sum = 0;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([item_weights entrySet])) {
    jdouble value = [((NSNumber *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue])) doubleValue];
    if (value <= 0) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Weights must be > 0");
    sum += value;
  }
  jdouble bucket_weight = 1.0 / [item_weights size];
  id<JavaUtilQueue> light_weights = new_JavaUtilLinkedList_init();
  id<JavaUtilQueue> heavy_weights = new_JavaUtilLinkedList_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([item_weights entrySet])) {
    jdouble value = [((NSNumber *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue])) doubleValue] / sum;
    EduUciIcsJungAlgorithmsUtilWeightedChoice_enqueueItemWithId_withDouble_withDouble_withJavaUtilQueue_withJavaUtilQueue_(self, [entry_ getKey], value, bucket_weight, light_weights, heavy_weights);
  }
  while (![heavy_weights isEmpty] || ![light_weights isEmpty]) {
    EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *heavy_item = [heavy_weights poll];
    EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *light_item = [light_weights poll];
    jdouble light_weight = 0;
    id light = nil;
    id heavy = nil;
    if (light_item != nil) {
      light_weight = light_item->weight_;
      light = light_item->light_;
    }
    if (heavy_item != nil) {
      heavy = heavy_item->heavy_;
      jdouble new_weight = heavy_item->weight_ - (bucket_weight - light_weight);
      if (new_weight > threshold) EduUciIcsJungAlgorithmsUtilWeightedChoice_enqueueItemWithId_withDouble_withDouble_withJavaUtilQueue_withJavaUtilQueue_(self, heavy, new_weight, bucket_weight, light_weights, heavy_weights);
    }
    light_weight *= item_count;
    [self->item_pairs_ addWithId:new_EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(self, light, heavy, light_weight)];
  }
  self->random_ = random;
}

EduUciIcsJungAlgorithmsUtilWeightedChoice *new_EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_withDouble_(id<JavaUtilMap> item_weights, JavaUtilRandom *random, jdouble threshold) {
  EduUciIcsJungAlgorithmsUtilWeightedChoice *self = [EduUciIcsJungAlgorithmsUtilWeightedChoice alloc];
  EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_withDouble_(self, item_weights, random, threshold);
  return self;
}

void EduUciIcsJungAlgorithmsUtilWeightedChoice_enqueueItemWithId_withDouble_withDouble_withJavaUtilQueue_withJavaUtilQueue_(EduUciIcsJungAlgorithmsUtilWeightedChoice *self, id key, jdouble value, jdouble threshold, id<JavaUtilQueue> light_weights, id<JavaUtilQueue> heavy_weights) {
  if (value < threshold) [((id<JavaUtilQueue>) nil_chk(light_weights)) offerWithId:new_EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(self, key, nil, value)];
  else [((id<JavaUtilQueue>) nil_chk(heavy_weights)) offerWithId:new_EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(self, nil, key, value)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsUtilWeightedChoice)

@implementation EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair

- (instancetype)initWithEduUciIcsJungAlgorithmsUtilWeightedChoice:(EduUciIcsJungAlgorithmsUtilWeightedChoice *)outer$
                                                           withId:(id)light
                                                           withId:(id)heavy
                                                       withDouble:(jdouble)weight {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(self, outer$, light, heavy, weight);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@$@$DC", @"[L:", light_, @", H:", heavy_, @", ", weight_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithEduUciIcsJungAlgorithmsUtilWeightedChoice:withId:withId:withDouble:", "ItemPair", NULL, 0x2, NULL, "(Ledu/uci/ics/jung/algorithms/util/WeightedChoice;TT;TT;D)V" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "light_", NULL, 0x0, "TT;", NULL, "TT;",  },
    { "heavy_", NULL, 0x0, "TT;", NULL, "TT;",  },
    { "weight_", NULL, 0x0, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair = { 2, "ItemPair", "edu.uci.ics.jung.algorithms.util", "WeightedChoice", 0x2, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair;
}

@end

void EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *self, EduUciIcsJungAlgorithmsUtilWeightedChoice *outer$, id light, id heavy, jdouble weight) {
  (void) NSObject_init(self);
  self->light_ = light;
  self->heavy_ = heavy;
  self->weight_ = weight;
}

EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *new_EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(EduUciIcsJungAlgorithmsUtilWeightedChoice *outer$, id light, id heavy, jdouble weight) {
  EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair *self = [EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair alloc];
  EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair_initWithEduUciIcsJungAlgorithmsUtilWeightedChoice_withId_withId_withDouble_(self, outer$, light, heavy, weight);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsUtilWeightedChoice_ItemPair)
