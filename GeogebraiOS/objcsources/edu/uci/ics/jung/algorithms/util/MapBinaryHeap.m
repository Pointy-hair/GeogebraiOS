//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/util/MapBinaryHeap.h"
#include "java/lang/Comparable.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/AbstractCollection.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Vector.h"
#include "org/apache/commons/collections15/IteratorUtils.h"

#define EduUciIcsJungAlgorithmsUtilMapBinaryHeap_TOP 0

@interface EduUciIcsJungAlgorithmsUtilMapBinaryHeap () {
 @public
  JavaUtilVector *heap_;
  id<JavaUtilMap> object_indices_;
  id<JavaUtilComparator> comp_;
}

- (void)initialize__WithJavaUtilComparator:(id<JavaUtilComparator>)comp OBJC_METHOD_FAMILY_NONE;

- (void)percolateDownWithInt:(jint)cur;

- (jint)percolateUpWithInt:(jint)cur
                    withId:(id)o;

- (jint)lChildWithInt:(jint)i;

- (jint)rChildWithInt:(jint)i;

- (jint)parentWithInt:(jint)i;

- (void)swapWithInt:(jint)i
            withInt:(jint)j;

@end

J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilMapBinaryHeap, heap_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilMapBinaryHeap, object_indices_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilMapBinaryHeap, comp_, id<JavaUtilComparator>)

J2OBJC_STATIC_FIELD_GETTER(EduUciIcsJungAlgorithmsUtilMapBinaryHeap, TOP, jint)

__attribute__((unused)) static void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initialize__WithJavaUtilComparator_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, id<JavaUtilComparator> comp);

__attribute__((unused)) static void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateDownWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint cur);

__attribute__((unused)) static jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateUpWithInt_withId_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint cur, id o);

__attribute__((unused)) static jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_lChildWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i);

__attribute__((unused)) static jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_rChildWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i);

__attribute__((unused)) static jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_parentWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i);

__attribute__((unused)) static void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_swapWithInt_withInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i, jint j);

@interface EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id)arg0
               withId:(id)arg1;

- (instancetype)initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap:(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator)

__attribute__((unused)) static void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator_initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator *self, EduUciIcsJungAlgorithmsUtilMapBinaryHeap *outer$);

__attribute__((unused)) static EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator *new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator_initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator)

@implementation EduUciIcsJungAlgorithmsUtilMapBinaryHeap

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comp {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilComparator_(self, comp);
  return self;
}

- (instancetype)init {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_init(self);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_(self, c);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c
                    withJavaUtilComparator:(id<JavaUtilComparator>)comp {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_withJavaUtilComparator_(self, c, comp);
  return self;
}

- (void)initialize__WithJavaUtilComparator:(id<JavaUtilComparator>)comp {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initialize__WithJavaUtilComparator_(self, comp);
}

- (void)clear {
  [((id<JavaUtilMap>) nil_chk(object_indices_)) clear];
  [((JavaUtilVector *) nil_chk(heap_)) clear];
}

- (jboolean)addWithId:(id)o {
  jint i = [((JavaUtilVector *) nil_chk(heap_)) size];
  [heap_ setSizeWithInt:i + 1];
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateUpWithInt_withId_(self, i, o);
  return YES;
}

- (jboolean)isEmpty {
  return [((JavaUtilVector *) nil_chk(heap_)) isEmpty];
}

- (id)peek {
  if ([((JavaUtilVector *) nil_chk(heap_)) size] > 0) return [heap_ elementAtWithInt:EduUciIcsJungAlgorithmsUtilMapBinaryHeap_TOP];
  else return nil;
}

- (id)pop {
  return [self remove];
}

- (jint)size {
  return [((JavaUtilVector *) nil_chk(heap_)) size];
}

- (void)updateWithId:(id)o {
  jint cur = [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(object_indices_)) getWithId:o])) intValue];
  jint new_idx = EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateUpWithInt_withId_(self, cur, o);
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateDownWithInt_(self, new_idx);
}

- (jboolean)containsWithId:(id)o {
  return [((id<JavaUtilMap>) nil_chk(object_indices_)) containsKeyWithId:o];
}

- (void)percolateDownWithInt:(jint)cur {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateDownWithInt_(self, cur);
}

- (jint)percolateUpWithInt:(jint)cur
                    withId:(id)o {
  return EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateUpWithInt_withId_(self, cur, o);
}

- (jint)lChildWithInt:(jint)i {
  return EduUciIcsJungAlgorithmsUtilMapBinaryHeap_lChildWithInt_(self, i);
}

- (jint)rChildWithInt:(jint)i {
  return EduUciIcsJungAlgorithmsUtilMapBinaryHeap_rChildWithInt_(self, i);
}

- (jint)parentWithInt:(jint)i {
  return EduUciIcsJungAlgorithmsUtilMapBinaryHeap_parentWithInt_(self, i);
}

- (void)swapWithInt:(jint)i
            withInt:(jint)j {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_swapWithInt_withInt_(self, i, j);
}

- (id<JavaUtilIterator>)iterator {
  return OrgApacheCommonsCollections15IteratorUtils_unmodifiableIteratorWithJavaUtilIterator_([((JavaUtilVector *) nil_chk(heap_)) iterator]);
}

- (jboolean)removeWithId:(id)o {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)element {
  id top = [self peek];
  if (top == nil) @throw new_JavaUtilNoSuchElementException_init();
  return top;
}

- (jboolean)offerWithId:(id)o {
  return [self addWithId:o];
}

- (id)poll {
  id top = [self peek];
  if (top != nil) {
    id bottom_elt = [((JavaUtilVector *) nil_chk(heap_)) lastElement];
    [heap_ setElementAtWithId:bottom_elt withInt:EduUciIcsJungAlgorithmsUtilMapBinaryHeap_TOP];
    (void) [((id<JavaUtilMap>) nil_chk(object_indices_)) putWithId:bottom_elt withId:new_JavaLangInteger_initWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap_TOP)];
    [heap_ setSizeWithInt:[heap_ size] - 1];
    if ([heap_ size] > 1) EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateDownWithInt_(self, EduUciIcsJungAlgorithmsUtilMapBinaryHeap_TOP);
    (void) [object_indices_ removeWithId:top];
  }
  return top;
}

- (id)remove {
  id top = [self poll];
  if (top == nil) @throw new_JavaUtilNoSuchElementException_init();
  return top;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (IOSObjectArray *)__annotations_pop {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilComparator:", "MapBinaryHeap", NULL, 0x1, NULL, NULL },
    { "init", "MapBinaryHeap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilCollection:", "MapBinaryHeap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilCollection:withJavaUtilComparator:", "MapBinaryHeap", NULL, 0x1, NULL, NULL },
    { "initialize__WithJavaUtilComparator:", "initialize", "V", 0x2, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TT;)Z" },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "peek", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "pop", NULL, "TT;", 0x1, "Ljava.util.NoSuchElementException;", "()TT;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "updateWithId:", "update", "V", 0x1, NULL, "(TT;)V" },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "percolateDownWithInt:", "percolateDown", "V", 0x2, NULL, NULL },
    { "percolateUpWithInt:withId:", "percolateUp", "I", 0x2, NULL, "(ITT;)I" },
    { "lChildWithInt:", "lChild", "I", 0x2, NULL, NULL },
    { "rChildWithInt:", "rChild", "I", 0x2, NULL, NULL },
    { "parentWithInt:", "parent", "I", 0x2, NULL, NULL },
    { "swapWithInt:withInt:", "swap", "V", 0x2, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "element", NULL, "TT;", 0x1, "Ljava.util.NoSuchElementException;", "()TT;" },
    { "offerWithId:", "offer", "Z", 0x1, NULL, "(TT;)Z" },
    { "poll", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "remove", NULL, "TT;", 0x1, NULL, "()TT;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "heap_", NULL, 0x2, "Ljava.util.Vector;", NULL, "Ljava/util/Vector<TT;>;",  },
    { "object_indices_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<TT;Ljava/lang/Integer;>;",  },
    { "comp_", NULL, 0x2, "Ljava.util.Comparator;", NULL, "Ljava/util/Comparator<TT;>;",  },
    { "TOP_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = EduUciIcsJungAlgorithmsUtilMapBinaryHeap_TOP },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const char *inner_classes[] = {"Ledu.uci.ics.jung.algorithms.util.MapBinaryHeap$ComparableComparator;"};
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsUtilMapBinaryHeap = { 2, "MapBinaryHeap", "edu.uci.ics.jung.algorithms.util", NULL, 0x1, 27, methods, 4, fields, 1, superclass_type_args, 1, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/util/AbstractCollection<TT;>;Ljava/util/Queue<TT;>;" };
  return &_EduUciIcsJungAlgorithmsUtilMapBinaryHeap;
}

@end

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilComparator_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, id<JavaUtilComparator> comp) {
  (void) JavaUtilAbstractCollection_init(self);
  self->heap_ = new_JavaUtilVector_init();
  self->object_indices_ = new_JavaUtilHashMap_init();
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initialize__WithJavaUtilComparator_(self, comp);
}

EduUciIcsJungAlgorithmsUtilMapBinaryHeap *new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilComparator_(id<JavaUtilComparator> comp) {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self = [EduUciIcsJungAlgorithmsUtilMapBinaryHeap alloc];
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilComparator_(self, comp);
  return self;
}

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_init(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self) {
  (void) JavaUtilAbstractCollection_init(self);
  self->heap_ = new_JavaUtilVector_init();
  self->object_indices_ = new_JavaUtilHashMap_init();
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initialize__WithJavaUtilComparator_(self, new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator_initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap_(self));
}

EduUciIcsJungAlgorithmsUtilMapBinaryHeap *new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_init() {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self = [EduUciIcsJungAlgorithmsUtilMapBinaryHeap alloc];
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_init(self);
  return self;
}

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, id<JavaUtilCollection> c) {
  (void) EduUciIcsJungAlgorithmsUtilMapBinaryHeap_init(self);
  [self addAllWithJavaUtilCollection:c];
}

EduUciIcsJungAlgorithmsUtilMapBinaryHeap *new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_(id<JavaUtilCollection> c) {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self = [EduUciIcsJungAlgorithmsUtilMapBinaryHeap alloc];
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_(self, c);
  return self;
}

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_withJavaUtilComparator_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, id<JavaUtilCollection> c, id<JavaUtilComparator> comp) {
  (void) EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilComparator_(self, comp);
  [self addAllWithJavaUtilCollection:c];
}

EduUciIcsJungAlgorithmsUtilMapBinaryHeap *new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_withJavaUtilComparator_(id<JavaUtilCollection> c, id<JavaUtilComparator> comp) {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self = [EduUciIcsJungAlgorithmsUtilMapBinaryHeap alloc];
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilCollection_withJavaUtilComparator_(self, c, comp);
  return self;
}

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initialize__WithJavaUtilComparator_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, id<JavaUtilComparator> comp) {
  self->comp_ = comp;
  [self clear];
}

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateDownWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint cur) {
  jint left = EduUciIcsJungAlgorithmsUtilMapBinaryHeap_lChildWithInt_(self, cur);
  jint right = EduUciIcsJungAlgorithmsUtilMapBinaryHeap_rChildWithInt_(self, cur);
  jint smallest;
  if ((left < [((JavaUtilVector *) nil_chk(self->heap_)) size]) && ([((id<JavaUtilComparator>) nil_chk(self->comp_)) compareWithId:[self->heap_ elementAtWithInt:left] withId:[self->heap_ elementAtWithInt:cur]] < 0)) {
    smallest = left;
  }
  else {
    smallest = cur;
  }
  if ((right < [self->heap_ size]) && ([((id<JavaUtilComparator>) nil_chk(self->comp_)) compareWithId:[self->heap_ elementAtWithInt:right] withId:[self->heap_ elementAtWithInt:smallest]] < 0)) {
    smallest = right;
  }
  if (cur != smallest) {
    EduUciIcsJungAlgorithmsUtilMapBinaryHeap_swapWithInt_withInt_(self, cur, smallest);
    EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateDownWithInt_(self, smallest);
  }
}

jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_percolateUpWithInt_withId_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint cur, id o) {
  jint i = cur;
  while ((i > EduUciIcsJungAlgorithmsUtilMapBinaryHeap_TOP) && ([((id<JavaUtilComparator>) nil_chk(self->comp_)) compareWithId:[((JavaUtilVector *) nil_chk(self->heap_)) elementAtWithInt:EduUciIcsJungAlgorithmsUtilMapBinaryHeap_parentWithInt_(self, i)] withId:o] > 0)) {
    id parentElt = [((JavaUtilVector *) nil_chk(self->heap_)) elementAtWithInt:EduUciIcsJungAlgorithmsUtilMapBinaryHeap_parentWithInt_(self, i)];
    [self->heap_ setElementAtWithId:parentElt withInt:i];
    (void) [((id<JavaUtilMap>) nil_chk(self->object_indices_)) putWithId:parentElt withId:new_JavaLangInteger_initWithInt_(i)];
    i = EduUciIcsJungAlgorithmsUtilMapBinaryHeap_parentWithInt_(self, i);
  }
  (void) [((id<JavaUtilMap>) nil_chk(self->object_indices_)) putWithId:o withId:new_JavaLangInteger_initWithInt_(i)];
  [((JavaUtilVector *) nil_chk(self->heap_)) setElementAtWithId:o withInt:i];
  return i;
}

jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_lChildWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i) {
  return (LShift32(i, 1)) + 1;
}

jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_rChildWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i) {
  return (LShift32(i, 1)) + 2;
}

jint EduUciIcsJungAlgorithmsUtilMapBinaryHeap_parentWithInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i) {
  return RShift32((i - 1), 1);
}

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_swapWithInt_withInt_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *self, jint i, jint j) {
  id iElt = [((JavaUtilVector *) nil_chk(self->heap_)) elementAtWithInt:i];
  id jElt = [self->heap_ elementAtWithInt:j];
  [self->heap_ setElementAtWithId:jElt withInt:i];
  (void) [((id<JavaUtilMap>) nil_chk(self->object_indices_)) putWithId:jElt withId:new_JavaLangInteger_initWithInt_(i)];
  [self->heap_ setElementAtWithId:iElt withInt:j];
  (void) [self->object_indices_ putWithId:iElt withId:new_JavaLangInteger_initWithInt_(j)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsUtilMapBinaryHeap)

@implementation EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator

- (jint)compareWithId:(id)arg0
               withId:(id)arg1 {
  if (!([JavaLangComparable_class_() isInstance:arg0]) || !([JavaLangComparable_class_() isInstance:arg1])) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Arguments must be Comparable");
  return [((id<JavaLangComparable>) nil_chk(((id<JavaLangComparable>) check_protocol_cast(arg0, @protocol(JavaLangComparable))))) compareToWithId:arg1];
}

- (instancetype)initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap:(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *)outer$ {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator_initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, "(TT;TT;)I" },
    { "initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator = { 2, "ComparableComparator", "edu.uci.ics.jung.algorithms.util", "MapBinaryHeap", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<TT;>;" };
  return &_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator;
}

@end

void EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator_initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator *self, EduUciIcsJungAlgorithmsUtilMapBinaryHeap *outer$) {
  (void) NSObject_init(self);
}

EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator *new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator_initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap_(EduUciIcsJungAlgorithmsUtilMapBinaryHeap *outer$) {
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator *self = [EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator alloc];
  EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator_initWithEduUciIcsJungAlgorithmsUtilMapBinaryHeap_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsUtilMapBinaryHeap_ComparableComparator)
