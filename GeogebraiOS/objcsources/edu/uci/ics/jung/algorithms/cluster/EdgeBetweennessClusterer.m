//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.h"
#include "edu/uci/ics/jung/algorithms/cluster/WeakComponentClusterer.h"
#include "edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.h"
#include "edu/uci/ics/jung/graph/Graph.h"
#include "edu/uci/ics/jung/graph/util/Pair.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer () {
 @public
  jint mNumEdgesToRemove_;
  id<JavaUtilMap> edges_removed_;
}

@end

J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer, edges_removed_, id<JavaUtilMap>)

@implementation EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer

- (instancetype)initWithInt:(jint)numEdgesToRemove {
  EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer_initWithInt_(self, numEdgesToRemove);
  return self;
}

- (id<JavaUtilSet>)transformWithId:(id<EduUciIcsJungGraphGraph>)graph {
  if (mNumEdgesToRemove_ < 0 || mNumEdgesToRemove_ > [((id<EduUciIcsJungGraphGraph>) nil_chk(graph)) getEdgeCount]) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid number of edges passed in.") autorelease];
  }
  [((id<JavaUtilMap>) nil_chk(edges_removed_)) clear];
  for (jint k = 0; k < mNumEdgesToRemove_; k++) {
    EduUciIcsJungAlgorithmsScoringBetweennessCentrality *bc = [new_EduUciIcsJungAlgorithmsScoringBetweennessCentrality_initWithEduUciIcsJungGraphGraph_(graph) autorelease];
    id to_remove = nil;
    jdouble score = 0;
    for (id __strong e in nil_chk([((id<EduUciIcsJungGraphGraph>) nil_chk(graph)) getEdges])) if ([((JavaLangDouble *) nil_chk([bc getEdgeScoreWithId:e])) doubleValue] > score) {
      to_remove = e;
      score = [((JavaLangDouble *) nil_chk([bc getEdgeScoreWithId:e])) doubleValue];
    }
    [edges_removed_ putWithId:to_remove withId:[graph getEndpointsWithId:to_remove]];
    [graph removeEdgeWithId:to_remove];
  }
  EduUciIcsJungAlgorithmsClusterWeakComponentClusterer *wcSearch = [new_EduUciIcsJungAlgorithmsClusterWeakComponentClusterer_init() autorelease];
  id<JavaUtilSet> clusterSet = [wcSearch transformWithId:graph];
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([edges_removed_ entrySet])) {
    EduUciIcsJungGraphUtilPair *endpoints = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
    [((id<EduUciIcsJungGraphGraph>) nil_chk(graph)) addEdgeWithId:[entry_ getKey] withId:[((EduUciIcsJungGraphUtilPair *) nil_chk(endpoints)) getFirst] withId:[endpoints getSecond]];
  }
  return clusterSet;
}

- (id<JavaUtilList>)getEdgesRemoved {
  return [new_JavaUtilArrayList_initWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(edges_removed_)) keySet]) autorelease];
}

- (void)dealloc {
  RELEASE_(edges_removed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "EdgeBetweennessClusterer", NULL, 0x1, NULL, NULL },
    { "transformWithId:", "transform", "Ljava.util.Set;", 0x1, NULL, NULL },
    { "getEdgesRemoved", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mNumEdgesToRemove_", NULL, 0x2, "I", NULL, NULL,  },
    { "edges_removed_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<TE;Ledu/uci/ics/jung/graph/util/Pair<TV;>;>;",  },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer = { 2, "EdgeBetweennessClusterer", "edu.uci.ics.jung.algorithms.cluster", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/Transformer<Ledu/uci/ics/jung/graph/Graph<TV;TE;>;Ljava/util/Set<Ljava/util/Set<TV;>;>;>;" };
  return &_EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer;
}

@end

void EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer_initWithInt_(EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer *self, jint numEdgesToRemove) {
  NSObject_init(self);
  self->mNumEdgesToRemove_ = numEdgesToRemove;
  EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer_setAndConsume_edges_removed_(self, new_JavaUtilLinkedHashMap_init());
}

EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer *new_EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer_initWithInt_(jint numEdgesToRemove) {
  EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer *self = [EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer alloc];
  EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer_initWithInt_(self, numEdgesToRemove);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsClusterEdgeBetweennessClusterer)
