//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.h"
#include "edu/uci/ics/jung/graph/UndirectedGraph.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/Stack.h"

@implementation EduUciIcsJungAlgorithmsClusterBicomponentClusterer

- (instancetype)init {
  EduUciIcsJungAlgorithmsClusterBicomponentClusterer_init(self);
  return self;
}

- (id<JavaUtilSet>)transformWithId:(id<EduUciIcsJungGraphUndirectedGraph>)theGraph {
  id<JavaUtilSet> bicomponents = [new_JavaUtilLinkedHashSet_init() autorelease];
  if ([((id<JavaUtilCollection>) nil_chk([((id<EduUciIcsJungGraphUndirectedGraph>) nil_chk(theGraph)) getVertices])) isEmpty]) return bicomponents;
  EduUciIcsJungAlgorithmsClusterBicomponentClusterer_setAndConsume_dfs_num_(self, new_JavaUtilHashMap_init());
  for (id __strong v in nil_chk([theGraph getVertices])) {
    [dfs_num_ putWithId:v withId:JavaLangInteger_valueOfWithInt_(0)];
  }
  for (id __strong v in nil_chk([theGraph getVertices])) {
    if ([((NSNumber *) nil_chk([dfs_num_ getWithId:v])) intValue] == 0) {
      EduUciIcsJungAlgorithmsClusterBicomponentClusterer_setAndConsume_high_(self, new_JavaUtilHashMap_init());
      EduUciIcsJungAlgorithmsClusterBicomponentClusterer_setAndConsume_stack_(self, new_JavaUtilStack_init());
      EduUciIcsJungAlgorithmsClusterBicomponentClusterer_setAndConsume_parents_(self, new_JavaUtilHashMap_init());
      converse_depth_ = [theGraph getVertexCount];
      [self findBiconnectedComponentsWithEduUciIcsJungGraphUndirectedGraph:theGraph withId:v withJavaUtilSet:bicomponents];
      if ([theGraph getVertexCount] - converse_depth_ == 1) {
        id<JavaUtilSet> s = [new_JavaUtilHashSet_init() autorelease];
        [s addWithId:v];
        [bicomponents addWithId:s];
      }
    }
  }
  return bicomponents;
}

- (void)findBiconnectedComponentsWithEduUciIcsJungGraphUndirectedGraph:(id<EduUciIcsJungGraphUndirectedGraph>)g
                                                                withId:(id)v
                                                       withJavaUtilSet:(id<JavaUtilSet>)bicomponents {
  jint v_dfs_num = converse_depth_;
  [((id<JavaUtilMap>) nil_chk(dfs_num_)) putWithId:v withId:JavaLangInteger_valueOfWithInt_(v_dfs_num)];
  converse_depth_--;
  [((id<JavaUtilMap>) nil_chk(high_)) putWithId:v withId:JavaLangInteger_valueOfWithInt_(v_dfs_num)];
  for (id __strong w in nil_chk([((id<EduUciIcsJungGraphUndirectedGraph>) nil_chk(g)) getNeighborsWithId:v])) {
    jint w_dfs_num = [((NSNumber *) nil_chk([dfs_num_ getWithId:w])) intValue];
    id vw = [g findEdgeWithId:v withId:w];
    if (w_dfs_num == 0) {
      [((id<JavaUtilMap>) nil_chk(parents_)) putWithId:w withId:v];
      [((JavaUtilStack *) nil_chk(stack_)) pushWithId:vw];
      [self findBiconnectedComponentsWithEduUciIcsJungGraphUndirectedGraph:g withId:w withJavaUtilSet:bicomponents];
      jint w_high = [((NSNumber *) nil_chk([high_ getWithId:w])) intValue];
      if (w_high <= v_dfs_num) {
        id<JavaUtilSet> bicomponent = [new_JavaUtilHashSet_init() autorelease];
        id e;
        do {
          e = [stack_ pop];
          [bicomponent addAllWithJavaUtilCollection:[g getIncidentVerticesWithId:e]];
        }
        while (e != vw);
        [((id<JavaUtilSet>) nil_chk(bicomponents)) addWithId:bicomponent];
      }
      [high_ putWithId:v withId:JavaLangInteger_valueOfWithInt_(JavaLangMath_maxWithInt_withInt_(w_high, [((NSNumber *) nil_chk([high_ getWithId:v])) intValue]))];
    }
    else if (w != [((id<JavaUtilMap>) nil_chk(parents_)) getWithId:v]) [high_ putWithId:v withId:JavaLangInteger_valueOfWithInt_(JavaLangMath_maxWithInt_withInt_(w_dfs_num, [((NSNumber *) nil_chk([high_ getWithId:v])) intValue]))];
  }
}

- (void)dealloc {
  RELEASE_(dfs_num_);
  RELEASE_(high_);
  RELEASE_(parents_);
  RELEASE_(stack_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BicomponentClusterer", NULL, 0x1, NULL, NULL },
    { "transformWithId:", "transform", "Ljava.util.Set;", 0x1, NULL, NULL },
    { "findBiconnectedComponentsWithEduUciIcsJungGraphUndirectedGraph:withId:withJavaUtilSet:", "findBiconnectedComponents", "V", 0x4, NULL, "(Ledu/uci/ics/jung/graph/UndirectedGraph<TV;TE;>;TV;Ljava/util/Set<Ljava/util/Set<TV;>;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dfs_num_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;Ljava/lang/Number;>;",  },
    { "high_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;Ljava/lang/Number;>;",  },
    { "parents_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;TV;>;",  },
    { "stack_", NULL, 0x4, "Ljava.util.Stack;", NULL, "Ljava/util/Stack<TE;>;",  },
    { "converse_depth_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsClusterBicomponentClusterer = { 2, "BicomponentClusterer", "edu.uci.ics.jung.algorithms.cluster", NULL, 0x1, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/Transformer<Ledu/uci/ics/jung/graph/UndirectedGraph<TV;TE;>;Ljava/util/Set<Ljava/util/Set<TV;>;>;>;" };
  return &_EduUciIcsJungAlgorithmsClusterBicomponentClusterer;
}

@end

void EduUciIcsJungAlgorithmsClusterBicomponentClusterer_init(EduUciIcsJungAlgorithmsClusterBicomponentClusterer *self) {
  NSObject_init(self);
}

EduUciIcsJungAlgorithmsClusterBicomponentClusterer *new_EduUciIcsJungAlgorithmsClusterBicomponentClusterer_init() {
  EduUciIcsJungAlgorithmsClusterBicomponentClusterer *self = [EduUciIcsJungAlgorithmsClusterBicomponentClusterer alloc];
  EduUciIcsJungAlgorithmsClusterBicomponentClusterer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsClusterBicomponentClusterer)
