//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.h"
#include "edu/uci/ics/jung/graph/Graph.h"
#include "edu/uci/ics/jung/graph/Hypergraph.h"
#include "edu/uci/ics/jung/graph/KPartiteGraph.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "org/apache/commons/collections15/Factory.h"
#include "org/apache/commons/collections15/Predicate.h"

@interface EduUciIcsJungAlgorithmsTransformationFoldingTransformer ()

+ (void)populateTargetWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)target
                                           withId:(id)e
                            withJavaUtilArrayList:(JavaUtilArrayList *)incident;

@end

__attribute__((unused)) static void EduUciIcsJungAlgorithmsTransformationFoldingTransformer_populateTargetWithEduUciIcsJungGraphGraph_withId_withJavaUtilArrayList_(id<EduUciIcsJungGraphGraph> target, id e, JavaUtilArrayList *incident);

@implementation EduUciIcsJungAlgorithmsTransformationFoldingTransformer

+ (id<EduUciIcsJungGraphGraph>)foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph:(id<EduUciIcsJungGraphKPartiteGraph>)g
                                         withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)p
                                           withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory
                                           withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edge_factory {
  return EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph_withOrgApacheCommonsCollections15Predicate_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_(g, p, graph_factory, edge_factory);
}

+ (id<EduUciIcsJungGraphGraph>)foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph:(id<EduUciIcsJungGraphKPartiteGraph>)g
                                         withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)p
                                           withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory {
  return EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph_withOrgApacheCommonsCollections15Predicate_withOrgApacheCommonsCollections15Factory_(g, p, graph_factory);
}

+ (id<EduUciIcsJungGraphGraph>)foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)h
                                          withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory {
  return EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Factory_(h, graph_factory);
}

+ (id<EduUciIcsJungGraphGraph>)foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)h
                                          withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory
                                          withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edge_factory {
  return EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_(h, graph_factory, edge_factory);
}

+ (id<EduUciIcsJungGraphGraph>)foldHypergraphVerticesWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)h
                                             withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory
                                             withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edge_factory {
  return EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldHypergraphVerticesWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_(h, graph_factory, edge_factory);
}

- (id<EduUciIcsJungGraphGraph>)foldHypergraphVerticesWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)h
                                             withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory {
  id<EduUciIcsJungGraphGraph> target = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(graph_factory)) create];
  for (id __strong e in nil_chk([((id<EduUciIcsJungGraphHypergraph>) nil_chk(h)) getEdges])) [((id<EduUciIcsJungGraphGraph>) nil_chk(target)) addVertexWithId:e];
  for (id __strong v in nil_chk([h getVertices])) {
    JavaUtilArrayList *incident = new_JavaUtilArrayList_initWithJavaUtilCollection_([h getIncidentEdgesWithId:v]);
    EduUciIcsJungAlgorithmsTransformationFoldingTransformer_populateTargetWithEduUciIcsJungGraphGraph_withId_withJavaUtilArrayList_(target, v, incident);
  }
  return target;
}

+ (void)populateTargetWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)target
                                           withId:(id)e
                            withJavaUtilArrayList:(JavaUtilArrayList *)incident {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_populateTargetWithEduUciIcsJungGraphGraph_withId_withJavaUtilArrayList_(target, e, incident);
}

- (instancetype)init {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph:withOrgApacheCommonsCollections15Predicate:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:", "foldKPartiteGraph", "Ledu.uci.ics.jung.graph.Graph;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/KPartiteGraph<TV;TE;>;Lorg/apache/commons/collections15/Predicate<TV;>;Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/Graph<TV;TE;>;>;Lorg/apache/commons/collections15/Factory<TE;>;)Ledu/uci/ics/jung/graph/Graph<TV;TE;>;" },
    { "foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph:withOrgApacheCommonsCollections15Predicate:withOrgApacheCommonsCollections15Factory:", "foldKPartiteGraph", "Ledu.uci.ics.jung.graph.Graph;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/KPartiteGraph<TV;TE;>;Lorg/apache/commons/collections15/Predicate<TV;>;Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/Graph<TV;Ljava/util/Collection<TV;>;>;>;)Ledu/uci/ics/jung/graph/Graph<TV;Ljava/util/Collection<TV;>;>;" },
    { "foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Factory:", "foldHypergraphEdges", "Ledu.uci.ics.jung.graph.Graph;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/Hypergraph<TV;TE;>;Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/Graph<TV;Ljava/util/Collection<TE;>;>;>;)Ledu/uci/ics/jung/graph/Graph<TV;Ljava/util/Collection<TE;>;>;" },
    { "foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:", "foldHypergraphEdges", "Ledu.uci.ics.jung.graph.Graph;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/Hypergraph<TV;TE;>;Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/Graph<TV;TE;>;>;Lorg/apache/commons/collections15/Factory<TE;>;)Ledu/uci/ics/jung/graph/Graph<TV;TE;>;" },
    { "foldHypergraphVerticesWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:", "foldHypergraphVertices", "Ledu.uci.ics.jung.graph.Graph;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;F:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/Hypergraph<TV;TE;>;Lorg/apache/commons/collections15/Factory<Ledu/uci/ics/jung/graph/Graph<TE;TF;>;>;Lorg/apache/commons/collections15/Factory<TF;>;)Ledu/uci/ics/jung/graph/Graph<TE;TF;>;" },
    { "foldHypergraphVerticesWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Factory:", "foldHypergraphVertices", "Ledu.uci.ics.jung.graph.Graph;", 0x1, NULL, NULL },
    { "populateTargetWithEduUciIcsJungGraphGraph:withId:withJavaUtilArrayList:", "populateTarget", "V", 0xa, NULL, "<S:Ljava/lang/Object;T:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/Graph<TS;Ljava/util/Collection<TT;>;>;TT;Ljava/util/ArrayList<TS;>;)V" },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsTransformationFoldingTransformer = { 2, "FoldingTransformer", "edu.uci.ics.jung.algorithms.transformation", NULL, 0x1, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_EduUciIcsJungAlgorithmsTransformationFoldingTransformer;
}

@end

id<EduUciIcsJungGraphGraph> EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph_withOrgApacheCommonsCollections15Predicate_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_(id<EduUciIcsJungGraphKPartiteGraph> g, id<OrgApacheCommonsCollections15Predicate> p, id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> edge_factory) {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_initialize();
  id<EduUciIcsJungGraphGraph> newGraph = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(graph_factory)) create];
  id<JavaUtilCollection> vertices = [((id<EduUciIcsJungGraphKPartiteGraph>) nil_chk(g)) getVerticesWithOrgApacheCommonsCollections15Predicate:p];
  for (id __strong v in nil_chk(vertices)) {
    [((id<EduUciIcsJungGraphGraph>) nil_chk(newGraph)) addVertexWithId:v];
    for (id __strong s in nil_chk([g getSuccessorsWithId:v])) {
      for (id __strong t in nil_chk([g getSuccessorsWithId:s])) {
        if (![vertices containsWithId:t] || [nil_chk(t) isEqual:v]) continue;
        [newGraph addVertexWithId:t];
        [newGraph addEdgeWithId:[((id<OrgApacheCommonsCollections15Factory>) nil_chk(edge_factory)) create] withId:v withId:t];
      }
    }
  }
  return newGraph;
}

id<EduUciIcsJungGraphGraph> EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldKPartiteGraphWithEduUciIcsJungGraphKPartiteGraph_withOrgApacheCommonsCollections15Predicate_withOrgApacheCommonsCollections15Factory_(id<EduUciIcsJungGraphKPartiteGraph> g, id<OrgApacheCommonsCollections15Predicate> p, id<OrgApacheCommonsCollections15Factory> graph_factory) {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_initialize();
  id<EduUciIcsJungGraphGraph> newGraph = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(graph_factory)) create];
  id<JavaUtilCollection> vertices = [((id<EduUciIcsJungGraphKPartiteGraph>) nil_chk(g)) getVerticesWithOrgApacheCommonsCollections15Predicate:p];
  for (id __strong v in nil_chk(vertices)) {
    [((id<EduUciIcsJungGraphGraph>) nil_chk(newGraph)) addVertexWithId:v];
    for (id __strong s in nil_chk([g getSuccessorsWithId:v])) {
      for (id __strong t in nil_chk([g getSuccessorsWithId:s])) {
        if (![vertices containsWithId:t] || [nil_chk(t) isEqual:v]) continue;
        [newGraph addVertexWithId:t];
        id<JavaUtilCollection> v_coll = [newGraph findEdgeWithId:v withId:t];
        if (v_coll == nil) {
          v_coll = new_JavaUtilArrayList_init();
          [newGraph addEdgeWithId:v_coll withId:v withId:t];
        }
        [((id<JavaUtilCollection>) nil_chk(v_coll)) addWithId:s];
      }
    }
  }
  return newGraph;
}

id<EduUciIcsJungGraphGraph> EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Factory_(id<EduUciIcsJungGraphHypergraph> h, id<OrgApacheCommonsCollections15Factory> graph_factory) {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_initialize();
  id<EduUciIcsJungGraphGraph> target = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(graph_factory)) create];
  for (id __strong v in nil_chk([((id<EduUciIcsJungGraphHypergraph>) nil_chk(h)) getVertices])) [((id<EduUciIcsJungGraphGraph>) nil_chk(target)) addVertexWithId:v];
  for (id __strong e in nil_chk([h getEdges])) {
    JavaUtilArrayList *incident = new_JavaUtilArrayList_initWithJavaUtilCollection_([h getIncidentVerticesWithId:e]);
    EduUciIcsJungAlgorithmsTransformationFoldingTransformer_populateTargetWithEduUciIcsJungGraphGraph_withId_withJavaUtilArrayList_(target, e, incident);
  }
  return target;
}

id<EduUciIcsJungGraphGraph> EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldHypergraphEdgesWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_(id<EduUciIcsJungGraphHypergraph> h, id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> edge_factory) {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_initialize();
  id<EduUciIcsJungGraphGraph> target = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(graph_factory)) create];
  for (id __strong v in nil_chk([((id<EduUciIcsJungGraphHypergraph>) nil_chk(h)) getVertices])) [((id<EduUciIcsJungGraphGraph>) nil_chk(target)) addVertexWithId:v];
  for (id __strong e in nil_chk([h getEdges])) {
    JavaUtilArrayList *incident = new_JavaUtilArrayList_initWithJavaUtilCollection_([h getIncidentVerticesWithId:e]);
    for (jint i = 0; i < [incident size]; i++) for (jint j = i + 1; j < [incident size]; j++) [((id<EduUciIcsJungGraphGraph>) nil_chk(target)) addEdgeWithId:[((id<OrgApacheCommonsCollections15Factory>) nil_chk(edge_factory)) create] withId:[incident getWithInt:i] withId:[incident getWithInt:j]];
  }
  return target;
}

id<EduUciIcsJungGraphGraph> EduUciIcsJungAlgorithmsTransformationFoldingTransformer_foldHypergraphVerticesWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_(id<EduUciIcsJungGraphHypergraph> h, id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> edge_factory) {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_initialize();
  id<EduUciIcsJungGraphGraph> target = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(graph_factory)) create];
  for (id __strong e in nil_chk([((id<EduUciIcsJungGraphHypergraph>) nil_chk(h)) getEdges])) [((id<EduUciIcsJungGraphGraph>) nil_chk(target)) addVertexWithId:e];
  for (id __strong v in nil_chk([h getVertices])) {
    JavaUtilArrayList *incident = new_JavaUtilArrayList_initWithJavaUtilCollection_([h getIncidentEdgesWithId:v]);
    for (jint i = 0; i < [incident size]; i++) for (jint j = i + 1; j < [incident size]; j++) [((id<EduUciIcsJungGraphGraph>) nil_chk(target)) addEdgeWithId:[((id<OrgApacheCommonsCollections15Factory>) nil_chk(edge_factory)) create] withId:[incident getWithInt:i] withId:[incident getWithInt:j]];
  }
  return target;
}

void EduUciIcsJungAlgorithmsTransformationFoldingTransformer_populateTargetWithEduUciIcsJungGraphGraph_withId_withJavaUtilArrayList_(id<EduUciIcsJungGraphGraph> target, id e, JavaUtilArrayList *incident) {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_initialize();
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(incident)) size]; i++) {
    id v1 = [incident getWithInt:i];
    for (jint j = i + 1; j < [incident size]; j++) {
      id v2 = [incident getWithInt:j];
      id<JavaUtilCollection> e_coll = [((id<EduUciIcsJungGraphGraph>) nil_chk(target)) findEdgeWithId:v1 withId:v2];
      if (e_coll == nil) {
        e_coll = new_JavaUtilArrayList_init();
        [target addEdgeWithId:e_coll withId:v1 withId:v2];
      }
      [((id<JavaUtilCollection>) nil_chk(e_coll)) addWithId:e];
    }
  }
}

void EduUciIcsJungAlgorithmsTransformationFoldingTransformer_init(EduUciIcsJungAlgorithmsTransformationFoldingTransformer *self) {
  (void) NSObject_init(self);
}

EduUciIcsJungAlgorithmsTransformationFoldingTransformer *new_EduUciIcsJungAlgorithmsTransformationFoldingTransformer_init() {
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer *self = [EduUciIcsJungAlgorithmsTransformationFoldingTransformer alloc];
  EduUciIcsJungAlgorithmsTransformationFoldingTransformer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsTransformationFoldingTransformer)
