//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/operation/predicate/RectangleContains.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/CoordinateSequence.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/Point.h"
#include "com/vividsolutions/jts/geom/Polygon.h"
#include "com/vividsolutions/jts/operation/predicate/RectangleContains.h"

@interface ComVividsolutionsJtsOperationPredicateRectangleContains () {
 @public
  ComVividsolutionsJtsGeomPolygon *rectangle_;
  ComVividsolutionsJtsGeomEnvelope *rectEnv_;
}

- (jboolean)isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom;

- (jboolean)isPointContainedInBoundaryWithComVividsolutionsJtsGeomPoint:(ComVividsolutionsJtsGeomPoint *)point;

- (jboolean)isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt;

- (jboolean)isLineStringContainedInBoundaryWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line;

- (jboolean)isLineSegmentContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                                            withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationPredicateRectangleContains, rectangle_, ComVividsolutionsJtsGeomPolygon *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationPredicateRectangleContains, rectEnv_, ComVividsolutionsJtsGeomEnvelope *)

__attribute__((unused)) static jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomGeometry *geom);

__attribute__((unused)) static jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomPoint_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomPoint *point);

__attribute__((unused)) static jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomCoordinate *pt);

__attribute__((unused)) static jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isLineStringContainedInBoundaryWithComVividsolutionsJtsGeomLineString_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomLineString *line);

__attribute__((unused)) static jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isLineSegmentContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1);

@implementation ComVividsolutionsJtsOperationPredicateRectangleContains

+ (jboolean)containsWithComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *)rectangle
                   withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)b {
  return ComVividsolutionsJtsOperationPredicateRectangleContains_containsWithComVividsolutionsJtsGeomPolygon_withComVividsolutionsJtsGeomGeometry_(rectangle, b);
}

- (instancetype)initWithComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *)rectangle {
  ComVividsolutionsJtsOperationPredicateRectangleContains_initWithComVividsolutionsJtsGeomPolygon_(self, rectangle);
  return self;
}

- (jboolean)containsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  if (![((ComVividsolutionsJtsGeomEnvelope *) nil_chk(rectEnv_)) containsWithComVividsolutionsJtsGeomEnvelope:[((ComVividsolutionsJtsGeomGeometry *) nil_chk(geom)) getEnvelopeInternal]]) return NO;
  if (ComVividsolutionsJtsOperationPredicateRectangleContains_isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry_(self, geom)) return NO;
  return YES;
}

- (jboolean)isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  return ComVividsolutionsJtsOperationPredicateRectangleContains_isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry_(self, geom);
}

- (jboolean)isPointContainedInBoundaryWithComVividsolutionsJtsGeomPoint:(ComVividsolutionsJtsGeomPoint *)point {
  return ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomPoint_(self, point);
}

- (jboolean)isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt {
  return ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_(self, pt);
}

- (jboolean)isLineStringContainedInBoundaryWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line {
  return ComVividsolutionsJtsOperationPredicateRectangleContains_isLineStringContainedInBoundaryWithComVividsolutionsJtsGeomLineString_(self, line);
}

- (jboolean)isLineSegmentContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                                            withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  return ComVividsolutionsJtsOperationPredicateRectangleContains_isLineSegmentContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p1);
}

- (void)dealloc {
  RELEASE_(rectangle_);
  RELEASE_(rectEnv_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "containsWithComVividsolutionsJtsGeomPolygon:withComVividsolutionsJtsGeomGeometry:", "contains", "Z", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomPolygon:", "RectangleContains", NULL, 0x1, NULL, NULL },
    { "containsWithComVividsolutionsJtsGeomGeometry:", "contains", "Z", 0x1, NULL, NULL },
    { "isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry:", "isContainedInBoundary", "Z", 0x2, NULL, NULL },
    { "isPointContainedInBoundaryWithComVividsolutionsJtsGeomPoint:", "isPointContainedInBoundary", "Z", 0x2, NULL, NULL },
    { "isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate:", "isPointContainedInBoundary", "Z", 0x2, NULL, NULL },
    { "isLineStringContainedInBoundaryWithComVividsolutionsJtsGeomLineString:", "isLineStringContainedInBoundary", "Z", 0x2, NULL, NULL },
    { "isLineSegmentContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "isLineSegmentContainedInBoundary", "Z", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rectangle_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Polygon;", NULL, NULL,  },
    { "rectEnv_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Envelope;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationPredicateRectangleContains = { 2, "RectangleContains", "com.vividsolutions.jts.operation.predicate", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationPredicateRectangleContains;
}

@end

jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_containsWithComVividsolutionsJtsGeomPolygon_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomPolygon *rectangle, ComVividsolutionsJtsGeomGeometry *b) {
  ComVividsolutionsJtsOperationPredicateRectangleContains_initialize();
  ComVividsolutionsJtsOperationPredicateRectangleContains *rc = [new_ComVividsolutionsJtsOperationPredicateRectangleContains_initWithComVividsolutionsJtsGeomPolygon_(rectangle) autorelease];
  return [rc containsWithComVividsolutionsJtsGeomGeometry:b];
}

void ComVividsolutionsJtsOperationPredicateRectangleContains_initWithComVividsolutionsJtsGeomPolygon_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomPolygon *rectangle) {
  NSObject_init(self);
  ComVividsolutionsJtsOperationPredicateRectangleContains_set_rectangle_(self, rectangle);
  ComVividsolutionsJtsOperationPredicateRectangleContains_set_rectEnv_(self, [((ComVividsolutionsJtsGeomPolygon *) nil_chk(rectangle)) getEnvelopeInternal]);
}

ComVividsolutionsJtsOperationPredicateRectangleContains *new_ComVividsolutionsJtsOperationPredicateRectangleContains_initWithComVividsolutionsJtsGeomPolygon_(ComVividsolutionsJtsGeomPolygon *rectangle) {
  ComVividsolutionsJtsOperationPredicateRectangleContains *self = [ComVividsolutionsJtsOperationPredicateRectangleContains alloc];
  ComVividsolutionsJtsOperationPredicateRectangleContains_initWithComVividsolutionsJtsGeomPolygon_(self, rectangle);
  return self;
}

jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomGeometry *geom) {
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomPolygon class]]) return NO;
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomPoint class]]) return ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomPoint_(self, (ComVividsolutionsJtsGeomPoint *) check_class_cast(geom, [ComVividsolutionsJtsGeomPoint class]));
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomLineString class]]) return ComVividsolutionsJtsOperationPredicateRectangleContains_isLineStringContainedInBoundaryWithComVividsolutionsJtsGeomLineString_(self, (ComVividsolutionsJtsGeomLineString *) check_class_cast(geom, [ComVividsolutionsJtsGeomLineString class]));
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomGeometry *) nil_chk(geom)) getNumGeometries]; i++) {
    ComVividsolutionsJtsGeomGeometry *comp = [geom getGeometryNWithInt:i];
    if (!ComVividsolutionsJtsOperationPredicateRectangleContains_isContainedInBoundaryWithComVividsolutionsJtsGeomGeometry_(self, comp)) return NO;
  }
  return YES;
}

jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomPoint_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomPoint *point) {
  return ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_(self, [((ComVividsolutionsJtsGeomPoint *) nil_chk(point)) getCoordinate]);
}

jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomCoordinate *pt) {
  return ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pt))->x_ == [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->rectEnv_)) getMinX] || pt->x_ == [self->rectEnv_ getMaxX] || pt->y_ == [self->rectEnv_ getMinY] || pt->y_ == [self->rectEnv_ getMaxY];
}

jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isLineStringContainedInBoundaryWithComVividsolutionsJtsGeomLineString_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomLineString *line) {
  id<ComVividsolutionsJtsGeomCoordinateSequence> seq = [((ComVividsolutionsJtsGeomLineString *) nil_chk(line)) getCoordinateSequence];
  ComVividsolutionsJtsGeomCoordinate *p0 = [new_ComVividsolutionsJtsGeomCoordinate_init() autorelease];
  ComVividsolutionsJtsGeomCoordinate *p1 = [new_ComVividsolutionsJtsGeomCoordinate_init() autorelease];
  for (jint i = 0; i < [((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(seq)) size] - 1; i++) {
    [seq getCoordinateWithInt:i withComVividsolutionsJtsGeomCoordinate:p0];
    [seq getCoordinateWithInt:i + 1 withComVividsolutionsJtsGeomCoordinate:p1];
    if (!ComVividsolutionsJtsOperationPredicateRectangleContains_isLineSegmentContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p1)) return NO;
  }
  return YES;
}

jboolean ComVividsolutionsJtsOperationPredicateRectangleContains_isLineSegmentContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationPredicateRectangleContains *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1) {
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0)) isEqual:p1]) return ComVividsolutionsJtsOperationPredicateRectangleContains_isPointContainedInBoundaryWithComVividsolutionsJtsGeomCoordinate_(self, p0);
  if (p0->x_ == ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_) {
    if (p0->x_ == [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->rectEnv_)) getMinX] || p0->x_ == [self->rectEnv_ getMaxX]) return YES;
  }
  else if (p0->y_ == p1->y_) {
    if (p0->y_ == [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->rectEnv_)) getMinY] || p0->y_ == [self->rectEnv_ getMaxY]) return YES;
  }
  return NO;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationPredicateRectangleContains)
