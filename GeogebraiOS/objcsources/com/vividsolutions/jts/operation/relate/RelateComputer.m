//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/operation/relate/RelateComputer.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/LineIntersector.h"
#include "com/vividsolutions/jts/algorithm/PointLocator.h"
#include "com/vividsolutions/jts/algorithm/RobustLineIntersector.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/IntersectionMatrix.h"
#include "com/vividsolutions/jts/geom/Location.h"
#include "com/vividsolutions/jts/geomgraph/Edge.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEnd.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEndStar.h"
#include "com/vividsolutions/jts/geomgraph/EdgeIntersection.h"
#include "com/vividsolutions/jts/geomgraph/EdgeIntersectionList.h"
#include "com/vividsolutions/jts/geomgraph/GeometryGraph.h"
#include "com/vividsolutions/jts/geomgraph/Label.h"
#include "com/vividsolutions/jts/geomgraph/Node.h"
#include "com/vividsolutions/jts/geomgraph/NodeMap.h"
#include "com/vividsolutions/jts/geomgraph/index/SegmentIntersector.h"
#include "com/vividsolutions/jts/operation/relate/EdgeEndBuilder.h"
#include "com/vividsolutions/jts/operation/relate/RelateComputer.h"
#include "com/vividsolutions/jts/operation/relate/RelateNode.h"
#include "com/vividsolutions/jts/operation/relate/RelateNodeFactory.h"
#include "com/vividsolutions/jts/util/Assert.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsOperationRelateRelateComputer () {
 @public
  ComVividsolutionsJtsAlgorithmLineIntersector *li_;
  ComVividsolutionsJtsAlgorithmPointLocator *ptLocator_;
  IOSObjectArray *arg_;
  ComVividsolutionsJtsGeomgraphNodeMap *nodes_;
  ComVividsolutionsJtsGeomIntersectionMatrix *im_;
  JavaUtilArrayList *isolatedEdges_;
  ComVividsolutionsJtsGeomCoordinate *invalidPoint_;
}

- (void)insertEdgeEndsWithJavaUtilList:(id<JavaUtilList>)ee;

- (void)computeProperIntersectionIMWithComVividsolutionsJtsGeomgraphIndexSegmentIntersector:(ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *)intersector
                                             withComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im;

- (void)copyNodesAndLabelsWithInt:(jint)argIndex OBJC_METHOD_FAMILY_NONE;

- (void)computeIntersectionNodesWithInt:(jint)argIndex;

- (void)labelIntersectionNodesWithInt:(jint)argIndex;

- (void)computeDisjointIMWithComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im;

- (void)labelNodeEdges;

- (void)updateIMWithComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im;

- (void)labelIsolatedEdgesWithInt:(jint)thisIndex
                          withInt:(jint)targetIndex;

- (void)labelIsolatedEdgeWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *)e
                                                       withInt:(jint)targetIndex
                          withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)target;

- (void)labelIsolatedNodes;

- (void)labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode:(ComVividsolutionsJtsGeomgraphNode *)n
                                                       withInt:(jint)targetIndex;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationRelateRelateComputer, li_, ComVividsolutionsJtsAlgorithmLineIntersector *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationRelateRelateComputer, ptLocator_, ComVividsolutionsJtsAlgorithmPointLocator *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationRelateRelateComputer, arg_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationRelateRelateComputer, nodes_, ComVividsolutionsJtsGeomgraphNodeMap *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationRelateRelateComputer, im_, ComVividsolutionsJtsGeomIntersectionMatrix *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationRelateRelateComputer, isolatedEdges_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationRelateRelateComputer, invalidPoint_, ComVividsolutionsJtsGeomCoordinate *)

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_insertEdgeEndsWithJavaUtilList_(ComVividsolutionsJtsOperationRelateRelateComputer *self, id<JavaUtilList> ee);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_computeProperIntersectionIMWithComVividsolutionsJtsGeomgraphIndexSegmentIntersector_withComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *intersector, ComVividsolutionsJtsGeomIntersectionMatrix *im);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_copyNodesAndLabelsWithInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, jint argIndex);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_computeIntersectionNodesWithInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, jint argIndex);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_computeDisjointIMWithComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomIntersectionMatrix *im);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_labelNodeEdges(ComVividsolutionsJtsOperationRelateRelateComputer *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_updateIMWithComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomIntersectionMatrix *im);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgesWithInt_withInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, jint thisIndex, jint targetIndex);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgeWithComVividsolutionsJtsGeomgraphEdge_withInt_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomgraphEdge *e, jint targetIndex, ComVividsolutionsJtsGeomGeometry *target);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodes(ComVividsolutionsJtsOperationRelateRelateComputer *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode_withInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomgraphNode *n, jint targetIndex);

@implementation ComVividsolutionsJtsOperationRelateRelateComputer

- (instancetype)initWithComVividsolutionsJtsGeomgraphGeometryGraphArray:(IOSObjectArray *)arg {
  ComVividsolutionsJtsOperationRelateRelateComputer_initWithComVividsolutionsJtsGeomgraphGeometryGraphArray_(self, arg);
  return self;
}

- (ComVividsolutionsJtsGeomIntersectionMatrix *)computeIM {
  ComVividsolutionsJtsGeomIntersectionMatrix *im = new_ComVividsolutionsJtsGeomIntersectionMatrix_init();
  [im setWithInt:ComVividsolutionsJtsGeomLocation_EXTERIOR withInt:ComVividsolutionsJtsGeomLocation_EXTERIOR withInt:2];
  if (![((ComVividsolutionsJtsGeomEnvelope *) nil_chk([((ComVividsolutionsJtsGeomGeometry *) nil_chk([((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(arg_), 0))) getGeometry])) getEnvelopeInternal])) intersectsWithComVividsolutionsJtsGeomEnvelope:[((ComVividsolutionsJtsGeomGeometry *) nil_chk([((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(arg_, 1))) getGeometry])) getEnvelopeInternal]]) {
    ComVividsolutionsJtsOperationRelateRelateComputer_computeDisjointIMWithComVividsolutionsJtsGeomIntersectionMatrix_(self, im);
    return im;
  }
  (void) [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(arg_, 0))) computeSelfNodesWithComVividsolutionsJtsAlgorithmLineIntersector:li_ withBoolean:NO];
  (void) [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(arg_, 1))) computeSelfNodesWithComVividsolutionsJtsAlgorithmLineIntersector:li_ withBoolean:NO];
  ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *intersector = [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(arg_, 0))) computeEdgeIntersectionsWithComVividsolutionsJtsGeomgraphGeometryGraph:IOSObjectArray_Get(arg_, 1) withComVividsolutionsJtsAlgorithmLineIntersector:li_ withBoolean:NO];
  ComVividsolutionsJtsOperationRelateRelateComputer_computeIntersectionNodesWithInt_(self, 0);
  ComVividsolutionsJtsOperationRelateRelateComputer_computeIntersectionNodesWithInt_(self, 1);
  ComVividsolutionsJtsOperationRelateRelateComputer_copyNodesAndLabelsWithInt_(self, 0);
  ComVividsolutionsJtsOperationRelateRelateComputer_copyNodesAndLabelsWithInt_(self, 1);
  ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodes(self);
  ComVividsolutionsJtsOperationRelateRelateComputer_computeProperIntersectionIMWithComVividsolutionsJtsGeomgraphIndexSegmentIntersector_withComVividsolutionsJtsGeomIntersectionMatrix_(self, intersector, im);
  ComVividsolutionsJtsOperationRelateEdgeEndBuilder *eeBuilder = new_ComVividsolutionsJtsOperationRelateEdgeEndBuilder_init();
  id<JavaUtilList> ee0 = [eeBuilder computeEdgeEndsWithJavaUtilIterator:[((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(arg_, 0))) getEdgeIterator]];
  ComVividsolutionsJtsOperationRelateRelateComputer_insertEdgeEndsWithJavaUtilList_(self, ee0);
  id<JavaUtilList> ee1 = [eeBuilder computeEdgeEndsWithJavaUtilIterator:[((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(arg_, 1))) getEdgeIterator]];
  ComVividsolutionsJtsOperationRelateRelateComputer_insertEdgeEndsWithJavaUtilList_(self, ee1);
  ComVividsolutionsJtsOperationRelateRelateComputer_labelNodeEdges(self);
  ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgesWithInt_withInt_(self, 0, 1);
  ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgesWithInt_withInt_(self, 1, 0);
  ComVividsolutionsJtsOperationRelateRelateComputer_updateIMWithComVividsolutionsJtsGeomIntersectionMatrix_(self, im);
  return im;
}

- (void)insertEdgeEndsWithJavaUtilList:(id<JavaUtilList>)ee {
  ComVividsolutionsJtsOperationRelateRelateComputer_insertEdgeEndsWithJavaUtilList_(self, ee);
}

- (void)computeProperIntersectionIMWithComVividsolutionsJtsGeomgraphIndexSegmentIntersector:(ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *)intersector
                                             withComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im {
  ComVividsolutionsJtsOperationRelateRelateComputer_computeProperIntersectionIMWithComVividsolutionsJtsGeomgraphIndexSegmentIntersector_withComVividsolutionsJtsGeomIntersectionMatrix_(self, intersector, im);
}

- (void)copyNodesAndLabelsWithInt:(jint)argIndex {
  ComVividsolutionsJtsOperationRelateRelateComputer_copyNodesAndLabelsWithInt_(self, argIndex);
}

- (void)computeIntersectionNodesWithInt:(jint)argIndex {
  ComVividsolutionsJtsOperationRelateRelateComputer_computeIntersectionNodesWithInt_(self, argIndex);
}

- (void)labelIntersectionNodesWithInt:(jint)argIndex {
  for (id<JavaUtilIterator> i = [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(arg_), argIndex))) getEdgeIterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphEdge *e = (ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([i next], [ComVividsolutionsJtsGeomgraphEdge class]);
    jint eLoc = [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getLabel])) getLocationWithInt:argIndex];
    for (id<JavaUtilIterator> eiIt = [((ComVividsolutionsJtsGeomgraphEdgeIntersectionList *) nil_chk([e getEdgeIntersectionList])) iterator]; [((id<JavaUtilIterator>) nil_chk(eiIt)) hasNext]; ) {
      ComVividsolutionsJtsGeomgraphEdgeIntersection *ei = (ComVividsolutionsJtsGeomgraphEdgeIntersection *) check_class_cast([eiIt next], [ComVividsolutionsJtsGeomgraphEdgeIntersection class]);
      ComVividsolutionsJtsOperationRelateRelateNode *n = (ComVividsolutionsJtsOperationRelateRelateNode *) check_class_cast([((ComVividsolutionsJtsGeomgraphNodeMap *) nil_chk(nodes_)) findWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomgraphEdgeIntersection *) nil_chk(ei))->coord_], [ComVividsolutionsJtsOperationRelateRelateNode class]);
      if ([((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([((ComVividsolutionsJtsOperationRelateRelateNode *) nil_chk(n)) getLabel])) isNullWithInt:argIndex]) {
        if (eLoc == ComVividsolutionsJtsGeomLocation_BOUNDARY) [n setLabelBoundaryWithInt:argIndex];
        else [n setLabelWithInt:argIndex withInt:ComVividsolutionsJtsGeomLocation_INTERIOR];
      }
    }
  }
}

- (void)computeDisjointIMWithComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im {
  ComVividsolutionsJtsOperationRelateRelateComputer_computeDisjointIMWithComVividsolutionsJtsGeomIntersectionMatrix_(self, im);
}

- (void)labelNodeEdges {
  ComVividsolutionsJtsOperationRelateRelateComputer_labelNodeEdges(self);
}

- (void)updateIMWithComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im {
  ComVividsolutionsJtsOperationRelateRelateComputer_updateIMWithComVividsolutionsJtsGeomIntersectionMatrix_(self, im);
}

- (void)labelIsolatedEdgesWithInt:(jint)thisIndex
                          withInt:(jint)targetIndex {
  ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgesWithInt_withInt_(self, thisIndex, targetIndex);
}

- (void)labelIsolatedEdgeWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *)e
                                                       withInt:(jint)targetIndex
                          withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)target {
  ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgeWithComVividsolutionsJtsGeomgraphEdge_withInt_withComVividsolutionsJtsGeomGeometry_(self, e, targetIndex, target);
}

- (void)labelIsolatedNodes {
  ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodes(self);
}

- (void)labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode:(ComVividsolutionsJtsGeomgraphNode *)n
                                                       withInt:(jint)targetIndex {
  ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode_withInt_(self, n, targetIndex);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomgraphGeometryGraphArray:", "RelateComputer", NULL, 0x1, NULL, NULL },
    { "computeIM", NULL, "Lcom.vividsolutions.jts.geom.IntersectionMatrix;", 0x1, NULL, NULL },
    { "insertEdgeEndsWithJavaUtilList:", "insertEdgeEnds", "V", 0x2, NULL, NULL },
    { "computeProperIntersectionIMWithComVividsolutionsJtsGeomgraphIndexSegmentIntersector:withComVividsolutionsJtsGeomIntersectionMatrix:", "computeProperIntersectionIM", "V", 0x2, NULL, NULL },
    { "copyNodesAndLabelsWithInt:", "copyNodesAndLabels", "V", 0x2, NULL, NULL },
    { "computeIntersectionNodesWithInt:", "computeIntersectionNodes", "V", 0x2, NULL, NULL },
    { "labelIntersectionNodesWithInt:", "labelIntersectionNodes", "V", 0x2, NULL, NULL },
    { "computeDisjointIMWithComVividsolutionsJtsGeomIntersectionMatrix:", "computeDisjointIM", "V", 0x2, NULL, NULL },
    { "labelNodeEdges", NULL, "V", 0x2, NULL, NULL },
    { "updateIMWithComVividsolutionsJtsGeomIntersectionMatrix:", "updateIM", "V", 0x2, NULL, NULL },
    { "labelIsolatedEdgesWithInt:withInt:", "labelIsolatedEdges", "V", 0x2, NULL, NULL },
    { "labelIsolatedEdgeWithComVividsolutionsJtsGeomgraphEdge:withInt:withComVividsolutionsJtsGeomGeometry:", "labelIsolatedEdge", "V", 0x2, NULL, NULL },
    { "labelIsolatedNodes", NULL, "V", 0x2, NULL, NULL },
    { "labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode:withInt:", "labelIsolatedNode", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "li_", NULL, 0x2, "Lcom.vividsolutions.jts.algorithm.LineIntersector;", NULL, NULL,  },
    { "ptLocator_", NULL, 0x2, "Lcom.vividsolutions.jts.algorithm.PointLocator;", NULL, NULL,  },
    { "arg_", NULL, 0x2, "[Lcom.vividsolutions.jts.geomgraph.GeometryGraph;", NULL, NULL,  },
    { "nodes_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.NodeMap;", NULL, NULL,  },
    { "im_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.IntersectionMatrix;", NULL, NULL,  },
    { "isolatedEdges_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, NULL,  },
    { "invalidPoint_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationRelateRelateComputer = { 2, "RelateComputer", "com.vividsolutions.jts.operation.relate", NULL, 0x1, 14, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationRelateRelateComputer;
}

@end

void ComVividsolutionsJtsOperationRelateRelateComputer_initWithComVividsolutionsJtsGeomgraphGeometryGraphArray_(ComVividsolutionsJtsOperationRelateRelateComputer *self, IOSObjectArray *arg) {
  (void) NSObject_init(self);
  self->li_ = new_ComVividsolutionsJtsAlgorithmRobustLineIntersector_init();
  self->ptLocator_ = new_ComVividsolutionsJtsAlgorithmPointLocator_init();
  self->nodes_ = new_ComVividsolutionsJtsGeomgraphNodeMap_initWithComVividsolutionsJtsGeomgraphNodeFactory_(new_ComVividsolutionsJtsOperationRelateRelateNodeFactory_init());
  self->im_ = nil;
  self->isolatedEdges_ = new_JavaUtilArrayList_init();
  self->arg_ = arg;
}

ComVividsolutionsJtsOperationRelateRelateComputer *new_ComVividsolutionsJtsOperationRelateRelateComputer_initWithComVividsolutionsJtsGeomgraphGeometryGraphArray_(IOSObjectArray *arg) {
  ComVividsolutionsJtsOperationRelateRelateComputer *self = [ComVividsolutionsJtsOperationRelateRelateComputer alloc];
  ComVividsolutionsJtsOperationRelateRelateComputer_initWithComVividsolutionsJtsGeomgraphGeometryGraphArray_(self, arg);
  return self;
}

void ComVividsolutionsJtsOperationRelateRelateComputer_insertEdgeEndsWithJavaUtilList_(ComVividsolutionsJtsOperationRelateRelateComputer *self, id<JavaUtilList> ee) {
  for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk(ee)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphEdgeEnd *e = (ComVividsolutionsJtsGeomgraphEdgeEnd *) check_class_cast([i next], [ComVividsolutionsJtsGeomgraphEdgeEnd class]);
    [((ComVividsolutionsJtsGeomgraphNodeMap *) nil_chk(self->nodes_)) addWithComVividsolutionsJtsGeomgraphEdgeEnd:e];
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_computeProperIntersectionIMWithComVividsolutionsJtsGeomgraphIndexSegmentIntersector_withComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *intersector, ComVividsolutionsJtsGeomIntersectionMatrix *im) {
  jint dimA = [((ComVividsolutionsJtsGeomGeometry *) nil_chk([((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(self->arg_), 0))) getGeometry])) getDimension];
  jint dimB = [((ComVividsolutionsJtsGeomGeometry *) nil_chk([((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(self->arg_, 1))) getGeometry])) getDimension];
  jboolean hasProper = [((ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *) nil_chk(intersector)) hasProperIntersection];
  jboolean hasProperInterior = [intersector hasProperInteriorIntersection];
  if (dimA == 2 && dimB == 2) {
    if (hasProper) [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setAtLeastWithNSString:@"212101212"];
  }
  else if (dimA == 2 && dimB == 1) {
    if (hasProper) [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setAtLeastWithNSString:@"FFF0FFFF2"];
    if (hasProperInterior) [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setAtLeastWithNSString:@"1FFFFF1FF"];
  }
  else if (dimA == 1 && dimB == 2) {
    if (hasProper) [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setAtLeastWithNSString:@"F0FFFFFF2"];
    if (hasProperInterior) [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setAtLeastWithNSString:@"1F1FFFFFF"];
  }
  else if (dimA == 1 && dimB == 1) {
    if (hasProperInterior) [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setAtLeastWithNSString:@"0FFFFFFFF"];
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_copyNodesAndLabelsWithInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, jint argIndex) {
  for (id<JavaUtilIterator> i = [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(self->arg_), argIndex))) getNodeIterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphNode *graphNode = (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([i next], [ComVividsolutionsJtsGeomgraphNode class]);
    ComVividsolutionsJtsGeomgraphNode *newNode = [((ComVividsolutionsJtsGeomgraphNodeMap *) nil_chk(self->nodes_)) addNodeWithComVividsolutionsJtsGeomCoordinate:[((ComVividsolutionsJtsGeomgraphNode *) nil_chk(graphNode)) getCoordinate]];
    [((ComVividsolutionsJtsGeomgraphNode *) nil_chk(newNode)) setLabelWithInt:argIndex withInt:[((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([graphNode getLabel])) getLocationWithInt:argIndex]];
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_computeIntersectionNodesWithInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, jint argIndex) {
  for (id<JavaUtilIterator> i = [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(self->arg_), argIndex))) getEdgeIterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphEdge *e = (ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([i next], [ComVividsolutionsJtsGeomgraphEdge class]);
    jint eLoc = [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getLabel])) getLocationWithInt:argIndex];
    for (id<JavaUtilIterator> eiIt = [((ComVividsolutionsJtsGeomgraphEdgeIntersectionList *) nil_chk([e getEdgeIntersectionList])) iterator]; [((id<JavaUtilIterator>) nil_chk(eiIt)) hasNext]; ) {
      ComVividsolutionsJtsGeomgraphEdgeIntersection *ei = (ComVividsolutionsJtsGeomgraphEdgeIntersection *) check_class_cast([eiIt next], [ComVividsolutionsJtsGeomgraphEdgeIntersection class]);
      ComVividsolutionsJtsOperationRelateRelateNode *n = (ComVividsolutionsJtsOperationRelateRelateNode *) check_class_cast([((ComVividsolutionsJtsGeomgraphNodeMap *) nil_chk(self->nodes_)) addNodeWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomgraphEdgeIntersection *) nil_chk(ei))->coord_], [ComVividsolutionsJtsOperationRelateRelateNode class]);
      if (eLoc == ComVividsolutionsJtsGeomLocation_BOUNDARY) [((ComVividsolutionsJtsOperationRelateRelateNode *) nil_chk(n)) setLabelBoundaryWithInt:argIndex];
      else {
        if ([((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([((ComVividsolutionsJtsOperationRelateRelateNode *) nil_chk(n)) getLabel])) isNullWithInt:argIndex]) [n setLabelWithInt:argIndex withInt:ComVividsolutionsJtsGeomLocation_INTERIOR];
      }
    }
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_computeDisjointIMWithComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomIntersectionMatrix *im) {
  ComVividsolutionsJtsGeomGeometry *ga = [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(self->arg_), 0))) getGeometry];
  if (![((ComVividsolutionsJtsGeomGeometry *) nil_chk(ga)) isEmpty]) {
    [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setWithInt:ComVividsolutionsJtsGeomLocation_INTERIOR withInt:ComVividsolutionsJtsGeomLocation_EXTERIOR withInt:[ga getDimension]];
    [im setWithInt:ComVividsolutionsJtsGeomLocation_BOUNDARY withInt:ComVividsolutionsJtsGeomLocation_EXTERIOR withInt:[ga getBoundaryDimension]];
  }
  ComVividsolutionsJtsGeomGeometry *gb = [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(self->arg_, 1))) getGeometry];
  if (![((ComVividsolutionsJtsGeomGeometry *) nil_chk(gb)) isEmpty]) {
    [((ComVividsolutionsJtsGeomIntersectionMatrix *) nil_chk(im)) setWithInt:ComVividsolutionsJtsGeomLocation_EXTERIOR withInt:ComVividsolutionsJtsGeomLocation_INTERIOR withInt:[gb getDimension]];
    [im setWithInt:ComVividsolutionsJtsGeomLocation_EXTERIOR withInt:ComVividsolutionsJtsGeomLocation_BOUNDARY withInt:[gb getBoundaryDimension]];
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_labelNodeEdges(ComVividsolutionsJtsOperationRelateRelateComputer *self) {
  for (id<JavaUtilIterator> ni = [((ComVividsolutionsJtsGeomgraphNodeMap *) nil_chk(self->nodes_)) iterator]; [((id<JavaUtilIterator>) nil_chk(ni)) hasNext]; ) {
    ComVividsolutionsJtsOperationRelateRelateNode *node = (ComVividsolutionsJtsOperationRelateRelateNode *) check_class_cast([ni next], [ComVividsolutionsJtsOperationRelateRelateNode class]);
    [((ComVividsolutionsJtsGeomgraphEdgeEndStar *) nil_chk([((ComVividsolutionsJtsOperationRelateRelateNode *) nil_chk(node)) getEdges])) computeLabellingWithComVividsolutionsJtsGeomgraphGeometryGraphArray:self->arg_];
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_updateIMWithComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomIntersectionMatrix *im) {
  for (id<JavaUtilIterator> ei = [((JavaUtilArrayList *) nil_chk(self->isolatedEdges_)) iterator]; [((id<JavaUtilIterator>) nil_chk(ei)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphEdge *e = (ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([ei next], [ComVividsolutionsJtsGeomgraphEdge class]);
    [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) updateIMWithComVividsolutionsJtsGeomIntersectionMatrix:im];
  }
  for (id<JavaUtilIterator> ni = [((ComVividsolutionsJtsGeomgraphNodeMap *) nil_chk(self->nodes_)) iterator]; [((id<JavaUtilIterator>) nil_chk(ni)) hasNext]; ) {
    ComVividsolutionsJtsOperationRelateRelateNode *node = (ComVividsolutionsJtsOperationRelateRelateNode *) check_class_cast([ni next], [ComVividsolutionsJtsOperationRelateRelateNode class]);
    [((ComVividsolutionsJtsOperationRelateRelateNode *) nil_chk(node)) updateIMWithComVividsolutionsJtsGeomIntersectionMatrix:im];
    [node updateIMFromEdgesWithComVividsolutionsJtsGeomIntersectionMatrix:im];
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgesWithInt_withInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, jint thisIndex, jint targetIndex) {
  for (id<JavaUtilIterator> ei = [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(self->arg_), thisIndex))) getEdgeIterator]; [((id<JavaUtilIterator>) nil_chk(ei)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphEdge *e = (ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([ei next], [ComVividsolutionsJtsGeomgraphEdge class]);
    if ([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) isIsolated]) {
      ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgeWithComVividsolutionsJtsGeomgraphEdge_withInt_withComVividsolutionsJtsGeomGeometry_(self, e, targetIndex, [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(self->arg_, targetIndex))) getGeometry]);
      [((JavaUtilArrayList *) nil_chk(self->isolatedEdges_)) addWithId:e];
    }
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedEdgeWithComVividsolutionsJtsGeomgraphEdge_withInt_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomgraphEdge *e, jint targetIndex, ComVividsolutionsJtsGeomGeometry *target) {
  if ([((ComVividsolutionsJtsGeomGeometry *) nil_chk(target)) getDimension] > 0) {
    jint loc = [((ComVividsolutionsJtsAlgorithmPointLocator *) nil_chk(self->ptLocator_)) locateWithComVividsolutionsJtsGeomCoordinate:[((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getCoordinate] withComVividsolutionsJtsGeomGeometry:target];
    [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([e getLabel])) setAllLocationsWithInt:targetIndex withInt:loc];
  }
  else {
    [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getLabel])) setAllLocationsWithInt:targetIndex withInt:ComVividsolutionsJtsGeomLocation_EXTERIOR];
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodes(ComVividsolutionsJtsOperationRelateRelateComputer *self) {
  for (id<JavaUtilIterator> ni = [((ComVividsolutionsJtsGeomgraphNodeMap *) nil_chk(self->nodes_)) iterator]; [((id<JavaUtilIterator>) nil_chk(ni)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphNode *n = (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([ni next], [ComVividsolutionsJtsGeomgraphNode class]);
    ComVividsolutionsJtsGeomgraphLabel *label = [((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n)) getLabel];
    ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_withNSString_([((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label)) getGeometryCount] > 0, @"node with empty label found");
    if ([n isIsolated]) {
      if ([label isNullWithInt:0]) ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode_withInt_(self, n, 0);
      else ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode_withInt_(self, n, 1);
    }
  }
}

void ComVividsolutionsJtsOperationRelateRelateComputer_labelIsolatedNodeWithComVividsolutionsJtsGeomgraphNode_withInt_(ComVividsolutionsJtsOperationRelateRelateComputer *self, ComVividsolutionsJtsGeomgraphNode *n, jint targetIndex) {
  jint loc = [((ComVividsolutionsJtsAlgorithmPointLocator *) nil_chk(self->ptLocator_)) locateWithComVividsolutionsJtsGeomCoordinate:[((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n)) getCoordinate] withComVividsolutionsJtsGeomGeometry:[((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(self->arg_), targetIndex))) getGeometry]];
  [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([n getLabel])) setAllLocationsWithInt:targetIndex withInt:loc];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationRelateRelateComputer)
