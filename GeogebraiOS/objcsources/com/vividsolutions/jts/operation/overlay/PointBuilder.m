//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/operation/overlay/PointBuilder.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/PointLocator.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/Point.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEndStar.h"
#include "com/vividsolutions/jts/geomgraph/Label.h"
#include "com/vividsolutions/jts/geomgraph/Node.h"
#include "com/vividsolutions/jts/geomgraph/PlanarGraph.h"
#include "com/vividsolutions/jts/operation/overlay/OverlayOp.h"
#include "com/vividsolutions/jts/operation/overlay/PointBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsOperationOverlayPointBuilder () {
 @public
  ComVividsolutionsJtsOperationOverlayOverlayOp *op_;
  ComVividsolutionsJtsGeomGeometryFactory *geometryFactory_;
  id<JavaUtilList> resultPointList_;
}

- (void)extractNonCoveredResultNodesWithInt:(jint)opCode;

- (void)filterCoveredNodeToPointWithComVividsolutionsJtsGeomgraphNode:(ComVividsolutionsJtsGeomgraphNode *)n;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlayPointBuilder, op_, ComVividsolutionsJtsOperationOverlayOverlayOp *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlayPointBuilder, geometryFactory_, ComVividsolutionsJtsGeomGeometryFactory *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlayPointBuilder, resultPointList_, id<JavaUtilList>)

__attribute__((unused)) static void ComVividsolutionsJtsOperationOverlayPointBuilder_extractNonCoveredResultNodesWithInt_(ComVividsolutionsJtsOperationOverlayPointBuilder *self, jint opCode);

__attribute__((unused)) static void ComVividsolutionsJtsOperationOverlayPointBuilder_filterCoveredNodeToPointWithComVividsolutionsJtsGeomgraphNode_(ComVividsolutionsJtsOperationOverlayPointBuilder *self, ComVividsolutionsJtsGeomgraphNode *n);

@implementation ComVividsolutionsJtsOperationOverlayPointBuilder

- (instancetype)initWithComVividsolutionsJtsOperationOverlayOverlayOp:(ComVividsolutionsJtsOperationOverlayOverlayOp *)op
                          withComVividsolutionsJtsGeomGeometryFactory:(ComVividsolutionsJtsGeomGeometryFactory *)geometryFactory
                        withComVividsolutionsJtsAlgorithmPointLocator:(ComVividsolutionsJtsAlgorithmPointLocator *)ptLocator {
  ComVividsolutionsJtsOperationOverlayPointBuilder_initWithComVividsolutionsJtsOperationOverlayOverlayOp_withComVividsolutionsJtsGeomGeometryFactory_withComVividsolutionsJtsAlgorithmPointLocator_(self, op, geometryFactory, ptLocator);
  return self;
}

- (id<JavaUtilList>)buildWithInt:(jint)opCode {
  ComVividsolutionsJtsOperationOverlayPointBuilder_extractNonCoveredResultNodesWithInt_(self, opCode);
  return resultPointList_;
}

- (void)extractNonCoveredResultNodesWithInt:(jint)opCode {
  ComVividsolutionsJtsOperationOverlayPointBuilder_extractNonCoveredResultNodesWithInt_(self, opCode);
}

- (void)filterCoveredNodeToPointWithComVividsolutionsJtsGeomgraphNode:(ComVividsolutionsJtsGeomgraphNode *)n {
  ComVividsolutionsJtsOperationOverlayPointBuilder_filterCoveredNodeToPointWithComVividsolutionsJtsGeomgraphNode_(self, n);
}

- (void)dealloc {
  RELEASE_(op_);
  RELEASE_(geometryFactory_);
  RELEASE_(resultPointList_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsOperationOverlayOverlayOp:withComVividsolutionsJtsGeomGeometryFactory:withComVividsolutionsJtsAlgorithmPointLocator:", "PointBuilder", NULL, 0x1, NULL, NULL },
    { "buildWithInt:", "build", "Ljava.util.List;", 0x1, NULL, NULL },
    { "extractNonCoveredResultNodesWithInt:", "extractNonCoveredResultNodes", "V", 0x2, NULL, NULL },
    { "filterCoveredNodeToPointWithComVividsolutionsJtsGeomgraphNode:", "filterCoveredNodeToPoint", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "op_", NULL, 0x2, "Lcom.vividsolutions.jts.operation.overlay.OverlayOp;", NULL, NULL,  },
    { "geometryFactory_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.GeometryFactory;", NULL, NULL,  },
    { "resultPointList_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationOverlayPointBuilder = { 2, "PointBuilder", "com.vividsolutions.jts.operation.overlay", NULL, 0x1, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationOverlayPointBuilder;
}

@end

void ComVividsolutionsJtsOperationOverlayPointBuilder_initWithComVividsolutionsJtsOperationOverlayOverlayOp_withComVividsolutionsJtsGeomGeometryFactory_withComVividsolutionsJtsAlgorithmPointLocator_(ComVividsolutionsJtsOperationOverlayPointBuilder *self, ComVividsolutionsJtsOperationOverlayOverlayOp *op, ComVividsolutionsJtsGeomGeometryFactory *geometryFactory, ComVividsolutionsJtsAlgorithmPointLocator *ptLocator) {
  NSObject_init(self);
  ComVividsolutionsJtsOperationOverlayPointBuilder_setAndConsume_resultPointList_(self, new_JavaUtilArrayList_init());
  ComVividsolutionsJtsOperationOverlayPointBuilder_set_op_(self, op);
  ComVividsolutionsJtsOperationOverlayPointBuilder_set_geometryFactory_(self, geometryFactory);
}

ComVividsolutionsJtsOperationOverlayPointBuilder *new_ComVividsolutionsJtsOperationOverlayPointBuilder_initWithComVividsolutionsJtsOperationOverlayOverlayOp_withComVividsolutionsJtsGeomGeometryFactory_withComVividsolutionsJtsAlgorithmPointLocator_(ComVividsolutionsJtsOperationOverlayOverlayOp *op, ComVividsolutionsJtsGeomGeometryFactory *geometryFactory, ComVividsolutionsJtsAlgorithmPointLocator *ptLocator) {
  ComVividsolutionsJtsOperationOverlayPointBuilder *self = [ComVividsolutionsJtsOperationOverlayPointBuilder alloc];
  ComVividsolutionsJtsOperationOverlayPointBuilder_initWithComVividsolutionsJtsOperationOverlayOverlayOp_withComVividsolutionsJtsGeomGeometryFactory_withComVividsolutionsJtsAlgorithmPointLocator_(self, op, geometryFactory, ptLocator);
  return self;
}

void ComVividsolutionsJtsOperationOverlayPointBuilder_extractNonCoveredResultNodesWithInt_(ComVividsolutionsJtsOperationOverlayPointBuilder *self, jint opCode) {
  for (id<JavaUtilIterator> nodeit = [((id<JavaUtilCollection>) nil_chk([((ComVividsolutionsJtsGeomgraphPlanarGraph *) nil_chk([((ComVividsolutionsJtsOperationOverlayOverlayOp *) nil_chk(self->op_)) getGraph])) getNodes])) iterator]; [((id<JavaUtilIterator>) nil_chk(nodeit)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphNode *n = (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([nodeit next], [ComVividsolutionsJtsGeomgraphNode class]);
    if ([((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n)) isInResult]) continue;
    if ([n isIncidentEdgeInResult]) continue;
    if ([((ComVividsolutionsJtsGeomgraphEdgeEndStar *) nil_chk([n getEdges])) getDegree] == 0 || opCode == ComVividsolutionsJtsOperationOverlayOverlayOp_INTERSECTION) {
      ComVividsolutionsJtsGeomgraphLabel *label = [n getLabel];
      if (ComVividsolutionsJtsOperationOverlayOverlayOp_isResultOfOpWithComVividsolutionsJtsGeomgraphLabel_withInt_(label, opCode)) {
        ComVividsolutionsJtsOperationOverlayPointBuilder_filterCoveredNodeToPointWithComVividsolutionsJtsGeomgraphNode_(self, n);
      }
    }
  }
}

void ComVividsolutionsJtsOperationOverlayPointBuilder_filterCoveredNodeToPointWithComVividsolutionsJtsGeomgraphNode_(ComVividsolutionsJtsOperationOverlayPointBuilder *self, ComVividsolutionsJtsGeomgraphNode *n) {
  ComVividsolutionsJtsGeomCoordinate *coord = [((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n)) getCoordinate];
  if (![((ComVividsolutionsJtsOperationOverlayOverlayOp *) nil_chk(self->op_)) isCoveredByLAWithComVividsolutionsJtsGeomCoordinate:coord]) {
    ComVividsolutionsJtsGeomPoint *pt = [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(self->geometryFactory_)) createPointWithComVividsolutionsJtsGeomCoordinate:coord];
    [((id<JavaUtilList>) nil_chk(self->resultPointList_)) addWithId:pt];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationOverlayPointBuilder)
