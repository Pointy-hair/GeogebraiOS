//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/operation/overlay/snap/GeometrySnapper.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/CoordinateSequence.h"
#include "com/vividsolutions/jts/geom/CoordinateSequenceFactory.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/PrecisionModel.h"
#include "com/vividsolutions/jts/geom/util/GeometryTransformer.h"
#include "com/vividsolutions/jts/operation/overlay/snap/GeometrySnapper.h"
#include "com/vividsolutions/jts/operation/overlay/snap/LineStringSnapper.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"

#define ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_SNAP_PRECISION_FACTOR 1.0E-9

@interface ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper () {
 @public
  ComVividsolutionsJtsGeomGeometry *srcGeom_;
}

- (jdouble)computeSnapToleranceWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)ringPts;

- (jdouble)computeMinimumSegmentLengthWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper, srcGeom_, ComVividsolutionsJtsGeomGeometry *)

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper, SNAP_PRECISION_FACTOR, jdouble)

__attribute__((unused)) static jdouble ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeMinimumSegmentLengthWithComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper *self, IOSObjectArray *pts);

@interface ComVividsolutionsJtsOperationOverlaySnapSnapTransformer ()

- (IOSObjectArray *)snapLineWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)srcPts
                            withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts;

@end

__attribute__((unused)) static IOSObjectArray *ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_snapLineWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapSnapTransformer *self, IOSObjectArray *srcPts, IOSObjectArray *snapPts);

@implementation ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper

+ (jdouble)computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g {
  return ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry_(g);
}

+ (jdouble)computeSizeBasedSnapToleranceWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g {
  return ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeSizeBasedSnapToleranceWithComVividsolutionsJtsGeomGeometry_(g);
}

+ (jdouble)computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                                      withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1 {
  return ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1);
}

+ (IOSObjectArray *)snapWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                        withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1
                                                  withDouble:(jdouble)snapTolerance {
  return ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_snapWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(g0, g1, snapTolerance);
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)srcGeom {
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initWithComVividsolutionsJtsGeomGeometry_(self, srcGeom);
  return self;
}

- (jdouble)computeSnapToleranceWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)ringPts {
  jdouble minSegLen = ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeMinimumSegmentLengthWithComVividsolutionsJtsGeomCoordinateArray_(self, ringPts);
  jdouble snapTol = minSegLen / 10;
  return snapTol;
}

- (jdouble)computeMinimumSegmentLengthWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  return ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeMinimumSegmentLengthWithComVividsolutionsJtsGeomCoordinateArray_(self, pts);
}

- (ComVividsolutionsJtsGeomGeometry *)snapToWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)snapGeom
                                                                      withDouble:(jdouble)snapTolerance {
  IOSObjectArray *snapPts = [self extractTargetCoordinatesWithComVividsolutionsJtsGeomGeometry:snapGeom];
  ComVividsolutionsJtsOperationOverlaySnapSnapTransformer *snapTrans = new_ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_initWithDouble_withComVividsolutionsJtsGeomCoordinateArray_(snapTolerance, snapPts);
  return [snapTrans transformWithComVividsolutionsJtsGeomGeometry:srcGeom_];
}

- (IOSObjectArray *)extractTargetCoordinatesWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g {
  id<JavaUtilSet> ptSet = new_JavaUtilTreeSet_init();
  IOSObjectArray *pts = [((ComVividsolutionsJtsGeomGeometry *) nil_chk(g)) getCoordinates];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(pts))->size_; i++) {
    [ptSet addWithId:IOSObjectArray_Get(pts, i)];
  }
  return (IOSObjectArray *) check_class_cast([ptSet toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:ComVividsolutionsJtsGeomCoordinate_class_()]], [IOSObjectArray class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry:", "computeOverlaySnapTolerance", "D", 0x9, NULL, NULL },
    { "computeSizeBasedSnapToleranceWithComVividsolutionsJtsGeomGeometry:", "computeSizeBasedSnapTolerance", "D", 0x9, NULL, NULL },
    { "computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "computeOverlaySnapTolerance", "D", 0x9, NULL, NULL },
    { "snapWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:withDouble:", "snap", "[Lcom.vividsolutions.jts.geom.Geometry;", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:", "GeometrySnapper", NULL, 0x1, NULL, NULL },
    { "computeSnapToleranceWithComVividsolutionsJtsGeomCoordinateArray:", "computeSnapTolerance", "D", 0x2, NULL, NULL },
    { "computeMinimumSegmentLengthWithComVividsolutionsJtsGeomCoordinateArray:", "computeMinimumSegmentLength", "D", 0x2, NULL, NULL },
    { "snapToWithComVividsolutionsJtsGeomGeometry:withDouble:", "snapTo", "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
    { "extractTargetCoordinatesWithComVividsolutionsJtsGeomGeometry:", "extractTargetCoordinates", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SNAP_PRECISION_FACTOR_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_SNAP_PRECISION_FACTOR },
    { "srcGeom_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper = { 2, "GeometrySnapper", "com.vividsolutions.jts.operation.overlay.snap", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper;
}

@end

jdouble ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g) {
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initialize();
  jdouble snapTolerance = ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeSizeBasedSnapToleranceWithComVividsolutionsJtsGeomGeometry_(g);
  ComVividsolutionsJtsGeomPrecisionModel *pm = [((ComVividsolutionsJtsGeomGeometry *) nil_chk(g)) getPrecisionModel];
  if ([((ComVividsolutionsJtsGeomPrecisionModel *) nil_chk(pm)) getType] == ComVividsolutionsJtsGeomPrecisionModel_get_FIXED_()) {
    jdouble fixedSnapTol = (1 / [pm getScale]) * 2 / 1.415;
    if (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;
  }
  return snapTolerance;
}

jdouble ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeSizeBasedSnapToleranceWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g) {
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initialize();
  ComVividsolutionsJtsGeomEnvelope *env = [((ComVividsolutionsJtsGeomGeometry *) nil_chk(g)) getEnvelopeInternal];
  jdouble minDimension = JavaLangMath_minWithDouble_withDouble_([((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env)) getHeight], [env getWidth]);
  jdouble snapTol = minDimension * ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_SNAP_PRECISION_FACTOR;
  return snapTol;
}

jdouble ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initialize();
  return JavaLangMath_minWithDouble_withDouble_(ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry_(g0), ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeOverlaySnapToleranceWithComVividsolutionsJtsGeomGeometry_(g1));
}

IOSObjectArray *ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_snapWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1, jdouble snapTolerance) {
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initialize();
  IOSObjectArray *snapGeom = [IOSObjectArray newArrayWithLength:2 type:ComVividsolutionsJtsGeomGeometry_class_()];
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper *snapper0 = new_ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initWithComVividsolutionsJtsGeomGeometry_(g0);
  (void) IOSObjectArray_Set(snapGeom, 0, [snapper0 snapToWithComVividsolutionsJtsGeomGeometry:g1 withDouble:snapTolerance]);
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper *snapper1 = new_ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initWithComVividsolutionsJtsGeomGeometry_(g1);
  (void) IOSObjectArray_Set(snapGeom, 1, [snapper1 snapToWithComVividsolutionsJtsGeomGeometry:IOSObjectArray_Get(snapGeom, 0) withDouble:snapTolerance]);
  return snapGeom;
}

void ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper *self, ComVividsolutionsJtsGeomGeometry *srcGeom) {
  (void) NSObject_init(self);
  self->srcGeom_ = srcGeom;
}

ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper *new_ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *srcGeom) {
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper *self = [ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper alloc];
  ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_initWithComVividsolutionsJtsGeomGeometry_(self, srcGeom);
  return self;
}

jdouble ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper_computeMinimumSegmentLengthWithComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper *self, IOSObjectArray *pts) {
  jdouble minSegLen = JavaLangDouble_MAX_VALUE;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(pts))->size_ - 1; i++) {
    jdouble segLen = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts, i))) distanceWithComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(pts, i + 1)];
    if (segLen < minSegLen) minSegLen = segLen;
  }
  return minSegLen;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationOverlaySnapGeometrySnapper)

@implementation ComVividsolutionsJtsOperationOverlaySnapSnapTransformer

- (instancetype)initWithDouble:(jdouble)snapTolerance
withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts {
  ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_initWithDouble_withComVividsolutionsJtsGeomCoordinateArray_(self, snapTolerance, snapPts);
  return self;
}

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coords
                                                                                withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  IOSObjectArray *srcPts = [((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(coords)) toCoordinateArray];
  IOSObjectArray *newPts = ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_snapLineWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(self, srcPts, snapPts_);
  return [((id<ComVividsolutionsJtsGeomCoordinateSequenceFactory>) nil_chk([((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) getCoordinateSequenceFactory])) createWithComVividsolutionsJtsGeomCoordinateArray:newPts];
}

- (IOSObjectArray *)snapLineWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)srcPts
                            withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)snapPts {
  return ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_snapLineWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(self, srcPts, snapPts);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withComVividsolutionsJtsGeomCoordinateArray:", "SnapTransformer", NULL, 0x0, NULL, NULL },
    { "transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:withComVividsolutionsJtsGeomGeometry:", "transformCoordinates", "Lcom.vividsolutions.jts.geom.CoordinateSequence;", 0x4, NULL, NULL },
    { "snapLineWithComVividsolutionsJtsGeomCoordinateArray:withComVividsolutionsJtsGeomCoordinateArray:", "snapLine", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "snapTolerance_", NULL, 0x0, "D", NULL, NULL,  },
    { "snapPts_", NULL, 0x0, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationOverlaySnapSnapTransformer = { 2, "SnapTransformer", "com.vividsolutions.jts.operation.overlay.snap", NULL, 0x0, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationOverlaySnapSnapTransformer;
}

@end

void ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_initWithDouble_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapSnapTransformer *self, jdouble snapTolerance, IOSObjectArray *snapPts) {
  (void) ComVividsolutionsJtsGeomUtilGeometryTransformer_init(self);
  self->snapTolerance_ = snapTolerance;
  self->snapPts_ = snapPts;
}

ComVividsolutionsJtsOperationOverlaySnapSnapTransformer *new_ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_initWithDouble_withComVividsolutionsJtsGeomCoordinateArray_(jdouble snapTolerance, IOSObjectArray *snapPts) {
  ComVividsolutionsJtsOperationOverlaySnapSnapTransformer *self = [ComVividsolutionsJtsOperationOverlaySnapSnapTransformer alloc];
  ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_initWithDouble_withComVividsolutionsJtsGeomCoordinateArray_(self, snapTolerance, snapPts);
  return self;
}

IOSObjectArray *ComVividsolutionsJtsOperationOverlaySnapSnapTransformer_snapLineWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationOverlaySnapSnapTransformer *self, IOSObjectArray *srcPts, IOSObjectArray *snapPts) {
  ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper *snapper = new_ComVividsolutionsJtsOperationOverlaySnapLineStringSnapper_initWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(srcPts, self->snapTolerance_);
  return [snapper snapToWithComVividsolutionsJtsGeomCoordinateArray:snapPts];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationOverlaySnapSnapTransformer)
