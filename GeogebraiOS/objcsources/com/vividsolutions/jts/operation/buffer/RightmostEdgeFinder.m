//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/operation/buffer/RightmostEdgeFinder.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/CGAlgorithms.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geomgraph/DirectedEdge.h"
#include "com/vividsolutions/jts/geomgraph/DirectedEdgeStar.h"
#include "com/vividsolutions/jts/geomgraph/Edge.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEndStar.h"
#include "com/vividsolutions/jts/geomgraph/Node.h"
#include "com/vividsolutions/jts/geomgraph/Position.h"
#include "com/vividsolutions/jts/operation/buffer/RightmostEdgeFinder.h"
#include "com/vividsolutions/jts/util/Assert.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsOperationBufferRightmostEdgeFinder () {
 @public
  jint minIndex_;
  ComVividsolutionsJtsGeomCoordinate *minCoord_;
  ComVividsolutionsJtsGeomgraphDirectedEdge *minDe_;
  ComVividsolutionsJtsGeomgraphDirectedEdge *orientedDe_;
}

- (void)findRightmostEdgeAtNode;

- (void)findRightmostEdgeAtVertex;

- (void)checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de;

- (jint)getRightmostSideWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de
                                                              withInt:(jint)index;

- (jint)getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de
                                                                       withInt:(jint)i;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder, minCoord_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder, minDe_, ComVividsolutionsJtsGeomgraphDirectedEdge *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder, orientedDe_, ComVividsolutionsJtsGeomgraphDirectedEdge *)

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtNode(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtVertex(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge_(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self, ComVividsolutionsJtsGeomgraphDirectedEdge *de);

__attribute__((unused)) static jint ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self, ComVividsolutionsJtsGeomgraphDirectedEdge *de, jint index);

__attribute__((unused)) static jint ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self, ComVividsolutionsJtsGeomgraphDirectedEdge *de, jint i);

@implementation ComVividsolutionsJtsOperationBufferRightmostEdgeFinder

- (instancetype)init {
  ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_init(self);
  return self;
}

- (ComVividsolutionsJtsGeomgraphDirectedEdge *)getEdge {
  return orientedDe_;
}

- (ComVividsolutionsJtsGeomCoordinate *)getCoordinate {
  return minCoord_;
}

- (void)findEdgeWithJavaUtilList:(id<JavaUtilList>)dirEdgeList {
  for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk(dirEdgeList)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphDirectedEdge *de = (ComVividsolutionsJtsGeomgraphDirectedEdge *) check_class_cast([i next], [ComVividsolutionsJtsGeomgraphDirectedEdge class]);
    if (![((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) isForward]) continue;
    ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge_(self, de);
  }
  ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_withNSString_(minIndex_ != 0 || [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(minCoord_)) isEqual:[((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(minDe_)) getCoordinate]], @"inconsistency in rightmost processing");
  if (minIndex_ == 0) {
    ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtNode(self);
  }
  else {
    ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtVertex(self);
  }
  orientedDe_ = minDe_;
  jint rightmostSide = ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(self, minDe_, minIndex_);
  if (rightmostSide == ComVividsolutionsJtsGeomgraphPosition_LEFT) {
    orientedDe_ = [((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(minDe_)) getSym];
  }
}

- (void)findRightmostEdgeAtNode {
  ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtNode(self);
}

- (void)findRightmostEdgeAtVertex {
  ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtVertex(self);
}

- (void)checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de {
  ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge_(self, de);
}

- (jint)getRightmostSideWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de
                                                              withInt:(jint)index {
  return ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(self, de, index);
}

- (jint)getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de
                                                                       withInt:(jint)i {
  return ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(self, de, i);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "RightmostEdgeFinder", NULL, 0x1, NULL, NULL },
    { "getEdge", NULL, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", 0x1, NULL, NULL },
    { "getCoordinate", NULL, "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "findEdgeWithJavaUtilList:", "findEdge", "V", 0x1, NULL, NULL },
    { "findRightmostEdgeAtNode", NULL, "V", 0x2, NULL, NULL },
    { "findRightmostEdgeAtVertex", NULL, "V", 0x2, NULL, NULL },
    { "checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge:", "checkForRightmostCoordinate", "V", 0x2, NULL, NULL },
    { "getRightmostSideWithComVividsolutionsJtsGeomgraphDirectedEdge:withInt:", "getRightmostSide", "I", 0x2, NULL, NULL },
    { "getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge:withInt:", "getRightmostSideOfSegment", "I", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "minIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "minCoord_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "minDe_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", NULL, NULL,  },
    { "orientedDe_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationBufferRightmostEdgeFinder = { 2, "RightmostEdgeFinder", "com.vividsolutions.jts.operation.buffer", NULL, 0x1, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationBufferRightmostEdgeFinder;
}

@end

void ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_init(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self) {
  (void) NSObject_init(self);
  self->minIndex_ = -1;
  self->minCoord_ = nil;
  self->minDe_ = nil;
  self->orientedDe_ = nil;
}

ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *new_ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_init() {
  ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self = [ComVividsolutionsJtsOperationBufferRightmostEdgeFinder alloc];
  ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_init(self);
  return self;
}

void ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtNode(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self) {
  ComVividsolutionsJtsGeomgraphNode *node = [((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(self->minDe_)) getNode];
  ComVividsolutionsJtsGeomgraphDirectedEdgeStar *star = (ComVividsolutionsJtsGeomgraphDirectedEdgeStar *) check_class_cast([((ComVividsolutionsJtsGeomgraphNode *) nil_chk(node)) getEdges], [ComVividsolutionsJtsGeomgraphDirectedEdgeStar class]);
  self->minDe_ = [((ComVividsolutionsJtsGeomgraphDirectedEdgeStar *) nil_chk(star)) getRightmostEdge];
  if (![((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(self->minDe_)) isForward]) {
    self->minDe_ = [self->minDe_ getSym];
    self->minIndex_ = ((IOSObjectArray *) nil_chk([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk([((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(self->minDe_)) getEdge])) getCoordinates]))->size_ - 1;
  }
}

void ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_findRightmostEdgeAtVertex(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self) {
  IOSObjectArray *pts = [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk([((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(self->minDe_)) getEdge])) getCoordinates];
  ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_withNSString_(self->minIndex_ > 0 && self->minIndex_ < ((IOSObjectArray *) nil_chk(pts))->size_, @"rightmost point expected to be interior vertex of edge");
  ComVividsolutionsJtsGeomCoordinate *pPrev = IOSObjectArray_Get(nil_chk(pts), self->minIndex_ - 1);
  ComVividsolutionsJtsGeomCoordinate *pNext = IOSObjectArray_Get(pts, self->minIndex_ + 1);
  jint orientation = ComVividsolutionsJtsAlgorithmCGAlgorithms_computeOrientationWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self->minCoord_, pNext, pPrev);
  jboolean usePrev = NO;
  if (((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pPrev))->y_ < ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->minCoord_))->y_ && ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pNext))->y_ < self->minCoord_->y_ && orientation == ComVividsolutionsJtsAlgorithmCGAlgorithms_COUNTERCLOCKWISE) {
    usePrev = YES;
  }
  else if (pPrev->y_ > self->minCoord_->y_ && ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pNext))->y_ > self->minCoord_->y_ && orientation == ComVividsolutionsJtsAlgorithmCGAlgorithms_CLOCKWISE) {
    usePrev = YES;
  }
  if (usePrev) {
    self->minIndex_ = self->minIndex_ - 1;
  }
}

void ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge_(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self, ComVividsolutionsJtsGeomgraphDirectedEdge *de) {
  IOSObjectArray *coord = [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk([((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) getEdge])) getCoordinates];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coord))->size_ - 1; i++) {
    if (self->minCoord_ == nil || ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(coord, i)))->x_ > self->minCoord_->x_) {
      self->minDe_ = de;
      self->minIndex_ = i;
      self->minCoord_ = IOSObjectArray_Get(coord, i);
    }
  }
}

jint ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self, ComVividsolutionsJtsGeomgraphDirectedEdge *de, jint index) {
  jint side = ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(self, de, index);
  if (side < 0) side = ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(self, de, index - 1);
  if (side < 0) {
    self->minCoord_ = nil;
    ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_checkForRightmostCoordinateWithComVividsolutionsJtsGeomgraphDirectedEdge_(self, de);
  }
  return side;
}

jint ComVividsolutionsJtsOperationBufferRightmostEdgeFinder_getRightmostSideOfSegmentWithComVividsolutionsJtsGeomgraphDirectedEdge_withInt_(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder *self, ComVividsolutionsJtsGeomgraphDirectedEdge *de, jint i) {
  ComVividsolutionsJtsGeomgraphEdge *e = [((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) getEdge];
  IOSObjectArray *coord = [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getCoordinates];
  if (i < 0 || i + 1 >= ((IOSObjectArray *) nil_chk(coord))->size_) return -1;
  if (((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(nil_chk(coord), i)))->y_ == ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(coord, i + 1)))->y_) return -1;
  jint pos = ComVividsolutionsJtsGeomgraphPosition_LEFT;
  if (((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(coord, i)))->y_ < ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(coord, i + 1)))->y_) pos = ComVividsolutionsJtsGeomgraphPosition_RIGHT;
  return pos;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationBufferRightmostEdgeFinder)
