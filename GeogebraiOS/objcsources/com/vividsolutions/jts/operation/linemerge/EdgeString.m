//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/operation/linemerge/EdgeString.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/CoordinateArrays.h"
#include "com/vividsolutions/jts/geom/CoordinateList.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/operation/linemerge/EdgeString.h"
#include "com/vividsolutions/jts/operation/linemerge/LineMergeDirectedEdge.h"
#include "com/vividsolutions/jts/operation/linemerge/LineMergeEdge.h"
#include "com/vividsolutions/jts/planargraph/Edge.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsOperationLinemergeEdgeString () {
 @public
  ComVividsolutionsJtsGeomGeometryFactory *factory_;
  id<JavaUtilList> directedEdges_;
  IOSObjectArray *coordinates_;
}

- (IOSObjectArray *)getCoordinates;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeEdgeString, factory_, ComVividsolutionsJtsGeomGeometryFactory *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeEdgeString, directedEdges_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeEdgeString, coordinates_, IOSObjectArray *)

__attribute__((unused)) static IOSObjectArray *ComVividsolutionsJtsOperationLinemergeEdgeString_getCoordinates(ComVividsolutionsJtsOperationLinemergeEdgeString *self);

@implementation ComVividsolutionsJtsOperationLinemergeEdgeString

- (instancetype)initWithComVividsolutionsJtsGeomGeometryFactory:(ComVividsolutionsJtsGeomGeometryFactory *)factory {
  ComVividsolutionsJtsOperationLinemergeEdgeString_initWithComVividsolutionsJtsGeomGeometryFactory_(self, factory);
  return self;
}

- (void)addWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge:(ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *)directedEdge {
  [((id<JavaUtilList>) nil_chk(directedEdges_)) addWithId:directedEdge];
}

- (IOSObjectArray *)getCoordinates {
  return ComVividsolutionsJtsOperationLinemergeEdgeString_getCoordinates(self);
}

- (ComVividsolutionsJtsGeomLineString *)toLineString {
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) createLineStringWithComVividsolutionsJtsGeomCoordinateArray:ComVividsolutionsJtsOperationLinemergeEdgeString_getCoordinates(self)];
}

- (void)dealloc {
  RELEASE_(factory_);
  RELEASE_(directedEdges_);
  RELEASE_(coordinates_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomGeometryFactory:", "EdgeString", NULL, 0x1, NULL, NULL },
    { "addWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge:", "add", "V", 0x1, NULL, NULL },
    { "getCoordinates", NULL, "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x2, NULL, NULL },
    { "toLineString", NULL, "Lcom.vividsolutions.jts.geom.LineString;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "factory_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.GeometryFactory;", NULL, NULL,  },
    { "directedEdges_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
    { "coordinates_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationLinemergeEdgeString = { 2, "EdgeString", "com.vividsolutions.jts.operation.linemerge", NULL, 0x1, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationLinemergeEdgeString;
}

@end

void ComVividsolutionsJtsOperationLinemergeEdgeString_initWithComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsOperationLinemergeEdgeString *self, ComVividsolutionsJtsGeomGeometryFactory *factory) {
  NSObject_init(self);
  ComVividsolutionsJtsOperationLinemergeEdgeString_setAndConsume_directedEdges_(self, new_JavaUtilArrayList_init());
  ComVividsolutionsJtsOperationLinemergeEdgeString_set_coordinates_(self, nil);
  ComVividsolutionsJtsOperationLinemergeEdgeString_set_factory_(self, factory);
}

ComVividsolutionsJtsOperationLinemergeEdgeString *new_ComVividsolutionsJtsOperationLinemergeEdgeString_initWithComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsGeomGeometryFactory *factory) {
  ComVividsolutionsJtsOperationLinemergeEdgeString *self = [ComVividsolutionsJtsOperationLinemergeEdgeString alloc];
  ComVividsolutionsJtsOperationLinemergeEdgeString_initWithComVividsolutionsJtsGeomGeometryFactory_(self, factory);
  return self;
}

IOSObjectArray *ComVividsolutionsJtsOperationLinemergeEdgeString_getCoordinates(ComVividsolutionsJtsOperationLinemergeEdgeString *self) {
  if (self->coordinates_ == nil) {
    jint forwardDirectedEdges = 0;
    jint reverseDirectedEdges = 0;
    ComVividsolutionsJtsGeomCoordinateList *coordinateList = [new_ComVividsolutionsJtsGeomCoordinateList_init() autorelease];
    for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk(self->directedEdges_)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
      ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *directedEdge = (ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *) check_class_cast([i next], [ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge class]);
      if ([((ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *) nil_chk(directedEdge)) getEdgeDirection]) {
        forwardDirectedEdges++;
      }
      else {
        reverseDirectedEdges++;
      }
      [coordinateList addWithComVividsolutionsJtsGeomCoordinateArray:[((ComVividsolutionsJtsGeomLineString *) nil_chk([((ComVividsolutionsJtsOperationLinemergeLineMergeEdge *) nil_chk(((ComVividsolutionsJtsOperationLinemergeLineMergeEdge *) check_class_cast([directedEdge getEdge], [ComVividsolutionsJtsOperationLinemergeLineMergeEdge class])))) getLine])) getCoordinates] withBoolean:NO withBoolean:[directedEdge getEdgeDirection]];
    }
    ComVividsolutionsJtsOperationLinemergeEdgeString_set_coordinates_(self, [coordinateList toCoordinateArray]);
    if (reverseDirectedEdges > forwardDirectedEdges) {
      ComVividsolutionsJtsGeomCoordinateArrays_reverseWithComVividsolutionsJtsGeomCoordinateArray_(self->coordinates_);
    }
  }
  return self->coordinates_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationLinemergeEdgeString)
