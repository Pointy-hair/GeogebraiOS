//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/operation/linemerge/LineMerger.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryComponentFilter.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/operation/linemerge/EdgeString.h"
#include "com/vividsolutions/jts/operation/linemerge/LineMergeDirectedEdge.h"
#include "com/vividsolutions/jts/operation/linemerge/LineMergeGraph.h"
#include "com/vividsolutions/jts/operation/linemerge/LineMerger.h"
#include "com/vividsolutions/jts/planargraph/DirectedEdgeStar.h"
#include "com/vividsolutions/jts/planargraph/Edge.h"
#include "com/vividsolutions/jts/planargraph/GraphComponent.h"
#include "com/vividsolutions/jts/planargraph/Node.h"
#include "com/vividsolutions/jts/util/Assert.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"

@interface ComVividsolutionsJtsOperationLinemergeLineMerger () {
 @public
  ComVividsolutionsJtsOperationLinemergeLineMergeGraph *graph_;
  id<JavaUtilCollection> mergedLineStrings_;
  ComVividsolutionsJtsGeomGeometryFactory *factory_;
  id<JavaUtilCollection> edgeStrings_;
}

- (void)addWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)lineString;

- (void)merge;

- (void)buildEdgeStringsForObviousStartNodes;

- (void)buildEdgeStringsForIsolatedLoops;

- (void)buildEdgeStringsForUnprocessedNodes;

- (void)buildEdgeStringsForNonDegree2Nodes;

- (void)buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode:(ComVividsolutionsJtsPlanargraphNode *)node;

- (ComVividsolutionsJtsOperationLinemergeEdgeString *)buildEdgeStringStartingWithWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge:(ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *)start;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeLineMerger, graph_, ComVividsolutionsJtsOperationLinemergeLineMergeGraph *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeLineMerger, mergedLineStrings_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeLineMerger, factory_, ComVividsolutionsJtsGeomGeometryFactory *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeLineMerger, edgeStrings_, id<JavaUtilCollection>)

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_addWithComVividsolutionsJtsGeomLineString_(ComVividsolutionsJtsOperationLinemergeLineMerger *self, ComVividsolutionsJtsGeomLineString *lineString);

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_merge(ComVividsolutionsJtsOperationLinemergeLineMerger *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForObviousStartNodes(ComVividsolutionsJtsOperationLinemergeLineMerger *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForIsolatedLoops(ComVividsolutionsJtsOperationLinemergeLineMerger *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForUnprocessedNodes(ComVividsolutionsJtsOperationLinemergeLineMerger *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForNonDegree2Nodes(ComVividsolutionsJtsOperationLinemergeLineMerger *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode_(ComVividsolutionsJtsOperationLinemergeLineMerger *self, ComVividsolutionsJtsPlanargraphNode *node);

__attribute__((unused)) static ComVividsolutionsJtsOperationLinemergeEdgeString *ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringStartingWithWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge_(ComVividsolutionsJtsOperationLinemergeLineMerger *self, ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *start);

@interface ComVividsolutionsJtsOperationLinemergeLineMerger_$1 : NSObject < ComVividsolutionsJtsGeomGeometryComponentFilter > {
 @public
  ComVividsolutionsJtsOperationLinemergeLineMerger *this$0_;
}

- (void)filterWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)component;

- (instancetype)initWithComVividsolutionsJtsOperationLinemergeLineMerger:(ComVividsolutionsJtsOperationLinemergeLineMerger *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsOperationLinemergeLineMerger_$1)

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationLinemergeLineMerger_$1, this$0_, ComVividsolutionsJtsOperationLinemergeLineMerger *)

__attribute__((unused)) static void ComVividsolutionsJtsOperationLinemergeLineMerger_$1_initWithComVividsolutionsJtsOperationLinemergeLineMerger_(ComVividsolutionsJtsOperationLinemergeLineMerger_$1 *self, ComVividsolutionsJtsOperationLinemergeLineMerger *outer$);

__attribute__((unused)) static ComVividsolutionsJtsOperationLinemergeLineMerger_$1 *new_ComVividsolutionsJtsOperationLinemergeLineMerger_$1_initWithComVividsolutionsJtsOperationLinemergeLineMerger_(ComVividsolutionsJtsOperationLinemergeLineMerger *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsOperationLinemergeLineMerger_$1)

@implementation ComVividsolutionsJtsOperationLinemergeLineMerger

- (void)addWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geometry {
  [((ComVividsolutionsJtsGeomGeometry *) nil_chk(geometry)) applyWithComVividsolutionsJtsGeomGeometryComponentFilter:new_ComVividsolutionsJtsOperationLinemergeLineMerger_$1_initWithComVividsolutionsJtsOperationLinemergeLineMerger_(self)];
}

- (void)addWithJavaUtilCollection:(id<JavaUtilCollection>)geometries {
  mergedLineStrings_ = nil;
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk(geometries)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomGeometry *geometry = (ComVividsolutionsJtsGeomGeometry *) check_class_cast([i next], [ComVividsolutionsJtsGeomGeometry class]);
    [self addWithComVividsolutionsJtsGeomGeometry:geometry];
  }
}

- (void)addWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)lineString {
  ComVividsolutionsJtsOperationLinemergeLineMerger_addWithComVividsolutionsJtsGeomLineString_(self, lineString);
}

- (void)merge {
  ComVividsolutionsJtsOperationLinemergeLineMerger_merge(self);
}

- (void)buildEdgeStringsForObviousStartNodes {
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForObviousStartNodes(self);
}

- (void)buildEdgeStringsForIsolatedLoops {
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForIsolatedLoops(self);
}

- (void)buildEdgeStringsForUnprocessedNodes {
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForUnprocessedNodes(self);
}

- (void)buildEdgeStringsForNonDegree2Nodes {
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForNonDegree2Nodes(self);
}

- (void)buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode:(ComVividsolutionsJtsPlanargraphNode *)node {
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode_(self, node);
}

- (ComVividsolutionsJtsOperationLinemergeEdgeString *)buildEdgeStringStartingWithWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge:(ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *)start {
  return ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringStartingWithWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge_(self, start);
}

- (id<JavaUtilCollection>)getMergedLineStrings {
  ComVividsolutionsJtsOperationLinemergeLineMerger_merge(self);
  return mergedLineStrings_;
}

- (instancetype)init {
  ComVividsolutionsJtsOperationLinemergeLineMerger_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithComVividsolutionsJtsGeomGeometry:", "add", "V", 0x1, NULL, NULL },
    { "addWithJavaUtilCollection:", "add", "V", 0x1, NULL, NULL },
    { "addWithComVividsolutionsJtsGeomLineString:", "add", "V", 0x2, NULL, NULL },
    { "merge", NULL, "V", 0x2, NULL, NULL },
    { "buildEdgeStringsForObviousStartNodes", NULL, "V", 0x2, NULL, NULL },
    { "buildEdgeStringsForIsolatedLoops", NULL, "V", 0x2, NULL, NULL },
    { "buildEdgeStringsForUnprocessedNodes", NULL, "V", 0x2, NULL, NULL },
    { "buildEdgeStringsForNonDegree2Nodes", NULL, "V", 0x2, NULL, NULL },
    { "buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode:", "buildEdgeStringsStartingAt", "V", 0x2, NULL, NULL },
    { "buildEdgeStringStartingWithWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge:", "buildEdgeStringStartingWith", "Lcom.vividsolutions.jts.operation.linemerge.EdgeString;", 0x2, NULL, NULL },
    { "getMergedLineStrings", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "graph_", NULL, 0x2, "Lcom.vividsolutions.jts.operation.linemerge.LineMergeGraph;", NULL, NULL,  },
    { "mergedLineStrings_", NULL, 0x2, "Ljava.util.Collection;", NULL, NULL,  },
    { "factory_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.GeometryFactory;", NULL, NULL,  },
    { "edgeStrings_", NULL, 0x2, "Ljava.util.Collection;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationLinemergeLineMerger = { 2, "LineMerger", "com.vividsolutions.jts.operation.linemerge", NULL, 0x1, 12, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationLinemergeLineMerger;
}

@end

void ComVividsolutionsJtsOperationLinemergeLineMerger_addWithComVividsolutionsJtsGeomLineString_(ComVividsolutionsJtsOperationLinemergeLineMerger *self, ComVividsolutionsJtsGeomLineString *lineString) {
  if (self->factory_ == nil) {
    self->factory_ = [((ComVividsolutionsJtsGeomLineString *) nil_chk(lineString)) getFactory];
  }
  [((ComVividsolutionsJtsOperationLinemergeLineMergeGraph *) nil_chk(self->graph_)) addEdgeWithComVividsolutionsJtsGeomLineString:lineString];
}

void ComVividsolutionsJtsOperationLinemergeLineMerger_merge(ComVividsolutionsJtsOperationLinemergeLineMerger *self) {
  if (self->mergedLineStrings_ != nil) {
    return;
  }
  ComVividsolutionsJtsPlanargraphGraphComponent_setMarkedWithJavaUtilIterator_withBoolean_([((ComVividsolutionsJtsOperationLinemergeLineMergeGraph *) nil_chk(self->graph_)) nodeIterator], NO);
  ComVividsolutionsJtsPlanargraphGraphComponent_setMarkedWithJavaUtilIterator_withBoolean_([self->graph_ edgeIterator], NO);
  self->edgeStrings_ = new_JavaUtilArrayList_init();
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForObviousStartNodes(self);
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForIsolatedLoops(self);
  self->mergedLineStrings_ = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> i = [self->edgeStrings_ iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsOperationLinemergeEdgeString *edgeString = (ComVividsolutionsJtsOperationLinemergeEdgeString *) check_class_cast([i next], [ComVividsolutionsJtsOperationLinemergeEdgeString class]);
    [self->mergedLineStrings_ addWithId:[((ComVividsolutionsJtsOperationLinemergeEdgeString *) nil_chk(edgeString)) toLineString]];
  }
}

void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForObviousStartNodes(ComVividsolutionsJtsOperationLinemergeLineMerger *self) {
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForNonDegree2Nodes(self);
}

void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForIsolatedLoops(ComVividsolutionsJtsOperationLinemergeLineMerger *self) {
  ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForUnprocessedNodes(self);
}

void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForUnprocessedNodes(ComVividsolutionsJtsOperationLinemergeLineMerger *self) {
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk([((ComVividsolutionsJtsOperationLinemergeLineMergeGraph *) nil_chk(self->graph_)) getNodes])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsPlanargraphNode *node = (ComVividsolutionsJtsPlanargraphNode *) check_class_cast([i next], [ComVividsolutionsJtsPlanargraphNode class]);
    if (![((ComVividsolutionsJtsPlanargraphNode *) nil_chk(node)) isMarked]) {
      ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_([node getDegree] == 2);
      ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode_(self, node);
      [node setMarkedWithBoolean:YES];
    }
  }
}

void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsForNonDegree2Nodes(ComVividsolutionsJtsOperationLinemergeLineMerger *self) {
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk([((ComVividsolutionsJtsOperationLinemergeLineMergeGraph *) nil_chk(self->graph_)) getNodes])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsPlanargraphNode *node = (ComVividsolutionsJtsPlanargraphNode *) check_class_cast([i next], [ComVividsolutionsJtsPlanargraphNode class]);
    if ([((ComVividsolutionsJtsPlanargraphNode *) nil_chk(node)) getDegree] != 2) {
      ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode_(self, node);
      [node setMarkedWithBoolean:YES];
    }
  }
}

void ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringsStartingAtWithComVividsolutionsJtsPlanargraphNode_(ComVividsolutionsJtsOperationLinemergeLineMerger *self, ComVividsolutionsJtsPlanargraphNode *node) {
  for (id<JavaUtilIterator> i = [((ComVividsolutionsJtsPlanargraphDirectedEdgeStar *) nil_chk([((ComVividsolutionsJtsPlanargraphNode *) nil_chk(node)) getOutEdges])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *directedEdge = (ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *) check_class_cast([i next], [ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge class]);
    if ([((ComVividsolutionsJtsPlanargraphEdge *) nil_chk([((ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *) nil_chk(directedEdge)) getEdge])) isMarked]) {
      continue;
    }
    [((id<JavaUtilCollection>) nil_chk(self->edgeStrings_)) addWithId:ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringStartingWithWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge_(self, directedEdge)];
  }
}

ComVividsolutionsJtsOperationLinemergeEdgeString *ComVividsolutionsJtsOperationLinemergeLineMerger_buildEdgeStringStartingWithWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge_(ComVividsolutionsJtsOperationLinemergeLineMerger *self, ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *start) {
  ComVividsolutionsJtsOperationLinemergeEdgeString *edgeString = new_ComVividsolutionsJtsOperationLinemergeEdgeString_initWithComVividsolutionsJtsGeomGeometryFactory_(self->factory_);
  ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *current = start;
  do {
    [edgeString addWithComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge:current];
    [((ComVividsolutionsJtsPlanargraphEdge *) nil_chk([((ComVividsolutionsJtsOperationLinemergeLineMergeDirectedEdge *) nil_chk(current)) getEdge])) setMarkedWithBoolean:YES];
    current = [current getNext];
  }
  while (current != nil && current != start);
  return edgeString;
}

void ComVividsolutionsJtsOperationLinemergeLineMerger_init(ComVividsolutionsJtsOperationLinemergeLineMerger *self) {
  (void) NSObject_init(self);
  self->graph_ = new_ComVividsolutionsJtsOperationLinemergeLineMergeGraph_init();
  self->mergedLineStrings_ = nil;
  self->factory_ = nil;
  self->edgeStrings_ = nil;
}

ComVividsolutionsJtsOperationLinemergeLineMerger *new_ComVividsolutionsJtsOperationLinemergeLineMerger_init() {
  ComVividsolutionsJtsOperationLinemergeLineMerger *self = [ComVividsolutionsJtsOperationLinemergeLineMerger alloc];
  ComVividsolutionsJtsOperationLinemergeLineMerger_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationLinemergeLineMerger)

@implementation ComVividsolutionsJtsOperationLinemergeLineMerger_$1

- (void)filterWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)component {
  if ([component isKindOfClass:[ComVividsolutionsJtsGeomLineString class]]) {
    ComVividsolutionsJtsOperationLinemergeLineMerger_addWithComVividsolutionsJtsGeomLineString_(this$0_, (ComVividsolutionsJtsGeomLineString *) check_class_cast(component, [ComVividsolutionsJtsGeomLineString class]));
  }
}

- (instancetype)initWithComVividsolutionsJtsOperationLinemergeLineMerger:(ComVividsolutionsJtsOperationLinemergeLineMerger *)outer$ {
  ComVividsolutionsJtsOperationLinemergeLineMerger_$1_initWithComVividsolutionsJtsOperationLinemergeLineMerger_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "filterWithComVividsolutionsJtsGeomGeometry:", "filter", "V", 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsOperationLinemergeLineMerger:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.vividsolutions.jts.operation.linemerge.LineMerger;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComVividsolutionsJtsOperationLinemergeLineMerger", "addWithComVividsolutionsJtsGeomGeometry:" };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationLinemergeLineMerger_$1 = { 2, "", "com.vividsolutions.jts.operation.linemerge", "LineMerger", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComVividsolutionsJtsOperationLinemergeLineMerger_$1;
}

@end

void ComVividsolutionsJtsOperationLinemergeLineMerger_$1_initWithComVividsolutionsJtsOperationLinemergeLineMerger_(ComVividsolutionsJtsOperationLinemergeLineMerger_$1 *self, ComVividsolutionsJtsOperationLinemergeLineMerger *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

ComVividsolutionsJtsOperationLinemergeLineMerger_$1 *new_ComVividsolutionsJtsOperationLinemergeLineMerger_$1_initWithComVividsolutionsJtsOperationLinemergeLineMerger_(ComVividsolutionsJtsOperationLinemergeLineMerger *outer$) {
  ComVividsolutionsJtsOperationLinemergeLineMerger_$1 *self = [ComVividsolutionsJtsOperationLinemergeLineMerger_$1 alloc];
  ComVividsolutionsJtsOperationLinemergeLineMerger_$1_initWithComVividsolutionsJtsOperationLinemergeLineMerger_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationLinemergeLineMerger_$1)
