//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/util/CoordinateCountFilter.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/util/CoordinateCountFilter.h"

@interface ComVividsolutionsJtsUtilCoordinateCountFilter () {
 @public
  jint n_;
}

@end

@implementation ComVividsolutionsJtsUtilCoordinateCountFilter

- (instancetype)init {
  ComVividsolutionsJtsUtilCoordinateCountFilter_init(self);
  return self;
}

- (jint)getCount {
  return n_;
}

- (void)filterWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coord {
  n_++;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CoordinateCountFilter", NULL, 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
    { "filterWithComVividsolutionsJtsGeomCoordinate:", "filter", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "n_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsUtilCoordinateCountFilter = { 2, "CoordinateCountFilter", "com.vividsolutions.jts.util", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsUtilCoordinateCountFilter;
}

@end

void ComVividsolutionsJtsUtilCoordinateCountFilter_init(ComVividsolutionsJtsUtilCoordinateCountFilter *self) {
  NSObject_init(self);
  self->n_ = 0;
}

ComVividsolutionsJtsUtilCoordinateCountFilter *new_ComVividsolutionsJtsUtilCoordinateCountFilter_init() {
  ComVividsolutionsJtsUtilCoordinateCountFilter *self = [ComVividsolutionsJtsUtilCoordinateCountFilter alloc];
  ComVividsolutionsJtsUtilCoordinateCountFilter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsUtilCoordinateCountFilter)
