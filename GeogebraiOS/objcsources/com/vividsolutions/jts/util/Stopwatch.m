//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/util/Stopwatch.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/util/Stopwatch.h"
#include "java/lang/System.h"

@interface ComVividsolutionsJtsUtilStopwatch () {
 @public
  jlong startTimestamp_;
  jlong totalTime_;
  jboolean isRunning_;
}

- (void)updateTotalTime;

@end

__attribute__((unused)) static void ComVividsolutionsJtsUtilStopwatch_updateTotalTime(ComVividsolutionsJtsUtilStopwatch *self);

@implementation ComVividsolutionsJtsUtilStopwatch

- (instancetype)init {
  ComVividsolutionsJtsUtilStopwatch_init(self);
  return self;
}

- (void)start {
  if (isRunning_) return;
  startTimestamp_ = JavaLangSystem_currentTimeMillis();
  isRunning_ = YES;
}

- (jlong)stop {
  if (isRunning_) {
    ComVividsolutionsJtsUtilStopwatch_updateTotalTime(self);
    isRunning_ = NO;
  }
  return totalTime_;
}

- (void)reset {
  totalTime_ = 0;
  startTimestamp_ = JavaLangSystem_currentTimeMillis();
}

- (jlong)split {
  if (isRunning_) ComVividsolutionsJtsUtilStopwatch_updateTotalTime(self);
  return totalTime_;
}

- (void)updateTotalTime {
  ComVividsolutionsJtsUtilStopwatch_updateTotalTime(self);
}

- (jlong)getTime {
  ComVividsolutionsJtsUtilStopwatch_updateTotalTime(self);
  return totalTime_;
}

- (NSString *)getTimeString {
  jlong totalTime = [self getTime];
  NSString *totalTimeStr = totalTime < 10000 ? JreStrcat("J$", totalTime, @" ms") : JreStrcat("D$", (jdouble) totalTime / 1000.0, @" s");
  return totalTimeStr;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Stopwatch", NULL, 0x1, NULL, NULL },
    { "start", NULL, "V", 0x1, NULL, NULL },
    { "stop", NULL, "J", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "split", NULL, "J", 0x1, NULL, NULL },
    { "updateTotalTime", NULL, "V", 0x2, NULL, NULL },
    { "getTime", NULL, "J", 0x1, NULL, NULL },
    { "getTimeString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "startTimestamp_", NULL, 0x2, "J", NULL, NULL,  },
    { "totalTime_", NULL, 0x2, "J", NULL, NULL,  },
    { "isRunning_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsUtilStopwatch = { 2, "Stopwatch", "com.vividsolutions.jts.util", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsUtilStopwatch;
}

@end

void ComVividsolutionsJtsUtilStopwatch_init(ComVividsolutionsJtsUtilStopwatch *self) {
  NSObject_init(self);
  self->totalTime_ = 0;
  self->isRunning_ = NO;
  [self start];
}

ComVividsolutionsJtsUtilStopwatch *new_ComVividsolutionsJtsUtilStopwatch_init() {
  ComVividsolutionsJtsUtilStopwatch *self = [ComVividsolutionsJtsUtilStopwatch alloc];
  ComVividsolutionsJtsUtilStopwatch_init(self);
  return self;
}

void ComVividsolutionsJtsUtilStopwatch_updateTotalTime(ComVividsolutionsJtsUtilStopwatch *self) {
  jlong endTimestamp = JavaLangSystem_currentTimeMillis();
  jlong elapsedTime = endTimestamp - self->startTimestamp_;
  self->startTimestamp_ = endTimestamp;
  self->totalTime_ += elapsedTime;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsUtilStopwatch)
