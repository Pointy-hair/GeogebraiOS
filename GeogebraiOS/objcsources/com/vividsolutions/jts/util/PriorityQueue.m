//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/util/PriorityQueue.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/util/PriorityQueue.h"
#include "java/lang/Comparable.h"
#include "java/util/ArrayList.h"

@interface ComVividsolutionsJtsUtilPriorityQueue () {
 @public
  jint size__;
  JavaUtilArrayList *items_;
}

- (void)reorderWithInt:(jint)hole;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsUtilPriorityQueue, items_, JavaUtilArrayList *)

__attribute__((unused)) static void ComVividsolutionsJtsUtilPriorityQueue_reorderWithInt_(ComVividsolutionsJtsUtilPriorityQueue *self, jint hole);

@implementation ComVividsolutionsJtsUtilPriorityQueue

- (instancetype)init {
  ComVividsolutionsJtsUtilPriorityQueue_init(self);
  return self;
}

- (void)addWithJavaLangComparable:(id<JavaLangComparable>)x {
  [((JavaUtilArrayList *) nil_chk(items_)) addWithId:nil];
  size__ += 1;
  jint hole = size__;
  (void) [items_ setWithInt:0 withId:x];
  for (; [((id<JavaLangComparable>) nil_chk(x)) compareToWithId:[items_ getWithInt:hole / 2]] < 0; hole /= 2) {
    (void) [items_ setWithInt:hole withId:[items_ getWithInt:hole / 2]];
  }
  (void) [items_ setWithInt:hole withId:x];
}

- (jboolean)isEmpty {
  return size__ == 0;
}

- (jint)size {
  return size__;
}

- (void)clear {
  size__ = 0;
  [((JavaUtilArrayList *) nil_chk(items_)) clear];
}

- (id)poll {
  if ([self isEmpty]) return nil;
  id minItem = [((JavaUtilArrayList *) nil_chk(items_)) getWithInt:1];
  (void) [items_ setWithInt:1 withId:[items_ getWithInt:size__]];
  size__ -= 1;
  ComVividsolutionsJtsUtilPriorityQueue_reorderWithInt_(self, 1);
  return minItem;
}

- (void)reorderWithInt:(jint)hole {
  ComVividsolutionsJtsUtilPriorityQueue_reorderWithInt_(self, hole);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PriorityQueue", NULL, 0x1, NULL, NULL },
    { "addWithJavaLangComparable:", "add", "V", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "poll", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "reorderWithInt:", "reorder", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "size__", "size", 0x2, "I", NULL, NULL,  },
    { "items_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsUtilPriorityQueue = { 2, "PriorityQueue", "com.vividsolutions.jts.util", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsUtilPriorityQueue;
}

@end

void ComVividsolutionsJtsUtilPriorityQueue_init(ComVividsolutionsJtsUtilPriorityQueue *self) {
  (void) NSObject_init(self);
  self->size__ = 0;
  self->items_ = new_JavaUtilArrayList_init();
  [self->items_ addWithId:nil];
}

ComVividsolutionsJtsUtilPriorityQueue *new_ComVividsolutionsJtsUtilPriorityQueue_init() {
  ComVividsolutionsJtsUtilPriorityQueue *self = [ComVividsolutionsJtsUtilPriorityQueue alloc];
  ComVividsolutionsJtsUtilPriorityQueue_init(self);
  return self;
}

void ComVividsolutionsJtsUtilPriorityQueue_reorderWithInt_(ComVividsolutionsJtsUtilPriorityQueue *self, jint hole) {
  jint child;
  id tmp = [((JavaUtilArrayList *) nil_chk(self->items_)) getWithInt:hole];
  for (; hole * 2 <= self->size__; hole = child) {
    child = hole * 2;
    if (child != self->size__ && [((id<JavaLangComparable>) nil_chk(((id<JavaLangComparable>) check_protocol_cast([self->items_ getWithInt:child + 1], @protocol(JavaLangComparable))))) compareToWithId:[self->items_ getWithInt:child]] < 0) child++;
    if ([((id<JavaLangComparable>) nil_chk(((id<JavaLangComparable>) check_protocol_cast([self->items_ getWithInt:child], @protocol(JavaLangComparable))))) compareToWithId:tmp] < 0) (void) [self->items_ setWithInt:hole withId:[self->items_ getWithInt:child]];
    else break;
  }
  (void) [self->items_ setWithInt:hole withId:tmp];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsUtilPriorityQueue)
