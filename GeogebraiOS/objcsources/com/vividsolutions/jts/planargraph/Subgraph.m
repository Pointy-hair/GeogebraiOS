//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/planargraph/Subgraph.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/planargraph/DirectedEdge.h"
#include "com/vividsolutions/jts/planargraph/Edge.h"
#include "com/vividsolutions/jts/planargraph/Node.h"
#include "com/vividsolutions/jts/planargraph/NodeMap.h"
#include "com/vividsolutions/jts/planargraph/PlanarGraph.h"
#include "com/vividsolutions/jts/planargraph/Subgraph.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"

@implementation ComVividsolutionsJtsPlanargraphSubgraph

- (instancetype)initWithComVividsolutionsJtsPlanargraphPlanarGraph:(ComVividsolutionsJtsPlanargraphPlanarGraph *)parentGraph {
  ComVividsolutionsJtsPlanargraphSubgraph_initWithComVividsolutionsJtsPlanargraphPlanarGraph_(self, parentGraph);
  return self;
}

- (ComVividsolutionsJtsPlanargraphPlanarGraph *)getParent {
  return parentGraph_;
}

- (void)addWithComVividsolutionsJtsPlanargraphEdge:(ComVividsolutionsJtsPlanargraphEdge *)e {
  if ([((id<JavaUtilSet>) nil_chk(edges_)) containsWithId:e]) return;
  [edges_ addWithId:e];
  [((id<JavaUtilList>) nil_chk(dirEdges_)) addWithId:[((ComVividsolutionsJtsPlanargraphEdge *) nil_chk(e)) getDirEdgeWithInt:0]];
  [dirEdges_ addWithId:[e getDirEdgeWithInt:1]];
  (void) [((ComVividsolutionsJtsPlanargraphNodeMap *) nil_chk(nodeMap_)) addWithComVividsolutionsJtsPlanargraphNode:[((ComVividsolutionsJtsPlanargraphDirectedEdge *) nil_chk([e getDirEdgeWithInt:0])) getFromNode]];
  (void) [nodeMap_ addWithComVividsolutionsJtsPlanargraphNode:[((ComVividsolutionsJtsPlanargraphDirectedEdge *) nil_chk([e getDirEdgeWithInt:1])) getFromNode]];
}

- (id<JavaUtilIterator>)dirEdgeIterator {
  return [((id<JavaUtilList>) nil_chk(dirEdges_)) iterator];
}

- (id<JavaUtilIterator>)edgeIterator {
  return [((id<JavaUtilSet>) nil_chk(edges_)) iterator];
}

- (id<JavaUtilIterator>)nodeIterator {
  return [((ComVividsolutionsJtsPlanargraphNodeMap *) nil_chk(nodeMap_)) iterator];
}

- (jboolean)containsWithComVividsolutionsJtsPlanargraphEdge:(ComVividsolutionsJtsPlanargraphEdge *)e {
  return [((id<JavaUtilSet>) nil_chk(edges_)) containsWithId:e];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsPlanargraphPlanarGraph:", "Subgraph", NULL, 0x1, NULL, NULL },
    { "getParent", NULL, "Lcom.vividsolutions.jts.planargraph.PlanarGraph;", 0x1, NULL, NULL },
    { "addWithComVividsolutionsJtsPlanargraphEdge:", "add", "V", 0x1, NULL, NULL },
    { "dirEdgeIterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "edgeIterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "nodeIterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "containsWithComVividsolutionsJtsPlanargraphEdge:", "contains", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parentGraph_", NULL, 0x4, "Lcom.vividsolutions.jts.planargraph.PlanarGraph;", NULL, NULL,  },
    { "edges_", NULL, 0x4, "Ljava.util.Set;", NULL, NULL,  },
    { "dirEdges_", NULL, 0x4, "Ljava.util.List;", NULL, NULL,  },
    { "nodeMap_", NULL, 0x4, "Lcom.vividsolutions.jts.planargraph.NodeMap;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsPlanargraphSubgraph = { 2, "Subgraph", "com.vividsolutions.jts.planargraph", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsPlanargraphSubgraph;
}

@end

void ComVividsolutionsJtsPlanargraphSubgraph_initWithComVividsolutionsJtsPlanargraphPlanarGraph_(ComVividsolutionsJtsPlanargraphSubgraph *self, ComVividsolutionsJtsPlanargraphPlanarGraph *parentGraph) {
  (void) NSObject_init(self);
  self->edges_ = new_JavaUtilHashSet_init();
  self->dirEdges_ = new_JavaUtilArrayList_init();
  self->nodeMap_ = new_ComVividsolutionsJtsPlanargraphNodeMap_init();
  self->parentGraph_ = parentGraph;
}

ComVividsolutionsJtsPlanargraphSubgraph *new_ComVividsolutionsJtsPlanargraphSubgraph_initWithComVividsolutionsJtsPlanargraphPlanarGraph_(ComVividsolutionsJtsPlanargraphPlanarGraph *parentGraph) {
  ComVividsolutionsJtsPlanargraphSubgraph *self = [ComVividsolutionsJtsPlanargraphSubgraph alloc];
  ComVividsolutionsJtsPlanargraphSubgraph_initWithComVividsolutionsJtsPlanargraphPlanarGraph_(self, parentGraph);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsPlanargraphSubgraph)
