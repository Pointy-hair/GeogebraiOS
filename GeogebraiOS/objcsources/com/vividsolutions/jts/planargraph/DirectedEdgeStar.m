//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/planargraph/DirectedEdgeStar.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/planargraph/DirectedEdge.h"
#include "com/vividsolutions/jts/planargraph/DirectedEdgeStar.h"
#include "com/vividsolutions/jts/planargraph/Edge.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsPlanargraphDirectedEdgeStar () {
 @public
  jboolean sorted_;
}

- (void)sortEdges;

@end

__attribute__((unused)) static void ComVividsolutionsJtsPlanargraphDirectedEdgeStar_sortEdges(ComVividsolutionsJtsPlanargraphDirectedEdgeStar *self);

@implementation ComVividsolutionsJtsPlanargraphDirectedEdgeStar

- (instancetype)init {
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar_init(self);
  return self;
}

- (void)addWithComVividsolutionsJtsPlanargraphDirectedEdge:(ComVividsolutionsJtsPlanargraphDirectedEdge *)de {
  [((id<JavaUtilList>) nil_chk(outEdges_)) addWithId:de];
  sorted_ = NO;
}

- (void)removeWithComVividsolutionsJtsPlanargraphDirectedEdge:(ComVividsolutionsJtsPlanargraphDirectedEdge *)de {
  [((id<JavaUtilList>) nil_chk(outEdges_)) removeWithId:de];
}

- (id<JavaUtilIterator>)iterator {
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar_sortEdges(self);
  return [((id<JavaUtilList>) nil_chk(outEdges_)) iterator];
}

- (jint)getDegree {
  return [((id<JavaUtilList>) nil_chk(outEdges_)) size];
}

- (ComVividsolutionsJtsGeomCoordinate *)getCoordinate {
  id<JavaUtilIterator> it = [self iterator];
  if (![((id<JavaUtilIterator>) nil_chk(it)) hasNext]) return nil;
  ComVividsolutionsJtsPlanargraphDirectedEdge *e = (ComVividsolutionsJtsPlanargraphDirectedEdge *) check_class_cast([it next], [ComVividsolutionsJtsPlanargraphDirectedEdge class]);
  return [((ComVividsolutionsJtsPlanargraphDirectedEdge *) nil_chk(e)) getCoordinate];
}

- (id<JavaUtilList>)getEdges {
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar_sortEdges(self);
  return outEdges_;
}

- (void)sortEdges {
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar_sortEdges(self);
}

- (jint)getIndexWithComVividsolutionsJtsPlanargraphEdge:(ComVividsolutionsJtsPlanargraphEdge *)edge {
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar_sortEdges(self);
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(outEdges_)) size]; i++) {
    ComVividsolutionsJtsPlanargraphDirectedEdge *de = (ComVividsolutionsJtsPlanargraphDirectedEdge *) check_class_cast([outEdges_ getWithInt:i], [ComVividsolutionsJtsPlanargraphDirectedEdge class]);
    if ([((ComVividsolutionsJtsPlanargraphDirectedEdge *) nil_chk(de)) getEdge] == edge) return i;
  }
  return -1;
}

- (jint)getIndexWithComVividsolutionsJtsPlanargraphDirectedEdge:(ComVividsolutionsJtsPlanargraphDirectedEdge *)dirEdge {
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar_sortEdges(self);
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(outEdges_)) size]; i++) {
    ComVividsolutionsJtsPlanargraphDirectedEdge *de = (ComVividsolutionsJtsPlanargraphDirectedEdge *) check_class_cast([outEdges_ getWithInt:i], [ComVividsolutionsJtsPlanargraphDirectedEdge class]);
    if (de == dirEdge) return i;
  }
  return -1;
}

- (jint)getIndexWithInt:(jint)i {
  jint modi = i % [((id<JavaUtilList>) nil_chk(outEdges_)) size];
  if (modi < 0) modi += [outEdges_ size];
  return modi;
}

- (ComVividsolutionsJtsPlanargraphDirectedEdge *)getNextEdgeWithComVividsolutionsJtsPlanargraphDirectedEdge:(ComVividsolutionsJtsPlanargraphDirectedEdge *)dirEdge {
  jint i = [self getIndexWithComVividsolutionsJtsPlanargraphDirectedEdge:dirEdge];
  return (ComVividsolutionsJtsPlanargraphDirectedEdge *) check_class_cast([((id<JavaUtilList>) nil_chk(outEdges_)) getWithInt:[self getIndexWithInt:i + 1]], [ComVividsolutionsJtsPlanargraphDirectedEdge class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DirectedEdgeStar", NULL, 0x1, NULL, NULL },
    { "addWithComVividsolutionsJtsPlanargraphDirectedEdge:", "add", "V", 0x1, NULL, NULL },
    { "removeWithComVividsolutionsJtsPlanargraphDirectedEdge:", "remove", "V", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "getDegree", NULL, "I", 0x1, NULL, NULL },
    { "getCoordinate", NULL, "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getEdges", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "sortEdges", NULL, "V", 0x2, NULL, NULL },
    { "getIndexWithComVividsolutionsJtsPlanargraphEdge:", "getIndex", "I", 0x1, NULL, NULL },
    { "getIndexWithComVividsolutionsJtsPlanargraphDirectedEdge:", "getIndex", "I", 0x1, NULL, NULL },
    { "getIndexWithInt:", "getIndex", "I", 0x1, NULL, NULL },
    { "getNextEdgeWithComVividsolutionsJtsPlanargraphDirectedEdge:", "getNextEdge", "Lcom.vividsolutions.jts.planargraph.DirectedEdge;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "outEdges_", NULL, 0x4, "Ljava.util.List;", NULL, NULL,  },
    { "sorted_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsPlanargraphDirectedEdgeStar = { 2, "DirectedEdgeStar", "com.vividsolutions.jts.planargraph", NULL, 0x1, 12, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsPlanargraphDirectedEdgeStar;
}

@end

void ComVividsolutionsJtsPlanargraphDirectedEdgeStar_init(ComVividsolutionsJtsPlanargraphDirectedEdgeStar *self) {
  (void) NSObject_init(self);
  self->outEdges_ = new_JavaUtilArrayList_init();
  self->sorted_ = NO;
}

ComVividsolutionsJtsPlanargraphDirectedEdgeStar *new_ComVividsolutionsJtsPlanargraphDirectedEdgeStar_init() {
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar *self = [ComVividsolutionsJtsPlanargraphDirectedEdgeStar alloc];
  ComVividsolutionsJtsPlanargraphDirectedEdgeStar_init(self);
  return self;
}

void ComVividsolutionsJtsPlanargraphDirectedEdgeStar_sortEdges(ComVividsolutionsJtsPlanargraphDirectedEdgeStar *self) {
  if (!self->sorted_) {
    JavaUtilCollections_sortWithJavaUtilList_(self->outEdges_);
    self->sorted_ = YES;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsPlanargraphDirectedEdgeStar)
