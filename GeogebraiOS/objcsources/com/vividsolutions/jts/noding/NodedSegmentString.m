//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/noding/NodedSegmentString.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/LineIntersector.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/noding/NodedSegmentString.h"
#include "com/vividsolutions/jts/noding/Octant.h"
#include "com/vividsolutions/jts/noding/SegmentNode.h"
#include "com/vividsolutions/jts/noding/SegmentNodeList.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsNodingNodedSegmentString () {
 @public
  ComVividsolutionsJtsNodingSegmentNodeList *nodeList_;
  IOSObjectArray *pts_;
  id data_;
}

- (jint)safeOctantWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                  withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingNodedSegmentString, nodeList_, ComVividsolutionsJtsNodingSegmentNodeList *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingNodedSegmentString, pts_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingNodedSegmentString, data_, id)

__attribute__((unused)) static jint ComVividsolutionsJtsNodingNodedSegmentString_safeOctantWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingNodedSegmentString *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1);

@implementation ComVividsolutionsJtsNodingNodedSegmentString

+ (id<JavaUtilList>)getNodedSubstringsWithJavaUtilCollection:(id<JavaUtilCollection>)segStrings {
  return ComVividsolutionsJtsNodingNodedSegmentString_getNodedSubstringsWithJavaUtilCollection_(segStrings);
}

+ (void)getNodedSubstringsWithJavaUtilCollection:(id<JavaUtilCollection>)segStrings
                          withJavaUtilCollection:(id<JavaUtilCollection>)resultEdgelist {
  ComVividsolutionsJtsNodingNodedSegmentString_getNodedSubstringsWithJavaUtilCollection_withJavaUtilCollection_(segStrings, resultEdgelist);
}

- (instancetype)initWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts
                                                         withId:(id)data {
  ComVividsolutionsJtsNodingNodedSegmentString_initWithComVividsolutionsJtsGeomCoordinateArray_withId_(self, pts, data);
  return self;
}

- (id)getData {
  return data_;
}

- (void)setDataWithId:(id)data {
  ComVividsolutionsJtsNodingNodedSegmentString_set_data_(self, data);
}

- (ComVividsolutionsJtsNodingSegmentNodeList *)getNodeList {
  return nodeList_;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(pts_))->size_;
}

- (ComVividsolutionsJtsGeomCoordinate *)getCoordinateWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(pts_), i);
}

- (IOSObjectArray *)getCoordinates {
  return pts_;
}

- (jboolean)isClosed {
  return [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(nil_chk(pts_), 0))) isEqual:IOSObjectArray_Get(pts_, pts_->size_ - 1)];
}

- (jint)getSegmentOctantWithInt:(jint)index {
  if (index == ((IOSObjectArray *) nil_chk(pts_))->size_ - 1) return -1;
  return ComVividsolutionsJtsNodingNodedSegmentString_safeOctantWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, [self getCoordinateWithInt:index], [self getCoordinateWithInt:index + 1]);
}

- (jint)safeOctantWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                  withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  return ComVividsolutionsJtsNodingNodedSegmentString_safeOctantWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p1);
}

- (void)addIntersectionsWithComVividsolutionsJtsAlgorithmLineIntersector:(ComVividsolutionsJtsAlgorithmLineIntersector *)li
                                                                 withInt:(jint)segmentIndex
                                                                 withInt:(jint)geomIndex {
  for (jint i = 0; i < [((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(li)) getIntersectionNum]; i++) {
    [self addIntersectionWithComVividsolutionsJtsAlgorithmLineIntersector:li withInt:segmentIndex withInt:geomIndex withInt:i];
  }
}

- (void)addIntersectionWithComVividsolutionsJtsAlgorithmLineIntersector:(ComVividsolutionsJtsAlgorithmLineIntersector *)li
                                                                withInt:(jint)segmentIndex
                                                                withInt:(jint)geomIndex
                                                                withInt:(jint)intIndex {
  ComVividsolutionsJtsGeomCoordinate *intPt = [new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_([((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(li)) getIntersectionWithInt:intIndex]) autorelease];
  [self addIntersectionWithComVividsolutionsJtsGeomCoordinate:intPt withInt:segmentIndex];
}

- (void)addIntersectionWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)intPt
                                                      withInt:(jint)segmentIndex {
  [self addIntersectionNodeWithComVividsolutionsJtsGeomCoordinate:intPt withInt:segmentIndex];
}

- (ComVividsolutionsJtsNodingSegmentNode *)addIntersectionNodeWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)intPt
                                                                                             withInt:(jint)segmentIndex {
  jint normalizedSegmentIndex = segmentIndex;
  jint nextSegIndex = normalizedSegmentIndex + 1;
  if (nextSegIndex < ((IOSObjectArray *) nil_chk(pts_))->size_) {
    ComVividsolutionsJtsGeomCoordinate *nextPt = IOSObjectArray_Get(pts_, nextSegIndex);
    if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(intPt)) equals2DWithComVividsolutionsJtsGeomCoordinate:nextPt]) {
      normalizedSegmentIndex = nextSegIndex;
    }
  }
  ComVividsolutionsJtsNodingSegmentNode *ei = [((ComVividsolutionsJtsNodingSegmentNodeList *) nil_chk(nodeList_)) addWithComVividsolutionsJtsGeomCoordinate:intPt withInt:normalizedSegmentIndex];
  return ei;
}

- (void)dealloc {
  RELEASE_(nodeList_);
  RELEASE_(pts_);
  RELEASE_(data_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getNodedSubstringsWithJavaUtilCollection:", "getNodedSubstrings", "Ljava.util.List;", 0x9, NULL, NULL },
    { "getNodedSubstringsWithJavaUtilCollection:withJavaUtilCollection:", "getNodedSubstrings", "V", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomCoordinateArray:withId:", "NodedSegmentString", NULL, 0x1, NULL, NULL },
    { "getData", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setDataWithId:", "setData", "V", 0x1, NULL, NULL },
    { "getNodeList", NULL, "Lcom.vividsolutions.jts.noding.SegmentNodeList;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "getCoordinateWithInt:", "getCoordinate", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getCoordinates", NULL, "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "isClosed", NULL, "Z", 0x1, NULL, NULL },
    { "getSegmentOctantWithInt:", "getSegmentOctant", "I", 0x1, NULL, NULL },
    { "safeOctantWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "safeOctant", "I", 0x2, NULL, NULL },
    { "addIntersectionsWithComVividsolutionsJtsAlgorithmLineIntersector:withInt:withInt:", "addIntersections", "V", 0x1, NULL, NULL },
    { "addIntersectionWithComVividsolutionsJtsAlgorithmLineIntersector:withInt:withInt:withInt:", "addIntersection", "V", 0x1, NULL, NULL },
    { "addIntersectionWithComVividsolutionsJtsGeomCoordinate:withInt:", "addIntersection", "V", 0x1, NULL, NULL },
    { "addIntersectionNodeWithComVividsolutionsJtsGeomCoordinate:withInt:", "addIntersectionNode", "Lcom.vividsolutions.jts.noding.SegmentNode;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nodeList_", NULL, 0x2, "Lcom.vividsolutions.jts.noding.SegmentNodeList;", NULL, NULL,  },
    { "pts_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "data_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsNodingNodedSegmentString = { 2, "NodedSegmentString", "com.vividsolutions.jts.noding", NULL, 0x1, 16, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsNodingNodedSegmentString;
}

@end

id<JavaUtilList> ComVividsolutionsJtsNodingNodedSegmentString_getNodedSubstringsWithJavaUtilCollection_(id<JavaUtilCollection> segStrings) {
  ComVividsolutionsJtsNodingNodedSegmentString_initialize();
  id<JavaUtilList> resultEdgelist = [new_JavaUtilArrayList_init() autorelease];
  ComVividsolutionsJtsNodingNodedSegmentString_getNodedSubstringsWithJavaUtilCollection_withJavaUtilCollection_(segStrings, resultEdgelist);
  return resultEdgelist;
}

void ComVividsolutionsJtsNodingNodedSegmentString_getNodedSubstringsWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> segStrings, id<JavaUtilCollection> resultEdgelist) {
  ComVividsolutionsJtsNodingNodedSegmentString_initialize();
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk(segStrings)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsNodingNodedSegmentString *ss = (ComVividsolutionsJtsNodingNodedSegmentString *) check_class_cast([i next], [ComVividsolutionsJtsNodingNodedSegmentString class]);
    [((ComVividsolutionsJtsNodingSegmentNodeList *) nil_chk([((ComVividsolutionsJtsNodingNodedSegmentString *) nil_chk(ss)) getNodeList])) addSplitEdgesWithJavaUtilCollection:resultEdgelist];
  }
}

void ComVividsolutionsJtsNodingNodedSegmentString_initWithComVividsolutionsJtsGeomCoordinateArray_withId_(ComVividsolutionsJtsNodingNodedSegmentString *self, IOSObjectArray *pts, id data) {
  NSObject_init(self);
  ComVividsolutionsJtsNodingNodedSegmentString_setAndConsume_nodeList_(self, new_ComVividsolutionsJtsNodingSegmentNodeList_initWithComVividsolutionsJtsNodingNodedSegmentString_(self));
  ComVividsolutionsJtsNodingNodedSegmentString_set_pts_(self, pts);
  ComVividsolutionsJtsNodingNodedSegmentString_set_data_(self, data);
}

ComVividsolutionsJtsNodingNodedSegmentString *new_ComVividsolutionsJtsNodingNodedSegmentString_initWithComVividsolutionsJtsGeomCoordinateArray_withId_(IOSObjectArray *pts, id data) {
  ComVividsolutionsJtsNodingNodedSegmentString *self = [ComVividsolutionsJtsNodingNodedSegmentString alloc];
  ComVividsolutionsJtsNodingNodedSegmentString_initWithComVividsolutionsJtsGeomCoordinateArray_withId_(self, pts, data);
  return self;
}

jint ComVividsolutionsJtsNodingNodedSegmentString_safeOctantWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingNodedSegmentString *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1) {
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0)) equals2DWithComVividsolutionsJtsGeomCoordinate:p1]) return 0;
  return ComVividsolutionsJtsNodingOctant_octantWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p0, p1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsNodingNodedSegmentString)
