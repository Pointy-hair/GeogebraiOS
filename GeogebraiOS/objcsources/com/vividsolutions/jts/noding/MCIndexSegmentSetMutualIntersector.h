//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/noding/MCIndexSegmentSetMutualIntersector.java
//

#ifndef _ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_H_
#define _ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_H_

#include "J2ObjC_header.h"
#include "com/vividsolutions/jts/index/chain/MonotoneChainOverlapAction.h"
#include "com/vividsolutions/jts/noding/SegmentSetMutualIntersector.h"

@class ComVividsolutionsJtsIndexChainMonotoneChain;
@protocol ComVividsolutionsJtsIndexSpatialIndex;
@protocol ComVividsolutionsJtsNodingSegmentIntersector;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector : ComVividsolutionsJtsNodingSegmentSetMutualIntersector

#pragma mark Public

- (instancetype)init;

- (id<ComVividsolutionsJtsIndexSpatialIndex>)getIndex;

- (id<JavaUtilList>)getMonotoneChains;

- (void)processWithJavaUtilCollection:(id<JavaUtilCollection>)segStrings;

- (void)setBaseSegmentsWithJavaUtilCollection:(id<JavaUtilCollection>)segStrings;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector)

FOUNDATION_EXPORT void ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_init(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector *self);

FOUNDATION_EXPORT ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector *new_ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector)

@interface ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_SegmentOverlapAction : ComVividsolutionsJtsIndexChainMonotoneChainOverlapAction

#pragma mark Public

- (instancetype)initWithComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector:(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector *)outer$
                                    withComVividsolutionsJtsNodingSegmentIntersector:(id<ComVividsolutionsJtsNodingSegmentIntersector>)si;

- (void)overlapWithComVividsolutionsJtsIndexChainMonotoneChain:(ComVividsolutionsJtsIndexChainMonotoneChain *)mc1
                                                       withInt:(jint)start1
               withComVividsolutionsJtsIndexChainMonotoneChain:(ComVividsolutionsJtsIndexChainMonotoneChain *)mc2
                                                       withInt:(jint)start2;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_SegmentOverlapAction)

FOUNDATION_EXPORT void ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_SegmentOverlapAction_initWithComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_withComVividsolutionsJtsNodingSegmentIntersector_(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_SegmentOverlapAction *self, ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector *outer$, id<ComVividsolutionsJtsNodingSegmentIntersector> si);

FOUNDATION_EXPORT ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_SegmentOverlapAction *new_ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_SegmentOverlapAction_initWithComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_withComVividsolutionsJtsNodingSegmentIntersector_(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector *outer$, id<ComVividsolutionsJtsNodingSegmentIntersector> si) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_SegmentOverlapAction)

#endif // _ComVividsolutionsJtsNodingMCIndexSegmentSetMutualIntersector_H_
