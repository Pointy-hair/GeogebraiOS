//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/noding/IntersectionAdder.java
//

#ifndef _ComVividsolutionsJtsNodingIntersectionAdder_H_
#define _ComVividsolutionsJtsNodingIntersectionAdder_H_

#include "J2ObjC_header.h"
#include "com/vividsolutions/jts/noding/SegmentIntersector.h"

@class ComVividsolutionsJtsAlgorithmLineIntersector;
@class ComVividsolutionsJtsGeomCoordinate;
@protocol ComVividsolutionsJtsNodingSegmentString;

@interface ComVividsolutionsJtsNodingIntersectionAdder : NSObject < ComVividsolutionsJtsNodingSegmentIntersector > {
 @public
  jint numIntersections_;
  jint numInteriorIntersections_;
  jint numProperIntersections_;
  jint numTests_;
}

#pragma mark Public

- (instancetype)initWithComVividsolutionsJtsAlgorithmLineIntersector:(ComVividsolutionsJtsAlgorithmLineIntersector *)li;

- (ComVividsolutionsJtsAlgorithmLineIntersector *)getLineIntersector;

- (ComVividsolutionsJtsGeomCoordinate *)getProperIntersectionPoint;

- (jboolean)hasInteriorIntersection;

- (jboolean)hasIntersection;

- (jboolean)hasProperInteriorIntersection;

- (jboolean)hasProperIntersection;

+ (jboolean)isAdjacentSegmentsWithInt:(jint)i1
                              withInt:(jint)i2;

- (jboolean)isDone;

- (void)processIntersectionsWithComVividsolutionsJtsNodingSegmentString:(id<ComVividsolutionsJtsNodingSegmentString>)e0
                                                                withInt:(jint)segIndex0
                            withComVividsolutionsJtsNodingSegmentString:(id<ComVividsolutionsJtsNodingSegmentString>)e1
                                                                withInt:(jint)segIndex1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsNodingIntersectionAdder)

FOUNDATION_EXPORT jboolean ComVividsolutionsJtsNodingIntersectionAdder_isAdjacentSegmentsWithInt_withInt_(jint i1, jint i2);

FOUNDATION_EXPORT void ComVividsolutionsJtsNodingIntersectionAdder_initWithComVividsolutionsJtsAlgorithmLineIntersector_(ComVividsolutionsJtsNodingIntersectionAdder *self, ComVividsolutionsJtsAlgorithmLineIntersector *li);

FOUNDATION_EXPORT ComVividsolutionsJtsNodingIntersectionAdder *new_ComVividsolutionsJtsNodingIntersectionAdder_initWithComVividsolutionsJtsAlgorithmLineIntersector_(ComVividsolutionsJtsAlgorithmLineIntersector *li) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsNodingIntersectionAdder)

#endif // _ComVividsolutionsJtsNodingIntersectionAdder_H_
