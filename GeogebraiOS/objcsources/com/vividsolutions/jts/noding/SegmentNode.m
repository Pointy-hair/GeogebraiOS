//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/noding/SegmentNode.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/noding/NodedSegmentString.h"
#include "com/vividsolutions/jts/noding/SegmentNode.h"
#include "com/vividsolutions/jts/noding/SegmentPointComparator.h"
#include "java/io/PrintStream.h"

@interface ComVividsolutionsJtsNodingSegmentNode () {
 @public
  ComVividsolutionsJtsNodingNodedSegmentString *segString_;
  jint segmentOctant_;
  jboolean isInterior__;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSegmentNode, segString_, ComVividsolutionsJtsNodingNodedSegmentString *)

@implementation ComVividsolutionsJtsNodingSegmentNode

- (instancetype)initWithComVividsolutionsJtsNodingNodedSegmentString:(ComVividsolutionsJtsNodingNodedSegmentString *)segString
                              withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coord
                                                             withInt:(jint)segmentIndex
                                                             withInt:(jint)segmentOctant {
  ComVividsolutionsJtsNodingSegmentNode_initWithComVividsolutionsJtsNodingNodedSegmentString_withComVividsolutionsJtsGeomCoordinate_withInt_withInt_(self, segString, coord, segmentIndex, segmentOctant);
  return self;
}

- (jboolean)isInterior {
  return isInterior__;
}

- (jboolean)isEndPointWithInt:(jint)maxSegmentIndex {
  if (segmentIndex_ == 0 && !isInterior__) return YES;
  if (segmentIndex_ == maxSegmentIndex) return YES;
  return NO;
}

- (jint)compareToWithId:(id)obj {
  ComVividsolutionsJtsNodingSegmentNode *other = (ComVividsolutionsJtsNodingSegmentNode *) check_class_cast(obj, [ComVividsolutionsJtsNodingSegmentNode class]);
  if (segmentIndex_ < ((ComVividsolutionsJtsNodingSegmentNode *) nil_chk(other))->segmentIndex_) return -1;
  if (segmentIndex_ > other->segmentIndex_) return 1;
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(coord_)) equals2DWithComVividsolutionsJtsGeomCoordinate:other->coord_]) return 0;
  return ComVividsolutionsJtsNodingSegmentPointComparator_compareWithInt_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(segmentOctant_, coord_, other->coord_);
}

- (void)printWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  [((JavaIoPrintStream *) nil_chk(outArg)) printWithId:coord_];
  [outArg printWithNSString:JreStrcat("$I", @" seg # = ", segmentIndex_)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsNodingNodedSegmentString:withComVividsolutionsJtsGeomCoordinate:withInt:withInt:", "SegmentNode", NULL, 0x1, NULL, NULL },
    { "isInterior", NULL, "Z", 0x1, NULL, NULL },
    { "isEndPointWithInt:", "isEndPoint", "Z", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "printWithJavaIoPrintStream:", "print", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "segString_", NULL, 0x12, "Lcom.vividsolutions.jts.noding.NodedSegmentString;", NULL, NULL,  },
    { "coord_", NULL, 0x11, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "segmentIndex_", NULL, 0x11, "I", NULL, NULL,  },
    { "segmentOctant_", NULL, 0x12, "I", NULL, NULL,  },
    { "isInterior__", "isInterior", 0x12, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsNodingSegmentNode = { 2, "SegmentNode", "com.vividsolutions.jts.noding", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsNodingSegmentNode;
}

@end

void ComVividsolutionsJtsNodingSegmentNode_initWithComVividsolutionsJtsNodingNodedSegmentString_withComVividsolutionsJtsGeomCoordinate_withInt_withInt_(ComVividsolutionsJtsNodingSegmentNode *self, ComVividsolutionsJtsNodingNodedSegmentString *segString, ComVividsolutionsJtsGeomCoordinate *coord, jint segmentIndex, jint segmentOctant) {
  (void) NSObject_init(self);
  self->segString_ = segString;
  self->coord_ = new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(coord);
  self->segmentIndex_ = segmentIndex;
  self->segmentOctant_ = segmentOctant;
  self->isInterior__ = ![((ComVividsolutionsJtsGeomCoordinate *) nil_chk(coord)) equals2DWithComVividsolutionsJtsGeomCoordinate:[((ComVividsolutionsJtsNodingNodedSegmentString *) nil_chk(segString)) getCoordinateWithInt:segmentIndex]];
}

ComVividsolutionsJtsNodingSegmentNode *new_ComVividsolutionsJtsNodingSegmentNode_initWithComVividsolutionsJtsNodingNodedSegmentString_withComVividsolutionsJtsGeomCoordinate_withInt_withInt_(ComVividsolutionsJtsNodingNodedSegmentString *segString, ComVividsolutionsJtsGeomCoordinate *coord, jint segmentIndex, jint segmentOctant) {
  ComVividsolutionsJtsNodingSegmentNode *self = [ComVividsolutionsJtsNodingSegmentNode alloc];
  ComVividsolutionsJtsNodingSegmentNode_initWithComVividsolutionsJtsNodingNodedSegmentString_withComVividsolutionsJtsGeomCoordinate_withInt_withInt_(self, segString, coord, segmentIndex, segmentOctant);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsNodingSegmentNode)
