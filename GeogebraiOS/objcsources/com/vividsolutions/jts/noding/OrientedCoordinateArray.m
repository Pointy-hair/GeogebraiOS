//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/noding/OrientedCoordinateArray.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/CoordinateArrays.h"
#include "com/vividsolutions/jts/noding/OrientedCoordinateArray.h"

@interface ComVividsolutionsJtsNodingOrientedCoordinateArray () {
 @public
  IOSObjectArray *pts_;
  jboolean orientation__;
}

+ (jboolean)orientationWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts;

+ (jint)compareOrientedWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts1
                                                       withBoolean:(jboolean)orientation1
                       withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts2
                                                       withBoolean:(jboolean)orientation2;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingOrientedCoordinateArray, pts_, IOSObjectArray *)

__attribute__((unused)) static jboolean ComVividsolutionsJtsNodingOrientedCoordinateArray_orientationWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts);

__attribute__((unused)) static jint ComVividsolutionsJtsNodingOrientedCoordinateArray_compareOrientedWithComVividsolutionsJtsGeomCoordinateArray_withBoolean_withComVividsolutionsJtsGeomCoordinateArray_withBoolean_(IOSObjectArray *pts1, jboolean orientation1, IOSObjectArray *pts2, jboolean orientation2);

@implementation ComVividsolutionsJtsNodingOrientedCoordinateArray

- (instancetype)initWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  ComVividsolutionsJtsNodingOrientedCoordinateArray_initWithComVividsolutionsJtsGeomCoordinateArray_(self, pts);
  return self;
}

+ (jboolean)orientationWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  return ComVividsolutionsJtsNodingOrientedCoordinateArray_orientationWithComVividsolutionsJtsGeomCoordinateArray_(pts);
}

- (jint)compareToWithId:(id)o1 {
  ComVividsolutionsJtsNodingOrientedCoordinateArray *oca = (ComVividsolutionsJtsNodingOrientedCoordinateArray *) check_class_cast(o1, [ComVividsolutionsJtsNodingOrientedCoordinateArray class]);
  jint comp = ComVividsolutionsJtsNodingOrientedCoordinateArray_compareOrientedWithComVividsolutionsJtsGeomCoordinateArray_withBoolean_withComVividsolutionsJtsGeomCoordinateArray_withBoolean_(pts_, orientation__, ((ComVividsolutionsJtsNodingOrientedCoordinateArray *) nil_chk(oca))->pts_, oca->orientation__);
  return comp;
}

+ (jint)compareOrientedWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts1
                                                       withBoolean:(jboolean)orientation1
                       withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts2
                                                       withBoolean:(jboolean)orientation2 {
  return ComVividsolutionsJtsNodingOrientedCoordinateArray_compareOrientedWithComVividsolutionsJtsGeomCoordinateArray_withBoolean_withComVividsolutionsJtsGeomCoordinateArray_withBoolean_(pts1, orientation1, pts2, orientation2);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomCoordinateArray:", "OrientedCoordinateArray", NULL, 0x1, NULL, NULL },
    { "orientationWithComVividsolutionsJtsGeomCoordinateArray:", "orientation", "Z", 0xa, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "compareOrientedWithComVividsolutionsJtsGeomCoordinateArray:withBoolean:withComVividsolutionsJtsGeomCoordinateArray:withBoolean:", "compareOriented", "I", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pts_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "orientation__", "orientation", 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsNodingOrientedCoordinateArray = { 2, "OrientedCoordinateArray", "com.vividsolutions.jts.noding", NULL, 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsNodingOrientedCoordinateArray;
}

@end

void ComVividsolutionsJtsNodingOrientedCoordinateArray_initWithComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsNodingOrientedCoordinateArray *self, IOSObjectArray *pts) {
  (void) NSObject_init(self);
  self->pts_ = pts;
  self->orientation__ = ComVividsolutionsJtsNodingOrientedCoordinateArray_orientationWithComVividsolutionsJtsGeomCoordinateArray_(pts);
}

ComVividsolutionsJtsNodingOrientedCoordinateArray *new_ComVividsolutionsJtsNodingOrientedCoordinateArray_initWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts) {
  ComVividsolutionsJtsNodingOrientedCoordinateArray *self = [ComVividsolutionsJtsNodingOrientedCoordinateArray alloc];
  ComVividsolutionsJtsNodingOrientedCoordinateArray_initWithComVividsolutionsJtsGeomCoordinateArray_(self, pts);
  return self;
}

jboolean ComVividsolutionsJtsNodingOrientedCoordinateArray_orientationWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts) {
  ComVividsolutionsJtsNodingOrientedCoordinateArray_initialize();
  return ComVividsolutionsJtsGeomCoordinateArrays_increasingDirectionWithComVividsolutionsJtsGeomCoordinateArray_(pts) == 1;
}

jint ComVividsolutionsJtsNodingOrientedCoordinateArray_compareOrientedWithComVividsolutionsJtsGeomCoordinateArray_withBoolean_withComVividsolutionsJtsGeomCoordinateArray_withBoolean_(IOSObjectArray *pts1, jboolean orientation1, IOSObjectArray *pts2, jboolean orientation2) {
  ComVividsolutionsJtsNodingOrientedCoordinateArray_initialize();
  jint dir1 = orientation1 ? 1 : -1;
  jint dir2 = orientation2 ? 1 : -1;
  jint limit1 = orientation1 ? ((IOSObjectArray *) nil_chk(pts1))->size_ : -1;
  jint limit2 = orientation2 ? ((IOSObjectArray *) nil_chk(pts2))->size_ : -1;
  jint i1 = orientation1 ? 0 : ((IOSObjectArray *) nil_chk(pts1))->size_ - 1;
  jint i2 = orientation2 ? 0 : ((IOSObjectArray *) nil_chk(pts2))->size_ - 1;
  jint comp = 0;
  while (YES) {
    jint compPt = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(nil_chk(pts1), i1))) compareToWithId:IOSObjectArray_Get(nil_chk(pts2), i2)];
    if (compPt != 0) return compPt;
    i1 += dir1;
    i2 += dir2;
    jboolean done1 = i1 == limit1;
    jboolean done2 = i2 == limit2;
    if (done1 && !done2) return -1;
    if (!done1 && done2) return 1;
    if (done1 && done2) return 0;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsNodingOrientedCoordinateArray)
