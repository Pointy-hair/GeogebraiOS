//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/noding/snapround/HotPixel.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/LineIntersector.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/noding/NodedSegmentString.h"
#include "com/vividsolutions/jts/noding/snapround/HotPixel.h"
#include "com/vividsolutions/jts/util/Assert.h"
#include "java/lang/Math.h"

@interface ComVividsolutionsJtsNodingSnaproundHotPixel () {
 @public
  ComVividsolutionsJtsAlgorithmLineIntersector *li_;
  ComVividsolutionsJtsGeomCoordinate *pt_;
  ComVividsolutionsJtsGeomCoordinate *originalPt_;
  ComVividsolutionsJtsGeomCoordinate *ptScaled_;
  ComVividsolutionsJtsGeomCoordinate *p0Scaled_;
  ComVividsolutionsJtsGeomCoordinate *p1Scaled_;
  jdouble scaleFactor_;
  jdouble minx_;
  jdouble maxx_;
  jdouble miny_;
  jdouble maxy_;
  IOSObjectArray *corner_;
  ComVividsolutionsJtsGeomEnvelope *safeEnv_;
}

- (void)initCornersWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt OBJC_METHOD_FAMILY_NONE;

- (jdouble)scale__WithDouble:(jdouble)val;

- (void)copyScaledWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                  withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pScaled OBJC_METHOD_FAMILY_NONE;

- (jboolean)intersectsToleranceSquareWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                                     withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1;

- (jboolean)intersectsPixelClosureWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                                  withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, li_, ComVividsolutionsJtsAlgorithmLineIntersector *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, pt_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, originalPt_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, ptScaled_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, p0Scaled_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, p1Scaled_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, corner_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsNodingSnaproundHotPixel, safeEnv_, ComVividsolutionsJtsGeomEnvelope *)

__attribute__((unused)) static void ComVividsolutionsJtsNodingSnaproundHotPixel_initCornersWithComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, ComVividsolutionsJtsGeomCoordinate *pt);

__attribute__((unused)) static jdouble ComVividsolutionsJtsNodingSnaproundHotPixel_scale__WithDouble_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, jdouble val);

__attribute__((unused)) static void ComVividsolutionsJtsNodingSnaproundHotPixel_copyScaledWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, ComVividsolutionsJtsGeomCoordinate *p, ComVividsolutionsJtsGeomCoordinate *pScaled);

__attribute__((unused)) static jboolean ComVividsolutionsJtsNodingSnaproundHotPixel_intersectsToleranceSquareWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1);

@implementation ComVividsolutionsJtsNodingSnaproundHotPixel

- (instancetype)initWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt
                                                withDouble:(jdouble)scaleFactor
          withComVividsolutionsJtsAlgorithmLineIntersector:(ComVividsolutionsJtsAlgorithmLineIntersector *)li {
  ComVividsolutionsJtsNodingSnaproundHotPixel_initWithComVividsolutionsJtsGeomCoordinate_withDouble_withComVividsolutionsJtsAlgorithmLineIntersector_(self, pt, scaleFactor, li);
  return self;
}

- (ComVividsolutionsJtsGeomCoordinate *)getCoordinate {
  return originalPt_;
}

- (ComVividsolutionsJtsGeomEnvelope *)getSafeEnvelope {
  if (safeEnv_ == nil) {
    jdouble safeTolerance = .75 / scaleFactor_;
    safeEnv_ = new_ComVividsolutionsJtsGeomEnvelope_initWithDouble_withDouble_withDouble_withDouble_(((ComVividsolutionsJtsGeomCoordinate *) nil_chk(originalPt_))->x_ - safeTolerance, originalPt_->x_ + safeTolerance, originalPt_->y_ - safeTolerance, originalPt_->y_ + safeTolerance);
  }
  return safeEnv_;
}

- (void)initCornersWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt {
  ComVividsolutionsJtsNodingSnaproundHotPixel_initCornersWithComVividsolutionsJtsGeomCoordinate_(self, pt);
}

- (jdouble)scale__WithDouble:(jdouble)val {
  return ComVividsolutionsJtsNodingSnaproundHotPixel_scale__WithDouble_(self, val);
}

- (jboolean)intersectsWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                      withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  if (scaleFactor_ == 1.0) return [self intersectsScaledWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1];
  ComVividsolutionsJtsNodingSnaproundHotPixel_copyScaledWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p0Scaled_);
  ComVividsolutionsJtsNodingSnaproundHotPixel_copyScaledWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p1, p1Scaled_);
  return [self intersectsScaledWithComVividsolutionsJtsGeomCoordinate:p0Scaled_ withComVividsolutionsJtsGeomCoordinate:p1Scaled_];
}

- (void)copyScaledWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                  withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pScaled {
  ComVividsolutionsJtsNodingSnaproundHotPixel_copyScaledWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p, pScaled);
}

- (jboolean)intersectsScaledWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                            withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  jdouble segMinx = JavaLangMath_minWithDouble_withDouble_(((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0))->x_, ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_);
  jdouble segMaxx = JavaLangMath_maxWithDouble_withDouble_(p0->x_, p1->x_);
  jdouble segMiny = JavaLangMath_minWithDouble_withDouble_(p0->y_, p1->y_);
  jdouble segMaxy = JavaLangMath_maxWithDouble_withDouble_(p0->y_, p1->y_);
  jboolean isOutsidePixelEnv = maxx_ < segMinx || minx_ > segMaxx || maxy_ < segMiny || miny_ > segMaxy;
  if (isOutsidePixelEnv) return NO;
  jboolean intersects = ComVividsolutionsJtsNodingSnaproundHotPixel_intersectsToleranceSquareWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p1);
  ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_withNSString_(!(isOutsidePixelEnv && intersects), @"Found bad envelope test");
  return intersects;
}

- (jboolean)intersectsToleranceSquareWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                                     withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  return ComVividsolutionsJtsNodingSnaproundHotPixel_intersectsToleranceSquareWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p1);
}

- (jboolean)intersectsPixelClosureWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                                  withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  [((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(li_)) computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(nil_chk(corner_), 0) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(corner_, 1)];
  if ([li_ hasIntersection]) return YES;
  [li_ computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(corner_, 1) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(corner_, 2)];
  if ([li_ hasIntersection]) return YES;
  [li_ computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(corner_, 2) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(corner_, 3)];
  if ([li_ hasIntersection]) return YES;
  [li_ computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(corner_, 3) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(corner_, 0)];
  if ([li_ hasIntersection]) return YES;
  return NO;
}

- (jboolean)addSnappedNodeWithComVividsolutionsJtsNodingNodedSegmentString:(ComVividsolutionsJtsNodingNodedSegmentString *)segStr
                                                                   withInt:(jint)segIndex {
  ComVividsolutionsJtsGeomCoordinate *p0 = [((ComVividsolutionsJtsNodingNodedSegmentString *) nil_chk(segStr)) getCoordinateWithInt:segIndex];
  ComVividsolutionsJtsGeomCoordinate *p1 = [segStr getCoordinateWithInt:segIndex + 1];
  if ([self intersectsWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1]) {
    [segStr addIntersectionWithComVividsolutionsJtsGeomCoordinate:[self getCoordinate] withInt:segIndex];
    return YES;
  }
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomCoordinate:withDouble:withComVividsolutionsJtsAlgorithmLineIntersector:", "HotPixel", NULL, 0x1, NULL, NULL },
    { "getCoordinate", NULL, "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getSafeEnvelope", NULL, "Lcom.vividsolutions.jts.geom.Envelope;", 0x1, NULL, NULL },
    { "initCornersWithComVividsolutionsJtsGeomCoordinate:", "initCorners", "V", 0x2, NULL, NULL },
    { "scale__WithDouble:", "scale", "D", 0x2, NULL, NULL },
    { "intersectsWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "intersects", "Z", 0x1, NULL, NULL },
    { "copyScaledWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "copyScaled", "V", 0x2, NULL, NULL },
    { "intersectsScaledWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "intersectsScaled", "Z", 0x1, NULL, NULL },
    { "intersectsToleranceSquareWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "intersectsToleranceSquare", "Z", 0x2, NULL, NULL },
    { "intersectsPixelClosureWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "intersectsPixelClosure", "Z", 0x2, NULL, NULL },
    { "addSnappedNodeWithComVividsolutionsJtsNodingNodedSegmentString:withInt:", "addSnappedNode", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "li_", NULL, 0x2, "Lcom.vividsolutions.jts.algorithm.LineIntersector;", NULL, NULL,  },
    { "pt_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "originalPt_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "ptScaled_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "p0Scaled_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "p1Scaled_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "scaleFactor_", NULL, 0x2, "D", NULL, NULL,  },
    { "minx_", NULL, 0x2, "D", NULL, NULL,  },
    { "maxx_", NULL, 0x2, "D", NULL, NULL,  },
    { "miny_", NULL, 0x2, "D", NULL, NULL,  },
    { "maxy_", NULL, 0x2, "D", NULL, NULL,  },
    { "corner_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "safeEnv_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Envelope;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsNodingSnaproundHotPixel = { 2, "HotPixel", "com.vividsolutions.jts.noding.snapround", NULL, 0x1, 11, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsNodingSnaproundHotPixel;
}

@end

void ComVividsolutionsJtsNodingSnaproundHotPixel_initWithComVividsolutionsJtsGeomCoordinate_withDouble_withComVividsolutionsJtsAlgorithmLineIntersector_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, ComVividsolutionsJtsGeomCoordinate *pt, jdouble scaleFactor, ComVividsolutionsJtsAlgorithmLineIntersector *li) {
  (void) NSObject_init(self);
  self->corner_ = [IOSObjectArray newArrayWithLength:4 type:ComVividsolutionsJtsGeomCoordinate_class_()];
  self->safeEnv_ = nil;
  self->originalPt_ = pt;
  self->pt_ = pt;
  self->scaleFactor_ = scaleFactor;
  self->li_ = li;
  if (scaleFactor != 1.0) {
    self->pt_ = new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(ComVividsolutionsJtsNodingSnaproundHotPixel_scale__WithDouble_(self, ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pt))->x_), ComVividsolutionsJtsNodingSnaproundHotPixel_scale__WithDouble_(self, pt->y_));
    self->p0Scaled_ = new_ComVividsolutionsJtsGeomCoordinate_init();
    self->p1Scaled_ = new_ComVividsolutionsJtsGeomCoordinate_init();
  }
  ComVividsolutionsJtsNodingSnaproundHotPixel_initCornersWithComVividsolutionsJtsGeomCoordinate_(self, self->pt_);
}

ComVividsolutionsJtsNodingSnaproundHotPixel *new_ComVividsolutionsJtsNodingSnaproundHotPixel_initWithComVividsolutionsJtsGeomCoordinate_withDouble_withComVividsolutionsJtsAlgorithmLineIntersector_(ComVividsolutionsJtsGeomCoordinate *pt, jdouble scaleFactor, ComVividsolutionsJtsAlgorithmLineIntersector *li) {
  ComVividsolutionsJtsNodingSnaproundHotPixel *self = [ComVividsolutionsJtsNodingSnaproundHotPixel alloc];
  ComVividsolutionsJtsNodingSnaproundHotPixel_initWithComVividsolutionsJtsGeomCoordinate_withDouble_withComVividsolutionsJtsAlgorithmLineIntersector_(self, pt, scaleFactor, li);
  return self;
}

void ComVividsolutionsJtsNodingSnaproundHotPixel_initCornersWithComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, ComVividsolutionsJtsGeomCoordinate *pt) {
  jdouble tolerance = 0.5;
  self->minx_ = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pt))->x_ - tolerance;
  self->maxx_ = pt->x_ + tolerance;
  self->miny_ = pt->y_ - tolerance;
  self->maxy_ = pt->y_ + tolerance;
  (void) IOSObjectArray_Set(nil_chk(self->corner_), 0, new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(self->maxx_, self->maxy_));
  (void) IOSObjectArray_Set(self->corner_, 1, new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(self->minx_, self->maxy_));
  (void) IOSObjectArray_Set(self->corner_, 2, new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(self->minx_, self->miny_));
  (void) IOSObjectArray_Set(self->corner_, 3, new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(self->maxx_, self->miny_));
}

jdouble ComVividsolutionsJtsNodingSnaproundHotPixel_scale__WithDouble_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, jdouble val) {
  return (jdouble) JavaLangMath_roundWithDouble_(val * self->scaleFactor_);
}

void ComVividsolutionsJtsNodingSnaproundHotPixel_copyScaledWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, ComVividsolutionsJtsGeomCoordinate *p, ComVividsolutionsJtsGeomCoordinate *pScaled) {
  ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(pScaled))->x_ = ComVividsolutionsJtsNodingSnaproundHotPixel_scale__WithDouble_(self, ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p))->x_);
  pScaled->y_ = ComVividsolutionsJtsNodingSnaproundHotPixel_scale__WithDouble_(self, p->y_);
}

jboolean ComVividsolutionsJtsNodingSnaproundHotPixel_intersectsToleranceSquareWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsNodingSnaproundHotPixel *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1) {
  jboolean intersectsLeft = NO;
  jboolean intersectsBottom = NO;
  [((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(self->li_)) computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(nil_chk(self->corner_), 0) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(self->corner_, 1)];
  if ([self->li_ isProper]) return YES;
  [self->li_ computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(self->corner_, 1) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(self->corner_, 2)];
  if ([self->li_ isProper]) return YES;
  if ([self->li_ hasIntersection]) intersectsLeft = YES;
  [self->li_ computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(self->corner_, 2) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(self->corner_, 3)];
  if ([self->li_ isProper]) return YES;
  if ([self->li_ hasIntersection]) intersectsBottom = YES;
  [self->li_ computeIntersectionWithComVividsolutionsJtsGeomCoordinate:p0 withComVividsolutionsJtsGeomCoordinate:p1 withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(self->corner_, 3) withComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(self->corner_, 0)];
  if ([self->li_ isProper]) return YES;
  if (intersectsLeft && intersectsBottom) return YES;
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0)) isEqual:self->pt_]) return YES;
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1)) isEqual:self->pt_]) return YES;
  return NO;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsNodingSnaproundHotPixel)
