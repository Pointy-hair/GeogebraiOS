//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/linearref/LocationIndexedLine.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/LineSegment.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/MultiLineString.h"
#include "com/vividsolutions/jts/linearref/ExtractLineByLocation.h"
#include "com/vividsolutions/jts/linearref/LinearLocation.h"
#include "com/vividsolutions/jts/linearref/LocationIndexOfLine.h"
#include "com/vividsolutions/jts/linearref/LocationIndexOfPoint.h"
#include "com/vividsolutions/jts/linearref/LocationIndexedLine.h"
#include "java/lang/IllegalArgumentException.h"

@interface ComVividsolutionsJtsLinearrefLocationIndexedLine () {
 @public
  ComVividsolutionsJtsGeomGeometry *linearGeom_;
}

- (void)checkGeometryType;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsLinearrefLocationIndexedLine, linearGeom_, ComVividsolutionsJtsGeomGeometry *)

__attribute__((unused)) static void ComVividsolutionsJtsLinearrefLocationIndexedLine_checkGeometryType(ComVividsolutionsJtsLinearrefLocationIndexedLine *self);

@implementation ComVividsolutionsJtsLinearrefLocationIndexedLine

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)linearGeom {
  ComVividsolutionsJtsLinearrefLocationIndexedLine_initWithComVividsolutionsJtsGeomGeometry_(self, linearGeom);
  return self;
}

- (void)checkGeometryType {
  ComVividsolutionsJtsLinearrefLocationIndexedLine_checkGeometryType(self);
}

- (ComVividsolutionsJtsGeomCoordinate *)extractPointWithComVividsolutionsJtsLinearrefLinearLocation:(ComVividsolutionsJtsLinearrefLinearLocation *)index {
  return [((ComVividsolutionsJtsLinearrefLinearLocation *) nil_chk(index)) getCoordinateWithComVividsolutionsJtsGeomGeometry:linearGeom_];
}

- (ComVividsolutionsJtsGeomCoordinate *)extractPointWithComVividsolutionsJtsLinearrefLinearLocation:(ComVividsolutionsJtsLinearrefLinearLocation *)index
                                                                                         withDouble:(jdouble)offsetDistance {
  return [((ComVividsolutionsJtsGeomLineSegment *) nil_chk([((ComVividsolutionsJtsLinearrefLinearLocation *) nil_chk(index)) getSegmentWithComVividsolutionsJtsGeomGeometry:linearGeom_])) pointAlongOffsetWithDouble:[index getSegmentFraction] withDouble:offsetDistance];
}

- (ComVividsolutionsJtsGeomGeometry *)extractLineWithComVividsolutionsJtsLinearrefLinearLocation:(ComVividsolutionsJtsLinearrefLinearLocation *)startIndex
                                                 withComVividsolutionsJtsLinearrefLinearLocation:(ComVividsolutionsJtsLinearrefLinearLocation *)endIndex {
  return ComVividsolutionsJtsLinearrefExtractLineByLocation_extractWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsLinearrefLinearLocation_withComVividsolutionsJtsLinearrefLinearLocation_(linearGeom_, startIndex, endIndex);
}

- (ComVividsolutionsJtsLinearrefLinearLocation *)indexOfWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt {
  return ComVividsolutionsJtsLinearrefLocationIndexOfPoint_indexOfWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomCoordinate_(linearGeom_, pt);
}

- (ComVividsolutionsJtsLinearrefLinearLocation *)indexOfAfterWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt
                                                    withComVividsolutionsJtsLinearrefLinearLocation:(ComVividsolutionsJtsLinearrefLinearLocation *)minIndex {
  return ComVividsolutionsJtsLinearrefLocationIndexOfPoint_indexOfAfterWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsLinearrefLinearLocation_(linearGeom_, pt, minIndex);
}

- (IOSObjectArray *)indicesOfWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)subLine {
  return ComVividsolutionsJtsLinearrefLocationIndexOfLine_indicesOfWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(linearGeom_, subLine);
}

- (ComVividsolutionsJtsLinearrefLinearLocation *)projectWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)pt {
  return ComVividsolutionsJtsLinearrefLocationIndexOfPoint_indexOfWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomCoordinate_(linearGeom_, pt);
}

- (ComVividsolutionsJtsLinearrefLinearLocation *)getStartIndex {
  return new_ComVividsolutionsJtsLinearrefLinearLocation_init();
}

- (ComVividsolutionsJtsLinearrefLinearLocation *)getEndIndex {
  return ComVividsolutionsJtsLinearrefLinearLocation_getEndLocationWithComVividsolutionsJtsGeomGeometry_(linearGeom_);
}

- (jboolean)isValidIndexWithComVividsolutionsJtsLinearrefLinearLocation:(ComVividsolutionsJtsLinearrefLinearLocation *)index {
  return [((ComVividsolutionsJtsLinearrefLinearLocation *) nil_chk(index)) isValidWithComVividsolutionsJtsGeomGeometry:linearGeom_];
}

- (ComVividsolutionsJtsLinearrefLinearLocation *)clampIndexWithComVividsolutionsJtsLinearrefLinearLocation:(ComVividsolutionsJtsLinearrefLinearLocation *)index {
  ComVividsolutionsJtsLinearrefLinearLocation *loc = (ComVividsolutionsJtsLinearrefLinearLocation *) check_class_cast([((ComVividsolutionsJtsLinearrefLinearLocation *) nil_chk(index)) clone], [ComVividsolutionsJtsLinearrefLinearLocation class]);
  [((ComVividsolutionsJtsLinearrefLinearLocation *) nil_chk(loc)) clampWithComVividsolutionsJtsGeomGeometry:linearGeom_];
  return loc;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomGeometry:", "LocationIndexedLine", NULL, 0x1, NULL, NULL },
    { "checkGeometryType", NULL, "V", 0x2, NULL, NULL },
    { "extractPointWithComVividsolutionsJtsLinearrefLinearLocation:", "extractPoint", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "extractPointWithComVividsolutionsJtsLinearrefLinearLocation:withDouble:", "extractPoint", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "extractLineWithComVividsolutionsJtsLinearrefLinearLocation:withComVividsolutionsJtsLinearrefLinearLocation:", "extractLine", "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
    { "indexOfWithComVividsolutionsJtsGeomCoordinate:", "indexOf", "Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
    { "indexOfAfterWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsLinearrefLinearLocation:", "indexOfAfter", "Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
    { "indicesOfWithComVividsolutionsJtsGeomGeometry:", "indicesOf", "[Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
    { "projectWithComVividsolutionsJtsGeomCoordinate:", "project", "Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
    { "getStartIndex", NULL, "Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
    { "getEndIndex", NULL, "Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
    { "isValidIndexWithComVividsolutionsJtsLinearrefLinearLocation:", "isValidIndex", "Z", 0x1, NULL, NULL },
    { "clampIndexWithComVividsolutionsJtsLinearrefLinearLocation:", "clampIndex", "Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "linearGeom_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsLinearrefLocationIndexedLine = { 2, "LocationIndexedLine", "com.vividsolutions.jts.linearref", NULL, 0x1, 13, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsLinearrefLocationIndexedLine;
}

@end

void ComVividsolutionsJtsLinearrefLocationIndexedLine_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsLinearrefLocationIndexedLine *self, ComVividsolutionsJtsGeomGeometry *linearGeom) {
  (void) NSObject_init(self);
  self->linearGeom_ = linearGeom;
  ComVividsolutionsJtsLinearrefLocationIndexedLine_checkGeometryType(self);
}

ComVividsolutionsJtsLinearrefLocationIndexedLine *new_ComVividsolutionsJtsLinearrefLocationIndexedLine_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *linearGeom) {
  ComVividsolutionsJtsLinearrefLocationIndexedLine *self = [ComVividsolutionsJtsLinearrefLocationIndexedLine alloc];
  ComVividsolutionsJtsLinearrefLocationIndexedLine_initWithComVividsolutionsJtsGeomGeometry_(self, linearGeom);
  return self;
}

void ComVividsolutionsJtsLinearrefLocationIndexedLine_checkGeometryType(ComVividsolutionsJtsLinearrefLocationIndexedLine *self) {
  if (!([self->linearGeom_ isKindOfClass:[ComVividsolutionsJtsGeomLineString class]] || [self->linearGeom_ isKindOfClass:[ComVividsolutionsJtsGeomMultiLineString class]])) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Input geometry must be linear");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsLinearrefLocationIndexedLine)
