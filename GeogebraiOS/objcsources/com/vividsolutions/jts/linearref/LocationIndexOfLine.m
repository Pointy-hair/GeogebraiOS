//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/linearref/LocationIndexOfLine.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/linearref/LinearLocation.h"
#include "com/vividsolutions/jts/linearref/LocationIndexOfLine.h"
#include "com/vividsolutions/jts/linearref/LocationIndexOfPoint.h"

@interface ComVividsolutionsJtsLinearrefLocationIndexOfLine () {
 @public
  ComVividsolutionsJtsGeomGeometry *linearGeom_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsLinearrefLocationIndexOfLine, linearGeom_, ComVividsolutionsJtsGeomGeometry *)

@implementation ComVividsolutionsJtsLinearrefLocationIndexOfLine

+ (IOSObjectArray *)indicesOfWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)linearGeom
                             withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)subLine {
  return ComVividsolutionsJtsLinearrefLocationIndexOfLine_indicesOfWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(linearGeom, subLine);
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)linearGeom {
  ComVividsolutionsJtsLinearrefLocationIndexOfLine_initWithComVividsolutionsJtsGeomGeometry_(self, linearGeom);
  return self;
}

- (IOSObjectArray *)indicesOfWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)subLine {
  ComVividsolutionsJtsGeomCoordinate *startPt = [((ComVividsolutionsJtsGeomLineString *) nil_chk(((ComVividsolutionsJtsGeomLineString *) check_class_cast([((ComVividsolutionsJtsGeomGeometry *) nil_chk(subLine)) getGeometryNWithInt:0], [ComVividsolutionsJtsGeomLineString class])))) getCoordinateNWithInt:0];
  ComVividsolutionsJtsGeomLineString *lastLine = (ComVividsolutionsJtsGeomLineString *) check_class_cast([subLine getGeometryNWithInt:[subLine getNumGeometries] - 1], [ComVividsolutionsJtsGeomLineString class]);
  ComVividsolutionsJtsGeomCoordinate *endPt = [lastLine getCoordinateNWithInt:[((ComVividsolutionsJtsGeomLineString *) nil_chk(lastLine)) getNumPoints] - 1];
  ComVividsolutionsJtsLinearrefLocationIndexOfPoint *locPt = new_ComVividsolutionsJtsLinearrefLocationIndexOfPoint_initWithComVividsolutionsJtsGeomGeometry_(linearGeom_);
  IOSObjectArray *subLineLoc = [IOSObjectArray newArrayWithLength:2 type:ComVividsolutionsJtsLinearrefLinearLocation_class_()];
  (void) IOSObjectArray_Set(subLineLoc, 0, [locPt indexOfWithComVividsolutionsJtsGeomCoordinate:startPt]);
  if ([subLine getLength] == 0.0) {
    (void) IOSObjectArray_Set(subLineLoc, 1, (ComVividsolutionsJtsLinearrefLinearLocation *) check_class_cast([((ComVividsolutionsJtsLinearrefLinearLocation *) nil_chk(IOSObjectArray_Get(subLineLoc, 0))) clone], [ComVividsolutionsJtsLinearrefLinearLocation class]));
  }
  else {
    (void) IOSObjectArray_Set(subLineLoc, 1, [locPt indexOfAfterWithComVividsolutionsJtsGeomCoordinate:endPt withComVividsolutionsJtsLinearrefLinearLocation:IOSObjectArray_Get(subLineLoc, 0)]);
  }
  return subLineLoc;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "indicesOfWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "indicesOf", "[Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:", "LocationIndexOfLine", NULL, 0x1, NULL, NULL },
    { "indicesOfWithComVividsolutionsJtsGeomGeometry:", "indicesOf", "[Lcom.vividsolutions.jts.linearref.LinearLocation;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "linearGeom_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsLinearrefLocationIndexOfLine = { 2, "LocationIndexOfLine", "com.vividsolutions.jts.linearref", NULL, 0x0, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsLinearrefLocationIndexOfLine;
}

@end

IOSObjectArray *ComVividsolutionsJtsLinearrefLocationIndexOfLine_indicesOfWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *linearGeom, ComVividsolutionsJtsGeomGeometry *subLine) {
  ComVividsolutionsJtsLinearrefLocationIndexOfLine_initialize();
  ComVividsolutionsJtsLinearrefLocationIndexOfLine *locater = new_ComVividsolutionsJtsLinearrefLocationIndexOfLine_initWithComVividsolutionsJtsGeomGeometry_(linearGeom);
  return [locater indicesOfWithComVividsolutionsJtsGeomGeometry:subLine];
}

void ComVividsolutionsJtsLinearrefLocationIndexOfLine_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsLinearrefLocationIndexOfLine *self, ComVividsolutionsJtsGeomGeometry *linearGeom) {
  (void) NSObject_init(self);
  self->linearGeom_ = linearGeom;
}

ComVividsolutionsJtsLinearrefLocationIndexOfLine *new_ComVividsolutionsJtsLinearrefLocationIndexOfLine_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *linearGeom) {
  ComVividsolutionsJtsLinearrefLocationIndexOfLine *self = [ComVividsolutionsJtsLinearrefLocationIndexOfLine alloc];
  ComVividsolutionsJtsLinearrefLocationIndexOfLine_initWithComVividsolutionsJtsGeomGeometry_(self, linearGeom);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsLinearrefLocationIndexOfLine)
