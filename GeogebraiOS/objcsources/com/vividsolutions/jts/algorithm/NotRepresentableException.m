//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/algorithm/NotRepresentableException.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/NotRepresentableException.h"
#include "java/lang/Exception.h"

@implementation ComVividsolutionsJtsAlgorithmNotRepresentableException

- (instancetype)init {
  ComVividsolutionsJtsAlgorithmNotRepresentableException_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "NotRepresentableException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsAlgorithmNotRepresentableException = { 2, "NotRepresentableException", "com.vividsolutions.jts.algorithm", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsAlgorithmNotRepresentableException;
}

@end

void ComVividsolutionsJtsAlgorithmNotRepresentableException_init(ComVividsolutionsJtsAlgorithmNotRepresentableException *self) {
  (void) JavaLangException_initWithNSString_(self, @"Projective point not representable on the Cartesian plane.");
}

ComVividsolutionsJtsAlgorithmNotRepresentableException *new_ComVividsolutionsJtsAlgorithmNotRepresentableException_init() {
  ComVividsolutionsJtsAlgorithmNotRepresentableException *self = [ComVividsolutionsJtsAlgorithmNotRepresentableException alloc];
  ComVividsolutionsJtsAlgorithmNotRepresentableException_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsAlgorithmNotRepresentableException)
