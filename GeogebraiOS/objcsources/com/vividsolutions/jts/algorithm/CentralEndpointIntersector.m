//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/algorithm/CentralEndpointIntersector.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/CentralEndpointIntersector.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "java/lang/Double.h"

@interface ComVividsolutionsJtsAlgorithmCentralEndpointIntersector () {
 @public
  IOSObjectArray *pts_;
  ComVividsolutionsJtsGeomCoordinate *intPt_;
}

- (void)compute;

+ (ComVividsolutionsJtsGeomCoordinate *)averageWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts;

- (ComVividsolutionsJtsGeomCoordinate *)findNearestPointWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector, pts_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector, intPt_, ComVividsolutionsJtsGeomCoordinate *)

__attribute__((unused)) static void ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_compute(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *self);

__attribute__((unused)) static ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_averageWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts);

__attribute__((unused)) static ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_findNearestPointWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *self, ComVividsolutionsJtsGeomCoordinate *p, IOSObjectArray *pts);

@implementation ComVividsolutionsJtsAlgorithmCentralEndpointIntersector

+ (ComVividsolutionsJtsGeomCoordinate *)getIntersectionWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p00
                                                       withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p01
                                                       withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p10
                                                       withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p11 {
  return ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_getIntersectionWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p00, p01, p10, p11);
}

- (instancetype)initWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p00
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p01
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p10
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p11 {
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p00, p01, p10, p11);
  return self;
}

- (void)compute {
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_compute(self);
}

- (ComVividsolutionsJtsGeomCoordinate *)getIntersection {
  return intPt_;
}

+ (ComVividsolutionsJtsGeomCoordinate *)averageWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  return ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_averageWithComVividsolutionsJtsGeomCoordinateArray_(pts);
}

- (ComVividsolutionsJtsGeomCoordinate *)findNearestPointWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  return ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_findNearestPointWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(self, p, pts);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getIntersectionWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "getIntersection", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "CentralEndpointIntersector", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x2, NULL, NULL },
    { "getIntersection", NULL, "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "averageWithComVividsolutionsJtsGeomCoordinateArray:", "average", "Lcom.vividsolutions.jts.geom.Coordinate;", 0xa, NULL, NULL },
    { "findNearestPointWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinateArray:", "findNearestPoint", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pts_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "intPt_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsAlgorithmCentralEndpointIntersector = { 2, "CentralEndpointIntersector", "com.vividsolutions.jts.algorithm", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsAlgorithmCentralEndpointIntersector;
}

@end

ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_getIntersectionWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p00, ComVividsolutionsJtsGeomCoordinate *p01, ComVividsolutionsJtsGeomCoordinate *p10, ComVividsolutionsJtsGeomCoordinate *p11) {
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_initialize();
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *intor = new_ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p00, p01, p10, p11);
  return [intor getIntersection];
}

void ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *self, ComVividsolutionsJtsGeomCoordinate *p00, ComVividsolutionsJtsGeomCoordinate *p01, ComVividsolutionsJtsGeomCoordinate *p10, ComVividsolutionsJtsGeomCoordinate *p11) {
  (void) NSObject_init(self);
  self->intPt_ = nil;
  self->pts_ = [IOSObjectArray newArrayWithObjects:(id[]){ p00, p01, p10, p11 } count:4 type:ComVividsolutionsJtsGeomCoordinate_class_()];
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_compute(self);
}

ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *new_ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p00, ComVividsolutionsJtsGeomCoordinate *p01, ComVividsolutionsJtsGeomCoordinate *p10, ComVividsolutionsJtsGeomCoordinate *p11) {
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *self = [ComVividsolutionsJtsAlgorithmCentralEndpointIntersector alloc];
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p00, p01, p10, p11);
  return self;
}

void ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_compute(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *self) {
  ComVividsolutionsJtsGeomCoordinate *centroid = ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_averageWithComVividsolutionsJtsGeomCoordinateArray_(self->pts_);
  self->intPt_ = ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_findNearestPointWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(self, centroid, self->pts_);
}

ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_averageWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts) {
  ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_initialize();
  ComVividsolutionsJtsGeomCoordinate *avg = new_ComVividsolutionsJtsGeomCoordinate_init();
  jint n = ((IOSObjectArray *) nil_chk(pts))->size_;
  for (jint i = 0; i < pts->size_; i++) {
    avg->x_ += ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts, i)))->x_;
    avg->y_ += ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts, i)))->y_;
  }
  if (n > 0) {
    avg->x_ /= n;
    avg->y_ /= n;
  }
  return avg;
}

ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsAlgorithmCentralEndpointIntersector_findNearestPointWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector *self, ComVividsolutionsJtsGeomCoordinate *p, IOSObjectArray *pts) {
  jdouble minDist = JavaLangDouble_MAX_VALUE;
  ComVividsolutionsJtsGeomCoordinate *result = nil;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(pts))->size_; i++) {
    jdouble dist = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p)) distanceWithComVividsolutionsJtsGeomCoordinate:IOSObjectArray_Get(pts, i)];
    if (dist < minDist) {
      minDist = dist;
      result = IOSObjectArray_Get(pts, i);
    }
  }
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsAlgorithmCentralEndpointIntersector)
