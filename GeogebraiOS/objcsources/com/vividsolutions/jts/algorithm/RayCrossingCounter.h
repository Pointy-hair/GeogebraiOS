//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/algorithm/RayCrossingCounter.java
//

#ifndef _ComVividsolutionsJtsAlgorithmRayCrossingCounter_H_
#define _ComVividsolutionsJtsAlgorithmRayCrossingCounter_H_

#include "J2ObjC_header.h"

@class ComVividsolutionsJtsGeomCoordinate;
@class IOSObjectArray;

@interface ComVividsolutionsJtsAlgorithmRayCrossingCounter : NSObject

#pragma mark Public

- (instancetype)initWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p;

- (void)countSegmentWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p2;

- (jint)getLocation;

- (jboolean)isOnSegment;

- (jboolean)isPointInPolygon;

+ (jint)locatePointInRingWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                    withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)ring;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsAlgorithmRayCrossingCounter)

FOUNDATION_EXPORT jint ComVividsolutionsJtsAlgorithmRayCrossingCounter_locatePointInRingWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsGeomCoordinate *p, IOSObjectArray *ring);

FOUNDATION_EXPORT void ComVividsolutionsJtsAlgorithmRayCrossingCounter_initWithComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsAlgorithmRayCrossingCounter *self, ComVividsolutionsJtsGeomCoordinate *p);

FOUNDATION_EXPORT ComVividsolutionsJtsAlgorithmRayCrossingCounter *new_ComVividsolutionsJtsAlgorithmRayCrossingCounter_initWithComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *p) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsAlgorithmRayCrossingCounter)

#endif // _ComVividsolutionsJtsAlgorithmRayCrossingCounter_H_
