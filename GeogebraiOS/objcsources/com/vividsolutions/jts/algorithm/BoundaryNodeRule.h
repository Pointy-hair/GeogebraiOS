//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/algorithm/BoundaryNodeRule.java
//

#ifndef _ComVividsolutionsJtsAlgorithmBoundaryNodeRule_H_
#define _ComVividsolutionsJtsAlgorithmBoundaryNodeRule_H_

#include "J2ObjC_header.h"

@protocol ComVividsolutionsJtsAlgorithmBoundaryNodeRule < NSObject, JavaObject >

- (jboolean)isInBoundaryWithInt:(jint)boundaryCount;

@end

@interface ComVividsolutionsJtsAlgorithmBoundaryNodeRule : NSObject
@end

J2OBJC_STATIC_INIT(ComVividsolutionsJtsAlgorithmBoundaryNodeRule)

FOUNDATION_EXPORT id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule> ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MOD2_BOUNDARY_RULE_;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule, MOD2_BOUNDARY_RULE_, id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule>)

FOUNDATION_EXPORT id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule> ComVividsolutionsJtsAlgorithmBoundaryNodeRule_ENDPOINT_BOUNDARY_RULE_;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule, ENDPOINT_BOUNDARY_RULE_, id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule>)

FOUNDATION_EXPORT id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule> ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MULTIVALENT_ENDPOINT_BOUNDARY_RULE_;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule, MULTIVALENT_ENDPOINT_BOUNDARY_RULE_, id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule>)

FOUNDATION_EXPORT id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule> ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MONOVALENT_ENDPOINT_BOUNDARY_RULE_;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule, MONOVALENT_ENDPOINT_BOUNDARY_RULE_, id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule>)

FOUNDATION_EXPORT id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule> ComVividsolutionsJtsAlgorithmBoundaryNodeRule_OGC_SFS_BOUNDARY_RULE_;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule, OGC_SFS_BOUNDARY_RULE_, id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule>)

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule)

@interface ComVividsolutionsJtsAlgorithmBoundaryNodeRule_Mod2BoundaryNodeRule : NSObject < ComVividsolutionsJtsAlgorithmBoundaryNodeRule >

#pragma mark Public

- (instancetype)init;

- (jboolean)isInBoundaryWithInt:(jint)boundaryCount;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_Mod2BoundaryNodeRule)

FOUNDATION_EXPORT void ComVividsolutionsJtsAlgorithmBoundaryNodeRule_Mod2BoundaryNodeRule_init(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_Mod2BoundaryNodeRule *self);

FOUNDATION_EXPORT ComVividsolutionsJtsAlgorithmBoundaryNodeRule_Mod2BoundaryNodeRule *new_ComVividsolutionsJtsAlgorithmBoundaryNodeRule_Mod2BoundaryNodeRule_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_Mod2BoundaryNodeRule)

@interface ComVividsolutionsJtsAlgorithmBoundaryNodeRule_EndPointBoundaryNodeRule : NSObject < ComVividsolutionsJtsAlgorithmBoundaryNodeRule >

#pragma mark Public

- (instancetype)init;

- (jboolean)isInBoundaryWithInt:(jint)boundaryCount;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_EndPointBoundaryNodeRule)

FOUNDATION_EXPORT void ComVividsolutionsJtsAlgorithmBoundaryNodeRule_EndPointBoundaryNodeRule_init(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_EndPointBoundaryNodeRule *self);

FOUNDATION_EXPORT ComVividsolutionsJtsAlgorithmBoundaryNodeRule_EndPointBoundaryNodeRule *new_ComVividsolutionsJtsAlgorithmBoundaryNodeRule_EndPointBoundaryNodeRule_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_EndPointBoundaryNodeRule)

@interface ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MultiValentEndPointBoundaryNodeRule : NSObject < ComVividsolutionsJtsAlgorithmBoundaryNodeRule >

#pragma mark Public

- (instancetype)init;

- (jboolean)isInBoundaryWithInt:(jint)boundaryCount;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MultiValentEndPointBoundaryNodeRule)

FOUNDATION_EXPORT void ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MultiValentEndPointBoundaryNodeRule_init(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MultiValentEndPointBoundaryNodeRule *self);

FOUNDATION_EXPORT ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MultiValentEndPointBoundaryNodeRule *new_ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MultiValentEndPointBoundaryNodeRule_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MultiValentEndPointBoundaryNodeRule)

@interface ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MonoValentEndPointBoundaryNodeRule : NSObject < ComVividsolutionsJtsAlgorithmBoundaryNodeRule >

#pragma mark Public

- (instancetype)init;

- (jboolean)isInBoundaryWithInt:(jint)boundaryCount;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MonoValentEndPointBoundaryNodeRule)

FOUNDATION_EXPORT void ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MonoValentEndPointBoundaryNodeRule_init(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MonoValentEndPointBoundaryNodeRule *self);

FOUNDATION_EXPORT ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MonoValentEndPointBoundaryNodeRule *new_ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MonoValentEndPointBoundaryNodeRule_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsAlgorithmBoundaryNodeRule_MonoValentEndPointBoundaryNodeRule)

#endif // _ComVividsolutionsJtsAlgorithmBoundaryNodeRule_H_
