//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/index/sweepline/SweepLineEvent.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/index/sweepline/SweepLineEvent.h"
#include "com/vividsolutions/jts/index/sweepline/SweepLineInterval.h"

@interface ComVividsolutionsJtsIndexSweeplineSweepLineEvent () {
 @public
  jdouble xValue_;
  jint eventType_;
  ComVividsolutionsJtsIndexSweeplineSweepLineEvent *insertEvent_;
  jint deleteEventIndex_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexSweeplineSweepLineEvent, insertEvent_, ComVividsolutionsJtsIndexSweeplineSweepLineEvent *)

@implementation ComVividsolutionsJtsIndexSweeplineSweepLineEvent

- (instancetype)initWithDouble:(jdouble)x
withComVividsolutionsJtsIndexSweeplineSweepLineEvent:(ComVividsolutionsJtsIndexSweeplineSweepLineEvent *)insertEvent
withComVividsolutionsJtsIndexSweeplineSweepLineInterval:(ComVividsolutionsJtsIndexSweeplineSweepLineInterval *)sweepInt {
  ComVividsolutionsJtsIndexSweeplineSweepLineEvent_initWithDouble_withComVividsolutionsJtsIndexSweeplineSweepLineEvent_withComVividsolutionsJtsIndexSweeplineSweepLineInterval_(self, x, insertEvent, sweepInt);
  return self;
}

- (jboolean)isInsert {
  return insertEvent_ == nil;
}

- (jboolean)isDelete {
  return insertEvent_ != nil;
}

- (ComVividsolutionsJtsIndexSweeplineSweepLineEvent *)getInsertEvent {
  return insertEvent_;
}

- (jint)getDeleteEventIndex {
  return deleteEventIndex_;
}

- (void)setDeleteEventIndexWithInt:(jint)deleteEventIndex {
  self->deleteEventIndex_ = deleteEventIndex;
}

- (ComVividsolutionsJtsIndexSweeplineSweepLineInterval *)getInterval {
  return sweepInt_;
}

- (jint)compareToWithId:(id)o {
  ComVividsolutionsJtsIndexSweeplineSweepLineEvent *pe = (ComVividsolutionsJtsIndexSweeplineSweepLineEvent *) check_class_cast(o, [ComVividsolutionsJtsIndexSweeplineSweepLineEvent class]);
  if (xValue_ < ((ComVividsolutionsJtsIndexSweeplineSweepLineEvent *) nil_chk(pe))->xValue_) return -1;
  if (xValue_ > pe->xValue_) return 1;
  if (eventType_ < pe->eventType_) return -1;
  if (eventType_ > pe->eventType_) return 1;
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withComVividsolutionsJtsIndexSweeplineSweepLineEvent:withComVividsolutionsJtsIndexSweeplineSweepLineInterval:", "SweepLineEvent", NULL, 0x1, NULL, NULL },
    { "isInsert", NULL, "Z", 0x1, NULL, NULL },
    { "isDelete", NULL, "Z", 0x1, NULL, NULL },
    { "getInsertEvent", NULL, "Lcom.vividsolutions.jts.index.sweepline.SweepLineEvent;", 0x1, NULL, NULL },
    { "getDeleteEventIndex", NULL, "I", 0x1, NULL, NULL },
    { "setDeleteEventIndexWithInt:", "setDeleteEventIndex", "V", 0x1, NULL, NULL },
    { "getInterval", NULL, "Lcom.vividsolutions.jts.index.sweepline.SweepLineInterval;", 0x0, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSERT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsIndexSweeplineSweepLineEvent_INSERT },
    { "DELETE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsIndexSweeplineSweepLineEvent_DELETE },
    { "xValue_", NULL, 0x2, "D", NULL, NULL,  },
    { "eventType_", NULL, 0x2, "I", NULL, NULL,  },
    { "insertEvent_", NULL, 0x2, "Lcom.vividsolutions.jts.index.sweepline.SweepLineEvent;", NULL, NULL,  },
    { "deleteEventIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "sweepInt_", NULL, 0x0, "Lcom.vividsolutions.jts.index.sweepline.SweepLineInterval;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexSweeplineSweepLineEvent = { 2, "SweepLineEvent", "com.vividsolutions.jts.index.sweepline", NULL, 0x1, 8, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexSweeplineSweepLineEvent;
}

@end

void ComVividsolutionsJtsIndexSweeplineSweepLineEvent_initWithDouble_withComVividsolutionsJtsIndexSweeplineSweepLineEvent_withComVividsolutionsJtsIndexSweeplineSweepLineInterval_(ComVividsolutionsJtsIndexSweeplineSweepLineEvent *self, jdouble x, ComVividsolutionsJtsIndexSweeplineSweepLineEvent *insertEvent, ComVividsolutionsJtsIndexSweeplineSweepLineInterval *sweepInt) {
  (void) NSObject_init(self);
  self->xValue_ = x;
  self->insertEvent_ = insertEvent;
  self->eventType_ = ComVividsolutionsJtsIndexSweeplineSweepLineEvent_INSERT;
  if (insertEvent != nil) self->eventType_ = ComVividsolutionsJtsIndexSweeplineSweepLineEvent_DELETE;
  self->sweepInt_ = sweepInt;
}

ComVividsolutionsJtsIndexSweeplineSweepLineEvent *new_ComVividsolutionsJtsIndexSweeplineSweepLineEvent_initWithDouble_withComVividsolutionsJtsIndexSweeplineSweepLineEvent_withComVividsolutionsJtsIndexSweeplineSweepLineInterval_(jdouble x, ComVividsolutionsJtsIndexSweeplineSweepLineEvent *insertEvent, ComVividsolutionsJtsIndexSweeplineSweepLineInterval *sweepInt) {
  ComVividsolutionsJtsIndexSweeplineSweepLineEvent *self = [ComVividsolutionsJtsIndexSweeplineSweepLineEvent alloc];
  ComVividsolutionsJtsIndexSweeplineSweepLineEvent_initWithDouble_withComVividsolutionsJtsIndexSweeplineSweepLineEvent_withComVividsolutionsJtsIndexSweeplineSweepLineInterval_(self, x, insertEvent, sweepInt);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexSweeplineSweepLineEvent)
