//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/index/quadtree/IntervalSize.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/index/quadtree/DoubleBits.h"
#include "com/vividsolutions/jts/index/quadtree/IntervalSize.h"
#include "java/lang/Math.h"

@implementation ComVividsolutionsJtsIndexQuadtreeIntervalSize

+ (jboolean)isZeroWidthWithDouble:(jdouble)min
                       withDouble:(jdouble)max {
  return ComVividsolutionsJtsIndexQuadtreeIntervalSize_isZeroWidthWithDouble_withDouble_(min, max);
}

- (instancetype)init {
  ComVividsolutionsJtsIndexQuadtreeIntervalSize_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isZeroWidthWithDouble:withDouble:", "isZeroWidth", "Z", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_BINARY_EXPONENT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsIndexQuadtreeIntervalSize_MIN_BINARY_EXPONENT },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexQuadtreeIntervalSize = { 2, "IntervalSize", "com.vividsolutions.jts.index.quadtree", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexQuadtreeIntervalSize;
}

@end

jboolean ComVividsolutionsJtsIndexQuadtreeIntervalSize_isZeroWidthWithDouble_withDouble_(jdouble min, jdouble max) {
  ComVividsolutionsJtsIndexQuadtreeIntervalSize_initialize();
  jdouble width = max - min;
  if (width == 0.0) return YES;
  jdouble maxAbs = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_absWithDouble_(min), JavaLangMath_absWithDouble_(max));
  jdouble scaledInterval = width / maxAbs;
  jint level = ComVividsolutionsJtsIndexQuadtreeDoubleBits_exponentWithDouble_(scaledInterval);
  return level <= ComVividsolutionsJtsIndexQuadtreeIntervalSize_MIN_BINARY_EXPONENT;
}

void ComVividsolutionsJtsIndexQuadtreeIntervalSize_init(ComVividsolutionsJtsIndexQuadtreeIntervalSize *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsIndexQuadtreeIntervalSize *new_ComVividsolutionsJtsIndexQuadtreeIntervalSize_init() {
  ComVividsolutionsJtsIndexQuadtreeIntervalSize *self = [ComVividsolutionsJtsIndexQuadtreeIntervalSize alloc];
  ComVividsolutionsJtsIndexQuadtreeIntervalSize_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexQuadtreeIntervalSize)
