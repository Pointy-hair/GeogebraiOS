//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/index/strtree/Interval.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/index/strtree/Interval.h"
#include "com/vividsolutions/jts/util/Assert.h"
#include "java/lang/Math.h"

@interface ComVividsolutionsJtsIndexStrtreeInterval () {
 @public
  jdouble min_;
  jdouble max_;
}

@end

@implementation ComVividsolutionsJtsIndexStrtreeInterval

- (instancetype)initWithComVividsolutionsJtsIndexStrtreeInterval:(ComVividsolutionsJtsIndexStrtreeInterval *)other {
  ComVividsolutionsJtsIndexStrtreeInterval_initWithComVividsolutionsJtsIndexStrtreeInterval_(self, other);
  return self;
}

- (instancetype)initWithDouble:(jdouble)min
                    withDouble:(jdouble)max {
  ComVividsolutionsJtsIndexStrtreeInterval_initWithDouble_withDouble_(self, min, max);
  return self;
}

- (jdouble)getCentre {
  return (min_ + max_) / 2;
}

- (ComVividsolutionsJtsIndexStrtreeInterval *)expandToIncludeWithComVividsolutionsJtsIndexStrtreeInterval:(ComVividsolutionsJtsIndexStrtreeInterval *)other {
  max_ = JavaLangMath_maxWithDouble_withDouble_(max_, ((ComVividsolutionsJtsIndexStrtreeInterval *) nil_chk(other))->max_);
  min_ = JavaLangMath_minWithDouble_withDouble_(min_, other->min_);
  return self;
}

- (jboolean)intersectsWithComVividsolutionsJtsIndexStrtreeInterval:(ComVividsolutionsJtsIndexStrtreeInterval *)other {
  return !(((ComVividsolutionsJtsIndexStrtreeInterval *) nil_chk(other))->min_ > max_ || other->max_ < min_);
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[ComVividsolutionsJtsIndexStrtreeInterval class]])) {
    return NO;
  }
  ComVividsolutionsJtsIndexStrtreeInterval *other = (ComVividsolutionsJtsIndexStrtreeInterval *) check_class_cast(o, [ComVividsolutionsJtsIndexStrtreeInterval class]);
  return min_ == ((ComVividsolutionsJtsIndexStrtreeInterval *) nil_chk(other))->min_ && max_ == other->max_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsIndexStrtreeInterval:", "Interval", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "Interval", NULL, 0x1, NULL, NULL },
    { "getCentre", NULL, "D", 0x1, NULL, NULL },
    { "expandToIncludeWithComVividsolutionsJtsIndexStrtreeInterval:", "expandToInclude", "Lcom.vividsolutions.jts.index.strtree.Interval;", 0x1, NULL, NULL },
    { "intersectsWithComVividsolutionsJtsIndexStrtreeInterval:", "intersects", "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "min_", NULL, 0x2, "D", NULL, NULL,  },
    { "max_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexStrtreeInterval = { 2, "Interval", "com.vividsolutions.jts.index.strtree", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexStrtreeInterval;
}

@end

void ComVividsolutionsJtsIndexStrtreeInterval_initWithComVividsolutionsJtsIndexStrtreeInterval_(ComVividsolutionsJtsIndexStrtreeInterval *self, ComVividsolutionsJtsIndexStrtreeInterval *other) {
  (void) ComVividsolutionsJtsIndexStrtreeInterval_initWithDouble_withDouble_(self, ((ComVividsolutionsJtsIndexStrtreeInterval *) nil_chk(other))->min_, other->max_);
}

ComVividsolutionsJtsIndexStrtreeInterval *new_ComVividsolutionsJtsIndexStrtreeInterval_initWithComVividsolutionsJtsIndexStrtreeInterval_(ComVividsolutionsJtsIndexStrtreeInterval *other) {
  ComVividsolutionsJtsIndexStrtreeInterval *self = [ComVividsolutionsJtsIndexStrtreeInterval alloc];
  ComVividsolutionsJtsIndexStrtreeInterval_initWithComVividsolutionsJtsIndexStrtreeInterval_(self, other);
  return self;
}

void ComVividsolutionsJtsIndexStrtreeInterval_initWithDouble_withDouble_(ComVividsolutionsJtsIndexStrtreeInterval *self, jdouble min, jdouble max) {
  (void) NSObject_init(self);
  ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_(min <= max);
  self->min_ = min;
  self->max_ = max;
}

ComVividsolutionsJtsIndexStrtreeInterval *new_ComVividsolutionsJtsIndexStrtreeInterval_initWithDouble_withDouble_(jdouble min, jdouble max) {
  ComVividsolutionsJtsIndexStrtreeInterval *self = [ComVividsolutionsJtsIndexStrtreeInterval alloc];
  ComVividsolutionsJtsIndexStrtreeInterval_initWithDouble_withDouble_(self, min, max);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexStrtreeInterval)
