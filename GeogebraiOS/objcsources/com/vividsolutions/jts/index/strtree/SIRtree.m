//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/index/strtree/SIRtree.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/index/strtree/AbstractNode.h"
#include "com/vividsolutions/jts/index/strtree/AbstractSTRtree.h"
#include "com/vividsolutions/jts/index/strtree/Boundable.h"
#include "com/vividsolutions/jts/index/strtree/Interval.h"
#include "com/vividsolutions/jts/index/strtree/SIRtree.h"
#include "java/lang/Math.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsIndexStrtreeSIRtree () {
 @public
  id<JavaUtilComparator> comparator_;
  id<ComVividsolutionsJtsIndexStrtreeAbstractSTRtree_IntersectsOp> intersectsOp_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexStrtreeSIRtree, comparator_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexStrtreeSIRtree, intersectsOp_, id<ComVividsolutionsJtsIndexStrtreeAbstractSTRtree_IntersectsOp>)

@interface ComVividsolutionsJtsIndexStrtreeSIRtree_$1 : NSObject < JavaUtilComparator > {
 @public
  ComVividsolutionsJtsIndexStrtreeSIRtree *this$0_;
}

- (jint)compareWithId:(id)o1
               withId:(id)o2;

- (instancetype)initWithComVividsolutionsJtsIndexStrtreeSIRtree:(ComVividsolutionsJtsIndexStrtreeSIRtree *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsIndexStrtreeSIRtree_$1)

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexStrtreeSIRtree_$1, this$0_, ComVividsolutionsJtsIndexStrtreeSIRtree *)

__attribute__((unused)) static void ComVividsolutionsJtsIndexStrtreeSIRtree_$1_initWithComVividsolutionsJtsIndexStrtreeSIRtree_(ComVividsolutionsJtsIndexStrtreeSIRtree_$1 *self, ComVividsolutionsJtsIndexStrtreeSIRtree *outer$);

__attribute__((unused)) static ComVividsolutionsJtsIndexStrtreeSIRtree_$1 *new_ComVividsolutionsJtsIndexStrtreeSIRtree_$1_initWithComVividsolutionsJtsIndexStrtreeSIRtree_(ComVividsolutionsJtsIndexStrtreeSIRtree *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsIndexStrtreeSIRtree_$1)

@interface ComVividsolutionsJtsIndexStrtreeSIRtree_$2 : NSObject < ComVividsolutionsJtsIndexStrtreeAbstractSTRtree_IntersectsOp >

- (jboolean)intersectsWithId:(id)aBounds
                      withId:(id)bBounds;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsIndexStrtreeSIRtree_$2)

__attribute__((unused)) static void ComVividsolutionsJtsIndexStrtreeSIRtree_$2_init(ComVividsolutionsJtsIndexStrtreeSIRtree_$2 *self);

__attribute__((unused)) static ComVividsolutionsJtsIndexStrtreeSIRtree_$2 *new_ComVividsolutionsJtsIndexStrtreeSIRtree_$2_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsIndexStrtreeSIRtree_$2)

@interface ComVividsolutionsJtsIndexStrtreeSIRtree_$3 : ComVividsolutionsJtsIndexStrtreeAbstractNode

- (id)computeBounds;

- (instancetype)initWithInt:(jint)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsIndexStrtreeSIRtree_$3)

__attribute__((unused)) static void ComVividsolutionsJtsIndexStrtreeSIRtree_$3_initWithInt_(ComVividsolutionsJtsIndexStrtreeSIRtree_$3 *self, jint arg$0);

__attribute__((unused)) static ComVividsolutionsJtsIndexStrtreeSIRtree_$3 *new_ComVividsolutionsJtsIndexStrtreeSIRtree_$3_initWithInt_(jint arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsIndexStrtreeSIRtree_$3)

@implementation ComVividsolutionsJtsIndexStrtreeSIRtree

- (instancetype)init {
  ComVividsolutionsJtsIndexStrtreeSIRtree_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)nodeCapacity {
  ComVividsolutionsJtsIndexStrtreeSIRtree_initWithInt_(self, nodeCapacity);
  return self;
}

- (ComVividsolutionsJtsIndexStrtreeAbstractNode *)createNodeWithInt:(jint)level {
  return [new_ComVividsolutionsJtsIndexStrtreeSIRtree_$3_initWithInt_(level) autorelease];
}

- (void)insertWithDouble:(jdouble)x1
              withDouble:(jdouble)x2
                  withId:(id)item {
  [super insertWithId:[new_ComVividsolutionsJtsIndexStrtreeInterval_initWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(x1, x2), JavaLangMath_maxWithDouble_withDouble_(x1, x2)) autorelease] withId:item];
}

- (id<JavaUtilList>)queryWithDouble:(jdouble)x {
  return [self queryWithDouble:x withDouble:x];
}

- (id<JavaUtilList>)queryWithDouble:(jdouble)x1
                         withDouble:(jdouble)x2 {
  return [super queryWithId:[new_ComVividsolutionsJtsIndexStrtreeInterval_initWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(x1, x2), JavaLangMath_maxWithDouble_withDouble_(x1, x2)) autorelease]];
}

- (id<ComVividsolutionsJtsIndexStrtreeAbstractSTRtree_IntersectsOp>)getIntersectsOp {
  return intersectsOp_;
}

- (id<JavaUtilComparator>)getComparator {
  return comparator_;
}

- (void)dealloc {
  RELEASE_(comparator_);
  RELEASE_(intersectsOp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SIRtree", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "SIRtree", NULL, 0x1, NULL, NULL },
    { "createNodeWithInt:", "createNode", "Lcom.vividsolutions.jts.index.strtree.AbstractNode;", 0x4, NULL, NULL },
    { "insertWithDouble:withDouble:withId:", "insert", "V", 0x1, NULL, NULL },
    { "queryWithDouble:", "query", "Ljava.util.List;", 0x1, NULL, NULL },
    { "queryWithDouble:withDouble:", "query", "Ljava.util.List;", 0x1, NULL, NULL },
    { "getIntersectsOp", NULL, "Lcom.vividsolutions.jts.index.strtree.AbstractSTRtree$IntersectsOp;", 0x4, NULL, NULL },
    { "getComparator", NULL, "Ljava.util.Comparator;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "comparator_", NULL, 0x2, "Ljava.util.Comparator;", NULL, NULL,  },
    { "intersectsOp_", NULL, 0x2, "Lcom.vividsolutions.jts.index.strtree.AbstractSTRtree$IntersectsOp;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexStrtreeSIRtree = { 2, "SIRtree", "com.vividsolutions.jts.index.strtree", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexStrtreeSIRtree;
}

@end

void ComVividsolutionsJtsIndexStrtreeSIRtree_init(ComVividsolutionsJtsIndexStrtreeSIRtree *self) {
  ComVividsolutionsJtsIndexStrtreeSIRtree_initWithInt_(self, 10);
}

ComVividsolutionsJtsIndexStrtreeSIRtree *new_ComVividsolutionsJtsIndexStrtreeSIRtree_init() {
  ComVividsolutionsJtsIndexStrtreeSIRtree *self = [ComVividsolutionsJtsIndexStrtreeSIRtree alloc];
  ComVividsolutionsJtsIndexStrtreeSIRtree_init(self);
  return self;
}

void ComVividsolutionsJtsIndexStrtreeSIRtree_initWithInt_(ComVividsolutionsJtsIndexStrtreeSIRtree *self, jint nodeCapacity) {
  ComVividsolutionsJtsIndexStrtreeAbstractSTRtree_initWithInt_(self, nodeCapacity);
  ComVividsolutionsJtsIndexStrtreeSIRtree_setAndConsume_comparator_(self, new_ComVividsolutionsJtsIndexStrtreeSIRtree_$1_initWithComVividsolutionsJtsIndexStrtreeSIRtree_(self));
  ComVividsolutionsJtsIndexStrtreeSIRtree_setAndConsume_intersectsOp_(self, new_ComVividsolutionsJtsIndexStrtreeSIRtree_$2_init());
}

ComVividsolutionsJtsIndexStrtreeSIRtree *new_ComVividsolutionsJtsIndexStrtreeSIRtree_initWithInt_(jint nodeCapacity) {
  ComVividsolutionsJtsIndexStrtreeSIRtree *self = [ComVividsolutionsJtsIndexStrtreeSIRtree alloc];
  ComVividsolutionsJtsIndexStrtreeSIRtree_initWithInt_(self, nodeCapacity);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexStrtreeSIRtree)

@implementation ComVividsolutionsJtsIndexStrtreeSIRtree_$1

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  return [this$0_ compareDoublesWithDouble:[((ComVividsolutionsJtsIndexStrtreeInterval *) nil_chk(((ComVividsolutionsJtsIndexStrtreeInterval *) check_class_cast([((id<ComVividsolutionsJtsIndexStrtreeBoundable>) nil_chk(((id<ComVividsolutionsJtsIndexStrtreeBoundable>) check_protocol_cast(o1, @protocol(ComVividsolutionsJtsIndexStrtreeBoundable))))) getBounds], [ComVividsolutionsJtsIndexStrtreeInterval class])))) getCentre] withDouble:[((ComVividsolutionsJtsIndexStrtreeInterval *) nil_chk(((ComVividsolutionsJtsIndexStrtreeInterval *) check_class_cast([((id<ComVividsolutionsJtsIndexStrtreeBoundable>) nil_chk(((id<ComVividsolutionsJtsIndexStrtreeBoundable>) check_protocol_cast(o2, @protocol(ComVividsolutionsJtsIndexStrtreeBoundable))))) getBounds], [ComVividsolutionsJtsIndexStrtreeInterval class])))) getCentre]];
}

- (instancetype)initWithComVividsolutionsJtsIndexStrtreeSIRtree:(ComVividsolutionsJtsIndexStrtreeSIRtree *)outer$ {
  ComVividsolutionsJtsIndexStrtreeSIRtree_$1_initWithComVividsolutionsJtsIndexStrtreeSIRtree_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsIndexStrtreeSIRtree:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.vividsolutions.jts.index.strtree.SIRtree;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexStrtreeSIRtree_$1 = { 2, "", "com.vividsolutions.jts.index.strtree", "SIRtree", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexStrtreeSIRtree_$1;
}

@end

void ComVividsolutionsJtsIndexStrtreeSIRtree_$1_initWithComVividsolutionsJtsIndexStrtreeSIRtree_(ComVividsolutionsJtsIndexStrtreeSIRtree_$1 *self, ComVividsolutionsJtsIndexStrtreeSIRtree *outer$) {
  ComVividsolutionsJtsIndexStrtreeSIRtree_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

ComVividsolutionsJtsIndexStrtreeSIRtree_$1 *new_ComVividsolutionsJtsIndexStrtreeSIRtree_$1_initWithComVividsolutionsJtsIndexStrtreeSIRtree_(ComVividsolutionsJtsIndexStrtreeSIRtree *outer$) {
  ComVividsolutionsJtsIndexStrtreeSIRtree_$1 *self = [ComVividsolutionsJtsIndexStrtreeSIRtree_$1 alloc];
  ComVividsolutionsJtsIndexStrtreeSIRtree_$1_initWithComVividsolutionsJtsIndexStrtreeSIRtree_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexStrtreeSIRtree_$1)

@implementation ComVividsolutionsJtsIndexStrtreeSIRtree_$2

- (jboolean)intersectsWithId:(id)aBounds
                      withId:(id)bBounds {
  return [((ComVividsolutionsJtsIndexStrtreeInterval *) nil_chk(((ComVividsolutionsJtsIndexStrtreeInterval *) check_class_cast(aBounds, [ComVividsolutionsJtsIndexStrtreeInterval class])))) intersectsWithComVividsolutionsJtsIndexStrtreeInterval:(ComVividsolutionsJtsIndexStrtreeInterval *) check_class_cast(bBounds, [ComVividsolutionsJtsIndexStrtreeInterval class])];
}

- (instancetype)init {
  ComVividsolutionsJtsIndexStrtreeSIRtree_$2_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "intersectsWithId:withId:", "intersects", "Z", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexStrtreeSIRtree_$2 = { 2, "", "com.vividsolutions.jts.index.strtree", "SIRtree", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexStrtreeSIRtree_$2;
}

@end

void ComVividsolutionsJtsIndexStrtreeSIRtree_$2_init(ComVividsolutionsJtsIndexStrtreeSIRtree_$2 *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsIndexStrtreeSIRtree_$2 *new_ComVividsolutionsJtsIndexStrtreeSIRtree_$2_init() {
  ComVividsolutionsJtsIndexStrtreeSIRtree_$2 *self = [ComVividsolutionsJtsIndexStrtreeSIRtree_$2 alloc];
  ComVividsolutionsJtsIndexStrtreeSIRtree_$2_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexStrtreeSIRtree_$2)

@implementation ComVividsolutionsJtsIndexStrtreeSIRtree_$3

- (id)computeBounds {
  ComVividsolutionsJtsIndexStrtreeInterval *bounds = nil;
  for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk([self getChildBoundables])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    id<ComVividsolutionsJtsIndexStrtreeBoundable> childBoundable = (id<ComVividsolutionsJtsIndexStrtreeBoundable>) check_protocol_cast([i next], @protocol(ComVividsolutionsJtsIndexStrtreeBoundable));
    if (bounds == nil) {
      bounds = [new_ComVividsolutionsJtsIndexStrtreeInterval_initWithComVividsolutionsJtsIndexStrtreeInterval_((ComVividsolutionsJtsIndexStrtreeInterval *) check_class_cast([((id<ComVividsolutionsJtsIndexStrtreeBoundable>) nil_chk(childBoundable)) getBounds], [ComVividsolutionsJtsIndexStrtreeInterval class])) autorelease];
    }
    else {
      [bounds expandToIncludeWithComVividsolutionsJtsIndexStrtreeInterval:(ComVividsolutionsJtsIndexStrtreeInterval *) check_class_cast([((id<ComVividsolutionsJtsIndexStrtreeBoundable>) nil_chk(childBoundable)) getBounds], [ComVividsolutionsJtsIndexStrtreeInterval class])];
    }
  }
  return bounds;
}

- (instancetype)initWithInt:(jint)arg$0 {
  ComVividsolutionsJtsIndexStrtreeSIRtree_$3_initWithInt_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "computeBounds", NULL, "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "initWithInt:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComVividsolutionsJtsIndexStrtreeSIRtree", "createNodeWithInt:" };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexStrtreeSIRtree_$3 = { 2, "", "com.vividsolutions.jts.index.strtree", "SIRtree", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComVividsolutionsJtsIndexStrtreeSIRtree_$3;
}

@end

void ComVividsolutionsJtsIndexStrtreeSIRtree_$3_initWithInt_(ComVividsolutionsJtsIndexStrtreeSIRtree_$3 *self, jint arg$0) {
  ComVividsolutionsJtsIndexStrtreeAbstractNode_initWithInt_(self, arg$0);
}

ComVividsolutionsJtsIndexStrtreeSIRtree_$3 *new_ComVividsolutionsJtsIndexStrtreeSIRtree_$3_initWithInt_(jint arg$0) {
  ComVividsolutionsJtsIndexStrtreeSIRtree_$3 *self = [ComVividsolutionsJtsIndexStrtreeSIRtree_$3 alloc];
  ComVividsolutionsJtsIndexStrtreeSIRtree_$3_initWithInt_(self, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexStrtreeSIRtree_$3)
