//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geom/Point.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/CoordinateFilter.h"
#include "com/vividsolutions/jts/geom/CoordinateSequence.h"
#include "com/vividsolutions/jts/geom/CoordinateSequenceComparator.h"
#include "com/vividsolutions/jts/geom/CoordinateSequenceFactory.h"
#include "com/vividsolutions/jts/geom/CoordinateSequenceFilter.h"
#include "com/vividsolutions/jts/geom/Dimension.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryCollection.h"
#include "com/vividsolutions/jts/geom/GeometryComponentFilter.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/GeometryFilter.h"
#include "com/vividsolutions/jts/geom/Point.h"
#include "com/vividsolutions/jts/geom/PrecisionModel.h"
#include "com/vividsolutions/jts/util/Assert.h"
#include "java/lang/IllegalStateException.h"

#define ComVividsolutionsJtsGeomPoint_serialVersionUID 4902022702746614570LL

@interface ComVividsolutionsJtsGeomPoint () {
 @public
  id<ComVividsolutionsJtsGeomCoordinateSequence> coordinates_;
}

- (void)init__WithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coordinates OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomPoint, coordinates_, id<ComVividsolutionsJtsGeomCoordinateSequence>)

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsGeomPoint, serialVersionUID, jlong)

__attribute__((unused)) static void ComVividsolutionsJtsGeomPoint_init__WithComVividsolutionsJtsGeomCoordinateSequence_(ComVividsolutionsJtsGeomPoint *self, id<ComVividsolutionsJtsGeomCoordinateSequence> coordinates);

@implementation ComVividsolutionsJtsGeomPoint

- (instancetype)initWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coordinate
                withComVividsolutionsJtsGeomPrecisionModel:(ComVividsolutionsJtsGeomPrecisionModel *)precisionModel
                                                   withInt:(jint)SRID {
  ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomPrecisionModel_withInt_(self, coordinate, precisionModel, SRID);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coordinates
                       withComVividsolutionsJtsGeomGeometryFactory:(ComVividsolutionsJtsGeomGeometryFactory *)factory {
  ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinateSequence_withComVividsolutionsJtsGeomGeometryFactory_(self, coordinates, factory);
  return self;
}

- (void)init__WithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coordinates {
  ComVividsolutionsJtsGeomPoint_init__WithComVividsolutionsJtsGeomCoordinateSequence_(self, coordinates);
}

- (IOSObjectArray *)getCoordinates {
  return [self isEmpty] ? [IOSObjectArray newArrayWithObjects:(id[]){  } count:0 type:ComVividsolutionsJtsGeomCoordinate_class_()] : [IOSObjectArray newArrayWithObjects:(id[]){ [self getCoordinate] } count:1 type:ComVividsolutionsJtsGeomCoordinate_class_()];
}

- (jint)getNumPoints {
  return [self isEmpty] ? 0 : 1;
}

- (jboolean)isEmpty {
  return [self getCoordinate] == nil;
}

- (jboolean)isSimple {
  return YES;
}

- (jboolean)isValid {
  return YES;
}

- (jint)getDimension {
  return 0;
}

- (jint)getBoundaryDimension {
  return ComVividsolutionsJtsGeomDimension_FALSE;
}

- (jdouble)getX {
  if ([self getCoordinate] == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"getX called on empty Point");
  }
  return ((ComVividsolutionsJtsGeomCoordinate *) nil_chk([self getCoordinate]))->x_;
}

- (jdouble)getY {
  if ([self getCoordinate] == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"getY called on empty Point");
  }
  return ((ComVividsolutionsJtsGeomCoordinate *) nil_chk([self getCoordinate]))->y_;
}

- (ComVividsolutionsJtsGeomCoordinate *)getCoordinate {
  return [((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(coordinates_)) size] != 0 ? [coordinates_ getCoordinateWithInt:0] : nil;
}

- (NSString *)getGeometryType {
  return @"Point";
}

- (ComVividsolutionsJtsGeomGeometry *)getBoundary {
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk([self getFactory])) createGeometryCollectionWithComVividsolutionsJtsGeomGeometryArray:nil];
}

- (ComVividsolutionsJtsGeomEnvelope *)computeEnvelopeInternal {
  if ([self isEmpty]) {
    return new_ComVividsolutionsJtsGeomEnvelope_init();
  }
  ComVividsolutionsJtsGeomEnvelope *env = new_ComVividsolutionsJtsGeomEnvelope_init();
  [env expandToIncludeWithDouble:[((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(coordinates_)) getXWithInt:0] withDouble:[coordinates_ getYWithInt:0]];
  return env;
}

- (jboolean)equalsExactWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)other
                                                 withDouble:(jdouble)tolerance {
  if (![self isEquivalentClassWithComVividsolutionsJtsGeomGeometry:other]) {
    return NO;
  }
  if ([self isEmpty] && [((ComVividsolutionsJtsGeomGeometry *) nil_chk(other)) isEmpty]) {
    return YES;
  }
  return [self equalWithComVividsolutionsJtsGeomCoordinate:[((ComVividsolutionsJtsGeomPoint *) nil_chk(((ComVividsolutionsJtsGeomPoint *) check_class_cast(other, [ComVividsolutionsJtsGeomPoint class])))) getCoordinate] withComVividsolutionsJtsGeomCoordinate:[self getCoordinate] withDouble:tolerance];
}

- (void)applyWithComVividsolutionsJtsGeomCoordinateFilter:(id<ComVividsolutionsJtsGeomCoordinateFilter>)filter {
  if ([self isEmpty]) {
    return;
  }
  [((id<ComVividsolutionsJtsGeomCoordinateFilter>) nil_chk(filter)) filterWithComVividsolutionsJtsGeomCoordinate:[self getCoordinate]];
}

- (void)applyWithComVividsolutionsJtsGeomCoordinateSequenceFilter:(id<ComVividsolutionsJtsGeomCoordinateSequenceFilter>)filter {
  if ([self isEmpty]) return;
  [((id<ComVividsolutionsJtsGeomCoordinateSequenceFilter>) nil_chk(filter)) filterWithComVividsolutionsJtsGeomCoordinateSequence:coordinates_ withInt:0];
  if ([filter isGeometryChanged]) [self geometryChanged];
}

- (void)applyWithComVividsolutionsJtsGeomGeometryFilter:(id<ComVividsolutionsJtsGeomGeometryFilter>)filter {
  [((id<ComVividsolutionsJtsGeomGeometryFilter>) nil_chk(filter)) filterWithComVividsolutionsJtsGeomGeometry:self];
}

- (void)applyWithComVividsolutionsJtsGeomGeometryComponentFilter:(id<ComVividsolutionsJtsGeomGeometryComponentFilter>)filter {
  [((id<ComVividsolutionsJtsGeomGeometryComponentFilter>) nil_chk(filter)) filterWithComVividsolutionsJtsGeomGeometry:self];
}

- (id)clone {
  ComVividsolutionsJtsGeomPoint *p = (ComVividsolutionsJtsGeomPoint *) check_class_cast([super clone], [ComVividsolutionsJtsGeomPoint class]);
  ((ComVividsolutionsJtsGeomPoint *) nil_chk(p))->coordinates_ = (id<ComVividsolutionsJtsGeomCoordinateSequence>) check_protocol_cast([((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(coordinates_)) clone], @protocol(ComVividsolutionsJtsGeomCoordinateSequence));
  return p;
}

- (ComVividsolutionsJtsGeomGeometry *)reverse {
  return (ComVividsolutionsJtsGeomGeometry *) check_class_cast([self clone], [ComVividsolutionsJtsGeomGeometry class]);
}

- (void)normalize {
}

- (jint)compareToSameClassWithId:(id)other {
  ComVividsolutionsJtsGeomPoint *point = (ComVividsolutionsJtsGeomPoint *) check_class_cast(other, [ComVividsolutionsJtsGeomPoint class]);
  return [((ComVividsolutionsJtsGeomCoordinate *) nil_chk([self getCoordinate])) compareToWithId:[((ComVividsolutionsJtsGeomPoint *) nil_chk(point)) getCoordinate]];
}

- (jint)compareToSameClassWithId:(id)other
withComVividsolutionsJtsGeomCoordinateSequenceComparator:(ComVividsolutionsJtsGeomCoordinateSequenceComparator *)comp {
  ComVividsolutionsJtsGeomPoint *point = (ComVividsolutionsJtsGeomPoint *) check_class_cast(other, [ComVividsolutionsJtsGeomPoint class]);
  return [((ComVividsolutionsJtsGeomCoordinateSequenceComparator *) nil_chk(comp)) compareWithId:self->coordinates_ withId:((ComVividsolutionsJtsGeomPoint *) nil_chk(point))->coordinates_];
}

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)getCoordinateSequence {
  return coordinates_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomPrecisionModel:withInt:", "Point", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomCoordinateSequence:withComVividsolutionsJtsGeomGeometryFactory:", "Point", NULL, 0x1, NULL, NULL },
    { "init__WithComVividsolutionsJtsGeomCoordinateSequence:", "init", "V", 0x2, NULL, NULL },
    { "getCoordinates", NULL, "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getNumPoints", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "isSimple", NULL, "Z", 0x1, NULL, NULL },
    { "isValid", NULL, "Z", 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "getBoundaryDimension", NULL, "I", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "getCoordinate", NULL, "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getGeometryType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getBoundary", NULL, "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
    { "computeEnvelopeInternal", NULL, "Lcom.vividsolutions.jts.geom.Envelope;", 0x4, NULL, NULL },
    { "equalsExactWithComVividsolutionsJtsGeomGeometry:withDouble:", "equalsExact", "Z", 0x1, NULL, NULL },
    { "applyWithComVividsolutionsJtsGeomCoordinateFilter:", "apply", "V", 0x1, NULL, NULL },
    { "applyWithComVividsolutionsJtsGeomCoordinateSequenceFilter:", "apply", "V", 0x1, NULL, NULL },
    { "applyWithComVividsolutionsJtsGeomGeometryFilter:", "apply", "V", 0x1, NULL, NULL },
    { "applyWithComVividsolutionsJtsGeomGeometryComponentFilter:", "apply", "V", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "reverse", NULL, "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
    { "normalize", NULL, "V", 0x1, NULL, NULL },
    { "compareToSameClassWithId:", "compareToSameClass", "I", 0x4, NULL, NULL },
    { "compareToSameClassWithId:withComVividsolutionsJtsGeomCoordinateSequenceComparator:", "compareToSameClass", "I", 0x4, NULL, NULL },
    { "getCoordinateSequence", NULL, "Lcom.vividsolutions.jts.geom.CoordinateSequence;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = ComVividsolutionsJtsGeomPoint_serialVersionUID },
    { "coordinates_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.CoordinateSequence;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomPoint = { 2, "Point", "com.vividsolutions.jts.geom", NULL, 0x1, 27, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomPoint;
}

@end

void ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomPrecisionModel_withInt_(ComVividsolutionsJtsGeomPoint *self, ComVividsolutionsJtsGeomCoordinate *coordinate, ComVividsolutionsJtsGeomPrecisionModel *precisionModel, jint SRID) {
  (void) ComVividsolutionsJtsGeomGeometry_initWithComVividsolutionsJtsGeomGeometryFactory_(self, new_ComVividsolutionsJtsGeomGeometryFactory_initWithComVividsolutionsJtsGeomPrecisionModel_withInt_(precisionModel, SRID));
  ComVividsolutionsJtsGeomPoint_init__WithComVividsolutionsJtsGeomCoordinateSequence_(self, [((id<ComVividsolutionsJtsGeomCoordinateSequenceFactory>) nil_chk([((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk([self getFactory])) getCoordinateSequenceFactory])) createWithComVividsolutionsJtsGeomCoordinateArray:coordinate != nil ? [IOSObjectArray newArrayWithObjects:(id[]){ coordinate } count:1 type:ComVividsolutionsJtsGeomCoordinate_class_()] : [IOSObjectArray newArrayWithObjects:(id[]){  } count:0 type:ComVividsolutionsJtsGeomCoordinate_class_()]]);
}

ComVividsolutionsJtsGeomPoint *new_ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomPrecisionModel_withInt_(ComVividsolutionsJtsGeomCoordinate *coordinate, ComVividsolutionsJtsGeomPrecisionModel *precisionModel, jint SRID) {
  ComVividsolutionsJtsGeomPoint *self = [ComVividsolutionsJtsGeomPoint alloc];
  ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomPrecisionModel_withInt_(self, coordinate, precisionModel, SRID);
  return self;
}

void ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinateSequence_withComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsGeomPoint *self, id<ComVividsolutionsJtsGeomCoordinateSequence> coordinates, ComVividsolutionsJtsGeomGeometryFactory *factory) {
  (void) ComVividsolutionsJtsGeomGeometry_initWithComVividsolutionsJtsGeomGeometryFactory_(self, factory);
  ComVividsolutionsJtsGeomPoint_init__WithComVividsolutionsJtsGeomCoordinateSequence_(self, coordinates);
}

ComVividsolutionsJtsGeomPoint *new_ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinateSequence_withComVividsolutionsJtsGeomGeometryFactory_(id<ComVividsolutionsJtsGeomCoordinateSequence> coordinates, ComVividsolutionsJtsGeomGeometryFactory *factory) {
  ComVividsolutionsJtsGeomPoint *self = [ComVividsolutionsJtsGeomPoint alloc];
  ComVividsolutionsJtsGeomPoint_initWithComVividsolutionsJtsGeomCoordinateSequence_withComVividsolutionsJtsGeomGeometryFactory_(self, coordinates, factory);
  return self;
}

void ComVividsolutionsJtsGeomPoint_init__WithComVividsolutionsJtsGeomCoordinateSequence_(ComVividsolutionsJtsGeomPoint *self, id<ComVividsolutionsJtsGeomCoordinateSequence> coordinates) {
  if (coordinates == nil) {
    coordinates = [((id<ComVividsolutionsJtsGeomCoordinateSequenceFactory>) nil_chk([((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk([self getFactory])) getCoordinateSequenceFactory])) createWithComVividsolutionsJtsGeomCoordinateArray:[IOSObjectArray newArrayWithObjects:(id[]){  } count:0 type:ComVividsolutionsJtsGeomCoordinate_class_()]];
  }
  ComVividsolutionsJtsUtilAssert_isTrueWithBoolean_([((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(coordinates)) size] <= 1);
  self->coordinates_ = coordinates;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomPoint)
