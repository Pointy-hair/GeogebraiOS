//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/geom/IntersectionMatrix.java
//

#ifndef _ComVividsolutionsJtsGeomIntersectionMatrix_H_
#define _ComVividsolutionsJtsGeomIntersectionMatrix_H_

#include "J2ObjC_header.h"

@interface ComVividsolutionsJtsGeomIntersectionMatrix : NSObject < NSCopying >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)other;

- (instancetype)initWithNSString:(NSString *)elements;

- (void)addWithComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im;

- (jint)getWithInt:(jint)row
           withInt:(jint)column;

- (jboolean)isContains;

- (jboolean)isCoveredBy;

- (jboolean)isCovers;

- (jboolean)isCrossesWithInt:(jint)dimensionOfGeometryA
                     withInt:(jint)dimensionOfGeometryB;

- (jboolean)isDisjoint;

- (jboolean)isEqualsWithInt:(jint)dimensionOfGeometryA
                    withInt:(jint)dimensionOfGeometryB;

- (jboolean)isIntersects;

- (jboolean)isOverlapsWithInt:(jint)dimensionOfGeometryA
                      withInt:(jint)dimensionOfGeometryB;

- (jboolean)isTouchesWithInt:(jint)dimensionOfGeometryA
                     withInt:(jint)dimensionOfGeometryB;

- (jboolean)isWithin;

+ (jboolean)matchesWithInt:(jint)actualDimensionValue
                  withChar:(jchar)requiredDimensionSymbol;

- (jboolean)matchesWithNSString:(NSString *)requiredDimensionSymbols;

+ (jboolean)matchesWithNSString:(NSString *)actualDimensionSymbols
                   withNSString:(NSString *)requiredDimensionSymbols;

- (void)setWithInt:(jint)row
           withInt:(jint)column
           withInt:(jint)dimensionValue;

- (void)setWithNSString:(NSString *)dimensionSymbols;

- (void)setAllWithInt:(jint)dimensionValue;

- (void)setAtLeastWithInt:(jint)row
                  withInt:(jint)column
                  withInt:(jint)minimumDimensionValue;

- (void)setAtLeastWithNSString:(NSString *)minimumDimensionSymbols;

- (void)setAtLeastIfValidWithInt:(jint)row
                         withInt:(jint)column
                         withInt:(jint)minimumDimensionValue;

- (NSString *)description;

- (ComVividsolutionsJtsGeomIntersectionMatrix *)transpose;

@end

J2OBJC_EMPTY_STATIC_INIT(ComVividsolutionsJtsGeomIntersectionMatrix)

FOUNDATION_EXPORT void ComVividsolutionsJtsGeomIntersectionMatrix_init(ComVividsolutionsJtsGeomIntersectionMatrix *self);

FOUNDATION_EXPORT ComVividsolutionsJtsGeomIntersectionMatrix *new_ComVividsolutionsJtsGeomIntersectionMatrix_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComVividsolutionsJtsGeomIntersectionMatrix_initWithNSString_(ComVividsolutionsJtsGeomIntersectionMatrix *self, NSString *elements);

FOUNDATION_EXPORT ComVividsolutionsJtsGeomIntersectionMatrix *new_ComVividsolutionsJtsGeomIntersectionMatrix_initWithNSString_(NSString *elements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComVividsolutionsJtsGeomIntersectionMatrix_initWithComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsGeomIntersectionMatrix *self, ComVividsolutionsJtsGeomIntersectionMatrix *other);

FOUNDATION_EXPORT ComVividsolutionsJtsGeomIntersectionMatrix *new_ComVividsolutionsJtsGeomIntersectionMatrix_initWithComVividsolutionsJtsGeomIntersectionMatrix_(ComVividsolutionsJtsGeomIntersectionMatrix *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jboolean ComVividsolutionsJtsGeomIntersectionMatrix_matchesWithInt_withChar_(jint actualDimensionValue, jchar requiredDimensionSymbol);

FOUNDATION_EXPORT jboolean ComVividsolutionsJtsGeomIntersectionMatrix_matchesWithNSString_withNSString_(NSString *actualDimensionSymbols, NSString *requiredDimensionSymbols);

J2OBJC_TYPE_LITERAL_HEADER(ComVividsolutionsJtsGeomIntersectionMatrix)

#endif // _ComVividsolutionsJtsGeomIntersectionMatrix_H_
