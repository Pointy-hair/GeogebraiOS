//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geom/prep/PreparedPolygonContains.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/prep/AbstractPreparedPolygonContains.h"
#include "com/vividsolutions/jts/geom/prep/PreparedPolygon.h"
#include "com/vividsolutions/jts/geom/prep/PreparedPolygonContains.h"

@implementation ComVividsolutionsJtsGeomPrepPreparedPolygonContains

+ (jboolean)containsWithComVividsolutionsJtsGeomPrepPreparedPolygon:(ComVividsolutionsJtsGeomPrepPreparedPolygon *)prep
                               withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  return ComVividsolutionsJtsGeomPrepPreparedPolygonContains_containsWithComVividsolutionsJtsGeomPrepPreparedPolygon_withComVividsolutionsJtsGeomGeometry_(prep, geom);
}

- (instancetype)initWithComVividsolutionsJtsGeomPrepPreparedPolygon:(ComVividsolutionsJtsGeomPrepPreparedPolygon *)prepPoly {
  ComVividsolutionsJtsGeomPrepPreparedPolygonContains_initWithComVividsolutionsJtsGeomPrepPreparedPolygon_(self, prepPoly);
  return self;
}

- (jboolean)containsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  return [self evalWithComVividsolutionsJtsGeomGeometry:geom];
}

- (jboolean)fullTopologicalPredicateWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  jboolean isContained = [((ComVividsolutionsJtsGeomGeometry *) nil_chk([((ComVividsolutionsJtsGeomPrepPreparedPolygon *) nil_chk(prepPoly_)) getGeometry])) containsWithComVividsolutionsJtsGeomGeometry:geom];
  return isContained;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "containsWithComVividsolutionsJtsGeomPrepPreparedPolygon:withComVividsolutionsJtsGeomGeometry:", "contains", "Z", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomPrepPreparedPolygon:", "PreparedPolygonContains", NULL, 0x1, NULL, NULL },
    { "containsWithComVividsolutionsJtsGeomGeometry:", "contains", "Z", 0x1, NULL, NULL },
    { "fullTopologicalPredicateWithComVividsolutionsJtsGeomGeometry:", "fullTopologicalPredicate", "Z", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomPrepPreparedPolygonContains = { 2, "PreparedPolygonContains", "com.vividsolutions.jts.geom.prep", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomPrepPreparedPolygonContains;
}

@end

jboolean ComVividsolutionsJtsGeomPrepPreparedPolygonContains_containsWithComVividsolutionsJtsGeomPrepPreparedPolygon_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomPrepPreparedPolygon *prep, ComVividsolutionsJtsGeomGeometry *geom) {
  ComVividsolutionsJtsGeomPrepPreparedPolygonContains_initialize();
  ComVividsolutionsJtsGeomPrepPreparedPolygonContains *polyInt = new_ComVividsolutionsJtsGeomPrepPreparedPolygonContains_initWithComVividsolutionsJtsGeomPrepPreparedPolygon_(prep);
  return [polyInt containsWithComVividsolutionsJtsGeomGeometry:geom];
}

void ComVividsolutionsJtsGeomPrepPreparedPolygonContains_initWithComVividsolutionsJtsGeomPrepPreparedPolygon_(ComVividsolutionsJtsGeomPrepPreparedPolygonContains *self, ComVividsolutionsJtsGeomPrepPreparedPolygon *prepPoly) {
  (void) ComVividsolutionsJtsGeomPrepAbstractPreparedPolygonContains_initWithComVividsolutionsJtsGeomPrepPreparedPolygon_(self, prepPoly);
}

ComVividsolutionsJtsGeomPrepPreparedPolygonContains *new_ComVividsolutionsJtsGeomPrepPreparedPolygonContains_initWithComVividsolutionsJtsGeomPrepPreparedPolygon_(ComVividsolutionsJtsGeomPrepPreparedPolygon *prepPoly) {
  ComVividsolutionsJtsGeomPrepPreparedPolygonContains *self = [ComVividsolutionsJtsGeomPrepPreparedPolygonContains alloc];
  ComVividsolutionsJtsGeomPrepPreparedPolygonContains_initWithComVividsolutionsJtsGeomPrepPreparedPolygon_(self, prepPoly);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomPrepPreparedPolygonContains)
