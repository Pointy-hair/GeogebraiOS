//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/geom/util/LineStringExtracter.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryCollection.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/util/LineStringExtracter.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsGeomUtilLineStringExtracter () {
 @public
  id<JavaUtilList> comps_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomUtilLineStringExtracter, comps_, id<JavaUtilList>)

@implementation ComVividsolutionsJtsGeomUtilLineStringExtracter

+ (id<JavaUtilList>)getLinesWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                                withJavaUtilList:(id<JavaUtilList>)list {
  return ComVividsolutionsJtsGeomUtilLineStringExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(geom, list);
}

+ (id<JavaUtilList>)getLinesWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  return ComVividsolutionsJtsGeomUtilLineStringExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_(geom);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)comps {
  ComVividsolutionsJtsGeomUtilLineStringExtracter_initWithJavaUtilList_(self, comps);
  return self;
}

- (void)filterWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomLineString class]]) [((id<JavaUtilList>) nil_chk(comps_)) addWithId:geom];
}

- (void)dealloc {
  RELEASE_(comps_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getLinesWithComVividsolutionsJtsGeomGeometry:withJavaUtilList:", "getLines", "Ljava.util.List;", 0x9, NULL, NULL },
    { "getLinesWithComVividsolutionsJtsGeomGeometry:", "getLines", "Ljava.util.List;", 0x9, NULL, NULL },
    { "initWithJavaUtilList:", "LineStringExtracter", NULL, 0x1, NULL, NULL },
    { "filterWithComVividsolutionsJtsGeomGeometry:", "filter", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "comps_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomUtilLineStringExtracter = { 2, "LineStringExtracter", "com.vividsolutions.jts.geom.util", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomUtilLineStringExtracter;
}

@end

id<JavaUtilList> ComVividsolutionsJtsGeomUtilLineStringExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(ComVividsolutionsJtsGeomGeometry *geom, id<JavaUtilList> list) {
  ComVividsolutionsJtsGeomUtilLineStringExtracter_initialize();
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomLineString class]]) {
    [((id<JavaUtilList>) nil_chk(list)) addWithId:geom];
  }
  else if ([geom isKindOfClass:[ComVividsolutionsJtsGeomGeometryCollection class]]) {
    [((ComVividsolutionsJtsGeomGeometry *) nil_chk(geom)) applyWithComVividsolutionsJtsGeomGeometryFilter:[new_ComVividsolutionsJtsGeomUtilLineStringExtracter_initWithJavaUtilList_(list) autorelease]];
  }
  return list;
}

id<JavaUtilList> ComVividsolutionsJtsGeomUtilLineStringExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *geom) {
  ComVividsolutionsJtsGeomUtilLineStringExtracter_initialize();
  return ComVividsolutionsJtsGeomUtilLineStringExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(geom, [new_JavaUtilArrayList_init() autorelease]);
}

void ComVividsolutionsJtsGeomUtilLineStringExtracter_initWithJavaUtilList_(ComVividsolutionsJtsGeomUtilLineStringExtracter *self, id<JavaUtilList> comps) {
  NSObject_init(self);
  ComVividsolutionsJtsGeomUtilLineStringExtracter_set_comps_(self, comps);
}

ComVividsolutionsJtsGeomUtilLineStringExtracter *new_ComVividsolutionsJtsGeomUtilLineStringExtracter_initWithJavaUtilList_(id<JavaUtilList> comps) {
  ComVividsolutionsJtsGeomUtilLineStringExtracter *self = [ComVividsolutionsJtsGeomUtilLineStringExtracter alloc];
  ComVividsolutionsJtsGeomUtilLineStringExtracter_initWithJavaUtilList_(self, comps);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomUtilLineStringExtracter)
