//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geom/util/PointExtracter.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryCollection.h"
#include "com/vividsolutions/jts/geom/Point.h"
#include "com/vividsolutions/jts/geom/util/PointExtracter.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsGeomUtilPointExtracter () {
 @public
  id<JavaUtilList> pts_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomUtilPointExtracter, pts_, id<JavaUtilList>)

@implementation ComVividsolutionsJtsGeomUtilPointExtracter

+ (id<JavaUtilList>)getPointsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                                 withJavaUtilList:(id<JavaUtilList>)list {
  return ComVividsolutionsJtsGeomUtilPointExtracter_getPointsWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(geom, list);
}

+ (id<JavaUtilList>)getPointsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  return ComVividsolutionsJtsGeomUtilPointExtracter_getPointsWithComVividsolutionsJtsGeomGeometry_(geom);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)pts {
  ComVividsolutionsJtsGeomUtilPointExtracter_initWithJavaUtilList_(self, pts);
  return self;
}

- (void)filterWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomPoint class]]) [((id<JavaUtilList>) nil_chk(pts_)) addWithId:geom];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPointsWithComVividsolutionsJtsGeomGeometry:withJavaUtilList:", "getPoints", "Ljava.util.List;", 0x9, NULL, NULL },
    { "getPointsWithComVividsolutionsJtsGeomGeometry:", "getPoints", "Ljava.util.List;", 0x9, NULL, NULL },
    { "initWithJavaUtilList:", "PointExtracter", NULL, 0x1, NULL, NULL },
    { "filterWithComVividsolutionsJtsGeomGeometry:", "filter", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pts_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomUtilPointExtracter = { 2, "PointExtracter", "com.vividsolutions.jts.geom.util", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomUtilPointExtracter;
}

@end

id<JavaUtilList> ComVividsolutionsJtsGeomUtilPointExtracter_getPointsWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(ComVividsolutionsJtsGeomGeometry *geom, id<JavaUtilList> list) {
  ComVividsolutionsJtsGeomUtilPointExtracter_initialize();
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomPoint class]]) {
    [((id<JavaUtilList>) nil_chk(list)) addWithId:geom];
  }
  else if ([geom isKindOfClass:[ComVividsolutionsJtsGeomGeometryCollection class]]) {
    [((ComVividsolutionsJtsGeomGeometry *) nil_chk(geom)) applyWithComVividsolutionsJtsGeomGeometryFilter:new_ComVividsolutionsJtsGeomUtilPointExtracter_initWithJavaUtilList_(list)];
  }
  return list;
}

id<JavaUtilList> ComVividsolutionsJtsGeomUtilPointExtracter_getPointsWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *geom) {
  ComVividsolutionsJtsGeomUtilPointExtracter_initialize();
  return ComVividsolutionsJtsGeomUtilPointExtracter_getPointsWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(geom, new_JavaUtilArrayList_init());
}

void ComVividsolutionsJtsGeomUtilPointExtracter_initWithJavaUtilList_(ComVividsolutionsJtsGeomUtilPointExtracter *self, id<JavaUtilList> pts) {
  (void) NSObject_init(self);
  self->pts_ = pts;
}

ComVividsolutionsJtsGeomUtilPointExtracter *new_ComVividsolutionsJtsGeomUtilPointExtracter_initWithJavaUtilList_(id<JavaUtilList> pts) {
  ComVividsolutionsJtsGeomUtilPointExtracter *self = [ComVividsolutionsJtsGeomUtilPointExtracter alloc];
  ComVividsolutionsJtsGeomUtilPointExtracter_initWithJavaUtilList_(self, pts);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomUtilPointExtracter)
