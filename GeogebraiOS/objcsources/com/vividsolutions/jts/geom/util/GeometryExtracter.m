//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/geom/util/GeometryExtracter.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryCollection.h"
#include "com/vividsolutions/jts/geom/util/GeometryExtracter.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsGeomUtilGeometryExtracter () {
 @public
  IOSClass *clz_;
  id<JavaUtilList> comps_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomUtilGeometryExtracter, clz_, IOSClass *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomUtilGeometryExtracter, comps_, id<JavaUtilList>)

@implementation ComVividsolutionsJtsGeomUtilGeometryExtracter

+ (jboolean)isOfClassWithId:(id)o
               withIOSClass:(IOSClass *)clz {
  return ComVividsolutionsJtsGeomUtilGeometryExtracter_isOfClassWithId_withIOSClass_(o, clz);
}

+ (id<JavaUtilList>)extractWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                                   withIOSClass:(IOSClass *)clz
                                               withJavaUtilList:(id<JavaUtilList>)list {
  return ComVividsolutionsJtsGeomUtilGeometryExtracter_extractWithComVividsolutionsJtsGeomGeometry_withIOSClass_withJavaUtilList_(geom, clz, list);
}

+ (id<JavaUtilList>)extractWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                                   withIOSClass:(IOSClass *)clz {
  return ComVividsolutionsJtsGeomUtilGeometryExtracter_extractWithComVividsolutionsJtsGeomGeometry_withIOSClass_(geom, clz);
}

- (instancetype)initWithIOSClass:(IOSClass *)clz
                withJavaUtilList:(id<JavaUtilList>)comps {
  ComVividsolutionsJtsGeomUtilGeometryExtracter_initWithIOSClass_withJavaUtilList_(self, clz, comps);
  return self;
}

- (void)filterWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  if (clz_ == nil || ComVividsolutionsJtsGeomUtilGeometryExtracter_isOfClassWithId_withIOSClass_(geom, clz_)) [((id<JavaUtilList>) nil_chk(comps_)) addWithId:geom];
}

- (void)dealloc {
  RELEASE_(clz_);
  RELEASE_(comps_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isOfClassWithId:withIOSClass:", "isOfClass", "Z", 0xc, NULL, NULL },
    { "extractWithComVividsolutionsJtsGeomGeometry:withIOSClass:withJavaUtilList:", "extract", "Ljava.util.List;", 0x9, NULL, NULL },
    { "extractWithComVividsolutionsJtsGeomGeometry:withIOSClass:", "extract", "Ljava.util.List;", 0x9, NULL, NULL },
    { "initWithIOSClass:withJavaUtilList:", "GeometryExtracter", NULL, 0x1, NULL, NULL },
    { "filterWithComVividsolutionsJtsGeomGeometry:", "filter", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "clz_", NULL, 0x2, "Ljava.lang.Class;", NULL, NULL,  },
    { "comps_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomUtilGeometryExtracter = { 2, "GeometryExtracter", "com.vividsolutions.jts.geom.util", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomUtilGeometryExtracter;
}

@end

jboolean ComVividsolutionsJtsGeomUtilGeometryExtracter_isOfClassWithId_withIOSClass_(id o, IOSClass *clz) {
  ComVividsolutionsJtsGeomUtilGeometryExtracter_initialize();
  return [((NSString *) nil_chk([[nil_chk(o) getClass] getName])) isEqual:[((IOSClass *) nil_chk(clz)) getName]];
}

id<JavaUtilList> ComVividsolutionsJtsGeomUtilGeometryExtracter_extractWithComVividsolutionsJtsGeomGeometry_withIOSClass_withJavaUtilList_(ComVividsolutionsJtsGeomGeometry *geom, IOSClass *clz, id<JavaUtilList> list) {
  ComVividsolutionsJtsGeomUtilGeometryExtracter_initialize();
  if (ComVividsolutionsJtsGeomUtilGeometryExtracter_isOfClassWithId_withIOSClass_(geom, clz)) {
    [((id<JavaUtilList>) nil_chk(list)) addWithId:geom];
  }
  else if ([geom isKindOfClass:[ComVividsolutionsJtsGeomGeometryCollection class]]) {
    [((ComVividsolutionsJtsGeomGeometry *) nil_chk(geom)) applyWithComVividsolutionsJtsGeomGeometryFilter:[new_ComVividsolutionsJtsGeomUtilGeometryExtracter_initWithIOSClass_withJavaUtilList_(clz, list) autorelease]];
  }
  return list;
}

id<JavaUtilList> ComVividsolutionsJtsGeomUtilGeometryExtracter_extractWithComVividsolutionsJtsGeomGeometry_withIOSClass_(ComVividsolutionsJtsGeomGeometry *geom, IOSClass *clz) {
  ComVividsolutionsJtsGeomUtilGeometryExtracter_initialize();
  return ComVividsolutionsJtsGeomUtilGeometryExtracter_extractWithComVividsolutionsJtsGeomGeometry_withIOSClass_withJavaUtilList_(geom, clz, [new_JavaUtilArrayList_init() autorelease]);
}

void ComVividsolutionsJtsGeomUtilGeometryExtracter_initWithIOSClass_withJavaUtilList_(ComVividsolutionsJtsGeomUtilGeometryExtracter *self, IOSClass *clz, id<JavaUtilList> comps) {
  NSObject_init(self);
  ComVividsolutionsJtsGeomUtilGeometryExtracter_set_clz_(self, clz);
  ComVividsolutionsJtsGeomUtilGeometryExtracter_set_comps_(self, comps);
}

ComVividsolutionsJtsGeomUtilGeometryExtracter *new_ComVividsolutionsJtsGeomUtilGeometryExtracter_initWithIOSClass_withJavaUtilList_(IOSClass *clz, id<JavaUtilList> comps) {
  ComVividsolutionsJtsGeomUtilGeometryExtracter *self = [ComVividsolutionsJtsGeomUtilGeometryExtracter alloc];
  ComVividsolutionsJtsGeomUtilGeometryExtracter_initWithIOSClass_withJavaUtilList_(self, clz, comps);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomUtilGeometryExtracter)
