//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geom/util/AffineTransformation.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/CoordinateSequence.h"
#include "com/vividsolutions/jts/geom/util/AffineTransformation.h"
#include "com/vividsolutions/jts/geom/util/NoninvertibleTransformationException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"

@interface ComVividsolutionsJtsGeomUtilAffineTransformation () {
 @public
  jdouble m00_;
  jdouble m01_;
  jdouble m02_;
  jdouble m10_;
  jdouble m11_;
  jdouble m12_;
}

@end

@implementation ComVividsolutionsJtsGeomUtilAffineTransformation

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)reflectionInstanceWithDouble:(jdouble)x0
                                                                        withDouble:(jdouble)y0
                                                                        withDouble:(jdouble)x1
                                                                        withDouble:(jdouble)y1 {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_reflectionInstanceWithDouble_withDouble_withDouble_withDouble_(x0, y0, x1, y1);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)reflectionInstanceWithDouble:(jdouble)x
                                                                        withDouble:(jdouble)y {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_reflectionInstanceWithDouble_withDouble_(x, y);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotationInstanceWithDouble:(jdouble)theta {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_(theta);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotationInstanceWithDouble:(jdouble)sinTheta
                                                                      withDouble:(jdouble)cosTheta {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_(sinTheta, cosTheta);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotationInstanceWithDouble:(jdouble)theta
                                                                      withDouble:(jdouble)x
                                                                      withDouble:(jdouble)y {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_withDouble_(theta, x, y);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotationInstanceWithDouble:(jdouble)sinTheta
                                                                      withDouble:(jdouble)cosTheta
                                                                      withDouble:(jdouble)x
                                                                      withDouble:(jdouble)y {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_withDouble_withDouble_(sinTheta, cosTheta, x, y);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)scaleInstanceWithDouble:(jdouble)xScale
                                                                   withDouble:(jdouble)yScale {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_scaleInstanceWithDouble_withDouble_(xScale, yScale);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)shearInstanceWithDouble:(jdouble)xShear
                                                                   withDouble:(jdouble)yShear {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_shearInstanceWithDouble_withDouble_(xShear, yShear);
}

+ (ComVividsolutionsJtsGeomUtilAffineTransformation *)translationInstanceWithDouble:(jdouble)x
                                                                         withDouble:(jdouble)y {
  return ComVividsolutionsJtsGeomUtilAffineTransformation_translationInstanceWithDouble_withDouble_(x, y);
}

- (instancetype)init {
  ComVividsolutionsJtsGeomUtilAffineTransformation_init(self);
  return self;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)matrix {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDoubleArray_(self, matrix);
  return self;
}

- (instancetype)initWithDouble:(jdouble)m00
                    withDouble:(jdouble)m01
                    withDouble:(jdouble)m02
                    withDouble:(jdouble)m10
                    withDouble:(jdouble)m11
                    withDouble:(jdouble)m12 {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(self, m00, m01, m02, m10, m11, m12);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomUtilAffineTransformation:(ComVividsolutionsJtsGeomUtilAffineTransformation *)trans {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomUtilAffineTransformation_(self, trans);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)src0
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)src1
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)src2
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)dest0
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)dest1
                    withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)dest2 {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, src0, src1, src2, dest0, dest1, dest2);
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToIdentity {
  m00_ = 1.0;
  m01_ = 0.0;
  m02_ = 0.0;
  m10_ = 0.0;
  m11_ = 1.0;
  m12_ = 0.0;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setTransformationWithDouble:(jdouble)m00
                                                                       withDouble:(jdouble)m01
                                                                       withDouble:(jdouble)m02
                                                                       withDouble:(jdouble)m10
                                                                       withDouble:(jdouble)m11
                                                                       withDouble:(jdouble)m12 {
  self->m00_ = m00;
  self->m01_ = m01;
  self->m02_ = m02;
  self->m10_ = m10;
  self->m11_ = m11;
  self->m12_ = m12;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setTransformationWithComVividsolutionsJtsGeomUtilAffineTransformation:(ComVividsolutionsJtsGeomUtilAffineTransformation *)trans {
  m00_ = ((ComVividsolutionsJtsGeomUtilAffineTransformation *) nil_chk(trans))->m00_;
  m01_ = trans->m01_;
  m02_ = trans->m02_;
  m10_ = trans->m10_;
  m11_ = trans->m11_;
  m12_ = trans->m12_;
  return self;
}

- (IOSDoubleArray *)getMatrixEntries {
  return [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ m00_, m01_, m02_, m10_, m11_, m12_ } count:6];
}

- (jdouble)getDeterminant {
  return m00_ * m11_ - m01_ * m10_;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)getInverse {
  jdouble det = [self getDeterminant];
  if (det == 0) @throw new_ComVividsolutionsJtsGeomUtilNoninvertibleTransformationException_initWithNSString_(@"Transformation is non-invertible");
  jdouble im00 = m11_ / det;
  jdouble im10 = -m10_ / det;
  jdouble im01 = -m01_ / det;
  jdouble im11 = m00_ / det;
  jdouble im02 = (m01_ * m12_ - m02_ * m11_) / det;
  jdouble im12 = (-m00_ * m12_ + m10_ * m02_) / det;
  return new_ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(im00, im01, im02, im10, im11, im12);
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToReflectionBasicWithDouble:(jdouble)x0
                                                                          withDouble:(jdouble)y0
                                                                          withDouble:(jdouble)x1
                                                                          withDouble:(jdouble)y1 {
  if (x0 == x1 && y0 == y1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Reflection line points must be distinct");
  }
  jdouble dx = x1 - x0;
  jdouble dy = y1 - y0;
  jdouble d = JavaLangMath_sqrtWithDouble_(dx * dx + dy * dy);
  jdouble sin = dy / d;
  jdouble cos = dx / d;
  jdouble cs2 = 2 * sin * cos;
  jdouble c2s2 = cos * cos - sin * sin;
  m00_ = c2s2;
  m01_ = cs2;
  m02_ = 0.0;
  m10_ = cs2;
  m11_ = -c2s2;
  m12_ = 0.0;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToReflectionWithDouble:(jdouble)x0
                                                                     withDouble:(jdouble)y0
                                                                     withDouble:(jdouble)x1
                                                                     withDouble:(jdouble)y1 {
  if (x0 == x1 && y0 == y1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Reflection line points must be distinct");
  }
  (void) [self setToTranslationWithDouble:-x0 withDouble:-y0];
  jdouble dx = x1 - x0;
  jdouble dy = y1 - y0;
  jdouble d = JavaLangMath_sqrtWithDouble_(dx * dx + dy * dy);
  jdouble sin = dy / d;
  jdouble cos = dx / d;
  (void) [self rotateWithDouble:-sin withDouble:cos];
  (void) [self scale__WithDouble:1 withDouble:-1];
  (void) [self rotateWithDouble:sin withDouble:cos];
  (void) [self translateWithDouble:x0 withDouble:y0];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToReflectionWithDouble:(jdouble)x
                                                                     withDouble:(jdouble)y {
  if (x == 0.0 && y == 0.0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Reflection vector must be non-zero");
  }
  jdouble d = JavaLangMath_sqrtWithDouble_(x * x + y * y);
  jdouble sin = y / d;
  jdouble cos = x / d;
  (void) [self rotateWithDouble:-sin withDouble:cos];
  (void) [self scale__WithDouble:1 withDouble:-1];
  (void) [self rotateWithDouble:sin withDouble:cos];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToRotationWithDouble:(jdouble)theta {
  (void) [self setToRotationWithDouble:JavaLangMath_sinWithDouble_(theta) withDouble:JavaLangMath_cosWithDouble_(theta)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToRotationWithDouble:(jdouble)sinTheta
                                                                   withDouble:(jdouble)cosTheta {
  m00_ = cosTheta;
  m01_ = -sinTheta;
  m02_ = 0.0;
  m10_ = sinTheta;
  m11_ = cosTheta;
  m12_ = 0.0;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToRotationWithDouble:(jdouble)theta
                                                                   withDouble:(jdouble)x
                                                                   withDouble:(jdouble)y {
  (void) [self setToRotationWithDouble:JavaLangMath_sinWithDouble_(theta) withDouble:JavaLangMath_cosWithDouble_(theta) withDouble:x withDouble:y];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToRotationWithDouble:(jdouble)sinTheta
                                                                   withDouble:(jdouble)cosTheta
                                                                   withDouble:(jdouble)x
                                                                   withDouble:(jdouble)y {
  m00_ = cosTheta;
  m01_ = -sinTheta;
  m02_ = x - x * cosTheta + y * sinTheta;
  m10_ = sinTheta;
  m11_ = cosTheta;
  m12_ = y - x * sinTheta - y * cosTheta;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToScaleWithDouble:(jdouble)xScale
                                                                withDouble:(jdouble)yScale {
  m00_ = xScale;
  m01_ = 0.0;
  m02_ = 0.0;
  m10_ = 0.0;
  m11_ = yScale;
  m12_ = 0.0;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToShearWithDouble:(jdouble)xShear
                                                                withDouble:(jdouble)yShear {
  m00_ = 1.0;
  m01_ = xShear;
  m02_ = 0.0;
  m10_ = yShear;
  m11_ = 1.0;
  m12_ = 0.0;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)setToTranslationWithDouble:(jdouble)dx
                                                                      withDouble:(jdouble)dy {
  m00_ = 1.0;
  m01_ = 0.0;
  m02_ = dx;
  m10_ = 0.0;
  m11_ = 1.0;
  m12_ = dy;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)reflectWithDouble:(jdouble)x0
                                                             withDouble:(jdouble)y0
                                                             withDouble:(jdouble)x1
                                                             withDouble:(jdouble)y1 {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_reflectionInstanceWithDouble_withDouble_withDouble_withDouble_(x0, y0, x1, y1)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)reflectWithDouble:(jdouble)x
                                                             withDouble:(jdouble)y {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_reflectionInstanceWithDouble_withDouble_(x, y)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotateWithDouble:(jdouble)theta {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_(theta)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotateWithDouble:(jdouble)sinTheta
                                                            withDouble:(jdouble)cosTheta {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_(sinTheta, cosTheta)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotateWithDouble:(jdouble)theta
                                                            withDouble:(jdouble)x
                                                            withDouble:(jdouble)y {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_withDouble_(theta, x, y)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)rotateWithDouble:(jdouble)sinTheta
                                                            withDouble:(jdouble)cosTheta
                                                            withDouble:(jdouble)x
                                                            withDouble:(jdouble)y {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_(sinTheta, cosTheta)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)scale__WithDouble:(jdouble)xScale
                                                             withDouble:(jdouble)yScale {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_scaleInstanceWithDouble_withDouble_(xScale, yScale)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)shearWithDouble:(jdouble)xShear
                                                           withDouble:(jdouble)yShear {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_shearInstanceWithDouble_withDouble_(xShear, yShear)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)translateWithDouble:(jdouble)x
                                                               withDouble:(jdouble)y {
  (void) [self composeWithComVividsolutionsJtsGeomUtilAffineTransformation:ComVividsolutionsJtsGeomUtilAffineTransformation_translationInstanceWithDouble_withDouble_(x, y)];
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)composeWithComVividsolutionsJtsGeomUtilAffineTransformation:(ComVividsolutionsJtsGeomUtilAffineTransformation *)trans {
  jdouble mp00 = ((ComVividsolutionsJtsGeomUtilAffineTransformation *) nil_chk(trans))->m00_ * m00_ + trans->m01_ * m10_;
  jdouble mp01 = trans->m00_ * m01_ + trans->m01_ * m11_;
  jdouble mp02 = trans->m00_ * m02_ + trans->m01_ * m12_ + trans->m02_;
  jdouble mp10 = trans->m10_ * m00_ + trans->m11_ * m10_;
  jdouble mp11 = trans->m10_ * m01_ + trans->m11_ * m11_;
  jdouble mp12 = trans->m10_ * m02_ + trans->m11_ * m12_ + trans->m12_;
  m00_ = mp00;
  m01_ = mp01;
  m02_ = mp02;
  m10_ = mp10;
  m11_ = mp11;
  m12_ = mp12;
  return self;
}

- (ComVividsolutionsJtsGeomUtilAffineTransformation *)composeBeforeWithComVividsolutionsJtsGeomUtilAffineTransformation:(ComVividsolutionsJtsGeomUtilAffineTransformation *)trans {
  jdouble mp00 = m00_ * ((ComVividsolutionsJtsGeomUtilAffineTransformation *) nil_chk(trans))->m00_ + m01_ * trans->m10_;
  jdouble mp01 = m00_ * trans->m01_ + m01_ * trans->m11_;
  jdouble mp02 = m00_ * trans->m02_ + m01_ * trans->m12_ + m02_;
  jdouble mp10 = m10_ * trans->m00_ + m11_ * trans->m10_;
  jdouble mp11 = m10_ * trans->m01_ + m11_ * trans->m11_;
  jdouble mp12 = m10_ * trans->m02_ + m11_ * trans->m12_ + m12_;
  m00_ = mp00;
  m01_ = mp01;
  m02_ = mp02;
  m10_ = mp10;
  m11_ = mp11;
  m12_ = mp12;
  return self;
}

- (ComVividsolutionsJtsGeomCoordinate *)transformWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)src
                                                 withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)dest {
  jdouble xp = m00_ * ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(src))->x_ + m01_ * src->y_ + m02_;
  jdouble yp = m10_ * src->x_ + m11_ * src->y_ + m12_;
  ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(dest))->x_ = xp;
  dest->y_ = yp;
  return dest;
}

- (void)transformWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)seq
                                                        withInt:(jint)i {
  jdouble xp = m00_ * [((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(seq)) getOrdinateWithInt:i withInt:0] + m01_ * [seq getOrdinateWithInt:i withInt:1] + m02_;
  jdouble yp = m10_ * [seq getOrdinateWithInt:i withInt:0] + m11_ * [seq getOrdinateWithInt:i withInt:1] + m12_;
  [seq setOrdinateWithInt:i withInt:0 withDouble:xp];
  [seq setOrdinateWithInt:i withInt:1 withDouble:yp];
}

- (void)filterWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)seq
                                                     withInt:(jint)i {
  [self transformWithComVividsolutionsJtsGeomCoordinateSequence:seq withInt:i];
}

- (jboolean)isGeometryChanged {
  return YES;
}

- (jboolean)isDone {
  return NO;
}

- (jboolean)isIdentity {
  return (m00_ == 1 && m01_ == 0 && m02_ == 0 && m10_ == 0 && m11_ == 1 && m12_ == 0);
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[ComVividsolutionsJtsGeomUtilAffineTransformation class]]) return NO;
  if (obj == nil) return NO;
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = (ComVividsolutionsJtsGeomUtilAffineTransformation *) check_class_cast(obj, [ComVividsolutionsJtsGeomUtilAffineTransformation class]);
  return m00_ == ((ComVividsolutionsJtsGeomUtilAffineTransformation *) nil_chk(trans))->m00_ && m01_ == trans->m01_ && m02_ == trans->m02_ && m10_ == trans->m10_ && m11_ == trans->m11_ && m12_ == trans->m12_;
}

- (NSString *)description {
  return JreStrcat("$D$D$D$D$D$D$", @"AffineTransformation[[", m00_, @", ", m01_, @", ", m02_, @"], [", m10_, @", ", m11_, @", ", m12_, @"]]");
}

- (id)clone {
  return self;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "reflectionInstanceWithDouble:withDouble:withDouble:withDouble:", "reflectionInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "reflectionInstanceWithDouble:withDouble:", "reflectionInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "rotationInstanceWithDouble:", "rotationInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "rotationInstanceWithDouble:withDouble:", "rotationInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "rotationInstanceWithDouble:withDouble:withDouble:", "rotationInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "rotationInstanceWithDouble:withDouble:withDouble:withDouble:", "rotationInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "scaleInstanceWithDouble:withDouble:", "scaleInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "shearInstanceWithDouble:withDouble:", "shearInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "translationInstanceWithDouble:withDouble:", "translationInstance", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x9, NULL, NULL },
    { "init", "AffineTransformation", NULL, 0x1, NULL, NULL },
    { "initWithDoubleArray:", "AffineTransformation", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "AffineTransformation", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomUtilAffineTransformation:", "AffineTransformation", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "AffineTransformation", NULL, 0x1, NULL, NULL },
    { "setToIdentity", NULL, "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setTransformationWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "setTransformation", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setTransformationWithComVividsolutionsJtsGeomUtilAffineTransformation:", "setTransformation", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "getMatrixEntries", NULL, "[D", 0x1, NULL, NULL },
    { "getDeterminant", NULL, "D", 0x1, NULL, NULL },
    { "getInverse", NULL, "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, "Lcom.vividsolutions.jts.geom.util.NoninvertibleTransformationException;", NULL },
    { "setToReflectionBasicWithDouble:withDouble:withDouble:withDouble:", "setToReflectionBasic", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToReflectionWithDouble:withDouble:withDouble:withDouble:", "setToReflection", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToReflectionWithDouble:withDouble:", "setToReflection", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToRotationWithDouble:", "setToRotation", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToRotationWithDouble:withDouble:", "setToRotation", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToRotationWithDouble:withDouble:withDouble:", "setToRotation", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToRotationWithDouble:withDouble:withDouble:withDouble:", "setToRotation", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToScaleWithDouble:withDouble:", "setToScale", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToShearWithDouble:withDouble:", "setToShear", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "setToTranslationWithDouble:withDouble:", "setToTranslation", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "reflectWithDouble:withDouble:withDouble:withDouble:", "reflect", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "reflectWithDouble:withDouble:", "reflect", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "rotateWithDouble:", "rotate", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "rotateWithDouble:withDouble:", "rotate", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "rotateWithDouble:withDouble:withDouble:", "rotate", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "rotateWithDouble:withDouble:withDouble:withDouble:", "rotate", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "scale__WithDouble:withDouble:", "scale", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "shearWithDouble:withDouble:", "shear", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "translateWithDouble:withDouble:", "translate", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "composeWithComVividsolutionsJtsGeomUtilAffineTransformation:", "compose", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "composeBeforeWithComVividsolutionsJtsGeomUtilAffineTransformation:", "composeBefore", "Lcom.vividsolutions.jts.geom.util.AffineTransformation;", 0x1, NULL, NULL },
    { "transformWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "transform", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "transformWithComVividsolutionsJtsGeomCoordinateSequence:withInt:", "transform", "V", 0x1, NULL, NULL },
    { "filterWithComVividsolutionsJtsGeomCoordinateSequence:withInt:", "filter", "V", 0x1, NULL, NULL },
    { "isGeometryChanged", NULL, "Z", 0x1, NULL, NULL },
    { "isDone", NULL, "Z", 0x1, NULL, NULL },
    { "isIdentity", NULL, "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "m00_", NULL, 0x2, "D", NULL, NULL,  },
    { "m01_", NULL, 0x2, "D", NULL, NULL,  },
    { "m02_", NULL, 0x2, "D", NULL, NULL,  },
    { "m10_", NULL, 0x2, "D", NULL, NULL,  },
    { "m11_", NULL, 0x2, "D", NULL, NULL,  },
    { "m12_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomUtilAffineTransformation = { 2, "AffineTransformation", "com.vividsolutions.jts.geom.util", NULL, 0x1, 50, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomUtilAffineTransformation;
}

@end

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_reflectionInstanceWithDouble_withDouble_withDouble_withDouble_(jdouble x0, jdouble y0, jdouble x1, jdouble y1) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = new_ComVividsolutionsJtsGeomUtilAffineTransformation_init();
  (void) [trans setToReflectionWithDouble:x0 withDouble:y0 withDouble:x1 withDouble:y1];
  return trans;
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_reflectionInstanceWithDouble_withDouble_(jdouble x, jdouble y) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = new_ComVividsolutionsJtsGeomUtilAffineTransformation_init();
  (void) [trans setToReflectionWithDouble:x withDouble:y];
  return trans;
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_(jdouble theta) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  return ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_(JavaLangMath_sinWithDouble_(theta), JavaLangMath_cosWithDouble_(theta));
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_(jdouble sinTheta, jdouble cosTheta) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = new_ComVividsolutionsJtsGeomUtilAffineTransformation_init();
  (void) [trans setToRotationWithDouble:sinTheta withDouble:cosTheta];
  return trans;
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_withDouble_(jdouble theta, jdouble x, jdouble y) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  return ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_withDouble_withDouble_(JavaLangMath_sinWithDouble_(theta), JavaLangMath_cosWithDouble_(theta), x, y);
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_rotationInstanceWithDouble_withDouble_withDouble_withDouble_(jdouble sinTheta, jdouble cosTheta, jdouble x, jdouble y) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = new_ComVividsolutionsJtsGeomUtilAffineTransformation_init();
  (void) [trans setToRotationWithDouble:sinTheta withDouble:cosTheta withDouble:x withDouble:y];
  return trans;
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_scaleInstanceWithDouble_withDouble_(jdouble xScale, jdouble yScale) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = new_ComVividsolutionsJtsGeomUtilAffineTransformation_init();
  (void) [trans setToScaleWithDouble:xScale withDouble:yScale];
  return trans;
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_shearInstanceWithDouble_withDouble_(jdouble xShear, jdouble yShear) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = new_ComVividsolutionsJtsGeomUtilAffineTransformation_init();
  (void) [trans setToShearWithDouble:xShear withDouble:yShear];
  return trans;
}

ComVividsolutionsJtsGeomUtilAffineTransformation *ComVividsolutionsJtsGeomUtilAffineTransformation_translationInstanceWithDouble_withDouble_(jdouble x, jdouble y) {
  ComVividsolutionsJtsGeomUtilAffineTransformation_initialize();
  ComVividsolutionsJtsGeomUtilAffineTransformation *trans = new_ComVividsolutionsJtsGeomUtilAffineTransformation_init();
  (void) [trans setToTranslationWithDouble:x withDouble:y];
  return trans;
}

void ComVividsolutionsJtsGeomUtilAffineTransformation_init(ComVividsolutionsJtsGeomUtilAffineTransformation *self) {
  (void) NSObject_init(self);
  (void) [self setToIdentity];
}

ComVividsolutionsJtsGeomUtilAffineTransformation *new_ComVividsolutionsJtsGeomUtilAffineTransformation_init() {
  ComVividsolutionsJtsGeomUtilAffineTransformation *self = [ComVividsolutionsJtsGeomUtilAffineTransformation alloc];
  ComVividsolutionsJtsGeomUtilAffineTransformation_init(self);
  return self;
}

void ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDoubleArray_(ComVividsolutionsJtsGeomUtilAffineTransformation *self, IOSDoubleArray *matrix) {
  (void) NSObject_init(self);
  self->m00_ = IOSDoubleArray_Get(nil_chk(matrix), 0);
  self->m01_ = IOSDoubleArray_Get(matrix, 1);
  self->m02_ = IOSDoubleArray_Get(matrix, 2);
  self->m10_ = IOSDoubleArray_Get(matrix, 3);
  self->m11_ = IOSDoubleArray_Get(matrix, 4);
  self->m12_ = IOSDoubleArray_Get(matrix, 5);
}

ComVividsolutionsJtsGeomUtilAffineTransformation *new_ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDoubleArray_(IOSDoubleArray *matrix) {
  ComVividsolutionsJtsGeomUtilAffineTransformation *self = [ComVividsolutionsJtsGeomUtilAffineTransformation alloc];
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDoubleArray_(self, matrix);
  return self;
}

void ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(ComVividsolutionsJtsGeomUtilAffineTransformation *self, jdouble m00, jdouble m01, jdouble m02, jdouble m10, jdouble m11, jdouble m12) {
  (void) NSObject_init(self);
  (void) [self setTransformationWithDouble:m00 withDouble:m01 withDouble:m02 withDouble:m10 withDouble:m11 withDouble:m12];
}

ComVividsolutionsJtsGeomUtilAffineTransformation *new_ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble m00, jdouble m01, jdouble m02, jdouble m10, jdouble m11, jdouble m12) {
  ComVividsolutionsJtsGeomUtilAffineTransformation *self = [ComVividsolutionsJtsGeomUtilAffineTransformation alloc];
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(self, m00, m01, m02, m10, m11, m12);
  return self;
}

void ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomUtilAffineTransformation_(ComVividsolutionsJtsGeomUtilAffineTransformation *self, ComVividsolutionsJtsGeomUtilAffineTransformation *trans) {
  (void) NSObject_init(self);
  (void) [self setTransformationWithComVividsolutionsJtsGeomUtilAffineTransformation:trans];
}

ComVividsolutionsJtsGeomUtilAffineTransformation *new_ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomUtilAffineTransformation_(ComVividsolutionsJtsGeomUtilAffineTransformation *trans) {
  ComVividsolutionsJtsGeomUtilAffineTransformation *self = [ComVividsolutionsJtsGeomUtilAffineTransformation alloc];
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomUtilAffineTransformation_(self, trans);
  return self;
}

void ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomUtilAffineTransformation *self, ComVividsolutionsJtsGeomCoordinate *src0, ComVividsolutionsJtsGeomCoordinate *src1, ComVividsolutionsJtsGeomCoordinate *src2, ComVividsolutionsJtsGeomCoordinate *dest0, ComVividsolutionsJtsGeomCoordinate *dest1, ComVividsolutionsJtsGeomCoordinate *dest2) {
  (void) NSObject_init(self);
}

ComVividsolutionsJtsGeomUtilAffineTransformation *new_ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsGeomCoordinate *src0, ComVividsolutionsJtsGeomCoordinate *src1, ComVividsolutionsJtsGeomCoordinate *src2, ComVividsolutionsJtsGeomCoordinate *dest0, ComVividsolutionsJtsGeomCoordinate *dest1, ComVividsolutionsJtsGeomCoordinate *dest2) {
  ComVividsolutionsJtsGeomUtilAffineTransformation *self = [ComVividsolutionsJtsGeomUtilAffineTransformation alloc];
  ComVividsolutionsJtsGeomUtilAffineTransformation_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, src0, src1, src2, dest0, dest1, dest2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomUtilAffineTransformation)
