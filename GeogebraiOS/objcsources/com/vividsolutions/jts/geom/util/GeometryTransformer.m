//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geom/util/GeometryTransformer.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/CoordinateSequence.h"
#include "com/vividsolutions/jts/geom/CoordinateSequenceFactory.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryCollection.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/LinearRing.h"
#include "com/vividsolutions/jts/geom/MultiLineString.h"
#include "com/vividsolutions/jts/geom/MultiPoint.h"
#include "com/vividsolutions/jts/geom/MultiPolygon.h"
#include "com/vividsolutions/jts/geom/Point.h"
#include "com/vividsolutions/jts/geom/Polygon.h"
#include "com/vividsolutions/jts/geom/util/GeometryTransformer.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsGeomUtilGeometryTransformer () {
 @public
  ComVividsolutionsJtsGeomGeometry *inputGeom_;
  jboolean pruneEmptyGeometry_;
  jboolean preserveGeometryCollectionType_;
  jboolean preserveCollections_;
  jboolean preserveType_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomUtilGeometryTransformer, inputGeom_, ComVividsolutionsJtsGeomGeometry *)

__attribute__((unused)) static ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsGeomUtilGeometryTransformer_transformWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomUtilGeometryTransformer *self, ComVividsolutionsJtsGeomGeometry *inputGeom);

__attribute__((unused)) static id<ComVividsolutionsJtsGeomCoordinateSequence> ComVividsolutionsJtsGeomUtilGeometryTransformer_copy__WithComVividsolutionsJtsGeomCoordinateSequence_(ComVividsolutionsJtsGeomUtilGeometryTransformer *self, id<ComVividsolutionsJtsGeomCoordinateSequence> seq);

@implementation ComVividsolutionsJtsGeomUtilGeometryTransformer

- (instancetype)init {
  ComVividsolutionsJtsGeomUtilGeometryTransformer_init(self);
  return self;
}

- (ComVividsolutionsJtsGeomGeometry *)getInputGeometry {
  return inputGeom_;
}

- (ComVividsolutionsJtsGeomGeometry *)transformWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)inputGeom {
  return ComVividsolutionsJtsGeomUtilGeometryTransformer_transformWithComVividsolutionsJtsGeomGeometry_(self, inputGeom);
}

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)createCoordinateSequenceWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coords {
  return [((id<ComVividsolutionsJtsGeomCoordinateSequenceFactory>) nil_chk([((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) getCoordinateSequenceFactory])) createWithComVividsolutionsJtsGeomCoordinateArray:coords];
}

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)copy__WithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)seq {
  return ComVividsolutionsJtsGeomUtilGeometryTransformer_copy__WithComVividsolutionsJtsGeomCoordinateSequence_(self, seq);
}

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coords
                                                                                withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  return ComVividsolutionsJtsGeomUtilGeometryTransformer_copy__WithComVividsolutionsJtsGeomCoordinateSequence_(self, coords);
}

- (ComVividsolutionsJtsGeomGeometry *)transformPointWithComVividsolutionsJtsGeomPoint:(ComVividsolutionsJtsGeomPoint *)geom
                                                 withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) createPointWithComVividsolutionsJtsGeomCoordinateSequence:[self transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:[((ComVividsolutionsJtsGeomPoint *) nil_chk(geom)) getCoordinateSequence] withComVividsolutionsJtsGeomGeometry:geom]];
}

- (ComVividsolutionsJtsGeomGeometry *)transformMultiPointWithComVividsolutionsJtsGeomMultiPoint:(ComVividsolutionsJtsGeomMultiPoint *)geom
                                                           withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  id<JavaUtilList> transGeomList = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomMultiPoint *) nil_chk(geom)) getNumGeometries]; i++) {
    ComVividsolutionsJtsGeomGeometry *transformGeom = [self transformPointWithComVividsolutionsJtsGeomPoint:(ComVividsolutionsJtsGeomPoint *) check_class_cast([geom getGeometryNWithInt:i], [ComVividsolutionsJtsGeomPoint class]) withComVividsolutionsJtsGeomGeometry:geom];
    if (transformGeom == nil) continue;
    if ([((ComVividsolutionsJtsGeomGeometry *) nil_chk(transformGeom)) isEmpty]) continue;
    [transGeomList addWithId:transformGeom];
  }
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) buildGeometryWithJavaUtilCollection:transGeomList];
}

- (ComVividsolutionsJtsGeomGeometry *)transformLinearRingWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *)geom
                                                           withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  id<ComVividsolutionsJtsGeomCoordinateSequence> seq = [self transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:[((ComVividsolutionsJtsGeomLinearRing *) nil_chk(geom)) getCoordinateSequence] withComVividsolutionsJtsGeomGeometry:geom];
  jint seqSize = [((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(seq)) size];
  if (seqSize > 0 && seqSize < 4 && !preserveType_) return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) createLineStringWithComVividsolutionsJtsGeomCoordinateSequence:seq];
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) createLinearRingWithComVividsolutionsJtsGeomCoordinateSequence:seq];
}

- (ComVividsolutionsJtsGeomGeometry *)transformLineStringWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)geom
                                                           withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) createLineStringWithComVividsolutionsJtsGeomCoordinateSequence:[self transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:[((ComVividsolutionsJtsGeomLineString *) nil_chk(geom)) getCoordinateSequence] withComVividsolutionsJtsGeomGeometry:geom]];
}

- (ComVividsolutionsJtsGeomGeometry *)transformMultiLineStringWithComVividsolutionsJtsGeomMultiLineString:(ComVividsolutionsJtsGeomMultiLineString *)geom
                                                                     withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  id<JavaUtilList> transGeomList = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomMultiLineString *) nil_chk(geom)) getNumGeometries]; i++) {
    ComVividsolutionsJtsGeomGeometry *transformGeom = [self transformLineStringWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *) check_class_cast([geom getGeometryNWithInt:i], [ComVividsolutionsJtsGeomLineString class]) withComVividsolutionsJtsGeomGeometry:geom];
    if (transformGeom == nil) continue;
    if ([((ComVividsolutionsJtsGeomGeometry *) nil_chk(transformGeom)) isEmpty]) continue;
    [transGeomList addWithId:transformGeom];
  }
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) buildGeometryWithJavaUtilCollection:transGeomList];
}

- (ComVividsolutionsJtsGeomGeometry *)transformPolygonWithComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *)geom
                                                     withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  jboolean isAllValidLinearRings = YES;
  ComVividsolutionsJtsGeomGeometry *shell = [self transformLinearRingWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *) check_class_cast([((ComVividsolutionsJtsGeomPolygon *) nil_chk(geom)) getExteriorRing], [ComVividsolutionsJtsGeomLinearRing class]) withComVividsolutionsJtsGeomGeometry:geom];
  if (shell == nil || !([shell isKindOfClass:[ComVividsolutionsJtsGeomLinearRing class]]) || [shell isEmpty]) isAllValidLinearRings = NO;
  JavaUtilArrayList *holes = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [geom getNumInteriorRing]; i++) {
    ComVividsolutionsJtsGeomGeometry *hole = [self transformLinearRingWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *) check_class_cast([geom getInteriorRingNWithInt:i], [ComVividsolutionsJtsGeomLinearRing class]) withComVividsolutionsJtsGeomGeometry:geom];
    if (hole == nil || [hole isEmpty]) {
      continue;
    }
    if (!([hole isKindOfClass:[ComVividsolutionsJtsGeomLinearRing class]])) isAllValidLinearRings = NO;
    [holes addWithId:hole];
  }
  if (isAllValidLinearRings) return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) createPolygonWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *) check_class_cast(shell, [ComVividsolutionsJtsGeomLinearRing class]) withComVividsolutionsJtsGeomLinearRingArray:(IOSObjectArray *) check_class_cast([holes toArrayWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){  } count:0 type:ComVividsolutionsJtsGeomLinearRing_class_()]], [IOSObjectArray class])];
  else {
    id<JavaUtilList> components = new_JavaUtilArrayList_init();
    if (shell != nil) [components addWithId:shell];
    [components addAllWithJavaUtilCollection:holes];
    return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) buildGeometryWithJavaUtilCollection:components];
  }
}

- (ComVividsolutionsJtsGeomGeometry *)transformMultiPolygonWithComVividsolutionsJtsGeomMultiPolygon:(ComVividsolutionsJtsGeomMultiPolygon *)geom
                                                               withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  id<JavaUtilList> transGeomList = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomMultiPolygon *) nil_chk(geom)) getNumGeometries]; i++) {
    ComVividsolutionsJtsGeomGeometry *transformGeom = [self transformPolygonWithComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *) check_class_cast([geom getGeometryNWithInt:i], [ComVividsolutionsJtsGeomPolygon class]) withComVividsolutionsJtsGeomGeometry:geom];
    if (transformGeom == nil) continue;
    if ([((ComVividsolutionsJtsGeomGeometry *) nil_chk(transformGeom)) isEmpty]) continue;
    [transGeomList addWithId:transformGeom];
  }
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) buildGeometryWithJavaUtilCollection:transGeomList];
}

- (ComVividsolutionsJtsGeomGeometry *)transformGeometryCollectionWithComVividsolutionsJtsGeomGeometryCollection:(ComVividsolutionsJtsGeomGeometryCollection *)geom
                                                                           withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  id<JavaUtilList> transGeomList = new_JavaUtilArrayList_init();
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomGeometryCollection *) nil_chk(geom)) getNumGeometries]; i++) {
    ComVividsolutionsJtsGeomGeometry *transformGeom = ComVividsolutionsJtsGeomUtilGeometryTransformer_transformWithComVividsolutionsJtsGeomGeometry_(self, [geom getGeometryNWithInt:i]);
    if (transformGeom == nil) continue;
    if (pruneEmptyGeometry_ && [((ComVividsolutionsJtsGeomGeometry *) nil_chk(transformGeom)) isEmpty]) continue;
    [transGeomList addWithId:transformGeom];
  }
  if (preserveGeometryCollectionType_) return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) createGeometryCollectionWithComVividsolutionsJtsGeomGeometryArray:ComVividsolutionsJtsGeomGeometryFactory_toGeometryArrayWithJavaUtilCollection_(transGeomList)];
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(factory_)) buildGeometryWithJavaUtilCollection:transGeomList];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GeometryTransformer", NULL, 0x1, NULL, NULL },
    { "getInputGeometry", NULL, "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
    { "transformWithComVividsolutionsJtsGeomGeometry:", "transform", "Lcom.vividsolutions.jts.geom.Geometry;", 0x11, NULL, NULL },
    { "createCoordinateSequenceWithComVividsolutionsJtsGeomCoordinateArray:", "createCoordinateSequence", "Lcom.vividsolutions.jts.geom.CoordinateSequence;", 0x14, NULL, NULL },
    { "copy__WithComVividsolutionsJtsGeomCoordinateSequence:", "copy", "Lcom.vividsolutions.jts.geom.CoordinateSequence;", 0x14, NULL, NULL },
    { "transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:withComVividsolutionsJtsGeomGeometry:", "transformCoordinates", "Lcom.vividsolutions.jts.geom.CoordinateSequence;", 0x4, NULL, NULL },
    { "transformPointWithComVividsolutionsJtsGeomPoint:withComVividsolutionsJtsGeomGeometry:", "transformPoint", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformMultiPointWithComVividsolutionsJtsGeomMultiPoint:withComVividsolutionsJtsGeomGeometry:", "transformMultiPoint", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformLinearRingWithComVividsolutionsJtsGeomLinearRing:withComVividsolutionsJtsGeomGeometry:", "transformLinearRing", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformLineStringWithComVividsolutionsJtsGeomLineString:withComVividsolutionsJtsGeomGeometry:", "transformLineString", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformMultiLineStringWithComVividsolutionsJtsGeomMultiLineString:withComVividsolutionsJtsGeomGeometry:", "transformMultiLineString", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformPolygonWithComVividsolutionsJtsGeomPolygon:withComVividsolutionsJtsGeomGeometry:", "transformPolygon", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformMultiPolygonWithComVividsolutionsJtsGeomMultiPolygon:withComVividsolutionsJtsGeomGeometry:", "transformMultiPolygon", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
    { "transformGeometryCollectionWithComVividsolutionsJtsGeomGeometryCollection:withComVividsolutionsJtsGeomGeometry:", "transformGeometryCollection", "Lcom.vividsolutions.jts.geom.Geometry;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputGeom_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
    { "factory_", NULL, 0x4, "Lcom.vividsolutions.jts.geom.GeometryFactory;", NULL, NULL,  },
    { "pruneEmptyGeometry_", NULL, 0x2, "Z", NULL, NULL,  },
    { "preserveGeometryCollectionType_", NULL, 0x2, "Z", NULL, NULL,  },
    { "preserveCollections_", NULL, 0x2, "Z", NULL, NULL,  },
    { "preserveType_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomUtilGeometryTransformer = { 2, "GeometryTransformer", "com.vividsolutions.jts.geom.util", NULL, 0x1, 14, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomUtilGeometryTransformer;
}

@end

void ComVividsolutionsJtsGeomUtilGeometryTransformer_init(ComVividsolutionsJtsGeomUtilGeometryTransformer *self) {
  (void) NSObject_init(self);
  self->factory_ = nil;
  self->pruneEmptyGeometry_ = YES;
  self->preserveGeometryCollectionType_ = YES;
  self->preserveCollections_ = NO;
  self->preserveType_ = NO;
}

ComVividsolutionsJtsGeomUtilGeometryTransformer *new_ComVividsolutionsJtsGeomUtilGeometryTransformer_init() {
  ComVividsolutionsJtsGeomUtilGeometryTransformer *self = [ComVividsolutionsJtsGeomUtilGeometryTransformer alloc];
  ComVividsolutionsJtsGeomUtilGeometryTransformer_init(self);
  return self;
}

ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsGeomUtilGeometryTransformer_transformWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomUtilGeometryTransformer *self, ComVividsolutionsJtsGeomGeometry *inputGeom) {
  self->inputGeom_ = inputGeom;
  self->factory_ = [((ComVividsolutionsJtsGeomGeometry *) nil_chk(inputGeom)) getFactory];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomPoint class]]) return [self transformPointWithComVividsolutionsJtsGeomPoint:(ComVividsolutionsJtsGeomPoint *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomPoint class]) withComVividsolutionsJtsGeomGeometry:nil];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomMultiPoint class]]) return [self transformMultiPointWithComVividsolutionsJtsGeomMultiPoint:(ComVividsolutionsJtsGeomMultiPoint *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomMultiPoint class]) withComVividsolutionsJtsGeomGeometry:nil];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomLinearRing class]]) return [self transformLinearRingWithComVividsolutionsJtsGeomLinearRing:(ComVividsolutionsJtsGeomLinearRing *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomLinearRing class]) withComVividsolutionsJtsGeomGeometry:nil];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomLineString class]]) return [self transformLineStringWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomLineString class]) withComVividsolutionsJtsGeomGeometry:nil];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomMultiLineString class]]) return [self transformMultiLineStringWithComVividsolutionsJtsGeomMultiLineString:(ComVividsolutionsJtsGeomMultiLineString *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomMultiLineString class]) withComVividsolutionsJtsGeomGeometry:nil];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomPolygon class]]) return [self transformPolygonWithComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomPolygon class]) withComVividsolutionsJtsGeomGeometry:nil];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomMultiPolygon class]]) return [self transformMultiPolygonWithComVividsolutionsJtsGeomMultiPolygon:(ComVividsolutionsJtsGeomMultiPolygon *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomMultiPolygon class]) withComVividsolutionsJtsGeomGeometry:nil];
  if ([inputGeom isKindOfClass:[ComVividsolutionsJtsGeomGeometryCollection class]]) return [self transformGeometryCollectionWithComVividsolutionsJtsGeomGeometryCollection:(ComVividsolutionsJtsGeomGeometryCollection *) check_class_cast(inputGeom, [ComVividsolutionsJtsGeomGeometryCollection class]) withComVividsolutionsJtsGeomGeometry:nil];
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Unknown Geometry subtype: ", [[inputGeom getClass] getName]));
}

id<ComVividsolutionsJtsGeomCoordinateSequence> ComVividsolutionsJtsGeomUtilGeometryTransformer_copy__WithComVividsolutionsJtsGeomCoordinateSequence_(ComVividsolutionsJtsGeomUtilGeometryTransformer *self, id<ComVividsolutionsJtsGeomCoordinateSequence> seq) {
  return (id<ComVividsolutionsJtsGeomCoordinateSequence>) check_protocol_cast([((id<ComVividsolutionsJtsGeomCoordinateSequence>) nil_chk(seq)) clone], @protocol(ComVividsolutionsJtsGeomCoordinateSequence));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomUtilGeometryTransformer)
