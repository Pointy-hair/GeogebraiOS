//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geom/util/GeometryCombiner.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/GeometryCollection.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/util/GeometryCombiner.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsGeomUtilGeometryCombiner () {
 @public
  ComVividsolutionsJtsGeomGeometryFactory *geomFactory_;
  jboolean skipEmpty_;
  id<JavaUtilCollection> inputGeoms_;
}

+ (id<JavaUtilList>)createListWithId:(id)obj0
                              withId:(id)obj1;

+ (id<JavaUtilList>)createListWithId:(id)obj0
                              withId:(id)obj1
                              withId:(id)obj2;

- (void)extractElementsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                           withJavaUtilList:(id<JavaUtilList>)elems;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomUtilGeometryCombiner, geomFactory_, ComVividsolutionsJtsGeomGeometryFactory *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomUtilGeometryCombiner, inputGeoms_, id<JavaUtilCollection>)

__attribute__((unused)) static id<JavaUtilList> ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_(id obj0, id obj1);

__attribute__((unused)) static id<JavaUtilList> ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_withId_(id obj0, id obj1, id obj2);

__attribute__((unused)) static void ComVividsolutionsJtsGeomUtilGeometryCombiner_extractElementsWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(ComVividsolutionsJtsGeomUtilGeometryCombiner *self, ComVividsolutionsJtsGeomGeometry *geom, id<JavaUtilList> elems);

@implementation ComVividsolutionsJtsGeomUtilGeometryCombiner

+ (ComVividsolutionsJtsGeomGeometry *)combineWithJavaUtilCollection:(id<JavaUtilCollection>)geoms {
  return ComVividsolutionsJtsGeomUtilGeometryCombiner_combineWithJavaUtilCollection_(geoms);
}

+ (ComVividsolutionsJtsGeomGeometry *)combineWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                                             withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1 {
  return ComVividsolutionsJtsGeomUtilGeometryCombiner_combineWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1);
}

+ (ComVividsolutionsJtsGeomGeometry *)combineWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                                             withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1
                                             withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g2 {
  return ComVividsolutionsJtsGeomUtilGeometryCombiner_combineWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1, g2);
}

+ (id<JavaUtilList>)createListWithId:(id)obj0
                              withId:(id)obj1 {
  return ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_(obj0, obj1);
}

+ (id<JavaUtilList>)createListWithId:(id)obj0
                              withId:(id)obj1
                              withId:(id)obj2 {
  return ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_withId_(obj0, obj1, obj2);
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)geoms {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initWithJavaUtilCollection_(self, geoms);
  return self;
}

+ (ComVividsolutionsJtsGeomGeometryFactory *)extractFactoryWithJavaUtilCollection:(id<JavaUtilCollection>)geoms {
  return ComVividsolutionsJtsGeomUtilGeometryCombiner_extractFactoryWithJavaUtilCollection_(geoms);
}

- (ComVividsolutionsJtsGeomGeometry *)combine {
  id<JavaUtilList> elems = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk(inputGeoms_)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomGeometry *g = (ComVividsolutionsJtsGeomGeometry *) check_class_cast([i next], [ComVividsolutionsJtsGeomGeometry class]);
    ComVividsolutionsJtsGeomUtilGeometryCombiner_extractElementsWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(self, g, elems);
  }
  if ([elems size] == 0) {
    if (geomFactory_ != nil) {
      return [geomFactory_ createGeometryCollectionWithComVividsolutionsJtsGeomGeometryArray:nil];
    }
    return nil;
  }
  return [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(geomFactory_)) buildGeometryWithJavaUtilCollection:elems];
}

- (void)extractElementsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                           withJavaUtilList:(id<JavaUtilList>)elems {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_extractElementsWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(self, geom, elems);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "combineWithJavaUtilCollection:", "combine", "Lcom.vividsolutions.jts.geom.Geometry;", 0x9, NULL, NULL },
    { "combineWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "combine", "Lcom.vividsolutions.jts.geom.Geometry;", 0x9, NULL, NULL },
    { "combineWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "combine", "Lcom.vividsolutions.jts.geom.Geometry;", 0x9, NULL, NULL },
    { "createListWithId:withId:", "createList", "Ljava.util.List;", 0xa, NULL, NULL },
    { "createListWithId:withId:withId:", "createList", "Ljava.util.List;", 0xa, NULL, NULL },
    { "initWithJavaUtilCollection:", "GeometryCombiner", NULL, 0x1, NULL, NULL },
    { "extractFactoryWithJavaUtilCollection:", "extractFactory", "Lcom.vividsolutions.jts.geom.GeometryFactory;", 0x9, NULL, NULL },
    { "combine", NULL, "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
    { "extractElementsWithComVividsolutionsJtsGeomGeometry:withJavaUtilList:", "extractElements", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geomFactory_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.GeometryFactory;", NULL, NULL,  },
    { "skipEmpty_", NULL, 0x2, "Z", NULL, NULL,  },
    { "inputGeoms_", NULL, 0x2, "Ljava.util.Collection;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomUtilGeometryCombiner = { 2, "GeometryCombiner", "com.vividsolutions.jts.geom.util", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomUtilGeometryCombiner;
}

@end

ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsGeomUtilGeometryCombiner_combineWithJavaUtilCollection_(id<JavaUtilCollection> geoms) {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initialize();
  ComVividsolutionsJtsGeomUtilGeometryCombiner *combiner = new_ComVividsolutionsJtsGeomUtilGeometryCombiner_initWithJavaUtilCollection_(geoms);
  return [combiner combine];
}

ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsGeomUtilGeometryCombiner_combineWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initialize();
  ComVividsolutionsJtsGeomUtilGeometryCombiner *combiner = new_ComVividsolutionsJtsGeomUtilGeometryCombiner_initWithJavaUtilCollection_(ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_(g0, g1));
  return [combiner combine];
}

ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsGeomUtilGeometryCombiner_combineWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1, ComVividsolutionsJtsGeomGeometry *g2) {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initialize();
  ComVividsolutionsJtsGeomUtilGeometryCombiner *combiner = new_ComVividsolutionsJtsGeomUtilGeometryCombiner_initWithJavaUtilCollection_(ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_withId_(g0, g1, g2));
  return [combiner combine];
}

id<JavaUtilList> ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_(id obj0, id obj1) {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initialize();
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  [list addWithId:obj0];
  [list addWithId:obj1];
  return list;
}

id<JavaUtilList> ComVividsolutionsJtsGeomUtilGeometryCombiner_createListWithId_withId_withId_(id obj0, id obj1, id obj2) {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initialize();
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  [list addWithId:obj0];
  [list addWithId:obj1];
  [list addWithId:obj2];
  return list;
}

void ComVividsolutionsJtsGeomUtilGeometryCombiner_initWithJavaUtilCollection_(ComVividsolutionsJtsGeomUtilGeometryCombiner *self, id<JavaUtilCollection> geoms) {
  (void) NSObject_init(self);
  self->skipEmpty_ = NO;
  self->geomFactory_ = ComVividsolutionsJtsGeomUtilGeometryCombiner_extractFactoryWithJavaUtilCollection_(geoms);
  self->inputGeoms_ = geoms;
}

ComVividsolutionsJtsGeomUtilGeometryCombiner *new_ComVividsolutionsJtsGeomUtilGeometryCombiner_initWithJavaUtilCollection_(id<JavaUtilCollection> geoms) {
  ComVividsolutionsJtsGeomUtilGeometryCombiner *self = [ComVividsolutionsJtsGeomUtilGeometryCombiner alloc];
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initWithJavaUtilCollection_(self, geoms);
  return self;
}

ComVividsolutionsJtsGeomGeometryFactory *ComVividsolutionsJtsGeomUtilGeometryCombiner_extractFactoryWithJavaUtilCollection_(id<JavaUtilCollection> geoms) {
  ComVividsolutionsJtsGeomUtilGeometryCombiner_initialize();
  if ([((id<JavaUtilCollection>) nil_chk(geoms)) isEmpty]) return nil;
  return [((ComVividsolutionsJtsGeomGeometry *) nil_chk(((ComVividsolutionsJtsGeomGeometry *) check_class_cast([((id<JavaUtilIterator>) nil_chk([geoms iterator])) next], [ComVividsolutionsJtsGeomGeometry class])))) getFactory];
}

void ComVividsolutionsJtsGeomUtilGeometryCombiner_extractElementsWithComVividsolutionsJtsGeomGeometry_withJavaUtilList_(ComVividsolutionsJtsGeomUtilGeometryCombiner *self, ComVividsolutionsJtsGeomGeometry *geom, id<JavaUtilList> elems) {
  if (geom == nil) return;
  for (jint i = 0; i < [((ComVividsolutionsJtsGeomGeometry *) nil_chk(geom)) getNumGeometries]; i++) {
    ComVividsolutionsJtsGeomGeometry *elemGeom = [geom getGeometryNWithInt:i];
    if (self->skipEmpty_ && [((ComVividsolutionsJtsGeomGeometry *) nil_chk(elemGeom)) isEmpty]) continue;
    [((id<JavaUtilList>) nil_chk(elems)) addWithId:elemGeom];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomUtilGeometryCombiner)
