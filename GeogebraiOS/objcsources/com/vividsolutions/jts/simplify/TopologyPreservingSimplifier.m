//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/simplify/TopologyPreservingSimplifier.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/CoordinateSequence.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/LinearRing.h"
#include "com/vividsolutions/jts/geom/util/GeometryTransformer.h"
#include "com/vividsolutions/jts/simplify/TaggedLineString.h"
#include "com/vividsolutions/jts/simplify/TaggedLinesSimplifier.h"
#include "com/vividsolutions/jts/simplify/TopologyPreservingSimplifier.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier () {
 @public
  ComVividsolutionsJtsGeomGeometry *inputGeom_;
  ComVividsolutionsJtsSimplifyTaggedLinesSimplifier *lineSimplifier_;
  id<JavaUtilMap> linestringMap_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier, inputGeom_, ComVividsolutionsJtsGeomGeometry *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier, lineSimplifier_, ComVividsolutionsJtsSimplifyTaggedLinesSimplifier *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier, linestringMap_, id<JavaUtilMap>)

@interface ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer () {
 @public
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *this$0_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer, this$0_, ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *)

@interface ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter () {
 @public
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *this$0_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter, this$0_, ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *)

@implementation ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier

+ (ComVividsolutionsJtsGeomGeometry *)simplifyWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom
                                                                        withDouble:(jdouble)distanceTolerance {
  return ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_simplifyWithComVividsolutionsJtsGeomGeometry_withDouble_(geom, distanceTolerance);
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)inputGeom {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_initWithComVividsolutionsJtsGeomGeometry_(self, inputGeom);
  return self;
}

- (void)setDistanceToleranceWithDouble:(jdouble)distanceTolerance {
  if (distanceTolerance < 0.0) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Tolerance must be non-negative") autorelease];
  [((ComVividsolutionsJtsSimplifyTaggedLinesSimplifier *) nil_chk(lineSimplifier_)) setDistanceToleranceWithDouble:distanceTolerance];
}

- (ComVividsolutionsJtsGeomGeometry *)getResultGeometry {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_setAndConsume_linestringMap_(self, new_JavaUtilHashMap_init());
  [((ComVividsolutionsJtsGeomGeometry *) nil_chk(inputGeom_)) applyWithComVividsolutionsJtsGeomGeometryComponentFilter:[new_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(self) autorelease]];
  [((ComVividsolutionsJtsSimplifyTaggedLinesSimplifier *) nil_chk(lineSimplifier_)) simplifyWithJavaUtilCollection:[linestringMap_ values]];
  ComVividsolutionsJtsGeomGeometry *result = [([new_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(self) autorelease]) transformWithComVividsolutionsJtsGeomGeometry:inputGeom_];
  return result;
}

- (void)dealloc {
  RELEASE_(inputGeom_);
  RELEASE_(lineSimplifier_);
  RELEASE_(linestringMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "simplifyWithComVividsolutionsJtsGeomGeometry:withDouble:", "simplify", "Lcom.vividsolutions.jts.geom.Geometry;", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:", "TopologyPreservingSimplifier", NULL, 0x1, NULL, NULL },
    { "setDistanceToleranceWithDouble:", "setDistanceTolerance", "V", 0x1, NULL, NULL },
    { "getResultGeometry", NULL, "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputGeom_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
    { "lineSimplifier_", NULL, 0x2, "Lcom.vividsolutions.jts.simplify.TaggedLinesSimplifier;", NULL, NULL,  },
    { "linestringMap_", NULL, 0x2, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.vividsolutions.jts.simplify.TopologyPreservingSimplifier$LineStringTransformer;", "Lcom.vividsolutions.jts.simplify.TopologyPreservingSimplifier$LineStringMapBuilderFilter;"};
  static const J2ObjcClassInfo _ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier = { 2, "TopologyPreservingSimplifier", "com.vividsolutions.jts.simplify", NULL, 0x1, 4, methods, 3, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier;
}

@end

ComVividsolutionsJtsGeomGeometry *ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_simplifyWithComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsGeomGeometry *geom, jdouble distanceTolerance) {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_initialize();
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *tss = [new_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_initWithComVividsolutionsJtsGeomGeometry_(geom) autorelease];
  [tss setDistanceToleranceWithDouble:distanceTolerance];
  return [tss getResultGeometry];
}

void ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *self, ComVividsolutionsJtsGeomGeometry *inputGeom) {
  NSObject_init(self);
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_setAndConsume_lineSimplifier_(self, new_ComVividsolutionsJtsSimplifyTaggedLinesSimplifier_init());
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_set_inputGeom_(self, inputGeom);
}

ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *new_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *inputGeom) {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *self = [ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier alloc];
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_initWithComVividsolutionsJtsGeomGeometry_(self, inputGeom);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier)

@implementation ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer

- (id<ComVividsolutionsJtsGeomCoordinateSequence>)transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:(id<ComVividsolutionsJtsGeomCoordinateSequence>)coords
                                                                                withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)parent {
  if ([parent isKindOfClass:[ComVividsolutionsJtsGeomLineString class]]) {
    ComVividsolutionsJtsSimplifyTaggedLineString *taggedLine = (ComVividsolutionsJtsSimplifyTaggedLineString *) check_class_cast([((id<JavaUtilMap>) nil_chk(this$0_->linestringMap_)) getWithId:parent], [ComVividsolutionsJtsSimplifyTaggedLineString class]);
    return [self createCoordinateSequenceWithComVividsolutionsJtsGeomCoordinateArray:[((ComVividsolutionsJtsSimplifyTaggedLineString *) nil_chk(taggedLine)) getResultCoordinates]];
  }
  return [super transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:coords withComVividsolutionsJtsGeomGeometry:parent];
}

- (instancetype)initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier:(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *)outer$ {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "transformCoordinatesWithComVividsolutionsJtsGeomCoordinateSequence:withComVividsolutionsJtsGeomGeometry:", "transformCoordinates", "Lcom.vividsolutions.jts.geom.CoordinateSequence;", 0x4, NULL, NULL },
    { "initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.vividsolutions.jts.simplify.TopologyPreservingSimplifier;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer = { 2, "LineStringTransformer", "com.vividsolutions.jts.simplify", "TopologyPreservingSimplifier", 0x0, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer;
}

@end

void ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer *self, ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *outer$) {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer_set_this$0_(self, outer$);
  ComVividsolutionsJtsGeomUtilGeometryTransformer_init(self);
}

ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer *new_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *outer$) {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer *self = [ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer alloc];
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringTransformer)

@implementation ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter

- (void)filterWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)geom {
  if ([geom isKindOfClass:[ComVividsolutionsJtsGeomLinearRing class]]) {
    ComVividsolutionsJtsSimplifyTaggedLineString *taggedLine = [new_ComVividsolutionsJtsSimplifyTaggedLineString_initWithComVividsolutionsJtsGeomLineString_withInt_((ComVividsolutionsJtsGeomLineString *) check_class_cast(geom, [ComVividsolutionsJtsGeomLineString class]), 4) autorelease];
    [((id<JavaUtilMap>) nil_chk(this$0_->linestringMap_)) putWithId:geom withId:taggedLine];
  }
  else if ([geom isKindOfClass:[ComVividsolutionsJtsGeomLineString class]]) {
    ComVividsolutionsJtsSimplifyTaggedLineString *taggedLine = [new_ComVividsolutionsJtsSimplifyTaggedLineString_initWithComVividsolutionsJtsGeomLineString_withInt_((ComVividsolutionsJtsGeomLineString *) check_class_cast(geom, [ComVividsolutionsJtsGeomLineString class]), 2) autorelease];
    [((id<JavaUtilMap>) nil_chk(this$0_->linestringMap_)) putWithId:geom withId:taggedLine];
  }
}

- (instancetype)initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier:(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *)outer$ {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "filterWithComVividsolutionsJtsGeomGeometry:", "filter", "V", 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.vividsolutions.jts.simplify.TopologyPreservingSimplifier;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter = { 2, "LineStringMapBuilderFilter", "com.vividsolutions.jts.simplify", "TopologyPreservingSimplifier", 0x0, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter;
}

@end

void ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter *self, ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *outer$) {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter_set_this$0_(self, outer$);
  NSObject_init(self);
}

ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter *new_ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier *outer$) {
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter *self = [ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter alloc];
  ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter_initWithComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsSimplifyTopologyPreservingSimplifier_LineStringMapBuilderFilter)
