//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/geomgraph/Depth.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Location.h"
#include "com/vividsolutions/jts/geomgraph/Depth.h"
#include "com/vividsolutions/jts/geomgraph/Label.h"
#include "com/vividsolutions/jts/geomgraph/Position.h"

#define ComVividsolutionsJtsGeomgraphDepth_NULL_VALUE -1

@interface ComVividsolutionsJtsGeomgraphDepth () {
 @public
  IOSObjectArray *depth_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphDepth, depth_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsGeomgraphDepth, NULL_VALUE, jint)

@implementation ComVividsolutionsJtsGeomgraphDepth

+ (jint)depthAtLocationWithInt:(jint)location {
  return ComVividsolutionsJtsGeomgraphDepth_depthAtLocationWithInt_(location);
}

- (instancetype)init {
  ComVividsolutionsJtsGeomgraphDepth_init(self);
  return self;
}

- (jint)getDepthWithInt:(jint)geomIndex
                withInt:(jint)posIndex {
  return IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), geomIndex)), posIndex);
}

- (void)setDepthWithInt:(jint)geomIndex
                withInt:(jint)posIndex
                withInt:(jint)depthValue {
  *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(depth_), geomIndex)), posIndex) = depthValue;
}

- (jint)getLocationWithInt:(jint)geomIndex
                   withInt:(jint)posIndex {
  if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), geomIndex)), posIndex) <= 0) return ComVividsolutionsJtsGeomLocation_EXTERIOR;
  return ComVividsolutionsJtsGeomLocation_INTERIOR;
}

- (void)addWithInt:(jint)geomIndex
           withInt:(jint)posIndex
           withInt:(jint)location {
  if (location == ComVividsolutionsJtsGeomLocation_INTERIOR) (*IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(depth_), geomIndex)), posIndex))++;
}

- (jboolean)isNull {
  for (jint i = 0; i < 2; i++) {
    for (jint j = 0; j < 3; j++) {
      if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), i)), j) != ComVividsolutionsJtsGeomgraphDepth_NULL_VALUE) return NO;
    }
  }
  return YES;
}

- (jboolean)isNullWithInt:(jint)geomIndex {
  return IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), geomIndex)), 1) == ComVividsolutionsJtsGeomgraphDepth_NULL_VALUE;
}

- (jboolean)isNullWithInt:(jint)geomIndex
                  withInt:(jint)posIndex {
  return IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), geomIndex)), posIndex) == ComVividsolutionsJtsGeomgraphDepth_NULL_VALUE;
}

- (void)addWithComVividsolutionsJtsGeomgraphLabel:(ComVividsolutionsJtsGeomgraphLabel *)lbl {
  for (jint i = 0; i < 2; i++) {
    for (jint j = 1; j < 3; j++) {
      jint loc = [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(lbl)) getLocationWithInt:i withInt:j];
      if (loc == ComVividsolutionsJtsGeomLocation_EXTERIOR || loc == ComVividsolutionsJtsGeomLocation_INTERIOR) {
        if ([self isNullWithInt:i withInt:j]) {
          *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(depth_), i)), j) = ComVividsolutionsJtsGeomgraphDepth_depthAtLocationWithInt_(loc);
        }
        else *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(depth_), i)), j) += ComVividsolutionsJtsGeomgraphDepth_depthAtLocationWithInt_(loc);
      }
    }
  }
}

- (jint)getDeltaWithInt:(jint)geomIndex {
  return IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), geomIndex)), ComVividsolutionsJtsGeomgraphPosition_RIGHT) - IOSIntArray_Get(nil_chk(IOSObjectArray_Get(depth_, geomIndex)), ComVividsolutionsJtsGeomgraphPosition_LEFT);
}

- (void)normalize {
  for (jint i = 0; i < 2; i++) {
    if (![self isNullWithInt:i]) {
      jint minDepth = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), i)), 1);
      if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(depth_, i)), 2) < minDepth) minDepth = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(depth_, i)), 2);
      if (minDepth < 0) minDepth = 0;
      for (jint j = 1; j < 3; j++) {
        jint newValue = 0;
        if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(depth_, i)), j) > minDepth) newValue = 1;
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(depth_, i)), j) = newValue;
      }
    }
  }
}

- (NSString *)description {
  return JreStrcat("$ICI$ICI", @"A: ", IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(depth_), 0)), 1), ',', IOSIntArray_Get(nil_chk(IOSObjectArray_Get(depth_, 0)), 2), @" B: ", IOSIntArray_Get(nil_chk(IOSObjectArray_Get(depth_, 1)), 1), ',', IOSIntArray_Get(nil_chk(IOSObjectArray_Get(depth_, 1)), 2));
}

- (void)dealloc {
  RELEASE_(depth_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "depthAtLocationWithInt:", "depthAtLocation", "I", 0x9, NULL, NULL },
    { "init", "Depth", NULL, 0x1, NULL, NULL },
    { "getDepthWithInt:withInt:", "getDepth", "I", 0x1, NULL, NULL },
    { "setDepthWithInt:withInt:withInt:", "setDepth", "V", 0x1, NULL, NULL },
    { "getLocationWithInt:withInt:", "getLocation", "I", 0x1, NULL, NULL },
    { "addWithInt:withInt:withInt:", "add", "V", 0x1, NULL, NULL },
    { "isNull", NULL, "Z", 0x1, NULL, NULL },
    { "isNullWithInt:", "isNull", "Z", 0x1, NULL, NULL },
    { "isNullWithInt:withInt:", "isNull", "Z", 0x1, NULL, NULL },
    { "addWithComVividsolutionsJtsGeomgraphLabel:", "add", "V", 0x1, NULL, NULL },
    { "getDeltaWithInt:", "getDelta", "I", 0x1, NULL, NULL },
    { "normalize", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NULL_VALUE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsGeomgraphDepth_NULL_VALUE },
    { "depth_", NULL, 0x2, "[[I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphDepth = { 2, "Depth", "com.vividsolutions.jts.geomgraph", NULL, 0x1, 13, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphDepth;
}

@end

jint ComVividsolutionsJtsGeomgraphDepth_depthAtLocationWithInt_(jint location) {
  ComVividsolutionsJtsGeomgraphDepth_initialize();
  if (location == ComVividsolutionsJtsGeomLocation_EXTERIOR) return 0;
  if (location == ComVividsolutionsJtsGeomLocation_INTERIOR) return 1;
  return ComVividsolutionsJtsGeomgraphDepth_NULL_VALUE;
}

void ComVividsolutionsJtsGeomgraphDepth_init(ComVividsolutionsJtsGeomgraphDepth *self) {
  NSObject_init(self);
  ComVividsolutionsJtsGeomgraphDepth_setAndConsume_depth_(self, [IOSIntArray newArrayWithDimensions:2 lengths:(jint[]){ 2, 3 }]);
  for (jint i = 0; i < 2; i++) {
    for (jint j = 0; j < 3; j++) {
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->depth_, i)), j) = ComVividsolutionsJtsGeomgraphDepth_NULL_VALUE;
    }
  }
}

ComVividsolutionsJtsGeomgraphDepth *new_ComVividsolutionsJtsGeomgraphDepth_init() {
  ComVividsolutionsJtsGeomgraphDepth *self = [ComVividsolutionsJtsGeomgraphDepth alloc];
  ComVividsolutionsJtsGeomgraphDepth_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphDepth)
