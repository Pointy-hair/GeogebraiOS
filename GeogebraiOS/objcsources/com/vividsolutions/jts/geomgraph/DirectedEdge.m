//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geomgraph/DirectedEdge.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Location.h"
#include "com/vividsolutions/jts/geom/TopologyException.h"
#include "com/vividsolutions/jts/geomgraph/DirectedEdge.h"
#include "com/vividsolutions/jts/geomgraph/Edge.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEnd.h"
#include "com/vividsolutions/jts/geomgraph/EdgeRing.h"
#include "com/vividsolutions/jts/geomgraph/Label.h"
#include "com/vividsolutions/jts/geomgraph/Position.h"
#include "java/io/PrintStream.h"

@interface ComVividsolutionsJtsGeomgraphDirectedEdge () {
 @public
  jboolean isInResult__;
  jboolean isVisited__;
  ComVividsolutionsJtsGeomgraphDirectedEdge *sym_;
  ComVividsolutionsJtsGeomgraphDirectedEdge *next_;
  ComVividsolutionsJtsGeomgraphDirectedEdge *nextMin_;
  ComVividsolutionsJtsGeomgraphEdgeRing *edgeRing_;
  ComVividsolutionsJtsGeomgraphEdgeRing *minEdgeRing_;
  IOSIntArray *depth_;
}

- (void)computeDirectedLabel;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphDirectedEdge, sym_, ComVividsolutionsJtsGeomgraphDirectedEdge *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphDirectedEdge, next_, ComVividsolutionsJtsGeomgraphDirectedEdge *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphDirectedEdge, nextMin_, ComVividsolutionsJtsGeomgraphDirectedEdge *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphDirectedEdge, edgeRing_, ComVividsolutionsJtsGeomgraphEdgeRing *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphDirectedEdge, minEdgeRing_, ComVividsolutionsJtsGeomgraphEdgeRing *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphDirectedEdge, depth_, IOSIntArray *)

__attribute__((unused)) static void ComVividsolutionsJtsGeomgraphDirectedEdge_computeDirectedLabel(ComVividsolutionsJtsGeomgraphDirectedEdge *self);

@implementation ComVividsolutionsJtsGeomgraphDirectedEdge

+ (jint)depthFactorWithInt:(jint)currLocation
                   withInt:(jint)nextLocation {
  return ComVividsolutionsJtsGeomgraphDirectedEdge_depthFactorWithInt_withInt_(currLocation, nextLocation);
}

- (instancetype)initWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *)edge
                                              withBoolean:(jboolean)isForward {
  ComVividsolutionsJtsGeomgraphDirectedEdge_initWithComVividsolutionsJtsGeomgraphEdge_withBoolean_(self, edge, isForward);
  return self;
}

- (ComVividsolutionsJtsGeomgraphEdge *)getEdge {
  return edge_;
}

- (void)setInResultWithBoolean:(jboolean)isInResult {
  self->isInResult__ = isInResult;
}

- (jboolean)isInResult {
  return isInResult__;
}

- (jboolean)isVisited {
  return isVisited__;
}

- (void)setVisitedWithBoolean:(jboolean)isVisited {
  self->isVisited__ = isVisited;
}

- (void)setEdgeRingWithComVividsolutionsJtsGeomgraphEdgeRing:(ComVividsolutionsJtsGeomgraphEdgeRing *)edgeRing {
  self->edgeRing_ = edgeRing;
}

- (ComVividsolutionsJtsGeomgraphEdgeRing *)getEdgeRing {
  return edgeRing_;
}

- (void)setMinEdgeRingWithComVividsolutionsJtsGeomgraphEdgeRing:(ComVividsolutionsJtsGeomgraphEdgeRing *)minEdgeRing {
  self->minEdgeRing_ = minEdgeRing;
}

- (ComVividsolutionsJtsGeomgraphEdgeRing *)getMinEdgeRing {
  return minEdgeRing_;
}

- (jint)getDepthWithInt:(jint)position {
  return IOSIntArray_Get(nil_chk(depth_), position);
}

- (void)setDepthWithInt:(jint)position
                withInt:(jint)depthVal {
  if (IOSIntArray_Get(nil_chk(depth_), position) != -999) {
    if (IOSIntArray_Get(depth_, position) != depthVal) @throw new_ComVividsolutionsJtsGeomTopologyException_initWithNSString_withComVividsolutionsJtsGeomCoordinate_(@"assigned depths do not match", [self getCoordinate]);
  }
  *IOSIntArray_GetRef(depth_, position) = depthVal;
}

- (jint)getDepthDelta {
  jint depthDelta = [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(edge_)) getDepthDelta];
  if (!isForward__) depthDelta = -depthDelta;
  return depthDelta;
}

- (void)setVisitedEdgeWithBoolean:(jboolean)isVisited {
  [self setVisitedWithBoolean:isVisited];
  [((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(sym_)) setVisitedWithBoolean:isVisited];
}

- (ComVividsolutionsJtsGeomgraphDirectedEdge *)getSym {
  return sym_;
}

- (jboolean)isForward {
  return isForward__;
}

- (void)setSymWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de {
  sym_ = de;
}

- (ComVividsolutionsJtsGeomgraphDirectedEdge *)getNext {
  return next_;
}

- (void)setNextWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)next {
  self->next_ = next;
}

- (ComVividsolutionsJtsGeomgraphDirectedEdge *)getNextMin {
  return nextMin_;
}

- (void)setNextMinWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)nextMin {
  self->nextMin_ = nextMin;
}

- (jboolean)isLineEdge {
  jboolean isLine = [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label_)) isLineWithInt:0] || [label_ isLineWithInt:1];
  jboolean isExteriorIfArea0 = ![label_ isAreaWithInt:0] || [label_ allPositionsEqualWithInt:0 withInt:ComVividsolutionsJtsGeomLocation_EXTERIOR];
  jboolean isExteriorIfArea1 = ![label_ isAreaWithInt:1] || [label_ allPositionsEqualWithInt:1 withInt:ComVividsolutionsJtsGeomLocation_EXTERIOR];
  return isLine && isExteriorIfArea0 && isExteriorIfArea1;
}

- (jboolean)isInteriorAreaEdge {
  jboolean isInteriorAreaEdge = YES;
  for (jint i = 0; i < 2; i++) {
    if (!([((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label_)) isAreaWithInt:i] && [label_ getLocationWithInt:i withInt:ComVividsolutionsJtsGeomgraphPosition_LEFT] == ComVividsolutionsJtsGeomLocation_INTERIOR && [label_ getLocationWithInt:i withInt:ComVividsolutionsJtsGeomgraphPosition_RIGHT] == ComVividsolutionsJtsGeomLocation_INTERIOR)) {
      isInteriorAreaEdge = NO;
    }
  }
  return isInteriorAreaEdge;
}

- (void)computeDirectedLabel {
  ComVividsolutionsJtsGeomgraphDirectedEdge_computeDirectedLabel(self);
}

- (void)setEdgeDepthsWithInt:(jint)position
                     withInt:(jint)depth {
  jint depthDelta = [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk([self getEdge])) getDepthDelta];
  if (!isForward__) depthDelta = -depthDelta;
  jint directionFactor = 1;
  if (position == ComVividsolutionsJtsGeomgraphPosition_LEFT) directionFactor = -1;
  jint oppositePos = ComVividsolutionsJtsGeomgraphPosition_oppositeWithInt_(position);
  jint delta = depthDelta * directionFactor;
  jint oppositeDepth = depth + delta;
  [self setDepthWithInt:position withInt:depth];
  [self setDepthWithInt:oppositePos withInt:oppositeDepth];
}

- (void)printWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  [super printWithJavaIoPrintStream:outArg];
  [((JavaIoPrintStream *) nil_chk(outArg)) printWithNSString:JreStrcat("CICI", ' ', IOSIntArray_Get(nil_chk(depth_), ComVividsolutionsJtsGeomgraphPosition_LEFT), '/', IOSIntArray_Get(depth_, ComVividsolutionsJtsGeomgraphPosition_RIGHT))];
  [outArg printWithNSString:JreStrcat("$IC", @" (", [self getDepthDelta], ')')];
  if (isInResult__) [outArg printWithNSString:@" inResult"];
}

- (void)printEdgeWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  [self printWithJavaIoPrintStream:outArg];
  [((JavaIoPrintStream *) nil_chk(outArg)) printWithNSString:@" "];
  if (isForward__) [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(edge_)) printWithJavaIoPrintStream:outArg];
  else [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(edge_)) printReverseWithJavaIoPrintStream:outArg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "depthFactorWithInt:withInt:", "depthFactor", "I", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomgraphEdge:withBoolean:", "DirectedEdge", NULL, 0x1, NULL, NULL },
    { "getEdge", NULL, "Lcom.vividsolutions.jts.geomgraph.Edge;", 0x1, NULL, NULL },
    { "setInResultWithBoolean:", "setInResult", "V", 0x1, NULL, NULL },
    { "isInResult", NULL, "Z", 0x1, NULL, NULL },
    { "isVisited", NULL, "Z", 0x1, NULL, NULL },
    { "setVisitedWithBoolean:", "setVisited", "V", 0x1, NULL, NULL },
    { "setEdgeRingWithComVividsolutionsJtsGeomgraphEdgeRing:", "setEdgeRing", "V", 0x1, NULL, NULL },
    { "getEdgeRing", NULL, "Lcom.vividsolutions.jts.geomgraph.EdgeRing;", 0x1, NULL, NULL },
    { "setMinEdgeRingWithComVividsolutionsJtsGeomgraphEdgeRing:", "setMinEdgeRing", "V", 0x1, NULL, NULL },
    { "getMinEdgeRing", NULL, "Lcom.vividsolutions.jts.geomgraph.EdgeRing;", 0x1, NULL, NULL },
    { "getDepthWithInt:", "getDepth", "I", 0x1, NULL, NULL },
    { "setDepthWithInt:withInt:", "setDepth", "V", 0x1, NULL, NULL },
    { "getDepthDelta", NULL, "I", 0x1, NULL, NULL },
    { "setVisitedEdgeWithBoolean:", "setVisitedEdge", "V", 0x1, NULL, NULL },
    { "getSym", NULL, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", 0x1, NULL, NULL },
    { "isForward", NULL, "Z", 0x1, NULL, NULL },
    { "setSymWithComVividsolutionsJtsGeomgraphDirectedEdge:", "setSym", "V", 0x1, NULL, NULL },
    { "getNext", NULL, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", 0x1, NULL, NULL },
    { "setNextWithComVividsolutionsJtsGeomgraphDirectedEdge:", "setNext", "V", 0x1, NULL, NULL },
    { "getNextMin", NULL, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", 0x1, NULL, NULL },
    { "setNextMinWithComVividsolutionsJtsGeomgraphDirectedEdge:", "setNextMin", "V", 0x1, NULL, NULL },
    { "isLineEdge", NULL, "Z", 0x1, NULL, NULL },
    { "isInteriorAreaEdge", NULL, "Z", 0x1, NULL, NULL },
    { "computeDirectedLabel", NULL, "V", 0x2, NULL, NULL },
    { "setEdgeDepthsWithInt:withInt:", "setEdgeDepths", "V", 0x1, NULL, NULL },
    { "printWithJavaIoPrintStream:", "print", "V", 0x1, NULL, NULL },
    { "printEdgeWithJavaIoPrintStream:", "printEdge", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "isForward__", "isForward", 0x4, "Z", NULL, NULL,  },
    { "isInResult__", "isInResult", 0x2, "Z", NULL, NULL,  },
    { "isVisited__", "isVisited", 0x2, "Z", NULL, NULL,  },
    { "sym_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", NULL, NULL,  },
    { "next_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", NULL, NULL,  },
    { "nextMin_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", NULL, NULL,  },
    { "edgeRing_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.EdgeRing;", NULL, NULL,  },
    { "minEdgeRing_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.EdgeRing;", NULL, NULL,  },
    { "depth_", NULL, 0x2, "[I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphDirectedEdge = { 2, "DirectedEdge", "com.vividsolutions.jts.geomgraph", NULL, 0x1, 28, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphDirectedEdge;
}

@end

jint ComVividsolutionsJtsGeomgraphDirectedEdge_depthFactorWithInt_withInt_(jint currLocation, jint nextLocation) {
  ComVividsolutionsJtsGeomgraphDirectedEdge_initialize();
  if (currLocation == ComVividsolutionsJtsGeomLocation_EXTERIOR && nextLocation == ComVividsolutionsJtsGeomLocation_INTERIOR) return 1;
  else if (currLocation == ComVividsolutionsJtsGeomLocation_INTERIOR && nextLocation == ComVividsolutionsJtsGeomLocation_EXTERIOR) return -1;
  return 0;
}

void ComVividsolutionsJtsGeomgraphDirectedEdge_initWithComVividsolutionsJtsGeomgraphEdge_withBoolean_(ComVividsolutionsJtsGeomgraphDirectedEdge *self, ComVividsolutionsJtsGeomgraphEdge *edge, jboolean isForward) {
  (void) ComVividsolutionsJtsGeomgraphEdgeEnd_initWithComVividsolutionsJtsGeomgraphEdge_(self, edge);
  self->isInResult__ = NO;
  self->isVisited__ = NO;
  self->depth_ = [IOSIntArray newArrayWithInts:(jint[]){ 0, -999, -999 } count:3];
  self->isForward__ = isForward;
  if (isForward) {
    [self init__WithComVividsolutionsJtsGeomCoordinate:[((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(edge)) getCoordinateWithInt:0] withComVividsolutionsJtsGeomCoordinate:[edge getCoordinateWithInt:1]];
  }
  else {
    jint n = [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(edge)) getNumPoints] - 1;
    [self init__WithComVividsolutionsJtsGeomCoordinate:[edge getCoordinateWithInt:n] withComVividsolutionsJtsGeomCoordinate:[edge getCoordinateWithInt:n - 1]];
  }
  ComVividsolutionsJtsGeomgraphDirectedEdge_computeDirectedLabel(self);
}

ComVividsolutionsJtsGeomgraphDirectedEdge *new_ComVividsolutionsJtsGeomgraphDirectedEdge_initWithComVividsolutionsJtsGeomgraphEdge_withBoolean_(ComVividsolutionsJtsGeomgraphEdge *edge, jboolean isForward) {
  ComVividsolutionsJtsGeomgraphDirectedEdge *self = [ComVividsolutionsJtsGeomgraphDirectedEdge alloc];
  ComVividsolutionsJtsGeomgraphDirectedEdge_initWithComVividsolutionsJtsGeomgraphEdge_withBoolean_(self, edge, isForward);
  return self;
}

void ComVividsolutionsJtsGeomgraphDirectedEdge_computeDirectedLabel(ComVividsolutionsJtsGeomgraphDirectedEdge *self) {
  self->label_ = new_ComVividsolutionsJtsGeomgraphLabel_initWithComVividsolutionsJtsGeomgraphLabel_([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(self->edge_)) getLabel]);
  if (!self->isForward__) [self->label_ flip];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphDirectedEdge)
