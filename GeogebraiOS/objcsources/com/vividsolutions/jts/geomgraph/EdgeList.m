//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geomgraph/EdgeList.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geomgraph/Edge.h"
#include "com/vividsolutions/jts/geomgraph/EdgeList.h"
#include "com/vividsolutions/jts/noding/OrientedCoordinateArray.h"
#include "java/io/PrintStream.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/TreeMap.h"

@interface ComVividsolutionsJtsGeomgraphEdgeList () {
 @public
  id<JavaUtilList> edges_;
  id<JavaUtilMap> ocaMap_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphEdgeList, edges_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphEdgeList, ocaMap_, id<JavaUtilMap>)

@implementation ComVividsolutionsJtsGeomgraphEdgeList

- (instancetype)init {
  ComVividsolutionsJtsGeomgraphEdgeList_init(self);
  return self;
}

- (void)addWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *)e {
  [((id<JavaUtilList>) nil_chk(edges_)) addWithId:e];
  ComVividsolutionsJtsNodingOrientedCoordinateArray *oca = new_ComVividsolutionsJtsNodingOrientedCoordinateArray_initWithComVividsolutionsJtsGeomCoordinateArray_([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getCoordinates]);
  (void) [((id<JavaUtilMap>) nil_chk(ocaMap_)) putWithId:oca withId:e];
}

- (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)edgeColl {
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk(edgeColl)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    [self addWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([i next], [ComVividsolutionsJtsGeomgraphEdge class])];
  }
}

- (id<JavaUtilList>)getEdges {
  return edges_;
}

- (ComVividsolutionsJtsGeomgraphEdge *)findEqualEdgeWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *)e {
  ComVividsolutionsJtsNodingOrientedCoordinateArray *oca = new_ComVividsolutionsJtsNodingOrientedCoordinateArray_initWithComVividsolutionsJtsGeomCoordinateArray_([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getCoordinates]);
  ComVividsolutionsJtsGeomgraphEdge *matchEdge = (ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([((id<JavaUtilMap>) nil_chk(ocaMap_)) getWithId:oca], [ComVividsolutionsJtsGeomgraphEdge class]);
  return matchEdge;
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(edges_)) iterator];
}

- (ComVividsolutionsJtsGeomgraphEdge *)getWithInt:(jint)i {
  return (ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([((id<JavaUtilList>) nil_chk(edges_)) getWithInt:i], [ComVividsolutionsJtsGeomgraphEdge class]);
}

- (jint)findEdgeIndexWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *)e {
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(edges_)) size]; i++) {
    if ([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(((ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([edges_ getWithInt:i], [ComVividsolutionsJtsGeomgraphEdge class])))) isEqual:e]) return i;
  }
  return -1;
}

- (void)printWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  [((JavaIoPrintStream *) nil_chk(outArg)) printWithNSString:@"MULTILINESTRING ( "];
  for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(edges_)) size]; j++) {
    ComVividsolutionsJtsGeomgraphEdge *e = (ComVividsolutionsJtsGeomgraphEdge *) check_class_cast([edges_ getWithInt:j], [ComVividsolutionsJtsGeomgraphEdge class]);
    if (j > 0) [outArg printWithNSString:@","];
    [outArg printWithNSString:@"("];
    IOSObjectArray *pts = [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getCoordinates];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(pts))->size_; i++) {
      if (i > 0) [outArg printWithNSString:@","];
      [outArg printWithNSString:JreStrcat("DCD", ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts, i)))->x_, ' ', ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts, i)))->y_)];
    }
    [outArg printlnWithNSString:@")"];
  }
  [outArg printWithNSString:@")  "];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "EdgeList", NULL, 0x1, NULL, NULL },
    { "addWithComVividsolutionsJtsGeomgraphEdge:", "add", "V", 0x1, NULL, NULL },
    { "addAllWithJavaUtilCollection:", "addAll", "V", 0x1, NULL, NULL },
    { "getEdges", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "findEqualEdgeWithComVividsolutionsJtsGeomgraphEdge:", "findEqualEdge", "Lcom.vividsolutions.jts.geomgraph.Edge;", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lcom.vividsolutions.jts.geomgraph.Edge;", 0x1, NULL, NULL },
    { "findEdgeIndexWithComVividsolutionsJtsGeomgraphEdge:", "findEdgeIndex", "I", 0x1, NULL, NULL },
    { "printWithJavaIoPrintStream:", "print", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "edges_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
    { "ocaMap_", NULL, 0x2, "Ljava.util.Map;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphEdgeList = { 2, "EdgeList", "com.vividsolutions.jts.geomgraph", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphEdgeList;
}

@end

void ComVividsolutionsJtsGeomgraphEdgeList_init(ComVividsolutionsJtsGeomgraphEdgeList *self) {
  (void) NSObject_init(self);
  self->edges_ = new_JavaUtilArrayList_init();
  self->ocaMap_ = new_JavaUtilTreeMap_init();
}

ComVividsolutionsJtsGeomgraphEdgeList *new_ComVividsolutionsJtsGeomgraphEdgeList_init() {
  ComVividsolutionsJtsGeomgraphEdgeList *self = [ComVividsolutionsJtsGeomgraphEdgeList alloc];
  ComVividsolutionsJtsGeomgraphEdgeList_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphEdgeList)
