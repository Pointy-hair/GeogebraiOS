//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/geomgraph/Node.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/IntersectionMatrix.h"
#include "com/vividsolutions/jts/geom/Location.h"
#include "com/vividsolutions/jts/geomgraph/DirectedEdge.h"
#include "com/vividsolutions/jts/geomgraph/Edge.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEnd.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEndStar.h"
#include "com/vividsolutions/jts/geomgraph/GraphComponent.h"
#include "com/vividsolutions/jts/geomgraph/Label.h"
#include "com/vividsolutions/jts/geomgraph/Node.h"
#include "java/io/PrintStream.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@implementation ComVividsolutionsJtsGeomgraphNode

- (instancetype)initWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coord
              withComVividsolutionsJtsGeomgraphEdgeEndStar:(ComVividsolutionsJtsGeomgraphEdgeEndStar *)edges {
  ComVividsolutionsJtsGeomgraphNode_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomgraphEdgeEndStar_(self, coord, edges);
  return self;
}

- (ComVividsolutionsJtsGeomCoordinate *)getCoordinate {
  return coord_;
}

- (ComVividsolutionsJtsGeomgraphEdgeEndStar *)getEdges {
  return edges_;
}

- (jboolean)isIncidentEdgeInResult {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk([((ComVividsolutionsJtsGeomgraphEdgeEndStar *) nil_chk([self getEdges])) getEdges])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphDirectedEdge *de = (ComVividsolutionsJtsGeomgraphDirectedEdge *) check_class_cast([it next], [ComVividsolutionsJtsGeomgraphDirectedEdge class]);
    if ([((ComVividsolutionsJtsGeomgraphEdge *) nil_chk([((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) getEdge])) isInResult]) return YES;
  }
  return NO;
}

- (jboolean)isIsolated {
  return [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label_)) getGeometryCount] == 1;
}

- (void)computeIMWithComVividsolutionsJtsGeomIntersectionMatrix:(ComVividsolutionsJtsGeomIntersectionMatrix *)im {
}

- (void)addWithComVividsolutionsJtsGeomgraphEdgeEnd:(ComVividsolutionsJtsGeomgraphEdgeEnd *)e {
  [((ComVividsolutionsJtsGeomgraphEdgeEndStar *) nil_chk(edges_)) insertWithComVividsolutionsJtsGeomgraphEdgeEnd:e];
  [((ComVividsolutionsJtsGeomgraphEdgeEnd *) nil_chk(e)) setNodeWithComVividsolutionsJtsGeomgraphNode:self];
}

- (void)mergeLabelWithComVividsolutionsJtsGeomgraphNode:(ComVividsolutionsJtsGeomgraphNode *)n {
  [self mergeLabelWithComVividsolutionsJtsGeomgraphLabel:((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n))->label_];
}

- (void)mergeLabelWithComVividsolutionsJtsGeomgraphLabel:(ComVividsolutionsJtsGeomgraphLabel *)label2 {
  for (jint i = 0; i < 2; i++) {
    jint loc = [self computeMergedLocationWithComVividsolutionsJtsGeomgraphLabel:label2 withInt:i];
    jint thisLoc = [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label_)) getLocationWithInt:i];
    if (thisLoc == ComVividsolutionsJtsGeomLocation_NONE) [label_ setLocationWithInt:i withInt:loc];
  }
}

- (void)setLabelWithInt:(jint)argIndex
                withInt:(jint)onLocation {
  if (label_ == nil) {
    ComVividsolutionsJtsGeomgraphGraphComponent_setAndConsume_label_(self, new_ComVividsolutionsJtsGeomgraphLabel_initWithInt_withInt_(argIndex, onLocation));
  }
  else [label_ setLocationWithInt:argIndex withInt:onLocation];
}

- (void)setLabelBoundaryWithInt:(jint)argIndex {
  jint loc = ComVividsolutionsJtsGeomLocation_NONE;
  if (label_ != nil) loc = [label_ getLocationWithInt:argIndex];
  jint newLoc;
  switch (loc) {
    case ComVividsolutionsJtsGeomLocation_BOUNDARY:
    newLoc = ComVividsolutionsJtsGeomLocation_INTERIOR;
    break;
    case ComVividsolutionsJtsGeomLocation_INTERIOR:
    newLoc = ComVividsolutionsJtsGeomLocation_BOUNDARY;
    break;
    default:
    newLoc = ComVividsolutionsJtsGeomLocation_BOUNDARY;
    break;
  }
  [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label_)) setLocationWithInt:argIndex withInt:newLoc];
}

- (jint)computeMergedLocationWithComVividsolutionsJtsGeomgraphLabel:(ComVividsolutionsJtsGeomgraphLabel *)label2
                                                            withInt:(jint)eltIndex {
  jint loc = ComVividsolutionsJtsGeomLocation_NONE;
  loc = [((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label_)) getLocationWithInt:eltIndex];
  if (![((ComVividsolutionsJtsGeomgraphLabel *) nil_chk(label2)) isNullWithInt:eltIndex]) {
    jint nLoc = [label2 getLocationWithInt:eltIndex];
    if (loc != ComVividsolutionsJtsGeomLocation_BOUNDARY) loc = nLoc;
  }
  return loc;
}

- (void)printWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  [((JavaIoPrintStream *) nil_chk(outArg)) printlnWithNSString:JreStrcat("$@$@", @"node ", coord_, @" lbl: ", label_)];
}

- (void)dealloc {
  RELEASE_(coord_);
  RELEASE_(edges_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomgraphEdgeEndStar:", "Node", NULL, 0x1, NULL, NULL },
    { "getCoordinate", NULL, "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getEdges", NULL, "Lcom.vividsolutions.jts.geomgraph.EdgeEndStar;", 0x1, NULL, NULL },
    { "isIncidentEdgeInResult", NULL, "Z", 0x1, NULL, NULL },
    { "isIsolated", NULL, "Z", 0x1, NULL, NULL },
    { "computeIMWithComVividsolutionsJtsGeomIntersectionMatrix:", "computeIM", "V", 0x4, NULL, NULL },
    { "addWithComVividsolutionsJtsGeomgraphEdgeEnd:", "add", "V", 0x1, NULL, NULL },
    { "mergeLabelWithComVividsolutionsJtsGeomgraphNode:", "mergeLabel", "V", 0x1, NULL, NULL },
    { "mergeLabelWithComVividsolutionsJtsGeomgraphLabel:", "mergeLabel", "V", 0x1, NULL, NULL },
    { "setLabelWithInt:withInt:", "setLabel", "V", 0x1, NULL, NULL },
    { "setLabelBoundaryWithInt:", "setLabelBoundary", "V", 0x1, NULL, NULL },
    { "computeMergedLocationWithComVividsolutionsJtsGeomgraphLabel:withInt:", "computeMergedLocation", "I", 0x0, NULL, NULL },
    { "printWithJavaIoPrintStream:", "print", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coord_", NULL, 0x4, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "edges_", NULL, 0x4, "Lcom.vividsolutions.jts.geomgraph.EdgeEndStar;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphNode = { 2, "Node", "com.vividsolutions.jts.geomgraph", NULL, 0x1, 13, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphNode;
}

@end

void ComVividsolutionsJtsGeomgraphNode_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomgraphEdgeEndStar_(ComVividsolutionsJtsGeomgraphNode *self, ComVividsolutionsJtsGeomCoordinate *coord, ComVividsolutionsJtsGeomgraphEdgeEndStar *edges) {
  ComVividsolutionsJtsGeomgraphGraphComponent_init(self);
  ComVividsolutionsJtsGeomgraphNode_set_coord_(self, coord);
  ComVividsolutionsJtsGeomgraphNode_set_edges_(self, edges);
  ComVividsolutionsJtsGeomgraphGraphComponent_setAndConsume_label_(self, new_ComVividsolutionsJtsGeomgraphLabel_initWithInt_withInt_(0, ComVividsolutionsJtsGeomLocation_NONE));
}

ComVividsolutionsJtsGeomgraphNode *new_ComVividsolutionsJtsGeomgraphNode_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomgraphEdgeEndStar_(ComVividsolutionsJtsGeomCoordinate *coord, ComVividsolutionsJtsGeomgraphEdgeEndStar *edges) {
  ComVividsolutionsJtsGeomgraphNode *self = [ComVividsolutionsJtsGeomgraphNode alloc];
  ComVividsolutionsJtsGeomgraphNode_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomgraphEdgeEndStar_(self, coord, edges);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphNode)
