//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geomgraph/EdgeIntersection.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geomgraph/EdgeIntersection.h"
#include "java/io/PrintStream.h"

@implementation ComVividsolutionsJtsGeomgraphEdgeIntersection

- (instancetype)initWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coord
                                                   withInt:(jint)segmentIndex
                                                withDouble:(jdouble)dist {
  ComVividsolutionsJtsGeomgraphEdgeIntersection_initWithComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(self, coord, segmentIndex, dist);
  return self;
}

- (ComVividsolutionsJtsGeomCoordinate *)getCoordinate {
  return coord_;
}

- (jint)getSegmentIndex {
  return segmentIndex_;
}

- (jdouble)getDistance {
  return dist_;
}

- (jint)compareToWithId:(id)obj {
  ComVividsolutionsJtsGeomgraphEdgeIntersection *other = (ComVividsolutionsJtsGeomgraphEdgeIntersection *) check_class_cast(obj, [ComVividsolutionsJtsGeomgraphEdgeIntersection class]);
  return [self compareWithInt:((ComVividsolutionsJtsGeomgraphEdgeIntersection *) nil_chk(other))->segmentIndex_ withDouble:other->dist_];
}

- (jint)compareWithInt:(jint)segmentIndex
            withDouble:(jdouble)dist {
  if (self->segmentIndex_ < segmentIndex) return -1;
  if (self->segmentIndex_ > segmentIndex) return 1;
  if (self->dist_ < dist) return -1;
  if (self->dist_ > dist) return 1;
  return 0;
}

- (jboolean)isEndPointWithInt:(jint)maxSegmentIndex {
  if (segmentIndex_ == 0 && dist_ == 0.0) return YES;
  if (segmentIndex_ == maxSegmentIndex) return YES;
  return NO;
}

- (void)printWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  [((JavaIoPrintStream *) nil_chk(outArg)) printWithId:coord_];
  [outArg printWithNSString:JreStrcat("$I", @" seg # = ", segmentIndex_)];
  [outArg printlnWithNSString:JreStrcat("$D", @" dist = ", dist_)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomCoordinate:withInt:withDouble:", "EdgeIntersection", NULL, 0x1, NULL, NULL },
    { "getCoordinate", NULL, "Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getSegmentIndex", NULL, "I", 0x1, NULL, NULL },
    { "getDistance", NULL, "D", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "compareWithInt:withDouble:", "compare", "I", 0x1, NULL, NULL },
    { "isEndPointWithInt:", "isEndPoint", "Z", 0x1, NULL, NULL },
    { "printWithJavaIoPrintStream:", "print", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coord_", NULL, 0x1, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "segmentIndex_", NULL, 0x1, "I", NULL, NULL,  },
    { "dist_", NULL, 0x1, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphEdgeIntersection = { 2, "EdgeIntersection", "com.vividsolutions.jts.geomgraph", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphEdgeIntersection;
}

@end

void ComVividsolutionsJtsGeomgraphEdgeIntersection_initWithComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(ComVividsolutionsJtsGeomgraphEdgeIntersection *self, ComVividsolutionsJtsGeomCoordinate *coord, jint segmentIndex, jdouble dist) {
  (void) NSObject_init(self);
  self->coord_ = new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(coord);
  self->segmentIndex_ = segmentIndex;
  self->dist_ = dist;
}

ComVividsolutionsJtsGeomgraphEdgeIntersection *new_ComVividsolutionsJtsGeomgraphEdgeIntersection_initWithComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(ComVividsolutionsJtsGeomCoordinate *coord, jint segmentIndex, jdouble dist) {
  ComVividsolutionsJtsGeomgraphEdgeIntersection *self = [ComVividsolutionsJtsGeomgraphEdgeIntersection alloc];
  ComVividsolutionsJtsGeomgraphEdgeIntersection_initWithComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(self, coord, segmentIndex, dist);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphEdgeIntersection)
