//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/geomgraph/index/MonotoneChainEdge.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geomgraph/Edge.h"
#include "com/vividsolutions/jts/geomgraph/index/MonotoneChainEdge.h"
#include "com/vividsolutions/jts/geomgraph/index/MonotoneChainIndexer.h"
#include "com/vividsolutions/jts/geomgraph/index/SegmentIntersector.h"

@interface ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge ()

- (void)computeIntersectsForChainWithInt:(jint)start0
                                 withInt:(jint)end0
withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *)mce
                                 withInt:(jint)start1
                                 withInt:(jint)end1
withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:(ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *)ei;

@end

__attribute__((unused)) static void ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *self, jint start0, jint end0, ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *mce, jint start1, jint end1, ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *ei);

@implementation ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge

- (instancetype)initWithComVividsolutionsJtsGeomgraphEdge:(ComVividsolutionsJtsGeomgraphEdge *)e {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_initWithComVividsolutionsJtsGeomgraphEdge_(self, e);
  return self;
}

- (IOSObjectArray *)getCoordinates {
  return pts_;
}

- (IOSIntArray *)getStartIndexes {
  return startIndex_;
}

- (jdouble)getMinXWithInt:(jint)chainIndex {
  jdouble x1 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(nil_chk(pts_), IOSIntArray_Get(nil_chk(startIndex_), chainIndex))))->x_;
  jdouble x2 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts_, IOSIntArray_Get(startIndex_, chainIndex + 1))))->x_;
  return x1 < x2 ? x1 : x2;
}

- (jdouble)getMaxXWithInt:(jint)chainIndex {
  jdouble x1 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(nil_chk(pts_), IOSIntArray_Get(nil_chk(startIndex_), chainIndex))))->x_;
  jdouble x2 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts_, IOSIntArray_Get(startIndex_, chainIndex + 1))))->x_;
  return x1 > x2 ? x1 : x2;
}

- (void)computeIntersectsWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *)mce
                        withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:(ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *)si {
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(startIndex_))->size_ - 1; i++) {
    for (jint j = 0; j < ((ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *) nil_chk(mce))->startIndex_->size_ - 1; j++) {
      [self computeIntersectsForChainWithInt:i withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:mce withInt:j withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:si];
    }
  }
}

- (void)computeIntersectsForChainWithInt:(jint)chainIndex0
withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *)mce
                                 withInt:(jint)chainIndex1
withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:(ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *)si {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(self, IOSIntArray_Get(nil_chk(startIndex_), chainIndex0), IOSIntArray_Get(startIndex_, chainIndex0 + 1), mce, IOSIntArray_Get(((ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *) nil_chk(mce))->startIndex_, chainIndex1), IOSIntArray_Get(mce->startIndex_, chainIndex1 + 1), si);
}

- (void)computeIntersectsForChainWithInt:(jint)start0
                                 withInt:(jint)end0
withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *)mce
                                 withInt:(jint)start1
                                 withInt:(jint)end1
withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:(ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *)ei {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(self, start0, end0, mce, start1, end1, ei);
}

- (void)dealloc {
  RELEASE_(e_);
  RELEASE_(pts_);
  RELEASE_(startIndex_);
  RELEASE_(env1_);
  RELEASE_(env2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomgraphEdge:", "MonotoneChainEdge", NULL, 0x1, NULL, NULL },
    { "getCoordinates", NULL, "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "getStartIndexes", NULL, "[I", 0x1, NULL, NULL },
    { "getMinXWithInt:", "getMinX", "D", 0x1, NULL, NULL },
    { "getMaxXWithInt:", "getMaxX", "D", 0x1, NULL, NULL },
    { "computeIntersectsWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:", "computeIntersects", "V", 0x1, NULL, NULL },
    { "computeIntersectsForChainWithInt:withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:withInt:withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:", "computeIntersectsForChain", "V", 0x1, NULL, NULL },
    { "computeIntersectsForChainWithInt:withInt:withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:withInt:withInt:withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:", "computeIntersectsForChain", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "e_", NULL, 0x0, "Lcom.vividsolutions.jts.geomgraph.Edge;", NULL, NULL,  },
    { "pts_", NULL, 0x0, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "startIndex_", NULL, 0x0, "[I", NULL, NULL,  },
    { "env1_", NULL, 0x0, "Lcom.vividsolutions.jts.geom.Envelope;", NULL, NULL,  },
    { "env2_", NULL, 0x0, "Lcom.vividsolutions.jts.geom.Envelope;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge = { 2, "MonotoneChainEdge", "com.vividsolutions.jts.geomgraph.index", NULL, 0x1, 8, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge;
}

@end

void ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_initWithComVividsolutionsJtsGeomgraphEdge_(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *self, ComVividsolutionsJtsGeomgraphEdge *e) {
  NSObject_init(self);
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_setAndConsume_env1_(self, new_ComVividsolutionsJtsGeomEnvelope_init());
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_setAndConsume_env2_(self, new_ComVividsolutionsJtsGeomEnvelope_init());
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_set_e_(self, e);
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_set_pts_(self, [((ComVividsolutionsJtsGeomgraphEdge *) nil_chk(e)) getCoordinates]);
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer *mcb = [new_ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_init() autorelease];
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_set_startIndex_(self, [mcb getChainStartIndicesWithComVividsolutionsJtsGeomCoordinateArray:self->pts_]);
}

ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *new_ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_initWithComVividsolutionsJtsGeomgraphEdge_(ComVividsolutionsJtsGeomgraphEdge *e) {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *self = [ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge alloc];
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_initWithComVividsolutionsJtsGeomgraphEdge_(self, e);
  return self;
}

void ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *self, jint start0, jint end0, ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *mce, jint start1, jint end1, ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *ei) {
  ComVividsolutionsJtsGeomCoordinate *p00 = IOSObjectArray_Get(nil_chk(self->pts_), start0);
  ComVividsolutionsJtsGeomCoordinate *p01 = IOSObjectArray_Get(self->pts_, end0);
  ComVividsolutionsJtsGeomCoordinate *p10 = IOSObjectArray_Get(((ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *) nil_chk(mce))->pts_, start1);
  ComVividsolutionsJtsGeomCoordinate *p11 = IOSObjectArray_Get(mce->pts_, end1);
  if (end0 - start0 == 1 && end1 - start1 == 1) {
    [((ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *) nil_chk(ei)) addIntersectionsWithComVividsolutionsJtsGeomgraphEdge:self->e_ withInt:start0 withComVividsolutionsJtsGeomgraphEdge:mce->e_ withInt:start1];
    return;
  }
  [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->env1_)) init__WithComVividsolutionsJtsGeomCoordinate:p00 withComVividsolutionsJtsGeomCoordinate:p01];
  [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(self->env2_)) init__WithComVividsolutionsJtsGeomCoordinate:p10 withComVividsolutionsJtsGeomCoordinate:p11];
  if (![self->env1_ intersectsWithComVividsolutionsJtsGeomEnvelope:self->env2_]) return;
  jint mid0 = (start0 + end0) / 2;
  jint mid1 = (start1 + end1) / 2;
  if (start0 < mid0) {
    if (start1 < mid1) ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(self, start0, mid0, mce, start1, mid1, ei);
    if (mid1 < end1) ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(self, start0, mid0, mce, mid1, end1, ei);
  }
  if (mid0 < end0) {
    if (start1 < mid1) ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(self, mid0, end0, mce, start1, mid1, ei);
    if (mid1 < end1) ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_computeIntersectsForChainWithInt_withInt_withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_withInt_withComVividsolutionsJtsGeomgraphIndexSegmentIntersector_(self, mid0, end0, mce, mid1, end1, ei);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge)
