//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/com/vividsolutions/jts/geomgraph/index/MonotoneChainIndexer.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geomgraph/Quadrant.h"
#include "com/vividsolutions/jts/geomgraph/index/MonotoneChainIndexer.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer ()

- (jint)findChainEndWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts
                                                        withInt:(jint)start;

@end

__attribute__((unused)) static jint ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_findChainEndWithComVividsolutionsJtsGeomCoordinateArray_withInt_(ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer *self, IOSObjectArray *pts, jint start);

@implementation ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer

+ (IOSIntArray *)toIntArrayWithJavaUtilList:(id<JavaUtilList>)list {
  return ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_toIntArrayWithJavaUtilList_(list);
}

- (instancetype)init {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_init(self);
  return self;
}

- (IOSIntArray *)getChainStartIndicesWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  jint start = 0;
  id<JavaUtilList> startIndexList = [new_JavaUtilArrayList_init() autorelease];
  [startIndexList addWithId:[new_JavaLangInteger_initWithInt_(start) autorelease]];
  do {
    jint last = ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_findChainEndWithComVividsolutionsJtsGeomCoordinateArray_withInt_(self, pts, start);
    [startIndexList addWithId:[new_JavaLangInteger_initWithInt_(last) autorelease]];
    start = last;
  }
  while (start < ((IOSObjectArray *) nil_chk(pts))->size_ - 1);
  IOSIntArray *startIndex = ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_toIntArrayWithJavaUtilList_(startIndexList);
  return startIndex;
}

- (jint)findChainEndWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts
                                                        withInt:(jint)start {
  return ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_findChainEndWithComVividsolutionsJtsGeomCoordinateArray_withInt_(self, pts, start);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "toIntArrayWithJavaUtilList:", "toIntArray", "[I", 0x9, NULL, NULL },
    { "init", "MonotoneChainIndexer", NULL, 0x1, NULL, NULL },
    { "getChainStartIndicesWithComVividsolutionsJtsGeomCoordinateArray:", "getChainStartIndices", "[I", 0x1, NULL, NULL },
    { "findChainEndWithComVividsolutionsJtsGeomCoordinateArray:withInt:", "findChainEnd", "I", 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer = { 2, "MonotoneChainIndexer", "com.vividsolutions.jts.geomgraph.index", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer;
}

@end

IOSIntArray *ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_toIntArrayWithJavaUtilList_(id<JavaUtilList> list) {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_initialize();
  IOSIntArray *array = [IOSIntArray arrayWithLength:[((id<JavaUtilList>) nil_chk(list)) size]];
  for (jint i = 0; i < array->size_; i++) {
    *IOSIntArray_GetRef(array, i) = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) check_class_cast([list getWithInt:i], [JavaLangInteger class])))) intValue];
  }
  return array;
}

void ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_init(ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer *new_ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_init() {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer *self = [ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer alloc];
  ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_init(self);
  return self;
}

jint ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer_findChainEndWithComVividsolutionsJtsGeomCoordinateArray_withInt_(ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer *self, IOSObjectArray *pts, jint start) {
  jint chainQuad = ComVividsolutionsJtsGeomgraphQuadrant_quadrantWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(nil_chk(pts), start), IOSObjectArray_Get(pts, start + 1));
  jint last = start + 1;
  while (last < pts->size_) {
    jint quad = ComVividsolutionsJtsGeomgraphQuadrant_quadrantWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(pts, last - 1), IOSObjectArray_Get(pts, last));
    if (quad != chainQuad) break;
    last++;
  }
  return last - 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphIndexMonotoneChainIndexer)
