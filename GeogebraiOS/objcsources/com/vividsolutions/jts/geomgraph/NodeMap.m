//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/com/vividsolutions/jts/geomgraph/NodeMap.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Location.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEnd.h"
#include "com/vividsolutions/jts/geomgraph/Label.h"
#include "com/vividsolutions/jts/geomgraph/Node.h"
#include "com/vividsolutions/jts/geomgraph/NodeFactory.h"
#include "com/vividsolutions/jts/geomgraph/NodeMap.h"
#include "java/io/PrintStream.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/TreeMap.h"

@implementation ComVividsolutionsJtsGeomgraphNodeMap

- (instancetype)initWithComVividsolutionsJtsGeomgraphNodeFactory:(ComVividsolutionsJtsGeomgraphNodeFactory *)nodeFact {
  ComVividsolutionsJtsGeomgraphNodeMap_initWithComVividsolutionsJtsGeomgraphNodeFactory_(self, nodeFact);
  return self;
}

- (ComVividsolutionsJtsGeomgraphNode *)addNodeWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coord {
  ComVividsolutionsJtsGeomgraphNode *node = (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([((id<JavaUtilMap>) nil_chk(nodeMap_)) getWithId:coord], [ComVividsolutionsJtsGeomgraphNode class]);
  if (node == nil) {
    node = [((ComVividsolutionsJtsGeomgraphNodeFactory *) nil_chk(nodeFact_)) createNodeWithComVividsolutionsJtsGeomCoordinate:coord];
    (void) [nodeMap_ putWithId:coord withId:node];
  }
  return node;
}

- (ComVividsolutionsJtsGeomgraphNode *)addNodeWithComVividsolutionsJtsGeomgraphNode:(ComVividsolutionsJtsGeomgraphNode *)n {
  ComVividsolutionsJtsGeomgraphNode *node = (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([((id<JavaUtilMap>) nil_chk(nodeMap_)) getWithId:[((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n)) getCoordinate]], [ComVividsolutionsJtsGeomgraphNode class]);
  if (node == nil) {
    (void) [nodeMap_ putWithId:[n getCoordinate] withId:n];
    return n;
  }
  [((ComVividsolutionsJtsGeomgraphNode *) nil_chk(node)) mergeLabelWithComVividsolutionsJtsGeomgraphNode:n];
  return node;
}

- (void)addWithComVividsolutionsJtsGeomgraphEdgeEnd:(ComVividsolutionsJtsGeomgraphEdgeEnd *)e {
  ComVividsolutionsJtsGeomCoordinate *p = [((ComVividsolutionsJtsGeomgraphEdgeEnd *) nil_chk(e)) getCoordinate];
  ComVividsolutionsJtsGeomgraphNode *n = [self addNodeWithComVividsolutionsJtsGeomCoordinate:p];
  [((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n)) addWithComVividsolutionsJtsGeomgraphEdgeEnd:e];
}

- (ComVividsolutionsJtsGeomgraphNode *)findWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coord {
  return (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([((id<JavaUtilMap>) nil_chk(nodeMap_)) getWithId:coord], [ComVividsolutionsJtsGeomgraphNode class]);
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilCollection>) nil_chk([((id<JavaUtilMap>) nil_chk(nodeMap_)) values])) iterator];
}

- (id<JavaUtilCollection>)values {
  return [((id<JavaUtilMap>) nil_chk(nodeMap_)) values];
}

- (id<JavaUtilCollection>)getBoundaryNodesWithInt:(jint)geomIndex {
  id<JavaUtilCollection> bdyNodes = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> i = [self iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphNode *node = (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([i next], [ComVividsolutionsJtsGeomgraphNode class]);
    if ([((ComVividsolutionsJtsGeomgraphLabel *) nil_chk([((ComVividsolutionsJtsGeomgraphNode *) nil_chk(node)) getLabel])) getLocationWithInt:geomIndex] == ComVividsolutionsJtsGeomLocation_BOUNDARY) [bdyNodes addWithId:node];
  }
  return bdyNodes;
}

- (void)printWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  for (id<JavaUtilIterator> it = [self iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComVividsolutionsJtsGeomgraphNode *n = (ComVividsolutionsJtsGeomgraphNode *) check_class_cast([it next], [ComVividsolutionsJtsGeomgraphNode class]);
    [((ComVividsolutionsJtsGeomgraphNode *) nil_chk(n)) printWithJavaIoPrintStream:outArg];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomgraphNodeFactory:", "NodeMap", NULL, 0x1, NULL, NULL },
    { "addNodeWithComVividsolutionsJtsGeomCoordinate:", "addNode", "Lcom.vividsolutions.jts.geomgraph.Node;", 0x1, NULL, NULL },
    { "addNodeWithComVividsolutionsJtsGeomgraphNode:", "addNode", "Lcom.vividsolutions.jts.geomgraph.Node;", 0x1, NULL, NULL },
    { "addWithComVividsolutionsJtsGeomgraphEdgeEnd:", "add", "V", 0x1, NULL, NULL },
    { "findWithComVividsolutionsJtsGeomCoordinate:", "find", "Lcom.vividsolutions.jts.geomgraph.Node;", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "values", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "getBoundaryNodesWithInt:", "getBoundaryNodes", "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "printWithJavaIoPrintStream:", "print", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nodeMap_", NULL, 0x0, "Ljava.util.Map;", NULL, NULL,  },
    { "nodeFact_", NULL, 0x0, "Lcom.vividsolutions.jts.geomgraph.NodeFactory;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphNodeMap = { 2, "NodeMap", "com.vividsolutions.jts.geomgraph", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphNodeMap;
}

@end

void ComVividsolutionsJtsGeomgraphNodeMap_initWithComVividsolutionsJtsGeomgraphNodeFactory_(ComVividsolutionsJtsGeomgraphNodeMap *self, ComVividsolutionsJtsGeomgraphNodeFactory *nodeFact) {
  (void) NSObject_init(self);
  self->nodeMap_ = new_JavaUtilTreeMap_init();
  self->nodeFact_ = nodeFact;
}

ComVividsolutionsJtsGeomgraphNodeMap *new_ComVividsolutionsJtsGeomgraphNodeMap_initWithComVividsolutionsJtsGeomgraphNodeFactory_(ComVividsolutionsJtsGeomgraphNodeFactory *nodeFact) {
  ComVividsolutionsJtsGeomgraphNodeMap *self = [ComVividsolutionsJtsGeomgraphNodeMap alloc];
  ComVividsolutionsJtsGeomgraphNodeMap_initWithComVividsolutionsJtsGeomgraphNodeFactory_(self, nodeFact);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphNodeMap)
