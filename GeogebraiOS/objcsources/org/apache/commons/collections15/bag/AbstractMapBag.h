//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/bag/AbstractMapBag.java
//

#ifndef _OrgApacheCommonsCollections15BagAbstractMapBag_H_
#define _OrgApacheCommonsCollections15BagAbstractMapBag_H_

#include "J2ObjC_header.h"
#include "java/util/Iterator.h"
#include "org/apache/commons/collections15/Bag.h"

@class IOSObjectArray;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheCommonsCollections15BagAbstractMapBag : NSObject < OrgApacheCommonsCollections15Bag >

#pragma mark Public

- (jboolean)addWithId:(id)object;

- (jboolean)addWithId:(id)object
              withInt:(jint)nCopies;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;

- (void)clear;

- (jboolean)containsWithId:(id)object;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;

- (jboolean)isEqual:(id)object;

- (jint)getCountWithId:(id)object;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)object
                 withInt:(jint)nCopies;

- (jboolean)removeWithId:(id)object;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array;

- (NSString *)description;

- (id<JavaUtilSet>)uniqueSet;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)doReadObjectWithJavaUtilMap:(id<JavaUtilMap>)map
        withJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)doWriteObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

- (id<JavaUtilMap>)getMap;

#pragma mark Package-Private

- (jboolean)containsAllWithOrgApacheCommonsCollections15Bag:(id<OrgApacheCommonsCollections15Bag>)other;

- (jboolean)retainAllWithOrgApacheCommonsCollections15Bag:(id<OrgApacheCommonsCollections15Bag>)other;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15BagAbstractMapBag)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15BagAbstractMapBag_init(OrgApacheCommonsCollections15BagAbstractMapBag *self);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15BagAbstractMapBag_initWithJavaUtilMap_(OrgApacheCommonsCollections15BagAbstractMapBag *self, id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15BagAbstractMapBag)

@interface OrgApacheCommonsCollections15BagAbstractMapBag_BagIterator : NSObject < JavaUtilIterator >

#pragma mark Public

- (instancetype)initWithOrgApacheCommonsCollections15BagAbstractMapBag:(OrgApacheCommonsCollections15BagAbstractMapBag *)parent;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15BagAbstractMapBag_BagIterator)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15BagAbstractMapBag_BagIterator_initWithOrgApacheCommonsCollections15BagAbstractMapBag_(OrgApacheCommonsCollections15BagAbstractMapBag_BagIterator *self, OrgApacheCommonsCollections15BagAbstractMapBag *parent);

FOUNDATION_EXPORT OrgApacheCommonsCollections15BagAbstractMapBag_BagIterator *new_OrgApacheCommonsCollections15BagAbstractMapBag_BagIterator_initWithOrgApacheCommonsCollections15BagAbstractMapBag_(OrgApacheCommonsCollections15BagAbstractMapBag *parent) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15BagAbstractMapBag_BagIterator)

@interface OrgApacheCommonsCollections15BagAbstractMapBag_MutableInteger : NSObject {
 @public
  jint value_;
}

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15BagAbstractMapBag_MutableInteger)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15BagAbstractMapBag_MutableInteger_initWithInt_(OrgApacheCommonsCollections15BagAbstractMapBag_MutableInteger *self, jint value);

FOUNDATION_EXPORT OrgApacheCommonsCollections15BagAbstractMapBag_MutableInteger *new_OrgApacheCommonsCollections15BagAbstractMapBag_MutableInteger_initWithInt_(jint value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15BagAbstractMapBag_MutableInteger)

#endif // _OrgApacheCommonsCollections15BagAbstractMapBag_H_
