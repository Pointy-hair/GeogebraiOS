//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/iterators/AbstractIteratorDecorator.java
//


#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Iterator.h"
#include "org/apache/commons/collections15/iterators/AbstractIteratorDecorator.h"

@implementation OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)iterator {
  OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator_initWithJavaUtilIterator_(self, iterator);
  return self;
}

- (id<JavaUtilIterator>)getIterator {
  return iterator_;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext];
}

- (id)next {
  return [((id<JavaUtilIterator>) nil_chk(iterator_)) next];
}

- (void)remove {
  [((id<JavaUtilIterator>) nil_chk(iterator_)) remove];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilIterator:", "AbstractIteratorDecorator", NULL, 0x1, NULL, NULL },
    { "getIterator", NULL, "Ljava.util.Iterator;", 0x4, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iterator_", NULL, 0x14, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<TE;>;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator = { 2, "AbstractIteratorDecorator", "org.apache.commons.collections15.iterators", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TE;>;" };
  return &_OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator;
}

@end

void OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator_initWithJavaUtilIterator_(OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator *self, id<JavaUtilIterator> iterator) {
  (void) NSObject_init(self);
  if (iterator == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Iterator must not be null");
  }
  self->iterator_ = iterator;
}

OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator *new_OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator_initWithJavaUtilIterator_(id<JavaUtilIterator> iterator) {
  OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator *self = [OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator alloc];
  OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator_initWithJavaUtilIterator_(self, iterator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator)
