//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/iterators/UnmodifiableListIterator.java
//


#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ListIterator.h"
#include "org/apache/commons/collections15/Unmodifiable.h"
#include "org/apache/commons/collections15/iterators/UnmodifiableListIterator.h"

@interface OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator () {
 @public
  id<JavaUtilListIterator> iterator_;
}

- (instancetype)initWithJavaUtilListIterator:(id<JavaUtilListIterator>)iterator;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator, iterator_, id<JavaUtilListIterator>)

__attribute__((unused)) static void OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initWithJavaUtilListIterator_(OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator *self, id<JavaUtilListIterator> iterator);

__attribute__((unused)) static OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator *new_OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initWithJavaUtilListIterator_(id<JavaUtilListIterator> iterator) NS_RETURNS_RETAINED;

@implementation OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator

+ (id<JavaUtilListIterator>)decorateWithJavaUtilListIterator:(id<JavaUtilListIterator>)iterator {
  return OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_decorateWithJavaUtilListIterator_(iterator);
}

- (instancetype)initWithJavaUtilListIterator:(id<JavaUtilListIterator>)iterator {
  OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initWithJavaUtilListIterator_(self, iterator);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) hasNext];
}

- (id)next {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) next];
}

- (jint)nextIndex {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) nextIndex];
}

- (jboolean)hasPrevious {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) hasPrevious];
}

- (id)previous {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) previous];
}

- (jint)previousIndex {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) previousIndex];
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"remove() is not supported");
}

- (void)setWithId:(id)obj {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"set() is not supported");
}

- (void)addWithId:(id)obj {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"add() is not supported");
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "decorateWithJavaUtilListIterator:", "decorate", "Ljava.util.ListIterator;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/ListIterator<TE;>;)Ljava/util/ListIterator<TE;>;" },
    { "initWithJavaUtilListIterator:", "UnmodifiableListIterator", NULL, 0x2, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "nextIndex", NULL, "I", 0x1, NULL, NULL },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "previous", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "previousIndex", NULL, "I", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "setWithId:", "set", "V", 0x1, NULL, "(TE;)V" },
    { "addWithId:", "add", "V", 0x1, NULL, "(TE;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "iterator_", NULL, 0x2, "Ljava.util.ListIterator;", NULL, "Ljava/util/ListIterator<TE;>;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator = { 2, "UnmodifiableListIterator", "org.apache.commons.collections15.iterators", NULL, 0x11, 11, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/ListIterator<TE;>;Lorg/apache/commons/collections15/Unmodifiable;" };
  return &_OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator;
}

@end

id<JavaUtilListIterator> OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_decorateWithJavaUtilListIterator_(id<JavaUtilListIterator> iterator) {
  OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initialize();
  if (iterator == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"ListIterator must not be null");
  }
  if ([OrgApacheCommonsCollections15Unmodifiable_class_() isInstance:iterator]) {
    return iterator;
  }
  return new_OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initWithJavaUtilListIterator_(iterator);
}

void OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initWithJavaUtilListIterator_(OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator *self, id<JavaUtilListIterator> iterator) {
  (void) NSObject_init(self);
  self->iterator_ = iterator;
}

OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator *new_OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initWithJavaUtilListIterator_(id<JavaUtilListIterator> iterator) {
  OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator *self = [OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator alloc];
  OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator_initWithJavaUtilListIterator_(self, iterator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15IteratorsUnmodifiableListIterator)
