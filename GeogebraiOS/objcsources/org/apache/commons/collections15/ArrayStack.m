//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/ArrayStack.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/EmptyStackException.h"
#include "org/apache/commons/collections15/ArrayStack.h"
#include "org/apache/commons/collections15/BufferUnderflowException.h"

#define OrgApacheCommonsCollections15ArrayStack_serialVersionUID 2130079159931574599LL

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15ArrayStack, serialVersionUID, jlong)

@implementation OrgApacheCommonsCollections15ArrayStack

- (instancetype)init {
  OrgApacheCommonsCollections15ArrayStack_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)initialSize {
  OrgApacheCommonsCollections15ArrayStack_initWithInt_(self, initialSize);
  return self;
}

- (jboolean)empty {
  return [self isEmpty];
}

- (id)peek {
  jint n = [self size];
  if (n <= 0) {
    @throw new_JavaUtilEmptyStackException_init();
  }
  else {
    return [self getWithInt:n - 1];
  }
}

- (id)peekWithInt:(jint)n {
  jint m = ([self size] - n) - 1;
  if (m < 0) {
    @throw new_JavaUtilEmptyStackException_init();
  }
  else {
    return [self getWithInt:m];
  }
}

- (id)pop {
  jint n = [self size];
  if (n <= 0) {
    @throw new_JavaUtilEmptyStackException_init();
  }
  else {
    return [self removeWithInt:n - 1];
  }
}

- (id)pushWithId:(id)item {
  [self addWithId:item];
  return item;
}

- (jint)searchWithId:(id)object {
  jint i = [self size] - 1;
  jint n = 1;
  while (i >= 0) {
    id current = [self getWithInt:i];
    if ((object == nil && current == nil) || (object != nil && [object isEqual:current])) {
      return n;
    }
    i--;
    n++;
  }
  return -1;
}

- (id)get {
  jint size = [self size];
  if (size == 0) {
    @throw new_OrgApacheCommonsCollections15BufferUnderflowException_init();
  }
  return [self getWithInt:size - 1];
}

- (id)remove {
  jint size = [self size];
  if (size == 0) {
    @throw new_OrgApacheCommonsCollections15BufferUnderflowException_init();
  }
  return [self removeWithInt:size - 1];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ArrayStack", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "ArrayStack", NULL, 0x1, NULL, NULL },
    { "empty", NULL, "Z", 0x1, NULL, NULL },
    { "peek", NULL, "TE;", 0x1, "Ljava.util.EmptyStackException;", "()TE;" },
    { "peekWithInt:", "peek", "TE;", 0x1, "Ljava.util.EmptyStackException;", "(I)TE;" },
    { "pop", NULL, "TE;", 0x1, "Ljava.util.EmptyStackException;", "()TE;" },
    { "pushWithId:", "push", "TE;", 0x1, NULL, "(TE;)TE;" },
    { "searchWithId:", "search", "I", 0x1, NULL, "(TE;)I" },
    { "get", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "remove", NULL, "TE;", 0x1, NULL, "()TE;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15ArrayStack_serialVersionUID },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ArrayStack = { 2, "ArrayStack", "org.apache.commons.collections15", NULL, 0x1, 10, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/util/ArrayList<TE;>;Lorg/apache/commons/collections15/Buffer<TE;>;" };
  return &_OrgApacheCommonsCollections15ArrayStack;
}

@end

void OrgApacheCommonsCollections15ArrayStack_init(OrgApacheCommonsCollections15ArrayStack *self) {
  (void) JavaUtilArrayList_init(self);
}

OrgApacheCommonsCollections15ArrayStack *new_OrgApacheCommonsCollections15ArrayStack_init() {
  OrgApacheCommonsCollections15ArrayStack *self = [OrgApacheCommonsCollections15ArrayStack alloc];
  OrgApacheCommonsCollections15ArrayStack_init(self);
  return self;
}

void OrgApacheCommonsCollections15ArrayStack_initWithInt_(OrgApacheCommonsCollections15ArrayStack *self, jint initialSize) {
  (void) JavaUtilArrayList_initWithInt_(self, initialSize);
}

OrgApacheCommonsCollections15ArrayStack *new_OrgApacheCommonsCollections15ArrayStack_initWithInt_(jint initialSize) {
  OrgApacheCommonsCollections15ArrayStack *self = [OrgApacheCommonsCollections15ArrayStack alloc];
  OrgApacheCommonsCollections15ArrayStack_initWithInt_(self, initialSize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ArrayStack)
