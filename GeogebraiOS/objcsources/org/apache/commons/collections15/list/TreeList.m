//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/list/TreeList.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/util/AbstractCollection.h"
#include "java/util/AbstractList.h"
#include "java/util/Collection.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/ListIterator.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/commons/collections15/list/TreeList.h"

@interface OrgApacheCommonsCollections15ListTreeList () {
 @public
  OrgApacheCommonsCollections15ListTreeList_AVLNode *root_;
  jint size__;
}

- (void)checkIntervalWithInt:(jint)index
                     withInt:(jint)startIndex
                     withInt:(jint)endIndex;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListTreeList, root_, OrgApacheCommonsCollections15ListTreeList_AVLNode *)

__attribute__((unused)) static void OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(OrgApacheCommonsCollections15ListTreeList *self, jint index, jint startIndex, jint endIndex);

@interface OrgApacheCommonsCollections15ListTreeList_AVLNode () {
 @public
  OrgApacheCommonsCollections15ListTreeList_AVLNode *left_;
  jboolean leftIsPrevious_;
  OrgApacheCommonsCollections15ListTreeList_AVLNode *right_;
  jboolean rightIsNext_;
  jint height_;
  jint relativePosition_;
  id value_;
}

- (instancetype)initWithInt:(jint)relativePosition
                     withId:(id)obj
withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)rightFollower
withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)leftFollower;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)insertOnLeftWithInt:(jint)indexRelativeToMe
                                                                    withId:(id)obj;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)insertOnRightWithInt:(jint)indexRelativeToMe
                                                                     withId:(id)obj;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)getLeftSubTree;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)getRightSubTree;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)max;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)min;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)removeMax;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)removeMin;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)removeSelf;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)balance;

- (jint)getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node;

- (jint)setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node
                                                               withInt:(jint)newOffest;

- (void)recalcHeight;

- (jint)getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node;

- (jint)heightRightMinusLeft;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)rotateLeft;

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)rotateRight;

- (void)setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node
               withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)previous;

- (void)setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node
                withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)next;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListTreeList_AVLNode, left_, OrgApacheCommonsCollections15ListTreeList_AVLNode *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListTreeList_AVLNode, right_, OrgApacheCommonsCollections15ListTreeList_AVLNode *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListTreeList_AVLNode, value_, id)

__attribute__((unused)) static void OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, jint relativePosition, id obj, OrgApacheCommonsCollections15ListTreeList_AVLNode *rightFollower, OrgApacheCommonsCollections15ListTreeList_AVLNode *leftFollower);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *new_OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(jint relativePosition, id obj, OrgApacheCommonsCollections15ListTreeList_AVLNode *rightFollower, OrgApacheCommonsCollections15ListTreeList_AVLNode *leftFollower) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnLeftWithInt_withId_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, jint indexRelativeToMe, id obj);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnRightWithInt_withId_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, jint indexRelativeToMe, id obj);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_max(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_min(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMax(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMin(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_removeSelf(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static jint OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node);

__attribute__((unused)) static jint OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node, jint newOffest);

__attribute__((unused)) static void OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static jint OrgApacheCommonsCollections15ListTreeList_AVLNode_getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node);

__attribute__((unused)) static jint OrgApacheCommonsCollections15ListTreeList_AVLNode_heightRightMinusLeft(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateLeft(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateRight(OrgApacheCommonsCollections15ListTreeList_AVLNode *self);

__attribute__((unused)) static void OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node, OrgApacheCommonsCollections15ListTreeList_AVLNode *previous);

__attribute__((unused)) static void OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node, OrgApacheCommonsCollections15ListTreeList_AVLNode *next);

@implementation OrgApacheCommonsCollections15ListTreeList

- (instancetype)init {
  OrgApacheCommonsCollections15ListTreeList_init(self);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  OrgApacheCommonsCollections15ListTreeList_initWithJavaUtilCollection_(self, coll);
  return self;
}

- (id)getWithInt:(jint)index {
  OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(self, index, 0, [self size] - 1);
  return [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk([((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(root_)) getWithInt:index])) getValue];
}

- (jint)size {
  return size__;
}

- (id<JavaUtilIterator>)iterator {
  return [self listIteratorWithInt:0];
}

- (id<JavaUtilListIterator>)listIterator {
  return [self listIteratorWithInt:0];
}

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)fromIndex {
  OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(self, fromIndex, 0, [self size]);
  return new_OrgApacheCommonsCollections15ListTreeList_TreeListIterator_initWithOrgApacheCommonsCollections15ListTreeList_withInt_(self, fromIndex);
}

- (jint)indexOfWithId:(id)object {
  if (root_ == nil) {
    return -1;
  }
  return [root_ indexOfWithId:(id) object withInt:((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(root_))->relativePosition_];
}

- (jboolean)containsWithId:(id)object {
  return ([self indexOfWithId:object] >= 0);
}

- (IOSObjectArray *)toArray {
  IOSObjectArray *array = [IOSObjectArray newArrayWithLength:[self size] type:NSObject_class_()];
  if (root_ != nil) {
    [root_ toArrayWithNSObjectArray:(IOSObjectArray *) check_class_cast(array, [IOSObjectArray class]) withInt:root_->relativePosition_];
  }
  return array;
}

- (void)addWithInt:(jint)index
            withId:(id)obj {
  modCount_++;
  OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(self, index, 0, [self size]);
  if (root_ == nil) {
    root_ = new_OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(index, obj, nil, nil);
  }
  else {
    root_ = [root_ insertWithInt:index withId:obj];
  }
  size__++;
}

- (id)setWithInt:(jint)index
          withId:(id)obj {
  OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(self, index, 0, [self size] - 1);
  OrgApacheCommonsCollections15ListTreeList_AVLNode *node = [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(root_)) getWithInt:index];
  id result = ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(node))->value_;
  [node setValueWithId:obj];
  return result;
}

- (id)removeWithInt:(jint)index {
  modCount_++;
  OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(self, index, 0, [self size] - 1);
  id result = [self getWithInt:index];
  root_ = [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(root_)) removeWithInt:index];
  size__--;
  return result;
}

- (void)clear {
  modCount_++;
  root_ = nil;
  size__ = 0;
}

- (void)checkIntervalWithInt:(jint)index
                     withInt:(jint)startIndex
                     withInt:(jint)endIndex {
  OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(self, index, startIndex, endIndex);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TreeList", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilCollection:", "TreeList", NULL, 0x1, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "listIterator", NULL, "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "listIteratorWithInt:", "listIterator", "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "indexOfWithId:", "indexOf", "I", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "addWithInt:withId:", "add", "V", 0x1, NULL, "(ITE;)V" },
    { "setWithInt:withId:", "set", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "removeWithInt:", "remove", "TE;", 0x1, NULL, "(I)TE;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "checkIntervalWithInt:withInt:withInt:", "checkInterval", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "root_", NULL, 0x2, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", NULL, "Lorg/apache/commons/collections15/list/TreeList$AVLNode<TE;>;",  },
    { "size__", "size", 0x2, "I", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.list.TreeList$AVLNode;", "Lorg.apache.commons.collections15.list.TreeList$TreeListIterator;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListTreeList = { 2, "TreeList", "org.apache.commons.collections15.list", NULL, 0x1, 15, methods, 2, fields, 1, superclass_type_args, 2, inner_classes, NULL, "<E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;" };
  return &_OrgApacheCommonsCollections15ListTreeList;
}

@end

void OrgApacheCommonsCollections15ListTreeList_init(OrgApacheCommonsCollections15ListTreeList *self) {
  (void) JavaUtilAbstractList_init(self);
}

OrgApacheCommonsCollections15ListTreeList *new_OrgApacheCommonsCollections15ListTreeList_init() {
  OrgApacheCommonsCollections15ListTreeList *self = [OrgApacheCommonsCollections15ListTreeList alloc];
  OrgApacheCommonsCollections15ListTreeList_init(self);
  return self;
}

void OrgApacheCommonsCollections15ListTreeList_initWithJavaUtilCollection_(OrgApacheCommonsCollections15ListTreeList *self, id<JavaUtilCollection> coll) {
  (void) JavaUtilAbstractList_init(self);
  [self addAllWithJavaUtilCollection:coll];
}

OrgApacheCommonsCollections15ListTreeList *new_OrgApacheCommonsCollections15ListTreeList_initWithJavaUtilCollection_(id<JavaUtilCollection> coll) {
  OrgApacheCommonsCollections15ListTreeList *self = [OrgApacheCommonsCollections15ListTreeList alloc];
  OrgApacheCommonsCollections15ListTreeList_initWithJavaUtilCollection_(self, coll);
  return self;
}

void OrgApacheCommonsCollections15ListTreeList_checkIntervalWithInt_withInt_withInt_(OrgApacheCommonsCollections15ListTreeList *self, jint index, jint startIndex, jint endIndex) {
  if (index < startIndex || index > endIndex) {
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Invalid index:", index, @", size=", [self size]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListTreeList)

@implementation OrgApacheCommonsCollections15ListTreeList_AVLNode

- (instancetype)initWithInt:(jint)relativePosition
                     withId:(id)obj
withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)rightFollower
withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)leftFollower {
  OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, relativePosition, obj, rightFollower, leftFollower);
  return self;
}

- (id)getValue {
  return value_;
}

- (void)setValueWithId:(id)obj {
  self->value_ = obj;
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)getWithInt:(jint)index {
  jint indexRelativeToMe = index - relativePosition_;
  if (indexRelativeToMe == 0) {
    return self;
  }
  OrgApacheCommonsCollections15ListTreeList_AVLNode *nextNode = ((indexRelativeToMe < 0) ? OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) : OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self));
  if (nextNode == nil) {
    return nil;
  }
  return [nextNode getWithInt:indexRelativeToMe];
}

- (jint)indexOfWithId:(id)object
              withInt:(jint)index {
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) != nil) {
    jint result = [left_ indexOfWithId:object withInt:index + ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(left_))->relativePosition_];
    if (result != -1) {
      return result;
    }
  }
  if (value_ == nil ? value_ == object : [value_ isEqual:object]) {
    return index;
  }
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) != nil) {
    return [right_ indexOfWithId:object withInt:index + ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(right_))->relativePosition_];
  }
  return -1;
}

- (void)toArrayWithNSObjectArray:(IOSObjectArray *)array
                         withInt:(jint)index {
  (void) IOSObjectArray_Set(nil_chk(array), index, value_);
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) != nil) {
    [left_ toArrayWithNSObjectArray:array withInt:index + ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(left_))->relativePosition_];
  }
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) != nil) {
    [right_ toArrayWithNSObjectArray:array withInt:index + ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(right_))->relativePosition_];
  }
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)next {
  if (rightIsNext_ || right_ == nil) {
    return right_;
  }
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_min(nil_chk(right_));
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)previous {
  if (leftIsPrevious_ || left_ == nil) {
    return left_;
  }
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_max(nil_chk(left_));
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)insertWithInt:(jint)index
                                                              withId:(id)obj {
  jint indexRelativeToMe = index - relativePosition_;
  if (indexRelativeToMe <= 0) {
    return OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnLeftWithInt_withId_(self, indexRelativeToMe, obj);
  }
  else {
    return OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnRightWithInt_withId_(self, indexRelativeToMe, obj);
  }
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)insertOnLeftWithInt:(jint)indexRelativeToMe
                                                                    withId:(id)obj {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnLeftWithInt_withId_(self, indexRelativeToMe, obj);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)insertOnRightWithInt:(jint)indexRelativeToMe
                                                                     withId:(id)obj {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnRightWithInt_withId_(self, indexRelativeToMe, obj);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)getLeftSubTree {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)getRightSubTree {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)max {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_max(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)min {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_min(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)removeWithInt:(jint)index {
  jint indexRelativeToMe = index - relativePosition_;
  if (indexRelativeToMe == 0) {
    return OrgApacheCommonsCollections15ListTreeList_AVLNode_removeSelf(self);
  }
  if (indexRelativeToMe > 0) {
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(right_)) removeWithInt:indexRelativeToMe], right_->right_);
    if (relativePosition_ < 0) {
      relativePosition_++;
    }
  }
  else {
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(left_)) removeWithInt:indexRelativeToMe], left_->left_);
    if (relativePosition_ > 0) {
      relativePosition_--;
    }
  }
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)removeMax {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMax(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)removeMin {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMin(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)removeSelf {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_removeSelf(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)balance {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(self);
}

- (jint)getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, node);
}

- (jint)setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node
                                                               withInt:(jint)newOffest {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(self, node, newOffest);
}

- (void)recalcHeight {
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
}

- (jint)getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, node);
}

- (jint)heightRightMinusLeft {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_heightRightMinusLeft(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)rotateLeft {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateLeft(self);
}

- (OrgApacheCommonsCollections15ListTreeList_AVLNode *)rotateRight {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateRight(self);
}

- (void)setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node
               withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)previous {
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, node, previous);
}

- (void)setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)node
                withOrgApacheCommonsCollections15ListTreeList_AVLNode:(OrgApacheCommonsCollections15ListTreeList_AVLNode *)next {
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, node, next);
}

- (NSString *)description {
  return JreStrcat("$ICZC@CZ$Z$", @"AVLNode(", relativePosition_, ',', (left_ != nil), ',', value_, ',', (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) != nil), @", faedelung ", rightIsNext_, @" )");
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withId:withOrgApacheCommonsCollections15ListTreeList_AVLNode:withOrgApacheCommonsCollections15ListTreeList_AVLNode:", "AVLNode", NULL, 0x2, NULL, "(ITT;Lorg/apache/commons/collections15/list/TreeList$AVLNode<TT;>;Lorg/apache/commons/collections15/list/TreeList$AVLNode<TT;>;)V" },
    { "getValue", NULL, "TT;", 0x0, NULL, "()TT;" },
    { "setValueWithId:", "setValue", "V", 0x0, NULL, "(TT;)V" },
    { "getWithInt:", "get", "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x0, NULL, NULL },
    { "indexOfWithId:withInt:", "indexOf", "I", 0x0, NULL, "(TT;I)I" },
    { "toArrayWithNSObjectArray:withInt:", "toArray", "V", 0x0, NULL, NULL },
    { "next", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x0, NULL, NULL },
    { "previous", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x0, NULL, NULL },
    { "insertWithInt:withId:", "insert", "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x0, NULL, "(ITT;)Lorg/apache/commons/collections15/list/TreeList$AVLNode<TT;>;" },
    { "insertOnLeftWithInt:withId:", "insertOnLeft", "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, "(ITT;)Lorg/apache/commons/collections15/list/TreeList$AVLNode<TT;>;" },
    { "insertOnRightWithInt:withId:", "insertOnRight", "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, "(ITT;)Lorg/apache/commons/collections15/list/TreeList$AVLNode<TT;>;" },
    { "getLeftSubTree", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "getRightSubTree", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "max", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "min", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "removeWithInt:", "remove", "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x0, NULL, NULL },
    { "removeMax", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "removeMin", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "removeSelf", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "balance", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode:", "getOffset", "I", 0x2, NULL, NULL },
    { "setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode:withInt:", "setOffset", "I", 0x2, NULL, NULL },
    { "recalcHeight", NULL, "V", 0x2, NULL, NULL },
    { "getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode:", "getHeight", "I", 0x2, NULL, NULL },
    { "heightRightMinusLeft", NULL, "I", 0x2, NULL, NULL },
    { "rotateLeft", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "rotateRight", NULL, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", 0x2, NULL, NULL },
    { "setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode:withOrgApacheCommonsCollections15ListTreeList_AVLNode:", "setLeft", "V", 0x2, NULL, NULL },
    { "setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode:withOrgApacheCommonsCollections15ListTreeList_AVLNode:", "setRight", "V", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "left_", NULL, 0x2, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", NULL, "Lorg/apache/commons/collections15/list/TreeList$AVLNode<TT;>;",  },
    { "leftIsPrevious_", NULL, 0x2, "Z", NULL, NULL,  },
    { "right_", NULL, 0x2, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", NULL, "Lorg/apache/commons/collections15/list/TreeList$AVLNode<TT;>;",  },
    { "rightIsNext_", NULL, 0x2, "Z", NULL, NULL,  },
    { "height_", NULL, 0x2, "I", NULL, NULL,  },
    { "relativePosition_", NULL, 0x2, "I", NULL, NULL,  },
    { "value_", NULL, 0x2, "TT;", NULL, "TT;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListTreeList_AVLNode = { 2, "AVLNode", "org.apache.commons.collections15.list", "TreeList", 0x8, 30, methods, 7, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheCommonsCollections15ListTreeList_AVLNode;
}

@end

void OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, jint relativePosition, id obj, OrgApacheCommonsCollections15ListTreeList_AVLNode *rightFollower, OrgApacheCommonsCollections15ListTreeList_AVLNode *leftFollower) {
  (void) NSObject_init(self);
  self->relativePosition_ = relativePosition;
  self->value_ = obj;
  self->rightIsNext_ = YES;
  self->leftIsPrevious_ = YES;
  self->right_ = rightFollower;
  self->left_ = leftFollower;
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *new_OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(jint relativePosition, id obj, OrgApacheCommonsCollections15ListTreeList_AVLNode *rightFollower, OrgApacheCommonsCollections15ListTreeList_AVLNode *leftFollower) {
  OrgApacheCommonsCollections15ListTreeList_AVLNode *self = [OrgApacheCommonsCollections15ListTreeList_AVLNode alloc];
  OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, relativePosition, obj, rightFollower, leftFollower);
  return self;
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnLeftWithInt_withId_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, jint indexRelativeToMe, id obj) {
  OrgApacheCommonsCollections15ListTreeList_AVLNode *ret = self;
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) == nil) {
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, new_OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(-1, obj, self, self->left_), nil);
  }
  else {
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(self->left_)) insertWithInt:indexRelativeToMe withId:obj], nil);
  }
  if (self->relativePosition_ >= 0) {
    self->relativePosition_++;
  }
  ret = OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(self);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
  return ret;
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_insertOnRightWithInt_withId_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, jint indexRelativeToMe, id obj) {
  OrgApacheCommonsCollections15ListTreeList_AVLNode *ret = self;
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) == nil) {
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, new_OrgApacheCommonsCollections15ListTreeList_AVLNode_initWithInt_withId_withOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(+1, obj, self->right_, self), nil);
  }
  else {
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(self->right_)) insertWithInt:indexRelativeToMe withId:obj], nil);
  }
  if (self->relativePosition_ < 0) {
    self->relativePosition_--;
  }
  ret = OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(self);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
  return ret;
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  return (self->leftIsPrevious_ ? nil : self->left_);
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  return (self->rightIsNext_ ? nil : self->right_);
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_max(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  return (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) == nil) ? self : OrgApacheCommonsCollections15ListTreeList_AVLNode_max(nil_chk(self->right_));
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_min(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  return (OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) == nil) ? self : OrgApacheCommonsCollections15ListTreeList_AVLNode_min(nil_chk(self->left_));
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMax(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) == nil) {
    return OrgApacheCommonsCollections15ListTreeList_AVLNode_removeSelf(self);
  }
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMax(nil_chk(self->right_)), self->right_->right_);
  if (self->relativePosition_ < 0) {
    self->relativePosition_++;
  }
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(self);
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMin(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) == nil) {
    return OrgApacheCommonsCollections15ListTreeList_AVLNode_removeSelf(self);
  }
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMin(nil_chk(self->left_)), self->left_->left_);
  if (self->relativePosition_ > 0) {
    self->relativePosition_--;
  }
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(self);
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_removeSelf(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) == nil && OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) == nil) return nil;
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) == nil) {
    if (self->relativePosition_ > 0) {
      ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(self->left_))->relativePosition_ += self->relativePosition_ + (self->relativePosition_ > 0 ? 0 : 1);
    }
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(nil_chk(OrgApacheCommonsCollections15ListTreeList_AVLNode_max(nil_chk(self->left_))), nil, self->right_);
    return self->left_;
  }
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) == nil) {
    ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(self->right_))->relativePosition_ += self->relativePosition_ - (self->relativePosition_ < 0 ? 0 : 1);
    OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(nil_chk(OrgApacheCommonsCollections15ListTreeList_AVLNode_min(self->right_)), nil, self->left_);
    return self->right_;
  }
  if (OrgApacheCommonsCollections15ListTreeList_AVLNode_heightRightMinusLeft(self) > 0) {
    OrgApacheCommonsCollections15ListTreeList_AVLNode *rightMin = OrgApacheCommonsCollections15ListTreeList_AVLNode_min(nil_chk(self->right_));
    self->value_ = ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(rightMin))->value_;
    if (self->leftIsPrevious_) {
      self->left_ = rightMin->left_;
    }
    self->right_ = OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMin(self->right_);
    if (self->relativePosition_ < 0) {
      self->relativePosition_++;
    }
  }
  else {
    OrgApacheCommonsCollections15ListTreeList_AVLNode *leftMax = OrgApacheCommonsCollections15ListTreeList_AVLNode_max(nil_chk(self->left_));
    self->value_ = ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(leftMax))->value_;
    if (self->rightIsNext_) {
      self->right_ = leftMax->right_;
    }
    self->left_ = OrgApacheCommonsCollections15ListTreeList_AVLNode_removeMax(self->left_);
    if (self->relativePosition_ > 0) {
      self->relativePosition_--;
    }
  }
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
  return self;
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_balance(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  switch (OrgApacheCommonsCollections15ListTreeList_AVLNode_heightRightMinusLeft(self)) {
    case 1:
    case 0:
    case -1:
    return self;
    case -2:
    if (OrgApacheCommonsCollections15ListTreeList_AVLNode_heightRightMinusLeft(nil_chk(self->left_)) > 0) {
      OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateLeft(self->left_), nil);
    }
    return OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateRight(self);
    case 2:
    if (OrgApacheCommonsCollections15ListTreeList_AVLNode_heightRightMinusLeft(nil_chk(self->right_)) < 0) {
      OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateRight(self->right_), nil);
    }
    return OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateLeft(self);
    default:
    @throw new_JavaLangRuntimeException_initWithNSString_(@"tree inconsistent!");
  }
}

jint OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node) {
  if (node == nil) {
    return 0;
  }
  return ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(node))->relativePosition_;
}

jint OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node, jint newOffest) {
  if (node == nil) {
    return 0;
  }
  jint oldOffset = OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, node);
  ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(node))->relativePosition_ = newOffest;
  return oldOffset;
}

void OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  self->height_ = JavaLangMath_maxWithInt_withInt_(OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self) == nil ? -1 : ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self)))->height_, OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self) == nil ? -1 : ((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self)))->height_) + 1;
}

jint OrgApacheCommonsCollections15ListTreeList_AVLNode_getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node) {
  return (node == nil ? -1 : node->height_);
}

jint OrgApacheCommonsCollections15ListTreeList_AVLNode_heightRightMinusLeft(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  return OrgApacheCommonsCollections15ListTreeList_AVLNode_getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self)) - OrgApacheCommonsCollections15ListTreeList_AVLNode_getHeightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self));
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateLeft(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  OrgApacheCommonsCollections15ListTreeList_AVLNode *newTop = self->right_;
  OrgApacheCommonsCollections15ListTreeList_AVLNode *movedNode = OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(nil_chk(OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(self)));
  jint newTopPosition = self->relativePosition_ + OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, newTop);
  jint myNewPosition = -((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(newTop))->relativePosition_;
  jint movedPosition = OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, newTop) + OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, movedNode);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, movedNode, newTop);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(newTop, self, nil);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(self, newTop, newTopPosition);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(self, self, myNewPosition);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(self, movedNode, movedPosition);
  return newTop;
}

OrgApacheCommonsCollections15ListTreeList_AVLNode *OrgApacheCommonsCollections15ListTreeList_AVLNode_rotateRight(OrgApacheCommonsCollections15ListTreeList_AVLNode *self) {
  OrgApacheCommonsCollections15ListTreeList_AVLNode *newTop = self->left_;
  OrgApacheCommonsCollections15ListTreeList_AVLNode *movedNode = OrgApacheCommonsCollections15ListTreeList_AVLNode_getRightSubTree(nil_chk(OrgApacheCommonsCollections15ListTreeList_AVLNode_getLeftSubTree(self)));
  jint newTopPosition = self->relativePosition_ + OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, newTop);
  jint myNewPosition = -((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(newTop))->relativePosition_;
  jint movedPosition = OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, newTop) + OrgApacheCommonsCollections15ListTreeList_AVLNode_getOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, movedNode);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(self, movedNode, newTop);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(newTop, self, nil);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(self, newTop, newTopPosition);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(self, self, myNewPosition);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_setOffsetWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withInt_(self, movedNode, movedPosition);
  return newTop;
}

void OrgApacheCommonsCollections15ListTreeList_AVLNode_setLeftWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node, OrgApacheCommonsCollections15ListTreeList_AVLNode *previous) {
  self->leftIsPrevious_ = (node == nil);
  self->left_ = (self->leftIsPrevious_ ? previous : node);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
}

void OrgApacheCommonsCollections15ListTreeList_AVLNode_setRightWithOrgApacheCommonsCollections15ListTreeList_AVLNode_withOrgApacheCommonsCollections15ListTreeList_AVLNode_(OrgApacheCommonsCollections15ListTreeList_AVLNode *self, OrgApacheCommonsCollections15ListTreeList_AVLNode *node, OrgApacheCommonsCollections15ListTreeList_AVLNode *next) {
  self->rightIsNext_ = (node == nil);
  self->right_ = (self->rightIsNext_ ? next : node);
  OrgApacheCommonsCollections15ListTreeList_AVLNode_recalcHeight(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListTreeList_AVLNode)

@implementation OrgApacheCommonsCollections15ListTreeList_TreeListIterator

- (instancetype)initWithOrgApacheCommonsCollections15ListTreeList:(OrgApacheCommonsCollections15ListTreeList *)parent
                                                          withInt:(jint)fromIndex {
  OrgApacheCommonsCollections15ListTreeList_TreeListIterator_initWithOrgApacheCommonsCollections15ListTreeList_withInt_(self, parent, fromIndex);
  return self;
}

- (void)checkModCount {
  if (((OrgApacheCommonsCollections15ListTreeList *) nil_chk(parent_))->modCount_ != expectedModCount_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
}

- (jboolean)hasNext {
  return (nextIndex__ < [((OrgApacheCommonsCollections15ListTreeList *) nil_chk(parent_)) size]);
}

- (id)next {
  [self checkModCount];
  if (![self hasNext]) {
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(JreStrcat("$IC", @"No element at index ", nextIndex__, '.'));
  }
  if (next__ == nil) {
    next__ = [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(((OrgApacheCommonsCollections15ListTreeList *) nil_chk(parent_))->root_)) getWithInt:nextIndex__];
  }
  id value = [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(next__)) getValue];
  current_ = next__;
  currentIndex_ = nextIndex__++;
  next__ = [next__ next];
  return value;
}

- (jboolean)hasPrevious {
  return (nextIndex__ > 0);
}

- (id)previous {
  [self checkModCount];
  if (![self hasPrevious]) {
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(@"Already at start of list.");
  }
  if (next__ == nil) {
    next__ = [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(((OrgApacheCommonsCollections15ListTreeList *) nil_chk(parent_))->root_)) getWithInt:nextIndex__ - 1];
  }
  else {
    next__ = [next__ previous];
  }
  id value = [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(next__)) getValue];
  current_ = next__;
  currentIndex_ = --nextIndex__;
  return value;
}

- (jint)nextIndex {
  return nextIndex__;
}

- (jint)previousIndex {
  return [self nextIndex] - 1;
}

- (void)remove {
  [self checkModCount];
  if (current_ == nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  (void) [((OrgApacheCommonsCollections15ListTreeList *) nil_chk(parent_)) removeWithInt:currentIndex_];
  current_ = nil;
  currentIndex_ = -1;
  nextIndex__--;
  expectedModCount_++;
}

- (void)setWithId:(id)obj {
  [self checkModCount];
  if (current_ == nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  [((OrgApacheCommonsCollections15ListTreeList_AVLNode *) nil_chk(current_)) setValueWithId:obj];
}

- (void)addWithId:(id)obj {
  [self checkModCount];
  [((OrgApacheCommonsCollections15ListTreeList *) nil_chk(parent_)) addWithInt:nextIndex__ withId:obj];
  current_ = nil;
  currentIndex_ = -1;
  nextIndex__++;
  expectedModCount_++;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15ListTreeList:withInt:", "TreeListIterator", NULL, 0x4, "Ljava.lang.IndexOutOfBoundsException;", NULL },
    { "checkModCount", NULL, "V", 0x4, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "previous", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "nextIndex", NULL, "I", 0x1, NULL, NULL },
    { "previousIndex", NULL, "I", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "setWithId:", "set", "V", 0x1, NULL, "(TE;)V" },
    { "addWithId:", "add", "V", 0x1, NULL, "(TE;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.list.TreeList;", NULL, "Lorg/apache/commons/collections15/list/TreeList<TE;>;",  },
    { "next__", "next", 0x4, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", NULL, "Lorg/apache/commons/collections15/list/TreeList$AVLNode<TE;>;",  },
    { "nextIndex__", "nextIndex", 0x4, "I", NULL, NULL,  },
    { "current_", NULL, 0x4, "Lorg.apache.commons.collections15.list.TreeList$AVLNode;", NULL, "Lorg/apache/commons/collections15/list/TreeList$AVLNode<TE;>;",  },
    { "currentIndex_", NULL, 0x4, "I", NULL, NULL,  },
    { "expectedModCount_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListTreeList_TreeListIterator = { 2, "TreeListIterator", "org.apache.commons.collections15.list", "TreeList", 0x8, 11, methods, 6, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/ListIterator<TE;>;Lorg/apache/commons/collections15/OrderedIterator<TE;>;" };
  return &_OrgApacheCommonsCollections15ListTreeList_TreeListIterator;
}

@end

void OrgApacheCommonsCollections15ListTreeList_TreeListIterator_initWithOrgApacheCommonsCollections15ListTreeList_withInt_(OrgApacheCommonsCollections15ListTreeList_TreeListIterator *self, OrgApacheCommonsCollections15ListTreeList *parent, jint fromIndex) {
  (void) NSObject_init(self);
  self->parent_ = parent;
  self->expectedModCount_ = ((OrgApacheCommonsCollections15ListTreeList *) nil_chk(parent))->modCount_;
  self->next__ = (parent->root_ == nil ? nil : [parent->root_ getWithInt:fromIndex]);
  self->nextIndex__ = fromIndex;
}

OrgApacheCommonsCollections15ListTreeList_TreeListIterator *new_OrgApacheCommonsCollections15ListTreeList_TreeListIterator_initWithOrgApacheCommonsCollections15ListTreeList_withInt_(OrgApacheCommonsCollections15ListTreeList *parent, jint fromIndex) {
  OrgApacheCommonsCollections15ListTreeList_TreeListIterator *self = [OrgApacheCommonsCollections15ListTreeList_TreeListIterator alloc];
  OrgApacheCommonsCollections15ListTreeList_TreeListIterator_initWithOrgApacheCommonsCollections15ListTreeList_withInt_(self, parent, fromIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListTreeList_TreeListIterator)
