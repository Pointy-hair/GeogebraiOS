//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/list/LazyList.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/List.h"
#include "org/apache/commons/collections15/Factory.h"
#include "org/apache/commons/collections15/list/AbstractListDecorator.h"
#include "org/apache/commons/collections15/list/AbstractSerializableListDecorator.h"
#include "org/apache/commons/collections15/list/LazyList.h"

#define OrgApacheCommonsCollections15ListLazyList_serialVersionUID -1708388017160694542LL

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15ListLazyList, serialVersionUID, jlong)

@implementation OrgApacheCommonsCollections15ListLazyList

+ (id<JavaUtilList>)decorateWithJavaUtilList:(id<JavaUtilList>)list
    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)factory {
  return OrgApacheCommonsCollections15ListLazyList_decorateWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(list, factory);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)factory {
  OrgApacheCommonsCollections15ListLazyList_initWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(self, list, factory);
  return self;
}

- (id)getWithInt:(jint)index {
  jint size = [((id<JavaUtilList>) nil_chk([self getList])) size];
  if (index < size) {
    id object = [((id<JavaUtilList>) nil_chk([self getList])) getWithInt:index];
    if (object == nil) {
      object = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(factory_)) create];
      [((id<JavaUtilList>) nil_chk([self getList])) setWithInt:index withId:object];
      return object;
    }
    else {
      return object;
    }
  }
  else {
    for (jint i = size; i < index; i++) {
      [((id<JavaUtilList>) nil_chk([self getList])) addWithId:nil];
    }
    id object = [((id<OrgApacheCommonsCollections15Factory>) nil_chk(factory_)) create];
    [((id<JavaUtilList>) nil_chk([self getList])) addWithId:object];
    return object;
  }
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  id<JavaUtilList> sub = [((id<JavaUtilList>) nil_chk([self getList])) subListWithInt:fromIndex withInt:toIndex];
  return [new_OrgApacheCommonsCollections15ListLazyList_initWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(sub, factory_) autorelease];
}

- (void)dealloc {
  RELEASE_(factory_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "decorateWithJavaUtilList:withOrgApacheCommonsCollections15Factory:", "decorate", "Ljava.util.List;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/List<TE;>;Lorg/apache/commons/collections15/Factory<+TE;>;)Ljava/util/List<TE;>;" },
    { "initWithJavaUtilList:withOrgApacheCommonsCollections15Factory:", "LazyList", NULL, 0x4, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "subListWithInt:withInt:", "subList", "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15ListLazyList_serialVersionUID },
    { "factory_", NULL, 0x14, "Lorg.apache.commons.collections15.Factory;", NULL, "Lorg/apache/commons/collections15/Factory<+TE;>;",  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListLazyList = { 2, "LazyList", "org.apache.commons.collections15.list", NULL, 0x1, 4, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Lorg/apache/commons/collections15/list/AbstractSerializableListDecorator<TE;>;" };
  return &_OrgApacheCommonsCollections15ListLazyList;
}

@end

id<JavaUtilList> OrgApacheCommonsCollections15ListLazyList_decorateWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(id<JavaUtilList> list, id<OrgApacheCommonsCollections15Factory> factory) {
  OrgApacheCommonsCollections15ListLazyList_initialize();
  return [new_OrgApacheCommonsCollections15ListLazyList_initWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(list, factory) autorelease];
}

void OrgApacheCommonsCollections15ListLazyList_initWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(OrgApacheCommonsCollections15ListLazyList *self, id<JavaUtilList> list, id<OrgApacheCommonsCollections15Factory> factory) {
  OrgApacheCommonsCollections15ListAbstractSerializableListDecorator_initWithJavaUtilList_(self, list);
  if (factory == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Factory must not be null") autorelease];
  }
  OrgApacheCommonsCollections15ListLazyList_set_factory_(self, factory);
}

OrgApacheCommonsCollections15ListLazyList *new_OrgApacheCommonsCollections15ListLazyList_initWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(id<JavaUtilList> list, id<OrgApacheCommonsCollections15Factory> factory) {
  OrgApacheCommonsCollections15ListLazyList *self = [OrgApacheCommonsCollections15ListLazyList alloc];
  OrgApacheCommonsCollections15ListLazyList_initWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(self, list, factory);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListLazyList)
