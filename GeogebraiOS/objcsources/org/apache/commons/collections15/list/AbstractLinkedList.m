//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/list/AbstractLinkedList.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/reflect/Array.h"
#include "java/util/AbstractList.h"
#include "java/util/Collection.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/commons/collections15/list/AbstractLinkedList.h"

@interface OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList () {
 @public
  OrgApacheCommonsCollections15ListAbstractLinkedList *parent_;
  jint offset_;
  jint size__;
  jint expectedModCount_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList, parent_, OrgApacheCommonsCollections15ListAbstractLinkedList *)

@implementation OrgApacheCommonsCollections15ListAbstractLinkedList

- (instancetype)init {
  OrgApacheCommonsCollections15ListAbstractLinkedList_init(self);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  OrgApacheCommonsCollections15ListAbstractLinkedList_initWithJavaUtilCollection_(self, coll);
  return self;
}

- (void)init__ {
  OrgApacheCommonsCollections15ListAbstractLinkedList_set_header_(self, [self createHeaderNode]);
}

- (jint)size {
  return size__;
}

- (jboolean)isEmpty {
  return [self size] == 0;
}

- (id)getWithInt:(jint)index {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = [self getNodeWithInt:index withBoolean:NO];
  return [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue];
}

- (id<JavaUtilIterator>)iterator {
  return [self listIterator];
}

- (id<JavaUtilListIterator>)listIterator {
  return [new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_(self, 0) autorelease];
}

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)fromIndex {
  return [new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_(self, fromIndex) autorelease];
}

- (jint)indexOfWithId:(id)value {
  jint i = 0;
  for (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->next_; node != header_; node = node->next_) {
    if ([self isEqualValueWithId:[((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue] withId:(id) value]) {
      return i;
    }
    i++;
  }
  return -1;
}

- (jint)lastIndexOfWithId:(id)value {
  jint i = size__ - 1;
  for (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->previous_; node != header_; node = node->previous_) {
    if ([self isEqualValueWithId:[((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue] withId:(id) value]) {
      return i;
    }
    i--;
  }
  return -1;
}

- (jboolean)containsWithId:(id)value {
  return [self indexOfWithId:value] != -1;
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(coll)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if ([self containsWithId:[it next]] == NO) {
      return NO;
    }
  }
  return YES;
}

- (IOSObjectArray *)toArray {
  return [self toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:size__ type:NSObject_class_()]];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  if (((IOSObjectArray *) nil_chk(array))->size_ < size__) {
    IOSClass *componentType = [[array getClass] getComponentType];
    array = (IOSObjectArray *) check_class_cast(JavaLangReflectArray_newInstanceWithIOSClass_withInt_(componentType, size__), [IOSObjectArray class]);
  }
  jint i = 0;
  for (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->next_; node != header_; node = node->next_, i++) {
    IOSObjectArray_Set(nil_chk(array), i, (id) [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue]);
  }
  if (((IOSObjectArray *) nil_chk(array))->size_ > size__) {
    IOSObjectArray_Set(array, size__, nil);
  }
  return array;
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndexInclusive
                           withInt:(jint)toIndexExclusive {
  return [new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_withInt_(self, fromIndexInclusive, toIndexExclusive) autorelease];
}

- (jboolean)addWithId:(id)value {
  [self addLastWithId:value];
  return YES;
}

- (void)addWithInt:(jint)index
            withId:(id)value {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = [self getNodeWithInt:index withBoolean:YES];
  [self addNodeBeforeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node withId:value];
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  return [self addAllWithInt:size__ withJavaUtilCollection:coll];
}

- (jboolean)addAllWithInt:(jint)index
   withJavaUtilCollection:(id<JavaUtilCollection>)coll {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = [self getNodeWithInt:index withBoolean:YES];
  for (id<JavaUtilIterator> itr = [((id<JavaUtilCollection>) nil_chk(coll)) iterator]; [((id<JavaUtilIterator>) nil_chk(itr)) hasNext]; ) {
    id value = [itr next];
    [self addNodeBeforeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node withId:(id) value];
  }
  return YES;
}

- (id)removeWithInt:(jint)index {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = [self getNodeWithInt:index withBoolean:NO];
  id oldValue = [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue];
  [self removeNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node];
  return oldValue;
}

- (jboolean)removeWithId:(id)value {
  for (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->next_; node != header_; node = node->next_) {
    if ([self isEqualValueWithId:[((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue] withId:(id) value]) {
      [self removeNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node];
      return YES;
    }
  }
  return NO;
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  jboolean modified = NO;
  id<JavaUtilIterator> it = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if ([((id<JavaUtilCollection>) nil_chk(coll)) containsWithId:[it next]]) {
      [it remove];
      modified = YES;
    }
  }
  return modified;
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  jboolean modified = NO;
  id<JavaUtilIterator> it = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if ([((id<JavaUtilCollection>) nil_chk(coll)) containsWithId:[it next]] == NO) {
      [it remove];
      modified = YES;
    }
  }
  return modified;
}

- (id)setWithInt:(jint)index
          withId:(id)value {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = [self getNodeWithInt:index withBoolean:NO];
  id oldValue = [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue];
  [self updateNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node withId:value];
  return oldValue;
}

- (void)clear {
  [self removeAllNodes];
}

- (id)getFirst {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->next_;
  if (node == header_) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  return [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue];
}

- (id)getLast {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->previous_;
  if (node == header_) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  return [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue];
}

- (jboolean)addFirstWithId:(id)o {
  [self addNodeAfterWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:header_ withId:o];
  return YES;
}

- (jboolean)addLastWithId:(id)o {
  [self addNodeBeforeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:header_ withId:o];
  return YES;
}

- (id)removeFirst {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->next_;
  if (node == header_) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  id oldValue = [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue];
  [self removeNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node];
  return oldValue;
}

- (id)removeLast {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->previous_;
  if (node == header_) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  id oldValue = [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) getValue];
  [self removeNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node];
  return oldValue;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([JavaUtilList_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilList> other = (id<JavaUtilList>) check_protocol_cast(obj, @protocol(JavaUtilList));
  if ([((id<JavaUtilList>) nil_chk(other)) size] != [self size]) {
    return NO;
  }
  id<JavaUtilListIterator> it1 = [self listIterator];
  id<JavaUtilListIterator> it2 = [other listIterator];
  while ([((id<JavaUtilListIterator>) nil_chk(it1)) hasNext] && [((id<JavaUtilListIterator>) nil_chk(it2)) hasNext]) {
    id o1 = [it1 next];
    id o2 = [((id<JavaUtilListIterator>) nil_chk(it2)) next];
    if (!(o1 == nil ? o2 == nil : [o1 isEqual:o2])) return NO;
  }
  return !([it1 hasNext] || [((id<JavaUtilListIterator>) nil_chk(it2)) hasNext]);
}

- (NSUInteger)hash {
  jint hashCode = 1;
  id<JavaUtilIterator> it = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id obj = [it next];
    hashCode = 31 * hashCode + (obj == nil ? 0 : ((jint) [obj hash]));
  }
  return hashCode;
}

- (NSString *)description {
  if ([self size] == 0) {
    return @"[]";
  }
  JavaLangStringBuffer *buf = [new_JavaLangStringBuffer_initWithInt_(16 * [self size]) autorelease];
  [buf appendWithNSString:@"["];
  id<JavaUtilIterator> it = [self iterator];
  jboolean hasNext = [((id<JavaUtilIterator>) nil_chk(it)) hasNext];
  while (hasNext) {
    id value = [it next];
    [buf appendWithId:value == self ? @"(this Collection)" : value];
    hasNext = [it hasNext];
    if (hasNext) {
      [buf appendWithNSString:@", "];
    }
  }
  [buf appendWithNSString:@"]"];
  return [buf description];
}

- (jboolean)isEqualValueWithId:(id)value1
                        withId:(id)value2 {
  return (value1 == value2 || (value1 == nil ? NO : [value1 isEqual:value2]));
}

- (void)updateNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)node
                                                                        withId:(id)value {
  [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node)) setValueWithId:value];
}

- (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)createHeaderNode {
  return [new_OrgApacheCommonsCollections15ListAbstractLinkedList_Node_init() autorelease];
}

- (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)createNodeWithId:(id)value {
  return [new_OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithId_(value) autorelease];
}

- (void)addNodeBeforeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)node
                                                                           withId:(id)value {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *newNode = [self createNodeWithId:value];
  [self addNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:newNode withOrgApacheCommonsCollections15ListAbstractLinkedList_Node:node];
}

- (void)addNodeAfterWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)node
                                                                          withId:(id)value {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *newNode = [self createNodeWithId:value];
  [self addNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:newNode withOrgApacheCommonsCollections15ListAbstractLinkedList_Node:((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node))->next_];
}

- (void)addNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)nodeToInsert
               withOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)insertBeforeNode {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_next_(nil_chk(nodeToInsert), insertBeforeNode);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_previous_(nodeToInsert, ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(insertBeforeNode))->previous_);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_next_(nil_chk(insertBeforeNode->previous_), nodeToInsert);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_previous_(insertBeforeNode, nodeToInsert);
  size__++;
  modCount_++;
}

- (void)removeNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)node {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_next_(nil_chk(((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node))->previous_), node->next_);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_previous_(nil_chk(node->next_), node->previous_);
  size__--;
  modCount_++;
}

- (void)removeAllNodes {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_next_(nil_chk(header_), header_);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_previous_(header_, header_);
  size__ = 0;
  modCount_++;
}

- (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)getNodeWithInt:(jint)index
                                                                 withBoolean:(jboolean)endMarkerAllowed {
  if (index < 0) {
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$", @"Couldn't get the node: index (", index, @") less than zero.")) autorelease];
  }
  if (!endMarkerAllowed && index == size__) {
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$", @"Couldn't get the node: index (", index, @") is the size of the list.")) autorelease];
  }
  if (index > size__) {
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I$", @"Couldn't get the node: index (", index, @") greater than the size of the list (", size__, @").")) autorelease];
  }
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *node;
  if (index < (size__ / 2)) {
    node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(header_))->next_;
    for (jint currentIndex = 0; currentIndex < index; currentIndex++) {
      node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node))->next_;
    }
  }
  else {
    node = header_;
    for (jint currentIndex = size__; currentIndex > index; currentIndex--) {
      node = ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(node))->previous_;
    }
  }
  return node;
}

- (id<JavaUtilIterator>)createSubListIteratorWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *)subList {
  return [self createSubListListIteratorWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:subList withInt:0];
}

- (id<JavaUtilListIterator>)createSubListListIteratorWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *)subList
                                                                                                                   withInt:(jint)fromIndex {
  return [new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_withInt_(subList, fromIndex) autorelease];
}

- (void)doWriteObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outputStream {
  [((JavaIoObjectOutputStream *) nil_chk(outputStream)) writeIntWithInt:[self size]];
  for (id<JavaUtilIterator> itr = [self iterator]; [((id<JavaUtilIterator>) nil_chk(itr)) hasNext]; ) {
    [outputStream writeObjectWithId:[itr next]];
  }
}

- (void)doReadObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inputStream {
  [self init__];
  jint size = [((JavaIoObjectInputStream *) nil_chk(inputStream)) readInt];
  for (jint i = 0; i < size; i++) {
    [self addWithId:(id) [inputStream readObject]];
  }
}

- (void)dealloc {
  RELEASE_(header_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractLinkedList", NULL, 0x4, NULL, NULL },
    { "initWithJavaUtilCollection:", "AbstractLinkedList", NULL, 0x4, NULL, NULL },
    { "init__", "init", "V", 0x4, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "listIterator", NULL, "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "listIteratorWithInt:", "listIterator", "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "indexOfWithId:", "indexOf", "I", 0x1, NULL, NULL },
    { "lastIndexOfWithId:", "lastIndexOf", "I", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;)[TT;" },
    { "subListWithInt:withInt:", "subList", "Ljava.util.List;", 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "addWithInt:withId:", "add", "V", 0x1, NULL, "(ITE;)V" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "addAllWithInt:withJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "removeWithInt:", "remove", "TE;", 0x1, NULL, "(I)TE;" },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "setWithInt:withId:", "set", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getFirst", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "getLast", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "addFirstWithId:", "addFirst", "Z", 0x1, NULL, "(TE;)Z" },
    { "addLastWithId:", "addLast", "Z", 0x1, NULL, "(TE;)Z" },
    { "removeFirst", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "removeLast", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEqualValueWithId:withId:", "isEqualValue", "Z", 0x4, NULL, "(TE;TE;)Z" },
    { "updateNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:withId:", "updateNode", "V", 0x4, NULL, "(Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TE;>;TE;)V" },
    { "createHeaderNode", NULL, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", 0x4, NULL, NULL },
    { "createNodeWithId:", "createNode", "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", 0x4, NULL, "(TE;)Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TE;>;" },
    { "addNodeBeforeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:withId:", "addNodeBefore", "V", 0x4, NULL, "(Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TE;>;TE;)V" },
    { "addNodeAfterWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:withId:", "addNodeAfter", "V", 0x4, NULL, "(Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TE;>;TE;)V" },
    { "addNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:withOrgApacheCommonsCollections15ListAbstractLinkedList_Node:", "addNode", "V", 0x4, NULL, NULL },
    { "removeNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:", "removeNode", "V", 0x4, NULL, NULL },
    { "removeAllNodes", NULL, "V", 0x4, NULL, NULL },
    { "getNodeWithInt:withBoolean:", "getNode", "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", 0x4, "Ljava.lang.IndexOutOfBoundsException;", NULL },
    { "createSubListIteratorWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:", "createSubListIterator", "Ljava.util.Iterator;", 0x4, NULL, NULL },
    { "createSubListListIteratorWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:withInt:", "createSubListListIterator", "Ljava.util.ListIterator;", 0x4, NULL, NULL },
    { "doWriteObjectWithJavaIoObjectOutputStream:", "doWriteObject", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "doReadObjectWithJavaIoObjectInputStream:", "doReadObject", "V", 0x4, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "header_", NULL, 0x84, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TE;>;",  },
    { "size__", "size", 0x84, "I", NULL, NULL,  },
    { "modCount_", NULL, 0x84, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", "Lorg.apache.commons.collections15.list.AbstractLinkedList$LinkedListIterator;", "Lorg.apache.commons.collections15.list.AbstractLinkedList$LinkedSubListIterator;", "Lorg.apache.commons.collections15.list.AbstractLinkedList$LinkedSubList;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListAbstractLinkedList = { 2, "AbstractLinkedList", "org.apache.commons.collections15.list", NULL, 0x401, 49, methods, 3, fields, 0, NULL, 4, inner_classes, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/List<TE;>;" };
  return &_OrgApacheCommonsCollections15ListAbstractLinkedList;
}

@end

void OrgApacheCommonsCollections15ListAbstractLinkedList_init(OrgApacheCommonsCollections15ListAbstractLinkedList *self) {
  NSObject_init(self);
}

void OrgApacheCommonsCollections15ListAbstractLinkedList_initWithJavaUtilCollection_(OrgApacheCommonsCollections15ListAbstractLinkedList *self, id<JavaUtilCollection> coll) {
  NSObject_init(self);
  [self init__];
  [self addAllWithJavaUtilCollection:coll];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListAbstractLinkedList)

@implementation OrgApacheCommonsCollections15ListAbstractLinkedList_Node

- (instancetype)init {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_init(self);
  return self;
}

- (instancetype)initWithId:(id)value {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithId_(self, value);
  return self;
}

- (instancetype)initWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)previous
                    withOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)next
                                                                          withId:(id)value {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withId_(self, previous, next, value);
  return self;
}

- (id)getValue {
  return value_;
}

- (void)setValueWithId:(id)value {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_value_(self, value);
}

- (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)getPreviousNode {
  return previous_;
}

- (void)setPreviousNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)previous {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_previous_(self, previous);
}

- (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)getNextNode {
  return next_;
}

- (void)setNextNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)next {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_next_(self, next);
}

- (void)dealloc {
  RELEASE_(previous_);
  RELEASE_(next_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Node", NULL, 0x4, NULL, NULL },
    { "initWithId:", "Node", NULL, 0x4, NULL, "(TT;)V" },
    { "initWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:withOrgApacheCommonsCollections15ListAbstractLinkedList_Node:withId:", "Node", NULL, 0x4, NULL, "(Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TT;>;Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TT;>;TT;)V" },
    { "getValue", NULL, "TT;", 0x4, NULL, "()TT;" },
    { "setValueWithId:", "setValue", "V", 0x4, NULL, "(TT;)V" },
    { "getPreviousNode", NULL, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", 0x4, NULL, NULL },
    { "setPreviousNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:", "setPreviousNode", "V", 0x4, NULL, NULL },
    { "getNextNode", NULL, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", 0x4, NULL, NULL },
    { "setNextNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:", "setNextNode", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "previous_", NULL, 0x4, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TT;>;",  },
    { "next_", NULL, 0x4, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TT;>;",  },
    { "value_", NULL, 0x4, "TT;", NULL, "TT;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListAbstractLinkedList_Node = { 2, "Node", "org.apache.commons.collections15.list", "AbstractLinkedList", 0xc, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheCommonsCollections15ListAbstractLinkedList_Node;
}

@end

void OrgApacheCommonsCollections15ListAbstractLinkedList_Node_init(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *self) {
  NSObject_init(self);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_previous_(self, self);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_next_(self, self);
}

OrgApacheCommonsCollections15ListAbstractLinkedList_Node *new_OrgApacheCommonsCollections15ListAbstractLinkedList_Node_init() {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *self = [OrgApacheCommonsCollections15ListAbstractLinkedList_Node alloc];
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_init(self);
  return self;
}

void OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithId_(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *self, id value) {
  NSObject_init(self);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_value_(self, value);
}

OrgApacheCommonsCollections15ListAbstractLinkedList_Node *new_OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithId_(id value) {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *self = [OrgApacheCommonsCollections15ListAbstractLinkedList_Node alloc];
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithId_(self, value);
  return self;
}

void OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withId_(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *self, OrgApacheCommonsCollections15ListAbstractLinkedList_Node *previous, OrgApacheCommonsCollections15ListAbstractLinkedList_Node *next, id value) {
  NSObject_init(self);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_previous_(self, previous);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_next_(self, next);
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_set_value_(self, value);
}

OrgApacheCommonsCollections15ListAbstractLinkedList_Node *new_OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withId_(OrgApacheCommonsCollections15ListAbstractLinkedList_Node *previous, OrgApacheCommonsCollections15ListAbstractLinkedList_Node *next, id value) {
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node *self = [OrgApacheCommonsCollections15ListAbstractLinkedList_Node alloc];
  OrgApacheCommonsCollections15ListAbstractLinkedList_Node_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withOrgApacheCommonsCollections15ListAbstractLinkedList_Node_withId_(self, previous, next, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListAbstractLinkedList_Node)

@implementation OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator

- (instancetype)initWithOrgApacheCommonsCollections15ListAbstractLinkedList:(OrgApacheCommonsCollections15ListAbstractLinkedList *)parent
                                                                    withInt:(jint)fromIndex {
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_(self, parent, fromIndex);
  return self;
}

- (void)checkModCount {
  if (((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_))->modCount_ != expectedModCount_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
}

- (OrgApacheCommonsCollections15ListAbstractLinkedList_Node *)getLastNodeReturned {
  if (current_ == nil) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  return current_;
}

- (jboolean)hasNext {
  return next__ != ((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_))->header_;
}

- (id)next {
  [self checkModCount];
  if (![self hasNext]) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(JreStrcat("$IC", @"No element at index ", nextIndex__, '.')) autorelease];
  }
  id value = [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(next__)) getValue];
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_current_(self, next__);
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_next__(self, next__->next_);
  nextIndex__++;
  return value;
}

- (jboolean)hasPrevious {
  return ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(next__))->previous_ != ((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_))->header_;
}

- (id)previous {
  [self checkModCount];
  if (![self hasPrevious]) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(@"Already at start of list.") autorelease];
  }
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_next__(self, ((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(next__))->previous_);
  id value = [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk(next__)) getValue];
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_current_(self, next__);
  nextIndex__--;
  return value;
}

- (jint)nextIndex {
  return nextIndex__;
}

- (jint)previousIndex {
  return [self nextIndex] - 1;
}

- (void)remove {
  [self checkModCount];
  [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) removeNodeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:[self getLastNodeReturned]];
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_current_(self, nil);
  nextIndex__--;
  expectedModCount_++;
}

- (void)setWithId:(id)obj {
  [self checkModCount];
  [((OrgApacheCommonsCollections15ListAbstractLinkedList_Node *) nil_chk([self getLastNodeReturned])) setValueWithId:obj];
}

- (void)addWithId:(id)obj {
  [self checkModCount];
  [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) addNodeBeforeWithOrgApacheCommonsCollections15ListAbstractLinkedList_Node:next__ withId:obj];
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_current_(self, nil);
  nextIndex__++;
  expectedModCount_++;
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(next__);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15ListAbstractLinkedList:withInt:", "LinkedListIterator", NULL, 0x4, "Ljava.lang.IndexOutOfBoundsException;", NULL },
    { "checkModCount", NULL, "V", 0x4, NULL, NULL },
    { "getLastNodeReturned", NULL, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", 0x4, "Ljava.lang.IllegalStateException;", NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "previous", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "nextIndex", NULL, "I", 0x1, NULL, NULL },
    { "previousIndex", NULL, "I", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "setWithId:", "set", "V", 0x1, NULL, "(TE;)V" },
    { "addWithId:", "add", "V", 0x1, NULL, "(TE;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.list.AbstractLinkedList;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList<TE;>;",  },
    { "next__", "next", 0x4, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TE;>;",  },
    { "nextIndex__", "nextIndex", 0x4, "I", NULL, NULL,  },
    { "current_", NULL, 0x4, "Lorg.apache.commons.collections15.list.AbstractLinkedList$Node;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList$Node<TE;>;",  },
    { "expectedModCount_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator = { 2, "LinkedListIterator", "org.apache.commons.collections15.list", "AbstractLinkedList", 0xc, 12, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/ListIterator<TE;>;Lorg/apache/commons/collections15/OrderedIterator<TE;>;" };
  return &_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator;
}

@end

void OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator *self, OrgApacheCommonsCollections15ListAbstractLinkedList *parent, jint fromIndex) {
  NSObject_init(self);
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_parent_(self, parent);
  self->expectedModCount_ = ((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent))->modCount_;
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_set_next__(self, [parent getNodeWithInt:fromIndex withBoolean:YES]);
  self->nextIndex__ = fromIndex;
}

OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator *new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_(OrgApacheCommonsCollections15ListAbstractLinkedList *parent, jint fromIndex) {
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator *self = [OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator alloc];
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_(self, parent, fromIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator)

@implementation OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator

- (instancetype)initWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *)sub
                                                                                  withInt:(jint)startIndex {
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_withInt_(self, sub, startIndex);
  return self;
}

- (jboolean)hasNext {
  return ([self nextIndex] < ((OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *) nil_chk(sub_))->size__);
}

- (jboolean)hasPrevious {
  return ([self previousIndex] >= 0);
}

- (jint)nextIndex {
  return ([super nextIndex] - ((OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *) nil_chk(sub_))->offset_);
}

- (void)addWithId:(id)obj {
  [super addWithId:obj];
  ((OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *) nil_chk(sub_))->expectedModCount_ = ((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_))->modCount_;
  sub_->size__++;
}

- (void)remove {
  [super remove];
  ((OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *) nil_chk(sub_))->expectedModCount_ = ((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_))->modCount_;
  sub_->size__--;
}

- (void)dealloc {
  RELEASE_(sub_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:withInt:", "LinkedSubListIterator", NULL, 0x4, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "nextIndex", NULL, "I", 0x1, NULL, NULL },
    { "addWithId:", "add", "V", 0x1, NULL, "(TE;)V" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sub_", NULL, 0x14, "Lorg.apache.commons.collections15.list.AbstractLinkedList$LinkedSubList;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList$LinkedSubList<TE;>;",  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator = { 2, "LinkedSubListIterator", "org.apache.commons.collections15.list", "AbstractLinkedList", 0xc, 6, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Lorg/apache/commons/collections15/list/AbstractLinkedList$LinkedListIterator<TE;>;" };
  return &_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator;
}

@end

void OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_withInt_(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator *self, OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *sub, jint startIndex) {
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_(self, ((OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *) nil_chk(sub))->parent_, startIndex + sub->offset_);
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator_set_sub_(self, sub);
}

OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator *new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_withInt_(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *sub, jint startIndex) {
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator *self = [OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator alloc];
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_withInt_(self, sub, startIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubListIterator)

@implementation OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList

- (instancetype)initWithOrgApacheCommonsCollections15ListAbstractLinkedList:(OrgApacheCommonsCollections15ListAbstractLinkedList *)parent
                                                                    withInt:(jint)fromIndex
                                                                    withInt:(jint)toIndex {
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_withInt_(self, parent, fromIndex, toIndex);
  return self;
}

- (jint)size {
  [self checkModCount];
  return size__;
}

- (id)getWithInt:(jint)index {
  [self rangeCheckWithInt:index withInt:size__];
  [self checkModCount];
  return [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) getWithInt:index + offset_];
}

- (void)addWithInt:(jint)index
            withId:(id)obj {
  [self rangeCheckWithInt:index withInt:size__ + 1];
  [self checkModCount];
  [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) addWithInt:index + offset_ withId:obj];
  expectedModCount_ = parent_->modCount_;
  size__++;
  self->modCount_++;
}

- (id)removeWithInt:(jint)index {
  [self rangeCheckWithInt:index withInt:size__];
  [self checkModCount];
  id result = [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) removeWithInt:index + offset_];
  expectedModCount_ = parent_->modCount_;
  size__--;
  self->modCount_++;
  return result;
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  return [self addAllWithInt:size__ withJavaUtilCollection:coll];
}

- (jboolean)addAllWithInt:(jint)index
   withJavaUtilCollection:(id<JavaUtilCollection>)coll {
  [self rangeCheckWithInt:index withInt:size__ + 1];
  jint cSize = [((id<JavaUtilCollection>) nil_chk(coll)) size];
  if (cSize == 0) {
    return NO;
  }
  [self checkModCount];
  [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) addAllWithInt:offset_ + index withJavaUtilCollection:coll];
  expectedModCount_ = parent_->modCount_;
  size__ += cSize;
  self->modCount_++;
  return YES;
}

- (id)setWithInt:(jint)index
          withId:(id)obj {
  [self rangeCheckWithInt:index withInt:size__];
  [self checkModCount];
  return [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) setWithInt:index + offset_ withId:obj];
}

- (void)clear {
  [self checkModCount];
  id<JavaUtilIterator> it = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    [it next];
    [it remove];
  }
}

- (id<JavaUtilIterator>)iterator {
  [self checkModCount];
  return [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) createSubListIteratorWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:self];
}

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)index {
  [self rangeCheckWithInt:index withInt:size__ + 1];
  [self checkModCount];
  return [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_)) createSubListListIteratorWithOrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList:self withInt:index];
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndexInclusive
                           withInt:(jint)toIndexExclusive {
  return [new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_withInt_(parent_, fromIndexInclusive + offset_, toIndexExclusive + offset_) autorelease];
}

- (void)rangeCheckWithInt:(jint)index
                  withInt:(jint)beyond {
  if (index < 0 || index >= beyond) {
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$IC", @"Index '", index, @"' out of bounds for size '", size__, '\'')) autorelease];
  }
}

- (void)checkModCount {
  if (((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent_))->modCount_ != expectedModCount_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15ListAbstractLinkedList:withInt:withInt:", "LinkedSubList", NULL, 0x4, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "addWithInt:withId:", "add", "V", 0x1, NULL, "(ITE;)V" },
    { "removeWithInt:", "remove", "TE;", 0x1, NULL, "(I)TE;" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "addAllWithInt:withJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "setWithInt:withId:", "set", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "listIteratorWithInt:", "listIterator", "Ljava.util.ListIterator;", 0x1, NULL, NULL },
    { "subListWithInt:withInt:", "subList", "Ljava.util.List;", 0x1, NULL, NULL },
    { "rangeCheckWithInt:withInt:", "rangeCheck", "V", 0x4, NULL, NULL },
    { "checkModCount", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x2, "Lorg.apache.commons.collections15.list.AbstractLinkedList;", NULL, "Lorg/apache/commons/collections15/list/AbstractLinkedList<TE;>;",  },
    { "offset_", NULL, 0x2, "I", NULL, NULL,  },
    { "size__", "size", 0x2, "I", NULL, NULL,  },
    { "expectedModCount_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList = { 2, "LinkedSubList", "org.apache.commons.collections15.list", "AbstractLinkedList", 0xc, 14, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;" };
  return &_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList;
}

@end

void OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_withInt_(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *self, OrgApacheCommonsCollections15ListAbstractLinkedList *parent, jint fromIndex, jint toIndex) {
  JavaUtilAbstractList_init(self);
  if (fromIndex < 0) {
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I", @"fromIndex = ", fromIndex)) autorelease];
  }
  if (toIndex > [((OrgApacheCommonsCollections15ListAbstractLinkedList *) nil_chk(parent)) size]) {
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I", @"toIndex = ", toIndex)) autorelease];
  }
  if (fromIndex > toIndex) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"fromIndex(", fromIndex, @") > toIndex(", toIndex, ')')) autorelease];
  }
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_set_parent_(self, parent);
  self->offset_ = fromIndex;
  self->size__ = toIndex - fromIndex;
  self->expectedModCount_ = parent->modCount_;
}

OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *new_OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_withInt_(OrgApacheCommonsCollections15ListAbstractLinkedList *parent, jint fromIndex, jint toIndex) {
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList *self = [OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList alloc];
  OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList_initWithOrgApacheCommonsCollections15ListAbstractLinkedList_withInt_withInt_(self, parent, fromIndex, toIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15ListAbstractLinkedList_LinkedSubList)
