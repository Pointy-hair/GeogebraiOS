//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/bidimap/AbstractDualBidiMap.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/BidiMap.h"
#include "org/apache/commons/collections15/MapIterator.h"
#include "org/apache/commons/collections15/bidimap/AbstractDualBidiMap.h"
#include "org/apache/commons/collections15/collection/AbstractCollectionDecorator.h"
#include "org/apache/commons/collections15/iterators/AbstractIteratorDecorator.h"
#include "org/apache/commons/collections15/keyvalue/AbstractMapEntryDecorator.h"

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap

- (instancetype)init {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_init(self);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)normalMap
                    withJavaUtilMap:(id<JavaUtilMap>)reverseMap {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_(self, normalMap, reverseMap);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)normalMap
                    withJavaUtilMap:(id<JavaUtilMap>)reverseMap
withOrgApacheCommonsCollections15BidiMap:(id<OrgApacheCommonsCollections15BidiMap>)inverseBidiMap {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(self, normalMap, reverseMap, inverseBidiMap);
  return self;
}

- (id<JavaUtilMap>)createMap {
  return nil;
}

- (id<OrgApacheCommonsCollections15BidiMap>)createBidiMapWithJavaUtilMap:(id<JavaUtilMap>)normalMap
                                                         withJavaUtilMap:(id<JavaUtilMap>)reverseMap
                                withOrgApacheCommonsCollections15BidiMap:(id<OrgApacheCommonsCollections15BidiMap>)inverseMap {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getWithId:(id)key {
  return [((id<JavaUtilMap>) nil_chk(forwardMap_)) getWithId:key];
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(forwardMap_)) size];
}

- (jboolean)isEmpty {
  return [((id<JavaUtilMap>) nil_chk(forwardMap_)) isEmpty];
}

- (jboolean)containsKeyWithId:(id)key {
  return [((id<JavaUtilMap>) nil_chk(forwardMap_)) containsKeyWithId:key];
}

- (jboolean)isEqual:(id)obj {
  return [((id<JavaUtilMap>) nil_chk(forwardMap_)) isEqual:obj];
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilMap>) nil_chk(forwardMap_)) hash]);
}

- (NSString *)description {
  return [((id<JavaUtilMap>) nil_chk(forwardMap_)) description];
}

- (id)putWithId:(id)key
         withId:(id)value {
  if ([((id<JavaUtilMap>) nil_chk(forwardMap_)) containsKeyWithId:key]) {
    [((id<JavaUtilMap>) nil_chk(inverseMap_)) removeWithId:[forwardMap_ getWithId:key]];
  }
  if ([((id<JavaUtilMap>) nil_chk(inverseMap_)) containsKeyWithId:value]) {
    [forwardMap_ removeWithId:[inverseMap_ getWithId:value]];
  }
  id obj = [forwardMap_ putWithId:key withId:value];
  [inverseMap_ putWithId:value withId:key];
  return obj;
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
    [self putWithId:(id) [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:(id) [entry_ getValue]];
  }
}

- (id)removeWithId:(id)key {
  id value = nil;
  if ([((id<JavaUtilMap>) nil_chk(forwardMap_)) containsKeyWithId:key]) {
    value = [forwardMap_ removeWithId:key];
    [((id<JavaUtilMap>) nil_chk(inverseMap_)) removeWithId:value];
  }
  return value;
}

- (void)clear {
  [((id<JavaUtilMap>) nil_chk(forwardMap_)) clear];
  [((id<JavaUtilMap>) nil_chk(inverseMap_)) clear];
}

- (jboolean)containsValueWithId:(id)value {
  return [((id<JavaUtilMap>) nil_chk(inverseMap_)) containsKeyWithId:value];
}

- (id<OrgApacheCommonsCollections15MapIterator>)mapIterator {
  return [new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self) autorelease];
}

- (id)getKeyWithId:(id)value {
  return [((id<JavaUtilMap>) nil_chk(inverseMap_)) getWithId:value];
}

- (id)removeValueWithId:(id)value {
  id key = nil;
  if ([((id<JavaUtilMap>) nil_chk(inverseMap_)) containsKeyWithId:value]) {
    key = [inverseMap_ removeWithId:value];
    [((id<JavaUtilMap>) nil_chk(forwardMap_)) removeWithId:key];
  }
  return key;
}

- (id<OrgApacheCommonsCollections15BidiMap>)inverseBidiMap {
  if (inverseBidiMap__ == nil) {
    OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseBidiMap__(self, [self createBidiMapWithJavaUtilMap:inverseMap_ withJavaUtilMap:forwardMap_ withOrgApacheCommonsCollections15BidiMap:self]);
  }
  return inverseBidiMap__;
}

- (id<JavaUtilSet>)keySet {
  if (keySet__ == nil) {
    OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_setAndConsume_keySet__(self, new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self));
  }
  return keySet__;
}

- (id<JavaUtilIterator>)createKeySetIteratorWithJavaUtilIterator:(id<JavaUtilIterator>)iterator {
  return [new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(iterator, self) autorelease];
}

- (id<JavaUtilSet>)values {
  if (values__ == nil) {
    OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_setAndConsume_values__(self, new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self));
  }
  return values__;
}

- (id<JavaUtilIterator>)createValuesIteratorWithJavaUtilIterator:(id<JavaUtilIterator>)iterator {
  return [new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(iterator, self) autorelease];
}

- (id<JavaUtilSet>)entrySet {
  if (entrySet__ == nil) {
    OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_setAndConsume_entrySet__(self, new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self));
  }
  return entrySet__;
}

- (id<JavaUtilIterator>)createEntrySetIteratorWithJavaUtilIterator:(id<JavaUtilIterator>)iterator {
  return [new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(iterator, self) autorelease];
}

- (void)dealloc {
  RELEASE_(forwardMap_);
  RELEASE_(inverseMap_);
  RELEASE_(inverseBidiMap__);
  RELEASE_(keySet__);
  RELEASE_(values__);
  RELEASE_(entrySet__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractDualBidiMap", NULL, 0x4, NULL, NULL },
    { "initWithJavaUtilMap:withJavaUtilMap:", "AbstractDualBidiMap", NULL, 0x4, NULL, NULL },
    { "initWithJavaUtilMap:withJavaUtilMap:withOrgApacheCommonsCollections15BidiMap:", "AbstractDualBidiMap", NULL, 0x4, NULL, NULL },
    { "createMap", NULL, "Ljava.util.Map;", 0x4, NULL, NULL },
    { "createBidiMapWithJavaUtilMap:withJavaUtilMap:withOrgApacheCommonsCollections15BidiMap:", "createBidiMap", "Lorg.apache.commons.collections15.BidiMap;", 0x404, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/util/Map<TV;TK;>;Lorg/apache/commons/collections15/BidiMap<TV;TK;>;)Lorg/apache/commons/collections15/BidiMap<TK;TV;>;" },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(TK;TV;)TV;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "mapIterator", NULL, "Lorg.apache.commons.collections15.MapIterator;", 0x1, NULL, NULL },
    { "getKeyWithId:", "getKey", "TK;", 0x1, NULL, "(Ljava/lang/Object;)TK;" },
    { "removeValueWithId:", "removeValue", "TK;", 0x1, NULL, "(Ljava/lang/Object;)TK;" },
    { "inverseBidiMap", NULL, "Lorg.apache.commons.collections15.BidiMap;", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "createKeySetIteratorWithJavaUtilIterator:", "createKeySetIterator", "Ljava.util.Iterator;", 0x4, NULL, NULL },
    { "values", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "createValuesIteratorWithJavaUtilIterator:", "createValuesIterator", "Ljava.util.Iterator;", 0x4, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "createEntrySetIteratorWithJavaUtilIterator:", "createEntrySetIterator", "Ljava.util.Iterator;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "forwardMap_", NULL, 0x84, "Ljava.util.Map;", NULL, "Ljava/util/Map<TK;TV;>;",  },
    { "inverseMap_", NULL, 0x84, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;TK;>;",  },
    { "inverseBidiMap__", "inverseBidiMap", 0x84, "Lorg.apache.commons.collections15.BidiMap;", NULL, "Lorg/apache/commons/collections15/BidiMap<TV;TK;>;",  },
    { "keySet__", "keySet", 0x84, "Ljava.util.Set;", NULL, "Ljava/util/Set<TK;>;",  },
    { "values__", "values", 0x84, "Ljava.util.Set;", NULL, "Ljava/util/Set<TV;>;",  },
    { "entrySet__", "entrySet", 0x84, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$View;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$KeySet;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$KeySetIterator;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$Values;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$ValuesIterator;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$EntrySet;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$EntrySetIterator;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$MapEntry;", "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap$BidiMapIterator;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap = { 2, "AbstractDualBidiMap", "org.apache.commons.collections15.bidimap", NULL, 0x401, 27, methods, 6, fields, 0, NULL, 9, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/BidiMap<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_init(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *self) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseBidiMap__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_keySet__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_values__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_entrySet__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_forwardMap_(self, [self createMap]);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseMap_(self, [self createMap]);
}

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *self, id<JavaUtilMap> normalMap, id<JavaUtilMap> reverseMap) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseBidiMap__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_keySet__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_values__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_entrySet__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_forwardMap_(self, normalMap);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseMap_(self, reverseMap);
}

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *self, id<JavaUtilMap> normalMap, id<JavaUtilMap> reverseMap, id<OrgApacheCommonsCollections15BidiMap> inverseBidiMap) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseBidiMap__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_keySet__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_values__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_entrySet__(self, nil);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_forwardMap_(self, normalMap);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseMap_(self, reverseMap);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_set_inverseBidiMap__(self, inverseBidiMap);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)coll
withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View_initWithJavaUtilCollection_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, coll, parent);
  return self;
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  if ([((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) isEmpty] || [((id<JavaUtilCollection>) nil_chk(coll)) isEmpty]) {
    return NO;
  }
  jboolean modified = NO;
  id<JavaUtilIterator> it = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if ([((id<JavaUtilCollection>) nil_chk(coll)) containsWithId:[it next]]) {
      [it remove];
      modified = YES;
    }
  }
  return modified;
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  if ([((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) isEmpty]) {
    return NO;
  }
  if ([((id<JavaUtilCollection>) nil_chk(coll)) isEmpty]) {
    [parent_ clear];
    return YES;
  }
  jboolean modified = NO;
  id<JavaUtilIterator> it = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    if ([coll containsWithId:[it next]] == NO) {
      [it remove];
      modified = YES;
    }
  }
  return modified;
}

- (void)clear {
  [((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) clear];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilCollection:withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "View", NULL, 0x4, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View = { 2, "View", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0x40c, 4, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;E:Ljava/lang/Object;>Lorg/apache/commons/collections15/collection/AbstractCollectionDecorator<TE;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View_initWithJavaUtilCollection_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View *self, id<JavaUtilCollection> coll, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15CollectionAbstractCollectionDecorator_initWithJavaUtilCollection_(self, coll);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View_set_parent_(self, parent);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet

- (instancetype)initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) createKeySetIteratorWithJavaUtilIterator:[super iterator]];
}

- (jboolean)containsWithId:(id)key {
  return [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->forwardMap_)) containsKeyWithId:key];
}

- (jboolean)removeWithId:(id)key {
  if ([((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->forwardMap_)) containsKeyWithId:key]) {
    id value = [parent_->forwardMap_ removeWithId:key];
    [((id<JavaUtilMap>) nil_chk(parent_->inverseMap_)) removeWithId:value];
    return YES;
  }
  return NO;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "KeySet", NULL, 0x4, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;", "TK;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet = { 2, "KeySet", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 4, methods, 0, NULL, 3, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap$View<TK;TV;TK;>;Ljava/util/Set<TK;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet *self, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View_initWithJavaUtilCollection_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent))->forwardMap_)) keySet], parent);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySet)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, iterator, parent);
  return self;
}

- (id)next {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_set_lastKey_(self, [super next]);
  canRemove_ = YES;
  return lastKey_;
}

- (void)remove {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator remove() can only be called once after next()") autorelease];
  }
  id value = [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->forwardMap_)) getWithId:lastKey_];
  [super remove];
  [((id<JavaUtilMap>) nil_chk(parent_->inverseMap_)) removeWithId:value];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_set_lastKey_(self, nil);
  canRemove_ = NO;
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(lastKey_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilIterator:withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "KeySetIterator", NULL, 0x4, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;",  },
    { "lastKey_", NULL, 0x4, "TK;", NULL, "TK;",  },
    { "canRemove_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"TK;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator = { 2, "KeySetIterator", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 3, methods, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/iterators/AbstractIteratorDecorator<TK;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator *self, id<JavaUtilIterator> iterator, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator_initWithJavaUtilIterator_(self, iterator);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_set_lastKey_(self, nil);
  self->canRemove_ = NO;
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_set_parent_(self, parent);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(id<JavaUtilIterator> iterator, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, iterator, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_KeySetIterator)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values

- (instancetype)initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) createValuesIteratorWithJavaUtilIterator:[super iterator]];
}

- (jboolean)containsWithId:(id)value {
  return [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) containsKeyWithId:value];
}

- (jboolean)removeWithId:(id)value {
  if ([((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) containsKeyWithId:value]) {
    id key = [parent_->inverseMap_ removeWithId:value];
    [((id<JavaUtilMap>) nil_chk(parent_->forwardMap_)) removeWithId:key];
    return YES;
  }
  return NO;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "Values", NULL, 0x4, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values = { 2, "Values", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 4, methods, 0, NULL, 3, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap$View<TK;TV;TV;>;Ljava/util/Set<TV;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values *self, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View_initWithJavaUtilCollection_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent))->forwardMap_)) values], parent);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_Values)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, iterator, parent);
  return self;
}

- (id)next {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_set_lastValue_(self, [super next]);
  canRemove_ = YES;
  return lastValue_;
}

- (void)remove {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator remove() can only be called once after next()") autorelease];
  }
  [super remove];
  [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) removeWithId:lastValue_];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_set_lastValue_(self, nil);
  canRemove_ = NO;
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(lastValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilIterator:withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "ValuesIterator", NULL, 0x4, NULL, NULL },
    { "next", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;",  },
    { "lastValue_", NULL, 0x4, "TV;", NULL, "TV;",  },
    { "canRemove_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator = { 2, "ValuesIterator", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 3, methods, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/iterators/AbstractIteratorDecorator<TV;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator *self, id<JavaUtilIterator> iterator, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator_initWithJavaUtilIterator_(self, iterator);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_set_lastValue_(self, nil);
  self->canRemove_ = NO;
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_set_parent_(self, parent);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(id<JavaUtilIterator> iterator, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, iterator, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_ValuesIterator)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet

- (instancetype)initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) createEntrySetIteratorWithJavaUtilIterator:[super iterator]];
}

- (jboolean)removeWithId:(id)obj {
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  id key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
  if ([((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) containsKeyWithId:key]) {
    id value = [((id<JavaUtilMap>) nil_chk(parent_->forwardMap_)) getWithId:key];
    if (value == nil ? [entry_ getValue] == nil : [value isEqual:[entry_ getValue]]) {
      [parent_->forwardMap_ removeWithId:key];
      [((id<JavaUtilMap>) nil_chk(parent_->inverseMap_)) removeWithId:value];
      return YES;
    }
  }
  return NO;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "EntrySet", NULL, 0x4, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;", "Ljava.util.Map$Entry;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet = { 2, "EntrySet", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 3, methods, 0, NULL, 3, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap$View<TK;TV;Ljava/util/Map$Entry<TK;TV;>;>;Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet *self, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_View_initWithJavaUtilCollection_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent))->forwardMap_)) entrySet], parent);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySet)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, iterator, parent);
  return self;
}

- (id<JavaUtilMap_Entry>)next {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_setAndConsume_last_(self, new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry_initWithJavaUtilMap_Entry_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_([super next], parent_));
  canRemove_ = YES;
  return last_;
}

- (void)remove {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator remove() can only be called once after next()") autorelease];
  }
  id value = [((id<JavaUtilMap_Entry>) nil_chk(last_)) getValue];
  [super remove];
  [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) removeWithId:value];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_set_last_(self, nil);
  canRemove_ = NO;
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(last_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilIterator:withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "EntrySetIterator", NULL, 0x4, NULL, NULL },
    { "next", NULL, "Ljava.util.Map$Entry;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;",  },
    { "last_", NULL, 0x4, "Ljava.util.Map$Entry;", NULL, "Ljava/util/Map$Entry<TK;TV;>;",  },
    { "canRemove_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Ljava.util.Map$Entry;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator = { 2, "EntrySetIterator", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 3, methods, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/iterators/AbstractIteratorDecorator<Ljava/util/Map$Entry<TK;TV;>;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator *self, id<JavaUtilIterator> iterator, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15IteratorsAbstractIteratorDecorator_initWithJavaUtilIterator_(self, iterator);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_set_last_(self, nil);
  self->canRemove_ = NO;
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_set_parent_(self, parent);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(id<JavaUtilIterator> iterator, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator_initWithJavaUtilIterator_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, iterator, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_EntrySetIterator)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry

- (instancetype)initWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_
withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry_initWithJavaUtilMap_Entry_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, entry_, parent);
  return self;
}

- (id)setValueWithId:(id)value {
  id key = [self getKey];
  if ([((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) containsKeyWithId:value] && [parent_->inverseMap_ getWithId:value] != key) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot use setValue() when the object being set is already in the map") autorelease];
  }
  [parent_ putWithId:key withId:value];
  id oldValue = [super setValueWithId:value];
  return oldValue;
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap_Entry:withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "MapEntry", NULL, 0x4, NULL, NULL },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry = { 2, "MapEntry", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 2, methods, 1, fields, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/keyvalue/AbstractMapEntryDecorator<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry_initWithJavaUtilMap_Entry_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry *self, id<JavaUtilMap_Entry> entry_, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15KeyvalueAbstractMapEntryDecorator_initWithJavaUtilMap_Entry_(self, entry_);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry_set_parent_(self, parent);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry_initWithJavaUtilMap_Entry_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(id<JavaUtilMap_Entry> entry_, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry_initWithJavaUtilMap_Entry_withOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, entry_, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_MapEntry)

@implementation OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator

- (instancetype)initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext];
}

- (id)next {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_set_last_(self, [((id<JavaUtilIterator>) nil_chk(iterator_)) next]);
  canRemove_ = YES;
  return [((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey];
}

- (void)remove {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator remove() can only be called once after next()") autorelease];
  }
  id value = [((id<JavaUtilMap_Entry>) nil_chk(last_)) getValue];
  [((id<JavaUtilIterator>) nil_chk(iterator_)) remove];
  [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) removeWithId:value];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_set_last_(self, nil);
  canRemove_ = NO;
}

- (id)getKey {
  if (last_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator getKey() can only be called after next() and before remove()") autorelease];
  }
  return [((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey];
}

- (id)getValue {
  if (last_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator getValue() can only be called after next() and before remove()") autorelease];
  }
  return [((id<JavaUtilMap_Entry>) nil_chk(last_)) getValue];
}

- (id)setValueWithId:(id)value {
  if (last_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator setValue() can only be called after next() and before remove()") autorelease];
  }
  if ([((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) containsKeyWithId:value] && [parent_->inverseMap_ getWithId:value] != [((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey]) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot use setValue() when the object being set is already in the map") autorelease];
  }
  return [parent_ putWithId:[((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey] withId:value];
}

- (void)reset {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_set_iterator_(self, [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->forwardMap_)) entrySet])) iterator]);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_set_last_(self, nil);
  canRemove_ = NO;
}

- (NSString *)description {
  if (last_ != nil) {
    return JreStrcat("$@C@C", @"MapIterator[", [self getKey], '=', [self getValue], ']');
  }
  else {
    return @"MapIterator[]";
  }
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(iterator_);
  RELEASE_(last_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "BidiMapIterator", NULL, 0x4, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;",  },
    { "iterator_", NULL, 0x4, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;",  },
    { "last_", NULL, 0x4, "Ljava.util.Map$Entry;", NULL, "Ljava/util/Map$Entry<TK;TV;>;",  },
    { "canRemove_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator = { 2, "BidiMapIterator", "org.apache.commons.collections15.bidimap", "AbstractDualBidiMap", 0xc, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/MapIterator<TK;TV;>;Lorg/apache/commons/collections15/ResettableIterator<TK;>;" };
  return &_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator;
}

@end

void OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator *self, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_set_last_(self, nil);
  self->canRemove_ = NO;
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_set_parent_(self, parent);
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_set_iterator_(self, [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent))->forwardMap_)) entrySet])) iterator]);
}

OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator *new_OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator *self = [OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator alloc];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_BidiMapIterator)
