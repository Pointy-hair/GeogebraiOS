//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/bidimap/DualTreeBidiMap.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/ListIterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "org/apache/commons/collections15/BidiMap.h"
#include "org/apache/commons/collections15/OrderedBidiMap.h"
#include "org/apache/commons/collections15/OrderedMap.h"
#include "org/apache/commons/collections15/OrderedMapIterator.h"
#include "org/apache/commons/collections15/SortedBidiMap.h"
#include "org/apache/commons/collections15/bidimap/AbstractDualBidiMap.h"
#include "org/apache/commons/collections15/bidimap/DualTreeBidiMap.h"
#include "org/apache/commons/collections15/map/AbstractMapDecorator.h"
#include "org/apache/commons/collections15/map/AbstractSortedMapDecorator.h"

#define OrgApacheCommonsCollections15BidimapDualTreeBidiMap_serialVersionUID 721969328361809LL

@interface OrgApacheCommonsCollections15BidimapDualTreeBidiMap ()

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapDualTreeBidiMap, serialVersionUID, jlong)

@interface OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator () {
 @public
  id<JavaUtilMap_Entry> last_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator, last_, id<JavaUtilMap_Entry>)

@implementation OrgApacheCommonsCollections15BidimapDualTreeBidiMap

- (instancetype)init {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_init(self);
  return self;
}

+ (OrgApacheCommonsCollections15BidimapDualTreeBidiMap *)createTwoWayBidiMapWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  return OrgApacheCommonsCollections15BidimapDualTreeBidiMap_createTwoWayBidiMapWithJavaUtilComparator_(comparator);
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_(self, map);
  return self;
}

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
                    withJavaUtilComparator:(id<JavaUtilComparator>)inverseComparator {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilComparator_withJavaUtilComparator_(self, comparator, inverseComparator);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)normalMap
                    withJavaUtilMap:(id<JavaUtilMap>)reverseMap
withOrgApacheCommonsCollections15BidiMap:(id<OrgApacheCommonsCollections15BidiMap>)inverseBidiMap {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(self, normalMap, reverseMap, inverseBidiMap);
  return self;
}

- (id<OrgApacheCommonsCollections15BidiMap>)createBidiMapWithJavaUtilMap:(id<JavaUtilMap>)normalMap
                                                         withJavaUtilMap:(id<JavaUtilMap>)reverseMap
                                withOrgApacheCommonsCollections15BidiMap:(id<OrgApacheCommonsCollections15BidiMap>)inverseMap {
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(normalMap, reverseMap, inverseMap) autorelease];
}

- (id<JavaUtilComparator>)comparator {
  return [((id<JavaUtilSortedMap>) nil_chk(((id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap))))) comparator];
}

- (id)firstKey {
  return [((id<JavaUtilSortedMap>) nil_chk(((id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap))))) firstKey];
}

- (id)lastKey {
  return [((id<JavaUtilSortedMap>) nil_chk(((id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap))))) lastKey];
}

- (id)nextKeyWithId:(id)key {
  if ([self isEmpty]) {
    return nil;
  }
  if ([OrgApacheCommonsCollections15OrderedMap_class_() isInstance:forwardMap_]) {
    return [((id<OrgApacheCommonsCollections15OrderedMap>) nil_chk(((id<OrgApacheCommonsCollections15OrderedMap>) check_protocol_cast(forwardMap_, @protocol(OrgApacheCommonsCollections15OrderedMap))))) nextKeyWithId:key];
  }
  id<JavaUtilSortedMap> sm = (id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap));
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk([((id<JavaUtilSortedMap>) nil_chk(sm)) tailMapWithId:key])) keySet])) iterator];
  [((id<JavaUtilIterator>) nil_chk(it)) next];
  if ([it hasNext]) {
    return [it next];
  }
  return nil;
}

- (id)previousKeyWithId:(id)key {
  if ([self isEmpty]) {
    return nil;
  }
  if ([OrgApacheCommonsCollections15OrderedMap_class_() isInstance:forwardMap_]) {
    return [((id<OrgApacheCommonsCollections15OrderedMap>) nil_chk(((id<OrgApacheCommonsCollections15OrderedMap>) check_protocol_cast(forwardMap_, @protocol(OrgApacheCommonsCollections15OrderedMap))))) previousKeyWithId:key];
  }
  id<JavaUtilSortedMap> sm = (id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap));
  id<JavaUtilSortedMap> hm = [((id<JavaUtilSortedMap>) nil_chk(sm)) headMapWithId:key];
  if ([((id<JavaUtilSortedMap>) nil_chk(hm)) isEmpty]) {
    return nil;
  }
  return [hm lastKey];
}

- (id<OrgApacheCommonsCollections15OrderedMapIterator>)orderedMapIterator {
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self) autorelease];
}

- (id<OrgApacheCommonsCollections15SortedBidiMap>)inverseSortedBidiMap {
  return (id<OrgApacheCommonsCollections15SortedBidiMap>) check_protocol_cast([self inverseBidiMap], @protocol(OrgApacheCommonsCollections15SortedBidiMap));
}

- (id<OrgApacheCommonsCollections15OrderedBidiMap>)inverseOrderedBidiMap {
  return (id<OrgApacheCommonsCollections15OrderedBidiMap>) check_protocol_cast([self inverseBidiMap], @protocol(OrgApacheCommonsCollections15OrderedBidiMap));
}

- (id<JavaUtilSortedMap>)headMapWithId:(id)toKey {
  id<JavaUtilSortedMap> sub = [((id<JavaUtilSortedMap>) nil_chk(((id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap))))) headMapWithId:toKey];
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(self, sub) autorelease];
}

- (id<JavaUtilSortedMap>)tailMapWithId:(id)fromKey {
  id<JavaUtilSortedMap> sub = [((id<JavaUtilSortedMap>) nil_chk(((id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap))))) tailMapWithId:fromKey];
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(self, sub) autorelease];
}

- (id<JavaUtilSortedMap>)subMapWithId:(id)fromKey
                               withId:(id)toKey {
  id<JavaUtilSortedMap> sub = [((id<JavaUtilSortedMap>) nil_chk(((id<JavaUtilSortedMap>) check_protocol_cast(forwardMap_, @protocol(JavaUtilSortedMap))))) subMapWithId:fromKey withId:toKey];
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(self, sub) autorelease];
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeObjectWithId:forwardMap_];
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_setAndConsume_forwardMap_(self, new_JavaUtilTreeMap_initWithJavaUtilComparator_(comparator__));
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_setAndConsume_inverseMap_(self, new_JavaUtilTreeMap_init());
  id<JavaUtilMap> map = (id<JavaUtilMap>) check_protocol_cast([inArg readObject], @protocol(JavaUtilMap));
  [self putAllWithJavaUtilMap:map];
}

- (void)dealloc {
  RELEASE_(comparator__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DualTreeBidiMap", NULL, 0x1, NULL, NULL },
    { "createTwoWayBidiMapWithJavaUtilComparator:", "createTwoWayBidiMap", "Lorg.apache.commons.collections15.bidimap.DualTreeBidiMap;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Comparator<-TE;>;)Lorg/apache/commons/collections15/bidimap/DualTreeBidiMap<TE;TE;>;" },
    { "initWithJavaUtilMap:", "DualTreeBidiMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilComparator:withJavaUtilComparator:", "DualTreeBidiMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:withJavaUtilMap:withOrgApacheCommonsCollections15BidiMap:", "DualTreeBidiMap", NULL, 0x4, NULL, NULL },
    { "createBidiMapWithJavaUtilMap:withJavaUtilMap:withOrgApacheCommonsCollections15BidiMap:", "createBidiMap", "Lorg.apache.commons.collections15.BidiMap;", 0x4, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/util/Map<TV;TK;>;Lorg/apache/commons/collections15/BidiMap<TV;TK;>;)Lorg/apache/commons/collections15/BidiMap<TK;TV;>;" },
    { "comparator", NULL, "Ljava.util.Comparator;", 0x1, NULL, NULL },
    { "firstKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "lastKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "nextKeyWithId:", "nextKey", "TK;", 0x1, NULL, "(TK;)TK;" },
    { "previousKeyWithId:", "previousKey", "TK;", 0x1, NULL, "(TK;)TK;" },
    { "orderedMapIterator", NULL, "Lorg.apache.commons.collections15.OrderedMapIterator;", 0x1, NULL, NULL },
    { "inverseSortedBidiMap", NULL, "Lorg.apache.commons.collections15.SortedBidiMap;", 0x1, NULL, NULL },
    { "inverseOrderedBidiMap", NULL, "Lorg.apache.commons.collections15.OrderedBidiMap;", 0x1, NULL, NULL },
    { "headMapWithId:", "headMap", "Ljava.util.SortedMap;", 0x1, NULL, "(TK;)Ljava/util/SortedMap<TK;TV;>;" },
    { "tailMapWithId:", "tailMap", "Ljava.util.SortedMap;", 0x1, NULL, "(TK;)Ljava/util/SortedMap<TK;TV;>;" },
    { "subMapWithId:withId:", "subMap", "Ljava.util.SortedMap;", 0x1, NULL, "(TK;TK;)Ljava/util/SortedMap<TK;TV;>;" },
    { "writeObjectWithJavaIoObjectOutputStream:", "writeObject", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15BidimapDualTreeBidiMap_serialVersionUID },
    { "comparator__", "comparator", 0x14, "Ljava.util.Comparator;", NULL, "Ljava/util/Comparator<-TK;>;",  },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.bidimap.DualTreeBidiMap$ViewMap;", "Lorg.apache.commons.collections15.bidimap.DualTreeBidiMap$BidiOrderedMapIterator;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapDualTreeBidiMap = { 2, "DualTreeBidiMap", "org.apache.commons.collections15.bidimap", NULL, 0x1, 19, methods, 2, fields, 2, superclass_type_args, 2, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;Lorg/apache/commons/collections15/SortedBidiMap<TK;TV;>;Ljava/io/Serializable;" };
  return &_OrgApacheCommonsCollections15BidimapDualTreeBidiMap;
}

@end

void OrgApacheCommonsCollections15BidimapDualTreeBidiMap_init(OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_(self, [new_JavaUtilTreeMap_init() autorelease], [new_JavaUtilTreeMap_init() autorelease]);
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_set_comparator__(self, nil);
}

OrgApacheCommonsCollections15BidimapDualTreeBidiMap *new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_init() {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self = [OrgApacheCommonsCollections15BidimapDualTreeBidiMap alloc];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_init(self);
  return self;
}

OrgApacheCommonsCollections15BidimapDualTreeBidiMap *OrgApacheCommonsCollections15BidimapDualTreeBidiMap_createTwoWayBidiMapWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initialize();
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilComparator_withJavaUtilComparator_(comparator, comparator) autorelease];
}

void OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self, id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_(self, [new_JavaUtilTreeMap_init() autorelease], [new_JavaUtilTreeMap_init() autorelease]);
  [self putAllWithJavaUtilMap:map];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_set_comparator__(self, nil);
}

OrgApacheCommonsCollections15BidimapDualTreeBidiMap *new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self = [OrgApacheCommonsCollections15BidimapDualTreeBidiMap alloc];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_(self, map);
  return self;
}

void OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilComparator_withJavaUtilComparator_(OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self, id<JavaUtilComparator> comparator, id<JavaUtilComparator> inverseComparator) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_(self, [new_JavaUtilTreeMap_initWithJavaUtilComparator_(comparator) autorelease], [new_JavaUtilTreeMap_initWithJavaUtilComparator_(inverseComparator) autorelease]);
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_set_comparator__(self, comparator);
}

OrgApacheCommonsCollections15BidimapDualTreeBidiMap *new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> comparator, id<JavaUtilComparator> inverseComparator) {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self = [OrgApacheCommonsCollections15BidimapDualTreeBidiMap alloc];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilComparator_withJavaUtilComparator_(self, comparator, inverseComparator);
  return self;
}

void OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self, id<JavaUtilMap> normalMap, id<JavaUtilMap> reverseMap, id<OrgApacheCommonsCollections15BidiMap> inverseBidiMap) {
  OrgApacheCommonsCollections15BidimapAbstractDualBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(self, normalMap, reverseMap, inverseBidiMap);
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_set_comparator__(self, [((id<JavaUtilSortedMap>) nil_chk(((id<JavaUtilSortedMap>) check_protocol_cast(normalMap, @protocol(JavaUtilSortedMap))))) comparator]);
}

OrgApacheCommonsCollections15BidimapDualTreeBidiMap *new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(id<JavaUtilMap> normalMap, id<JavaUtilMap> reverseMap, id<OrgApacheCommonsCollections15BidiMap> inverseBidiMap) {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap *self = [OrgApacheCommonsCollections15BidimapDualTreeBidiMap alloc];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15BidiMap_(self, normalMap, reverseMap, inverseBidiMap);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapDualTreeBidiMap)

@implementation OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap

- (instancetype)initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap:(OrgApacheCommonsCollections15BidimapDualTreeBidiMap *)bidi
                                                      withJavaUtilSortedMap:(id<JavaUtilSortedMap>)sm {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(self, bidi, sm);
  return self;
}

- (jboolean)containsValueWithId:(id)value {
  return [((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapDualTreeBidiMap *) nil_chk(bidi_))->forwardMap_)) containsValueWithId:value];
}

- (void)clear {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([self keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [it next];
    [it remove];
  }
}

- (id<JavaUtilSortedMap>)headMapWithId:(id)toKey {
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(bidi_, [super headMapWithId:toKey]) autorelease];
}

- (id<JavaUtilSortedMap>)tailMapWithId:(id)fromKey {
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(bidi_, [super tailMapWithId:fromKey]) autorelease];
}

- (id<JavaUtilSortedMap>)subMapWithId:(id)fromKey
                               withId:(id)toKey {
  return [new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(bidi_, [super subMapWithId:fromKey withId:toKey]) autorelease];
}

- (void)dealloc {
  RELEASE_(bidi_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap:withJavaUtilSortedMap:", "ViewMap", NULL, 0x4, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "headMapWithId:", "headMap", "Ljava.util.SortedMap;", 0x1, NULL, "(TK;)Ljava/util/SortedMap<TK;TV;>;" },
    { "tailMapWithId:", "tailMap", "Ljava.util.SortedMap;", 0x1, NULL, "(TK;)Ljava/util/SortedMap<TK;TV;>;" },
    { "subMapWithId:withId:", "subMap", "Ljava.util.SortedMap;", 0x1, NULL, "(TK;TK;)Ljava/util/SortedMap<TK;TV;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bidi_", NULL, 0x10, "Lorg.apache.commons.collections15.bidimap.DualTreeBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/DualTreeBidiMap<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap = { 2, "ViewMap", "org.apache.commons.collections15.bidimap", "DualTreeBidiMap", 0xc, 6, methods, 1, fields, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractSortedMapDecorator<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap;
}

@end

void OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap *self, OrgApacheCommonsCollections15BidimapDualTreeBidiMap *bidi, id<JavaUtilSortedMap> sm) {
  OrgApacheCommonsCollections15MapAbstractSortedMapDecorator_initWithJavaUtilSortedMap_(self, (id<JavaUtilSortedMap>) check_protocol_cast([bidi createBidiMapWithJavaUtilMap:sm withJavaUtilMap:((OrgApacheCommonsCollections15BidimapDualTreeBidiMap *) nil_chk(bidi))->inverseMap_ withOrgApacheCommonsCollections15BidiMap:bidi->inverseBidiMap__], @protocol(JavaUtilSortedMap)));
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_set_bidi_(self, (OrgApacheCommonsCollections15BidimapDualTreeBidiMap *) check_class_cast(self->map_, [OrgApacheCommonsCollections15BidimapDualTreeBidiMap class]));
}

OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap *new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(OrgApacheCommonsCollections15BidimapDualTreeBidiMap *bidi, id<JavaUtilSortedMap> sm) {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap *self = [OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap alloc];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap_initWithOrgApacheCommonsCollections15BidimapDualTreeBidiMap_withJavaUtilSortedMap_(self, bidi, sm);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapDualTreeBidiMap_ViewMap)

@implementation OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator

- (instancetype)initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *)parent {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) hasNext];
}

- (id)next {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_last_(self, [((id<JavaUtilListIterator>) nil_chk(iterator_)) next]);
  return [((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey];
}

- (jboolean)hasPrevious {
  return [((id<JavaUtilListIterator>) nil_chk(iterator_)) hasPrevious];
}

- (id)previous {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_last_(self, [((id<JavaUtilListIterator>) nil_chk(iterator_)) previous]);
  return [((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey];
}

- (void)remove {
  [((id<JavaUtilListIterator>) nil_chk(iterator_)) remove];
  [((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) removeWithId:[((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey]];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_last_(self, nil);
}

- (id)getKey {
  if (last_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator getKey() can only be called after next() and before remove()") autorelease];
  }
  return [((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey];
}

- (id)getValue {
  if (last_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator getValue() can only be called after next() and before remove()") autorelease];
  }
  return [((id<JavaUtilMap_Entry>) nil_chk(last_)) getValue];
}

- (id)setValueWithId:(id)value {
  if (last_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator setValue() can only be called after next() and before remove()") autorelease];
  }
  if ([((id<JavaUtilMap>) nil_chk(((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_))->inverseMap_)) containsKeyWithId:value] && [parent_->inverseMap_ getWithId:value] != [((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey]) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot use setValue() when the object being set is already in the map") autorelease];
  }
  return [parent_ putWithId:[((id<JavaUtilMap_Entry>) nil_chk(last_)) getKey] withId:value];
}

- (void)reset {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_iterator_(self, [((JavaUtilArrayList *) [new_JavaUtilArrayList_initWithJavaUtilCollection_([((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent_)) entrySet]) autorelease]) listIterator]);
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_last_(self, nil);
}

- (NSString *)description {
  if (last_ != nil) {
    return JreStrcat("$@C@C", @"MapIterator[", [self getKey], '=', [self getValue], ']');
  }
  else {
    return @"MapIterator[]";
  }
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(iterator_);
  RELEASE_(last_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap:", "BidiOrderedMapIterator", NULL, 0x4, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "previous", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.AbstractDualBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/AbstractDualBidiMap<TK;TV;>;",  },
    { "iterator_", NULL, 0x4, "Ljava.util.ListIterator;", NULL, "Ljava/util/ListIterator<Ljava/util/Map$Entry<TK;TV;>;>;",  },
    { "last_", NULL, 0x2, "Ljava.util.Map$Entry;", NULL, "Ljava/util/Map$Entry<TK;TV;>;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator = { 2, "BidiOrderedMapIterator", "org.apache.commons.collections15.bidimap", "DualTreeBidiMap", 0xc, 11, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/OrderedMapIterator<TK;TV;>;Lorg/apache/commons/collections15/ResettableIterator<TK;>;" };
  return &_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator;
}

@end

void OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator *self, OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_last_(self, nil);
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_parent_(self, parent);
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_set_iterator_(self, [((JavaUtilArrayList *) [new_JavaUtilArrayList_initWithJavaUtilCollection_([((OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *) nil_chk(parent)) entrySet]) autorelease]) listIterator]);
}

OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator *new_OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(OrgApacheCommonsCollections15BidimapAbstractDualBidiMap *parent) {
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator *self = [OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator alloc];
  OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator_initWithOrgApacheCommonsCollections15BidimapAbstractDualBidiMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapDualTreeBidiMap_BidiOrderedMapIterator)
