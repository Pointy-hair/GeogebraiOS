//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/map/HashedMap.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/util/Map.h"
#include "org/apache/commons/collections15/map/AbstractHashedMap.h"
#include "org/apache/commons/collections15/map/HashedMap.h"

#define OrgApacheCommonsCollections15MapHashedMap_serialVersionUID -1788199231038721040LL

@interface OrgApacheCommonsCollections15MapHashedMap ()

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15MapHashedMap, serialVersionUID, jlong)

@implementation OrgApacheCommonsCollections15MapHashedMap

- (instancetype)init {
  OrgApacheCommonsCollections15MapHashedMap_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity {
  OrgApacheCommonsCollections15MapHashedMap_initWithInt_(self, initialCapacity);
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor {
  OrgApacheCommonsCollections15MapHashedMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheCommonsCollections15MapHashedMap_initWithJavaUtilMap_(self, map);
  return self;
}

- (id)clone {
  return [super clone];
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [self doWriteObjectWithJavaIoObjectOutputStream:outArg];
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  [self doReadObjectWithJavaIoObjectInputStream:inArg];
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "HashedMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "HashedMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:withFloat:", "HashedMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:", "HashedMap", NULL, 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "writeObjectWithJavaIoObjectOutputStream:", "writeObject", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15MapHashedMap_serialVersionUID },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapHashedMap = { 2, "HashedMap", "org.apache.commons.collections15.map", NULL, 0x1, 7, methods, 1, fields, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractHashedMap<TK;TV;>;Ljava/io/Serializable;Ljava/lang/Cloneable;" };
  return &_OrgApacheCommonsCollections15MapHashedMap;
}

@end

void OrgApacheCommonsCollections15MapHashedMap_init(OrgApacheCommonsCollections15MapHashedMap *self) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_withInt_(self, OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_CAPACITY, OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_LOAD_FACTOR, OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_THRESHOLD);
}

OrgApacheCommonsCollections15MapHashedMap *new_OrgApacheCommonsCollections15MapHashedMap_init() {
  OrgApacheCommonsCollections15MapHashedMap *self = [OrgApacheCommonsCollections15MapHashedMap alloc];
  OrgApacheCommonsCollections15MapHashedMap_init(self);
  return self;
}

void OrgApacheCommonsCollections15MapHashedMap_initWithInt_(OrgApacheCommonsCollections15MapHashedMap *self, jint initialCapacity) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_(self, initialCapacity);
}

OrgApacheCommonsCollections15MapHashedMap *new_OrgApacheCommonsCollections15MapHashedMap_initWithInt_(jint initialCapacity) {
  OrgApacheCommonsCollections15MapHashedMap *self = [OrgApacheCommonsCollections15MapHashedMap alloc];
  OrgApacheCommonsCollections15MapHashedMap_initWithInt_(self, initialCapacity);
  return self;
}

void OrgApacheCommonsCollections15MapHashedMap_initWithInt_withFloat_(OrgApacheCommonsCollections15MapHashedMap *self, jint initialCapacity, jfloat loadFactor) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
}

OrgApacheCommonsCollections15MapHashedMap *new_OrgApacheCommonsCollections15MapHashedMap_initWithInt_withFloat_(jint initialCapacity, jfloat loadFactor) {
  OrgApacheCommonsCollections15MapHashedMap *self = [OrgApacheCommonsCollections15MapHashedMap alloc];
  OrgApacheCommonsCollections15MapHashedMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
  return self;
}

void OrgApacheCommonsCollections15MapHashedMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15MapHashedMap *self, id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithJavaUtilMap_(self, map);
}

OrgApacheCommonsCollections15MapHashedMap *new_OrgApacheCommonsCollections15MapHashedMap_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15MapHashedMap *self = [OrgApacheCommonsCollections15MapHashedMap alloc];
  OrgApacheCommonsCollections15MapHashedMap_initWithJavaUtilMap_(self, map);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapHashedMap)
