//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/map/AbstractHashedMap.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/AbstractCollection.h"
#include "java/util/AbstractMap.h"
#include "java/util/AbstractSet.h"
#include "java/util/Collection.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/MapIterator.h"
#include "org/apache/commons/collections15/iterators/EmptyIterator.h"
#include "org/apache/commons/collections15/iterators/EmptyMapIterator.h"
#include "org/apache/commons/collections15/map/AbstractHashedMap.h"

@interface OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry () {
 @public
  id key_;
  id value_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry, key_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry, value_, id)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsCollections15MapAbstractHashedMap)

NSString *OrgApacheCommonsCollections15MapAbstractHashedMap_NO_NEXT_ENTRY_ = @"No next() entry in the iteration";
NSString *OrgApacheCommonsCollections15MapAbstractHashedMap_NO_PREVIOUS_ENTRY_ = @"No previous() entry in the iteration";
NSString *OrgApacheCommonsCollections15MapAbstractHashedMap_REMOVE_INVALID_ = @"remove() can only be called once after next()";
NSString *OrgApacheCommonsCollections15MapAbstractHashedMap_GETKEY_INVALID_ = @"getKey() can only be called after next() and before remove()";
NSString *OrgApacheCommonsCollections15MapAbstractHashedMap_GETVALUE_INVALID_ = @"getValue() can only be called after next() and before remove()";
NSString *OrgApacheCommonsCollections15MapAbstractHashedMap_SETVALUE_INVALID_ = @"setValue() can only be called after next() and before remove()";
id OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__;

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap

- (instancetype)init {
  OrgApacheCommonsCollections15MapAbstractHashedMap_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor
                    withInt:(jint)threshold {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_withInt_(self, initialCapacity, loadFactor, threshold);
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_(self, initialCapacity);
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithJavaUtilMap_(self, map);
  return self;
}

- (void)init__ {
}

- (id)getWithId:(id)key {
  jint hashCode = [self hash__WithId:(key == nil) ? OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__ : key];
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(data_, [self hashIndexWithInt:hashCode withInt:((IOSObjectArray *) nil_chk(data_))->size_]);
  while (entry_ != nil) {
    if (((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->hashCode__ == hashCode && [self isEqualKeyWithId:key withId:entry_->key_]) {
      return [entry_ getValue];
    }
    entry_ = entry_->next_;
  }
  return nil;
}

- (jint)size {
  return size__;
}

- (jboolean)isEmpty {
  return size__ == 0;
}

- (jboolean)containsKeyWithId:(id)key {
  jint hashCode = [self hash__WithId:(key == nil) ? OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__ : key];
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(data_, [self hashIndexWithInt:hashCode withInt:((IOSObjectArray *) nil_chk(data_))->size_]);
  while (entry_ != nil) {
    if (((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->hashCode__ == hashCode && [self isEqualKeyWithId:key withId:[entry_ getKey]]) {
      return YES;
    }
    entry_ = entry_->next_;
  }
  return NO;
}

- (jboolean)containsValueWithId:(id)value {
  if (value == nil) {
    for (jint i = 0, isize = ((IOSObjectArray *) nil_chk(data_))->size_; i < isize; i++) {
      OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(data_, i);
      while (entry_ != nil) {
        if ([((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_)) getValue] == nil) {
          return YES;
        }
        entry_ = entry_->next_;
      }
    }
  }
  else {
    for (jint i = 0, isize = ((IOSObjectArray *) nil_chk(data_))->size_; i < isize; i++) {
      OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(data_, i);
      while (entry_ != nil) {
        if ([self isEqualValueWithId:value withId:[((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_)) getValue]]) {
          return YES;
        }
        entry_ = entry_->next_;
      }
    }
  }
  return NO;
}

- (id)putWithId:(id)key
         withId:(id)value {
  jint hashCode = [self hash__WithId:(key == nil) ? OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__ : key];
  jint index = [self hashIndexWithInt:hashCode withInt:((IOSObjectArray *) nil_chk(data_))->size_];
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(data_, index);
  while (entry_ != nil) {
    if (((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->hashCode__ == hashCode && [self isEqualKeyWithId:key withId:[entry_ getKey]]) {
      id oldValue = [entry_ getValue];
      [self updateEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:entry_ withId:value];
      return oldValue;
    }
    entry_ = entry_->next_;
  }
  [self addMappingWithInt:index withInt:hashCode withId:key withId:value];
  return nil;
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  jint mapSize = [((id<JavaUtilMap>) nil_chk(map)) size];
  if (mapSize == 0) {
    return;
  }
  jint newSize = J2ObjCFpToInt(((size__ + mapSize) / loadFactor_ + 1));
  [self ensureCapacityWithInt:[self calculateNewCapacityWithInt:newSize]];
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([map entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
    (void) [self putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[entry_ getValue]];
  }
}

- (id)removeWithId:(id)key {
  jint hashCode = [self hash__WithId:(key == nil) ? OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__ : key];
  jint index = [self hashIndexWithInt:hashCode withInt:((IOSObjectArray *) nil_chk(data_))->size_];
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(data_, index);
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *previous = nil;
  while (entry_ != nil) {
    if (((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->hashCode__ == hashCode && [self isEqualKeyWithId:key withId:[entry_ getKey]]) {
      id oldValue = [entry_ getValue];
      [self removeMappingWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:entry_ withInt:index withOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:previous];
      return oldValue;
    }
    previous = entry_;
    entry_ = entry_->next_;
  }
  return nil;
}

- (void)clear {
  modCount_++;
  IOSObjectArray *data = self->data_;
  for (jint i = ((IOSObjectArray *) nil_chk(data))->size_ - 1; i >= 0; i--) {
    (void) IOSObjectArray_Set(data, i, nil);
  }
  size__ = 0;
}

- (jint)hash__WithId:(id)key {
  jint h = ((jint) [nil_chk(key) hash]);
  h += ~(LShift32(h, 9));
  h ^= (URShift32(h, 14));
  h += (LShift32(h, 4));
  h ^= (URShift32(h, 10));
  return h;
}

- (jboolean)isEqualKeyWithId:(id)key1
                      withId:(id)key2 {
  return (key1 == key2 || ((key1 != nil) && [key1 isEqual:key2]));
}

- (jboolean)isEqualValueWithId:(id)value1
                        withId:(id)value2 {
  return (value1 == value2 || [nil_chk(value1) isEqual:value2]);
}

- (jint)hashIndexWithInt:(jint)hashCode
                 withInt:(jint)dataSize {
  return hashCode & (dataSize - 1);
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)getEntryWithId:(id)key {
  jint hashCode = [self hash__WithId:(key == nil) ? OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__ : key];
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(data_, [self hashIndexWithInt:hashCode withInt:((IOSObjectArray *) nil_chk(data_))->size_]);
  while (entry_ != nil) {
    if (((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->hashCode__ == hashCode && [self isEqualKeyWithId:key withId:[entry_ getKey]]) {
      return entry_;
    }
    entry_ = entry_->next_;
  }
  return nil;
}

- (void)updateEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_
                                                                            withId:(id)newValue {
  (void) [((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_)) setValueWithId:newValue];
}

- (void)reuseEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_
                                                                          withInt:(jint)hashIndex
                                                                          withInt:(jint)hashCode
                                                                           withId:(id)key
                                                                           withId:(id)value {
  ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->next_ = IOSObjectArray_Get(nil_chk(data_), hashIndex);
  entry_->hashCode__ = hashCode;
  entry_->key_ = key;
  entry_->value_ = value;
}

- (void)addMappingWithInt:(jint)hashIndex
                  withInt:(jint)hashCode
                   withId:(id)key
                   withId:(id)value {
  modCount_++;
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = [self createEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:IOSObjectArray_Get(nil_chk(data_), hashIndex) withInt:hashCode withId:key withId:value];
  [self addEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:entry_ withInt:hashIndex];
  size__++;
  [self checkCapacity];
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)createEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)next
                                                                                                                                    withInt:(jint)hashCode
                                                                                                                                     withId:(id)key
                                                                                                                                     withId:(id)value {
  return new_OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(next, hashCode, key, value);
}

- (void)addEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_
                                                                        withInt:(jint)hashIndex {
  (void) IOSObjectArray_Set(nil_chk(data_), hashIndex, entry_);
}

- (void)removeMappingWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_
                                                                             withInt:(jint)hashIndex
                     withOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)previous {
  modCount_++;
  [self removeEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:entry_ withInt:hashIndex withOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:previous];
  size__--;
  [self destroyEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:entry_];
}

- (void)removeEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_
                                                                           withInt:(jint)hashIndex
                   withOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)previous {
  if (previous == nil) {
    (void) IOSObjectArray_Set(nil_chk(data_), hashIndex, ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->next_);
  }
  else {
    previous->next_ = ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->next_;
  }
}

- (void)destroyEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_ {
  ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->next_ = nil;
  entry_->key_ = nil;
  entry_->value_ = nil;
}

- (void)checkCapacity {
  if (size__ >= threshold_) {
    jint newCapacity = ((IOSObjectArray *) nil_chk(data_))->size_ * 2;
    if (newCapacity <= OrgApacheCommonsCollections15MapAbstractHashedMap_MAXIMUM_CAPACITY) {
      [self ensureCapacityWithInt:newCapacity];
    }
  }
}

- (void)ensureCapacityWithInt:(jint)newCapacity {
  jint oldCapacity = ((IOSObjectArray *) nil_chk(data_))->size_;
  if (newCapacity <= oldCapacity) {
    return;
  }
  if (size__ == 0) {
    threshold_ = [self calculateThresholdWithInt:newCapacity withFloat:loadFactor_];
    data_ = [IOSObjectArray newArrayWithLength:newCapacity type:OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_class_()];
  }
  else {
    IOSObjectArray *oldEntries = data_;
    IOSObjectArray *newEntries = [IOSObjectArray newArrayWithLength:newCapacity type:OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_class_()];
    modCount_++;
    for (jint i = oldCapacity - 1; i >= 0; i--) {
      OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *entry_ = IOSObjectArray_Get(oldEntries, i);
      if (entry_ != nil) {
        (void) IOSObjectArray_Set(oldEntries, i, nil);
        do {
          OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next = entry_->next_;
          jint index = [self hashIndexWithInt:entry_->hashCode__ withInt:newCapacity];
          entry_->next_ = IOSObjectArray_Get(newEntries, index);
          (void) IOSObjectArray_Set(newEntries, index, entry_);
          entry_ = next;
        }
        while (entry_ != nil);
      }
    }
    threshold_ = [self calculateThresholdWithInt:newCapacity withFloat:loadFactor_];
    data_ = newEntries;
  }
}

- (jint)calculateNewCapacityWithInt:(jint)proposedCapacity {
  jint newCapacity = 1;
  if (proposedCapacity > OrgApacheCommonsCollections15MapAbstractHashedMap_MAXIMUM_CAPACITY) {
    newCapacity = OrgApacheCommonsCollections15MapAbstractHashedMap_MAXIMUM_CAPACITY;
  }
  else {
    while (newCapacity < proposedCapacity) {
      LShiftAssignInt(&newCapacity, 1);
    }
    if (newCapacity > OrgApacheCommonsCollections15MapAbstractHashedMap_MAXIMUM_CAPACITY) {
      newCapacity = OrgApacheCommonsCollections15MapAbstractHashedMap_MAXIMUM_CAPACITY;
    }
  }
  return newCapacity;
}

- (jint)calculateThresholdWithInt:(jint)newCapacity
                        withFloat:(jfloat)factor {
  return J2ObjCFpToInt((newCapacity * factor));
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entryNextWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_ {
  return ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->next_;
}

- (jint)entryHashCodeWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_ {
  return ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->hashCode__;
}

- (id)entryKeyWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_ {
  return ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->key_;
}

- (id)entryValueWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_ {
  return ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(entry_))->value_;
}

- (id<OrgApacheCommonsCollections15MapIterator>)mapIterator {
  if (size__ == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyMapIterator_get_INSTANCE_();
  }
  return new_OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self);
}

- (id<JavaUtilSet>)entrySet {
  if (entrySet__ == nil) {
    entrySet__ = new_OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self);
  }
  return entrySet__;
}

- (id<JavaUtilIterator>)createEntrySetIterator {
  if ([self size] == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyIterator_get_INSTANCE_();
  }
  return new_OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self);
}

- (id<JavaUtilSet>)keySet {
  if (keySet_AbstractHashedMap_ == nil) {
    keySet_AbstractHashedMap_ = new_OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self);
  }
  return keySet_AbstractHashedMap_;
}

- (id<JavaUtilIterator>)createKeySetIterator {
  if ([self size] == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyIterator_get_INSTANCE_();
  }
  return new_OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self);
}

- (id<JavaUtilCollection>)values {
  if (values__ == nil) {
    values__ = new_OrgApacheCommonsCollections15MapAbstractHashedMap_Values_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self);
  }
  return values__;
}

- (id<JavaUtilIterator>)createValuesIterator {
  if ([self size] == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyIterator_get_INSTANCE_();
  }
  return new_OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self);
}

- (void)doWriteObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) writeFloatWithFloat:loadFactor_];
  [outArg writeIntWithInt:((IOSObjectArray *) nil_chk(data_))->size_];
  [outArg writeIntWithInt:size__];
  for (id<OrgApacheCommonsCollections15MapIterator> it = [self mapIterator]; [((id<OrgApacheCommonsCollections15MapIterator>) nil_chk(it)) hasNext]; ) {
    [outArg writeObjectWithId:[it next]];
    [outArg writeObjectWithId:[it getValue]];
  }
}

- (void)doReadObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  loadFactor_ = [((JavaIoObjectInputStream *) nil_chk(inArg)) readFloat];
  jint capacity = [inArg readInt];
  jint size = [inArg readInt];
  [self init__];
  data_ = [IOSObjectArray newArrayWithLength:capacity type:OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_class_()];
  for (jint i = 0; i < size; i++) {
    id key = (id) [inArg readObject];
    id value = (id) [inArg readObject];
    (void) [self putWithId:key withId:value];
  }
  threshold_ = [self calculateThresholdWithInt:data_->size_ withFloat:loadFactor_];
}

- (id)clone {
  @try {
    OrgApacheCommonsCollections15MapAbstractHashedMap *cloned = (OrgApacheCommonsCollections15MapAbstractHashedMap *) check_class_cast([super clone], [OrgApacheCommonsCollections15MapAbstractHashedMap class]);
    ((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(cloned))->data_ = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(data_))->size_ type:OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_class_()];
    cloned->entrySet__ = nil;
    cloned->keySet_AbstractHashedMap_ = nil;
    cloned->values__ = nil;
    cloned->modCount_ = 0;
    cloned->size__ = 0;
    [cloned init__];
    [cloned putAllWithJavaUtilMap:self];
    return cloned;
  }
  @catch (JavaLangCloneNotSupportedException *ex) {
    return nil;
  }
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([JavaUtilMap_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap> map = (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap));
  if ([((id<JavaUtilMap>) nil_chk(map)) size] != [self size]) {
    return NO;
  }
  id<OrgApacheCommonsCollections15MapIterator> it = [self mapIterator];
  @try {
    while ([((id<OrgApacheCommonsCollections15MapIterator>) nil_chk(it)) hasNext]) {
      id key = [it next];
      id value = [it getValue];
      if (value == nil) {
        if ([map getWithId:key] != nil || [map containsKeyWithId:key] == NO) {
          return NO;
        }
      }
      else {
        if ([value isEqual:[map getWithId:key]] == NO) {
          return NO;
        }
      }
    }
  }
  @catch (JavaLangClassCastException *ignored) {
    return NO;
  }
  @catch (JavaLangNullPointerException *ignored) {
    return NO;
  }
  return YES;
}

- (NSUInteger)hash {
  jint total = 0;
  id<JavaUtilIterator> it = [self createEntrySetIterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    total += ((jint) [nil_chk([it next]) hash]);
  }
  return total;
}

- (NSString *)description {
  if ([self size] == 0) {
    return @"{}";
  }
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithInt_(32 * [self size]);
  (void) [buf appendWithChar:'{'];
  id<OrgApacheCommonsCollections15MapIterator> it = [self mapIterator];
  jboolean hasNext = [((id<OrgApacheCommonsCollections15MapIterator>) nil_chk(it)) hasNext];
  while (hasNext) {
    id key = [it next];
    id value = [it getValue];
    (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithId:key == self ? @"(this Map)" : key])) appendWithChar:'='])) appendWithId:value == self ? @"(this Map)" : value];
    hasNext = [it hasNext];
    if (hasNext) {
      (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithChar:','])) appendWithChar:' '];
    }
  }
  (void) [buf appendWithChar:'}'];
  return [buf description];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsCollections15MapAbstractHashedMap class]) {
    OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__ = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsCollections15MapAbstractHashedMap)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractHashedMap", NULL, 0x4, NULL, NULL },
    { "initWithInt:withFloat:withInt:", "AbstractHashedMap", NULL, 0x4, NULL, NULL },
    { "initWithInt:", "AbstractHashedMap", NULL, 0x4, NULL, NULL },
    { "initWithInt:withFloat:", "AbstractHashedMap", NULL, 0x4, NULL, NULL },
    { "initWithJavaUtilMap:", "AbstractHashedMap", NULL, 0x4, NULL, NULL },
    { "init__", "init", "V", 0x4, NULL, NULL },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(TK;TV;)TV;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "hash__WithId:", "hash", "I", 0x4, NULL, NULL },
    { "isEqualKeyWithId:withId:", "isEqualKey", "Z", 0x4, NULL, NULL },
    { "isEqualValueWithId:withId:", "isEqualValue", "Z", 0x4, NULL, NULL },
    { "hashIndexWithInt:withInt:", "hashIndex", "I", 0x4, NULL, NULL },
    { "getEntryWithId:", "getEntry", "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", 0x4, NULL, NULL },
    { "updateEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withId:", "updateEntry", "V", 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;TV;)V" },
    { "reuseEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:withInt:withId:withId:", "reuseEntry", "V", 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;IITK;TV;)V" },
    { "addMappingWithInt:withInt:withId:withId:", "addMapping", "V", 0x4, NULL, "(IITK;TV;)V" },
    { "createEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:withId:withId:", "createEntry", "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;ITK;TV;)Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;" },
    { "addEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:", "addEntry", "V", 0x4, NULL, NULL },
    { "removeMappingWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:withOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:", "removeMapping", "V", 0x4, NULL, NULL },
    { "removeEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:withOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:", "removeEntry", "V", 0x4, NULL, NULL },
    { "destroyEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:", "destroyEntry", "V", 0x4, NULL, NULL },
    { "checkCapacity", NULL, "V", 0x4, NULL, NULL },
    { "ensureCapacityWithInt:", "ensureCapacity", "V", 0x4, NULL, NULL },
    { "calculateNewCapacityWithInt:", "calculateNewCapacity", "I", 0x4, NULL, NULL },
    { "calculateThresholdWithInt:withFloat:", "calculateThreshold", "I", 0x4, NULL, NULL },
    { "entryNextWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:", "entryNext", "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", 0x4, NULL, NULL },
    { "entryHashCodeWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:", "entryHashCode", "I", 0x4, NULL, NULL },
    { "entryKeyWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:", "entryKey", "TK;", 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;)TK;" },
    { "entryValueWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:", "entryValue", "TV;", 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;)TV;" },
    { "mapIterator", NULL, "Lorg.apache.commons.collections15.MapIterator;", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "createEntrySetIterator", NULL, "Ljava.util.Iterator;", 0x4, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "createKeySetIterator", NULL, "Ljava.util.Iterator;", 0x4, NULL, NULL },
    { "values", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "createValuesIterator", NULL, "Ljava.util.Iterator;", 0x4, NULL, NULL },
    { "doWriteObjectWithJavaIoObjectOutputStream:", "doWriteObject", "V", 0x4, "Ljava.io.IOException;", NULL },
    { "doReadObjectWithJavaIoObjectInputStream:", "doReadObject", "V", 0x4, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NO_NEXT_ENTRY_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheCommonsCollections15MapAbstractHashedMap_NO_NEXT_ENTRY_, NULL,  },
    { "NO_PREVIOUS_ENTRY_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheCommonsCollections15MapAbstractHashedMap_NO_PREVIOUS_ENTRY_, NULL,  },
    { "REMOVE_INVALID_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheCommonsCollections15MapAbstractHashedMap_REMOVE_INVALID_, NULL,  },
    { "GETKEY_INVALID_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheCommonsCollections15MapAbstractHashedMap_GETKEY_INVALID_, NULL,  },
    { "GETVALUE_INVALID_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheCommonsCollections15MapAbstractHashedMap_GETVALUE_INVALID_, NULL,  },
    { "SETVALUE_INVALID_", NULL, 0x1c, "Ljava.lang.String;", &OrgApacheCommonsCollections15MapAbstractHashedMap_SETVALUE_INVALID_, NULL,  },
    { "DEFAULT_CAPACITY_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_CAPACITY },
    { "DEFAULT_THRESHOLD_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_THRESHOLD },
    { "DEFAULT_LOAD_FACTOR_", NULL, 0x1c, "F", NULL, NULL, .constantValue.asFloat = OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_LOAD_FACTOR },
    { "MAXIMUM_CAPACITY_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15MapAbstractHashedMap_MAXIMUM_CAPACITY },
    { "NULL__", "NULL", 0x1c, "Ljava.lang.Object;", &OrgApacheCommonsCollections15MapAbstractHashedMap_NULL__, NULL,  },
    { "loadFactor_", NULL, 0x84, "F", NULL, NULL,  },
    { "size__", "size", 0x84, "I", NULL, NULL,  },
    { "data_", NULL, 0x84, "[Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", NULL, "[Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;",  },
    { "threshold_", NULL, 0x84, "I", NULL, NULL,  },
    { "modCount_", NULL, 0x84, "I", NULL, NULL,  },
    { "entrySet__", "entrySet", 0x84, "Lorg.apache.commons.collections15.map.AbstractHashedMap$EntrySet;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap$EntrySet<TK;TV;>;",  },
    { "keySet_AbstractHashedMap_", "keySet", 0x84, "Lorg.apache.commons.collections15.map.AbstractHashedMap$KeySet;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap$KeySet<TK;TV;>;",  },
    { "values__", "values", 0x84, "Lorg.apache.commons.collections15.map.AbstractHashedMap$Values;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap$Values<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.map.AbstractHashedMap$HashMapIterator;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$EntrySet;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$EntrySetIterator;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$KeySet;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$KeySetIterator;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$Values;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$ValuesIterator;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashIterator;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap = { 2, "AbstractHashedMap", "org.apache.commons.collections15.map", NULL, 0x1, 49, methods, 19, fields, 2, superclass_type_args, 9, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractMap<TK;TV;>;Lorg/apache/commons/collections15/IterableMap<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_init(OrgApacheCommonsCollections15MapAbstractHashedMap *self) {
  (void) JavaUtilAbstractMap_init(self);
}

OrgApacheCommonsCollections15MapAbstractHashedMap *new_OrgApacheCommonsCollections15MapAbstractHashedMap_init() {
  OrgApacheCommonsCollections15MapAbstractHashedMap *self = [OrgApacheCommonsCollections15MapAbstractHashedMap alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_init(self);
  return self;
}

void OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_withInt_(OrgApacheCommonsCollections15MapAbstractHashedMap *self, jint initialCapacity, jfloat loadFactor, jint threshold) {
  (void) JavaUtilAbstractMap_init(self);
  self->loadFactor_ = loadFactor;
  self->data_ = [IOSObjectArray newArrayWithLength:initialCapacity type:OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_class_()];
  self->threshold_ = threshold;
  [self init__];
}

OrgApacheCommonsCollections15MapAbstractHashedMap *new_OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_withInt_(jint initialCapacity, jfloat loadFactor, jint threshold) {
  OrgApacheCommonsCollections15MapAbstractHashedMap *self = [OrgApacheCommonsCollections15MapAbstractHashedMap alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_withInt_(self, initialCapacity, loadFactor, threshold);
  return self;
}

void OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_(OrgApacheCommonsCollections15MapAbstractHashedMap *self, jint initialCapacity) {
  (void) OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(self, initialCapacity, OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_LOAD_FACTOR);
}

OrgApacheCommonsCollections15MapAbstractHashedMap *new_OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_(jint initialCapacity) {
  OrgApacheCommonsCollections15MapAbstractHashedMap *self = [OrgApacheCommonsCollections15MapAbstractHashedMap alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_(self, initialCapacity);
  return self;
}

void OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(OrgApacheCommonsCollections15MapAbstractHashedMap *self, jint initialCapacity, jfloat loadFactor) {
  (void) JavaUtilAbstractMap_init(self);
  if (initialCapacity < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Initial capacity must be greater than 0");
  }
  if (loadFactor <= 0.0f || JavaLangFloat_isNaNWithFloat_(loadFactor)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Load factor must be greater than 0");
  }
  self->loadFactor_ = loadFactor;
  self->threshold_ = [self calculateThresholdWithInt:initialCapacity withFloat:loadFactor];
  initialCapacity = [self calculateNewCapacityWithInt:initialCapacity];
  self->data_ = [IOSObjectArray newArrayWithLength:initialCapacity type:OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_class_()];
  [self init__];
}

OrgApacheCommonsCollections15MapAbstractHashedMap *new_OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(jint initialCapacity, jfloat loadFactor) {
  OrgApacheCommonsCollections15MapAbstractHashedMap *self = [OrgApacheCommonsCollections15MapAbstractHashedMap alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
  return self;
}

void OrgApacheCommonsCollections15MapAbstractHashedMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *self, id<JavaUtilMap> map) {
  (void) OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(self, JavaLangMath_maxWithInt_withInt_(2 * [((id<JavaUtilMap>) nil_chk(map)) size], OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_CAPACITY), OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_LOAD_FACTOR);
  [self putAllWithJavaUtilMap:map];
}

OrgApacheCommonsCollections15MapAbstractHashedMap *new_OrgApacheCommonsCollections15MapAbstractHashedMap_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15MapAbstractHashedMap *self = [OrgApacheCommonsCollections15MapAbstractHashedMap alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithJavaUtilMap_(self, map);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (jboolean)hasNext {
  return (next_ != nil);
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)nextEntry {
  if (((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_))->modCount_ != expectedModCount_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *newCurrent = next_;
  if (newCurrent == nil) {
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_NO_NEXT_ENTRY_());
  }
  IOSObjectArray *data = parent_->data_;
  jint i = hashIndex_;
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *n = ((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(newCurrent))->next_;
  while (n == nil && i > 0) {
    n = IOSObjectArray_Get(nil_chk(data), --i);
  }
  next_ = n;
  hashIndex_ = i;
  last_ = newCurrent;
  return newCurrent;
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)currentEntry {
  return last_;
}

- (void)remove {
  if (last_ == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_REMOVE_INVALID_());
  }
  if (((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_))->modCount_ != expectedModCount_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
  (void) [parent_ removeWithId:[((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(last_)) getKey]];
  last_ = nil;
  expectedModCount_ = parent_->modCount_;
}

- (NSString *)description {
  if (last_ != nil) {
    return JreStrcat("$@C@C", @"Iterator[", [last_ getKey], '=', [last_ getValue], ']');
  }
  else {
    return @"Iterator[]";
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "HashIterator", NULL, 0x4, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "nextEntry", NULL, "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", 0x4, NULL, NULL },
    { "currentEntry", NULL, "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", 0x4, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.map.AbstractHashedMap;", NULL, NULL,  },
    { "hashIndex_", NULL, 0x4, "I", NULL, NULL,  },
    { "last_", NULL, 0x4, "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;",  },
    { "next_", NULL, 0x4, "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;",  },
    { "expectedModCount_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator = { 2, "HashIterator", "org.apache.commons.collections15.map", "AbstractHashedMap", 0x40c, 6, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) NSObject_init(self);
  self->parent_ = parent;
  IOSObjectArray *data = ((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent))->data_;
  jint i = ((IOSObjectArray *) nil_chk(data))->size_;
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next = nil;
  while (i > 0 && next == nil) {
    next = IOSObjectArray_Get(data, --i);
  }
  self->next_ = next;
  self->hashIndex_ = i;
  self->expectedModCount_ = parent->modCount_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (id)next {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk([super nextEntry])) getKey];
}

- (id)getKey {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *current = [self currentEntry];
  if (current == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_GETKEY_INVALID_());
  }
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(current)) getKey];
}

- (id)getValue {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *current = [self currentEntry];
  if (current == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_GETVALUE_INVALID_());
  }
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(current)) getValue];
}

- (id)setValueWithId:(id)value {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *current = [self currentEntry];
  if (current == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_SETVALUE_INVALID_());
  }
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk(current)) setValueWithId:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "HashMapIterator", NULL, 0x4, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator = { 2, "HashMapIterator", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 5, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractHashedMap$HashIterator<TK;TV;>;Lorg/apache/commons/collections15/MapIterator<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
}

OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator *new_OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_HashMapIterator)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (jint)size {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) size];
}

- (void)clear {
  [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) clear];
}

- (jboolean)containsWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_ {
  id<JavaUtilMap_Entry> e = entry_;
  id<JavaUtilMap_Entry> match = [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) getEntryWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]];
  return (match != nil && [match isEqual:e]);
}

- (jboolean)removeWithId:(id)obj {
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  if ([self containsWithId:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  id key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
  (void) [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) removeWithId:key];
  return YES;
}

- (id<JavaUtilIterator>)iterator {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) createEntrySetIterator];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "EntrySet", NULL, 0x4, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithJavaUtilMap_Entry:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.map.AbstractHashedMap;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"Ljava.util.Map$Entry;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet = { 2, "EntrySet", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 6, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractSet<Ljava/util/Map$Entry<TK;TV;>;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) JavaUtilAbstractSet_init(self);
  self->parent_ = parent;
}

OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet *new_OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySet)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)next {
  return [super nextEntry];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "EntrySetIterator", NULL, 0x4, NULL, NULL },
    { "next", NULL, "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", 0x1, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator = { 2, "EntrySetIterator", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 2, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractHashedMap$HashIterator<TK;TV;>;Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
}

OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator *new_OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_EntrySetIterator)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (jint)size {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) size];
}

- (void)clear {
  [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) clear];
}

- (jboolean)containsWithId:(id)key {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) containsKeyWithId:key];
}

- (jboolean)removeWithId:(id)key {
  jboolean result = [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) containsKeyWithId:key];
  (void) [parent_ removeWithId:key];
  return result;
}

- (id<JavaUtilIterator>)iterator {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) createKeySetIterator];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "KeySet", NULL, 0x4, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.map.AbstractHashedMap;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TK;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet = { 2, "KeySet", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 6, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractSet<TK;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) JavaUtilAbstractSet_init(self);
  self->parent_ = parent;
}

OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet *new_OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_KeySet)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (id)next {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk([super nextEntry])) getKey];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "KeySetIterator", NULL, 0x4, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator = { 2, "KeySetIterator", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 2, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractHashedMap$HashIterator<TK;TV;>;Ljava/util/Iterator<TK;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
}

OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator *new_OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_KeySetIterator)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_Values

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_Values_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (jint)size {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) size];
}

- (void)clear {
  [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) clear];
}

- (jboolean)containsWithId:(id)value {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) containsValueWithId:value];
}

- (id<JavaUtilIterator>)iterator {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(parent_)) createValuesIterator];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "Values", NULL, 0x4, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x14, "Lorg.apache.commons.collections15.map.AbstractHashedMap;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_Values = { 2, "Values", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 5, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractCollection<TV;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_Values;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_Values_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_Values *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) JavaUtilAbstractCollection_init(self);
  self->parent_ = parent;
}

OrgApacheCommonsCollections15MapAbstractHashedMap_Values *new_OrgApacheCommonsCollections15MapAbstractHashedMap_Values_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_Values *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_Values alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_Values_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_Values)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)parent {
  OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

- (id)next {
  return [((OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *) nil_chk([super nextEntry])) getValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap:", "ValuesIterator", NULL, 0x4, NULL, NULL },
    { "next", NULL, "TV;", 0x1, NULL, "()TV;" },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator = { 2, "ValuesIterator", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 2, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractHashedMap$HashIterator<TK;TV;>;Ljava/util/Iterator<TV;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator *self, OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  (void) OrgApacheCommonsCollections15MapAbstractHashedMap_HashIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
}

OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator *new_OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *parent) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_ValuesIterator)

@implementation OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)next
                                                                            withInt:(jint)hashCode
                                                                             withId:(id)key
                                                                             withId:(id)value {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(self, next, hashCode, key, value);
  return self;
}

- (id)getKey {
  return key_;
}

- (void)setKeyWithId:(id)key {
  self->key_ = key;
}

- (id)getValue {
  return value_;
}

- (id)setValueWithId:(id)value {
  id old = self->value_;
  self->value_ = value;
  return old;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> other = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  return ([self getKey] == nil ? [((id<JavaUtilMap_Entry>) nil_chk(other)) getKey] == nil : [nil_chk([self getKey]) isEqual:[((id<JavaUtilMap_Entry>) nil_chk(other)) getKey]]) && ([self getValue] == nil ? [other getValue] == nil : [nil_chk([self getValue]) isEqual:[other getValue]]);
}

- (NSUInteger)hash {
  return ([self getKey] == nil ? 0 : ((jint) [nil_chk([self getKey]) hash])) ^ ([self getValue] == nil ? 0 : ((jint) [nil_chk([self getValue]) hash]));
}

- (NSString *)description {
  return [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([new_JavaLangStringBuffer_init() appendWithId:[self getKey]])) appendWithChar:'='])) appendWithId:[self getValue]])) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:withId:withId:", "HashEntry", NULL, 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;ITK;TV;)V" },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "setKeyWithId:", "setKey", "V", 0x1, NULL, "(TK;)V" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "next_", NULL, 0x4, "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;",  },
    { "hashCode__", "hashCode", 0x4, "I", NULL, NULL,  },
    { "key_", NULL, 0x2, "TK;", NULL, "TK;",  },
    { "value_", NULL, 0x2, "TV;", NULL, "TV;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry = { 2, "HashEntry", "org.apache.commons.collections15.map", "AbstractHashedMap", 0xc, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map$Entry<TK;TV;>;Lorg/apache/commons/collections15/KeyValue<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry;
}

@end

void OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *self, OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next, jint hashCode, id key, id value) {
  (void) NSObject_init(self);
  self->next_ = next;
  self->hashCode__ = hashCode;
  self->key_ = key;
  self->value_ = value;
}

OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *new_OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next, jint hashCode, id key, id value) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *self = [OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry alloc];
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(self, next, hashCode, key, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry)
