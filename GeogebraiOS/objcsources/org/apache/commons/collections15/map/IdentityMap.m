//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/map/IdentityMap.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/System.h"
#include "java/util/Map.h"
#include "org/apache/commons/collections15/map/AbstractHashedMap.h"
#include "org/apache/commons/collections15/map/IdentityMap.h"

#define OrgApacheCommonsCollections15MapIdentityMap_serialVersionUID 2028493495224302329LL

@interface OrgApacheCommonsCollections15MapIdentityMap ()

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15MapIdentityMap, serialVersionUID, jlong)

@implementation OrgApacheCommonsCollections15MapIdentityMap

- (instancetype)init {
  OrgApacheCommonsCollections15MapIdentityMap_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity {
  OrgApacheCommonsCollections15MapIdentityMap_initWithInt_(self, initialCapacity);
  return self;
}

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor {
  OrgApacheCommonsCollections15MapIdentityMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheCommonsCollections15MapIdentityMap_initWithJavaUtilMap_(self, map);
  return self;
}

- (jint)hash__WithId:(id)key {
  return JavaLangSystem_identityHashCodeWithId_(key);
}

- (jboolean)isEqualKeyWithId:(id)key1
                      withId:(id)key2 {
  return key1 == key2;
}

- (jboolean)isEqualValueWithId:(id)value1
                        withId:(id)value2 {
  return value1 == value2;
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)createEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)next
                                                                                                                                    withInt:(jint)hashCode
                                                                                                                                     withId:(id)key
                                                                                                                                     withId:(id)value {
  return [new_OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(next, hashCode, key, value) autorelease];
}

- (id)clone {
  return [super clone];
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [self doWriteObjectWithJavaIoObjectOutputStream:outArg];
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  [self doReadObjectWithJavaIoObjectInputStream:inArg];
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "IdentityMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "IdentityMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:withFloat:", "IdentityMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:", "IdentityMap", NULL, 0x1, NULL, NULL },
    { "hash__WithId:", "hash", "I", 0x4, NULL, NULL },
    { "isEqualKeyWithId:withId:", "isEqualKey", "Z", 0x4, NULL, NULL },
    { "isEqualValueWithId:withId:", "isEqualValue", "Z", 0x4, NULL, NULL },
    { "createEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:withId:withId:", "createEntry", "Lorg.apache.commons.collections15.map.AbstractHashedMap$HashEntry;", 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;ITK;TV;)Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;" },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "writeObjectWithJavaIoObjectOutputStream:", "writeObject", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15MapIdentityMap_serialVersionUID },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.map.IdentityMap$IdentityEntry;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapIdentityMap = { 2, "IdentityMap", "org.apache.commons.collections15.map", NULL, 0x1, 11, methods, 1, fields, 2, superclass_type_args, 1, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractHashedMap<TK;TV;>;Ljava/io/Serializable;Ljava/lang/Cloneable;" };
  return &_OrgApacheCommonsCollections15MapIdentityMap;
}

@end

void OrgApacheCommonsCollections15MapIdentityMap_init(OrgApacheCommonsCollections15MapIdentityMap *self) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_withInt_(self, OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_CAPACITY, OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_LOAD_FACTOR, OrgApacheCommonsCollections15MapAbstractHashedMap_DEFAULT_THRESHOLD);
}

OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_init() {
  OrgApacheCommonsCollections15MapIdentityMap *self = [OrgApacheCommonsCollections15MapIdentityMap alloc];
  OrgApacheCommonsCollections15MapIdentityMap_init(self);
  return self;
}

void OrgApacheCommonsCollections15MapIdentityMap_initWithInt_(OrgApacheCommonsCollections15MapIdentityMap *self, jint initialCapacity) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_(self, initialCapacity);
}

OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_initWithInt_(jint initialCapacity) {
  OrgApacheCommonsCollections15MapIdentityMap *self = [OrgApacheCommonsCollections15MapIdentityMap alloc];
  OrgApacheCommonsCollections15MapIdentityMap_initWithInt_(self, initialCapacity);
  return self;
}

void OrgApacheCommonsCollections15MapIdentityMap_initWithInt_withFloat_(OrgApacheCommonsCollections15MapIdentityMap *self, jint initialCapacity, jfloat loadFactor) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
}

OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_initWithInt_withFloat_(jint initialCapacity, jfloat loadFactor) {
  OrgApacheCommonsCollections15MapIdentityMap *self = [OrgApacheCommonsCollections15MapIdentityMap alloc];
  OrgApacheCommonsCollections15MapIdentityMap_initWithInt_withFloat_(self, initialCapacity, loadFactor);
  return self;
}

void OrgApacheCommonsCollections15MapIdentityMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15MapIdentityMap *self, id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_initWithJavaUtilMap_(self, map);
}

OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15MapIdentityMap *self = [OrgApacheCommonsCollections15MapIdentityMap alloc];
  OrgApacheCommonsCollections15MapIdentityMap_initWithJavaUtilMap_(self, map);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapIdentityMap)

@implementation OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)next
                                                                            withInt:(jint)hashCode
                                                                             withId:(id)key
                                                                             withId:(id)value {
  OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(self, next, hashCode, key, value);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> other = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  return ([self getKey] == [((id<JavaUtilMap_Entry>) nil_chk(other)) getKey]) && ([self getValue] == [other getValue]);
}

- (NSUInteger)hash {
  return JavaLangSystem_identityHashCodeWithId_([self getKey]) ^ JavaLangSystem_identityHashCodeWithId_([self getValue]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:withInt:withId:withId:", "IdentityEntry", NULL, 0x4, NULL, "(Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;ITK;TV;)V" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry = { 2, "IdentityEntry", "org.apache.commons.collections15.map", "IdentityMap", 0xc, 3, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/AbstractHashedMap$HashEntry<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry;
}

@end

void OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry *self, OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next, jint hashCode, id key, id value) {
  OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(self, next, hashCode, key, value);
}

OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry *new_OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next, jint hashCode, id key, id value) {
  OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry *self = [OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry alloc];
  OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(self, next, hashCode, key, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry)
