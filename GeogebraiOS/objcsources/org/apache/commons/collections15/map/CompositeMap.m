//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/map/CompositeMap.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/CollectionUtils.h"
#include "org/apache/commons/collections15/collection/CompositeCollection.h"
#include "org/apache/commons/collections15/map/CompositeMap.h"
#include "org/apache/commons/collections15/set/CompositeSet.h"

@interface OrgApacheCommonsCollections15MapCompositeMap () {
 @public
  IOSObjectArray *composite_;
  id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator> mutator_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapCompositeMap, composite_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapCompositeMap, mutator_, id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator>)

@interface OrgApacheCommonsCollections15MapCompositeMap_MapMutator : NSObject
@end

@implementation OrgApacheCommonsCollections15MapCompositeMap

- (instancetype)init {
  OrgApacheCommonsCollections15MapCompositeMap_init(self);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)one
                    withJavaUtilMap:(id<JavaUtilMap>)two {
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_(self, one, two);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)one
                    withJavaUtilMap:(id<JavaUtilMap>)two
withOrgApacheCommonsCollections15MapCompositeMap_MapMutator:(id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator>)mutator {
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, one, two, mutator);
  return self;
}

- (instancetype)initWithJavaUtilMapArray:(IOSObjectArray *)composite {
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_(self, composite);
  return self;
}

- (instancetype)initWithJavaUtilMapArray:(IOSObjectArray *)composite
withOrgApacheCommonsCollections15MapCompositeMap_MapMutator:(id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator>)mutator {
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, composite, mutator);
  return self;
}

- (void)setMutatorWithOrgApacheCommonsCollections15MapCompositeMap_MapMutator:(id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator>)mutator {
  self->mutator_ = mutator;
}

- (void)addCompositedWithJavaUtilMap:(id<JavaUtilMap>)map {
  @synchronized(self) {
    for (jint i = ((IOSObjectArray *) nil_chk(composite_))->size_ - 1; i >= 0; --i) {
      id<JavaUtilCollection> intersect = OrgApacheCommonsCollections15CollectionUtils_intersectionWithJavaUtilCollection_withJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) keySet], [((id<JavaUtilMap>) nil_chk(map)) keySet]);
      if ([((id<JavaUtilCollection>) nil_chk(intersect)) size] != 0) {
        if (self->mutator_ == nil) {
          @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key collision adding Map to CompositeMap");
        }
        else {
          [self->mutator_ resolveCollisionWithOrgApacheCommonsCollections15MapCompositeMap:self withJavaUtilMap:IOSObjectArray_Get(self->composite_, i) withJavaUtilMap:map withJavaUtilCollection:intersect];
        }
      }
    }
    IOSObjectArray *temp = [IOSObjectArray newArrayWithLength:self->composite_->size_ + 1 type:JavaUtilMap_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->composite_, 0, temp, 0, self->composite_->size_);
    (void) IOSObjectArray_Set(temp, temp->size_ - 1, map);
    self->composite_ = temp;
  }
}

- (id<JavaUtilMap>)removeCompositedWithJavaUtilMap:(id<JavaUtilMap>)map {
  @synchronized(self) {
    jint size = ((IOSObjectArray *) nil_chk(self->composite_))->size_;
    for (jint i = 0; i < size; ++i) {
      if ([((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) isEqual:map]) {
        IOSObjectArray *temp = [IOSObjectArray newArrayWithLength:size - 1 type:JavaUtilMap_class_()];
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->composite_, 0, temp, 0, i);
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->composite_, i + 1, temp, i, size - i - 1);
        self->composite_ = temp;
        return map;
      }
    }
    return nil;
  }
}

- (void)clear {
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    [((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) clear];
  }
}

- (jboolean)containsKeyWithId:(id)key {
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    if ([((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) containsKeyWithId:key]) {
      return YES;
    }
  }
  return NO;
}

- (jboolean)containsValueWithId:(id)value {
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    if ([((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) containsValueWithId:value]) {
      return YES;
    }
  }
  return NO;
}

- (id<JavaUtilSet>)entrySet {
  OrgApacheCommonsCollections15SetCompositeSet *entries = new_OrgApacheCommonsCollections15SetCompositeSet_init();
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    [entries addCompositedWithJavaUtilCollection:[((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) entrySet]];
  }
  return entries;
}

- (id)getWithId:(id)key {
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    if ([((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) containsKeyWithId:key]) {
      return (id) [((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) getWithId:key];
    }
  }
  return nil;
}

- (jboolean)isEmpty {
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    if (![((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) isEmpty]) {
      return NO;
    }
  }
  return YES;
}

- (id<JavaUtilSet>)keySet {
  OrgApacheCommonsCollections15SetCompositeSet *keys = new_OrgApacheCommonsCollections15SetCompositeSet_init();
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    [keys addCompositedWithJavaUtilCollection:[((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) keySet]];
  }
  return keys;
}

- (id)putWithId:(id)key
         withId:(id)value {
  if (self->mutator_ == nil) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"No mutator specified");
  }
  return [((id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator>) nil_chk(self->mutator_)) putWithOrgApacheCommonsCollections15MapCompositeMap:self withJavaUtilMapArray:self->composite_ withId:key withId:value];
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  if (self->mutator_ == nil) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"No mutator specified");
  }
  [((id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator>) nil_chk(self->mutator_)) putAllWithOrgApacheCommonsCollections15MapCompositeMap:self withJavaUtilMapArray:self->composite_ withJavaUtilMap:map];
}

- (id)removeWithId:(id)key {
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    if ([((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) containsKeyWithId:key]) {
      return (id) [((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) removeWithId:key];
    }
  }
  return nil;
}

- (jint)size {
  jint size = 0;
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    size += [((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) size];
  }
  return size;
}

- (id<JavaUtilCollection>)values {
  OrgApacheCommonsCollections15CollectionCompositeCollection *keys = new_OrgApacheCommonsCollections15CollectionCompositeCollection_init();
  for (jint i = ((IOSObjectArray *) nil_chk(self->composite_))->size_ - 1; i >= 0; --i) {
    [keys addCompositedWithJavaUtilCollection:[((id<JavaUtilMap>) nil_chk(IOSObjectArray_Get(self->composite_, i))) values]];
  }
  return keys;
}

- (jboolean)isEqual:(id)obj {
  if ([JavaUtilMap_class_() isInstance:obj]) {
    id<JavaUtilMap> map = (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap));
    return ([((id<JavaUtilSet>) nil_chk([self entrySet])) isEqual:[((id<JavaUtilMap>) nil_chk(map)) entrySet]]);
  }
  return NO;
}

- (NSUInteger)hash {
  jint code = 0;
  for (id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([self entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    code += ((jint) [nil_chk([i next]) hash]);
  }
  return code;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CompositeMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:withJavaUtilMap:", "CompositeMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:withJavaUtilMap:withOrgApacheCommonsCollections15MapCompositeMap_MapMutator:", "CompositeMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMapArray:", "CompositeMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMapArray:withOrgApacheCommonsCollections15MapCompositeMap_MapMutator:", "CompositeMap", NULL, 0x1, NULL, NULL },
    { "setMutatorWithOrgApacheCommonsCollections15MapCompositeMap_MapMutator:", "setMutator", "V", 0x1, NULL, NULL },
    { "addCompositedWithJavaUtilMap:", "addComposited", "V", 0x21, "Ljava.lang.IllegalArgumentException;", NULL },
    { "removeCompositedWithJavaUtilMap:", "removeComposited", "Ljava.util.Map;", 0x21, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(TK;TV;)TV;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "values", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "composite_", NULL, 0x2, "[Ljava.util.Map;", NULL, NULL,  },
    { "mutator_", NULL, 0x2, "Lorg.apache.commons.collections15.map.CompositeMap$MapMutator;", NULL, "Lorg/apache/commons/collections15/map/CompositeMap$MapMutator<TK;TV;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.map.CompositeMap$MapMutator;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapCompositeMap = { 2, "CompositeMap", "org.apache.commons.collections15.map", NULL, 0x1, 22, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15MapCompositeMap;
}

@end

void OrgApacheCommonsCollections15MapCompositeMap_init(OrgApacheCommonsCollections15MapCompositeMap *self) {
  (void) OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, [IOSObjectArray newArrayWithObjects:(id[]){  } count:0 type:JavaUtilMap_class_()], nil);
}

OrgApacheCommonsCollections15MapCompositeMap *new_OrgApacheCommonsCollections15MapCompositeMap_init() {
  OrgApacheCommonsCollections15MapCompositeMap *self = [OrgApacheCommonsCollections15MapCompositeMap alloc];
  OrgApacheCommonsCollections15MapCompositeMap_init(self);
  return self;
}

void OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_(OrgApacheCommonsCollections15MapCompositeMap *self, id<JavaUtilMap> one, id<JavaUtilMap> two) {
  (void) OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, [IOSObjectArray newArrayWithObjects:(id[]){ one, two } count:2 type:JavaUtilMap_class_()], nil);
}

OrgApacheCommonsCollections15MapCompositeMap *new_OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_(id<JavaUtilMap> one, id<JavaUtilMap> two) {
  OrgApacheCommonsCollections15MapCompositeMap *self = [OrgApacheCommonsCollections15MapCompositeMap alloc];
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_(self, one, two);
  return self;
}

void OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(OrgApacheCommonsCollections15MapCompositeMap *self, id<JavaUtilMap> one, id<JavaUtilMap> two, id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator> mutator) {
  (void) OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, [IOSObjectArray newArrayWithObjects:(id[]){ one, two } count:2 type:JavaUtilMap_class_()], mutator);
}

OrgApacheCommonsCollections15MapCompositeMap *new_OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(id<JavaUtilMap> one, id<JavaUtilMap> two, id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator> mutator) {
  OrgApacheCommonsCollections15MapCompositeMap *self = [OrgApacheCommonsCollections15MapCompositeMap alloc];
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMap_withJavaUtilMap_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, one, two, mutator);
  return self;
}

void OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_(OrgApacheCommonsCollections15MapCompositeMap *self, IOSObjectArray *composite) {
  (void) OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, composite, nil);
}

OrgApacheCommonsCollections15MapCompositeMap *new_OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_(IOSObjectArray *composite) {
  OrgApacheCommonsCollections15MapCompositeMap *self = [OrgApacheCommonsCollections15MapCompositeMap alloc];
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_(self, composite);
  return self;
}

void OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(OrgApacheCommonsCollections15MapCompositeMap *self, IOSObjectArray *composite, id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator> mutator) {
  (void) NSObject_init(self);
  self->mutator_ = mutator;
  self->composite_ = [IOSObjectArray newArrayWithLength:0 type:JavaUtilMap_class_()];
  for (jint i = ((IOSObjectArray *) nil_chk(composite))->size_ - 1; i >= 0; --i) {
    [self addCompositedWithJavaUtilMap:IOSObjectArray_Get(composite, i)];
  }
}

OrgApacheCommonsCollections15MapCompositeMap *new_OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(IOSObjectArray *composite, id<OrgApacheCommonsCollections15MapCompositeMap_MapMutator> mutator) {
  OrgApacheCommonsCollections15MapCompositeMap *self = [OrgApacheCommonsCollections15MapCompositeMap alloc];
  OrgApacheCommonsCollections15MapCompositeMap_initWithJavaUtilMapArray_withOrgApacheCommonsCollections15MapCompositeMap_MapMutator_(self, composite, mutator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapCompositeMap)

@implementation OrgApacheCommonsCollections15MapCompositeMap_MapMutator

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "resolveCollisionWithOrgApacheCommonsCollections15MapCompositeMap:withJavaUtilMap:withJavaUtilMap:withJavaUtilCollection:", "resolveCollision", "V", 0x401, NULL, NULL },
    { "putWithOrgApacheCommonsCollections15MapCompositeMap:withJavaUtilMapArray:withId:withId:", "put", "TV;", 0x401, NULL, "(Lorg/apache/commons/collections15/map/CompositeMap<TK;TV;>;[Ljava/util/Map;TK;TV;)TV;" },
    { "putAllWithOrgApacheCommonsCollections15MapCompositeMap:withJavaUtilMapArray:withJavaUtilMap:", "putAll", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapCompositeMap_MapMutator = { 2, "MapMutator", "org.apache.commons.collections15.map", "CompositeMap", 0x609, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheCommonsCollections15MapCompositeMap_MapMutator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapCompositeMap_MapMutator)
