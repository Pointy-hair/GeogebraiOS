//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/map/Flat3Map.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/InternalError.h"
#include "java/lang/StringBuffer.h"
#include "java/util/AbstractCollection.h"
#include "java/util/AbstractSet.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/MapIterator.h"
#include "org/apache/commons/collections15/iterators/EmptyIterator.h"
#include "org/apache/commons/collections15/iterators/EmptyMapIterator.h"
#include "org/apache/commons/collections15/map/AbstractHashedMap.h"
#include "org/apache/commons/collections15/map/Flat3Map.h"
#include "org/apache/commons/collections15/map/HashedMap.h"

#define OrgApacheCommonsCollections15MapFlat3Map_serialVersionUID -6701087419741928296LL

@interface OrgApacheCommonsCollections15MapFlat3Map () {
 @public
  jint size__;
  jint hash1_;
  jint hash2_;
  jint hash3_;
  id key1_;
  id key2_;
  id key3_;
  id value1_;
  id value2_;
  id value3_;
  OrgApacheCommonsCollections15MapAbstractHashedMap *delegateMap_;
}

- (void)convertToMap;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map, key1_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map, key2_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map, key3_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map, value1_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map, value2_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map, value3_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map, delegateMap_, OrgApacheCommonsCollections15MapAbstractHashedMap *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15MapFlat3Map, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsCollections15MapFlat3Map_convertToMap(OrgApacheCommonsCollections15MapFlat3Map *self);

@interface OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator () {
 @public
  OrgApacheCommonsCollections15MapFlat3Map *parent_;
  jint nextIndex_;
  jboolean canRemove_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator, parent_, OrgApacheCommonsCollections15MapFlat3Map *)

@interface OrgApacheCommonsCollections15MapFlat3Map_EntrySet () {
 @public
  OrgApacheCommonsCollections15MapFlat3Map *parent_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map_EntrySet, parent_, OrgApacheCommonsCollections15MapFlat3Map *)

@interface OrgApacheCommonsCollections15MapFlat3Map_IteratorBase () {
 @public
  OrgApacheCommonsCollections15MapFlat3Map *parent_;
  jint nextIndex_;
  jboolean canRemove_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map_IteratorBase, parent_, OrgApacheCommonsCollections15MapFlat3Map *)

@interface OrgApacheCommonsCollections15MapFlat3Map_KeySet () {
 @public
  OrgApacheCommonsCollections15MapFlat3Map *parent_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map_KeySet, parent_, OrgApacheCommonsCollections15MapFlat3Map *)

@interface OrgApacheCommonsCollections15MapFlat3Map_Values () {
 @public
  OrgApacheCommonsCollections15MapFlat3Map *parent_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFlat3Map_Values, parent_, OrgApacheCommonsCollections15MapFlat3Map *)

@implementation OrgApacheCommonsCollections15MapFlat3Map

- (instancetype)init {
  OrgApacheCommonsCollections15MapFlat3Map_init(self);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheCommonsCollections15MapFlat3Map_initWithJavaUtilMap_(self, map);
  return self;
}

- (id)getWithId:(id)key {
  if (delegateMap_ != nil) {
    return [delegateMap_ getWithId:key];
  }
  if (key == nil) {
    switch (size__) {
      case 3:
      if (key3_ == nil) return value3_;
      case 2:
      if (key2_ == nil) return value2_;
      case 1:
      if (key1_ == nil) return value1_;
    }
  }
  else {
    if (size__ > 0) {
      jint hashCode = ((jint) [key hash]);
      switch (size__) {
        case 3:
        if (hash3_ == hashCode && [key isEqual:key3_]) return value3_;
        case 2:
        if (hash2_ == hashCode && [key isEqual:key2_]) return value2_;
        case 1:
        if (hash1_ == hashCode && [key isEqual:key1_]) return value1_;
      }
    }
  }
  return nil;
}

- (jint)size {
  if (delegateMap_ != nil) {
    return [delegateMap_ size];
  }
  return size__;
}

- (jboolean)isEmpty {
  return [self size] == 0;
}

- (jboolean)containsKeyWithId:(id)key {
  if (delegateMap_ != nil) {
    return [delegateMap_ containsKeyWithId:key];
  }
  if (key == nil) {
    switch (size__) {
      case 3:
      if (key3_ == nil) return YES;
      case 2:
      if (key2_ == nil) return YES;
      case 1:
      if (key1_ == nil) return YES;
    }
  }
  else {
    if (size__ > 0) {
      jint hashCode = ((jint) [key hash]);
      switch (size__) {
        case 3:
        if (hash3_ == hashCode && [key isEqual:key3_]) return YES;
        case 2:
        if (hash2_ == hashCode && [key isEqual:key2_]) return YES;
        case 1:
        if (hash1_ == hashCode && [key isEqual:key1_]) return YES;
      }
    }
  }
  return NO;
}

- (jboolean)containsValueWithId:(id)value {
  if (delegateMap_ != nil) {
    return [delegateMap_ containsValueWithId:value];
  }
  if (value == nil) {
    switch (size__) {
      case 3:
      if (value3_ == nil) return YES;
      case 2:
      if (value2_ == nil) return YES;
      case 1:
      if (value1_ == nil) return YES;
    }
  }
  else {
    switch (size__) {
      case 3:
      if ([value isEqual:value3_]) return YES;
      case 2:
      if ([value isEqual:value2_]) return YES;
      case 1:
      if ([value isEqual:value1_]) return YES;
    }
  }
  return NO;
}

- (id)putWithId:(id)key
         withId:(id)value {
  if (delegateMap_ != nil) {
    return [delegateMap_ putWithId:key withId:value];
  }
  if (key == nil) {
    switch (size__) {
      case 3:
      if (key3_ == nil) {
        id old = value3_;
        OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, value);
        return old;
      }
      case 2:
      if (key2_ == nil) {
        id old = value2_;
        OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, value);
        return old;
      }
      case 1:
      if (key1_ == nil) {
        id old = value1_;
        OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, value);
        return old;
      }
    }
  }
  else {
    if (size__ > 0) {
      jint hashCode = ((jint) [key hash]);
      switch (size__) {
        case 3:
        if (hash3_ == hashCode && [key isEqual:key3_]) {
          id old = value3_;
          OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, value);
          return old;
        }
        case 2:
        if (hash2_ == hashCode && [key isEqual:key2_]) {
          id old = value2_;
          OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, value);
          return old;
        }
        case 1:
        if (hash1_ == hashCode && [key isEqual:key1_]) {
          id old = value1_;
          OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, value);
          return old;
        }
      }
    }
  }
  switch (size__) {
    default:
    OrgApacheCommonsCollections15MapFlat3Map_convertToMap(self);
    [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(delegateMap_)) putWithId:key withId:value];
    return nil;
    case 2:
    hash3_ = (key == nil ? 0 : ((jint) [key hash]));
    OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, key);
    OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, value);
    break;
    case 1:
    hash2_ = (key == nil ? 0 : ((jint) [key hash]));
    OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, key);
    OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, value);
    break;
    case 0:
    hash1_ = (key == nil ? 0 : ((jint) [key hash]));
    OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, key);
    OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, value);
    break;
  }
  size__++;
  return nil;
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  jint size = [((id<JavaUtilMap>) nil_chk(map)) size];
  if (size == 0) {
    return;
  }
  if (delegateMap_ != nil) {
    [delegateMap_ putAllWithJavaUtilMap:map];
    return;
  }
  if (size < 4) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([map entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
      [self putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[entry_ getValue]];
    }
  }
  else {
    OrgApacheCommonsCollections15MapFlat3Map_convertToMap(self);
    [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(delegateMap_)) putAllWithJavaUtilMap:map];
  }
}

- (void)convertToMap {
  OrgApacheCommonsCollections15MapFlat3Map_convertToMap(self);
}

- (OrgApacheCommonsCollections15MapAbstractHashedMap *)createDelegateMap {
  return [new_OrgApacheCommonsCollections15MapHashedMap_init() autorelease];
}

- (id)removeWithId:(id)key {
  if (delegateMap_ != nil) {
    return [delegateMap_ removeWithId:key];
  }
  if (size__ == 0) {
    return nil;
  }
  if (key == nil) {
    switch (size__) {
      case 3:
      if (key3_ == nil) {
        id old = value3_;
        hash3_ = 0;
        OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil);
        OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil);
        size__ = 2;
        return old;
      }
      if (key2_ == nil) {
        id old = value3_;
        hash2_ = hash3_;
        OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, key3_);
        OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, value3_);
        hash3_ = 0;
        OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil);
        OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil);
        size__ = 2;
        return old;
      }
      if (key1_ == nil) {
        id old = value3_;
        hash1_ = hash3_;
        OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, key3_);
        OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, value3_);
        hash3_ = 0;
        OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil);
        OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil);
        size__ = 2;
        return old;
      }
      return nil;
      case 2:
      if (key2_ == nil) {
        id old = value2_;
        hash2_ = 0;
        OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, nil);
        OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, nil);
        size__ = 1;
        return old;
      }
      if (key1_ == nil) {
        id old = value2_;
        hash1_ = hash2_;
        OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, key2_);
        OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, value2_);
        hash2_ = 0;
        OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, nil);
        OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, nil);
        size__ = 1;
        return old;
      }
      return nil;
      case 1:
      if (key1_ == nil) {
        id old = value1_;
        hash1_ = 0;
        OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, nil);
        OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, nil);
        size__ = 0;
        return old;
      }
    }
  }
  else {
    if (size__ > 0) {
      jint hashCode = ((jint) [key hash]);
      switch (size__) {
        case 3:
        if (hash3_ == hashCode && [key isEqual:key3_]) {
          id old = value3_;
          hash3_ = 0;
          OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil);
          OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil);
          size__ = 2;
          return old;
        }
        if (hash2_ == hashCode && [key isEqual:key2_]) {
          id old = value3_;
          hash2_ = hash3_;
          OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, key3_);
          OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, value3_);
          hash3_ = 0;
          OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil);
          OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil);
          size__ = 2;
          return old;
        }
        if (hash1_ == hashCode && [key isEqual:key1_]) {
          id old = value3_;
          hash1_ = hash3_;
          OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, key3_);
          OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, value3_);
          hash3_ = 0;
          OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil);
          OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil);
          size__ = 2;
          return old;
        }
        return nil;
        case 2:
        if (hash2_ == hashCode && [key isEqual:key2_]) {
          id old = value2_;
          hash2_ = 0;
          OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, nil);
          OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, nil);
          size__ = 1;
          return old;
        }
        if (hash1_ == hashCode && [key isEqual:key1_]) {
          id old = value2_;
          hash1_ = hash2_;
          OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, key2_);
          OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, value2_);
          hash2_ = 0;
          OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, nil);
          OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, nil);
          size__ = 1;
          return old;
        }
        return nil;
        case 1:
        if (hash1_ == hashCode && [key isEqual:key1_]) {
          id old = value1_;
          hash1_ = 0;
          OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, nil);
          OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, nil);
          size__ = 0;
          return old;
        }
      }
    }
  }
  return nil;
}

- (void)clear {
  if (delegateMap_ != nil) {
    [delegateMap_ clear];
    OrgApacheCommonsCollections15MapFlat3Map_set_delegateMap_(self, nil);
  }
  else {
    size__ = 0;
    hash1_ = hash2_ = hash3_ = 0;
    OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil)));
    OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil)));
  }
}

- (id<OrgApacheCommonsCollections15MapIterator>)mapIterator {
  if (delegateMap_ != nil) {
    return [delegateMap_ mapIterator];
  }
  if (size__ == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyMapIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self) autorelease];
}

- (id<JavaUtilSet>)entrySet {
  if (delegateMap_ != nil) {
    return [delegateMap_ entrySet];
  }
  return [new_OrgApacheCommonsCollections15MapFlat3Map_EntrySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(self) autorelease];
}

- (id<JavaUtilSet>)keySet {
  if (delegateMap_ != nil) {
    return [delegateMap_ keySet];
  }
  return [new_OrgApacheCommonsCollections15MapFlat3Map_KeySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(self) autorelease];
}

- (id<JavaUtilCollection>)values {
  if (delegateMap_ != nil) {
    return [delegateMap_ values];
  }
  return [new_OrgApacheCommonsCollections15MapFlat3Map_Values_initWithOrgApacheCommonsCollections15MapFlat3Map_(self) autorelease];
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeIntWithInt:[self size]];
  for (id<OrgApacheCommonsCollections15MapIterator> it = [self mapIterator]; [((id<OrgApacheCommonsCollections15MapIterator>) nil_chk(it)) hasNext]; ) {
    [outArg writeObjectWithId:[it next]];
    [outArg writeObjectWithId:[it getValue]];
  }
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  jint count = [inArg readInt];
  if (count > 3) {
    OrgApacheCommonsCollections15MapFlat3Map_set_delegateMap_(self, [self createDelegateMap]);
  }
  for (jint i = count; i > 0; i--) {
    [self putWithId:(id) [inArg readObject] withId:(id) [inArg readObject]];
  }
}

- (id)clone {
  @try {
    OrgApacheCommonsCollections15MapFlat3Map *cloned = (OrgApacheCommonsCollections15MapFlat3Map *) check_class_cast([super clone], [OrgApacheCommonsCollections15MapFlat3Map class]);
    if (((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(cloned))->delegateMap_ != nil) {
      OrgApacheCommonsCollections15MapFlat3Map_set_delegateMap_(cloned, (OrgApacheCommonsCollections15MapHashedMap *) check_class_cast([cloned->delegateMap_ clone], [OrgApacheCommonsCollections15MapHashedMap class]));
    }
    return cloned;
  }
  @catch (JavaLangCloneNotSupportedException *ex) {
    @throw [new_JavaLangInternalError_init() autorelease];
  }
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if (delegateMap_ != nil) {
    return [delegateMap_ isEqual:obj];
  }
  if ([JavaUtilMap_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap> other = (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap));
  if (size__ != [((id<JavaUtilMap>) nil_chk(other)) size]) {
    return NO;
  }
  if (size__ > 0) {
    id otherValue = nil;
    switch (size__) {
      case 3:
      if ([other containsKeyWithId:key3_] == NO) {
        otherValue = [other getWithId:key3_];
        if (value3_ == nil ? otherValue != nil : ![value3_ isEqual:otherValue]) {
          return NO;
        }
      }
      case 2:
      if ([other containsKeyWithId:key2_] == NO) {
        otherValue = [other getWithId:key2_];
        if (value2_ == nil ? otherValue != nil : ![value2_ isEqual:otherValue]) {
          return NO;
        }
      }
      case 1:
      if ([other containsKeyWithId:key1_] == NO) {
        otherValue = [other getWithId:key1_];
        if (value1_ == nil ? otherValue != nil : ![value1_ isEqual:otherValue]) {
          return NO;
        }
      }
    }
  }
  return YES;
}

- (NSUInteger)hash {
  if (delegateMap_ != nil) {
    return ((jint) [delegateMap_ hash]);
  }
  jint total = 0;
  switch (size__) {
    case 3:
    total += (hash3_ ^ (value3_ == nil ? 0 : ((jint) [value3_ hash])));
    case 2:
    total += (hash2_ ^ (value2_ == nil ? 0 : ((jint) [value2_ hash])));
    case 1:
    total += (hash1_ ^ (value1_ == nil ? 0 : ((jint) [value1_ hash])));
  }
  return total;
}

- (NSString *)description {
  if (delegateMap_ != nil) {
    return [delegateMap_ description];
  }
  if (size__ == 0) {
    return @"{}";
  }
  JavaLangStringBuffer *buf = [new_JavaLangStringBuffer_initWithInt_(128) autorelease];
  [buf appendWithChar:'{'];
  switch (size__) {
    case 3:
    [buf appendWithId:key3_];
    [buf appendWithChar:'='];
    [buf appendWithId:value3_];
    [buf appendWithChar:','];
    case 2:
    [buf appendWithId:key2_];
    [buf appendWithChar:'='];
    [buf appendWithId:value2_];
    [buf appendWithChar:','];
    case 1:
    [buf appendWithId:key1_];
    [buf appendWithChar:'='];
    [buf appendWithId:value1_];
  }
  [buf appendWithChar:'}'];
  return [buf description];
}

- (void)dealloc {
  RELEASE_(key1_);
  RELEASE_(key2_);
  RELEASE_(key3_);
  RELEASE_(value1_);
  RELEASE_(value2_);
  RELEASE_(value3_);
  RELEASE_(delegateMap_);
  [super dealloc];
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Flat3Map", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:", "Flat3Map", NULL, 0x1, NULL, NULL },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(TK;TV;)TV;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, NULL },
    { "convertToMap", NULL, "V", 0x2, NULL, NULL },
    { "createDelegateMap", NULL, "Lorg.apache.commons.collections15.map.AbstractHashedMap;", 0x4, NULL, NULL },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "mapIterator", NULL, "Lorg.apache.commons.collections15.MapIterator;", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "values", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "writeObjectWithJavaIoObjectOutputStream:", "writeObject", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15MapFlat3Map_serialVersionUID },
    { "size__", "size", 0x82, "I", NULL, NULL,  },
    { "hash1_", NULL, 0x82, "I", NULL, NULL,  },
    { "hash2_", NULL, 0x82, "I", NULL, NULL,  },
    { "hash3_", NULL, 0x82, "I", NULL, NULL,  },
    { "key1_", NULL, 0x82, "TK;", NULL, "TK;",  },
    { "key2_", NULL, 0x82, "TK;", NULL, "TK;",  },
    { "key3_", NULL, 0x82, "TK;", NULL, "TK;",  },
    { "value1_", NULL, 0x82, "TV;", NULL, "TV;",  },
    { "value2_", NULL, 0x82, "TV;", NULL, "TV;",  },
    { "value3_", NULL, 0x82, "TV;", NULL, "TV;",  },
    { "delegateMap_", NULL, 0x82, "Lorg.apache.commons.collections15.map.AbstractHashedMap;", NULL, "Lorg/apache/commons/collections15/map/AbstractHashedMap<TK;TV;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.map.Flat3Map$FlatMapIterator;", "Lorg.apache.commons.collections15.map.Flat3Map$EntrySet;", "Lorg.apache.commons.collections15.map.Flat3Map$EntrySetIterator;", "Lorg.apache.commons.collections15.map.Flat3Map$IteratorBase;", "Lorg.apache.commons.collections15.map.Flat3Map$KeySet;", "Lorg.apache.commons.collections15.map.Flat3Map$KeySetIterator;", "Lorg.apache.commons.collections15.map.Flat3Map$Values;", "Lorg.apache.commons.collections15.map.Flat3Map$ValuesIterator;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map = { 2, "Flat3Map", "org.apache.commons.collections15.map", NULL, 0x1, 23, methods, 12, fields, 0, NULL, 8, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/IterableMap<TK;TV;>;Ljava/io/Serializable;Ljava/lang/Cloneable;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_init(OrgApacheCommonsCollections15MapFlat3Map *self) {
  NSObject_init(self);
}

OrgApacheCommonsCollections15MapFlat3Map *new_OrgApacheCommonsCollections15MapFlat3Map_init() {
  OrgApacheCommonsCollections15MapFlat3Map *self = [OrgApacheCommonsCollections15MapFlat3Map alloc];
  OrgApacheCommonsCollections15MapFlat3Map_init(self);
  return self;
}

void OrgApacheCommonsCollections15MapFlat3Map_initWithJavaUtilMap_(OrgApacheCommonsCollections15MapFlat3Map *self, id<JavaUtilMap> map) {
  NSObject_init(self);
  [self putAllWithJavaUtilMap:map];
}

OrgApacheCommonsCollections15MapFlat3Map *new_OrgApacheCommonsCollections15MapFlat3Map_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15MapFlat3Map *self = [OrgApacheCommonsCollections15MapFlat3Map alloc];
  OrgApacheCommonsCollections15MapFlat3Map_initWithJavaUtilMap_(self, map);
  return self;
}

void OrgApacheCommonsCollections15MapFlat3Map_convertToMap(OrgApacheCommonsCollections15MapFlat3Map *self) {
  OrgApacheCommonsCollections15MapFlat3Map_set_delegateMap_(self, [self createDelegateMap]);
  switch (self->size__) {
    case 3:
    [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(self->delegateMap_)) putWithId:self->key3_ withId:self->value3_];
    case 2:
    [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(self->delegateMap_)) putWithId:self->key2_ withId:self->value2_];
    case 1:
    [((OrgApacheCommonsCollections15MapAbstractHashedMap *) nil_chk(self->delegateMap_)) putWithId:self->key1_ withId:self->value1_];
  }
  self->size__ = 0;
  self->hash1_ = self->hash2_ = self->hash3_ = 0;
  OrgApacheCommonsCollections15MapFlat3Map_set_key1_(self, OrgApacheCommonsCollections15MapFlat3Map_set_key2_(self, OrgApacheCommonsCollections15MapFlat3Map_set_key3_(self, nil)));
  OrgApacheCommonsCollections15MapFlat3Map_set_value1_(self, OrgApacheCommonsCollections15MapFlat3Map_set_value2_(self, OrgApacheCommonsCollections15MapFlat3Map_set_value3_(self, nil)));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map)

@implementation OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)parent {
  OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

- (jboolean)hasNext {
  return (nextIndex_ < ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->size__);
}

- (id)next {
  if ([self hasNext] == NO) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_NO_NEXT_ENTRY_()) autorelease];
  }
  canRemove_ = YES;
  nextIndex_++;
  return [self getKey];
}

- (void)remove {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_REMOVE_INVALID_()) autorelease];
  }
  [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) removeWithId:[self getKey]];
  nextIndex_--;
  canRemove_ = NO;
}

- (id)getKey {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_GETKEY_INVALID_()) autorelease];
  }
  switch (nextIndex_) {
    case 3:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->key3_;
    case 2:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->key2_;
    case 1:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->key1_;
  }
  @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Invalid map index") autorelease];
}

- (id)getValue {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_GETVALUE_INVALID_()) autorelease];
  }
  switch (nextIndex_) {
    case 3:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->value3_;
    case 2:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->value2_;
    case 1:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->value1_;
  }
  @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Invalid map index") autorelease];
}

- (id)setValueWithId:(id)value {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_SETVALUE_INVALID_()) autorelease];
  }
  id old = [self getValue];
  switch (nextIndex_) {
    case 3:
    OrgApacheCommonsCollections15MapFlat3Map_set_value3_(nil_chk(parent_), value);
    case 2:
    OrgApacheCommonsCollections15MapFlat3Map_set_value2_(nil_chk(parent_), value);
    case 1:
    OrgApacheCommonsCollections15MapFlat3Map_set_value1_(nil_chk(parent_), value);
  }
  return old;
}

- (void)reset {
  nextIndex_ = 0;
  canRemove_ = NO;
}

- (NSString *)description {
  if (canRemove_) {
    return JreStrcat("$@C@C", @"Iterator[", [self getKey], '=', [self getValue], ']');
  }
  else {
    return @"Iterator[]";
  }
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "FlatMapIterator", NULL, 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x12, "Lorg.apache.commons.collections15.map.Flat3Map;", NULL, "Lorg/apache/commons/collections15/map/Flat3Map<TK;TV;>;",  },
    { "nextIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "canRemove_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator = { 2, "FlatMapIterator", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/MapIterator<TK;TV;>;Lorg/apache/commons/collections15/ResettableIterator<TK;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator *self, OrgApacheCommonsCollections15MapFlat3Map *parent) {
  NSObject_init(self);
  self->nextIndex_ = 0;
  self->canRemove_ = NO;
  OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator_set_parent_(self, parent);
}

OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator *new_OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator *self = [OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator alloc];
  OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_FlatMapIterator)

@implementation OrgApacheCommonsCollections15MapFlat3Map_EntrySet

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)parent {
  OrgApacheCommonsCollections15MapFlat3Map_EntrySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

- (jint)size {
  return [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) size];
}

- (void)clear {
  [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) clear];
}

- (jboolean)removeWithId:(id)obj {
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  id key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
  jboolean result = [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) containsKeyWithId:key];
  [parent_ removeWithId:key];
  return result;
}

- (id<JavaUtilIterator>)iterator {
  if (((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->delegateMap_ != nil) {
    return [((id<JavaUtilSet>) nil_chk([parent_->delegateMap_ entrySet])) iterator];
  }
  if ([parent_ size] == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(parent_) autorelease];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "EntrySet", NULL, 0x0, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x12, "Lorg.apache.commons.collections15.map.Flat3Map;", NULL, "Lorg/apache/commons/collections15/map/Flat3Map<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"Ljava.util.Map$Entry;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_EntrySet = { 2, "EntrySet", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 5, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractSet<Ljava/util/Map$Entry<TK;TV;>;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_EntrySet;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_EntrySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_EntrySet *self, OrgApacheCommonsCollections15MapFlat3Map *parent) {
  JavaUtilAbstractSet_init(self);
  OrgApacheCommonsCollections15MapFlat3Map_EntrySet_set_parent_(self, parent);
}

OrgApacheCommonsCollections15MapFlat3Map_EntrySet *new_OrgApacheCommonsCollections15MapFlat3Map_EntrySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_EntrySet *self = [OrgApacheCommonsCollections15MapFlat3Map_EntrySet alloc];
  OrgApacheCommonsCollections15MapFlat3Map_EntrySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_EntrySet)

@implementation OrgApacheCommonsCollections15MapFlat3Map_IteratorBase

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)parent {
  OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

- (jboolean)hasNext {
  return (nextIndex_ < ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->size__);
}

- (void)remove {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_REMOVE_INVALID_()) autorelease];
  }
  [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) removeWithId:[self getKey]];
  nextIndex_--;
  canRemove_ = NO;
}

- (id)getKey {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_GETKEY_INVALID_()) autorelease];
  }
  switch (nextIndex_) {
    case 3:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->key3_;
    case 2:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->key2_;
    case 1:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->key1_;
  }
  @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Invalid map index") autorelease];
}

- (id<JavaUtilMap_Entry>)superNext {
  if ([self hasNext] == NO) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_NO_NEXT_ENTRY_()) autorelease];
  }
  canRemove_ = YES;
  nextIndex_++;
  return self;
}

- (id)getValue {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_GETVALUE_INVALID_()) autorelease];
  }
  switch (nextIndex_) {
    case 3:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->value3_;
    case 2:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->value2_;
    case 1:
    return ((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->value1_;
  }
  @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Invalid map index") autorelease];
}

- (id)setValueWithId:(id)value {
  if (canRemove_ == NO) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(OrgApacheCommonsCollections15MapAbstractHashedMap_get_SETVALUE_INVALID_()) autorelease];
  }
  id old = [self getValue];
  switch (nextIndex_) {
    case 3:
    OrgApacheCommonsCollections15MapFlat3Map_set_value3_(nil_chk(parent_), value);
    case 2:
    OrgApacheCommonsCollections15MapFlat3Map_set_value2_(nil_chk(parent_), value);
    case 1:
    OrgApacheCommonsCollections15MapFlat3Map_set_value1_(nil_chk(parent_), value);
  }
  return old;
}

- (jboolean)isEqual:(id)obj {
  if (canRemove_ == NO) {
    return NO;
  }
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> other = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  id key = [self getKey];
  id value = [self getValue];
  return (key == nil ? [((id<JavaUtilMap_Entry>) nil_chk(other)) getKey] == nil : [key isEqual:[((id<JavaUtilMap_Entry>) nil_chk(other)) getKey]]) && (value == nil ? [other getValue] == nil : [value isEqual:[other getValue]]);
}

- (NSUInteger)hash {
  if (canRemove_ == NO) {
    return 0;
  }
  id key = [self getKey];
  id value = [self getValue];
  return (key == nil ? 0 : ((jint) [key hash])) ^ (value == nil ? 0 : ((jint) [value hash]));
}

- (NSString *)description {
  if (canRemove_) {
    return JreStrcat("@C@", [self getKey], '=', [self getValue]);
  }
  else {
    return @"";
  }
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "IteratorBase", NULL, 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "superNext", NULL, "Ljava.util.Map$Entry;", 0x1, NULL, NULL },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x12, "Lorg.apache.commons.collections15.map.Flat3Map;", NULL, "Lorg/apache/commons/collections15/map/Flat3Map<TK;TV;>;",  },
    { "nextIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "canRemove_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_IteratorBase = { 2, "IteratorBase", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map$Entry<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_IteratorBase;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_IteratorBase *self, OrgApacheCommonsCollections15MapFlat3Map *parent) {
  NSObject_init(self);
  self->nextIndex_ = 0;
  self->canRemove_ = NO;
  OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_set_parent_(self, parent);
}

OrgApacheCommonsCollections15MapFlat3Map_IteratorBase *new_OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_IteratorBase *self = [OrgApacheCommonsCollections15MapFlat3Map_IteratorBase alloc];
  OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_IteratorBase)

@implementation OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)flat3Map {
  OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, flat3Map);
  return self;
}

- (id<JavaUtilMap_Entry>)next {
  return [self superNext];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "EntrySetIterator", NULL, 0x1, NULL, NULL },
    { "next", NULL, "Ljava.util.Map$Entry;", 0x1, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator = { 2, "EntrySetIterator", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 2, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/Flat3Map$IteratorBase<TK;TV;>;Ljava/util/Iterator<Ljava/util/Map$Entry<TK;TV;>;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator *self, OrgApacheCommonsCollections15MapFlat3Map *flat3Map) {
  OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, flat3Map);
}

OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator *new_OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *flat3Map) {
  OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator *self = [OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator alloc];
  OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, flat3Map);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_EntrySetIterator)

@implementation OrgApacheCommonsCollections15MapFlat3Map_KeySet

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)parent {
  OrgApacheCommonsCollections15MapFlat3Map_KeySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

- (jint)size {
  return [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) size];
}

- (void)clear {
  [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) clear];
}

- (jboolean)containsWithId:(id)key {
  return [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) containsKeyWithId:key];
}

- (jboolean)removeWithId:(id)key {
  jboolean result = [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) containsKeyWithId:key];
  [parent_ removeWithId:key];
  return result;
}

- (id<JavaUtilIterator>)iterator {
  if (((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->delegateMap_ != nil) {
    return [((id<JavaUtilSet>) nil_chk([parent_->delegateMap_ keySet])) iterator];
  }
  if ([parent_ size] == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(parent_) autorelease];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "KeySet", NULL, 0x0, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x12, "Lorg.apache.commons.collections15.map.Flat3Map;", NULL, "Lorg/apache/commons/collections15/map/Flat3Map<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TK;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_KeySet = { 2, "KeySet", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 6, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractSet<TK;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_KeySet;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_KeySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_KeySet *self, OrgApacheCommonsCollections15MapFlat3Map *parent) {
  JavaUtilAbstractSet_init(self);
  OrgApacheCommonsCollections15MapFlat3Map_KeySet_set_parent_(self, parent);
}

OrgApacheCommonsCollections15MapFlat3Map_KeySet *new_OrgApacheCommonsCollections15MapFlat3Map_KeySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_KeySet *self = [OrgApacheCommonsCollections15MapFlat3Map_KeySet alloc];
  OrgApacheCommonsCollections15MapFlat3Map_KeySet_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_KeySet)

@implementation OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)parent {
  OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

- (id)next {
  [self superNext];
  return [self getKey];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "KeySetIterator", NULL, 0x0, NULL, NULL },
    { "next", NULL, "TK;", 0x1, NULL, "()TK;" },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator = { 2, "KeySetIterator", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 2, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/Flat3Map$IteratorBase<TK;TV;>;Ljava/util/Iterator<TK;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator *self, OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
}

OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator *new_OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator *self = [OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator alloc];
  OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_KeySetIterator)

@implementation OrgApacheCommonsCollections15MapFlat3Map_Values

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)parent {
  OrgApacheCommonsCollections15MapFlat3Map_Values_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

- (jint)size {
  return [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) size];
}

- (void)clear {
  [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) clear];
}

- (jboolean)containsWithId:(id)value {
  return [((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_)) containsValueWithId:value];
}

- (id<JavaUtilIterator>)iterator {
  if (((OrgApacheCommonsCollections15MapFlat3Map *) nil_chk(parent_))->delegateMap_ != nil) {
    return [((id<JavaUtilCollection>) nil_chk([parent_->delegateMap_ values])) iterator];
  }
  if ([parent_ size] == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(parent_) autorelease];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "Values", NULL, 0x0, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x12, "Lorg.apache.commons.collections15.map.Flat3Map;", NULL, "Lorg/apache/commons/collections15/map/Flat3Map<TK;TV;>;",  },
  };
  static const char *superclass_type_args[] = {"TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_Values = { 2, "Values", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 5, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractCollection<TV;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_Values;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_Values_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_Values *self, OrgApacheCommonsCollections15MapFlat3Map *parent) {
  JavaUtilAbstractCollection_init(self);
  OrgApacheCommonsCollections15MapFlat3Map_Values_set_parent_(self, parent);
}

OrgApacheCommonsCollections15MapFlat3Map_Values *new_OrgApacheCommonsCollections15MapFlat3Map_Values_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_Values *self = [OrgApacheCommonsCollections15MapFlat3Map_Values alloc];
  OrgApacheCommonsCollections15MapFlat3Map_Values_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_Values)

@implementation OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator

- (instancetype)initWithOrgApacheCommonsCollections15MapFlat3Map:(OrgApacheCommonsCollections15MapFlat3Map *)parent {
  OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

- (id)next {
  [self superNext];
  return [self getValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15MapFlat3Map:", "ValuesIterator", NULL, 0x0, NULL, NULL },
    { "next", NULL, "TV;", 0x1, NULL, "()TV;" },
  };
  static const char *superclass_type_args[] = {"TK;", "TV;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator = { 2, "ValuesIterator", "org.apache.commons.collections15.map", "Flat3Map", 0x8, 2, methods, 0, NULL, 2, superclass_type_args, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Lorg/apache/commons/collections15/map/Flat3Map$IteratorBase<TK;TV;>;Ljava/util/Iterator<TV;>;" };
  return &_OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator;
}

@end

void OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator *self, OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_IteratorBase_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
}

OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator *new_OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(OrgApacheCommonsCollections15MapFlat3Map *parent) {
  OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator *self = [OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator alloc];
  OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator_initWithOrgApacheCommonsCollections15MapFlat3Map_(self, parent);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15MapFlat3Map_ValuesIterator)
