//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/map/MultiKeyMap.java
//

#ifndef _OrgApacheCommonsCollections15MapMultiKeyMap_H_
#define _OrgApacheCommonsCollections15MapMultiKeyMap_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/collections15/IterableMap.h"

@class IOSObjectArray;
@class OrgApacheCommonsCollections15KeyvalueMultiKey;
@class OrgApacheCommonsCollections15MapAbstractHashedMap;
@class OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;
@protocol OrgApacheCommonsCollections15MapIterator;

@interface OrgApacheCommonsCollections15MapMultiKeyMap : NSObject < OrgApacheCommonsCollections15IterableMap, JavaIoSerializable > {
 @public
  OrgApacheCommonsCollections15MapAbstractHashedMap *map_;
}

#pragma mark Public

- (instancetype)init;

- (void)clear;

- (id)clone;

- (jboolean)containsKeyWithNSObjectArray:(IOSObjectArray *)keys;

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)containsValueWithId:(id)value;

+ (OrgApacheCommonsCollections15MapMultiKeyMap *)decorateWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)map;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)obj;

- (id)getWithNSObjectArray:(IOSObjectArray *)keys;

- (id)getWithId:(id)key;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilSet>)keySet;

- (id<OrgApacheCommonsCollections15MapIterator>)mapIterator;

- (id)putWithId:(id)key1
         withId:(id)key2
         withId:(id)key3
         withId:(id)key4
         withId:(id)key5
         withId:(id)value;

- (id)putWithId:(id)key1
         withId:(id)key2
         withId:(id)key3
         withId:(id)key4
         withId:(id)value;

- (id)putWithId:(id)key1
         withId:(id)key2
         withId:(id)key3
         withId:(id)value;

- (id)putWithId:(id)key1
         withId:(id)key2
         withId:(id)value;

- (id)putWithId:(OrgApacheCommonsCollections15KeyvalueMultiKey *)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)mapToCopy;

- (id)putMultiKeyWithId:(id)value
      withNSObjectArray:(IOSObjectArray *)keys;

- (id)removeWithNSObjectArray:(IOSObjectArray *)keys;

- (id)removeWithId:(id)key;

- (jboolean)removeAllWithId:(id)key1;

- (jboolean)removeAllWithId:(id)key1
                     withId:(id)key2;

- (jboolean)removeAllWithId:(id)key1
                     withId:(id)key2
                     withId:(id)key3;

- (jboolean)removeAllWithId:(id)key1
                     withId:(id)key2
                     withId:(id)key3
                     withId:(id)key4;

- (jint)size;

- (NSString *)description;

- (id<JavaUtilCollection>)values;

#pragma mark Protected

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap:(OrgApacheCommonsCollections15MapAbstractHashedMap *)map;

- (void)checkKeyWithId:(id)key;

- (jint)hash__WithNSObjectArray:(IOSObjectArray *)keys;

- (jboolean)isEqualKeyWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)entry_
                                                                    withNSObjectArray:(IOSObjectArray *)keys;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15MapMultiKeyMap)

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapMultiKeyMap, map_, OrgApacheCommonsCollections15MapAbstractHashedMap *)

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapMultiKeyMap *OrgApacheCommonsCollections15MapMultiKeyMap_decorateWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *map);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapMultiKeyMap_init(OrgApacheCommonsCollections15MapMultiKeyMap *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapMultiKeyMap *new_OrgApacheCommonsCollections15MapMultiKeyMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapMultiKeyMap_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapMultiKeyMap *self, OrgApacheCommonsCollections15MapAbstractHashedMap *map);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapMultiKeyMap *new_OrgApacheCommonsCollections15MapMultiKeyMap_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_(OrgApacheCommonsCollections15MapAbstractHashedMap *map) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15MapMultiKeyMap)

#endif // _OrgApacheCommonsCollections15MapMultiKeyMap_H_
