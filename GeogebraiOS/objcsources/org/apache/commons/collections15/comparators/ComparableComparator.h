//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/comparators/ComparableComparator.java
//

#ifndef _OrgApacheCommonsCollections15ComparatorsComparableComparator_H_
#define _OrgApacheCommonsCollections15ComparatorsComparableComparator_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/util/Comparator.h"

@protocol JavaLangComparable;

@interface OrgApacheCommonsCollections15ComparatorsComparableComparator : NSObject < JavaUtilComparator, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(id<JavaLangComparable>)obj1
               withId:(id<JavaLangComparable>)obj2;

- (jboolean)isEqual:(id)object;

+ (id<JavaUtilComparator>)getInstance;

- (NSUInteger)hash;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsCollections15ComparatorsComparableComparator)

FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheCommonsCollections15ComparatorsComparableComparator_getInstance();

FOUNDATION_EXPORT void OrgApacheCommonsCollections15ComparatorsComparableComparator_init(OrgApacheCommonsCollections15ComparatorsComparableComparator *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15ComparatorsComparableComparator *new_OrgApacheCommonsCollections15ComparatorsComparableComparator_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ComparatorsComparableComparator)

#endif // _OrgApacheCommonsCollections15ComparatorsComparableComparator_H_
