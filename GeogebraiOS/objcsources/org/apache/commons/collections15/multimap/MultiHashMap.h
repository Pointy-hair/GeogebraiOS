//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/multimap/MultiHashMap.java
//

#ifndef _OrgApacheCommonsCollections15MultimapMultiHashMap_H_
#define _OrgApacheCommonsCollections15MultimapMultiHashMap_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/collections15/MultiMap.h"

@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheCommonsCollections15MultimapMultiHashMap : NSObject < OrgApacheCommonsCollections15MultiMap, JavaIoSerializable, NSCopying >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)mapToCopy;

- (instancetype)initWithOrgApacheCommonsCollections15MultiMap:(id<OrgApacheCommonsCollections15MultiMap>)mapToCopy;

- (void)clear;

- (id)clone;

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)containsValueWithId:(id)value;

- (jboolean)containsValueWithId:(id)key
                         withId:(id)value;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)obj;

- (id<JavaUtilCollection>)getWithId:(id)key;

- (id<JavaUtilCollection>)getCollectionWithId:(id)key;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iteratorWithId:(id)key;

- (id<JavaUtilSet>)keySet;

- (id<JavaUtilMap>)map;

- (id)putWithId:(id)key
         withId:(id)value;

- (jboolean)putAllWithId:(id)key
  withJavaUtilCollection:(id<JavaUtilCollection>)values;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)putAllWithOrgApacheCommonsCollections15MultiMap:(id<OrgApacheCommonsCollections15MultiMap>)map;

- (id<JavaUtilCollection>)removeWithId:(id)key;

- (id)removeWithId:(id)key
            withId:(id)item;

- (jint)size;

- (jint)sizeWithId:(id)key;

- (NSString *)description;

- (jint)totalSize;

- (id<JavaUtilCollection>)values;

#pragma mark Protected

- (id<JavaUtilCollection>)createCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)coll;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15MultimapMultiHashMap)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MultimapMultiHashMap_init(OrgApacheCommonsCollections15MultimapMultiHashMap *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MultimapMultiHashMap *new_OrgApacheCommonsCollections15MultimapMultiHashMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MultimapMultiHashMap_initWithInt_(OrgApacheCommonsCollections15MultimapMultiHashMap *self, jint initialCapacity);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MultimapMultiHashMap *new_OrgApacheCommonsCollections15MultimapMultiHashMap_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MultimapMultiHashMap_initWithInt_withFloat_(OrgApacheCommonsCollections15MultimapMultiHashMap *self, jint initialCapacity, jfloat loadFactor);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MultimapMultiHashMap *new_OrgApacheCommonsCollections15MultimapMultiHashMap_initWithInt_withFloat_(jint initialCapacity, jfloat loadFactor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MultimapMultiHashMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15MultimapMultiHashMap *self, id<JavaUtilMap> mapToCopy);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MultimapMultiHashMap *new_OrgApacheCommonsCollections15MultimapMultiHashMap_initWithJavaUtilMap_(id<JavaUtilMap> mapToCopy) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MultimapMultiHashMap_initWithOrgApacheCommonsCollections15MultiMap_(OrgApacheCommonsCollections15MultimapMultiHashMap *self, id<OrgApacheCommonsCollections15MultiMap> mapToCopy);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MultimapMultiHashMap *new_OrgApacheCommonsCollections15MultimapMultiHashMap_initWithOrgApacheCommonsCollections15MultiMap_(id<OrgApacheCommonsCollections15MultiMap> mapToCopy) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15MultimapMultiHashMap)

#endif // _OrgApacheCommonsCollections15MultimapMultiHashMap_H_
