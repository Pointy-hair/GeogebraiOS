//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/functors/FunctorUtils.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "org/apache/commons/collections15/Closure.h"
#include "org/apache/commons/collections15/Predicate.h"
#include "org/apache/commons/collections15/Transformer.h"
#include "org/apache/commons/collections15/functors/FunctorUtils.h"

@interface OrgApacheCommonsCollections15FunctorsFunctorUtils ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheCommonsCollections15FunctorsFunctorUtils_init(OrgApacheCommonsCollections15FunctorsFunctorUtils *self);

__attribute__((unused)) static OrgApacheCommonsCollections15FunctorsFunctorUtils *new_OrgApacheCommonsCollections15FunctorsFunctorUtils_init() NS_RETURNS_RETAINED;

@implementation OrgApacheCommonsCollections15FunctorsFunctorUtils

- (instancetype)init {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_init(self);
  return self;
}

+ (IOSObjectArray *)copy__WithOrgApacheCommonsCollections15PredicateArray:(IOSObjectArray *)predicates {
  return OrgApacheCommonsCollections15FunctorsFunctorUtils_copy__WithOrgApacheCommonsCollections15PredicateArray_(predicates);
}

+ (void)validateWithOrgApacheCommonsCollections15PredicateArray:(IOSObjectArray *)predicates {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithOrgApacheCommonsCollections15PredicateArray_(predicates);
}

+ (void)validateMin2WithOrgApacheCommonsCollections15PredicateArray:(IOSObjectArray *)predicates {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_validateMin2WithOrgApacheCommonsCollections15PredicateArray_(predicates);
}

+ (IOSObjectArray *)validateWithJavaUtilCollection:(id<JavaUtilCollection>)predicates {
  return OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithJavaUtilCollection_(predicates);
}

+ (IOSObjectArray *)copy__WithOrgApacheCommonsCollections15ClosureArray:(IOSObjectArray *)closures {
  return OrgApacheCommonsCollections15FunctorsFunctorUtils_copy__WithOrgApacheCommonsCollections15ClosureArray_(closures);
}

+ (void)validateWithOrgApacheCommonsCollections15ClosureArray:(IOSObjectArray *)closures {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithOrgApacheCommonsCollections15ClosureArray_(closures);
}

+ (IOSObjectArray *)copy__WithOrgApacheCommonsCollections15TransformerArray:(IOSObjectArray *)transformers {
  return OrgApacheCommonsCollections15FunctorsFunctorUtils_copy__WithOrgApacheCommonsCollections15TransformerArray_(transformers);
}

+ (void)validateWithOrgApacheCommonsCollections15TransformerArray:(IOSObjectArray *)transformers {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithOrgApacheCommonsCollections15TransformerArray_(transformers);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FunctorUtils", NULL, 0x2, NULL, NULL },
    { "copy__WithOrgApacheCommonsCollections15PredicateArray:", "copy", "[Lorg.apache.commons.collections15.Predicate;", 0x8, NULL, "<T:Ljava/lang/Object;>([Lorg/apache/commons/collections15/Predicate<-TT;>;)[Lorg/apache/commons/collections15/Predicate<-TT;>;" },
    { "validateWithOrgApacheCommonsCollections15PredicateArray:", "validate", "V", 0x8, NULL, "<T:Ljava/lang/Object;>([Lorg/apache/commons/collections15/Predicate<-TT;>;)V" },
    { "validateMin2WithOrgApacheCommonsCollections15PredicateArray:", "validateMin2", "V", 0x8, NULL, "<T:Ljava/lang/Object;>([Lorg/apache/commons/collections15/Predicate<-TT;>;)V" },
    { "validateWithJavaUtilCollection:", "validate", "[Lorg.apache.commons.collections15.Predicate;", 0x8, NULL, "<T:Ljava/lang/Object;>(Ljava/util/Collection<Lorg/apache/commons/collections15/Predicate<-TT;>;>;)[Lorg/apache/commons/collections15/Predicate<-TT;>;" },
    { "copy__WithOrgApacheCommonsCollections15ClosureArray:", "copy", "[Lorg.apache.commons.collections15.Closure;", 0x8, NULL, "<T:Ljava/lang/Object;>([Lorg/apache/commons/collections15/Closure<-TT;>;)[Lorg/apache/commons/collections15/Closure<-TT;>;" },
    { "validateWithOrgApacheCommonsCollections15ClosureArray:", "validate", "V", 0x8, NULL, "<T:Ljava/lang/Object;>([Lorg/apache/commons/collections15/Closure<-TT;>;)V" },
    { "copy__WithOrgApacheCommonsCollections15TransformerArray:", "copy", "[Lorg.apache.commons.collections15.Transformer;", 0x8, NULL, "<I:Ljava/lang/Object;O:Ljava/lang/Object;>([Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;)[Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;" },
    { "validateWithOrgApacheCommonsCollections15TransformerArray:", "validate", "V", 0x8, NULL, "<I:Ljava/lang/Object;O:Ljava/lang/Object;>([Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;)V" },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15FunctorsFunctorUtils = { 2, "FunctorUtils", "org.apache.commons.collections15.functors", NULL, 0x0, 9, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsCollections15FunctorsFunctorUtils;
}

@end

void OrgApacheCommonsCollections15FunctorsFunctorUtils_init(OrgApacheCommonsCollections15FunctorsFunctorUtils *self) {
  (void) NSObject_init(self);
}

OrgApacheCommonsCollections15FunctorsFunctorUtils *new_OrgApacheCommonsCollections15FunctorsFunctorUtils_init() {
  OrgApacheCommonsCollections15FunctorsFunctorUtils *self = [OrgApacheCommonsCollections15FunctorsFunctorUtils alloc];
  OrgApacheCommonsCollections15FunctorsFunctorUtils_init(self);
  return self;
}

IOSObjectArray *OrgApacheCommonsCollections15FunctorsFunctorUtils_copy__WithOrgApacheCommonsCollections15PredicateArray_(IOSObjectArray *predicates) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (predicates == nil) {
    return nil;
  }
  return [((IOSObjectArray *) nil_chk(predicates)) clone];
}

void OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithOrgApacheCommonsCollections15PredicateArray_(IOSObjectArray *predicates) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (predicates == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The predicate array must not be null");
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(predicates))->size_; i++) {
    if (IOSObjectArray_Get(predicates, i) == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"The predicate array must not contain a null predicate, index ", i, @" was null"));
    }
  }
}

void OrgApacheCommonsCollections15FunctorsFunctorUtils_validateMin2WithOrgApacheCommonsCollections15PredicateArray_(IOSObjectArray *predicates) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (predicates == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The predicate array must not be null");
  }
  if (((IOSObjectArray *) nil_chk(predicates))->size_ < 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"At least 2 predicates must be specified in the predicate array, size was ", predicates->size_));
  }
  for (jint i = 0; i < predicates->size_; i++) {
    if (IOSObjectArray_Get(predicates, i) == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"The predicate array must not contain a null predicate, index ", i, @" was null"));
    }
  }
}

IOSObjectArray *OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithJavaUtilCollection_(id<JavaUtilCollection> predicates) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (predicates == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The predicate collection must not be null");
  }
  if ([((id<JavaUtilCollection>) nil_chk(predicates)) size] < 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"At least 2 predicates must be specified in the predicate collection, size was ", [predicates size]));
  }
  IOSObjectArray *preds = [IOSObjectArray newArrayWithLength:[predicates size] type:OrgApacheCommonsCollections15Predicate_class_()];
  jint i = 0;
  for (id<JavaUtilIterator> it = [predicates iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    (void) IOSObjectArray_Set(preds, i, [it next]);
    if (IOSObjectArray_Get(preds, i) == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"The predicate collection must not contain a null predicate, index ", i, @" was null"));
    }
    i++;
  }
  return preds;
}

IOSObjectArray *OrgApacheCommonsCollections15FunctorsFunctorUtils_copy__WithOrgApacheCommonsCollections15ClosureArray_(IOSObjectArray *closures) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (closures == nil) {
    return nil;
  }
  return [((IOSObjectArray *) nil_chk(closures)) clone];
}

void OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithOrgApacheCommonsCollections15ClosureArray_(IOSObjectArray *closures) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (closures == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The closure array must not be null");
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(closures))->size_; i++) {
    if (IOSObjectArray_Get(closures, i) == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"The closure array must not contain a null closure, index ", i, @" was null"));
    }
  }
}

IOSObjectArray *OrgApacheCommonsCollections15FunctorsFunctorUtils_copy__WithOrgApacheCommonsCollections15TransformerArray_(IOSObjectArray *transformers) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (transformers == nil) {
    return nil;
  }
  return [((IOSObjectArray *) nil_chk(transformers)) clone];
}

void OrgApacheCommonsCollections15FunctorsFunctorUtils_validateWithOrgApacheCommonsCollections15TransformerArray_(IOSObjectArray *transformers) {
  OrgApacheCommonsCollections15FunctorsFunctorUtils_initialize();
  if (transformers == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The transformer array must not be null");
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(transformers))->size_; i++) {
    if (IOSObjectArray_Get(transformers, i) == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"The transformer array must not contain a null transformer, index ", i, @" was null"));
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15FunctorsFunctorUtils)
