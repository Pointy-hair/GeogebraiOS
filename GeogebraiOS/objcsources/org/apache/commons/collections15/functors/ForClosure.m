//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/functors/ForClosure.java
//


#include "J2ObjC_source.h"
#include "org/apache/commons/collections15/Closure.h"
#include "org/apache/commons/collections15/functors/ForClosure.h"
#include "org/apache/commons/collections15/functors/NOPClosure.h"

@interface OrgApacheCommonsCollections15FunctorsForClosure () {
 @public
  jint iCount_;
  id<OrgApacheCommonsCollections15Closure> iClosure_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15FunctorsForClosure, iClosure_, id<OrgApacheCommonsCollections15Closure>)

@implementation OrgApacheCommonsCollections15FunctorsForClosure

+ (id<OrgApacheCommonsCollections15Closure>)getInstanceWithInt:(jint)count
                      withOrgApacheCommonsCollections15Closure:(id<OrgApacheCommonsCollections15Closure>)closure {
  return OrgApacheCommonsCollections15FunctorsForClosure_getInstanceWithInt_withOrgApacheCommonsCollections15Closure_(count, closure);
}

- (instancetype)initWithInt:(jint)count
withOrgApacheCommonsCollections15Closure:(id<OrgApacheCommonsCollections15Closure>)closure {
  OrgApacheCommonsCollections15FunctorsForClosure_initWithInt_withOrgApacheCommonsCollections15Closure_(self, count, closure);
  return self;
}

- (void)executeWithId:(id)input {
  for (jint i = 0; i < iCount_; i++) {
    [((id<OrgApacheCommonsCollections15Closure>) nil_chk(iClosure_)) executeWithId:input];
  }
}

- (id<OrgApacheCommonsCollections15Closure>)getClosure {
  return iClosure_;
}

- (jint)getCount {
  return iCount_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstanceWithInt:withOrgApacheCommonsCollections15Closure:", "getInstance", "Lorg.apache.commons.collections15.Closure;", 0x9, NULL, "<T:Ljava/lang/Object;>(ILorg/apache/commons/collections15/Closure<TT;>;)Lorg/apache/commons/collections15/Closure<TT;>;" },
    { "initWithInt:withOrgApacheCommonsCollections15Closure:", "ForClosure", NULL, 0x1, NULL, NULL },
    { "executeWithId:", "execute", "V", 0x1, NULL, "(TT;)V" },
    { "getClosure", NULL, "Lorg.apache.commons.collections15.Closure;", 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x18, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15FunctorsForClosure_serialVersionUID },
    { "iCount_", NULL, 0x12, "I", NULL, NULL,  },
    { "iClosure_", NULL, 0x12, "Lorg.apache.commons.collections15.Closure;", NULL, "Lorg/apache/commons/collections15/Closure<TT;>;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15FunctorsForClosure = { 2, "ForClosure", "org.apache.commons.collections15.functors", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/Closure<TT;>;Ljava/io/Serializable;" };
  return &_OrgApacheCommonsCollections15FunctorsForClosure;
}

@end

id<OrgApacheCommonsCollections15Closure> OrgApacheCommonsCollections15FunctorsForClosure_getInstanceWithInt_withOrgApacheCommonsCollections15Closure_(jint count, id<OrgApacheCommonsCollections15Closure> closure) {
  OrgApacheCommonsCollections15FunctorsForClosure_initialize();
  if (count <= 0 || closure == nil) {
    return OrgApacheCommonsCollections15FunctorsNOPClosure_get_INSTANCE_();
  }
  if (count == 1) {
    return closure;
  }
  return new_OrgApacheCommonsCollections15FunctorsForClosure_initWithInt_withOrgApacheCommonsCollections15Closure_(count, closure);
}

void OrgApacheCommonsCollections15FunctorsForClosure_initWithInt_withOrgApacheCommonsCollections15Closure_(OrgApacheCommonsCollections15FunctorsForClosure *self, jint count, id<OrgApacheCommonsCollections15Closure> closure) {
  (void) NSObject_init(self);
  self->iCount_ = count;
  self->iClosure_ = closure;
}

OrgApacheCommonsCollections15FunctorsForClosure *new_OrgApacheCommonsCollections15FunctorsForClosure_initWithInt_withOrgApacheCommonsCollections15Closure_(jint count, id<OrgApacheCommonsCollections15Closure> closure) {
  OrgApacheCommonsCollections15FunctorsForClosure *self = [OrgApacheCommonsCollections15FunctorsForClosure alloc];
  OrgApacheCommonsCollections15FunctorsForClosure_initWithInt_withOrgApacheCommonsCollections15Closure_(self, count, closure);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15FunctorsForClosure)
