//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/ExtendedProperties.java
//

#ifndef _OrgApacheCommonsCollections15ExtendedProperties_H_
#define _OrgApacheCommonsCollections15ExtendedProperties_H_

#include "J2ObjC_header.h"
#include "java/io/LineNumberReader.h"
#include "java/util/Hashtable.h"
#include "java/util/StringTokenizer.h"

@class IOSObjectArray;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaIoReader;
@class JavaLangBoolean;
@class JavaLangByte;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangShort;
@class JavaUtilArrayList;
@class JavaUtilProperties;
@class JavaUtilVector;
@protocol JavaUtilIterator;
@protocol JavaUtilList;

@interface OrgApacheCommonsCollections15ExtendedProperties : JavaUtilHashtable {
 @public
  NSString *file_;
  NSString *basePath_;
  NSString *fileSeparator_;
  jboolean isInitialized__;
  JavaUtilArrayList *keysAsListed_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)file;

- (instancetype)initWithNSString:(NSString *)file
                    withNSString:(NSString *)defaultFile;

- (void)addPropertyWithNSString:(NSString *)key
                         withId:(id)value;

- (void)clearPropertyWithNSString:(NSString *)key;

- (void)combineWithOrgApacheCommonsCollections15ExtendedProperties:(OrgApacheCommonsCollections15ExtendedProperties *)props;

+ (OrgApacheCommonsCollections15ExtendedProperties *)convertPropertiesWithJavaUtilProperties:(JavaUtilProperties *)props;

- (void)display;

- (jboolean)getBooleanWithNSString:(NSString *)key;

- (jboolean)getBooleanWithNSString:(NSString *)key
                       withBoolean:(jboolean)defaultValue;

- (JavaLangBoolean *)getBooleanWithNSString:(NSString *)key
                        withJavaLangBoolean:(JavaLangBoolean *)defaultValue;

- (jbyte)getByteWithNSString:(NSString *)key;

- (jbyte)getByteWithNSString:(NSString *)key
                    withByte:(jbyte)defaultValue;

- (JavaLangByte *)getByteWithNSString:(NSString *)key
                     withJavaLangByte:(JavaLangByte *)defaultValue;

- (jdouble)getDoubleWithNSString:(NSString *)key;

- (jdouble)getDoubleWithNSString:(NSString *)key
                      withDouble:(jdouble)defaultValue;

- (JavaLangDouble *)getDoubleWithNSString:(NSString *)key
                       withJavaLangDouble:(JavaLangDouble *)defaultValue;

- (jfloat)getFloatWithNSString:(NSString *)key;

- (jfloat)getFloatWithNSString:(NSString *)key
                     withFloat:(jfloat)defaultValue;

- (JavaLangFloat *)getFloatWithNSString:(NSString *)key
                      withJavaLangFloat:(JavaLangFloat *)defaultValue;

- (NSString *)getInclude;

- (jint)getIntWithNSString:(NSString *)name;

- (jint)getIntWithNSString:(NSString *)name
                   withInt:(jint)def;

- (jint)getIntegerWithNSString:(NSString *)key;

- (jint)getIntegerWithNSString:(NSString *)key
                       withInt:(jint)defaultValue;

- (JavaLangInteger *)getIntegerWithNSString:(NSString *)key
                        withJavaLangInteger:(JavaLangInteger *)defaultValue;

- (id<JavaUtilIterator>)getKeys;

- (id<JavaUtilIterator>)getKeysWithNSString:(NSString *)prefix;

- (jlong)getLongWithNSString:(NSString *)key;

- (jlong)getLongWithNSString:(NSString *)key
                    withLong:(jlong)defaultValue;

- (JavaLangLong *)getLongWithNSString:(NSString *)key
                     withJavaLangLong:(JavaLangLong *)defaultValue;

- (JavaUtilProperties *)getPropertiesWithNSString:(NSString *)key;

- (JavaUtilProperties *)getPropertiesWithNSString:(NSString *)key
                           withJavaUtilProperties:(JavaUtilProperties *)defaults;

- (id)getPropertyWithNSString:(NSString *)key;

- (jshort)getShortWithNSString:(NSString *)key;

- (jshort)getShortWithNSString:(NSString *)key
                     withShort:(jshort)defaultValue;

- (JavaLangShort *)getShortWithNSString:(NSString *)key
                      withJavaLangShort:(JavaLangShort *)defaultValue;

- (NSString *)getStringWithNSString:(NSString *)key;

- (NSString *)getStringWithNSString:(NSString *)key
                       withNSString:(NSString *)defaultValue;

- (IOSObjectArray *)getStringArrayWithNSString:(NSString *)key;

- (JavaUtilVector *)getVectorWithNSString:(NSString *)key;

- (JavaUtilVector *)getVectorWithNSString:(NSString *)key
                       withJavaUtilVector:(JavaUtilVector *)defaultValue;

- (jboolean)isInitialized;

- (void)load__WithJavaIoInputStream:(JavaIoInputStream *)input;

- (void)load__WithJavaIoInputStream:(JavaIoInputStream *)input
                       withNSString:(NSString *)enc;

- (void)saveWithJavaIoOutputStream:(JavaIoOutputStream *)output
                      withNSString:(NSString *)header;

- (void)setIncludeWithNSString:(NSString *)inc;

- (void)setPropertyWithNSString:(NSString *)key
                         withId:(id)value;

- (OrgApacheCommonsCollections15ExtendedProperties *)subsetWithNSString:(NSString *)prefix;

- (NSString *)testBooleanWithNSString:(NSString *)value;

#pragma mark Protected

- (NSString *)interpolateWithNSString:(NSString *)base;

- (NSString *)interpolateHelperWithNSString:(NSString *)base
                           withJavaUtilList:(id<JavaUtilList>)priorVariables;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15ExtendedProperties)

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ExtendedProperties, file_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ExtendedProperties, basePath_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ExtendedProperties, fileSeparator_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15ExtendedProperties, keysAsListed_, JavaUtilArrayList *)

FOUNDATION_EXPORT NSString *OrgApacheCommonsCollections15ExtendedProperties_include_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15ExtendedProperties, include_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsCollections15ExtendedProperties, include_, NSString *)

FOUNDATION_EXPORT NSString *OrgApacheCommonsCollections15ExtendedProperties_START_TOKEN_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15ExtendedProperties, START_TOKEN_, NSString *)

FOUNDATION_EXPORT NSString *OrgApacheCommonsCollections15ExtendedProperties_END_TOKEN_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15ExtendedProperties, END_TOKEN_, NSString *)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15ExtendedProperties_init(OrgApacheCommonsCollections15ExtendedProperties *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15ExtendedProperties *new_OrgApacheCommonsCollections15ExtendedProperties_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15ExtendedProperties_initWithNSString_(OrgApacheCommonsCollections15ExtendedProperties *self, NSString *file);

FOUNDATION_EXPORT OrgApacheCommonsCollections15ExtendedProperties *new_OrgApacheCommonsCollections15ExtendedProperties_initWithNSString_(NSString *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15ExtendedProperties_initWithNSString_withNSString_(OrgApacheCommonsCollections15ExtendedProperties *self, NSString *file, NSString *defaultFile);

FOUNDATION_EXPORT OrgApacheCommonsCollections15ExtendedProperties *new_OrgApacheCommonsCollections15ExtendedProperties_initWithNSString_withNSString_(NSString *file, NSString *defaultFile) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsCollections15ExtendedProperties *OrgApacheCommonsCollections15ExtendedProperties_convertPropertiesWithJavaUtilProperties_(JavaUtilProperties *props);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ExtendedProperties)

@interface OrgApacheCommonsCollections15ExtendedProperties_PropertiesReader : JavaIoLineNumberReader

#pragma mark Public

- (instancetype)initWithJavaIoReader:(JavaIoReader *)reader;

- (NSString *)readProperty;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15ExtendedProperties_PropertiesReader)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15ExtendedProperties_PropertiesReader_initWithJavaIoReader_(OrgApacheCommonsCollections15ExtendedProperties_PropertiesReader *self, JavaIoReader *reader);

FOUNDATION_EXPORT OrgApacheCommonsCollections15ExtendedProperties_PropertiesReader *new_OrgApacheCommonsCollections15ExtendedProperties_PropertiesReader_initWithJavaIoReader_(JavaIoReader *reader) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ExtendedProperties_PropertiesReader)

@interface OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer : JavaUtilStringTokenizer

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)string;

- (jboolean)hasMoreTokens;

- (NSString *)nextToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer)

FOUNDATION_EXPORT NSString *OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer_DELIMITER_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer, DELIMITER_, NSString *)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer_initWithNSString_(OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer *self, NSString *string);

FOUNDATION_EXPORT OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer *new_OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ExtendedProperties_PropertiesTokenizer)

#endif // _OrgApacheCommonsCollections15ExtendedProperties_H_
