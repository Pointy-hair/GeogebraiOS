//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/CollectionUtils.java
//

#ifndef _OrgApacheCommonsCollections15CollectionUtils_H_
#define _OrgApacheCommonsCollections15CollectionUtils_H_

#include "J2ObjC_header.h"

@class IOSClass;
@class IOSObjectArray;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilEnumeration;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol OrgApacheCommonsCollections15Closure;
@protocol OrgApacheCommonsCollections15Predicate;
@protocol OrgApacheCommonsCollections15Transformer;

@interface OrgApacheCommonsCollections15CollectionUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection
             withJavaUtilEnumeration:(id<JavaUtilEnumeration>)enumeration;

+ (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                withJavaUtilIterator:(id<JavaUtilIterator>)iterator;

+ (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                   withNSObjectArray:(IOSObjectArray *)elements;

+ (jint)cardinalityWithId:(id)obj
   withJavaUtilCollection:(id<JavaUtilCollection>)coll;

+ (id<JavaUtilCollection>)collectWithJavaUtilCollection:(id<JavaUtilCollection>)inputCollection
           withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer;

+ (id)collectWithJavaLangIterable:(id<JavaLangIterable>)inputCollection
withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer
           withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection;

+ (id<JavaUtilCollection>)collectWithJavaUtilIterator:(id<JavaUtilIterator>)inputIterator
         withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer;

+ (id)collectWithJavaUtilIterator:(id<JavaUtilIterator>)inputIterator
withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer
           withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection;

+ (jboolean)containsAnyWithJavaUtilCollection:(id<JavaUtilCollection>)coll1
                       withJavaUtilCollection:(id<JavaUtilCollection>)coll2;

+ (jint)countMatchesWithJavaLangIterable:(id<JavaLangIterable>)inputIterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (id<JavaUtilCollection>)disjunctionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                     withJavaUtilCollection:(id<JavaUtilCollection>)b;

+ (jboolean)existsWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (void)filterWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (id)findWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (void)forAllDoWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Closure:(id<OrgApacheCommonsCollections15Closure>)closure;

+ (id)getWithId:(id)object
        withInt:(jint)index;

+ (id<JavaUtilMap>)getCardinalityMapWithJavaLangIterable:(id<JavaLangIterable>)iterable;

+ (id)indexWithId:(id)obj
          withInt:(jint)idx;

+ (id)indexWithId:(id)obj
           withId:(id)index;

+ (id<JavaUtilCollection>)intersectionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                      withJavaUtilCollection:(id<JavaUtilCollection>)b;

+ (jboolean)isEqualCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                             withJavaUtilCollection:(id<JavaUtilCollection>)b;

+ (jboolean)isFullWithJavaUtilCollection:(id<JavaUtilCollection>)coll;

+ (jboolean)isProperSubCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                 withJavaUtilCollection:(id<JavaUtilCollection>)b;

+ (jboolean)isSubCollectionWithJavaLangIterable:(id<JavaLangIterable>)a
                           withJavaLangIterable:(id<JavaLangIterable>)b;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (jint)maxSizeWithJavaUtilCollection:(id<JavaUtilCollection>)coll;

+ (id<JavaUtilCollection>)predicatedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                          withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (void)reverseArrayWithNSObjectArray:(IOSObjectArray *)array;

+ (id<JavaUtilCollection>)selectWithJavaUtilCollection:(id<JavaUtilCollection>)inputCollection
            withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (id)selectWithJavaLangIterable:(id<JavaLangIterable>)inputCollection
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate
          withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection;

+ (id<JavaUtilCollection>)selectRejectedWithJavaUtilCollection:(id<JavaUtilCollection>)inputCollection
                    withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (void)selectRejectedWithJavaLangIterable:(id<JavaLangIterable>)inputIterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate
                    withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection;

+ (jint)sizeWithId:(id)object;

+ (id<JavaUtilCollection>)subtractWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                    withJavaLangIterable:(id<JavaLangIterable>)b;

+ (id<JavaUtilCollection>)synchronizedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

+ (void)transformWithJavaUtilCollection:(id<JavaUtilCollection>)collection
withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer;

+ (id<JavaUtilCollection>)transformedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                         withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer;

+ (id<JavaUtilCollection>)typedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                                                   withIOSClass:(IOSClass *)type;

+ (id<JavaUtilCollection>)union__WithJavaUtilCollection:(id<JavaUtilCollection>)a
                                 withJavaUtilCollection:(id<JavaUtilCollection>)b;

+ (id<JavaUtilCollection>)unmodifiableCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsCollections15CollectionUtils)

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_EMPTY_COLLECTION_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15CollectionUtils, EMPTY_COLLECTION_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_init(OrgApacheCommonsCollections15CollectionUtils *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15CollectionUtils *new_OrgApacheCommonsCollections15CollectionUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_union__WithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_intersectionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_disjunctionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_subtractWithJavaUtilCollection_withJavaLangIterable_(id<JavaUtilCollection> a, id<JavaLangIterable> b);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCollections15CollectionUtils_containsAnyWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> coll1, id<JavaUtilCollection> coll2);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT id<JavaUtilMap> OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(id<JavaLangIterable> iterable);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCollections15CollectionUtils_isSubCollectionWithJavaLangIterable_withJavaLangIterable_(id<JavaLangIterable> a, id<JavaLangIterable> b);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCollections15CollectionUtils_isProperSubCollectionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCollections15CollectionUtils_isEqualCollectionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b);

FOUNDATION_EXPORT jint OrgApacheCommonsCollections15CollectionUtils_cardinalityWithId_withJavaUtilCollection_(id obj, id<JavaUtilCollection> coll);

FOUNDATION_EXPORT id OrgApacheCommonsCollections15CollectionUtils_findWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_forAllDoWithJavaLangIterable_withOrgApacheCommonsCollections15Closure_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Closure> closure);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_filterWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_transformWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilCollection> collection, id<OrgApacheCommonsCollections15Transformer> transformer);

FOUNDATION_EXPORT jint OrgApacheCommonsCollections15CollectionUtils_countMatchesWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> inputIterable, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCollections15CollectionUtils_existsWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_selectWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> inputCollection, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT id OrgApacheCommonsCollections15CollectionUtils_selectWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(id<JavaLangIterable> inputCollection, id<OrgApacheCommonsCollections15Predicate> predicate, id<JavaUtilCollection> outputCollection);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_selectRejectedWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> inputCollection, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_selectRejectedWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(id<JavaLangIterable> inputIterable, id<OrgApacheCommonsCollections15Predicate> predicate, id<JavaUtilCollection> outputCollection);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilCollection> inputCollection, id<OrgApacheCommonsCollections15Transformer> transformer);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilIterator> inputIterator, id<OrgApacheCommonsCollections15Transformer> transformer);

FOUNDATION_EXPORT id OrgApacheCommonsCollections15CollectionUtils_collectWithJavaLangIterable_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(id<JavaLangIterable> inputCollection, id<OrgApacheCommonsCollections15Transformer> transformer, id<JavaUtilCollection> outputCollection);

FOUNDATION_EXPORT id OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(id<JavaUtilIterator> inputIterator, id<OrgApacheCommonsCollections15Transformer> transformer, id<JavaUtilCollection> outputCollection);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withJavaUtilIterator_(id<JavaUtilCollection> collection, id<JavaUtilIterator> iterator);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withJavaUtilEnumeration_(id<JavaUtilCollection> collection, id<JavaUtilEnumeration> enumeration);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withNSObjectArray_(id<JavaUtilCollection> collection, IOSObjectArray *elements);

FOUNDATION_EXPORT id OrgApacheCommonsCollections15CollectionUtils_indexWithId_withInt_(id obj, jint idx);

FOUNDATION_EXPORT id OrgApacheCommonsCollections15CollectionUtils_indexWithId_withId_(id obj, id index);

FOUNDATION_EXPORT id OrgApacheCommonsCollections15CollectionUtils_getWithId_withInt_(id object, jint index);

FOUNDATION_EXPORT jint OrgApacheCommonsCollections15CollectionUtils_sizeWithId_(id object);

FOUNDATION_EXPORT void OrgApacheCommonsCollections15CollectionUtils_reverseArrayWithNSObjectArray_(IOSObjectArray *array);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCollections15CollectionUtils_isFullWithJavaUtilCollection_(id<JavaUtilCollection> coll);

FOUNDATION_EXPORT jint OrgApacheCommonsCollections15CollectionUtils_maxSizeWithJavaUtilCollection_(id<JavaUtilCollection> coll);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_synchronizedCollectionWithJavaUtilCollection_(id<JavaUtilCollection> collection);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_unmodifiableCollectionWithJavaUtilCollection_(id<JavaUtilCollection> collection);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_predicatedCollectionWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> collection, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_typedCollectionWithJavaUtilCollection_withIOSClass_(id<JavaUtilCollection> collection, IOSClass *type);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_transformedCollectionWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilCollection> collection, id<OrgApacheCommonsCollections15Transformer> transformer);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15CollectionUtils)

#endif // _OrgApacheCommonsCollections15CollectionUtils_H_
