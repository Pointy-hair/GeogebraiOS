//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/collections15/collection/UnmodifiableBoundedCollection.java
//


#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "org/apache/commons/collections15/BoundedCollection.h"
#include "org/apache/commons/collections15/collection/AbstractCollectionDecorator.h"
#include "org/apache/commons/collections15/collection/AbstractSerializableCollectionDecorator.h"
#include "org/apache/commons/collections15/collection/SynchronizedCollection.h"
#include "org/apache/commons/collections15/collection/UnmodifiableBoundedCollection.h"
#include "org/apache/commons/collections15/iterators/UnmodifiableIterator.h"

#define OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_serialVersionUID -7112672385450340330LL

@interface OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection ()

- (instancetype)initWithOrgApacheCommonsCollections15BoundedCollection:(id<OrgApacheCommonsCollections15BoundedCollection>)coll;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_(OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection *self, id<OrgApacheCommonsCollections15BoundedCollection> coll);

__attribute__((unused)) static OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection *new_OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_(id<OrgApacheCommonsCollections15BoundedCollection> coll) NS_RETURNS_RETAINED;

@implementation OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection

+ (id<OrgApacheCommonsCollections15BoundedCollection>)decorateWithOrgApacheCommonsCollections15BoundedCollection:(id<OrgApacheCommonsCollections15BoundedCollection>)coll {
  return OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_decorateWithOrgApacheCommonsCollections15BoundedCollection_(coll);
}

+ (id<OrgApacheCommonsCollections15BoundedCollection>)decorateUsingWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  return OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_decorateUsingWithJavaUtilCollection_(coll);
}

- (instancetype)initWithOrgApacheCommonsCollections15BoundedCollection:(id<OrgApacheCommonsCollections15BoundedCollection>)coll {
  OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_(self, coll);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return OrgApacheCommonsCollections15IteratorsUnmodifiableIterator_decorateWithJavaUtilIterator_([((id<JavaUtilCollection>) nil_chk([self getCollection])) iterator]);
}

- (jboolean)addWithId:(id)object {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)clear {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)removeWithId:(id)object {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)isFull {
  return [((id<OrgApacheCommonsCollections15BoundedCollection>) nil_chk(((id<OrgApacheCommonsCollections15BoundedCollection>) check_protocol_cast(collection_, @protocol(OrgApacheCommonsCollections15BoundedCollection))))) isFull];
}

- (jint)maxSize {
  return [((id<OrgApacheCommonsCollections15BoundedCollection>) nil_chk(((id<OrgApacheCommonsCollections15BoundedCollection>) check_protocol_cast(collection_, @protocol(OrgApacheCommonsCollections15BoundedCollection))))) maxSize];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "decorateWithOrgApacheCommonsCollections15BoundedCollection:", "decorate", "Lorg.apache.commons.collections15.BoundedCollection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Lorg/apache/commons/collections15/BoundedCollection<TE;>;)Lorg/apache/commons/collections15/BoundedCollection<TE;>;" },
    { "decorateUsingWithJavaUtilCollection:", "decorateUsing", "Lorg.apache.commons.collections15.BoundedCollection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;)Lorg/apache/commons/collections15/BoundedCollection<TE;>;" },
    { "initWithOrgApacheCommonsCollections15BoundedCollection:", "UnmodifiableBoundedCollection", NULL, 0x2, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "isFull", NULL, "Z", 0x1, NULL, NULL },
    { "maxSize", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_serialVersionUID },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection = { 2, "UnmodifiableBoundedCollection", "org.apache.commons.collections15.collection", NULL, 0x11, 12, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Lorg/apache/commons/collections15/collection/AbstractSerializableCollectionDecorator<TE;>;Lorg/apache/commons/collections15/BoundedCollection<TE;>;" };
  return &_OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection;
}

@end

id<OrgApacheCommonsCollections15BoundedCollection> OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_decorateWithOrgApacheCommonsCollections15BoundedCollection_(id<OrgApacheCommonsCollections15BoundedCollection> coll) {
  OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initialize();
  return new_OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_(coll);
}

id<OrgApacheCommonsCollections15BoundedCollection> OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_decorateUsingWithJavaUtilCollection_(id<JavaUtilCollection> coll) {
  OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initialize();
  if (coll == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The collection must not be null");
  }
  for (jint i = 0; i < 1000; i++) {
    if ([OrgApacheCommonsCollections15BoundedCollection_class_() isInstance:coll]) {
      break;
    }
    else if ([coll isKindOfClass:[OrgApacheCommonsCollections15CollectionAbstractCollectionDecorator class]]) {
      coll = ((OrgApacheCommonsCollections15CollectionAbstractCollectionDecorator *) nil_chk(((OrgApacheCommonsCollections15CollectionAbstractCollectionDecorator *) check_class_cast(coll, [OrgApacheCommonsCollections15CollectionAbstractCollectionDecorator class]))))->collection_;
    }
    else if ([coll isKindOfClass:[OrgApacheCommonsCollections15CollectionSynchronizedCollection class]]) {
      coll = ((OrgApacheCommonsCollections15CollectionSynchronizedCollection *) nil_chk(((OrgApacheCommonsCollections15CollectionSynchronizedCollection *) check_class_cast(coll, [OrgApacheCommonsCollections15CollectionSynchronizedCollection class]))))->collection_;
    }
    else {
      break;
    }
  }
  if ([OrgApacheCommonsCollections15BoundedCollection_class_() isInstance:coll] == NO) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The collection is not a bounded collection");
  }
  return new_OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_((id<OrgApacheCommonsCollections15BoundedCollection>) check_protocol_cast(coll, @protocol(OrgApacheCommonsCollections15BoundedCollection)));
}

void OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_(OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection *self, id<OrgApacheCommonsCollections15BoundedCollection> coll) {
  (void) OrgApacheCommonsCollections15CollectionAbstractSerializableCollectionDecorator_initWithJavaUtilCollection_(self, coll);
}

OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection *new_OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_(id<OrgApacheCommonsCollections15BoundedCollection> coll) {
  OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection *self = [OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection alloc];
  OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_initWithOrgApacheCommonsCollections15BoundedCollection_(self, coll);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection)
