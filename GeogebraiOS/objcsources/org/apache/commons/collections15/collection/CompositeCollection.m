//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/collections15/collection/CompositeCollection.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Array.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/apache/commons/collections15/collection/CompositeCollection.h"
#include "org/apache/commons/collections15/iterators/EmptyIterator.h"
#include "org/apache/commons/collections15/iterators/IteratorChain.h"
#include "org/apache/commons/collections15/list/UnmodifiableList.h"

@interface OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator : NSObject
@end

@implementation OrgApacheCommonsCollections15CollectionCompositeCollection

- (instancetype)init {
  OrgApacheCommonsCollections15CollectionCompositeCollection_init(self);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollection_(self, coll);
  return self;
}

- (instancetype)initWithJavaUtilCollectionArray:(IOSObjectArray *)colls {
  OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollectionArray_(self, colls);
  return self;
}

- (jint)size {
  jint size = 0;
  for (jint i = ((IOSObjectArray *) nil_chk(self->all_))->size_ - 1; i >= 0; i--) {
    size += [((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) size];
  }
  return size;
}

- (jboolean)isEmpty {
  for (jint i = ((IOSObjectArray *) nil_chk(self->all_))->size_ - 1; i >= 0; i--) {
    if ([((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) isEmpty] == NO) {
      return NO;
    }
  }
  return YES;
}

- (jboolean)containsWithId:(id)obj {
  for (jint i = ((IOSObjectArray *) nil_chk(self->all_))->size_ - 1; i >= 0; i--) {
    if ([((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) containsWithId:obj]) {
      return YES;
    }
  }
  return NO;
}

- (id<JavaUtilIterator>)iterator {
  if (((IOSObjectArray *) nil_chk(self->all_))->size_ == 0) {
    return OrgApacheCommonsCollections15IteratorsEmptyIterator_get_INSTANCE_();
  }
  OrgApacheCommonsCollections15IteratorsIteratorChain *chain = [new_OrgApacheCommonsCollections15IteratorsIteratorChain_init() autorelease];
  for (jint i = 0; i < self->all_->size_; ++i) {
    [chain addIteratorWithJavaUtilIterator:[((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) iterator]];
  }
  return chain;
}

- (IOSObjectArray *)toArray {
  IOSObjectArray *result = (IOSObjectArray *) check_class_cast([IOSObjectArray arrayWithLength:[self size] type:NSObject_class_()], [IOSObjectArray class]);
  jint i = 0;
  for (id<JavaUtilIterator> it = [self iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; i++) {
    IOSObjectArray_Set(result, i, [it next]);
  }
  return result;
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)array {
  jint size = [self size];
  IOSObjectArray *result = nil;
  if (((IOSObjectArray *) nil_chk(array))->size_ >= size) {
    result = array;
  }
  else {
    result = (IOSObjectArray *) check_class_cast(JavaLangReflectArray_newInstanceWithIOSClass_withInt_([[array getClass] getComponentType], size), [IOSObjectArray class]);
  }
  jint offset = 0;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->all_))->size_; ++i) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      IOSObjectArray_Set(nil_chk(result), offset++, (id) [it next]);
    }
  }
  if (((IOSObjectArray *) nil_chk(result))->size_ > size) {
    IOSObjectArray_Set(result, size, nil);
  }
  return result;
}

- (jboolean)addWithId:(id)obj {
  if (self->mutator_ == nil) {
    @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"add() is not supported on CompositeCollection without a CollectionMutator strategy") autorelease];
  }
  return [((id<OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator>) nil_chk(self->mutator_)) addWithOrgApacheCommonsCollections15CollectionCompositeCollection:self withJavaUtilCollectionArray:self->all_ withId:obj];
}

- (jboolean)removeWithId:(id)obj {
  if (self->mutator_ == nil) {
    @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"remove() is not supported on CompositeCollection without a CollectionMutator strategy") autorelease];
  }
  return [((id<OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator>) nil_chk(self->mutator_)) removeWithOrgApacheCommonsCollections15CollectionCompositeCollection:self withJavaUtilCollectionArray:self->all_ withId:obj];
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(coll)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    if ([self containsWithId:[it next]] == NO) {
      return NO;
    }
  }
  return YES;
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  if (self->mutator_ == nil) {
    @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"addAll() is not supported on CompositeCollection without a CollectionMutator strategy") autorelease];
  }
  return [((id<OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator>) nil_chk(self->mutator_)) addAllWithOrgApacheCommonsCollections15CollectionCompositeCollection:self withJavaUtilCollectionArray:self->all_ withJavaUtilCollection:coll];
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  if ([((id<JavaUtilCollection>) nil_chk(coll)) size] == 0) {
    return NO;
  }
  jboolean changed = NO;
  for (jint i = ((IOSObjectArray *) nil_chk(self->all_))->size_ - 1; i >= 0; i--) {
    changed = ([((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) removeAllWithJavaUtilCollection:coll] || changed);
  }
  return changed;
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  jboolean changed = NO;
  for (jint i = ((IOSObjectArray *) nil_chk(self->all_))->size_ - 1; i >= 0; i--) {
    changed = ([((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) retainAllWithJavaUtilCollection:coll] || changed);
  }
  return changed;
}

- (void)clear {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->all_))->size_; ++i) {
    [((id<JavaUtilCollection>) nil_chk(IOSObjectArray_Get(self->all_, i))) clear];
  }
}

- (void)setMutatorWithOrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator:(id<OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator>)mutator {
  OrgApacheCommonsCollections15CollectionCompositeCollection_set_mutator_(self, mutator);
}

- (void)addCompositedWithJavaUtilCollectionArray:(IOSObjectArray *)comps {
  JavaUtilArrayList *list = [new_JavaUtilArrayList_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(self->all_)) autorelease];
  [list addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(comps)];
  OrgApacheCommonsCollections15CollectionCompositeCollection_set_all_(self, (IOSObjectArray *) check_class_cast([list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[list size] type:JavaUtilCollection_class_()]], [IOSObjectArray class]));
}

- (void)addCompositedWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  [self addCompositedWithJavaUtilCollectionArray:[IOSObjectArray arrayWithObjects:(id[]){ c } count:1 type:JavaUtilCollection_class_()]];
}

- (void)addCompositedWithJavaUtilCollection:(id<JavaUtilCollection>)c
                     withJavaUtilCollection:(id<JavaUtilCollection>)d {
  [self addCompositedWithJavaUtilCollectionArray:[IOSObjectArray arrayWithObjects:(id[]){ c, d } count:2 type:JavaUtilCollection_class_()]];
}

- (void)removeCompositedWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  JavaUtilArrayList *list = [new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(self->all_))->size_) autorelease];
  [list addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(self->all_)];
  [list removeWithId:coll];
  OrgApacheCommonsCollections15CollectionCompositeCollection_set_all_(self, (IOSObjectArray *) check_class_cast([list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[list size] type:JavaUtilCollection_class_()]], [IOSObjectArray class]));
}

- (id<JavaUtilCollection>)toCollection {
  return [new_JavaUtilArrayList_initWithJavaUtilCollection_(self) autorelease];
}

- (id<JavaUtilCollection>)getCollections {
  return OrgApacheCommonsCollections15ListUnmodifiableList_decorateWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(self->all_));
}

- (void)dealloc {
  RELEASE_(mutator_);
  RELEASE_(all_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CompositeCollection", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilCollection:", "CompositeCollection", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilCollectionArray:", "CompositeCollection", NULL, 0x81, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<E:Ljava/lang/Object;>([TE;)[TE;" },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "setMutatorWithOrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator:", "setMutator", "V", 0x1, NULL, NULL },
    { "addCompositedWithJavaUtilCollectionArray:", "addComposited", "V", 0x81, NULL, NULL },
    { "addCompositedWithJavaUtilCollection:", "addComposited", "V", 0x1, NULL, NULL },
    { "addCompositedWithJavaUtilCollection:withJavaUtilCollection:", "addComposited", "V", 0x1, NULL, NULL },
    { "removeCompositedWithJavaUtilCollection:", "removeComposited", "V", 0x1, NULL, NULL },
    { "toCollection", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "getCollections", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mutator_", NULL, 0x4, "Lorg.apache.commons.collections15.collection.CompositeCollection$CollectionMutator;", NULL, "Lorg/apache/commons/collections15/collection/CompositeCollection$CollectionMutator<TE;>;",  },
    { "all_", NULL, 0x4, "[Ljava.util.Collection;", NULL, "[Ljava/util/Collection<TE;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.collection.CompositeCollection$CollectionMutator;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15CollectionCompositeCollection = { 2, "CompositeCollection", "org.apache.commons.collections15.collection", NULL, 0x1, 23, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Collection<TE;>;" };
  return &_OrgApacheCommonsCollections15CollectionCompositeCollection;
}

@end

void OrgApacheCommonsCollections15CollectionCompositeCollection_init(OrgApacheCommonsCollections15CollectionCompositeCollection *self) {
  NSObject_init(self);
  OrgApacheCommonsCollections15CollectionCompositeCollection_setAndConsume_all_(self, [IOSObjectArray newArrayWithLength:0 type:JavaUtilCollection_class_()]);
}

OrgApacheCommonsCollections15CollectionCompositeCollection *new_OrgApacheCommonsCollections15CollectionCompositeCollection_init() {
  OrgApacheCommonsCollections15CollectionCompositeCollection *self = [OrgApacheCommonsCollections15CollectionCompositeCollection alloc];
  OrgApacheCommonsCollections15CollectionCompositeCollection_init(self);
  return self;
}

void OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollection_(OrgApacheCommonsCollections15CollectionCompositeCollection *self, id<JavaUtilCollection> coll) {
  OrgApacheCommonsCollections15CollectionCompositeCollection_init(self);
  [self addCompositedWithJavaUtilCollection:coll];
}

OrgApacheCommonsCollections15CollectionCompositeCollection *new_OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> coll) {
  OrgApacheCommonsCollections15CollectionCompositeCollection *self = [OrgApacheCommonsCollections15CollectionCompositeCollection alloc];
  OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollection_(self, coll);
  return self;
}

void OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollectionArray_(OrgApacheCommonsCollections15CollectionCompositeCollection *self, IOSObjectArray *colls) {
  OrgApacheCommonsCollections15CollectionCompositeCollection_init(self);
  [self addCompositedWithJavaUtilCollectionArray:colls];
}

OrgApacheCommonsCollections15CollectionCompositeCollection *new_OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollectionArray_(IOSObjectArray *colls) {
  OrgApacheCommonsCollections15CollectionCompositeCollection *self = [OrgApacheCommonsCollections15CollectionCompositeCollection alloc];
  OrgApacheCommonsCollections15CollectionCompositeCollection_initWithJavaUtilCollectionArray_(self, colls);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15CollectionCompositeCollection)

@implementation OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithOrgApacheCommonsCollections15CollectionCompositeCollection:withJavaUtilCollectionArray:withId:", "add", "Z", 0x401, NULL, NULL },
    { "addAllWithOrgApacheCommonsCollections15CollectionCompositeCollection:withJavaUtilCollectionArray:withJavaUtilCollection:", "addAll", "Z", 0x401, NULL, NULL },
    { "removeWithOrgApacheCommonsCollections15CollectionCompositeCollection:withJavaUtilCollectionArray:withId:", "remove", "Z", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator = { 2, "CollectionMutator", "org.apache.commons.collections15.collection", "CompositeCollection", 0x609, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15CollectionCompositeCollection_CollectionMutator)
