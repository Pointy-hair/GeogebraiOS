//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/distribution/GammaDistributionImpl.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/distribution/AbstractContinuousDistribution.h"
#include "org/apache/commons/math/distribution/GammaDistributionImpl.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/special/Gamma.h"
#include "org/apache/commons/math/util/FastMath.h"

#define OrgApacheCommonsMathDistributionGammaDistributionImpl_serialVersionUID -3239549463135430361LL

@interface OrgApacheCommonsMathDistributionGammaDistributionImpl () {
 @public
  jdouble alpha_;
  jdouble beta_;
  jdouble solverAbsoluteAccuracy_GammaDistributionImpl_;
}

- (void)setAlphaInternalWithDouble:(jdouble)newAlpha;

- (void)setBetaInternalWithDouble:(jdouble)newBeta;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDistributionGammaDistributionImpl, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsMathDistributionGammaDistributionImpl_setAlphaInternalWithDouble_(OrgApacheCommonsMathDistributionGammaDistributionImpl *self, jdouble newAlpha);

__attribute__((unused)) static void OrgApacheCommonsMathDistributionGammaDistributionImpl_setBetaInternalWithDouble_(OrgApacheCommonsMathDistributionGammaDistributionImpl *self, jdouble newBeta);

@implementation OrgApacheCommonsMathDistributionGammaDistributionImpl

- (instancetype)initWithDouble:(jdouble)alpha
                    withDouble:(jdouble)beta {
  OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_(self, alpha, beta);
  return self;
}

- (instancetype)initWithDouble:(jdouble)alpha
                    withDouble:(jdouble)beta
                    withDouble:(jdouble)inverseCumAccuracy {
  OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_withDouble_(self, alpha, beta, inverseCumAccuracy);
  return self;
}

- (jdouble)cumulativeProbabilityWithDouble:(jdouble)x {
  jdouble ret;
  if (x <= 0.0) {
    ret = 0.0;
  }
  else {
    ret = OrgApacheCommonsMathSpecialGamma_regularizedGammaPWithDouble_withDouble_(alpha_, x / beta_);
  }
  return ret;
}

- (jdouble)inverseCumulativeProbabilityWithDouble:(jdouble)p {
  if (p == 0) {
    return 0.0;
  }
  if (p == 1) {
    return JavaLangDouble_POSITIVE_INFINITY;
  }
  return [super inverseCumulativeProbabilityWithDouble:p];
}

- (void)setAlphaWithDouble:(jdouble)alpha {
  OrgApacheCommonsMathDistributionGammaDistributionImpl_setAlphaInternalWithDouble_(self, alpha);
}

- (void)setAlphaInternalWithDouble:(jdouble)newAlpha {
  OrgApacheCommonsMathDistributionGammaDistributionImpl_setAlphaInternalWithDouble_(self, newAlpha);
}

- (jdouble)getAlpha {
  return alpha_;
}

- (void)setBetaWithDouble:(jdouble)newBeta {
  OrgApacheCommonsMathDistributionGammaDistributionImpl_setBetaInternalWithDouble_(self, newBeta);
}

- (void)setBetaInternalWithDouble:(jdouble)newBeta {
  OrgApacheCommonsMathDistributionGammaDistributionImpl_setBetaInternalWithDouble_(self, newBeta);
}

- (jdouble)getBeta {
  return beta_;
}

- (jdouble)densityWithDouble:(jdouble)x {
  if (x < 0) return 0;
  return OrgApacheCommonsMathUtilFastMath_powWithDouble_withDouble_(x / beta_, alpha_ - 1) / beta_ * OrgApacheCommonsMathUtilFastMath_expWithDouble_(-x / beta_) / OrgApacheCommonsMathUtilFastMath_expWithDouble_(OrgApacheCommonsMathSpecialGamma_logGammaWithDouble_(alpha_));
}

- (jdouble)densityWithId:(JavaLangDouble *)x {
  return [self densityWithDouble:[((JavaLangDouble *) nil_chk(x)) doubleValue]];
}

- (jdouble)getDomainLowerBoundWithDouble:(jdouble)p {
  return JavaLangDouble_MIN_VALUE;
}

- (jdouble)getDomainUpperBoundWithDouble:(jdouble)p {
  jdouble ret;
  if (p < .5) {
    ret = alpha_ * beta_;
  }
  else {
    ret = JavaLangDouble_MAX_VALUE;
  }
  return ret;
}

- (jdouble)getInitialDomainWithDouble:(jdouble)p {
  jdouble ret;
  if (p < .5) {
    ret = alpha_ * beta_ * .5;
  }
  else {
    ret = alpha_ * beta_;
  }
  return ret;
}

- (jdouble)getSolverAbsoluteAccuracy {
  return solverAbsoluteAccuracy_GammaDistributionImpl_;
}

- (jdouble)getSupportLowerBound {
  return 0;
}

- (jdouble)getSupportUpperBound {
  return JavaLangDouble_POSITIVE_INFINITY;
}

- (jdouble)getNumericalMean {
  return [self getAlpha] * [self getBeta];
}

- (jdouble)getNumericalVariance {
  jdouble b = [self getBeta];
  return [self getAlpha] * b * b;
}

+ (IOSObjectArray *)__annotations_setAlphaWithDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_setBetaWithDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_densityWithJavaLangDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withDouble:", "GammaDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:", "GammaDistributionImpl", NULL, 0x1, NULL, NULL },
    { "cumulativeProbabilityWithDouble:", "cumulativeProbability", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "inverseCumulativeProbabilityWithDouble:", "inverseCumulativeProbability", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "setAlphaWithDouble:", "setAlpha", "V", 0x1, NULL, NULL },
    { "setAlphaInternalWithDouble:", "setAlphaInternal", "V", 0x2, NULL, NULL },
    { "getAlpha", NULL, "D", 0x1, NULL, NULL },
    { "setBetaWithDouble:", "setBeta", "V", 0x1, NULL, NULL },
    { "setBetaInternalWithDouble:", "setBetaInternal", "V", 0x2, NULL, NULL },
    { "getBeta", NULL, "D", 0x1, NULL, NULL },
    { "densityWithDouble:", "density", "D", 0x1, NULL, NULL },
    { "densityWithId:", "density", "D", 0x1, NULL, NULL },
    { "getDomainLowerBoundWithDouble:", "getDomainLowerBound", "D", 0x4, NULL, NULL },
    { "getDomainUpperBoundWithDouble:", "getDomainUpperBound", "D", 0x4, NULL, NULL },
    { "getInitialDomainWithDouble:", "getInitialDomain", "D", 0x4, NULL, NULL },
    { "getSolverAbsoluteAccuracy", NULL, "D", 0x4, NULL, NULL },
    { "getSupportLowerBound", NULL, "D", 0x1, NULL, NULL },
    { "getSupportUpperBound", NULL, "D", 0x1, NULL, NULL },
    { "getNumericalMean", NULL, "D", 0x1, NULL, NULL },
    { "getNumericalVariance", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_INVERSE_ABSOLUTE_ACCURACY_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheCommonsMathDistributionGammaDistributionImpl_DEFAULT_INVERSE_ABSOLUTE_ACCURACY },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathDistributionGammaDistributionImpl_serialVersionUID },
    { "alpha_", NULL, 0x2, "D", NULL, NULL,  },
    { "beta_", NULL, 0x2, "D", NULL, NULL,  },
    { "solverAbsoluteAccuracy_GammaDistributionImpl_", "solverAbsoluteAccuracy", 0x12, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathDistributionGammaDistributionImpl = { 2, "GammaDistributionImpl", "org.apache.commons.math.distribution", NULL, 0x1, 20, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathDistributionGammaDistributionImpl;
}

@end

void OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_(OrgApacheCommonsMathDistributionGammaDistributionImpl *self, jdouble alpha, jdouble beta) {
  OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_withDouble_(self, alpha, beta, OrgApacheCommonsMathDistributionGammaDistributionImpl_DEFAULT_INVERSE_ABSOLUTE_ACCURACY);
}

OrgApacheCommonsMathDistributionGammaDistributionImpl *new_OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_(jdouble alpha, jdouble beta) {
  OrgApacheCommonsMathDistributionGammaDistributionImpl *self = [OrgApacheCommonsMathDistributionGammaDistributionImpl alloc];
  OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_(self, alpha, beta);
  return self;
}

void OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_withDouble_(OrgApacheCommonsMathDistributionGammaDistributionImpl *self, jdouble alpha, jdouble beta, jdouble inverseCumAccuracy) {
  OrgApacheCommonsMathDistributionAbstractContinuousDistribution_init(self);
  OrgApacheCommonsMathDistributionGammaDistributionImpl_setAlphaInternalWithDouble_(self, alpha);
  OrgApacheCommonsMathDistributionGammaDistributionImpl_setBetaInternalWithDouble_(self, beta);
  self->solverAbsoluteAccuracy_GammaDistributionImpl_ = inverseCumAccuracy;
}

OrgApacheCommonsMathDistributionGammaDistributionImpl *new_OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_withDouble_(jdouble alpha, jdouble beta, jdouble inverseCumAccuracy) {
  OrgApacheCommonsMathDistributionGammaDistributionImpl *self = [OrgApacheCommonsMathDistributionGammaDistributionImpl alloc];
  OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_withDouble_(self, alpha, beta, inverseCumAccuracy);
  return self;
}

void OrgApacheCommonsMathDistributionGammaDistributionImpl_setAlphaInternalWithDouble_(OrgApacheCommonsMathDistributionGammaDistributionImpl *self, jdouble newAlpha) {
  if (newAlpha <= 0.0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_POSITIVE_ALPHA(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(newAlpha) } count:1 type:NSObject_class_()]);
  }
  self->alpha_ = newAlpha;
}

void OrgApacheCommonsMathDistributionGammaDistributionImpl_setBetaInternalWithDouble_(OrgApacheCommonsMathDistributionGammaDistributionImpl *self, jdouble newBeta) {
  if (newBeta <= 0.0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_POSITIVE_BETA(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(newBeta) } count:1 type:NSObject_class_()]);
  }
  self->beta_ = newBeta;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathDistributionGammaDistributionImpl)
