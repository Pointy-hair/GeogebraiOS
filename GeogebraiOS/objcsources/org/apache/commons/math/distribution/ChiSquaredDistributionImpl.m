//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/distribution/AbstractContinuousDistribution.h"
#include "org/apache/commons/math/distribution/ChiSquaredDistributionImpl.h"
#include "org/apache/commons/math/distribution/GammaDistribution.h"
#include "org/apache/commons/math/distribution/GammaDistributionImpl.h"

#define OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_serialVersionUID -8352658048349159782LL

@interface OrgApacheCommonsMathDistributionChiSquaredDistributionImpl () {
 @public
  id<OrgApacheCommonsMathDistributionGammaDistribution> gamma_;
  jdouble solverAbsoluteAccuracy_ChiSquaredDistributionImpl_;
}

- (void)setDegreesOfFreedomInternalWithDouble:(jdouble)degreesOfFreedom;

- (void)setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution:(id<OrgApacheCommonsMathDistributionGammaDistribution>)g;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl, gamma_, id<OrgApacheCommonsMathDistributionGammaDistribution>)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setDegreesOfFreedomInternalWithDouble_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble degreesOfFreedom);

__attribute__((unused)) static void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, id<OrgApacheCommonsMathDistributionGammaDistribution> g);

@implementation OrgApacheCommonsMathDistributionChiSquaredDistributionImpl

- (instancetype)initWithDouble:(jdouble)df {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_(self, df);
  return self;
}

- (instancetype)initWithDouble:(jdouble)df
withOrgApacheCommonsMathDistributionGammaDistribution:(id<OrgApacheCommonsMathDistributionGammaDistribution>)g {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_(self, df, g);
  return self;
}

- (instancetype)initWithDouble:(jdouble)df
                    withDouble:(jdouble)inverseCumAccuracy {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withDouble_(self, df, inverseCumAccuracy);
  return self;
}

- (void)setDegreesOfFreedomWithDouble:(jdouble)degreesOfFreedom {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setDegreesOfFreedomInternalWithDouble_(self, degreesOfFreedom);
}

- (void)setDegreesOfFreedomInternalWithDouble:(jdouble)degreesOfFreedom {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setDegreesOfFreedomInternalWithDouble_(self, degreesOfFreedom);
}

- (jdouble)getDegreesOfFreedom {
  return [((id<OrgApacheCommonsMathDistributionGammaDistribution>) nil_chk(gamma_)) getAlpha] * 2.0;
}

- (jdouble)densityWithId:(JavaLangDouble *)x {
  return [self densityWithDouble:[((JavaLangDouble *) nil_chk(x)) doubleValue]];
}

- (jdouble)densityWithDouble:(jdouble)x {
  return [((id<OrgApacheCommonsMathDistributionGammaDistribution>) nil_chk(gamma_)) densityWithId:JavaLangDouble_valueOfWithDouble_(x)];
}

- (jdouble)cumulativeProbabilityWithDouble:(jdouble)x {
  return [((id<OrgApacheCommonsMathDistributionGammaDistribution>) nil_chk(gamma_)) cumulativeProbabilityWithDouble:x];
}

- (jdouble)inverseCumulativeProbabilityWithDouble:(jdouble)p {
  if (p == 0) {
    return 0.0;
  }
  if (p == 1) {
    return JavaLangDouble_POSITIVE_INFINITY;
  }
  return [super inverseCumulativeProbabilityWithDouble:p];
}

- (jdouble)getDomainLowerBoundWithDouble:(jdouble)p {
  return JavaLangDouble_MIN_VALUE * [((id<OrgApacheCommonsMathDistributionGammaDistribution>) nil_chk(gamma_)) getBeta];
}

- (jdouble)getDomainUpperBoundWithDouble:(jdouble)p {
  jdouble ret;
  if (p < .5) {
    ret = [self getDegreesOfFreedom];
  }
  else {
    ret = JavaLangDouble_MAX_VALUE;
  }
  return ret;
}

- (jdouble)getInitialDomainWithDouble:(jdouble)p {
  jdouble ret;
  if (p < .5) {
    ret = [self getDegreesOfFreedom] * .5;
  }
  else {
    ret = [self getDegreesOfFreedom];
  }
  return ret;
}

- (void)setGammaWithOrgApacheCommonsMathDistributionGammaDistribution:(id<OrgApacheCommonsMathDistributionGammaDistribution>)g {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution_(self, g);
}

- (void)setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution:(id<OrgApacheCommonsMathDistributionGammaDistribution>)g {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution_(self, g);
}

- (jdouble)getSolverAbsoluteAccuracy {
  return solverAbsoluteAccuracy_ChiSquaredDistributionImpl_;
}

- (jdouble)getSupportLowerBound {
  return 0;
}

- (jdouble)getSupportUpperBound {
  return JavaLangDouble_POSITIVE_INFINITY;
}

- (jdouble)getNumericalMean {
  return [self getDegreesOfFreedom];
}

- (jdouble)getNumericalVariance {
  return 2 * [self getDegreesOfFreedom];
}

- (void)dealloc {
  RELEASE_(gamma_);
  [super dealloc];
}

+ (IOSObjectArray *)__annotations_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_setDegreesOfFreedomWithDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_densityWithJavaLangDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_setGammaWithOrgApacheCommonsMathDistributionGammaDistribution_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:", "ChiSquaredDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withOrgApacheCommonsMathDistributionGammaDistribution:", "ChiSquaredDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "ChiSquaredDistributionImpl", NULL, 0x1, NULL, NULL },
    { "setDegreesOfFreedomWithDouble:", "setDegreesOfFreedom", "V", 0x1, NULL, NULL },
    { "setDegreesOfFreedomInternalWithDouble:", "setDegreesOfFreedomInternal", "V", 0x2, NULL, NULL },
    { "getDegreesOfFreedom", NULL, "D", 0x1, NULL, NULL },
    { "densityWithId:", "density", "D", 0x1, NULL, NULL },
    { "densityWithDouble:", "density", "D", 0x1, NULL, NULL },
    { "cumulativeProbabilityWithDouble:", "cumulativeProbability", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "inverseCumulativeProbabilityWithDouble:", "inverseCumulativeProbability", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "getDomainLowerBoundWithDouble:", "getDomainLowerBound", "D", 0x4, NULL, NULL },
    { "getDomainUpperBoundWithDouble:", "getDomainUpperBound", "D", 0x4, NULL, NULL },
    { "getInitialDomainWithDouble:", "getInitialDomain", "D", 0x4, NULL, NULL },
    { "setGammaWithOrgApacheCommonsMathDistributionGammaDistribution:", "setGamma", "V", 0x1, NULL, NULL },
    { "setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution:", "setGammaInternal", "V", 0x2, NULL, NULL },
    { "getSolverAbsoluteAccuracy", NULL, "D", 0x4, NULL, NULL },
    { "getSupportLowerBound", NULL, "D", 0x1, NULL, NULL },
    { "getSupportUpperBound", NULL, "D", 0x1, NULL, NULL },
    { "getNumericalMean", NULL, "D", 0x1, NULL, NULL },
    { "getNumericalVariance", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_INVERSE_ABSOLUTE_ACCURACY_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_DEFAULT_INVERSE_ABSOLUTE_ACCURACY },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_serialVersionUID },
    { "gamma_", NULL, 0x2, "Lorg.apache.commons.math.distribution.GammaDistribution;", NULL, NULL,  },
    { "solverAbsoluteAccuracy_ChiSquaredDistributionImpl_", "solverAbsoluteAccuracy", 0x12, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathDistributionChiSquaredDistributionImpl = { 2, "ChiSquaredDistributionImpl", "org.apache.commons.math.distribution", NULL, 0x1, 20, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl;
}

@end

void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble df) {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_(self, df, [new_OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_(df / 2.0, 2.0) autorelease]);
}

OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *new_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_(jdouble df) {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self = [OrgApacheCommonsMathDistributionChiSquaredDistributionImpl alloc];
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_(self, df);
  return self;
}

void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble df, id<OrgApacheCommonsMathDistributionGammaDistribution> g) {
  OrgApacheCommonsMathDistributionAbstractContinuousDistribution_init(self);
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution_(self, g);
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setDegreesOfFreedomInternalWithDouble_(self, df);
  self->solverAbsoluteAccuracy_ChiSquaredDistributionImpl_ = OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_DEFAULT_INVERSE_ABSOLUTE_ACCURACY;
}

OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *new_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_(jdouble df, id<OrgApacheCommonsMathDistributionGammaDistribution> g) {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self = [OrgApacheCommonsMathDistributionChiSquaredDistributionImpl alloc];
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_(self, df, g);
  return self;
}

void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withDouble_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble df, jdouble inverseCumAccuracy) {
  OrgApacheCommonsMathDistributionAbstractContinuousDistribution_init(self);
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setAndConsume_gamma_(self, new_OrgApacheCommonsMathDistributionGammaDistributionImpl_initWithDouble_withDouble_(df / 2.0, 2.0));
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setDegreesOfFreedomInternalWithDouble_(self, df);
  self->solverAbsoluteAccuracy_ChiSquaredDistributionImpl_ = inverseCumAccuracy;
}

OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *new_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withDouble_(jdouble df, jdouble inverseCumAccuracy) {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self = [OrgApacheCommonsMathDistributionChiSquaredDistributionImpl alloc];
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withDouble_(self, df, inverseCumAccuracy);
  return self;
}

void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setDegreesOfFreedomInternalWithDouble_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble degreesOfFreedom) {
  [((id<OrgApacheCommonsMathDistributionGammaDistribution>) nil_chk(self->gamma_)) setAlphaWithDouble:degreesOfFreedom / 2.0];
}

void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_setGammaInternalWithOrgApacheCommonsMathDistributionGammaDistribution_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, id<OrgApacheCommonsMathDistributionGammaDistribution> g) {
  OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_set_gamma_(self, g);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl)
