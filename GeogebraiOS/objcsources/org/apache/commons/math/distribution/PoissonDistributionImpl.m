//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/distribution/PoissonDistributionImpl.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/distribution/AbstractIntegerDistribution.h"
#include "org/apache/commons/math/distribution/NormalDistribution.h"
#include "org/apache/commons/math/distribution/NormalDistributionImpl.h"
#include "org/apache/commons/math/distribution/PoissonDistributionImpl.h"
#include "org/apache/commons/math/distribution/SaddlePointExpansion.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/random/RandomDataImpl.h"
#include "org/apache/commons/math/special/Gamma.h"
#include "org/apache/commons/math/util/FastMath.h"
#include "org/apache/commons/math/util/MathUtils.h"

#define OrgApacheCommonsMathDistributionPoissonDistributionImpl_serialVersionUID -3349935121172596109LL

@interface OrgApacheCommonsMathDistributionPoissonDistributionImpl () {
 @public
  id<OrgApacheCommonsMathDistributionNormalDistribution> normal_;
  jdouble mean_;
  jint maxIterations_;
  jdouble epsilon_;
}

- (void)setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution:(id<OrgApacheCommonsMathDistributionNormalDistribution>)z
                                                                            withDouble:(jdouble)p;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDistributionPoissonDistributionImpl, normal_, id<OrgApacheCommonsMathDistributionNormalDistribution>)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDistributionPoissonDistributionImpl, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsMathDistributionPoissonDistributionImpl_setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution_withDouble_(OrgApacheCommonsMathDistributionPoissonDistributionImpl *self, id<OrgApacheCommonsMathDistributionNormalDistribution> z, jdouble p);

@implementation OrgApacheCommonsMathDistributionPoissonDistributionImpl

- (instancetype)initWithDouble:(jdouble)p {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_(self, p);
  return self;
}

- (instancetype)initWithDouble:(jdouble)p
                    withDouble:(jdouble)epsilon
                       withInt:(jint)maxIterations {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_withInt_(self, p, epsilon, maxIterations);
  return self;
}

- (instancetype)initWithDouble:(jdouble)p
                    withDouble:(jdouble)epsilon {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_(self, p, epsilon);
  return self;
}

- (instancetype)initWithDouble:(jdouble)p
                       withInt:(jint)maxIterations {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withInt_(self, p, maxIterations);
  return self;
}

- (instancetype)initWithDouble:(jdouble)p
withOrgApacheCommonsMathDistributionNormalDistribution:(id<OrgApacheCommonsMathDistributionNormalDistribution>)z {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionNormalDistribution_(self, p, z);
  return self;
}

- (jdouble)getMean {
  return mean_;
}

- (void)setMeanWithDouble:(jdouble)p {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution_withDouble_(self, normal_, p);
}

- (void)setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution:(id<OrgApacheCommonsMathDistributionNormalDistribution>)z
                                                                            withDouble:(jdouble)p {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution_withDouble_(self, z, p);
}

- (jdouble)probabilityWithInt:(jint)x {
  jdouble ret;
  if (x < 0 || x == JavaLangInteger_MAX_VALUE) {
    ret = 0.0;
  }
  else if (x == 0) {
    ret = OrgApacheCommonsMathUtilFastMath_expWithDouble_(-mean_);
  }
  else {
    ret = OrgApacheCommonsMathUtilFastMath_expWithDouble_(-OrgApacheCommonsMathDistributionSaddlePointExpansion_getStirlingErrorWithDouble_(x) - OrgApacheCommonsMathDistributionSaddlePointExpansion_getDeviancePartWithDouble_withDouble_(x, mean_)) / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(OrgApacheCommonsMathUtilMathUtils_TWO_PI * x);
  }
  return ret;
}

- (jdouble)cumulativeProbabilityWithInt:(jint)x {
  if (x < 0) {
    return 0;
  }
  if (x == JavaLangInteger_MAX_VALUE) {
    return 1;
  }
  return OrgApacheCommonsMathSpecialGamma_regularizedGammaQWithDouble_withDouble_withDouble_withInt_((jdouble) x + 1, mean_, epsilon_, maxIterations_);
}

- (jdouble)normalApproximateProbabilityWithInt:(jint)x {
  return [((id<OrgApacheCommonsMathDistributionNormalDistribution>) nil_chk(normal_)) cumulativeProbabilityWithDouble:x + 0.5];
}

- (jint)sample {
  return (jint) OrgApacheCommonsMathUtilFastMath_minWithLong_withLong_([((OrgApacheCommonsMathRandomRandomDataImpl *) nil_chk(randomData_)) nextPoissonWithDouble:mean_], JavaLangInteger_MAX_VALUE);
}

- (jint)getDomainLowerBoundWithDouble:(jdouble)p {
  return 0;
}

- (jint)getDomainUpperBoundWithDouble:(jdouble)p {
  return JavaLangInteger_MAX_VALUE;
}

- (void)setNormalWithOrgApacheCommonsMathDistributionNormalDistribution:(id<OrgApacheCommonsMathDistributionNormalDistribution>)value {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution_withDouble_(self, value, mean_);
}

- (jint)getSupportLowerBound {
  return 0;
}

- (jint)getSupportUpperBound {
  return JavaLangInteger_MAX_VALUE;
}

- (jdouble)getNumericalVariance {
  return [self getMean];
}

- (void)dealloc {
  RELEASE_(normal_);
  [super dealloc];
}

+ (IOSObjectArray *)__annotations_initWithDouble_withOrgApacheCommonsMathDistributionNormalDistribution_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_setMeanWithDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_setNormalWithOrgApacheCommonsMathDistributionNormalDistribution_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:", "PoissonDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withInt:", "PoissonDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "PoissonDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withInt:", "PoissonDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withOrgApacheCommonsMathDistributionNormalDistribution:", "PoissonDistributionImpl", NULL, 0x1, NULL, NULL },
    { "getMean", NULL, "D", 0x1, NULL, NULL },
    { "setMeanWithDouble:", "setMean", "V", 0x1, NULL, NULL },
    { "setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution:withDouble:", "setNormalAndMeanInternal", "V", 0x2, NULL, NULL },
    { "probabilityWithInt:", "probability", "D", 0x1, NULL, NULL },
    { "cumulativeProbabilityWithInt:", "cumulativeProbability", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "normalApproximateProbabilityWithInt:", "normalApproximateProbability", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "sample", NULL, "I", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "getDomainLowerBoundWithDouble:", "getDomainLowerBound", "I", 0x4, NULL, NULL },
    { "getDomainUpperBoundWithDouble:", "getDomainUpperBound", "I", 0x4, NULL, NULL },
    { "setNormalWithOrgApacheCommonsMathDistributionNormalDistribution:", "setNormal", "V", 0x1, NULL, NULL },
    { "getSupportLowerBound", NULL, "I", 0x1, NULL, NULL },
    { "getSupportUpperBound", NULL, "I", 0x1, NULL, NULL },
    { "getNumericalVariance", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_MAX_ITERATIONS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_MAX_ITERATIONS },
    { "DEFAULT_EPSILON_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_EPSILON },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathDistributionPoissonDistributionImpl_serialVersionUID },
    { "normal_", NULL, 0x2, "Lorg.apache.commons.math.distribution.NormalDistribution;", NULL, NULL,  },
    { "mean_", NULL, 0x2, "D", NULL, NULL,  },
    { "maxIterations_", NULL, 0x2, "I", NULL, NULL,  },
    { "epsilon_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathDistributionPoissonDistributionImpl = { 2, "PoissonDistributionImpl", "org.apache.commons.math.distribution", NULL, 0x1, 18, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathDistributionPoissonDistributionImpl;
}

@end

void OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_(OrgApacheCommonsMathDistributionPoissonDistributionImpl *self, jdouble p) {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionNormalDistribution_(self, p, [new_OrgApacheCommonsMathDistributionNormalDistributionImpl_init() autorelease]);
}

OrgApacheCommonsMathDistributionPoissonDistributionImpl *new_OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_(jdouble p) {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl *self = [OrgApacheCommonsMathDistributionPoissonDistributionImpl alloc];
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_(self, p);
  return self;
}

void OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_withInt_(OrgApacheCommonsMathDistributionPoissonDistributionImpl *self, jdouble p, jdouble epsilon, jint maxIterations) {
  OrgApacheCommonsMathDistributionAbstractIntegerDistribution_init(self);
  self->maxIterations_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_MAX_ITERATIONS;
  self->epsilon_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_EPSILON;
  [self setMeanWithDouble:p];
  self->epsilon_ = epsilon;
  self->maxIterations_ = maxIterations;
}

OrgApacheCommonsMathDistributionPoissonDistributionImpl *new_OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_withInt_(jdouble p, jdouble epsilon, jint maxIterations) {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl *self = [OrgApacheCommonsMathDistributionPoissonDistributionImpl alloc];
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_withInt_(self, p, epsilon, maxIterations);
  return self;
}

void OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_(OrgApacheCommonsMathDistributionPoissonDistributionImpl *self, jdouble p, jdouble epsilon) {
  OrgApacheCommonsMathDistributionAbstractIntegerDistribution_init(self);
  self->maxIterations_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_MAX_ITERATIONS;
  self->epsilon_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_EPSILON;
  [self setMeanWithDouble:p];
  self->epsilon_ = epsilon;
}

OrgApacheCommonsMathDistributionPoissonDistributionImpl *new_OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_(jdouble p, jdouble epsilon) {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl *self = [OrgApacheCommonsMathDistributionPoissonDistributionImpl alloc];
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withDouble_(self, p, epsilon);
  return self;
}

void OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withInt_(OrgApacheCommonsMathDistributionPoissonDistributionImpl *self, jdouble p, jint maxIterations) {
  OrgApacheCommonsMathDistributionAbstractIntegerDistribution_init(self);
  self->maxIterations_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_MAX_ITERATIONS;
  self->epsilon_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_EPSILON;
  [self setMeanWithDouble:p];
  self->maxIterations_ = maxIterations;
}

OrgApacheCommonsMathDistributionPoissonDistributionImpl *new_OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withInt_(jdouble p, jint maxIterations) {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl *self = [OrgApacheCommonsMathDistributionPoissonDistributionImpl alloc];
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withInt_(self, p, maxIterations);
  return self;
}

void OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionNormalDistribution_(OrgApacheCommonsMathDistributionPoissonDistributionImpl *self, jdouble p, id<OrgApacheCommonsMathDistributionNormalDistribution> z) {
  OrgApacheCommonsMathDistributionAbstractIntegerDistribution_init(self);
  self->maxIterations_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_MAX_ITERATIONS;
  self->epsilon_ = OrgApacheCommonsMathDistributionPoissonDistributionImpl_DEFAULT_EPSILON;
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution_withDouble_(self, z, p);
}

OrgApacheCommonsMathDistributionPoissonDistributionImpl *new_OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionNormalDistribution_(jdouble p, id<OrgApacheCommonsMathDistributionNormalDistribution> z) {
  OrgApacheCommonsMathDistributionPoissonDistributionImpl *self = [OrgApacheCommonsMathDistributionPoissonDistributionImpl alloc];
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionNormalDistribution_(self, p, z);
  return self;
}

void OrgApacheCommonsMathDistributionPoissonDistributionImpl_setNormalAndMeanInternalWithOrgApacheCommonsMathDistributionNormalDistribution_withDouble_(OrgApacheCommonsMathDistributionPoissonDistributionImpl *self, id<OrgApacheCommonsMathDistributionNormalDistribution> z, jdouble p) {
  if (p <= 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_POSITIVE_POISSON_MEAN(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(p) } count:1 type:NSObject_class_()]);
  }
  self->mean_ = p;
  OrgApacheCommonsMathDistributionPoissonDistributionImpl_set_normal_(self, z);
  [((id<OrgApacheCommonsMathDistributionNormalDistribution>) nil_chk(self->normal_)) setMeanWithDouble:p];
  [self->normal_ setStandardDeviationWithDouble:OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(p)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathDistributionPoissonDistributionImpl)
