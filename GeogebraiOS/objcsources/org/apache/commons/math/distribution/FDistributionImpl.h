//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/distribution/FDistributionImpl.java
//

#ifndef _OrgApacheCommonsMathDistributionFDistributionImpl_H_
#define _OrgApacheCommonsMathDistributionFDistributionImpl_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/math/distribution/AbstractContinuousDistribution.h"
#include "org/apache/commons/math/distribution/FDistribution.h"

#define OrgApacheCommonsMathDistributionFDistributionImpl_DEFAULT_INVERSE_ABSOLUTE_ACCURACY 1.0E-9

@interface OrgApacheCommonsMathDistributionFDistributionImpl : OrgApacheCommonsMathDistributionAbstractContinuousDistribution < OrgApacheCommonsMathDistributionFDistribution, JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithDouble:(jdouble)numeratorDegreesOfFreedom
                    withDouble:(jdouble)denominatorDegreesOfFreedom;

- (instancetype)initWithDouble:(jdouble)numeratorDegreesOfFreedom
                    withDouble:(jdouble)denominatorDegreesOfFreedom
                    withDouble:(jdouble)inverseCumAccuracy;

- (jdouble)cumulativeProbabilityWithDouble:(jdouble)x;

- (jdouble)densityWithDouble:(jdouble)x;

- (jdouble)getDenominatorDegreesOfFreedom;

- (jdouble)getNumeratorDegreesOfFreedom;

- (jdouble)getNumericalMean;

- (jdouble)getNumericalVariance;

- (jdouble)getSupportLowerBound;

- (jdouble)getSupportUpperBound;

- (jdouble)inverseCumulativeProbabilityWithDouble:(jdouble)p;

- (void)setDenominatorDegreesOfFreedomWithDouble:(jdouble)degreesOfFreedom;

- (void)setNumeratorDegreesOfFreedomWithDouble:(jdouble)degreesOfFreedom;

#pragma mark Protected

- (jdouble)getDomainLowerBoundWithDouble:(jdouble)p;

- (jdouble)getDomainUpperBoundWithDouble:(jdouble)p;

- (jdouble)getInitialDomainWithDouble:(jdouble)p;

- (jdouble)getSolverAbsoluteAccuracy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathDistributionFDistributionImpl)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDistributionFDistributionImpl, DEFAULT_INVERSE_ABSOLUTE_ACCURACY, jdouble)

FOUNDATION_EXPORT void OrgApacheCommonsMathDistributionFDistributionImpl_initWithDouble_withDouble_(OrgApacheCommonsMathDistributionFDistributionImpl *self, jdouble numeratorDegreesOfFreedom, jdouble denominatorDegreesOfFreedom);

FOUNDATION_EXPORT OrgApacheCommonsMathDistributionFDistributionImpl *new_OrgApacheCommonsMathDistributionFDistributionImpl_initWithDouble_withDouble_(jdouble numeratorDegreesOfFreedom, jdouble denominatorDegreesOfFreedom) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathDistributionFDistributionImpl_initWithDouble_withDouble_withDouble_(OrgApacheCommonsMathDistributionFDistributionImpl *self, jdouble numeratorDegreesOfFreedom, jdouble denominatorDegreesOfFreedom, jdouble inverseCumAccuracy);

FOUNDATION_EXPORT OrgApacheCommonsMathDistributionFDistributionImpl *new_OrgApacheCommonsMathDistributionFDistributionImpl_initWithDouble_withDouble_withDouble_(jdouble numeratorDegreesOfFreedom, jdouble denominatorDegreesOfFreedom, jdouble inverseCumAccuracy) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathDistributionFDistributionImpl)

#endif // _OrgApacheCommonsMathDistributionFDistributionImpl_H_
