//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInput.h"
#include "java/io/ObjectOutput.h"
#include "java/lang/System.h"
#include "org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.h"
#include "org/apache/commons/math/ode/sampling/AbstractStepInterpolator.h"
#include "org/apache/commons/math/ode/sampling/StepInterpolator.h"
#include "org/apache/commons/math/util/FastMath.h"

#define OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_serialVersionUID 7320613236731409847LL

@interface OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator () {
 @public
  IOSDoubleArray *y0Dot_;
  IOSDoubleArray *y1_;
  IOSDoubleArray *y1Dot_;
  IOSObjectArray *yMidDots_;
  IOSObjectArray *polynoms_;
  IOSDoubleArray *errfac_;
  jint currentDegree_;
}

- (void)resetTablesWithInt:(jint)maxDegree;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator, y0Dot_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator, y1_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator, y1Dot_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator, yMidDots_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator, polynoms_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator, errfac_, IOSDoubleArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self, jint maxDegree);

@implementation OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator

- (instancetype)init {
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_init(self);
  return self;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)y
                    withDoubleArray:(IOSDoubleArray *)y0Dot
                    withDoubleArray:(IOSDoubleArray *)y1
                    withDoubleArray:(IOSDoubleArray *)y1Dot
                   withDoubleArray2:(IOSObjectArray *)yMidDots
                        withBoolean:(jboolean)forward {
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray2_withBoolean_(self, y, y0Dot, y1, y1Dot, yMidDots, forward);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator:(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *)interpolator {
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithOrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_(self, interpolator);
  return self;
}

- (void)resetTablesWithInt:(jint)maxDegree {
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(self, maxDegree);
}

- (id<OrgApacheCommonsMathOdeSamplingStepInterpolator>)doCopy {
  return [new_OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithOrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_(self) autorelease];
}

- (void)computeCoefficientsWithInt:(jint)mu
                        withDouble:(jdouble)h {
  if ((polynoms_ == nil) || (polynoms_->size_ <= (mu + 4))) {
    OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(self, mu + 4);
  }
  currentDegree_ = mu + 4;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(currentState_))->size_; ++i) {
    jdouble yp0 = h * IOSDoubleArray_Get(nil_chk(y0Dot_), i);
    jdouble yp1 = h * IOSDoubleArray_Get(nil_chk(y1Dot_), i);
    jdouble ydiff = IOSDoubleArray_Get(nil_chk(y1_), i) - IOSDoubleArray_Get(currentState_, i);
    jdouble aspl = ydiff - yp1;
    jdouble bspl = yp0 - ydiff;
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(polynoms_), 0)), i) = IOSDoubleArray_Get(currentState_, i);
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, 1)), i) = ydiff;
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, 2)), i) = aspl;
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, 3)), i) = bspl;
    if (mu < 0) {
      return;
    }
    jdouble ph0 = 0.5 * (IOSDoubleArray_Get(currentState_, i) + IOSDoubleArray_Get(y1_, i)) + 0.125 * (aspl + bspl);
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, 4)), i) = 16 * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(yMidDots_), 0)), i) - ph0);
    if (mu > 0) {
      jdouble ph1 = ydiff + 0.25 * (aspl - bspl);
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, 5)), i) = 16 * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(yMidDots_, 1)), i) - ph1);
      if (mu > 1) {
        jdouble ph2 = yp1 - yp0;
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, 6)), i) = 16 * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(yMidDots_, 2)), i) - ph2 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, 4)), i));
        if (mu > 2) {
          jdouble ph3 = 6 * (bspl - aspl);
          *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, 7)), i) = 16 * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(yMidDots_, 3)), i) - ph3 + 3 * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, 5)), i));
          for (jint j = 4; j <= mu; ++j) {
            jdouble fac1 = 0.5 * j * (j - 1);
            jdouble fac2 = 2 * fac1 * (j - 2) * (j - 3);
            *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(polynoms_, j + 4)), i) = 16 * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(yMidDots_, j)), i) + fac1 * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, j + 2)), i) - fac2 * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, j)), i));
          }
        }
      }
    }
  }
}

- (jdouble)estimateErrorWithDoubleArray:(IOSDoubleArray *)scale_ {
  jdouble error = 0;
  if (currentDegree_ >= 5) {
    for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(scale_))->size_; ++i) {
      jdouble e = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(polynoms_), currentDegree_)), i) / IOSDoubleArray_Get(scale_, i);
      error += e * e;
    }
    error = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(error / scale_->size_) * IOSDoubleArray_Get(nil_chk(errfac_), currentDegree_ - 5);
  }
  return error;
}

- (void)computeInterpolatedStateAndDerivativesWithDouble:(jdouble)theta
                                              withDouble:(jdouble)oneMinusThetaH {
  jint dimension = ((IOSDoubleArray *) nil_chk(currentState_))->size_;
  jdouble oneMinusTheta = 1.0 - theta;
  jdouble theta05 = theta - 0.5;
  jdouble tOmT = theta * oneMinusTheta;
  jdouble t4 = tOmT * tOmT;
  jdouble t4Dot = 2 * tOmT * (1 - 2 * theta);
  jdouble dot1 = 1.0 / h_;
  jdouble dot2 = theta * (2 - 3 * theta) / h_;
  jdouble dot3 = ((3 * theta - 4) * theta + 1) / h_;
  for (jint i = 0; i < dimension; ++i) {
    jdouble p0 = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(polynoms_), 0)), i);
    jdouble p1 = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, 1)), i);
    jdouble p2 = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, 2)), i);
    jdouble p3 = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, 3)), i);
    *IOSDoubleArray_GetRef(nil_chk(interpolatedState_), i) = p0 + theta * (p1 + oneMinusTheta * (p2 * theta + p3 * oneMinusTheta));
    *IOSDoubleArray_GetRef(nil_chk(interpolatedDerivatives_), i) = dot1 * p1 + dot2 * p2 + dot3 * p3;
    if (currentDegree_ > 3) {
      jdouble cDot = 0;
      jdouble c = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, currentDegree_)), i);
      for (jint j = currentDegree_ - 1; j > 3; --j) {
        jdouble d = 1.0 / (j - 3);
        cDot = d * (theta05 * cDot + c);
        c = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(polynoms_, j)), i) + c * d * theta05;
      }
      *IOSDoubleArray_GetRef(interpolatedState_, i) += t4 * c;
      *IOSDoubleArray_GetRef(interpolatedDerivatives_, i) += (t4 * cDot + t4Dot * c) / h_;
    }
  }
  if (h_ == 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(yMidDots_), 1), 0, interpolatedDerivatives_, 0, dimension);
  }
}

- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)outArg {
  jint dimension = (currentState_ == nil) ? -1 : currentState_->size_;
  [self writeBaseExternalWithJavaIoObjectOutput:outArg];
  [((id<JavaIoObjectOutput>) nil_chk(outArg)) writeIntWithInt:currentDegree_];
  for (jint k = 0; k <= currentDegree_; ++k) {
    for (jint l = 0; l < dimension; ++l) {
      [outArg writeDoubleWithDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(polynoms_), k)), l)];
    }
  }
}

- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)inArg {
  jdouble t = [self readBaseExternalWithJavaIoObjectInput:inArg];
  jint dimension = (currentState_ == nil) ? -1 : currentState_->size_;
  jint degree = [((id<JavaIoObjectInput>) nil_chk(inArg)) readInt];
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(self, degree);
  currentDegree_ = degree;
  for (jint k = 0; k <= currentDegree_; ++k) {
    for (jint l = 0; l < dimension; ++l) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(polynoms_), k)), l) = [inArg readDouble];
    }
  }
  [self setInterpolatedTimeWithDouble:t];
}

- (void)dealloc {
  RELEASE_(y0Dot_);
  RELEASE_(y1_);
  RELEASE_(y1Dot_);
  RELEASE_(yMidDots_);
  RELEASE_(polynoms_);
  RELEASE_(errfac_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GraggBulirschStoerStepInterpolator", NULL, 0x1, NULL, NULL },
    { "initWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray2:withBoolean:", "GraggBulirschStoerStepInterpolator", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator:", "GraggBulirschStoerStepInterpolator", NULL, 0x1, NULL, NULL },
    { "resetTablesWithInt:", "resetTables", "V", 0x2, NULL, NULL },
    { "doCopy", NULL, "Lorg.apache.commons.math.ode.sampling.StepInterpolator;", 0x4, NULL, NULL },
    { "computeCoefficientsWithInt:withDouble:", "computeCoefficients", "V", 0x1, NULL, NULL },
    { "estimateErrorWithDoubleArray:", "estimateError", "D", 0x1, NULL, NULL },
    { "computeInterpolatedStateAndDerivativesWithDouble:withDouble:", "computeInterpolatedStateAndDerivatives", "V", 0x4, NULL, NULL },
    { "writeExternalWithJavaIoObjectOutput:", "writeExternal", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "readExternalWithJavaIoObjectInput:", "readExternal", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_serialVersionUID },
    { "y0Dot_", NULL, 0x2, "[D", NULL, NULL,  },
    { "y1_", NULL, 0x2, "[D", NULL, NULL,  },
    { "y1Dot_", NULL, 0x2, "[D", NULL, NULL,  },
    { "yMidDots_", NULL, 0x2, "[[D", NULL, NULL,  },
    { "polynoms_", NULL, 0x2, "[[D", NULL, NULL,  },
    { "errfac_", NULL, 0x2, "[D", NULL, NULL,  },
    { "currentDegree_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator = { 2, "GraggBulirschStoerStepInterpolator", "org.apache.commons.math.ode.nonstiff", NULL, 0x0, 10, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator;
}

@end

void OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_init(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self) {
  OrgApacheCommonsMathOdeSamplingAbstractStepInterpolator_init(self);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y0Dot_(self, nil);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y1_(self, nil);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y1Dot_(self, nil);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_yMidDots_(self, nil);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(self, -1);
}

OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *new_OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_init() {
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self = [OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator alloc];
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_init(self);
  return self;
}

void OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray2_withBoolean_(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self, IOSDoubleArray *y, IOSDoubleArray *y0Dot, IOSDoubleArray *y1, IOSDoubleArray *y1Dot, IOSObjectArray *yMidDots, jboolean forward) {
  OrgApacheCommonsMathOdeSamplingAbstractStepInterpolator_initWithDoubleArray_withBoolean_(self, y, forward);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y0Dot_(self, y0Dot);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y1_(self, y1);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y1Dot_(self, y1Dot);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_yMidDots_(self, yMidDots);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(self, ((IOSObjectArray *) nil_chk(yMidDots))->size_ + 4);
}

OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *new_OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray2_withBoolean_(IOSDoubleArray *y, IOSDoubleArray *y0Dot, IOSDoubleArray *y1, IOSDoubleArray *y1Dot, IOSObjectArray *yMidDots, jboolean forward) {
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self = [OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator alloc];
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray2_withBoolean_(self, y, y0Dot, y1, y1Dot, yMidDots, forward);
  return self;
}

void OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithOrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self, OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *interpolator) {
  OrgApacheCommonsMathOdeSamplingAbstractStepInterpolator_initWithOrgApacheCommonsMathOdeSamplingAbstractStepInterpolator_(self, interpolator);
  jint dimension = ((IOSDoubleArray *) nil_chk(self->currentState_))->size_;
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y0Dot_(self, nil);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y1_(self, nil);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_y1Dot_(self, nil);
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_yMidDots_(self, nil);
  if (((OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *) nil_chk(interpolator))->polynoms_ == nil) {
    OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_polynoms_(self, nil);
    self->currentDegree_ = -1;
  }
  else {
    OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(self, interpolator->currentDegree_);
    for (jint i = 0; i < self->polynoms_->size_; ++i) {
      IOSObjectArray_SetAndConsume(self->polynoms_, i, [IOSDoubleArray newArrayWithLength:dimension]);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(interpolator->polynoms_, i), 0, IOSObjectArray_Get(self->polynoms_, i), 0, dimension);
    }
    self->currentDegree_ = interpolator->currentDegree_;
  }
}

OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *new_OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithOrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *interpolator) {
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self = [OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator alloc];
  OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_initWithOrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_(self, interpolator);
  return self;
}

void OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_resetTablesWithInt_(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator *self, jint maxDegree) {
  if (maxDegree < 0) {
    OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_polynoms_(self, nil);
    OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_errfac_(self, nil);
    self->currentDegree_ = -1;
  }
  else {
    IOSObjectArray *newPols = [IOSObjectArray arrayWithLength:maxDegree + 1 type:IOSClass_doubleArray(1)];
    if (self->polynoms_ != nil) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->polynoms_, 0, newPols, 0, self->polynoms_->size_);
      for (jint i = self->polynoms_->size_; i < newPols->size_; ++i) {
        IOSObjectArray_SetAndConsume(newPols, i, [IOSDoubleArray newArrayWithLength:((IOSDoubleArray *) nil_chk(self->currentState_))->size_]);
      }
    }
    else {
      for (jint i = 0; i < newPols->size_; ++i) {
        IOSObjectArray_SetAndConsume(newPols, i, [IOSDoubleArray newArrayWithLength:((IOSDoubleArray *) nil_chk(self->currentState_))->size_]);
      }
    }
    OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_polynoms_(self, newPols);
    if (maxDegree <= 4) {
      OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_set_errfac_(self, nil);
    }
    else {
      OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator_setAndConsume_errfac_(self, [IOSDoubleArray newArrayWithLength:maxDegree - 4]);
      for (jint i = 0; i < self->errfac_->size_; ++i) {
        jint ip5 = i + 5;
        *IOSDoubleArray_GetRef(self->errfac_, i) = 1.0 / (ip5 * ip5);
        jdouble e = 0.5 * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(((jdouble) (i + 1)) / ip5);
        for (jint j = 0; j <= i; ++j) {
          *IOSDoubleArray_GetRef(self->errfac_, i) *= e / (j + 1);
        }
      }
    }
    self->currentDegree_ = 0;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOdeNonstiffGraggBulirschStoerStepInterpolator)
