//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/commons/math/ConvergenceException.h"
#include "org/apache/commons/math/ConvergingAlgorithmImpl.h"
#include "org/apache/commons/math/FunctionEvaluationException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/analysis/UnivariateRealFunction.h"
#include "org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.h"
#include "org/apache/commons/math/exception/NullArgumentException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl

- (instancetype)initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
                                                                   withInt:(jint)defaultMaximalIterationCount
                                                                withDouble:(jdouble)defaultAbsoluteAccuracy {
  OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withInt_withDouble_(self, f, defaultMaximalIterationCount, defaultAbsoluteAccuracy);
  return self;
}

- (instancetype)initWithInt:(jint)defaultMaximalIterationCount
                 withDouble:(jdouble)defaultAbsoluteAccuracy {
  OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithInt_withDouble_(self, defaultMaximalIterationCount, defaultAbsoluteAccuracy);
  return self;
}

- (void)checkResultComputed {
  if (!resultComputed_) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalStateExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NO_RESULT_AVAILABLE(), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  }
}

- (jdouble)getResult {
  [self checkResultComputed];
  return result_;
}

- (jdouble)getFunctionValue {
  [self checkResultComputed];
  return functionValue_;
}

- (void)setFunctionValueAccuracyWithDouble:(jdouble)accuracy {
  functionValueAccuracy_ = accuracy;
}

- (jdouble)getFunctionValueAccuracy {
  return functionValueAccuracy_;
}

- (void)resetFunctionValueAccuracy {
  functionValueAccuracy_ = defaultFunctionValueAccuracy_;
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)function
             withDouble:(jdouble)min
             withDouble:(jdouble)max {
  @throw OrgApacheCommonsMathMathRuntimeException_createUnsupportedOperationExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_OVERRIDEN(), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)function
             withDouble:(jdouble)min
             withDouble:(jdouble)max
             withDouble:(jdouble)startValue {
  @throw OrgApacheCommonsMathMathRuntimeException_createUnsupportedOperationExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_OVERRIDEN(), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
}

- (void)setResultWithDouble:(jdouble)newResult
                    withInt:(jint)iterationCount {
  self->result_ = newResult;
  self->iterationCount_ = iterationCount;
  self->resultComputed_ = YES;
}

- (void)setResultWithDouble:(jdouble)x
                 withDouble:(jdouble)fx
                    withInt:(jint)iterationCount {
  self->result_ = x;
  self->functionValue_ = fx;
  self->iterationCount_ = iterationCount;
  self->resultComputed_ = YES;
}

- (void)clearResult {
  self->iterationCount_ = 0;
  self->resultComputed_ = NO;
}

- (jboolean)isBracketingWithDouble:(jdouble)lower
                        withDouble:(jdouble)upper
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)function {
  jdouble f1 = [((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(function)) valueWithDouble:lower];
  jdouble f2 = [function valueWithDouble:upper];
  return (f1 > 0 && f2 < 0) || (f1 < 0 && f2 > 0);
}

- (jboolean)isSequenceWithDouble:(jdouble)start
                      withDouble:(jdouble)mid
                      withDouble:(jdouble)end {
  return (start < mid) && (mid < end);
}

- (void)verifyIntervalWithDouble:(jdouble)lower
                      withDouble:(jdouble)upper {
  if (lower >= upper) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ENDPOINTS_NOT_AN_INTERVAL(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(lower), JavaLangDouble_valueOfWithDouble_(upper) } count:2 type:NSObject_class_()]);
  }
}

- (void)verifySequenceWithDouble:(jdouble)lower
                      withDouble:(jdouble)initial
                      withDouble:(jdouble)upper {
  if (![self isSequenceWithDouble:lower withDouble:initial withDouble:upper]) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(lower), JavaLangDouble_valueOfWithDouble_(initial), JavaLangDouble_valueOfWithDouble_(upper) } count:3 type:NSObject_class_()]);
  }
}

- (void)verifyBracketingWithDouble:(jdouble)lower
                        withDouble:(jdouble)upper
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)function {
  [self verifyIntervalWithDouble:lower withDouble:upper];
  if (![self isBracketingWithDouble:lower withDouble:upper withOrgApacheCommonsMathAnalysisUnivariateRealFunction:function]) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_SAME_SIGN_AT_ENDPOINTS(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(lower), JavaLangDouble_valueOfWithDouble_(upper), JavaLangDouble_valueOfWithDouble_([((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(function)) valueWithDouble:lower]), JavaLangDouble_valueOfWithDouble_([function valueWithDouble:upper]) } count:4 type:NSObject_class_()]);
  }
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withInt_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_f_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:withInt:withDouble:", "UnivariateRealSolverImpl", NULL, 0x4, NULL, NULL },
    { "initWithInt:withDouble:", "UnivariateRealSolverImpl", NULL, 0x4, NULL, NULL },
    { "checkResultComputed", NULL, "V", 0x4, "Ljava.lang.IllegalStateException;", NULL },
    { "getResult", NULL, "D", 0x1, NULL, NULL },
    { "getFunctionValue", NULL, "D", 0x1, NULL, NULL },
    { "setFunctionValueAccuracyWithDouble:", "setFunctionValueAccuracy", "V", 0x1, NULL, NULL },
    { "getFunctionValueAccuracy", NULL, "D", 0x1, NULL, NULL },
    { "resetFunctionValueAccuracy", NULL, "V", 0x1, NULL, NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;Ljava.lang.IllegalArgumentException;", NULL },
    { "setResultWithDouble:withInt:", "setResult", "V", 0x14, NULL, NULL },
    { "setResultWithDouble:withDouble:withInt:", "setResult", "V", 0x14, NULL, NULL },
    { "clearResult", NULL, "V", 0x14, NULL, NULL },
    { "isBracketingWithDouble:withDouble:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:", "isBracketing", "Z", 0x4, "Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "isSequenceWithDouble:withDouble:withDouble:", "isSequence", "Z", 0x4, NULL, NULL },
    { "verifyIntervalWithDouble:withDouble:", "verifyInterval", "V", 0x4, NULL, NULL },
    { "verifySequenceWithDouble:withDouble:withDouble:", "verifySequence", "V", 0x4, NULL, NULL },
    { "verifyBracketingWithDouble:withDouble:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:", "verifyBracketing", "V", 0x4, "Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "functionValueAccuracy_", NULL, 0x4, "D", NULL, NULL,  },
    { "defaultFunctionValueAccuracy_", NULL, 0x4, "D", NULL, NULL,  },
    { "resultComputed_", NULL, 0x4, "Z", NULL, NULL,  },
    { "result_", NULL, 0x4, "D", NULL, NULL,  },
    { "functionValue_", NULL, 0x4, "D", NULL, NULL,  },
    { "f_", NULL, 0x4, "Lorg.apache.commons.math.analysis.UnivariateRealFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl = { 2, "UnivariateRealSolverImpl", "org.apache.commons.math.analysis.solvers", NULL, 0x401, 18, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl;
}

@end

void OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withInt_withDouble_(OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl *self, id<OrgApacheCommonsMathAnalysisUnivariateRealFunction> f, jint defaultMaximalIterationCount, jdouble defaultAbsoluteAccuracy) {
  (void) OrgApacheCommonsMathConvergingAlgorithmImpl_initWithInt_withDouble_(self, defaultMaximalIterationCount, defaultAbsoluteAccuracy);
  self->resultComputed_ = NO;
  if (f == nil) {
    @throw new_OrgApacheCommonsMathExceptionNullArgumentException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_FUNCTION());
  }
  self->f_ = f;
  self->defaultFunctionValueAccuracy_ = 1.0e-15;
  self->functionValueAccuracy_ = self->defaultFunctionValueAccuracy_;
}

void OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithInt_withDouble_(OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl *self, jint defaultMaximalIterationCount, jdouble defaultAbsoluteAccuracy) {
  (void) OrgApacheCommonsMathConvergingAlgorithmImpl_initWithInt_withDouble_(self, defaultMaximalIterationCount, defaultAbsoluteAccuracy);
  self->resultComputed_ = NO;
  self->defaultFunctionValueAccuracy_ = 1.0e-15;
  self->functionValueAccuracy_ = self->defaultFunctionValueAccuracy_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl)
