//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/analysis/solvers/NewtonSolver.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/math/ConvergingAlgorithmImpl.h"
#include "org/apache/commons/math/FunctionEvaluationException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/MaxIterationsExceededException.h"
#include "org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.h"
#include "org/apache/commons/math/analysis/UnivariateRealFunction.h"
#include "org/apache/commons/math/analysis/solvers/NewtonSolver.h"
#include "org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.h"
#include "org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/util/FastMath.h"

@implementation OrgApacheCommonsMathAnalysisSolversNewtonSolver

- (instancetype)initWithOrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction>)f {
  OrgApacheCommonsMathAnalysisSolversNewtonSolver_initWithOrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction_(self, f);
  return self;
}

- (instancetype)init {
  OrgApacheCommonsMathAnalysisSolversNewtonSolver_init(self);
  return self;
}

- (jdouble)solveWithDouble:(jdouble)min
                withDouble:(jdouble)max {
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f_ withDouble:min withDouble:max];
}

- (jdouble)solveWithDouble:(jdouble)min
                withDouble:(jdouble)max
                withDouble:(jdouble)startValue {
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f_ withDouble:min withDouble:max withDouble:startValue];
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
             withDouble:(jdouble)min
             withDouble:(jdouble)max {
  [self setMaximalIterationCountWithInt:maxEval];
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:max];
}

- (jdouble)solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
                                                            withDouble:(jdouble)min
                                                            withDouble:(jdouble)max {
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:max withDouble:OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverUtils_midpointWithDouble_withDouble_(min, max)];
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
             withDouble:(jdouble)min
             withDouble:(jdouble)max
             withDouble:(jdouble)startValue {
  [self setMaximalIterationCountWithInt:maxEval];
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:max withDouble:startValue];
}

- (jdouble)solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
                                                            withDouble:(jdouble)min
                                                            withDouble:(jdouble)max
                                                            withDouble:(jdouble)startValue {
  @try {
    id<OrgApacheCommonsMathAnalysisUnivariateRealFunction> derivative = [((id<OrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction>) nil_chk(((id<OrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction>) check_protocol_cast(f, @protocol(OrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction))))) derivative];
    [self clearResult];
    [self verifySequenceWithDouble:min withDouble:startValue withDouble:max];
    jdouble x0 = startValue;
    jdouble x1;
    jint i = 0;
    while (i < maximalIterationCount_) {
      x1 = x0 - ([((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(f)) valueWithDouble:x0] / [((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(derivative)) valueWithDouble:x0]);
      if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(x1 - x0) <= absoluteAccuracy_) {
        [self setResultWithDouble:x1 withInt:i];
        return x1;
      }
      x0 = x1;
      ++i;
    }
    @throw [new_OrgApacheCommonsMathMaxIterationsExceededException_initWithInt_(maximalIterationCount_) autorelease];
  }
  @catch (JavaLangClassCastException *cce) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_FUNCTION_NOT_DIFFERENTIABLE(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
}

+ (IOSObjectArray *)__annotations_initWithOrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_init {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithDouble_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withDouble_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction:", "NewtonSolver", NULL, 0x1, NULL, NULL },
    { "init", "NewtonSolver", NULL, 0x1, NULL, NULL },
    { "solveWithDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathAnalysisSolversNewtonSolver = { 2, "NewtonSolver", "org.apache.commons.math.analysis.solvers", NULL, 0x1, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathAnalysisSolversNewtonSolver;
}

@end

void OrgApacheCommonsMathAnalysisSolversNewtonSolver_initWithOrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction_(OrgApacheCommonsMathAnalysisSolversNewtonSolver *self, id<OrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction> f) {
  OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withInt_withDouble_(self, f, 100, 1E-6);
}

OrgApacheCommonsMathAnalysisSolversNewtonSolver *new_OrgApacheCommonsMathAnalysisSolversNewtonSolver_initWithOrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction_(id<OrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction> f) {
  OrgApacheCommonsMathAnalysisSolversNewtonSolver *self = [OrgApacheCommonsMathAnalysisSolversNewtonSolver alloc];
  OrgApacheCommonsMathAnalysisSolversNewtonSolver_initWithOrgApacheCommonsMathAnalysisDifferentiableUnivariateRealFunction_(self, f);
  return self;
}

void OrgApacheCommonsMathAnalysisSolversNewtonSolver_init(OrgApacheCommonsMathAnalysisSolversNewtonSolver *self) {
  OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithInt_withDouble_(self, 100, 1E-6);
}

OrgApacheCommonsMathAnalysisSolversNewtonSolver *new_OrgApacheCommonsMathAnalysisSolversNewtonSolver_init() {
  OrgApacheCommonsMathAnalysisSolversNewtonSolver *self = [OrgApacheCommonsMathAnalysisSolversNewtonSolver alloc];
  OrgApacheCommonsMathAnalysisSolversNewtonSolver_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathAnalysisSolversNewtonSolver)
