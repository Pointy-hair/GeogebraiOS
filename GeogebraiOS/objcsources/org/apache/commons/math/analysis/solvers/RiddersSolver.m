//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/analysis/solvers/RiddersSolver.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "org/apache/commons/math/ConvergenceException.h"
#include "org/apache/commons/math/ConvergingAlgorithmImpl.h"
#include "org/apache/commons/math/FunctionEvaluationException.h"
#include "org/apache/commons/math/MaxIterationsExceededException.h"
#include "org/apache/commons/math/analysis/UnivariateRealFunction.h"
#include "org/apache/commons/math/analysis/solvers/RiddersSolver.h"
#include "org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.h"
#include "org/apache/commons/math/util/FastMath.h"
#include "org/apache/commons/math/util/MathUtils.h"

@implementation OrgApacheCommonsMathAnalysisSolversRiddersSolver

- (instancetype)initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f {
  OrgApacheCommonsMathAnalysisSolversRiddersSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(self, f);
  return self;
}

- (instancetype)init {
  OrgApacheCommonsMathAnalysisSolversRiddersSolver_init(self);
  return self;
}

- (jdouble)solveWithDouble:(jdouble)min
                withDouble:(jdouble)max {
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f_ withDouble:min withDouble:max];
}

- (jdouble)solveWithDouble:(jdouble)min
                withDouble:(jdouble)max
                withDouble:(jdouble)initial {
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f_ withDouble:min withDouble:max withDouble:initial];
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
             withDouble:(jdouble)min
             withDouble:(jdouble)max
             withDouble:(jdouble)initial {
  [self setMaximalIterationCountWithInt:maxEval];
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:max withDouble:initial];
}

- (jdouble)solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
                                                            withDouble:(jdouble)min
                                                            withDouble:(jdouble)max
                                                            withDouble:(jdouble)initial {
  if ([((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(f)) valueWithDouble:min] == 0.0) {
    return min;
  }
  if ([f valueWithDouble:max] == 0.0) {
    return max;
  }
  if ([f valueWithDouble:initial] == 0.0) {
    return initial;
  }
  [self verifyBracketingWithDouble:min withDouble:max withOrgApacheCommonsMathAnalysisUnivariateRealFunction:f];
  [self verifySequenceWithDouble:min withDouble:initial withDouble:max];
  if ([self isBracketingWithDouble:min withDouble:initial withOrgApacheCommonsMathAnalysisUnivariateRealFunction:f]) {
    return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:initial];
  }
  else {
    return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:initial withDouble:max];
  }
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
             withDouble:(jdouble)min
             withDouble:(jdouble)max {
  [self setMaximalIterationCountWithInt:maxEval];
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:max];
}

- (jdouble)solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
                                                            withDouble:(jdouble)min
                                                            withDouble:(jdouble)max {
  jdouble x1 = min;
  jdouble y1 = [((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(f)) valueWithDouble:x1];
  jdouble x2 = max;
  jdouble y2 = [f valueWithDouble:x2];
  if (y1 == 0.0) {
    return min;
  }
  if (y2 == 0.0) {
    return max;
  }
  [self verifyBracketingWithDouble:min withDouble:max withOrgApacheCommonsMathAnalysisUnivariateRealFunction:f];
  jint i = 1;
  jdouble oldx = JavaLangDouble_POSITIVE_INFINITY;
  while (i <= maximalIterationCount_) {
    jdouble x3 = 0.5 * (x1 + x2);
    jdouble y3 = [f valueWithDouble:x3];
    if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(y3) <= functionValueAccuracy_) {
      [self setResultWithDouble:x3 withInt:i];
      return result_;
    }
    jdouble delta = 1 - (y1 * y2) / (y3 * y3);
    jdouble correction = (OrgApacheCommonsMathUtilMathUtils_signWithDouble_(y2) * OrgApacheCommonsMathUtilMathUtils_signWithDouble_(y3)) * (x3 - x1) / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(delta);
    jdouble x = x3 - correction;
    jdouble y = [f valueWithDouble:x];
    jdouble tolerance = OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(relativeAccuracy_ * OrgApacheCommonsMathUtilFastMath_absWithDouble_(x), absoluteAccuracy_);
    if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(x - oldx) <= tolerance) {
      [self setResultWithDouble:x withInt:i];
      return result_;
    }
    if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(y) <= functionValueAccuracy_) {
      [self setResultWithDouble:x withInt:i];
      return result_;
    }
    if (correction > 0.0) {
      if (OrgApacheCommonsMathUtilMathUtils_signWithDouble_(y1) + OrgApacheCommonsMathUtilMathUtils_signWithDouble_(y) == 0.0) {
        x2 = x;
        y2 = y;
      }
      else {
        x1 = x;
        x2 = x3;
        y1 = y;
        y2 = y3;
      }
    }
    else {
      if (OrgApacheCommonsMathUtilMathUtils_signWithDouble_(y2) + OrgApacheCommonsMathUtilMathUtils_signWithDouble_(y) == 0.0) {
        x1 = x;
        y1 = y;
      }
      else {
        x1 = x3;
        x2 = x;
        y1 = y3;
        y2 = y;
      }
    }
    oldx = x;
    i++;
  }
  @throw new_OrgApacheCommonsMathMaxIterationsExceededException_initWithInt_(maximalIterationCount_);
}

+ (IOSObjectArray *)__annotations_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_init {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithDouble_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withDouble_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:", "RiddersSolver", NULL, 0x1, NULL, NULL },
    { "init", "RiddersSolver", NULL, 0x1, NULL, NULL },
    { "solveWithDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathAnalysisSolversRiddersSolver = { 2, "RiddersSolver", "org.apache.commons.math.analysis.solvers", NULL, 0x1, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathAnalysisSolversRiddersSolver;
}

@end

void OrgApacheCommonsMathAnalysisSolversRiddersSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(OrgApacheCommonsMathAnalysisSolversRiddersSolver *self, id<OrgApacheCommonsMathAnalysisUnivariateRealFunction> f) {
  (void) OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withInt_withDouble_(self, f, 100, 1E-6);
}

OrgApacheCommonsMathAnalysisSolversRiddersSolver *new_OrgApacheCommonsMathAnalysisSolversRiddersSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction> f) {
  OrgApacheCommonsMathAnalysisSolversRiddersSolver *self = [OrgApacheCommonsMathAnalysisSolversRiddersSolver alloc];
  OrgApacheCommonsMathAnalysisSolversRiddersSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(self, f);
  return self;
}

void OrgApacheCommonsMathAnalysisSolversRiddersSolver_init(OrgApacheCommonsMathAnalysisSolversRiddersSolver *self) {
  (void) OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithInt_withDouble_(self, 100, 1E-6);
}

OrgApacheCommonsMathAnalysisSolversRiddersSolver *new_OrgApacheCommonsMathAnalysisSolversRiddersSolver_init() {
  OrgApacheCommonsMathAnalysisSolversRiddersSolver *self = [OrgApacheCommonsMathAnalysisSolversRiddersSolver alloc];
  OrgApacheCommonsMathAnalysisSolversRiddersSolver_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathAnalysisSolversRiddersSolver)
