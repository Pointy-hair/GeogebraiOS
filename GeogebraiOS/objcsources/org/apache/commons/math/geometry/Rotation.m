//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/geometry/Rotation.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/geometry/CardanEulerSingularityException.h"
#include "org/apache/commons/math/geometry/NotARotationMatrixException.h"
#include "org/apache/commons/math/geometry/Rotation.h"
#include "org/apache/commons/math/geometry/RotationOrder.h"
#include "org/apache/commons/math/geometry/Vector3D.h"
#include "org/apache/commons/math/util/FastMath.h"

#define OrgApacheCommonsMathGeometryRotation_serialVersionUID -2153622329907944313LL

@interface OrgApacheCommonsMathGeometryRotation () {
 @public
  jdouble q0_;
  jdouble q1_;
  jdouble q2_;
  jdouble q3_;
}

- (IOSObjectArray *)orthogonalizeMatrixWithDoubleArray2:(IOSObjectArray *)m
                                             withDouble:(jdouble)threshold;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathGeometryRotation, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsMathGeometryRotation_orthogonalizeMatrixWithDoubleArray2_withDouble_(OrgApacheCommonsMathGeometryRotation *self, IOSObjectArray *m, jdouble threshold);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsMathGeometryRotation)

OrgApacheCommonsMathGeometryRotation *OrgApacheCommonsMathGeometryRotation_IDENTITY_;

@implementation OrgApacheCommonsMathGeometryRotation

- (instancetype)initWithDouble:(jdouble)q0
                    withDouble:(jdouble)q1
                    withDouble:(jdouble)q2
                    withDouble:(jdouble)q3
                   withBoolean:(jboolean)needsNormalization {
  OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(self, q0, q1, q2, q3, needsNormalization);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)axis
                                                  withDouble:(jdouble)angle {
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withDouble_(self, axis, angle);
  return self;
}

- (instancetype)initWithDoubleArray2:(IOSObjectArray *)m
                          withDouble:(jdouble)threshold {
  OrgApacheCommonsMathGeometryRotation_initWithDoubleArray2_withDouble_(self, m, threshold);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u1
                    withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u2
                    withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v1
                    withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v2 {
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(self, u1, u2, v1, v2);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u
                    withOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)v {
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(self, u, v);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathGeometryRotationOrder:(OrgApacheCommonsMathGeometryRotationOrder *)order
                                                       withDouble:(jdouble)alpha1
                                                       withDouble:(jdouble)alpha2
                                                       withDouble:(jdouble)alpha3 {
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryRotationOrder_withDouble_withDouble_withDouble_(self, order, alpha1, alpha2, alpha3);
  return self;
}

- (OrgApacheCommonsMathGeometryRotation *)revert {
  return [new_OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(-q0_, q1_, q2_, q3_, NO) autorelease];
}

- (jdouble)getQ0 {
  return q0_;
}

- (jdouble)getQ1 {
  return q1_;
}

- (jdouble)getQ2 {
  return q2_;
}

- (jdouble)getQ3 {
  return q3_;
}

- (OrgApacheCommonsMathGeometryVector3D *)getAxis {
  jdouble squaredSine = q1_ * q1_ + q2_ * q2_ + q3_ * q3_;
  if (squaredSine == 0) {
    return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(1, 0, 0) autorelease];
  }
  else if (q0_ < 0) {
    jdouble inverse = 1 / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(squaredSine);
    return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(q1_ * inverse, q2_ * inverse, q3_ * inverse) autorelease];
  }
  jdouble inverse = -1 / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(squaredSine);
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(q1_ * inverse, q2_ * inverse, q3_ * inverse) autorelease];
}

- (jdouble)getAngle {
  if ((q0_ < -0.1) || (q0_ > 0.1)) {
    return 2 * OrgApacheCommonsMathUtilFastMath_asinWithDouble_(OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(q1_ * q1_ + q2_ * q2_ + q3_ * q3_));
  }
  else if (q0_ < 0) {
    return 2 * OrgApacheCommonsMathUtilFastMath_acosWithDouble_(-q0_);
  }
  return 2 * OrgApacheCommonsMathUtilFastMath_acosWithDouble_(q0_);
}

- (IOSDoubleArray *)getAnglesWithOrgApacheCommonsMathGeometryRotationOrder:(OrgApacheCommonsMathGeometryRotationOrder *)order {
  if (order == OrgApacheCommonsMathGeometryRotationOrder_get_XYZ_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getZ] < -0.9999999999) || ([v2 getZ] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(YES) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_(-([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getY]), [v1 getZ]), OrgApacheCommonsMathUtilFastMath_asinWithDouble_([v2 getZ]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_(-([v2 getY]), [v2 getX]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_XZY_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getY] < -0.9999999999) || ([v2 getY] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(YES) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getZ], [v1 getY]), -OrgApacheCommonsMathUtilFastMath_asinWithDouble_([v2 getY]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getZ], [v2 getX]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_YXZ_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getZ] < -0.9999999999) || ([v2 getZ] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(YES) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getX], [v1 getZ]), -OrgApacheCommonsMathUtilFastMath_asinWithDouble_([v2 getZ]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getX], [v2 getY]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_YZX_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getX] < -0.9999999999) || ([v2 getX] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(YES) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_(-([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getZ]), [v1 getX]), OrgApacheCommonsMathUtilFastMath_asinWithDouble_([v2 getX]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_(-([v2 getZ]), [v2 getY]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_ZXY_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getY] < -0.9999999999) || ([v2 getY] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(YES) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_(-([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getX]), [v1 getY]), OrgApacheCommonsMathUtilFastMath_asinWithDouble_([v2 getY]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_(-([v2 getX]), [v2 getZ]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_ZYX_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getX] < -0.9999999999) || ([v2 getX] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(YES) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getY], [v1 getX]), -OrgApacheCommonsMathUtilFastMath_asinWithDouble_([v2 getX]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getY], [v2 getZ]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_XYX_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getX] < -0.9999999999) || ([v2 getX] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(NO) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getY], -[v1 getZ]), OrgApacheCommonsMathUtilFastMath_acosWithDouble_([v2 getX]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getY], [v2 getZ]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_XZX_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_I_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getX] < -0.9999999999) || ([v2 getX] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(NO) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getZ], [v1 getY]), OrgApacheCommonsMathUtilFastMath_acosWithDouble_([v2 getX]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getZ], -[v2 getY]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_YXY_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getY] < -0.9999999999) || ([v2 getY] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(NO) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getX], [v1 getZ]), OrgApacheCommonsMathUtilFastMath_acosWithDouble_([v2 getY]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getX], -[v2 getZ]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_YZY_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_J_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getY] < -0.9999999999) || ([v2 getY] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(NO) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getZ], -[v1 getX]), OrgApacheCommonsMathUtilFastMath_acosWithDouble_([v2 getY]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getZ], [v2 getX]) } count:3];
  }
  else if (order == OrgApacheCommonsMathGeometryRotationOrder_get_ZXZ_()) {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getZ] < -0.9999999999) || ([v2 getZ] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(NO) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getX], -[v1 getY]), OrgApacheCommonsMathUtilFastMath_acosWithDouble_([v2 getZ]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getX], [v2 getY]) } count:3];
  }
  else {
    OrgApacheCommonsMathGeometryVector3D *v1 = [self applyToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    OrgApacheCommonsMathGeometryVector3D *v2 = [self applyInverseToWithOrgApacheCommonsMathGeometryVector3D:OrgApacheCommonsMathGeometryVector3D_get_PLUS_K_()];
    if (([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getZ] < -0.9999999999) || ([v2 getZ] > 0.9999999999)) {
      @throw [new_OrgApacheCommonsMathGeometryCardanEulerSingularityException_initWithBoolean_(NO) autorelease];
    }
    return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getY], [v1 getX]), OrgApacheCommonsMathUtilFastMath_acosWithDouble_([v2 getZ]), OrgApacheCommonsMathUtilFastMath_atan2WithDouble_withDouble_([v2 getY], -[v2 getX]) } count:3];
  }
}

- (IOSObjectArray *)getMatrix {
  jdouble q0q0 = q0_ * q0_;
  jdouble q0q1 = q0_ * q1_;
  jdouble q0q2 = q0_ * q2_;
  jdouble q0q3 = q0_ * q3_;
  jdouble q1q1 = q1_ * q1_;
  jdouble q1q2 = q1_ * q2_;
  jdouble q1q3 = q1_ * q3_;
  jdouble q2q2 = q2_ * q2_;
  jdouble q2q3 = q2_ * q3_;
  jdouble q3q3 = q3_ * q3_;
  IOSObjectArray *m = [IOSObjectArray arrayWithLength:3 type:IOSClass_doubleArray(1)];
  IOSObjectArray_SetAndConsume(m, 0, [IOSDoubleArray newArrayWithLength:3]);
  IOSObjectArray_SetAndConsume(m, 1, [IOSDoubleArray newArrayWithLength:3]);
  IOSObjectArray_SetAndConsume(m, 2, [IOSDoubleArray newArrayWithLength:3]);
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 0)), 0) = 2.0 * (q0q0 + q1q1) - 1.0;
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 1)), 0) = 2.0 * (q1q2 - q0q3);
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 2)), 0) = 2.0 * (q1q3 + q0q2);
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 0)), 1) = 2.0 * (q1q2 + q0q3);
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 1)), 1) = 2.0 * (q0q0 + q2q2) - 1.0;
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 2)), 1) = 2.0 * (q2q3 - q0q1);
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 0)), 2) = 2.0 * (q1q3 - q0q2);
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 1)), 2) = 2.0 * (q2q3 + q0q1);
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(m, 2)), 2) = 2.0 * (q0q0 + q3q3) - 1.0;
  return m;
}

- (OrgApacheCommonsMathGeometryVector3D *)applyToWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u {
  jdouble x = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u)) getX];
  jdouble y = [u getY];
  jdouble z = [u getZ];
  jdouble s = q1_ * x + q2_ * y + q3_ * z;
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(2 * (q0_ * (x * q0_ - (q2_ * z - q3_ * y)) + s * q1_) - x, 2 * (q0_ * (y * q0_ - (q3_ * x - q1_ * z)) + s * q2_) - y, 2 * (q0_ * (z * q0_ - (q1_ * y - q2_ * x)) + s * q3_) - z) autorelease];
}

- (OrgApacheCommonsMathGeometryVector3D *)applyInverseToWithOrgApacheCommonsMathGeometryVector3D:(OrgApacheCommonsMathGeometryVector3D *)u {
  jdouble x = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u)) getX];
  jdouble y = [u getY];
  jdouble z = [u getZ];
  jdouble s = q1_ * x + q2_ * y + q3_ * z;
  jdouble m0 = -q0_;
  return [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(2 * (m0 * (x * m0 - (q2_ * z - q3_ * y)) + s * q1_) - x, 2 * (m0 * (y * m0 - (q3_ * x - q1_ * z)) + s * q2_) - y, 2 * (m0 * (z * m0 - (q1_ * y - q2_ * x)) + s * q3_) - z) autorelease];
}

- (OrgApacheCommonsMathGeometryRotation *)applyToWithOrgApacheCommonsMathGeometryRotation:(OrgApacheCommonsMathGeometryRotation *)r {
  return [new_OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(((OrgApacheCommonsMathGeometryRotation *) nil_chk(r))->q0_ * q0_ - (r->q1_ * q1_ + r->q2_ * q2_ + r->q3_ * q3_), r->q1_ * q0_ + r->q0_ * q1_ + (r->q2_ * q3_ - r->q3_ * q2_), r->q2_ * q0_ + r->q0_ * q2_ + (r->q3_ * q1_ - r->q1_ * q3_), r->q3_ * q0_ + r->q0_ * q3_ + (r->q1_ * q2_ - r->q2_ * q1_), NO) autorelease];
}

- (OrgApacheCommonsMathGeometryRotation *)applyInverseToWithOrgApacheCommonsMathGeometryRotation:(OrgApacheCommonsMathGeometryRotation *)r {
  return [new_OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(-((OrgApacheCommonsMathGeometryRotation *) nil_chk(r))->q0_ * q0_ - (r->q1_ * q1_ + r->q2_ * q2_ + r->q3_ * q3_), -r->q1_ * q0_ + r->q0_ * q1_ + (r->q2_ * q3_ - r->q3_ * q2_), -r->q2_ * q0_ + r->q0_ * q2_ + (r->q3_ * q1_ - r->q1_ * q3_), -r->q3_ * q0_ + r->q0_ * q3_ + (r->q1_ * q2_ - r->q2_ * q1_), NO) autorelease];
}

- (IOSObjectArray *)orthogonalizeMatrixWithDoubleArray2:(IOSObjectArray *)m
                                             withDouble:(jdouble)threshold {
  return OrgApacheCommonsMathGeometryRotation_orthogonalizeMatrixWithDoubleArray2_withDouble_(self, m, threshold);
}

+ (jdouble)distanceWithOrgApacheCommonsMathGeometryRotation:(OrgApacheCommonsMathGeometryRotation *)r1
                   withOrgApacheCommonsMathGeometryRotation:(OrgApacheCommonsMathGeometryRotation *)r2 {
  return OrgApacheCommonsMathGeometryRotation_distanceWithOrgApacheCommonsMathGeometryRotation_withOrgApacheCommonsMathGeometryRotation_(r1, r2);
}

+ (void)initialize {
  if (self == [OrgApacheCommonsMathGeometryRotation class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsMathGeometryRotation_IDENTITY_, nil, new_OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(1.0, 0.0, 0.0, 0.0, NO));
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsMathGeometryRotation)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withDouble:withDouble:withDouble:withBoolean:", "Rotation", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathGeometryVector3D:withDouble:", "Rotation", NULL, 0x1, NULL, NULL },
    { "initWithDoubleArray2:withDouble:", "Rotation", NULL, 0x1, "Lorg.apache.commons.math.geometry.NotARotationMatrixException;", NULL },
    { "initWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "Rotation", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathGeometryVector3D:withOrgApacheCommonsMathGeometryVector3D:", "Rotation", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathGeometryRotationOrder:withDouble:withDouble:withDouble:", "Rotation", NULL, 0x1, NULL, NULL },
    { "revert", NULL, "Lorg.apache.commons.math.geometry.Rotation;", 0x1, NULL, NULL },
    { "getQ0", NULL, "D", 0x1, NULL, NULL },
    { "getQ1", NULL, "D", 0x1, NULL, NULL },
    { "getQ2", NULL, "D", 0x1, NULL, NULL },
    { "getQ3", NULL, "D", 0x1, NULL, NULL },
    { "getAxis", NULL, "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "getAngle", NULL, "D", 0x1, NULL, NULL },
    { "getAnglesWithOrgApacheCommonsMathGeometryRotationOrder:", "getAngles", "[D", 0x1, "Lorg.apache.commons.math.geometry.CardanEulerSingularityException;", NULL },
    { "getMatrix", NULL, "[[D", 0x1, NULL, NULL },
    { "applyToWithOrgApacheCommonsMathGeometryVector3D:", "applyTo", "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "applyInverseToWithOrgApacheCommonsMathGeometryVector3D:", "applyInverseTo", "Lorg.apache.commons.math.geometry.Vector3D;", 0x1, NULL, NULL },
    { "applyToWithOrgApacheCommonsMathGeometryRotation:", "applyTo", "Lorg.apache.commons.math.geometry.Rotation;", 0x1, NULL, NULL },
    { "applyInverseToWithOrgApacheCommonsMathGeometryRotation:", "applyInverseTo", "Lorg.apache.commons.math.geometry.Rotation;", 0x1, NULL, NULL },
    { "orthogonalizeMatrixWithDoubleArray2:withDouble:", "orthogonalizeMatrix", "[[D", 0x2, "Lorg.apache.commons.math.geometry.NotARotationMatrixException;", NULL },
    { "distanceWithOrgApacheCommonsMathGeometryRotation:withOrgApacheCommonsMathGeometryRotation:", "distance", "D", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "IDENTITY_", NULL, 0x19, "Lorg.apache.commons.math.geometry.Rotation;", &OrgApacheCommonsMathGeometryRotation_IDENTITY_, NULL,  },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathGeometryRotation_serialVersionUID },
    { "q0_", NULL, 0x12, "D", NULL, NULL,  },
    { "q1_", NULL, 0x12, "D", NULL, NULL,  },
    { "q2_", NULL, 0x12, "D", NULL, NULL,  },
    { "q3_", NULL, 0x12, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathGeometryRotation = { 2, "Rotation", "org.apache.commons.math.geometry", NULL, 0x1, 21, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathGeometryRotation;
}

@end

void OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(OrgApacheCommonsMathGeometryRotation *self, jdouble q0, jdouble q1, jdouble q2, jdouble q3, jboolean needsNormalization) {
  NSObject_init(self);
  if (needsNormalization) {
    jdouble inv = 1.0 / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
    q0 *= inv;
    q1 *= inv;
    q2 *= inv;
    q3 *= inv;
  }
  self->q0_ = q0;
  self->q1_ = q1;
  self->q2_ = q2;
  self->q3_ = q3;
}

OrgApacheCommonsMathGeometryRotation *new_OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(jdouble q0, jdouble q1, jdouble q2, jdouble q3, jboolean needsNormalization) {
  OrgApacheCommonsMathGeometryRotation *self = [OrgApacheCommonsMathGeometryRotation alloc];
  OrgApacheCommonsMathGeometryRotation_initWithDouble_withDouble_withDouble_withDouble_withBoolean_(self, q0, q1, q2, q3, needsNormalization);
  return self;
}

void OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withDouble_(OrgApacheCommonsMathGeometryRotation *self, OrgApacheCommonsMathGeometryVector3D *axis, jdouble angle) {
  NSObject_init(self);
  jdouble norm = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(axis)) getNorm];
  if (norm == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ZERO_NORM_FOR_ROTATION_AXIS(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  jdouble halfAngle = -0.5 * angle;
  jdouble coeff = OrgApacheCommonsMathUtilFastMath_sinWithDouble_(halfAngle) / norm;
  self->q0_ = OrgApacheCommonsMathUtilFastMath_cosWithDouble_(halfAngle);
  self->q1_ = coeff * [axis getX];
  self->q2_ = coeff * [axis getY];
  self->q3_ = coeff * [axis getZ];
}

OrgApacheCommonsMathGeometryRotation *new_OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withDouble_(OrgApacheCommonsMathGeometryVector3D *axis, jdouble angle) {
  OrgApacheCommonsMathGeometryRotation *self = [OrgApacheCommonsMathGeometryRotation alloc];
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withDouble_(self, axis, angle);
  return self;
}

void OrgApacheCommonsMathGeometryRotation_initWithDoubleArray2_withDouble_(OrgApacheCommonsMathGeometryRotation *self, IOSObjectArray *m, jdouble threshold) {
  NSObject_init(self);
  if ((((IOSObjectArray *) nil_chk(m))->size_ != 3) || (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(m, 0)))->size_ != 3) || (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(m, 1)))->size_ != 3) || (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(m, 2)))->size_ != 3)) {
    @throw [new_OrgApacheCommonsMathGeometryNotARotationMatrixException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ROTATION_MATRIX_DIMENSIONS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(m->size_), JavaLangInteger_valueOfWithInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(m, 0)))->size_) } count:2 type:NSObject_class_()]) autorelease];
  }
  IOSObjectArray *ort = OrgApacheCommonsMathGeometryRotation_orthogonalizeMatrixWithDoubleArray2_withDouble_(self, m, threshold);
  jdouble det = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(ort), 0)), 0) * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 2) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 2)) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 0) * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 2) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 2)) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 0) * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 2) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 2));
  if (det < 0.0) {
    @throw [new_OrgApacheCommonsMathGeometryNotARotationMatrixException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(det) } count:1 type:NSObject_class_()]) autorelease];
  }
  jdouble s = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 0) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 1) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 2);
  if (s > -0.19) {
    self->q0_ = 0.5 * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(s + 1.0);
    jdouble inv = 0.25 / self->q0_;
    self->q1_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 2) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 1));
    self->q2_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 0) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 2));
    self->q3_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 1) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 0));
  }
  else {
    s = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 0) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 1) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 2);
    if (s > -0.19) {
      self->q1_ = 0.5 * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(s + 1.0);
      jdouble inv = 0.25 / self->q1_;
      self->q0_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 2) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 1));
      self->q2_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 1) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 0));
      self->q3_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 2) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 0));
    }
    else {
      s = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 1) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 0) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 2);
      if (s > -0.19) {
        self->q2_ = 0.5 * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(s + 1.0);
        jdouble inv = 0.25 / self->q2_;
        self->q0_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 0) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 2));
        self->q1_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 1) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 0));
        self->q3_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 1) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 2));
      }
      else {
        s = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 2) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 0) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 1);
        self->q3_ = 0.5 * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(s + 1.0);
        jdouble inv = 0.25 / self->q3_;
        self->q0_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 1) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 0));
        self->q1_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 0)), 2) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 0));
        self->q2_ = inv * (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 2)), 1) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(ort, 1)), 2));
      }
    }
  }
}

OrgApacheCommonsMathGeometryRotation *new_OrgApacheCommonsMathGeometryRotation_initWithDoubleArray2_withDouble_(IOSObjectArray *m, jdouble threshold) {
  OrgApacheCommonsMathGeometryRotation *self = [OrgApacheCommonsMathGeometryRotation alloc];
  OrgApacheCommonsMathGeometryRotation_initWithDoubleArray2_withDouble_(self, m, threshold);
  return self;
}

void OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryRotation *self, OrgApacheCommonsMathGeometryVector3D *u1, OrgApacheCommonsMathGeometryVector3D *u2, OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  NSObject_init(self);
  jdouble u1u1 = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(u1, u1);
  jdouble u2u2 = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(u2, u2);
  jdouble v1v1 = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v1);
  jdouble v2v2 = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v2, v2);
  if ((u1u1 == 0) || (u2u2 == 0) || (v1v1 == 0) || (v2v2 == 0)) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  jdouble u1x = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u1)) getX];
  jdouble u1y = [u1 getY];
  jdouble u1z = [u1 getZ];
  jdouble u2x = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u2)) getX];
  jdouble u2y = [u2 getY];
  jdouble u2z = [u2 getZ];
  jdouble coeff = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(u1u1 / v1v1);
  jdouble v1x = coeff * [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v1)) getX];
  jdouble v1y = coeff * [v1 getY];
  jdouble v1z = coeff * [v1 getZ];
  v1 = [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(v1x, v1y, v1z) autorelease];
  jdouble u1u2 = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(u1, u2);
  jdouble v1v2 = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
  jdouble coeffU = u1u2 / u1u1;
  jdouble coeffV = v1v2 / u1u1;
  jdouble beta = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_((u2u2 - u1u2 * coeffU) / (v2v2 - v1v2 * coeffV));
  jdouble alpha = coeffU - beta * coeffV;
  jdouble v2x = alpha * v1x + beta * [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v2)) getX];
  jdouble v2y = alpha * v1y + beta * [v2 getY];
  jdouble v2z = alpha * v1z + beta * [v2 getZ];
  v2 = [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(v2x, v2y, v2z) autorelease];
  OrgApacheCommonsMathGeometryVector3D *uRef = u1;
  OrgApacheCommonsMathGeometryVector3D *vRef = v1;
  jdouble dx1 = v1x - [u1 getX];
  jdouble dy1 = v1y - [u1 getY];
  jdouble dz1 = v1z - [u1 getZ];
  jdouble dx2 = v2x - [u2 getX];
  jdouble dy2 = v2y - [u2 getY];
  jdouble dz2 = v2z - [u2 getZ];
  OrgApacheCommonsMathGeometryVector3D *k = [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(dy1 * dz2 - dz1 * dy2, dz1 * dx2 - dx1 * dz2, dx1 * dy2 - dy1 * dx2) autorelease];
  jdouble c = [k getX] * (u1y * u2z - u1z * u2y) + [k getY] * (u1z * u2x - u1x * u2z) + [k getZ] * (u1x * u2y - u1y * u2x);
  if (c == 0) {
    OrgApacheCommonsMathGeometryVector3D *u3 = OrgApacheCommonsMathGeometryVector3D_crossProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(u1, u2);
    OrgApacheCommonsMathGeometryVector3D *v3 = OrgApacheCommonsMathGeometryVector3D_crossProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(v1, v2);
    jdouble u3x = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u3)) getX];
    jdouble u3y = [u3 getY];
    jdouble u3z = [u3 getZ];
    jdouble v3x = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v3)) getX];
    jdouble v3y = [v3 getY];
    jdouble v3z = [v3 getZ];
    jdouble dx3 = v3x - u3x;
    jdouble dy3 = v3y - u3y;
    jdouble dz3 = v3z - u3z;
    k = [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(dy1 * dz3 - dz1 * dy3, dz1 * dx3 - dx1 * dz3, dx1 * dy3 - dy1 * dx3) autorelease];
    c = [k getX] * (u1y * u3z - u1z * u3y) + [k getY] * (u1z * u3x - u1x * u3z) + [k getZ] * (u1x * u3y - u1y * u3x);
    if (c == 0) {
      k = [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_(dy2 * dz3 - dz2 * dy3, dz2 * dx3 - dx2 * dz3, dx2 * dy3 - dy2 * dx3) autorelease];
      c = [k getX] * (u2y * u3z - u2z * u3y) + [k getY] * (u2z * u3x - u2x * u3z) + [k getZ] * (u2x * u3y - u2y * u3x);
      if (c == 0) {
        self->q0_ = 1.0;
        self->q1_ = 0.0;
        self->q2_ = 0.0;
        self->q3_ = 0.0;
        return;
      }
      uRef = u2;
      vRef = v2;
    }
  }
  c = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(c);
  jdouble inv = 1.0 / (c + c);
  self->q1_ = inv * [k getX];
  self->q2_ = inv * [k getY];
  self->q3_ = inv * [k getZ];
  k = [new_OrgApacheCommonsMathGeometryVector3D_initWithDouble_withDouble_withDouble_([uRef getY] * self->q3_ - [uRef getZ] * self->q2_, [uRef getZ] * self->q1_ - [uRef getX] * self->q3_, [uRef getX] * self->q2_ - [uRef getY] * self->q1_) autorelease];
  c = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(k, k);
  self->q0_ = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(vRef, k) / (c + c);
}

OrgApacheCommonsMathGeometryRotation *new_OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *u1, OrgApacheCommonsMathGeometryVector3D *u2, OrgApacheCommonsMathGeometryVector3D *v1, OrgApacheCommonsMathGeometryVector3D *v2) {
  OrgApacheCommonsMathGeometryRotation *self = [OrgApacheCommonsMathGeometryRotation alloc];
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(self, u1, u2, v1, v2);
  return self;
}

void OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryRotation *self, OrgApacheCommonsMathGeometryVector3D *u, OrgApacheCommonsMathGeometryVector3D *v) {
  NSObject_init(self);
  jdouble normProduct = [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(u)) getNorm] * [((OrgApacheCommonsMathGeometryVector3D *) nil_chk(v)) getNorm];
  if (normProduct == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  jdouble dot = OrgApacheCommonsMathGeometryVector3D_dotProductWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(u, v);
  if (dot < ((2.0e-15 - 1.0) * normProduct)) {
    OrgApacheCommonsMathGeometryVector3D *w = [u orthogonal];
    self->q0_ = 0.0;
    self->q1_ = -[((OrgApacheCommonsMathGeometryVector3D *) nil_chk(w)) getX];
    self->q2_ = -[w getY];
    self->q3_ = -[w getZ];
  }
  else {
    self->q0_ = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(0.5 * (1.0 + dot / normProduct));
    jdouble coeff = 1.0 / (2.0 * self->q0_ * normProduct);
    self->q1_ = coeff * ([v getY] * [u getZ] - [v getZ] * [u getY]);
    self->q2_ = coeff * ([v getZ] * [u getX] - [v getX] * [u getZ]);
    self->q3_ = coeff * ([v getX] * [u getY] - [v getY] * [u getX]);
  }
}

OrgApacheCommonsMathGeometryRotation *new_OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(OrgApacheCommonsMathGeometryVector3D *u, OrgApacheCommonsMathGeometryVector3D *v) {
  OrgApacheCommonsMathGeometryRotation *self = [OrgApacheCommonsMathGeometryRotation alloc];
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withOrgApacheCommonsMathGeometryVector3D_(self, u, v);
  return self;
}

void OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryRotationOrder_withDouble_withDouble_withDouble_(OrgApacheCommonsMathGeometryRotation *self, OrgApacheCommonsMathGeometryRotationOrder *order, jdouble alpha1, jdouble alpha2, jdouble alpha3) {
  NSObject_init(self);
  OrgApacheCommonsMathGeometryRotation *r1 = [new_OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withDouble_([((OrgApacheCommonsMathGeometryRotationOrder *) nil_chk(order)) getA1], alpha1) autorelease];
  OrgApacheCommonsMathGeometryRotation *r2 = [new_OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withDouble_([order getA2], alpha2) autorelease];
  OrgApacheCommonsMathGeometryRotation *r3 = [new_OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryVector3D_withDouble_([order getA3], alpha3) autorelease];
  OrgApacheCommonsMathGeometryRotation *composed = [r1 applyToWithOrgApacheCommonsMathGeometryRotation:[r2 applyToWithOrgApacheCommonsMathGeometryRotation:r3]];
  self->q0_ = ((OrgApacheCommonsMathGeometryRotation *) nil_chk(composed))->q0_;
  self->q1_ = composed->q1_;
  self->q2_ = composed->q2_;
  self->q3_ = composed->q3_;
}

OrgApacheCommonsMathGeometryRotation *new_OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryRotationOrder_withDouble_withDouble_withDouble_(OrgApacheCommonsMathGeometryRotationOrder *order, jdouble alpha1, jdouble alpha2, jdouble alpha3) {
  OrgApacheCommonsMathGeometryRotation *self = [OrgApacheCommonsMathGeometryRotation alloc];
  OrgApacheCommonsMathGeometryRotation_initWithOrgApacheCommonsMathGeometryRotationOrder_withDouble_withDouble_withDouble_(self, order, alpha1, alpha2, alpha3);
  return self;
}

IOSObjectArray *OrgApacheCommonsMathGeometryRotation_orthogonalizeMatrixWithDoubleArray2_withDouble_(OrgApacheCommonsMathGeometryRotation *self, IOSObjectArray *m, jdouble threshold) {
  IOSDoubleArray *m0 = IOSObjectArray_Get(nil_chk(m), 0);
  IOSDoubleArray *m1 = IOSObjectArray_Get(m, 1);
  IOSDoubleArray *m2 = IOSObjectArray_Get(m, 2);
  jdouble x00 = IOSDoubleArray_Get(nil_chk(m0), 0);
  jdouble x01 = IOSDoubleArray_Get(m0, 1);
  jdouble x02 = IOSDoubleArray_Get(m0, 2);
  jdouble x10 = IOSDoubleArray_Get(nil_chk(m1), 0);
  jdouble x11 = IOSDoubleArray_Get(m1, 1);
  jdouble x12 = IOSDoubleArray_Get(m1, 2);
  jdouble x20 = IOSDoubleArray_Get(nil_chk(m2), 0);
  jdouble x21 = IOSDoubleArray_Get(m2, 1);
  jdouble x22 = IOSDoubleArray_Get(m2, 2);
  jdouble fn = 0;
  jdouble fn1;
  IOSObjectArray *o = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ 3, 3 }];
  IOSDoubleArray *o0 = IOSObjectArray_Get(o, 0);
  IOSDoubleArray *o1 = IOSObjectArray_Get(o, 1);
  IOSDoubleArray *o2 = IOSObjectArray_Get(o, 2);
  jint i = 0;
  while (++i < 11) {
    jdouble mx00 = IOSDoubleArray_Get(m0, 0) * x00 + IOSDoubleArray_Get(m1, 0) * x10 + IOSDoubleArray_Get(m2, 0) * x20;
    jdouble mx10 = IOSDoubleArray_Get(m0, 1) * x00 + IOSDoubleArray_Get(m1, 1) * x10 + IOSDoubleArray_Get(m2, 1) * x20;
    jdouble mx20 = IOSDoubleArray_Get(m0, 2) * x00 + IOSDoubleArray_Get(m1, 2) * x10 + IOSDoubleArray_Get(m2, 2) * x20;
    jdouble mx01 = IOSDoubleArray_Get(m0, 0) * x01 + IOSDoubleArray_Get(m1, 0) * x11 + IOSDoubleArray_Get(m2, 0) * x21;
    jdouble mx11 = IOSDoubleArray_Get(m0, 1) * x01 + IOSDoubleArray_Get(m1, 1) * x11 + IOSDoubleArray_Get(m2, 1) * x21;
    jdouble mx21 = IOSDoubleArray_Get(m0, 2) * x01 + IOSDoubleArray_Get(m1, 2) * x11 + IOSDoubleArray_Get(m2, 2) * x21;
    jdouble mx02 = IOSDoubleArray_Get(m0, 0) * x02 + IOSDoubleArray_Get(m1, 0) * x12 + IOSDoubleArray_Get(m2, 0) * x22;
    jdouble mx12 = IOSDoubleArray_Get(m0, 1) * x02 + IOSDoubleArray_Get(m1, 1) * x12 + IOSDoubleArray_Get(m2, 1) * x22;
    jdouble mx22 = IOSDoubleArray_Get(m0, 2) * x02 + IOSDoubleArray_Get(m1, 2) * x12 + IOSDoubleArray_Get(m2, 2) * x22;
    *IOSDoubleArray_GetRef(nil_chk(o0), 0) = x00 - 0.5 * (x00 * mx00 + x01 * mx10 + x02 * mx20 - IOSDoubleArray_Get(m0, 0));
    *IOSDoubleArray_GetRef(o0, 1) = x01 - 0.5 * (x00 * mx01 + x01 * mx11 + x02 * mx21 - IOSDoubleArray_Get(m0, 1));
    *IOSDoubleArray_GetRef(o0, 2) = x02 - 0.5 * (x00 * mx02 + x01 * mx12 + x02 * mx22 - IOSDoubleArray_Get(m0, 2));
    *IOSDoubleArray_GetRef(nil_chk(o1), 0) = x10 - 0.5 * (x10 * mx00 + x11 * mx10 + x12 * mx20 - IOSDoubleArray_Get(m1, 0));
    *IOSDoubleArray_GetRef(o1, 1) = x11 - 0.5 * (x10 * mx01 + x11 * mx11 + x12 * mx21 - IOSDoubleArray_Get(m1, 1));
    *IOSDoubleArray_GetRef(o1, 2) = x12 - 0.5 * (x10 * mx02 + x11 * mx12 + x12 * mx22 - IOSDoubleArray_Get(m1, 2));
    *IOSDoubleArray_GetRef(nil_chk(o2), 0) = x20 - 0.5 * (x20 * mx00 + x21 * mx10 + x22 * mx20 - IOSDoubleArray_Get(m2, 0));
    *IOSDoubleArray_GetRef(o2, 1) = x21 - 0.5 * (x20 * mx01 + x21 * mx11 + x22 * mx21 - IOSDoubleArray_Get(m2, 1));
    *IOSDoubleArray_GetRef(o2, 2) = x22 - 0.5 * (x20 * mx02 + x21 * mx12 + x22 * mx22 - IOSDoubleArray_Get(m2, 2));
    jdouble corr00 = IOSDoubleArray_Get(o0, 0) - IOSDoubleArray_Get(m0, 0);
    jdouble corr01 = IOSDoubleArray_Get(o0, 1) - IOSDoubleArray_Get(m0, 1);
    jdouble corr02 = IOSDoubleArray_Get(o0, 2) - IOSDoubleArray_Get(m0, 2);
    jdouble corr10 = IOSDoubleArray_Get(o1, 0) - IOSDoubleArray_Get(m1, 0);
    jdouble corr11 = IOSDoubleArray_Get(o1, 1) - IOSDoubleArray_Get(m1, 1);
    jdouble corr12 = IOSDoubleArray_Get(o1, 2) - IOSDoubleArray_Get(m1, 2);
    jdouble corr20 = IOSDoubleArray_Get(o2, 0) - IOSDoubleArray_Get(m2, 0);
    jdouble corr21 = IOSDoubleArray_Get(o2, 1) - IOSDoubleArray_Get(m2, 1);
    jdouble corr22 = IOSDoubleArray_Get(o2, 2) - IOSDoubleArray_Get(m2, 2);
    fn1 = corr00 * corr00 + corr01 * corr01 + corr02 * corr02 + corr10 * corr10 + corr11 * corr11 + corr12 * corr12 + corr20 * corr20 + corr21 * corr21 + corr22 * corr22;
    if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(fn1 - fn) <= threshold) return o;
    x00 = IOSDoubleArray_Get(o0, 0);
    x01 = IOSDoubleArray_Get(o0, 1);
    x02 = IOSDoubleArray_Get(o0, 2);
    x10 = IOSDoubleArray_Get(o1, 0);
    x11 = IOSDoubleArray_Get(o1, 1);
    x12 = IOSDoubleArray_Get(o1, 2);
    x20 = IOSDoubleArray_Get(o2, 0);
    x21 = IOSDoubleArray_Get(o2, 1);
    x22 = IOSDoubleArray_Get(o2, 2);
    fn = fn1;
  }
  @throw [new_OrgApacheCommonsMathGeometryNotARotationMatrixException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_UNABLE_TO_ORTHOGONOLIZE_MATRIX(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(i - 1) } count:1 type:NSObject_class_()]) autorelease];
}

jdouble OrgApacheCommonsMathGeometryRotation_distanceWithOrgApacheCommonsMathGeometryRotation_withOrgApacheCommonsMathGeometryRotation_(OrgApacheCommonsMathGeometryRotation *r1, OrgApacheCommonsMathGeometryRotation *r2) {
  OrgApacheCommonsMathGeometryRotation_initialize();
  return [((OrgApacheCommonsMathGeometryRotation *) nil_chk([((OrgApacheCommonsMathGeometryRotation *) nil_chk(r1)) applyInverseToWithOrgApacheCommonsMathGeometryRotation:r2])) getAngle];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathGeometryRotation)
