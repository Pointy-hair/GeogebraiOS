//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/estimation/SimpleEstimationProblem.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/commons/math/estimation/EstimatedParameter.h"
#include "org/apache/commons/math/estimation/SimpleEstimationProblem.h"
#include "org/apache/commons/math/estimation/WeightedMeasurement.h"

@interface OrgApacheCommonsMathEstimationSimpleEstimationProblem () {
 @public
  id<JavaUtilList> parameters_;
  id<JavaUtilList> measurements_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathEstimationSimpleEstimationProblem, parameters_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathEstimationSimpleEstimationProblem, measurements_, id<JavaUtilList>)

@implementation OrgApacheCommonsMathEstimationSimpleEstimationProblem

- (instancetype)init {
  OrgApacheCommonsMathEstimationSimpleEstimationProblem_init(self);
  return self;
}

- (IOSObjectArray *)getAllParameters {
  return [parameters_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(parameters_)) size] type:OrgApacheCommonsMathEstimationEstimatedParameter_class_()]];
}

- (IOSObjectArray *)getUnboundParameters {
  id<JavaUtilList> unbound = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(parameters_)) size]);
  for (OrgApacheCommonsMathEstimationEstimatedParameter * __strong p in parameters_) {
    if (![((OrgApacheCommonsMathEstimationEstimatedParameter *) nil_chk(p)) isBound]) {
      [unbound addWithId:p];
    }
  }
  return [unbound toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[unbound size] type:OrgApacheCommonsMathEstimationEstimatedParameter_class_()]];
}

- (IOSObjectArray *)getMeasurements {
  return [measurements_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(measurements_)) size] type:OrgApacheCommonsMathEstimationWeightedMeasurement_class_()]];
}

- (void)addParameterWithOrgApacheCommonsMathEstimationEstimatedParameter:(OrgApacheCommonsMathEstimationEstimatedParameter *)p {
  [((id<JavaUtilList>) nil_chk(parameters_)) addWithId:p];
}

- (void)addMeasurementWithOrgApacheCommonsMathEstimationWeightedMeasurement:(OrgApacheCommonsMathEstimationWeightedMeasurement *)m {
  [((id<JavaUtilList>) nil_chk(measurements_)) addWithId:m];
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SimpleEstimationProblem", NULL, 0x1, NULL, NULL },
    { "getAllParameters", NULL, "[Lorg.apache.commons.math.estimation.EstimatedParameter;", 0x1, NULL, NULL },
    { "getUnboundParameters", NULL, "[Lorg.apache.commons.math.estimation.EstimatedParameter;", 0x1, NULL, NULL },
    { "getMeasurements", NULL, "[Lorg.apache.commons.math.estimation.WeightedMeasurement;", 0x1, NULL, NULL },
    { "addParameterWithOrgApacheCommonsMathEstimationEstimatedParameter:", "addParameter", "V", 0x4, NULL, NULL },
    { "addMeasurementWithOrgApacheCommonsMathEstimationWeightedMeasurement:", "addMeasurement", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parameters_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/commons/math/estimation/EstimatedParameter;>;",  },
    { "measurements_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/commons/math/estimation/WeightedMeasurement;>;",  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathEstimationSimpleEstimationProblem = { 2, "SimpleEstimationProblem", "org.apache.commons.math.estimation", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathEstimationSimpleEstimationProblem;
}

@end

void OrgApacheCommonsMathEstimationSimpleEstimationProblem_init(OrgApacheCommonsMathEstimationSimpleEstimationProblem *self) {
  (void) NSObject_init(self);
  self->parameters_ = new_JavaUtilArrayList_init();
  self->measurements_ = new_JavaUtilArrayList_init();
}

OrgApacheCommonsMathEstimationSimpleEstimationProblem *new_OrgApacheCommonsMathEstimationSimpleEstimationProblem_init() {
  OrgApacheCommonsMathEstimationSimpleEstimationProblem *self = [OrgApacheCommonsMathEstimationSimpleEstimationProblem alloc];
  OrgApacheCommonsMathEstimationSimpleEstimationProblem_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathEstimationSimpleEstimationProblem)
