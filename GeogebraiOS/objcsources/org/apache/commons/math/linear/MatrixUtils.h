//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/linear/MatrixUtils.java
//

#ifndef _OrgApacheCommonsMathLinearMatrixUtils_H_
#define _OrgApacheCommonsMathLinearMatrixUtils_H_

#include "J2ObjC_header.h"

@class IOSDoubleArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@class OrgApacheCommonsMathLinearArray2DRowRealMatrix;
@protocol OrgApacheCommonsMathField;
@protocol OrgApacheCommonsMathLinearAnyMatrix;
@protocol OrgApacheCommonsMathLinearBigMatrix;
@protocol OrgApacheCommonsMathLinearFieldMatrix;
@protocol OrgApacheCommonsMathLinearFieldVector;
@protocol OrgApacheCommonsMathLinearRealMatrix;
@protocol OrgApacheCommonsMathLinearRealVector;

@interface OrgApacheCommonsMathLinearMatrixUtils : NSObject

#pragma mark Public

+ (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix:(id<OrgApacheCommonsMathLinearFieldMatrix>)m;

+ (void)checkAdditionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)left
                               withOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)right;

+ (void)checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                        withInt:(jint)column;

+ (void)checkMultiplicationCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)left
                                     withOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)right;

+ (void)checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                     withInt:(jint)row;

+ (void)checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                           withInt:(jint)startRow
                                                           withInt:(jint)endRow
                                                           withInt:(jint)startColumn
                                                           withInt:(jint)endColumn;

+ (void)checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                      withIntArray:(IOSIntArray *)selectedRows
                                                      withIntArray:(IOSIntArray *)selectedColumns;

+ (void)checkSubtractionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)left
                                  withOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)right;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigIdentityMatrixWithInt:(jint)dimension;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithJavaMathBigDecimalArray2:(IOSObjectArray *)data;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithJavaMathBigDecimalArray2:(IOSObjectArray *)data
                                                                           withBoolean:(jboolean)copyArray;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithDoubleArray2:(IOSObjectArray *)data;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithNSStringArray2:(IOSObjectArray *)data;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createColumnBigMatrixWithJavaMathBigDecimalArray:(IOSObjectArray *)columnData;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createColumnBigMatrixWithDoubleArray:(IOSDoubleArray *)columnData;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createColumnBigMatrixWithNSStringArray:(IOSObjectArray *)columnData;

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createColumnFieldMatrixWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)columnData;

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createColumnRealMatrixWithDoubleArray:(IOSDoubleArray *)columnData;

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldDiagonalMatrixWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)diagonal;

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldIdentityMatrixWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field
                                                                                            withInt:(jint)dimension;

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldMatrixWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field
                                                                                    withInt:(jint)rows
                                                                                    withInt:(jint)columns;

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldMatrixWithOrgApacheCommonsMathFieldElementArray2:(IOSObjectArray *)data;

+ (id<OrgApacheCommonsMathLinearFieldVector>)createFieldVectorWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)data;

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealDiagonalMatrixWithDoubleArray:(IOSDoubleArray *)diagonal;

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealIdentityMatrixWithInt:(jint)dimension;

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealMatrixWithDoubleArray2:(IOSObjectArray *)data;

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealMatrixWithInt:(jint)rows
                                                            withInt:(jint)columns;

+ (id<OrgApacheCommonsMathLinearRealVector>)createRealVectorWithDoubleArray:(IOSDoubleArray *)data;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createRowBigMatrixWithJavaMathBigDecimalArray:(IOSObjectArray *)rowData;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createRowBigMatrixWithDoubleArray:(IOSDoubleArray *)rowData;

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createRowBigMatrixWithNSStringArray:(IOSObjectArray *)rowData;

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createRowFieldMatrixWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)rowData;

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRowRealMatrixWithDoubleArray:(IOSDoubleArray *)rowData;

+ (void)deserializeRealMatrixWithId:(id)instance
                       withNSString:(NSString *)fieldName
        withJavaIoObjectInputStream:(JavaIoObjectInputStream *)ois;

+ (void)deserializeRealVectorWithId:(id)instance
                       withNSString:(NSString *)fieldName
        withJavaIoObjectInputStream:(JavaIoObjectInputStream *)ois;

+ (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)fractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix:(id<OrgApacheCommonsMathLinearFieldMatrix>)m;

+ (void)serializeRealMatrixWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix
                                       withJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos;

+ (void)serializeRealVectorWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)vector
                                       withJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearMatrixUtils)

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(jint rows, jint columns);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathField_withInt_withInt_(id<OrgApacheCommonsMathField> field, jint rows, jint columns);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithDoubleArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathFieldElementArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealIdentityMatrixWithInt_(jint dimension);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldIdentityMatrixWithOrgApacheCommonsMathField_withInt_(id<OrgApacheCommonsMathField> field, jint dimension);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigIdentityMatrixWithInt_(jint dimension);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealDiagonalMatrixWithDoubleArray_(IOSDoubleArray *diagonal);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldDiagonalMatrixWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *diagonal);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithDoubleArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithJavaMathBigDecimalArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithJavaMathBigDecimalArray2_withBoolean_(IOSObjectArray *data, jboolean copyArray);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithNSStringArray2_(IOSObjectArray *data);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearRealVector> OrgApacheCommonsMathLinearMatrixUtils_createRealVectorWithDoubleArray_(IOSDoubleArray *data);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearFieldVector> OrgApacheCommonsMathLinearMatrixUtils_createFieldVectorWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *data);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowRealMatrixWithDoubleArray_(IOSDoubleArray *rowData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowFieldMatrixWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *rowData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithDoubleArray_(IOSDoubleArray *rowData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithJavaMathBigDecimalArray_(IOSObjectArray *rowData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithNSStringArray_(IOSObjectArray *rowData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnRealMatrixWithDoubleArray_(IOSDoubleArray *columnData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnFieldMatrixWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *columnData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithDoubleArray_(IOSDoubleArray *columnData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithJavaMathBigDecimalArray_(IOSObjectArray *columnData);

FOUNDATION_EXPORT id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithNSStringArray_(IOSObjectArray *columnData);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(id<OrgApacheCommonsMathLinearAnyMatrix> m, jint row);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(id<OrgApacheCommonsMathLinearAnyMatrix> m, jint column);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_withInt_withInt_withInt_(id<OrgApacheCommonsMathLinearAnyMatrix> m, jint startRow, jint endRow, jint startColumn, jint endColumn);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix_withIntArray_withIntArray_(id<OrgApacheCommonsMathLinearAnyMatrix> m, IOSIntArray *selectedRows, IOSIntArray *selectedColumns);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_checkAdditionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(id<OrgApacheCommonsMathLinearAnyMatrix> left, id<OrgApacheCommonsMathLinearAnyMatrix> right);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_checkSubtractionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(id<OrgApacheCommonsMathLinearAnyMatrix> left, id<OrgApacheCommonsMathLinearAnyMatrix> right);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_checkMultiplicationCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(id<OrgApacheCommonsMathLinearAnyMatrix> left, id<OrgApacheCommonsMathLinearAnyMatrix> right);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearArray2DRowRealMatrix *OrgApacheCommonsMathLinearMatrixUtils_fractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(id<OrgApacheCommonsMathLinearFieldMatrix> m);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearArray2DRowRealMatrix *OrgApacheCommonsMathLinearMatrixUtils_bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(id<OrgApacheCommonsMathLinearFieldMatrix> m);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_serializeRealVectorWithOrgApacheCommonsMathLinearRealVector_withJavaIoObjectOutputStream_(id<OrgApacheCommonsMathLinearRealVector> vector, JavaIoObjectOutputStream *oos);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_deserializeRealVectorWithId_withNSString_withJavaIoObjectInputStream_(id instance, NSString *fieldName, JavaIoObjectInputStream *ois);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_serializeRealMatrixWithOrgApacheCommonsMathLinearRealMatrix_withJavaIoObjectOutputStream_(id<OrgApacheCommonsMathLinearRealMatrix> matrix, JavaIoObjectOutputStream *oos);

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearMatrixUtils_deserializeRealMatrixWithId_withNSString_withJavaIoObjectInputStream_(id instance, NSString *fieldName, JavaIoObjectInputStream *ois);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearMatrixUtils)

#endif // _OrgApacheCommonsMathLinearMatrixUtils_H_
