//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/linear/BigMatrix.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigDecimal.h"
#include "org/apache/commons/math/linear/BigMatrix.h"
#include "org/apache/commons/math/linear/InvalidMatrixException.h"
#include "org/apache/commons/math/linear/MatrixIndexException.h"

@interface OrgApacheCommonsMathLinearBigMatrix : NSObject
@end

@implementation OrgApacheCommonsMathLinearBigMatrix

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "copy__", "copy", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, NULL, NULL },
    { "addWithOrgApacheCommonsMathLinearBigMatrix:", "add", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "subtractWithOrgApacheCommonsMathLinearBigMatrix:", "subtract", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "scalarAddWithJavaMathBigDecimal:", "scalarAdd", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, NULL, NULL },
    { "scalarMultiplyWithJavaMathBigDecimal:", "scalarMultiply", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, NULL, NULL },
    { "multiplyWithOrgApacheCommonsMathLinearBigMatrix:", "multiply", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "preMultiplyWithOrgApacheCommonsMathLinearBigMatrix:", "preMultiply", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "getData", NULL, "[[Ljava.math.BigDecimal;", 0x401, NULL, NULL },
    { "getDataAsDoubleArray", NULL, "[[D", 0x401, NULL, NULL },
    { "getRoundingMode", NULL, "I", 0x401, NULL, NULL },
    { "getNorm", NULL, "Ljava.math.BigDecimal;", 0x401, NULL, NULL },
    { "getSubMatrixWithInt:withInt:withInt:withInt:", "getSubMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getSubMatrixWithIntArray:withIntArray:", "getSubMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getRowMatrixWithInt:", "getRowMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getColumnMatrixWithInt:", "getColumnMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getRowWithInt:", "getRow", "[Ljava.math.BigDecimal;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getRowAsDoubleArrayWithInt:", "getRowAsDoubleArray", "[D", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getColumnWithInt:", "getColumn", "[Ljava.math.BigDecimal;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getColumnAsDoubleArrayWithInt:", "getColumnAsDoubleArray", "[D", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getEntryWithInt:withInt:", "getEntry", "Ljava.math.BigDecimal;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getEntryAsDoubleWithInt:withInt:", "getEntryAsDouble", "D", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "transpose", NULL, "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, NULL, NULL },
    { "inverse", NULL, "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getDeterminant", NULL, "Ljava.math.BigDecimal;", 0x401, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getTrace", NULL, "Ljava.math.BigDecimal;", 0x401, NULL, NULL },
    { "operateWithJavaMathBigDecimalArray:", "operate", "[Ljava.math.BigDecimal;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "preMultiplyWithJavaMathBigDecimalArray:", "preMultiply", "[Ljava.math.BigDecimal;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "solveWithJavaMathBigDecimalArray:", "solve", "[Ljava.math.BigDecimal;", 0x401, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "solveWithOrgApacheCommonsMathLinearBigMatrix:", "solve", "Lorg.apache.commons.math.linear.BigMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearBigMatrix = { 2, "BigMatrix", "org.apache.commons.math.linear", NULL, 0x609, 29, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathLinearBigMatrix;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearBigMatrix)
