//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/linear/EigenDecompositionImpl.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/MaxIterationsExceededException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/linear/AbstractRealVector.h"
#include "org/apache/commons/math/linear/ArrayRealVector.h"
#include "org/apache/commons/math/linear/DecompositionSolver.h"
#include "org/apache/commons/math/linear/EigenDecompositionImpl.h"
#include "org/apache/commons/math/linear/InvalidMatrixException.h"
#include "org/apache/commons/math/linear/MatrixUtils.h"
#include "org/apache/commons/math/linear/RealMatrix.h"
#include "org/apache/commons/math/linear/RealVector.h"
#include "org/apache/commons/math/linear/SingularMatrixException.h"
#include "org/apache/commons/math/linear/TriDiagonalTransformer.h"
#include "org/apache/commons/math/util/FastMath.h"
#include "org/apache/commons/math/util/MathUtils.h"

@interface OrgApacheCommonsMathLinearEigenDecompositionImpl () {
 @public
  jbyte maxIter_;
  IOSDoubleArray *main_;
  IOSDoubleArray *secondary_;
  OrgApacheCommonsMathLinearTriDiagonalTransformer *transformer_;
  IOSDoubleArray *realEigenvalues_;
  IOSDoubleArray *imagEigenvalues_;
  IOSObjectArray *eigenvectors_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedV_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedD_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedVt_;
}

- (jboolean)isSymmetricWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix;

- (void)transformToTridiagonalWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix;

- (void)findEigenVectorsWithDoubleArray2:(IOSObjectArray *)householderMatrix;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, main_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, secondary_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, transformer_, OrgApacheCommonsMathLinearTriDiagonalTransformer *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, realEigenvalues_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, imagEigenvalues_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, eigenvectors_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, cachedV_, id<OrgApacheCommonsMathLinearRealMatrix>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, cachedD_, id<OrgApacheCommonsMathLinearRealMatrix>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl, cachedVt_, id<OrgApacheCommonsMathLinearRealMatrix>)

__attribute__((unused)) static jboolean OrgApacheCommonsMathLinearEigenDecompositionImpl_isSymmetricWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix);

__attribute__((unused)) static void OrgApacheCommonsMathLinearEigenDecompositionImpl_transformToTridiagonalWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix);

__attribute__((unused)) static void OrgApacheCommonsMathLinearEigenDecompositionImpl_findEigenVectorsWithDoubleArray2_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, IOSObjectArray *householderMatrix);

@interface OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver : NSObject < OrgApacheCommonsMathLinearDecompositionSolver > {
 @public
  IOSDoubleArray *realEigenvalues_;
  IOSDoubleArray *imagEigenvalues_;
  IOSObjectArray *eigenvectors_;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)realEigenvalues
                    withDoubleArray:(IOSDoubleArray *)imagEigenvalues
withOrgApacheCommonsMathLinearArrayRealVectorArray:(IOSObjectArray *)eigenvectors;

- (IOSDoubleArray *)solveWithDoubleArray:(IOSDoubleArray *)b;

- (id<OrgApacheCommonsMathLinearRealVector>)solveWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)b;

- (id<OrgApacheCommonsMathLinearRealMatrix>)solveWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)b;

- (jboolean)isNonSingular;

- (id<OrgApacheCommonsMathLinearRealMatrix>)getInverse;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver, realEigenvalues_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver, imagEigenvalues_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver, eigenvectors_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_initWithDoubleArray_withDoubleArray_withOrgApacheCommonsMathLinearArrayRealVectorArray_(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver *self, IOSDoubleArray *realEigenvalues, IOSDoubleArray *imagEigenvalues, IOSObjectArray *eigenvectors);

__attribute__((unused)) static OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver *new_OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_initWithDoubleArray_withDoubleArray_withOrgApacheCommonsMathLinearArrayRealVectorArray_(IOSDoubleArray *realEigenvalues, IOSDoubleArray *imagEigenvalues, IOSObjectArray *eigenvectors) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver)

@implementation OrgApacheCommonsMathLinearEigenDecompositionImpl

- (instancetype)initWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix
                                                  withDouble:(jdouble)splitTolerance {
  OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_(self, matrix, splitTolerance);
  return self;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)main
                    withDoubleArray:(IOSDoubleArray *)secondary
                         withDouble:(jdouble)splitTolerance {
  OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithDoubleArray_withDoubleArray_withDouble_(self, main, secondary, splitTolerance);
  return self;
}

- (jboolean)isSymmetricWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  return OrgApacheCommonsMathLinearEigenDecompositionImpl_isSymmetricWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getV {
  if (cachedV_ == nil) {
    jint m = ((IOSObjectArray *) nil_chk(eigenvectors_))->size_;
    OrgApacheCommonsMathLinearEigenDecompositionImpl_set_cachedV_(self, OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(m, m));
    for (jint k = 0; k < m; ++k) {
      [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(cachedV_)) setColumnVectorWithInt:k withOrgApacheCommonsMathLinearRealVector:IOSObjectArray_Get(eigenvectors_, k)];
    }
  }
  return cachedV_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getD {
  if (cachedD_ == nil) {
    OrgApacheCommonsMathLinearEigenDecompositionImpl_set_cachedD_(self, OrgApacheCommonsMathLinearMatrixUtils_createRealDiagonalMatrixWithDoubleArray_(realEigenvalues_));
  }
  return cachedD_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getVT {
  if (cachedVt_ == nil) {
    jint m = ((IOSObjectArray *) nil_chk(eigenvectors_))->size_;
    OrgApacheCommonsMathLinearEigenDecompositionImpl_set_cachedVt_(self, OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(m, m));
    for (jint k = 0; k < m; ++k) {
      [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(cachedVt_)) setRowVectorWithInt:k withOrgApacheCommonsMathLinearRealVector:IOSObjectArray_Get(eigenvectors_, k)];
    }
  }
  return cachedVt_;
}

- (IOSDoubleArray *)getRealEigenvalues {
  return [((IOSDoubleArray *) nil_chk(realEigenvalues_)) clone];
}

- (jdouble)getRealEigenvalueWithInt:(jint)i {
  return IOSDoubleArray_Get(nil_chk(realEigenvalues_), i);
}

- (IOSDoubleArray *)getImagEigenvalues {
  return [((IOSDoubleArray *) nil_chk(imagEigenvalues_)) clone];
}

- (jdouble)getImagEigenvalueWithInt:(jint)i {
  return IOSDoubleArray_Get(nil_chk(imagEigenvalues_), i);
}

- (id<OrgApacheCommonsMathLinearRealVector>)getEigenvectorWithInt:(jint)i {
  return [((OrgApacheCommonsMathLinearArrayRealVector *) nil_chk(IOSObjectArray_Get(nil_chk(eigenvectors_), i))) copy__];
}

- (jdouble)getDeterminant {
  jdouble determinant = 1;
  {
    IOSDoubleArray *a__ = realEigenvalues_;
    jdouble const *b__ = ((IOSDoubleArray *) nil_chk(a__))->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble lambda = *b__++;
      determinant *= lambda;
    }
  }
  return determinant;
}

- (id<OrgApacheCommonsMathLinearDecompositionSolver>)getSolver {
  return [new_OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_initWithDoubleArray_withDoubleArray_withOrgApacheCommonsMathLinearArrayRealVectorArray_(realEigenvalues_, imagEigenvalues_, eigenvectors_) autorelease];
}

- (void)transformToTridiagonalWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  OrgApacheCommonsMathLinearEigenDecompositionImpl_transformToTridiagonalWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
}

- (void)findEigenVectorsWithDoubleArray2:(IOSObjectArray *)householderMatrix {
  OrgApacheCommonsMathLinearEigenDecompositionImpl_findEigenVectorsWithDoubleArray2_(self, householderMatrix);
}

- (void)dealloc {
  RELEASE_(main_);
  RELEASE_(secondary_);
  RELEASE_(transformer_);
  RELEASE_(realEigenvalues_);
  RELEASE_(imagEigenvalues_);
  RELEASE_(eigenvectors_);
  RELEASE_(cachedV_);
  RELEASE_(cachedD_);
  RELEASE_(cachedVt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathLinearRealMatrix:withDouble:", "EigenDecompositionImpl", NULL, 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "initWithDoubleArray:withDoubleArray:withDouble:", "EigenDecompositionImpl", NULL, 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "isSymmetricWithOrgApacheCommonsMathLinearRealMatrix:", "isSymmetric", "Z", 0x2, NULL, NULL },
    { "getV", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getD", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getVT", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getRealEigenvalues", NULL, "[D", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getRealEigenvalueWithInt:", "getRealEigenvalue", "D", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;Ljava.lang.ArrayIndexOutOfBoundsException;", NULL },
    { "getImagEigenvalues", NULL, "[D", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getImagEigenvalueWithInt:", "getImagEigenvalue", "D", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;Ljava.lang.ArrayIndexOutOfBoundsException;", NULL },
    { "getEigenvectorWithInt:", "getEigenvector", "Lorg.apache.commons.math.linear.RealVector;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;Ljava.lang.ArrayIndexOutOfBoundsException;", NULL },
    { "getDeterminant", NULL, "D", 0x1, NULL, NULL },
    { "getSolver", NULL, "Lorg.apache.commons.math.linear.DecompositionSolver;", 0x1, NULL, NULL },
    { "transformToTridiagonalWithOrgApacheCommonsMathLinearRealMatrix:", "transformToTridiagonal", "V", 0x2, NULL, NULL },
    { "findEigenVectorsWithDoubleArray2:", "findEigenVectors", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxIter_", NULL, 0x2, "B", NULL, NULL,  },
    { "main_", NULL, 0x2, "[D", NULL, NULL,  },
    { "secondary_", NULL, 0x2, "[D", NULL, NULL,  },
    { "transformer_", NULL, 0x2, "Lorg.apache.commons.math.linear.TriDiagonalTransformer;", NULL, NULL,  },
    { "realEigenvalues_", NULL, 0x2, "[D", NULL, NULL,  },
    { "imagEigenvalues_", NULL, 0x2, "[D", NULL, NULL,  },
    { "eigenvectors_", NULL, 0x2, "[Lorg.apache.commons.math.linear.ArrayRealVector;", NULL, NULL,  },
    { "cachedV_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "cachedD_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "cachedVt_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.math.linear.EigenDecompositionImpl$Solver;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearEigenDecompositionImpl = { 2, "EigenDecompositionImpl", "org.apache.commons.math.linear", NULL, 0x1, 15, methods, 10, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheCommonsMathLinearEigenDecompositionImpl;
}

@end

void OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix, jdouble splitTolerance) {
  NSObject_init(self);
  self->maxIter_ = 30;
  if (OrgApacheCommonsMathLinearEigenDecompositionImpl_isSymmetricWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix)) {
    OrgApacheCommonsMathLinearEigenDecompositionImpl_transformToTridiagonalWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
    OrgApacheCommonsMathLinearEigenDecompositionImpl_findEigenVectorsWithDoubleArray2_(self, [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk([((OrgApacheCommonsMathLinearTriDiagonalTransformer *) nil_chk(self->transformer_)) getQ])) getData]);
  }
  else {
    @throw [new_OrgApacheCommonsMathLinearInvalidMatrixException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ASSYMETRIC_EIGEN_NOT_SUPPORTED(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]) autorelease];
  }
}

OrgApacheCommonsMathLinearEigenDecompositionImpl *new_OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_(id<OrgApacheCommonsMathLinearRealMatrix> matrix, jdouble splitTolerance) {
  OrgApacheCommonsMathLinearEigenDecompositionImpl *self = [OrgApacheCommonsMathLinearEigenDecompositionImpl alloc];
  OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_(self, matrix, splitTolerance);
  return self;
}

void OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithDoubleArray_withDoubleArray_withDouble_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, IOSDoubleArray *main, IOSDoubleArray *secondary, jdouble splitTolerance) {
  NSObject_init(self);
  self->maxIter_ = 30;
  OrgApacheCommonsMathLinearEigenDecompositionImpl_set_main_(self, [((IOSDoubleArray *) nil_chk(main)) clone]);
  OrgApacheCommonsMathLinearEigenDecompositionImpl_set_secondary_(self, [((IOSDoubleArray *) nil_chk(secondary)) clone]);
  OrgApacheCommonsMathLinearEigenDecompositionImpl_set_transformer_(self, nil);
  jint size = main->size_;
  IOSObjectArray *z = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ size, size }];
  for (jint i = 0; i < size; i++) {
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(z, i)), i) = 1.0;
  }
  OrgApacheCommonsMathLinearEigenDecompositionImpl_findEigenVectorsWithDoubleArray2_(self, z);
}

OrgApacheCommonsMathLinearEigenDecompositionImpl *new_OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithDoubleArray_withDoubleArray_withDouble_(IOSDoubleArray *main, IOSDoubleArray *secondary, jdouble splitTolerance) {
  OrgApacheCommonsMathLinearEigenDecompositionImpl *self = [OrgApacheCommonsMathLinearEigenDecompositionImpl alloc];
  OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithDoubleArray_withDoubleArray_withDouble_(self, main, secondary, splitTolerance);
  return self;
}

jboolean OrgApacheCommonsMathLinearEigenDecompositionImpl_isSymmetricWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  jint rows = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getRowDimension];
  jint columns = [matrix getColumnDimension];
  jdouble eps = 10 * rows * columns * OrgApacheCommonsMathUtilMathUtils_EPSILON;
  for (jint i = 0; i < rows; ++i) {
    for (jint j = i + 1; j < columns; ++j) {
      jdouble mij = [matrix getEntryWithInt:i withInt:j];
      jdouble mji = [matrix getEntryWithInt:j withInt:i];
      if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(mij - mji) > (OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(OrgApacheCommonsMathUtilFastMath_absWithDouble_(mij), OrgApacheCommonsMathUtilFastMath_absWithDouble_(mji)) * eps)) {
        return NO;
      }
    }
  }
  return YES;
}

void OrgApacheCommonsMathLinearEigenDecompositionImpl_transformToTridiagonalWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  OrgApacheCommonsMathLinearEigenDecompositionImpl_setAndConsume_transformer_(self, new_OrgApacheCommonsMathLinearTriDiagonalTransformer_initWithOrgApacheCommonsMathLinearRealMatrix_(matrix));
  OrgApacheCommonsMathLinearEigenDecompositionImpl_set_main_(self, [self->transformer_ getMainDiagonalRef]);
  OrgApacheCommonsMathLinearEigenDecompositionImpl_set_secondary_(self, [self->transformer_ getSecondaryDiagonalRef]);
}

void OrgApacheCommonsMathLinearEigenDecompositionImpl_findEigenVectorsWithDoubleArray2_(OrgApacheCommonsMathLinearEigenDecompositionImpl *self, IOSObjectArray *householderMatrix) {
  IOSObjectArray *z = [((IOSObjectArray *) nil_chk(householderMatrix)) clone];
  jint n = ((IOSDoubleArray *) nil_chk(self->main_))->size_;
  OrgApacheCommonsMathLinearEigenDecompositionImpl_setAndConsume_realEigenvalues_(self, [IOSDoubleArray newArrayWithLength:n]);
  OrgApacheCommonsMathLinearEigenDecompositionImpl_setAndConsume_imagEigenvalues_(self, [IOSDoubleArray newArrayWithLength:n]);
  IOSDoubleArray *e = [IOSDoubleArray arrayWithLength:n];
  for (jint i = 0; i < n - 1; i++) {
    *IOSDoubleArray_GetRef(self->realEigenvalues_, i) = IOSDoubleArray_Get(self->main_, i);
    *IOSDoubleArray_GetRef(e, i) = IOSDoubleArray_Get(nil_chk(self->secondary_), i);
  }
  *IOSDoubleArray_GetRef(self->realEigenvalues_, n - 1) = IOSDoubleArray_Get(self->main_, n - 1);
  *IOSDoubleArray_GetRef(e, n - 1) = 0.0;
  jdouble maxAbsoluteValue = 0.0;
  for (jint i = 0; i < n; i++) {
    if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, i)) > maxAbsoluteValue) {
      maxAbsoluteValue = OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, i));
    }
    if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(e, i)) > maxAbsoluteValue) {
      maxAbsoluteValue = OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(e, i));
    }
  }
  if (maxAbsoluteValue != 0.0) {
    for (jint i = 0; i < n; i++) {
      if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, i)) <= OrgApacheCommonsMathUtilMathUtils_EPSILON * maxAbsoluteValue) {
        *IOSDoubleArray_GetRef(self->realEigenvalues_, i) = 0.0;
      }
      if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(e, i)) <= OrgApacheCommonsMathUtilMathUtils_EPSILON * maxAbsoluteValue) {
        *IOSDoubleArray_GetRef(e, i) = 0.0;
      }
    }
  }
  for (jint j = 0; j < n; j++) {
    jint its = 0;
    jint m;
    do {
      for (m = j; m < n - 1; m++) {
        jdouble delta = OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, m)) + OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, m + 1));
        if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(e, m)) + delta == delta) {
          break;
        }
      }
      if (m != j) {
        if (its == self->maxIter_) @throw [new_OrgApacheCommonsMathLinearInvalidMatrixException_initWithJavaLangThrowable_([new_OrgApacheCommonsMathMaxIterationsExceededException_initWithInt_(self->maxIter_) autorelease]) autorelease];
        its++;
        jdouble q = (IOSDoubleArray_Get(self->realEigenvalues_, j + 1) - IOSDoubleArray_Get(self->realEigenvalues_, j)) / (2 * IOSDoubleArray_Get(e, j));
        jdouble t = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(1 + q * q);
        if (q < 0.0) {
          q = IOSDoubleArray_Get(self->realEigenvalues_, m) - IOSDoubleArray_Get(self->realEigenvalues_, j) + IOSDoubleArray_Get(e, j) / (q - t);
        }
        else {
          q = IOSDoubleArray_Get(self->realEigenvalues_, m) - IOSDoubleArray_Get(self->realEigenvalues_, j) + IOSDoubleArray_Get(e, j) / (q + t);
        }
        jdouble u = 0.0;
        jdouble s = 1.0;
        jdouble c = 1.0;
        jint i;
        for (i = m - 1; i >= j; i--) {
          jdouble p = s * IOSDoubleArray_Get(e, i);
          jdouble h = c * IOSDoubleArray_Get(e, i);
          if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(p) >= OrgApacheCommonsMathUtilFastMath_absWithDouble_(q)) {
            c = q / p;
            t = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(c * c + 1.0);
            *IOSDoubleArray_GetRef(e, i + 1) = p * t;
            s = 1.0 / t;
            c = c * s;
          }
          else {
            s = p / q;
            t = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(s * s + 1.0);
            *IOSDoubleArray_GetRef(e, i + 1) = q * t;
            c = 1.0 / t;
            s = s * c;
          }
          if (IOSDoubleArray_Get(e, i + 1) == 0.0) {
            *IOSDoubleArray_GetRef(self->realEigenvalues_, i + 1) -= u;
            *IOSDoubleArray_GetRef(e, m) = 0.0;
            break;
          }
          q = IOSDoubleArray_Get(self->realEigenvalues_, i + 1) - u;
          t = (IOSDoubleArray_Get(self->realEigenvalues_, i) - q) * s + 2.0 * c * h;
          u = s * t;
          *IOSDoubleArray_GetRef(self->realEigenvalues_, i + 1) = q + u;
          q = c * t - h;
          for (jint ia = 0; ia < n; ia++) {
            p = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(z), ia)), i + 1);
            *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(z, ia)), i + 1) = s * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(z, ia)), i) + c * p;
            *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(z, ia)), i) = c * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(z, ia)), i) - s * p;
          }
        }
        if (t == 0.0 && i >= j) continue;
        *IOSDoubleArray_GetRef(self->realEigenvalues_, j) -= u;
        *IOSDoubleArray_GetRef(e, j) = q;
        *IOSDoubleArray_GetRef(e, m) = 0.0;
      }
    }
    while (m != j);
  }
  for (jint i = 0; i < n; i++) {
    jint k = i;
    jdouble p = IOSDoubleArray_Get(self->realEigenvalues_, i);
    for (jint j = i + 1; j < n; j++) {
      if (IOSDoubleArray_Get(self->realEigenvalues_, j) > p) {
        k = j;
        p = IOSDoubleArray_Get(self->realEigenvalues_, j);
      }
    }
    if (k != i) {
      *IOSDoubleArray_GetRef(self->realEigenvalues_, k) = IOSDoubleArray_Get(self->realEigenvalues_, i);
      *IOSDoubleArray_GetRef(self->realEigenvalues_, i) = p;
      for (jint j = 0; j < n; j++) {
        p = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(z), j)), i);
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(z, j)), i) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(z, j)), k);
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(z, j)), k) = p;
      }
    }
  }
  maxAbsoluteValue = 0.0;
  for (jint i = 0; i < n; i++) {
    if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, i)) > maxAbsoluteValue) {
      maxAbsoluteValue = OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, i));
    }
  }
  if (maxAbsoluteValue != 0.0) {
    for (jint i = 0; i < n; i++) {
      if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->realEigenvalues_, i)) < OrgApacheCommonsMathUtilMathUtils_EPSILON * maxAbsoluteValue) {
        *IOSDoubleArray_GetRef(self->realEigenvalues_, i) = 0.0;
      }
    }
  }
  OrgApacheCommonsMathLinearEigenDecompositionImpl_setAndConsume_eigenvectors_(self, [IOSObjectArray newArrayWithLength:n type:OrgApacheCommonsMathLinearArrayRealVector_class_()]);
  IOSDoubleArray *tmp = [IOSDoubleArray arrayWithLength:n];
  for (jint i = 0; i < n; i++) {
    for (jint j = 0; j < n; j++) {
      *IOSDoubleArray_GetRef(tmp, j) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(z), j)), i);
    }
    IOSObjectArray_SetAndConsume(self->eigenvectors_, i, new_OrgApacheCommonsMathLinearArrayRealVector_initWithDoubleArray_(tmp));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearEigenDecompositionImpl)

@implementation OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)realEigenvalues
                    withDoubleArray:(IOSDoubleArray *)imagEigenvalues
withOrgApacheCommonsMathLinearArrayRealVectorArray:(IOSObjectArray *)eigenvectors {
  OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_initWithDoubleArray_withDoubleArray_withOrgApacheCommonsMathLinearArrayRealVectorArray_(self, realEigenvalues, imagEigenvalues, eigenvectors);
  return self;
}

- (IOSDoubleArray *)solveWithDoubleArray:(IOSDoubleArray *)b {
  if (![self isNonSingular]) {
    @throw [new_OrgApacheCommonsMathLinearSingularMatrixException_init() autorelease];
  }
  jint m = ((IOSDoubleArray *) nil_chk(realEigenvalues_))->size_;
  if (((IOSDoubleArray *) nil_chk(b))->size_ != m) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_VECTOR_LENGTH_MISMATCH(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(b->size_), JavaLangInteger_valueOfWithInt_(m) } count:2 type:NSObject_class_()]);
  }
  IOSDoubleArray *bp = [IOSDoubleArray arrayWithLength:m];
  for (jint i = 0; i < m; ++i) {
    OrgApacheCommonsMathLinearArrayRealVector *v = IOSObjectArray_Get(nil_chk(eigenvectors_), i);
    IOSDoubleArray *vData = [((OrgApacheCommonsMathLinearArrayRealVector *) nil_chk(v)) getDataRef];
    jdouble s = [v dotProductWithDoubleArray:b] / IOSDoubleArray_Get(realEigenvalues_, i);
    for (jint j = 0; j < m; ++j) {
      *IOSDoubleArray_GetRef(bp, j) += s * IOSDoubleArray_Get(nil_chk(vData), j);
    }
  }
  return bp;
}

- (id<OrgApacheCommonsMathLinearRealVector>)solveWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)b {
  if (![self isNonSingular]) {
    @throw [new_OrgApacheCommonsMathLinearSingularMatrixException_init() autorelease];
  }
  jint m = ((IOSDoubleArray *) nil_chk(realEigenvalues_))->size_;
  if ([((id<OrgApacheCommonsMathLinearRealVector>) nil_chk(b)) getDimension] != m) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_VECTOR_LENGTH_MISMATCH(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([b getDimension]), JavaLangInteger_valueOfWithInt_(m) } count:2 type:NSObject_class_()]);
  }
  IOSDoubleArray *bp = [IOSDoubleArray arrayWithLength:m];
  for (jint i = 0; i < m; ++i) {
    OrgApacheCommonsMathLinearArrayRealVector *v = IOSObjectArray_Get(nil_chk(eigenvectors_), i);
    IOSDoubleArray *vData = [((OrgApacheCommonsMathLinearArrayRealVector *) nil_chk(v)) getDataRef];
    jdouble s = [v dotProductWithOrgApacheCommonsMathLinearRealVector:b] / IOSDoubleArray_Get(realEigenvalues_, i);
    for (jint j = 0; j < m; ++j) {
      *IOSDoubleArray_GetRef(bp, j) += s * IOSDoubleArray_Get(nil_chk(vData), j);
    }
  }
  return [new_OrgApacheCommonsMathLinearArrayRealVector_initWithDoubleArray_withBoolean_(bp, NO) autorelease];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)solveWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)b {
  if (![self isNonSingular]) {
    @throw [new_OrgApacheCommonsMathLinearSingularMatrixException_init() autorelease];
  }
  jint m = ((IOSDoubleArray *) nil_chk(realEigenvalues_))->size_;
  if ([((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(b)) getRowDimension] != m) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_DIMENSIONS_MISMATCH_2x2(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([b getRowDimension]), JavaLangInteger_valueOfWithInt_([b getColumnDimension]), JavaLangInteger_valueOfWithInt_(m), @"n" } count:4 type:NSObject_class_()]);
  }
  jint nColB = [b getColumnDimension];
  IOSObjectArray *bp = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ m, nColB }];
  for (jint k = 0; k < nColB; ++k) {
    for (jint i = 0; i < m; ++i) {
      OrgApacheCommonsMathLinearArrayRealVector *v = IOSObjectArray_Get(nil_chk(eigenvectors_), i);
      IOSDoubleArray *vData = [((OrgApacheCommonsMathLinearArrayRealVector *) nil_chk(v)) getDataRef];
      jdouble s = 0;
      for (jint j = 0; j < m; ++j) {
        s += [v getEntryWithInt:j] * [b getEntryWithInt:j withInt:k];
      }
      s /= IOSDoubleArray_Get(realEigenvalues_, i);
      for (jint j = 0; j < m; ++j) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(bp, j)), k) += s * IOSDoubleArray_Get(nil_chk(vData), j);
      }
    }
  }
  return OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithDoubleArray2_(bp);
}

- (jboolean)isNonSingular {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(realEigenvalues_))->size_; ++i) {
    if ((IOSDoubleArray_Get(realEigenvalues_, i) == 0) && (IOSDoubleArray_Get(nil_chk(imagEigenvalues_), i) == 0)) {
      return NO;
    }
  }
  return YES;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getInverse {
  if (![self isNonSingular]) {
    @throw [new_OrgApacheCommonsMathLinearSingularMatrixException_init() autorelease];
  }
  jint m = ((IOSDoubleArray *) nil_chk(realEigenvalues_))->size_;
  IOSObjectArray *invData = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ m, m }];
  for (jint i = 0; i < m; ++i) {
    IOSDoubleArray *invI = IOSObjectArray_Get(invData, i);
    for (jint j = 0; j < m; ++j) {
      jdouble invIJ = 0;
      for (jint k = 0; k < m; ++k) {
        IOSDoubleArray *vK = [((OrgApacheCommonsMathLinearArrayRealVector *) nil_chk(IOSObjectArray_Get(nil_chk(eigenvectors_), k))) getDataRef];
        invIJ += IOSDoubleArray_Get(nil_chk(vK), i) * IOSDoubleArray_Get(vK, j) / IOSDoubleArray_Get(realEigenvalues_, k);
      }
      *IOSDoubleArray_GetRef(nil_chk(invI), j) = invIJ;
    }
  }
  return OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithDoubleArray2_(invData);
}

- (void)dealloc {
  RELEASE_(realEigenvalues_);
  RELEASE_(imagEigenvalues_);
  RELEASE_(eigenvectors_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDoubleArray:withDoubleArray:withOrgApacheCommonsMathLinearArrayRealVectorArray:", "Solver", NULL, 0x2, NULL, NULL },
    { "solveWithDoubleArray:", "solve", "[D", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "solveWithOrgApacheCommonsMathLinearRealVector:", "solve", "Lorg.apache.commons.math.linear.RealVector;", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "solveWithOrgApacheCommonsMathLinearRealMatrix:", "solve", "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "isNonSingular", NULL, "Z", 0x1, NULL, NULL },
    { "getInverse", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "realEigenvalues_", NULL, 0x2, "[D", NULL, NULL,  },
    { "imagEigenvalues_", NULL, 0x2, "[D", NULL, NULL,  },
    { "eigenvectors_", NULL, 0x12, "[Lorg.apache.commons.math.linear.ArrayRealVector;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver = { 2, "Solver", "org.apache.commons.math.linear", "EigenDecompositionImpl", 0xa, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver;
}

@end

void OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_initWithDoubleArray_withDoubleArray_withOrgApacheCommonsMathLinearArrayRealVectorArray_(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver *self, IOSDoubleArray *realEigenvalues, IOSDoubleArray *imagEigenvalues, IOSObjectArray *eigenvectors) {
  NSObject_init(self);
  OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_set_realEigenvalues_(self, realEigenvalues);
  OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_set_imagEigenvalues_(self, imagEigenvalues);
  OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_set_eigenvectors_(self, eigenvectors);
}

OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver *new_OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_initWithDoubleArray_withDoubleArray_withOrgApacheCommonsMathLinearArrayRealVectorArray_(IOSDoubleArray *realEigenvalues, IOSDoubleArray *imagEigenvalues, IOSObjectArray *eigenvectors) {
  OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver *self = [OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver alloc];
  OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver_initWithDoubleArray_withDoubleArray_withOrgApacheCommonsMathLinearArrayRealVectorArray_(self, realEigenvalues, imagEigenvalues, eigenvectors);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearEigenDecompositionImpl_Solver)
