//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/linear/FieldVector.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/math/Field.h"
#include "org/apache/commons/math/FieldElement.h"
#include "org/apache/commons/math/linear/FieldMatrix.h"
#include "org/apache/commons/math/linear/FieldVector.h"
#include "org/apache/commons/math/linear/MatrixIndexException.h"

@interface OrgApacheCommonsMathLinearFieldVector : NSObject
@end

@implementation OrgApacheCommonsMathLinearFieldVector

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getField", NULL, "Lorg.apache.commons.math.Field;", 0x401, NULL, NULL },
    { "copy__", "copy", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, NULL },
    { "addWithOrgApacheCommonsMathLinearFieldVector:", "add", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "addWithOrgApacheCommonsMathFieldElementArray:", "add", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "subtractWithOrgApacheCommonsMathLinearFieldVector:", "subtract", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "subtractWithOrgApacheCommonsMathFieldElementArray:", "subtract", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "mapAddWithOrgApacheCommonsMathFieldElement:", "mapAdd", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapAddToSelfWithOrgApacheCommonsMathFieldElement:", "mapAddToSelf", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapSubtractWithOrgApacheCommonsMathFieldElement:", "mapSubtract", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapSubtractToSelfWithOrgApacheCommonsMathFieldElement:", "mapSubtractToSelf", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapMultiplyWithOrgApacheCommonsMathFieldElement:", "mapMultiply", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapMultiplyToSelfWithOrgApacheCommonsMathFieldElement:", "mapMultiplyToSelf", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapDivideWithOrgApacheCommonsMathFieldElement:", "mapDivide", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapDivideToSelfWithOrgApacheCommonsMathFieldElement:", "mapDivideToSelf", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "mapInv", NULL, "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, NULL },
    { "mapInvToSelf", NULL, "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, NULL },
    { "ebeMultiplyWithOrgApacheCommonsMathLinearFieldVector:", "ebeMultiply", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "ebeMultiplyWithOrgApacheCommonsMathFieldElementArray:", "ebeMultiply", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "ebeDivideWithOrgApacheCommonsMathLinearFieldVector:", "ebeDivide", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "ebeDivideWithOrgApacheCommonsMathFieldElementArray:", "ebeDivide", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "getData", NULL, "[Lorg.apache.commons.math.FieldElement;", 0x401, NULL, NULL },
    { "dotProductWithOrgApacheCommonsMathLinearFieldVector:", "dotProduct", "TT;", 0x401, "Ljava.lang.IllegalArgumentException;", "(Lorg/apache/commons/math/linear/FieldVector<TT;>;)TT;" },
    { "dotProductWithOrgApacheCommonsMathFieldElementArray:", "dotProduct", "TT;", 0x401, "Ljava.lang.IllegalArgumentException;", "([TT;)TT;" },
    { "projectionWithOrgApacheCommonsMathLinearFieldVector:", "projection", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "projectionWithOrgApacheCommonsMathFieldElementArray:", "projection", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "outerProductWithOrgApacheCommonsMathLinearFieldVector:", "outerProduct", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "outerProductWithOrgApacheCommonsMathFieldElementArray:", "outerProduct", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "getEntryWithInt:", "getEntry", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", "(I)TT;" },
    { "setEntryWithInt:withOrgApacheCommonsMathFieldElement:", "setEntry", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", "(ITT;)V" },
    { "getDimension", NULL, "I", 0x401, NULL, NULL },
    { "appendWithOrgApacheCommonsMathLinearFieldVector:", "append", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, NULL },
    { "appendWithOrgApacheCommonsMathFieldElement:", "append", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "appendWithOrgApacheCommonsMathFieldElementArray:", "append", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, NULL, NULL },
    { "getSubVectorWithInt:withInt:", "getSubVector", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setSubVectorWithInt:withOrgApacheCommonsMathLinearFieldVector:", "setSubVector", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setSubVectorWithInt:withOrgApacheCommonsMathFieldElementArray:", "setSubVector", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setWithOrgApacheCommonsMathFieldElement:", "set", "V", 0x401, NULL, "(TT;)V" },
    { "toArray", NULL, "[Lorg.apache.commons.math.FieldElement;", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearFieldVector = { 2, "FieldVector", "org.apache.commons.math.linear", NULL, 0x609, 38, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>Ljava/lang/Object;" };
  return &_OrgApacheCommonsMathLinearFieldVector;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearFieldVector)
