//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/linear/SingularValueDecompositionImpl.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Math.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/linear/Array2DRowRealMatrix.h"
#include "org/apache/commons/math/linear/DecompositionSolver.h"
#include "org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.h"
#include "org/apache/commons/math/linear/EigenDecomposition.h"
#include "org/apache/commons/math/linear/EigenDecompositionImpl.h"
#include "org/apache/commons/math/linear/InvalidMatrixException.h"
#include "org/apache/commons/math/linear/MatrixUtils.h"
#include "org/apache/commons/math/linear/RealMatrix.h"
#include "org/apache/commons/math/linear/RealVector.h"
#include "org/apache/commons/math/linear/SingularValueDecompositionImpl.h"
#include "org/apache/commons/math/util/FastMath.h"

@interface OrgApacheCommonsMathLinearSingularValueDecompositionImpl () {
 @public
  jint m_;
  jint n_;
  id<OrgApacheCommonsMathLinearEigenDecomposition> eigenDecomposition_;
  IOSDoubleArray *singularValues_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedU_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedUt_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedS_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedV_;
  id<OrgApacheCommonsMathLinearRealMatrix> cachedVt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl, eigenDecomposition_, id<OrgApacheCommonsMathLinearEigenDecomposition>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl, singularValues_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl, cachedU_, id<OrgApacheCommonsMathLinearRealMatrix>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl, cachedUt_, id<OrgApacheCommonsMathLinearRealMatrix>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl, cachedS_, id<OrgApacheCommonsMathLinearRealMatrix>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl, cachedV_, id<OrgApacheCommonsMathLinearRealMatrix>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl, cachedVt_, id<OrgApacheCommonsMathLinearRealMatrix>)

@interface OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver : NSObject < OrgApacheCommonsMathLinearDecompositionSolver > {
 @public
  id<OrgApacheCommonsMathLinearRealMatrix> pseudoInverse_;
  jboolean nonSingular_;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)singularValues
withOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)uT
withOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)v
                        withBoolean:(jboolean)nonSingular;

- (IOSDoubleArray *)solveWithDoubleArray:(IOSDoubleArray *)b;

- (id<OrgApacheCommonsMathLinearRealVector>)solveWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)b;

- (id<OrgApacheCommonsMathLinearRealMatrix>)solveWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)b;

- (jboolean)isNonSingular;

- (id<OrgApacheCommonsMathLinearRealMatrix>)getInverse;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver, pseudoInverse_, id<OrgApacheCommonsMathLinearRealMatrix>)

__attribute__((unused)) static void OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_initWithDoubleArray_withOrgApacheCommonsMathLinearRealMatrix_withOrgApacheCommonsMathLinearRealMatrix_withBoolean_(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver *self, IOSDoubleArray *singularValues, id<OrgApacheCommonsMathLinearRealMatrix> uT, id<OrgApacheCommonsMathLinearRealMatrix> v, jboolean nonSingular);

__attribute__((unused)) static OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver *new_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_initWithDoubleArray_withOrgApacheCommonsMathLinearRealMatrix_withOrgApacheCommonsMathLinearRealMatrix_withBoolean_(IOSDoubleArray *singularValues, id<OrgApacheCommonsMathLinearRealMatrix> uT, id<OrgApacheCommonsMathLinearRealMatrix> v, jboolean nonSingular) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver)

@interface OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 : OrgApacheCommonsMathLinearDefaultRealMatrixPreservingVisitor {
 @public
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl *this$0_;
  IOSObjectArray *val$data_;
}

- (void)visitWithInt:(jint)row
             withInt:(jint)column
          withDouble:(jdouble)value;

- (instancetype)initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl:(OrgApacheCommonsMathLinearSingularValueDecompositionImpl *)outer$
                                                                withDoubleArray2:(IOSObjectArray *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1, this$0_, OrgApacheCommonsMathLinearSingularValueDecompositionImpl *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1, val$data_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl_withDoubleArray2_(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 *self, OrgApacheCommonsMathLinearSingularValueDecompositionImpl *outer$, IOSObjectArray *capture$0);

__attribute__((unused)) static OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 *new_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl_withDoubleArray2_(OrgApacheCommonsMathLinearSingularValueDecompositionImpl *outer$, IOSObjectArray *capture$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1)

@implementation OrgApacheCommonsMathLinearSingularValueDecompositionImpl

- (instancetype)initWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  return self;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getU {
  return cachedU_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getUT {
  if (cachedUt_ == nil) {
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedUt_(self, [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk([self getU])) transpose]);
  }
  return cachedUt_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getS {
  if (cachedS_ == nil) {
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedS_(self, OrgApacheCommonsMathLinearMatrixUtils_createRealDiagonalMatrixWithDoubleArray_(singularValues_));
  }
  return cachedS_;
}

- (IOSDoubleArray *)getSingularValues {
  return [((IOSDoubleArray *) nil_chk(singularValues_)) clone];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getV {
  return cachedV_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getVT {
  if (cachedVt_ == nil) {
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedVt_(self, [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk([self getV])) transpose]);
  }
  return cachedVt_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getCovarianceWithDouble:(jdouble)minSingularValue {
  jint p = ((IOSDoubleArray *) nil_chk(singularValues_))->size_;
  jint dimension = 0;
  while ((dimension < p) && (IOSDoubleArray_Get(singularValues_, dimension) >= minSingularValue)) {
    ++dimension;
  }
  if (dimension == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_TOO_LARGE_CUTOFF_SINGULAR_VALUE(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(minSingularValue), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(singularValues_, 0)) } count:2 type:NSObject_class_()]);
  }
  IOSObjectArray *data = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ dimension, p }];
  [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk([self getVT])) walkInOptimizedOrderWithOrgApacheCommonsMathLinearRealMatrixPreservingVisitor:[new_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl_withDoubleArray2_(self, data) autorelease] withInt:0 withInt:dimension - 1 withInt:0 withInt:p - 1];
  id<OrgApacheCommonsMathLinearRealMatrix> jv = [new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_withBoolean_(data, NO) autorelease];
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk([jv transpose])) multiplyWithOrgApacheCommonsMathLinearRealMatrix:jv];
}

- (jdouble)getNorm {
  return IOSDoubleArray_Get(nil_chk(singularValues_), 0);
}

- (jdouble)getConditionNumber {
  return IOSDoubleArray_Get(nil_chk(singularValues_), 0) / IOSDoubleArray_Get(singularValues_, singularValues_->size_ - 1);
}

- (jint)getRank {
  jdouble threshold = OrgApacheCommonsMathUtilFastMath_maxWithInt_withInt_(m_, n_) * OrgApacheCommonsMathUtilFastMath_ulpWithDouble_(IOSDoubleArray_Get(nil_chk(singularValues_), 0));
  for (jint i = singularValues_->size_ - 1; i >= 0; --i) {
    if (IOSDoubleArray_Get(singularValues_, i) > threshold) {
      return i + 1;
    }
  }
  return 0;
}

- (id<OrgApacheCommonsMathLinearDecompositionSolver>)getSolver {
  return [new_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_initWithDoubleArray_withOrgApacheCommonsMathLinearRealMatrix_withOrgApacheCommonsMathLinearRealMatrix_withBoolean_(singularValues_, [self getUT], [self getV], [self getRank] == JavaLangMath_maxWithInt_withInt_(m_, n_)) autorelease];
}

- (void)dealloc {
  RELEASE_(eigenDecomposition_);
  RELEASE_(singularValues_);
  RELEASE_(cachedU_);
  RELEASE_(cachedUt_);
  RELEASE_(cachedS_);
  RELEASE_(cachedV_);
  RELEASE_(cachedVt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathLinearRealMatrix:", "SingularValueDecompositionImpl", NULL, 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getU", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getUT", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getS", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getSingularValues", NULL, "[D", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getV", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getVT", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getCovarianceWithDouble:", "getCovariance", "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
    { "getNorm", NULL, "D", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getConditionNumber", NULL, "D", 0x1, "Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getRank", NULL, "I", 0x1, "Ljava.lang.IllegalStateException;", NULL },
    { "getSolver", NULL, "Lorg.apache.commons.math.linear.DecompositionSolver;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "m_", NULL, 0x2, "I", NULL, NULL,  },
    { "n_", NULL, 0x2, "I", NULL, NULL,  },
    { "eigenDecomposition_", NULL, 0x2, "Lorg.apache.commons.math.linear.EigenDecomposition;", NULL, NULL,  },
    { "singularValues_", NULL, 0x2, "[D", NULL, NULL,  },
    { "cachedU_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "cachedUt_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "cachedS_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "cachedV_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "cachedVt_", NULL, 0x2, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.math.linear.SingularValueDecompositionImpl$Solver;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearSingularValueDecompositionImpl = { 2, "SingularValueDecompositionImpl", "org.apache.commons.math.linear", NULL, 0x1, 12, methods, 9, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheCommonsMathLinearSingularValueDecompositionImpl;
}

@end

void OrgApacheCommonsMathLinearSingularValueDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathLinearSingularValueDecompositionImpl *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  NSObject_init(self);
  self->m_ = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getRowDimension];
  self->n_ = [matrix getColumnDimension];
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedU_(self, nil);
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedS_(self, nil);
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedV_(self, nil);
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedVt_(self, nil);
  IOSObjectArray *localcopy = [matrix getData];
  IOSObjectArray *matATA = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ self->n_, self->n_ }];
  for (jint i = 0; i < self->n_; i++) {
    for (jint j = i; j < self->n_; j++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(matATA, i)), j) = 0.0;
      for (jint k = 0; k < self->m_; k++) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(matATA, i)), j) += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(localcopy), k)), i) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(localcopy, k)), j);
      }
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(matATA, j)), i) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(matATA, i)), j);
    }
  }
  IOSObjectArray *matAAT = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ self->m_, self->m_ }];
  for (jint i = 0; i < self->m_; i++) {
    for (jint j = i; j < self->m_; j++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(matAAT, i)), j) = 0.0;
      for (jint k = 0; k < self->n_; k++) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(matAAT, i)), j) += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(localcopy), i)), k) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(localcopy, j)), k);
      }
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(matAAT, j)), i) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(matAAT, i)), j);
    }
  }
  jint p;
  if (self->m_ >= self->n_) {
    p = self->n_;
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_setAndConsume_eigenDecomposition_(self, new_OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_([new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_(matATA) autorelease], 1.0));
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_singularValues_(self, [self->eigenDecomposition_ getRealEigenvalues]);
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedV_(self, [self->eigenDecomposition_ getV]);
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_setAndConsume_eigenDecomposition_(self, new_OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_([new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_(matAAT) autorelease], 1.0));
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedU_(self, [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk([self->eigenDecomposition_ getV])) getSubMatrixWithInt:0 withInt:self->m_ - 1 withInt:0 withInt:p - 1]);
  }
  else {
    p = self->m_;
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_setAndConsume_eigenDecomposition_(self, new_OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_([new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_(matAAT) autorelease], 1.0));
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_singularValues_(self, [self->eigenDecomposition_ getRealEigenvalues]);
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedU_(self, [self->eigenDecomposition_ getV]);
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_setAndConsume_eigenDecomposition_(self, new_OrgApacheCommonsMathLinearEigenDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_withDouble_([new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_(matATA) autorelease], 1.0));
    OrgApacheCommonsMathLinearSingularValueDecompositionImpl_set_cachedV_(self, [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk([self->eigenDecomposition_ getV])) getSubMatrixWithInt:0 withInt:self->n_ - 1 withInt:0 withInt:p - 1]);
  }
  for (jint i = 0; i < p; i++) {
    *IOSDoubleArray_GetRef(nil_chk(self->singularValues_), i) = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(self->singularValues_, i)));
  }
  for (jint i = 0; i < p; i++) {
    id<OrgApacheCommonsMathLinearRealVector> tmp = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(self->cachedU_)) getColumnVectorWithInt:i];
    jdouble product = [((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([matrix operateWithOrgApacheCommonsMathLinearRealVector:[((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(self->cachedV_)) getColumnVectorWithInt:i]])) dotProductWithOrgApacheCommonsMathLinearRealVector:tmp];
    if (product < 0) {
      [self->cachedU_ setColumnVectorWithInt:i withOrgApacheCommonsMathLinearRealVector:[((id<OrgApacheCommonsMathLinearRealVector>) nil_chk(tmp)) mapMultiplyWithDouble:-1.0]];
    }
  }
}

OrgApacheCommonsMathLinearSingularValueDecompositionImpl *new_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_(id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl *self = [OrgApacheCommonsMathLinearSingularValueDecompositionImpl alloc];
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_initWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearSingularValueDecompositionImpl)

@implementation OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)singularValues
withOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)uT
withOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)v
                        withBoolean:(jboolean)nonSingular {
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_initWithDoubleArray_withOrgApacheCommonsMathLinearRealMatrix_withOrgApacheCommonsMathLinearRealMatrix_withBoolean_(self, singularValues, uT, v, nonSingular);
  return self;
}

- (IOSDoubleArray *)solveWithDoubleArray:(IOSDoubleArray *)b {
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(pseudoInverse_)) operateWithDoubleArray:b];
}

- (id<OrgApacheCommonsMathLinearRealVector>)solveWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)b {
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(pseudoInverse_)) operateWithOrgApacheCommonsMathLinearRealVector:b];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)solveWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)b {
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(pseudoInverse_)) multiplyWithOrgApacheCommonsMathLinearRealMatrix:b];
}

- (jboolean)isNonSingular {
  return nonSingular_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getInverse {
  return pseudoInverse_;
}

- (void)dealloc {
  RELEASE_(pseudoInverse_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDoubleArray:withOrgApacheCommonsMathLinearRealMatrix:withOrgApacheCommonsMathLinearRealMatrix:withBoolean:", "Solver", NULL, 0x2, NULL, NULL },
    { "solveWithDoubleArray:", "solve", "[D", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "solveWithOrgApacheCommonsMathLinearRealVector:", "solve", "Lorg.apache.commons.math.linear.RealVector;", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "solveWithOrgApacheCommonsMathLinearRealMatrix:", "solve", "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "isNonSingular", NULL, "Z", 0x1, NULL, NULL },
    { "getInverse", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pseudoInverse_", NULL, 0x12, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "nonSingular_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver = { 2, "Solver", "org.apache.commons.math.linear", "SingularValueDecompositionImpl", 0xa, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver;
}

@end

void OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_initWithDoubleArray_withOrgApacheCommonsMathLinearRealMatrix_withOrgApacheCommonsMathLinearRealMatrix_withBoolean_(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver *self, IOSDoubleArray *singularValues, id<OrgApacheCommonsMathLinearRealMatrix> uT, id<OrgApacheCommonsMathLinearRealMatrix> v, jboolean nonSingular) {
  NSObject_init(self);
  IOSObjectArray *suT = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(uT)) getData];
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(singularValues))->size_; ++i) {
    jdouble a;
    if (IOSDoubleArray_Get(singularValues, i) > 0) {
      a = 1.0 / IOSDoubleArray_Get(singularValues, i);
    }
    else {
      a = 0.0;
    }
    IOSDoubleArray *suTi = IOSObjectArray_Get(nil_chk(suT), i);
    for (jint j = 0; j < ((IOSDoubleArray *) nil_chk(suTi))->size_; ++j) {
      *IOSDoubleArray_GetRef(suTi, j) *= a;
    }
  }
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_set_pseudoInverse_(self, [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(v)) multiplyWithOrgApacheCommonsMathLinearRealMatrix:[new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_withBoolean_(suT, NO) autorelease]]);
  self->nonSingular_ = nonSingular;
}

OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver *new_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_initWithDoubleArray_withOrgApacheCommonsMathLinearRealMatrix_withOrgApacheCommonsMathLinearRealMatrix_withBoolean_(IOSDoubleArray *singularValues, id<OrgApacheCommonsMathLinearRealMatrix> uT, id<OrgApacheCommonsMathLinearRealMatrix> v, jboolean nonSingular) {
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver *self = [OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver alloc];
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver_initWithDoubleArray_withOrgApacheCommonsMathLinearRealMatrix_withOrgApacheCommonsMathLinearRealMatrix_withBoolean_(self, singularValues, uT, v, nonSingular);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_Solver)

@implementation OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1

- (void)visitWithInt:(jint)row
             withInt:(jint)column
          withDouble:(jdouble)value {
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(val$data_), row)), column) = value / IOSDoubleArray_Get(nil_chk(this$0_->singularValues_), row);
}

- (instancetype)initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl:(OrgApacheCommonsMathLinearSingularValueDecompositionImpl *)outer$
                                                                withDoubleArray2:(IOSObjectArray *)capture$0 {
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl_withDoubleArray2_(self, outer$, capture$0);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$data_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "visitWithInt:withInt:withDouble:", "visit", "V", 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl:withDoubleArray2:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.commons.math.linear.SingularValueDecompositionImpl;", NULL, NULL,  },
    { "val$data_", NULL, 0x1012, "[[D", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheCommonsMathLinearSingularValueDecompositionImpl", "getCovarianceWithDouble:" };
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 = { 2, "", "org.apache.commons.math.linear", "SingularValueDecompositionImpl", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1;
}

@end

void OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl_withDoubleArray2_(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 *self, OrgApacheCommonsMathLinearSingularValueDecompositionImpl *outer$, IOSObjectArray *capture$0) {
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_set_this$0_(self, outer$);
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_set_val$data_(self, capture$0);
  OrgApacheCommonsMathLinearDefaultRealMatrixPreservingVisitor_init(self);
}

OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 *new_OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl_withDoubleArray2_(OrgApacheCommonsMathLinearSingularValueDecompositionImpl *outer$, IOSObjectArray *capture$0) {
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 *self = [OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1 alloc];
  OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1_initWithOrgApacheCommonsMathLinearSingularValueDecompositionImpl_withDoubleArray2_(self, outer$, capture$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearSingularValueDecompositionImpl_$1)
