//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/linear/OpenMapRealVector.java
//

#ifndef _OrgApacheCommonsMathLinearOpenMapRealVector_H_
#define _OrgApacheCommonsMathLinearOpenMapRealVector_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/util/Iterator.h"
#include "org/apache/commons/math/linear/AbstractRealVector.h"
#include "org/apache/commons/math/linear/RealVector.h"
#include "org/apache/commons/math/linear/SparseRealVector.h"

@class IOSDoubleArray;
@class IOSObjectArray;
@class OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator;
@protocol OrgApacheCommonsMathLinearRealMatrix;

#define OrgApacheCommonsMathLinearOpenMapRealVector_DEFAULT_ZERO_TOLERANCE 1.0E-12

@interface OrgApacheCommonsMathLinearOpenMapRealVector : OrgApacheCommonsMathLinearAbstractRealVector < OrgApacheCommonsMathLinearSparseRealVector, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)values;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)values
                         withDouble:(jdouble)epsilon;

- (instancetype)initWithJavaLangDoubleArray:(IOSObjectArray *)values;

- (instancetype)initWithJavaLangDoubleArray:(IOSObjectArray *)values
                                 withDouble:(jdouble)epsilon;

- (instancetype)initWithInt:(jint)dimension;

- (instancetype)initWithInt:(jint)dimension
                 withDouble:(jdouble)epsilon;

- (instancetype)initWithInt:(jint)dimension
                    withInt:(jint)expectedSize;

- (instancetype)initWithInt:(jint)dimension
                    withInt:(jint)expectedSize
                 withDouble:(jdouble)epsilon;

- (instancetype)initWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v;

- (instancetype)initWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)addWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v;

- (id<OrgApacheCommonsMathLinearRealVector>)addWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)appendWithDouble:(jdouble)d;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)appendWithDoubleArray:(IOSDoubleArray *)a;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)appendWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)appendWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jdouble)dotProductWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v;

- (jdouble)dotProductWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)ebeDivideWithDoubleArray:(IOSDoubleArray *)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)ebeDivideWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)ebeMultiplyWithDoubleArray:(IOSDoubleArray *)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)ebeMultiplyWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (jboolean)isEqual:(id)obj;

- (IOSDoubleArray *)getData;

- (jint)getDimension;

- (jdouble)getDistanceWithDoubleArray:(IOSDoubleArray *)v;

- (jdouble)getDistanceWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v;

- (jdouble)getDistanceWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (jdouble)getEntryWithInt:(jint)index;

- (jdouble)getL1DistanceWithDoubleArray:(IOSDoubleArray *)v;

- (jdouble)getL1DistanceWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v;

- (jdouble)getL1DistanceWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (jdouble)getLInfDistanceWithDoubleArray:(IOSDoubleArray *)v;

- (jdouble)getLInfDistanceWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (jdouble)getSparcity;

- (jdouble)getSparsity;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)getSubVectorWithInt:(jint)index
                                                             withInt:(jint)n;

- (NSUInteger)hash;

- (jboolean)isInfinite;

- (jboolean)isNaN;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)mapAddWithDouble:(jdouble)d;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)mapAddToSelfWithDouble:(jdouble)d;

- (id<OrgApacheCommonsMathLinearRealMatrix>)outerProductWithDoubleArray:(IOSDoubleArray *)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)projectionWithDoubleArray:(IOSDoubleArray *)v;

- (id<OrgApacheCommonsMathLinearRealVector>)projectionWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (void)setWithDouble:(jdouble)value;

- (void)setEntryWithInt:(jint)index
             withDouble:(jdouble)value;

- (void)setSubVectorWithInt:(jint)index
            withDoubleArray:(IOSDoubleArray *)v;

- (void)setSubVectorWithInt:(jint)index
withOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (id<JavaUtilIterator>)sparseIterator;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)subtractWithDoubleArray:(IOSDoubleArray *)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)subtractWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)subtractWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)v;

- (IOSDoubleArray *)toArray;

- (void)unitize;

- (OrgApacheCommonsMathLinearOpenMapRealVector *)unitVector;

#pragma mark Protected

- (instancetype)initWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)v
                                                            withInt:(jint)resize;

- (jboolean)isDefaultValueWithDouble:(jdouble)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearOpenMapRealVector)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathLinearOpenMapRealVector, DEFAULT_ZERO_TOLERANCE, jdouble)

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_init(OrgApacheCommonsMathLinearOpenMapRealVector *self);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_(OrgApacheCommonsMathLinearOpenMapRealVector *self, jint dimension);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_(jint dimension) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_withDouble_(OrgApacheCommonsMathLinearOpenMapRealVector *self, jint dimension, jdouble epsilon);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_withDouble_(jint dimension, jdouble epsilon) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithOrgApacheCommonsMathLinearOpenMapRealVector_withInt_(OrgApacheCommonsMathLinearOpenMapRealVector *self, OrgApacheCommonsMathLinearOpenMapRealVector *v, jint resize);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithOrgApacheCommonsMathLinearOpenMapRealVector_withInt_(OrgApacheCommonsMathLinearOpenMapRealVector *v, jint resize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_withInt_(OrgApacheCommonsMathLinearOpenMapRealVector *self, jint dimension, jint expectedSize);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_withInt_(jint dimension, jint expectedSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_withInt_withDouble_(OrgApacheCommonsMathLinearOpenMapRealVector *self, jint dimension, jint expectedSize, jdouble epsilon);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithInt_withInt_withDouble_(jint dimension, jint expectedSize, jdouble epsilon) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithDoubleArray_(OrgApacheCommonsMathLinearOpenMapRealVector *self, IOSDoubleArray *values);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithDoubleArray_(IOSDoubleArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithDoubleArray_withDouble_(OrgApacheCommonsMathLinearOpenMapRealVector *self, IOSDoubleArray *values, jdouble epsilon);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithDoubleArray_withDouble_(IOSDoubleArray *values, jdouble epsilon) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithJavaLangDoubleArray_(OrgApacheCommonsMathLinearOpenMapRealVector *self, IOSObjectArray *values);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithJavaLangDoubleArray_(IOSObjectArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithJavaLangDoubleArray_withDouble_(OrgApacheCommonsMathLinearOpenMapRealVector *self, IOSObjectArray *values, jdouble epsilon);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithJavaLangDoubleArray_withDouble_(IOSObjectArray *values, jdouble epsilon) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithOrgApacheCommonsMathLinearOpenMapRealVector_(OrgApacheCommonsMathLinearOpenMapRealVector *self, OrgApacheCommonsMathLinearOpenMapRealVector *v);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithOrgApacheCommonsMathLinearOpenMapRealVector_(OrgApacheCommonsMathLinearOpenMapRealVector *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_initWithOrgApacheCommonsMathLinearRealVector_(OrgApacheCommonsMathLinearOpenMapRealVector *self, id<OrgApacheCommonsMathLinearRealVector> v);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector *new_OrgApacheCommonsMathLinearOpenMapRealVector_initWithOrgApacheCommonsMathLinearRealVector_(id<OrgApacheCommonsMathLinearRealVector> v) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearOpenMapRealVector)

@interface OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapEntry : OrgApacheCommonsMathLinearRealVector_Entry

#pragma mark Public

- (jint)getIndex;

- (jdouble)getValue;

- (void)setValueWithDouble:(jdouble)value;

#pragma mark Protected

- (instancetype)initWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)outer$
        withOrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator:(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator *)iter;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapEntry)

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapEntry_initWithOrgApacheCommonsMathLinearOpenMapRealVector_withOrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator_(OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapEntry *self, OrgApacheCommonsMathLinearOpenMapRealVector *outer$, OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator *iter);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapEntry *new_OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapEntry_initWithOrgApacheCommonsMathLinearOpenMapRealVector_withOrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator_(OrgApacheCommonsMathLinearOpenMapRealVector *outer$, OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator *iter) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapEntry)

@interface OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapSparseIterator : NSObject < JavaUtilIterator >

#pragma mark Public

- (jboolean)hasNext;

- (OrgApacheCommonsMathLinearRealVector_Entry *)next;

- (void)remove;

#pragma mark Protected

- (instancetype)initWithOrgApacheCommonsMathLinearOpenMapRealVector:(OrgApacheCommonsMathLinearOpenMapRealVector *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapSparseIterator)

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapSparseIterator_initWithOrgApacheCommonsMathLinearOpenMapRealVector_(OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapSparseIterator *self, OrgApacheCommonsMathLinearOpenMapRealVector *outer$);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapSparseIterator *new_OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapSparseIterator_initWithOrgApacheCommonsMathLinearOpenMapRealVector_(OrgApacheCommonsMathLinearOpenMapRealVector *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearOpenMapRealVector_OpenMapSparseIterator)

#endif // _OrgApacheCommonsMathLinearOpenMapRealVector_H_
