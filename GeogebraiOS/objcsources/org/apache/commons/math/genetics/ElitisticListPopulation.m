//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/genetics/ElitisticListPopulation.java
//


#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/apache/commons/math/genetics/Chromosome.h"
#include "org/apache/commons/math/genetics/ElitisticListPopulation.h"
#include "org/apache/commons/math/genetics/ListPopulation.h"
#include "org/apache/commons/math/genetics/Population.h"
#include "org/apache/commons/math/util/FastMath.h"

@interface OrgApacheCommonsMathGeneticsElitisticListPopulation () {
 @public
  jdouble elitismRate_;
}

@end

@implementation OrgApacheCommonsMathGeneticsElitisticListPopulation

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)chromosomes
                             withInt:(jint)populationLimit
                          withDouble:(jdouble)elitismRate {
  OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithJavaUtilList_withInt_withDouble_(self, chromosomes, populationLimit, elitismRate);
  return self;
}

- (instancetype)initWithInt:(jint)populationLimit
                 withDouble:(jdouble)elitismRate {
  OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithInt_withDouble_(self, populationLimit, elitismRate);
  return self;
}

- (id<OrgApacheCommonsMathGeneticsPopulation>)nextGeneration {
  OrgApacheCommonsMathGeneticsElitisticListPopulation *nextGeneration = new_OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithInt_withDouble_([self getPopulationLimit], [self getElitismRate]);
  id<JavaUtilList> oldChromosomes = [self getChromosomes];
  JavaUtilCollections_sortWithJavaUtilList_(oldChromosomes);
  jint boundIndex = J2ObjCFpToInt(OrgApacheCommonsMathUtilFastMath_ceilWithDouble_((1.0 - [self getElitismRate]) * [((id<JavaUtilList>) nil_chk(oldChromosomes)) size]));
  for (jint i = boundIndex; i < [oldChromosomes size]; i++) {
    [nextGeneration addChromosomeWithOrgApacheCommonsMathGeneticsChromosome:[oldChromosomes getWithInt:i]];
  }
  return nextGeneration;
}

- (void)setElitismRateWithDouble:(jdouble)elitismRate {
  if (elitismRate < 0 || elitismRate > 1) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Elitism rate has to be in [0,1]");
  self->elitismRate_ = elitismRate;
}

- (jdouble)getElitismRate {
  return self->elitismRate_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:withInt:withDouble:", "ElitisticListPopulation", NULL, 0x1, NULL, NULL },
    { "initWithInt:withDouble:", "ElitisticListPopulation", NULL, 0x1, NULL, NULL },
    { "nextGeneration", NULL, "Lorg.apache.commons.math.genetics.Population;", 0x1, NULL, NULL },
    { "setElitismRateWithDouble:", "setElitismRate", "V", 0x1, NULL, NULL },
    { "getElitismRate", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "elitismRate_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathGeneticsElitisticListPopulation = { 2, "ElitisticListPopulation", "org.apache.commons.math.genetics", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathGeneticsElitisticListPopulation;
}

@end

void OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithJavaUtilList_withInt_withDouble_(OrgApacheCommonsMathGeneticsElitisticListPopulation *self, id<JavaUtilList> chromosomes, jint populationLimit, jdouble elitismRate) {
  (void) OrgApacheCommonsMathGeneticsListPopulation_initWithJavaUtilList_withInt_(self, chromosomes, populationLimit);
  self->elitismRate_ = 0.9;
  self->elitismRate_ = elitismRate;
}

OrgApacheCommonsMathGeneticsElitisticListPopulation *new_OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithJavaUtilList_withInt_withDouble_(id<JavaUtilList> chromosomes, jint populationLimit, jdouble elitismRate) {
  OrgApacheCommonsMathGeneticsElitisticListPopulation *self = [OrgApacheCommonsMathGeneticsElitisticListPopulation alloc];
  OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithJavaUtilList_withInt_withDouble_(self, chromosomes, populationLimit, elitismRate);
  return self;
}

void OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithInt_withDouble_(OrgApacheCommonsMathGeneticsElitisticListPopulation *self, jint populationLimit, jdouble elitismRate) {
  (void) OrgApacheCommonsMathGeneticsListPopulation_initWithInt_(self, populationLimit);
  self->elitismRate_ = 0.9;
  self->elitismRate_ = elitismRate;
}

OrgApacheCommonsMathGeneticsElitisticListPopulation *new_OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithInt_withDouble_(jint populationLimit, jdouble elitismRate) {
  OrgApacheCommonsMathGeneticsElitisticListPopulation *self = [OrgApacheCommonsMathGeneticsElitisticListPopulation alloc];
  OrgApacheCommonsMathGeneticsElitisticListPopulation_initWithInt_withDouble_(self, populationLimit, elitismRate);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathGeneticsElitisticListPopulation)
