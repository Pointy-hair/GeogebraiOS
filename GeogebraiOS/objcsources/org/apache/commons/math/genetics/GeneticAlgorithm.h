//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/genetics/GeneticAlgorithm.java
//

#ifndef _OrgApacheCommonsMathGeneticsGeneticAlgorithm_H_
#define _OrgApacheCommonsMathGeneticsGeneticAlgorithm_H_

#include "J2ObjC_header.h"

@protocol OrgApacheCommonsMathGeneticsCrossoverPolicy;
@protocol OrgApacheCommonsMathGeneticsMutationPolicy;
@protocol OrgApacheCommonsMathGeneticsPopulation;
@protocol OrgApacheCommonsMathGeneticsSelectionPolicy;
@protocol OrgApacheCommonsMathGeneticsStoppingCondition;
@protocol OrgApacheCommonsMathRandomRandomGenerator;

@interface OrgApacheCommonsMathGeneticsGeneticAlgorithm : NSObject

#pragma mark Public

- (instancetype)initWithOrgApacheCommonsMathGeneticsCrossoverPolicy:(id<OrgApacheCommonsMathGeneticsCrossoverPolicy>)crossoverPolicy
                                                         withDouble:(jdouble)crossoverRate
                     withOrgApacheCommonsMathGeneticsMutationPolicy:(id<OrgApacheCommonsMathGeneticsMutationPolicy>)mutationPolicy
                                                         withDouble:(jdouble)mutationRate
                    withOrgApacheCommonsMathGeneticsSelectionPolicy:(id<OrgApacheCommonsMathGeneticsSelectionPolicy>)selectionPolicy;

- (id<OrgApacheCommonsMathGeneticsPopulation>)evolveWithOrgApacheCommonsMathGeneticsPopulation:(id<OrgApacheCommonsMathGeneticsPopulation>)initial
                                             withOrgApacheCommonsMathGeneticsStoppingCondition:(id<OrgApacheCommonsMathGeneticsStoppingCondition>)condition;

- (id<OrgApacheCommonsMathGeneticsCrossoverPolicy>)getCrossoverPolicy;

- (jdouble)getCrossoverRate;

- (jint)getGenerationsEvolved;

- (id<OrgApacheCommonsMathGeneticsMutationPolicy>)getMutationPolicy;

- (jdouble)getMutationRate;

+ (id<OrgApacheCommonsMathRandomRandomGenerator>)getRandomGenerator;

- (id<OrgApacheCommonsMathGeneticsSelectionPolicy>)getSelectionPolicy;

- (id<OrgApacheCommonsMathGeneticsPopulation>)nextGenerationWithOrgApacheCommonsMathGeneticsPopulation:(id<OrgApacheCommonsMathGeneticsPopulation>)current;

+ (void)setRandomGeneratorWithOrgApacheCommonsMathRandomRandomGenerator:(id<OrgApacheCommonsMathRandomRandomGenerator>)random;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsMathGeneticsGeneticAlgorithm)

FOUNDATION_EXPORT void OrgApacheCommonsMathGeneticsGeneticAlgorithm_initWithOrgApacheCommonsMathGeneticsCrossoverPolicy_withDouble_withOrgApacheCommonsMathGeneticsMutationPolicy_withDouble_withOrgApacheCommonsMathGeneticsSelectionPolicy_(OrgApacheCommonsMathGeneticsGeneticAlgorithm *self, id<OrgApacheCommonsMathGeneticsCrossoverPolicy> crossoverPolicy, jdouble crossoverRate, id<OrgApacheCommonsMathGeneticsMutationPolicy> mutationPolicy, jdouble mutationRate, id<OrgApacheCommonsMathGeneticsSelectionPolicy> selectionPolicy);

FOUNDATION_EXPORT OrgApacheCommonsMathGeneticsGeneticAlgorithm *new_OrgApacheCommonsMathGeneticsGeneticAlgorithm_initWithOrgApacheCommonsMathGeneticsCrossoverPolicy_withDouble_withOrgApacheCommonsMathGeneticsMutationPolicy_withDouble_withOrgApacheCommonsMathGeneticsSelectionPolicy_(id<OrgApacheCommonsMathGeneticsCrossoverPolicy> crossoverPolicy, jdouble crossoverRate, id<OrgApacheCommonsMathGeneticsMutationPolicy> mutationPolicy, jdouble mutationRate, id<OrgApacheCommonsMathGeneticsSelectionPolicy> selectionPolicy) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathGeneticsGeneticAlgorithm_setRandomGeneratorWithOrgApacheCommonsMathRandomRandomGenerator_(id<OrgApacheCommonsMathRandomRandomGenerator> random);

FOUNDATION_EXPORT id<OrgApacheCommonsMathRandomRandomGenerator> OrgApacheCommonsMathGeneticsGeneticAlgorithm_getRandomGenerator();

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathGeneticsGeneticAlgorithm)

#endif // _OrgApacheCommonsMathGeneticsGeneticAlgorithm_H_
