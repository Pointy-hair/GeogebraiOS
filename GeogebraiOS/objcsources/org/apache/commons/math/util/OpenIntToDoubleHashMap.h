//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/util/OpenIntToDoubleHashMap.java
//

#ifndef _OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_H_
#define _OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator;

#define OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_FREE 0
#define OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_FULL 1
#define OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_REMOVED 2

@interface OrgApacheCommonsMathUtilOpenIntToDoubleHashMap : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)missingEntries;

- (instancetype)initWithInt:(jint)expectedSize;

- (instancetype)initWithInt:(jint)expectedSize
                 withDouble:(jdouble)missingEntries;

- (instancetype)initWithOrgApacheCommonsMathUtilOpenIntToDoubleHashMap:(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *)source;

- (jboolean)containsKeyWithInt:(jint)key;

- (jdouble)getWithInt:(jint)key;

- (OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator *)iterator;

- (jdouble)putWithInt:(jint)key
           withDouble:(jdouble)value;

- (jdouble)removeWithInt:(jint)key;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap, FREE, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap, FULL, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap, REMOVED, jbyte)

FOUNDATION_EXPORT void OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_init(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *self);

FOUNDATION_EXPORT OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *new_OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithDouble_(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *self, jdouble missingEntries);

FOUNDATION_EXPORT OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *new_OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithDouble_(jdouble missingEntries) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithInt_(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *self, jint expectedSize);

FOUNDATION_EXPORT OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *new_OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithInt_(jint expectedSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithInt_withDouble_(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *self, jint expectedSize, jdouble missingEntries);

FOUNDATION_EXPORT OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *new_OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithInt_withDouble_(jint expectedSize, jdouble missingEntries) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithOrgApacheCommonsMathUtilOpenIntToDoubleHashMap_(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *self, OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *source);

FOUNDATION_EXPORT OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *new_OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_initWithOrgApacheCommonsMathUtilOpenIntToDoubleHashMap_(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap *source) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap)

@interface OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator : NSObject

#pragma mark Public

- (void)advance;

- (jboolean)hasNext;

- (jint)key;

- (jdouble)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_Iterator)

#endif // _OrgApacheCommonsMathUtilOpenIntToDoubleHashMap_H_
