//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/util/DefaultTransformer.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/NumberFormatException.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/util/DefaultTransformer.h"

#define OrgApacheCommonsMathUtilDefaultTransformer_serialVersionUID 4019938025047800455LL

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilDefaultTransformer, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathUtilDefaultTransformer

- (jdouble)transformWithId:(id)o {
  if (o == nil) {
    @throw new_OrgApacheCommonsMathMathException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OBJECT_TRANSFORMATION(), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  }
  if ([o isKindOfClass:[NSNumber class]]) {
    return [((NSNumber *) nil_chk(((NSNumber *) check_class_cast(o, [NSNumber class])))) doubleValue];
  }
  @try {
    return [JavaLangDouble_valueOfWithNSString_([nil_chk(o) description]) doubleValue];
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_OrgApacheCommonsMathMathException_initWithJavaLangThrowable_withOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(e, OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_CANNOT_TRANSFORM_TO_DOUBLE(), [IOSObjectArray newArrayWithObjects:(id[]){ [((JavaLangNumberFormatException *) nil_chk(e)) getMessage] } count:1 type:NSObject_class_()]);
  }
}

- (jboolean)isEqual:(id)other {
  if (self == other) {
    return YES;
  }
  if (other == nil) {
    return NO;
  }
  return [other isKindOfClass:[OrgApacheCommonsMathUtilDefaultTransformer class]];
}

- (NSUInteger)hash {
  return 401993047;
}

- (instancetype)init {
  OrgApacheCommonsMathUtilDefaultTransformer_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "transformWithId:", "transform", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathUtilDefaultTransformer_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathUtilDefaultTransformer = { 2, "DefaultTransformer", "org.apache.commons.math.util", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathUtilDefaultTransformer;
}

@end

void OrgApacheCommonsMathUtilDefaultTransformer_init(OrgApacheCommonsMathUtilDefaultTransformer *self) {
  (void) NSObject_init(self);
}

OrgApacheCommonsMathUtilDefaultTransformer *new_OrgApacheCommonsMathUtilDefaultTransformer_init() {
  OrgApacheCommonsMathUtilDefaultTransformer *self = [OrgApacheCommonsMathUtilDefaultTransformer alloc];
  OrgApacheCommonsMathUtilDefaultTransformer_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathUtilDefaultTransformer)
