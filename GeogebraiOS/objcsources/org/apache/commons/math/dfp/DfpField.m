//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/dfp/DfpField.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/math/dfp/Dfp.h"
#include "org/apache/commons/math/dfp/DfpField.h"

@interface OrgApacheCommonsMathDfpDfpField () {
 @public
  jint radixDigits_;
  OrgApacheCommonsMathDfpDfp *zero_;
  OrgApacheCommonsMathDfpDfp *one_;
  OrgApacheCommonsMathDfpDfp *two_;
  OrgApacheCommonsMathDfpDfp *sqr2_;
  IOSObjectArray *sqr2Split_;
  OrgApacheCommonsMathDfpDfp *sqr2Reciprocal_;
  OrgApacheCommonsMathDfpDfp *sqr3_;
  OrgApacheCommonsMathDfpDfp *sqr3Reciprocal_;
  OrgApacheCommonsMathDfpDfp *pi_;
  IOSObjectArray *piSplit_;
  OrgApacheCommonsMathDfpDfp *e_;
  IOSObjectArray *eSplit_;
  OrgApacheCommonsMathDfpDfp *ln2_;
  IOSObjectArray *ln2Split_;
  OrgApacheCommonsMathDfpDfp *ln5_;
  IOSObjectArray *ln5Split_;
  OrgApacheCommonsMathDfpDfp *ln10_;
  OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *rMode_;
  jint ieeeFlags_;
}

- (instancetype)initWithInt:(jint)decimalDigits
                withBoolean:(jboolean)computeConstants;

- (IOSObjectArray *)splitWithNSString:(NSString *)a;

+ (void)computeStringConstantsWithInt:(jint)highPrecisionDecimalDigits;

+ (OrgApacheCommonsMathDfpDfp *)computePiWithOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)one
                                         withOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)two
                                         withOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)three;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, zero_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, one_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, two_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr2_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr2Split_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr2Reciprocal_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr3_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr3Reciprocal_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, pi_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, piSplit_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, e_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, eSplit_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln2_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln2Split_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln5_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln5Split_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln10_, OrgApacheCommonsMathDfpDfp *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, rMode_, OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *)

static NSString *OrgApacheCommonsMathDfpDfpField_sqr2String_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, sqr2String_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr2String_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_sqr2ReciprocalString_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, sqr2ReciprocalString_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr2ReciprocalString_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_sqr3String_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, sqr3String_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr3String_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_sqr3ReciprocalString_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, sqr3ReciprocalString_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, sqr3ReciprocalString_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_piString_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, piString_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, piString_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_eString_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, eString_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, eString_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_ln2String_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, ln2String_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln2String_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_ln5String_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, ln5String_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln5String_, NSString *)

static NSString *OrgApacheCommonsMathDfpDfpField_ln10String_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDfpDfpField, ln10String_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsMathDfpDfpField, ln10String_, NSString *)

__attribute__((unused)) static void OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(OrgApacheCommonsMathDfpDfpField *self, jint decimalDigits, jboolean computeConstants);

__attribute__((unused)) static OrgApacheCommonsMathDfpDfpField *new_OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(jint decimalDigits, jboolean computeConstants) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsMathDfpDfpField_splitWithNSString_(OrgApacheCommonsMathDfpDfpField *self, NSString *a);

__attribute__((unused)) static void OrgApacheCommonsMathDfpDfpField_computeStringConstantsWithInt_(jint highPrecisionDecimalDigits);

__attribute__((unused)) static OrgApacheCommonsMathDfpDfp *OrgApacheCommonsMathDfpDfpField_computePiWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(OrgApacheCommonsMathDfpDfp *one, OrgApacheCommonsMathDfpDfp *two, OrgApacheCommonsMathDfpDfp *three);

__attribute__((unused)) static void OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgApacheCommonsMathDfpDfpField

- (instancetype)initWithInt:(jint)decimalDigits {
  OrgApacheCommonsMathDfpDfpField_initWithInt_(self, decimalDigits);
  return self;
}

- (instancetype)initWithInt:(jint)decimalDigits
                withBoolean:(jboolean)computeConstants {
  OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(self, decimalDigits, computeConstants);
  return self;
}

- (jint)getRadixDigits {
  return radixDigits_;
}

- (void)setRoundingModeWithOrgApacheCommonsMathDfpDfpField_RoundingModeEnum:(OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *)mode {
  rMode_ = mode;
}

- (OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *)getRoundingMode {
  return rMode_;
}

- (jint)getIEEEFlags {
  return ieeeFlags_;
}

- (void)clearIEEEFlags {
  ieeeFlags_ = 0;
}

- (void)setIEEEFlagsWithInt:(jint)flags {
  ieeeFlags_ = flags & (OrgApacheCommonsMathDfpDfpField_FLAG_INVALID | OrgApacheCommonsMathDfpDfpField_FLAG_DIV_ZERO | OrgApacheCommonsMathDfpDfpField_FLAG_OVERFLOW | OrgApacheCommonsMathDfpDfpField_FLAG_UNDERFLOW | OrgApacheCommonsMathDfpDfpField_FLAG_INEXACT);
}

- (void)setIEEEFlagsBitsWithInt:(jint)bits {
  ieeeFlags_ |= bits & (OrgApacheCommonsMathDfpDfpField_FLAG_INVALID | OrgApacheCommonsMathDfpDfpField_FLAG_DIV_ZERO | OrgApacheCommonsMathDfpDfpField_FLAG_OVERFLOW | OrgApacheCommonsMathDfpDfpField_FLAG_UNDERFLOW | OrgApacheCommonsMathDfpDfpField_FLAG_INEXACT);
}

- (OrgApacheCommonsMathDfpDfp *)newDfp {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_(self);
}

- (OrgApacheCommonsMathDfpDfp *)newDfpWithByte:(jbyte)x {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withByte_(self, x);
}

- (OrgApacheCommonsMathDfpDfp *)newDfpWithInt:(jint)x {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(self, x);
}

- (OrgApacheCommonsMathDfpDfp *)newDfpWithLong:(jlong)x {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withLong_(self, x);
}

- (OrgApacheCommonsMathDfpDfp *)newDfpWithDouble:(jdouble)x {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withDouble_(self, x);
}

- (OrgApacheCommonsMathDfpDfp *)newDfpWithOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)d {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(d);
}

- (OrgApacheCommonsMathDfpDfp *)newDfpWithNSString:(NSString *)s {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, s);
}

- (OrgApacheCommonsMathDfpDfp *)newDfpWithByte:(jbyte)sign
                                      withByte:(jbyte)nans {
  return new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withByte_withByte_(self, sign, nans);
}

- (OrgApacheCommonsMathDfpDfp *)getZero {
  return zero_;
}

- (OrgApacheCommonsMathDfpDfp *)getOne {
  return one_;
}

- (OrgApacheCommonsMathDfpDfp *)getTwo {
  return two_;
}

- (OrgApacheCommonsMathDfpDfp *)getSqr2 {
  return sqr2_;
}

- (IOSObjectArray *)getSqr2Split {
  return [((IOSObjectArray *) nil_chk(sqr2Split_)) clone];
}

- (OrgApacheCommonsMathDfpDfp *)getSqr2Reciprocal {
  return sqr2Reciprocal_;
}

- (OrgApacheCommonsMathDfpDfp *)getSqr3 {
  return sqr3_;
}

- (OrgApacheCommonsMathDfpDfp *)getSqr3Reciprocal {
  return sqr3Reciprocal_;
}

- (OrgApacheCommonsMathDfpDfp *)getPi {
  return pi_;
}

- (IOSObjectArray *)getPiSplit {
  return [((IOSObjectArray *) nil_chk(piSplit_)) clone];
}

- (OrgApacheCommonsMathDfpDfp *)getE {
  return e_;
}

- (IOSObjectArray *)getESplit {
  return [((IOSObjectArray *) nil_chk(eSplit_)) clone];
}

- (OrgApacheCommonsMathDfpDfp *)getLn2 {
  return ln2_;
}

- (IOSObjectArray *)getLn2Split {
  return [((IOSObjectArray *) nil_chk(ln2Split_)) clone];
}

- (OrgApacheCommonsMathDfpDfp *)getLn5 {
  return ln5_;
}

- (IOSObjectArray *)getLn5Split {
  return [((IOSObjectArray *) nil_chk(ln5Split_)) clone];
}

- (OrgApacheCommonsMathDfpDfp *)getLn10 {
  return ln10_;
}

- (IOSObjectArray *)splitWithNSString:(NSString *)a {
  return OrgApacheCommonsMathDfpDfpField_splitWithNSString_(self, a);
}

+ (void)computeStringConstantsWithInt:(jint)highPrecisionDecimalDigits {
  OrgApacheCommonsMathDfpDfpField_computeStringConstantsWithInt_(highPrecisionDecimalDigits);
}

+ (OrgApacheCommonsMathDfpDfp *)computePiWithOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)one
                                         withOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)two
                                         withOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)three {
  return OrgApacheCommonsMathDfpDfpField_computePiWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(one, two, three);
}

+ (OrgApacheCommonsMathDfpDfp *)computeExpWithOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)a
                                          withOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)one {
  return OrgApacheCommonsMathDfpDfpField_computeExpWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(a, one);
}

+ (OrgApacheCommonsMathDfpDfp *)computeLnWithOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)a
                                         withOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)one
                                         withOrgApacheCommonsMathDfpDfp:(OrgApacheCommonsMathDfpDfp *)two {
  return OrgApacheCommonsMathDfpDfpField_computeLnWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(a, one, two);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "DfpField", NULL, 0x1, NULL, NULL },
    { "initWithInt:withBoolean:", "DfpField", NULL, 0x2, NULL, NULL },
    { "getRadixDigits", NULL, "I", 0x1, NULL, NULL },
    { "setRoundingModeWithOrgApacheCommonsMathDfpDfpField_RoundingModeEnum:", "setRoundingMode", "V", 0x1, NULL, NULL },
    { "getRoundingMode", NULL, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", 0x1, NULL, NULL },
    { "getIEEEFlags", NULL, "I", 0x1, NULL, NULL },
    { "clearIEEEFlags", NULL, "V", 0x1, NULL, NULL },
    { "setIEEEFlagsWithInt:", "setIEEEFlags", "V", 0x1, NULL, NULL },
    { "setIEEEFlagsBitsWithInt:", "setIEEEFlagsBits", "V", 0x1, NULL, NULL },
    { "newDfp", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "newDfpWithByte:", "newDfp", "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "newDfpWithInt:", "newDfp", "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "newDfpWithLong:", "newDfp", "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "newDfpWithDouble:", "newDfp", "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "newDfpWithOrgApacheCommonsMathDfpDfp:", "newDfp", "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "newDfpWithNSString:", "newDfp", "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "newDfpWithByte:withByte:", "newDfp", "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getZero", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getOne", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getTwo", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getSqr2", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getSqr2Split", NULL, "[Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getSqr2Reciprocal", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getSqr3", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getSqr3Reciprocal", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getPi", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getPiSplit", NULL, "[Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getE", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getESplit", NULL, "[Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getLn2", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getLn2Split", NULL, "[Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getLn5", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getLn5Split", NULL, "[Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "getLn10", NULL, "Lorg.apache.commons.math.dfp.Dfp;", 0x1, NULL, NULL },
    { "splitWithNSString:", "split", "[Lorg.apache.commons.math.dfp.Dfp;", 0x2, NULL, NULL },
    { "computeStringConstantsWithInt:", "computeStringConstants", "V", 0xa, NULL, NULL },
    { "computePiWithOrgApacheCommonsMathDfpDfp:withOrgApacheCommonsMathDfpDfp:withOrgApacheCommonsMathDfpDfp:", "computePi", "Lorg.apache.commons.math.dfp.Dfp;", 0xa, NULL, NULL },
    { "computeExpWithOrgApacheCommonsMathDfpDfp:withOrgApacheCommonsMathDfpDfp:", "computeExp", "Lorg.apache.commons.math.dfp.Dfp;", 0x9, NULL, NULL },
    { "computeLnWithOrgApacheCommonsMathDfpDfp:withOrgApacheCommonsMathDfpDfp:withOrgApacheCommonsMathDfpDfp:", "computeLn", "Lorg.apache.commons.math.dfp.Dfp;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FLAG_INVALID_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathDfpDfpField_FLAG_INVALID },
    { "FLAG_DIV_ZERO_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathDfpDfpField_FLAG_DIV_ZERO },
    { "FLAG_OVERFLOW_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathDfpDfpField_FLAG_OVERFLOW },
    { "FLAG_UNDERFLOW_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathDfpDfpField_FLAG_UNDERFLOW },
    { "FLAG_INEXACT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathDfpDfpField_FLAG_INEXACT },
    { "sqr2String_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_sqr2String_, NULL,  },
    { "sqr2ReciprocalString_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_sqr2ReciprocalString_, NULL,  },
    { "sqr3String_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_sqr3String_, NULL,  },
    { "sqr3ReciprocalString_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_sqr3ReciprocalString_, NULL,  },
    { "piString_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_piString_, NULL,  },
    { "eString_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_eString_, NULL,  },
    { "ln2String_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_ln2String_, NULL,  },
    { "ln5String_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_ln5String_, NULL,  },
    { "ln10String_", NULL, 0xa, "Ljava.lang.String;", &OrgApacheCommonsMathDfpDfpField_ln10String_, NULL,  },
    { "radixDigits_", NULL, 0x12, "I", NULL, NULL,  },
    { "zero_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "one_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "two_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "sqr2_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "sqr2Split_", NULL, 0x12, "[Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "sqr2Reciprocal_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "sqr3_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "sqr3Reciprocal_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "pi_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "piSplit_", NULL, 0x12, "[Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "e_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "eSplit_", NULL, 0x12, "[Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "ln2_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "ln2Split_", NULL, 0x12, "[Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "ln5_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "ln5Split_", NULL, 0x12, "[Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "ln10_", NULL, 0x12, "Lorg.apache.commons.math.dfp.Dfp;", NULL, NULL,  },
    { "rMode_", NULL, 0x2, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", NULL, NULL,  },
    { "ieeeFlags_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.math.dfp.DfpField$RoundingMode;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathDfpDfpField = { 2, "DfpField", "org.apache.commons.math.dfp", NULL, 0x1, 39, methods, 34, fields, 0, NULL, 1, inner_classes, NULL, "Ljava/lang/Object;Lorg/apache/commons/math/Field<Lorg/apache/commons/math/dfp/Dfp;>;" };
  return &_OrgApacheCommonsMathDfpDfpField;
}

@end

void OrgApacheCommonsMathDfpDfpField_initWithInt_(OrgApacheCommonsMathDfpDfpField *self, jint decimalDigits) {
  (void) OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(self, decimalDigits, YES);
}

OrgApacheCommonsMathDfpDfpField *new_OrgApacheCommonsMathDfpDfpField_initWithInt_(jint decimalDigits) {
  OrgApacheCommonsMathDfpDfpField *self = [OrgApacheCommonsMathDfpDfpField alloc];
  OrgApacheCommonsMathDfpDfpField_initWithInt_(self, decimalDigits);
  return self;
}

void OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(OrgApacheCommonsMathDfpDfpField *self, jint decimalDigits, jboolean computeConstants) {
  (void) NSObject_init(self);
  self->radixDigits_ = (decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4;
  self->rMode_ = OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_get_ROUND_HALF_EVEN();
  self->ieeeFlags_ = 0;
  self->zero_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(self, 0);
  self->one_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(self, 1);
  self->two_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(self, 2);
  if (computeConstants) {
    @synchronized(OrgApacheCommonsMathDfpDfpField_class_()) {
      OrgApacheCommonsMathDfpDfpField_computeStringConstantsWithInt_((decimalDigits < 67) ? 200 : (3 * decimalDigits));
      self->sqr2_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_sqr2String_);
      self->sqr2Split_ = OrgApacheCommonsMathDfpDfpField_splitWithNSString_(self, OrgApacheCommonsMathDfpDfpField_sqr2String_);
      self->sqr2Reciprocal_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_sqr2ReciprocalString_);
      self->sqr3_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_sqr3String_);
      self->sqr3Reciprocal_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_sqr3ReciprocalString_);
      self->pi_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_piString_);
      self->piSplit_ = OrgApacheCommonsMathDfpDfpField_splitWithNSString_(self, OrgApacheCommonsMathDfpDfpField_piString_);
      self->e_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_eString_);
      self->eSplit_ = OrgApacheCommonsMathDfpDfpField_splitWithNSString_(self, OrgApacheCommonsMathDfpDfpField_eString_);
      self->ln2_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_ln2String_);
      self->ln2Split_ = OrgApacheCommonsMathDfpDfpField_splitWithNSString_(self, OrgApacheCommonsMathDfpDfpField_ln2String_);
      self->ln5_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_ln5String_);
      self->ln5Split_ = OrgApacheCommonsMathDfpDfpField_splitWithNSString_(self, OrgApacheCommonsMathDfpDfpField_ln5String_);
      self->ln10_ = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, OrgApacheCommonsMathDfpDfpField_ln10String_);
    }
  }
  else {
    self->sqr2_ = nil;
    self->sqr2Split_ = nil;
    self->sqr2Reciprocal_ = nil;
    self->sqr3_ = nil;
    self->sqr3Reciprocal_ = nil;
    self->pi_ = nil;
    self->piSplit_ = nil;
    self->e_ = nil;
    self->eSplit_ = nil;
    self->ln2_ = nil;
    self->ln2Split_ = nil;
    self->ln5_ = nil;
    self->ln5Split_ = nil;
    self->ln10_ = nil;
  }
}

OrgApacheCommonsMathDfpDfpField *new_OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(jint decimalDigits, jboolean computeConstants) {
  OrgApacheCommonsMathDfpDfpField *self = [OrgApacheCommonsMathDfpDfpField alloc];
  OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(self, decimalDigits, computeConstants);
  return self;
}

IOSObjectArray *OrgApacheCommonsMathDfpDfpField_splitWithNSString_(OrgApacheCommonsMathDfpDfpField *self, NSString *a) {
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:2 type:OrgApacheCommonsMathDfpDfp_class_()];
  jboolean leading = YES;
  jint sp = 0;
  jint sig = 0;
  IOSCharArray *buf = [IOSCharArray newArrayWithLength:((jint) [((NSString *) nil_chk(a)) length])];
  for (jint i = 0; i < buf->size_; i++) {
    *IOSCharArray_GetRef(buf, i) = [a charAtWithInt:i];
    if (IOSCharArray_Get(buf, i) >= '1' && IOSCharArray_Get(buf, i) <= '9') {
      leading = NO;
    }
    if (IOSCharArray_Get(buf, i) == '.') {
      sig += (400 - sig) % 4;
      leading = NO;
    }
    if (sig == (self->radixDigits_ / 2) * 4) {
      sp = i;
      break;
    }
    if (IOSCharArray_Get(buf, i) >= '0' && IOSCharArray_Get(buf, i) <= '9' && !leading) {
      sig++;
    }
  }
  (void) IOSObjectArray_Set(result, 0, new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, [NSString stringWithCharacters:buf offset:0 length:sp]));
  for (jint i = 0; i < buf->size_; i++) {
    *IOSCharArray_GetRef(buf, i) = [a charAtWithInt:i];
    if (IOSCharArray_Get(buf, i) >= '0' && IOSCharArray_Get(buf, i) <= '9' && i < sp) {
      *IOSCharArray_GetRef(buf, i) = '0';
    }
  }
  (void) IOSObjectArray_Set(result, 1, new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withNSString_(self, [NSString stringWithCharacters:buf]));
  return result;
}

void OrgApacheCommonsMathDfpDfpField_computeStringConstantsWithInt_(jint highPrecisionDecimalDigits) {
  OrgApacheCommonsMathDfpDfpField_initialize();
  if (OrgApacheCommonsMathDfpDfpField_sqr2String_ == nil || ((jint) [OrgApacheCommonsMathDfpDfpField_sqr2String_ length]) < highPrecisionDecimalDigits - 3) {
    OrgApacheCommonsMathDfpDfpField *highPrecisionField = new_OrgApacheCommonsMathDfpDfpField_initWithInt_withBoolean_(highPrecisionDecimalDigits, NO);
    OrgApacheCommonsMathDfpDfp *highPrecisionOne = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(highPrecisionField, 1);
    OrgApacheCommonsMathDfpDfp *highPrecisionTwo = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(highPrecisionField, 2);
    OrgApacheCommonsMathDfpDfp *highPrecisionThree = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(highPrecisionField, 3);
    OrgApacheCommonsMathDfpDfp *highPrecisionSqr2 = [highPrecisionTwo sqrt];
    OrgApacheCommonsMathDfpDfpField_sqr2String_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk(highPrecisionSqr2)) description];
    OrgApacheCommonsMathDfpDfpField_sqr2ReciprocalString_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk([highPrecisionOne divideWithId:highPrecisionSqr2])) description];
    OrgApacheCommonsMathDfpDfp *highPrecisionSqr3 = [highPrecisionThree sqrt];
    OrgApacheCommonsMathDfpDfpField_sqr3String_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk(highPrecisionSqr3)) description];
    OrgApacheCommonsMathDfpDfpField_sqr3ReciprocalString_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk([highPrecisionOne divideWithId:highPrecisionSqr3])) description];
    OrgApacheCommonsMathDfpDfpField_piString_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk(OrgApacheCommonsMathDfpDfpField_computePiWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(highPrecisionOne, highPrecisionTwo, highPrecisionThree))) description];
    OrgApacheCommonsMathDfpDfpField_eString_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk(OrgApacheCommonsMathDfpDfpField_computeExpWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(highPrecisionOne, highPrecisionOne))) description];
    OrgApacheCommonsMathDfpDfpField_ln2String_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk(OrgApacheCommonsMathDfpDfpField_computeLnWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(highPrecisionTwo, highPrecisionOne, highPrecisionTwo))) description];
    OrgApacheCommonsMathDfpDfpField_ln5String_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk(OrgApacheCommonsMathDfpDfpField_computeLnWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(highPrecisionField, 5), highPrecisionOne, highPrecisionTwo))) description];
    OrgApacheCommonsMathDfpDfpField_ln10String_ = [((OrgApacheCommonsMathDfpDfp *) nil_chk(OrgApacheCommonsMathDfpDfpField_computeLnWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_(highPrecisionField, 10), highPrecisionOne, highPrecisionTwo))) description];
  }
}

OrgApacheCommonsMathDfpDfp *OrgApacheCommonsMathDfpDfpField_computePiWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(OrgApacheCommonsMathDfpDfp *one, OrgApacheCommonsMathDfpDfp *two, OrgApacheCommonsMathDfpDfp *three) {
  OrgApacheCommonsMathDfpDfpField_initialize();
  OrgApacheCommonsMathDfpDfp *sqrt2 = [((OrgApacheCommonsMathDfpDfp *) nil_chk(two)) sqrt];
  OrgApacheCommonsMathDfpDfp *yk = [((OrgApacheCommonsMathDfpDfp *) nil_chk(sqrt2)) subtractWithId:one];
  OrgApacheCommonsMathDfpDfp *four = [two addWithId:two];
  OrgApacheCommonsMathDfpDfp *two2kp3 = two;
  OrgApacheCommonsMathDfpDfp *ak = [two multiplyWithId:[((OrgApacheCommonsMathDfpDfp *) nil_chk(three)) subtractWithId:[two multiplyWithId:sqrt2]]];
  for (jint i = 1; i < 20; i++) {
    OrgApacheCommonsMathDfpDfp *ykM1 = yk;
    OrgApacheCommonsMathDfpDfp *y2 = [((OrgApacheCommonsMathDfpDfp *) nil_chk(yk)) multiplyWithId:yk];
    OrgApacheCommonsMathDfpDfp *oneMinusY4 = [((OrgApacheCommonsMathDfpDfp *) nil_chk(one)) subtractWithId:[((OrgApacheCommonsMathDfpDfp *) nil_chk(y2)) multiplyWithId:y2]];
    OrgApacheCommonsMathDfpDfp *s = [((OrgApacheCommonsMathDfpDfp *) nil_chk([((OrgApacheCommonsMathDfpDfp *) nil_chk(oneMinusY4)) sqrt])) sqrt];
    yk = [((OrgApacheCommonsMathDfpDfp *) nil_chk([one subtractWithId:s])) divideWithId:[one addWithId:s]];
    two2kp3 = [two2kp3 multiplyWithId:four];
    OrgApacheCommonsMathDfpDfp *p = [one addWithId:yk];
    OrgApacheCommonsMathDfpDfp *p2 = [((OrgApacheCommonsMathDfpDfp *) nil_chk(p)) multiplyWithId:p];
    ak = [((OrgApacheCommonsMathDfpDfp *) nil_chk([((OrgApacheCommonsMathDfpDfp *) nil_chk(ak)) multiplyWithId:[((OrgApacheCommonsMathDfpDfp *) nil_chk(p2)) multiplyWithId:p2]])) subtractWithId:[((OrgApacheCommonsMathDfpDfp *) nil_chk([((OrgApacheCommonsMathDfpDfp *) nil_chk(two2kp3)) multiplyWithId:yk])) multiplyWithId:[((OrgApacheCommonsMathDfpDfp *) nil_chk([one addWithId:yk])) addWithId:[((OrgApacheCommonsMathDfpDfp *) nil_chk(yk)) multiplyWithId:yk]]]];
    if ([yk isEqual:ykM1]) {
      break;
    }
  }
  return [((OrgApacheCommonsMathDfpDfp *) nil_chk(one)) divideWithId:ak];
}

OrgApacheCommonsMathDfpDfp *OrgApacheCommonsMathDfpDfpField_computeExpWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(OrgApacheCommonsMathDfpDfp *a, OrgApacheCommonsMathDfpDfp *one) {
  OrgApacheCommonsMathDfpDfpField_initialize();
  OrgApacheCommonsMathDfpDfp *y = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(one);
  OrgApacheCommonsMathDfpDfp *py = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(one);
  OrgApacheCommonsMathDfpDfp *f = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(one);
  OrgApacheCommonsMathDfpDfp *fi = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(one);
  OrgApacheCommonsMathDfpDfp *x = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(one);
  for (jint i = 0; i < 10000; i++) {
    x = [x multiplyWithId:a];
    y = [y addWithId:[((OrgApacheCommonsMathDfpDfp *) nil_chk(x)) divideWithId:f]];
    fi = [fi addWithId:one];
    f = [f multiplyWithId:fi];
    if ([((OrgApacheCommonsMathDfpDfp *) nil_chk(y)) isEqual:py]) {
      break;
    }
    py = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(y);
  }
  return y;
}

OrgApacheCommonsMathDfpDfp *OrgApacheCommonsMathDfpDfpField_computeLnWithOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_withOrgApacheCommonsMathDfpDfp_(OrgApacheCommonsMathDfpDfp *a, OrgApacheCommonsMathDfpDfp *one, OrgApacheCommonsMathDfpDfp *two) {
  OrgApacheCommonsMathDfpDfpField_initialize();
  jint den = 1;
  OrgApacheCommonsMathDfpDfp *x = [((OrgApacheCommonsMathDfpDfp *) nil_chk([a addWithId:new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfpField_withInt_([((OrgApacheCommonsMathDfpDfp *) nil_chk(a)) getField], -1)])) divideWithId:[a addWithId:one]];
  OrgApacheCommonsMathDfpDfp *y = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(x);
  OrgApacheCommonsMathDfpDfp *num = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(x);
  OrgApacheCommonsMathDfpDfp *py = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(y);
  for (jint i = 0; i < 10000; i++) {
    num = [num multiplyWithId:x];
    num = [((OrgApacheCommonsMathDfpDfp *) nil_chk(num)) multiplyWithId:x];
    den = den + 2;
    OrgApacheCommonsMathDfpDfp *t = [((OrgApacheCommonsMathDfpDfp *) nil_chk(num)) divideWithInt:den];
    y = [y addWithId:t];
    if ([((OrgApacheCommonsMathDfpDfp *) nil_chk(y)) isEqual:py]) {
      break;
    }
    py = new_OrgApacheCommonsMathDfpDfp_initWithOrgApacheCommonsMathDfpDfp_(y);
  }
  return [((OrgApacheCommonsMathDfpDfp *) nil_chk(y)) multiplyWithId:two];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathDfpDfpField)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsMathDfpDfpField_RoundingModeEnum)

OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_values_[8];

@implementation OrgApacheCommonsMathDfpDfpField_RoundingModeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_values() {
  OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_values_ count:8 type:OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_values();
}

+ (OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_valueOfWithNSString_(name);
}

OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_valueOfWithNSString_(NSString *name) {
  OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initialize();
  for (int i = 0; i < 8; i++) {
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *e = OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsMathDfpDfpField_RoundingModeEnum class]) {
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_DOWN = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_DOWN", 0);
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_UP = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_UP", 1);
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_UP = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_HALF_UP", 2);
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_DOWN = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_HALF_DOWN", 3);
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_EVEN = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_HALF_EVEN", 4);
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_ODD = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_HALF_ODD", 5);
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_CEIL = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_CEIL", 6);
    OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_FLOOR = new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(@"ROUND_FLOOR", 7);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsMathDfpDfpField_RoundingModeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "ROUND_DOWN", "ROUND_DOWN", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_DOWN, NULL,  },
    { "ROUND_UP", "ROUND_UP", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_UP, NULL,  },
    { "ROUND_HALF_UP", "ROUND_HALF_UP", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_UP, NULL,  },
    { "ROUND_HALF_DOWN", "ROUND_HALF_DOWN", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_DOWN, NULL,  },
    { "ROUND_HALF_EVEN", "ROUND_HALF_EVEN", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_EVEN, NULL,  },
    { "ROUND_HALF_ODD", "ROUND_HALF_ODD", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_HALF_ODD, NULL,  },
    { "ROUND_CEIL", "ROUND_CEIL", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_CEIL, NULL,  },
    { "ROUND_FLOOR", "ROUND_FLOOR", 0x4019, "Lorg.apache.commons.math.dfp.DfpField$RoundingMode;", &OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_ROUND_FLOOR, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.commons.math.dfp.DfpField$RoundingMode;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathDfpDfpField_RoundingModeEnum = { 2, "RoundingMode", "org.apache.commons.math.dfp", "DfpField", 0x4019, 0, NULL, 8, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/apache/commons/math/dfp/DfpField$RoundingMode;>;" };
  return &_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum;
}

@end

void OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *new_OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgApacheCommonsMathDfpDfpField_RoundingModeEnum *self = [OrgApacheCommonsMathDfpDfpField_RoundingModeEnum alloc];
  OrgApacheCommonsMathDfpDfpField_RoundingModeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathDfpDfpField_RoundingModeEnum)
