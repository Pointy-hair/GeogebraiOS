//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/fraction/ProperFractionFormat.java
//


#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "java/text/FieldPosition.h"
#include "java/text/NumberFormat.h"
#include "java/text/ParsePosition.h"
#include "org/apache/commons/math/exception/NullArgumentException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/fraction/AbstractFormat.h"
#include "org/apache/commons/math/fraction/Fraction.h"
#include "org/apache/commons/math/fraction/FractionFormat.h"
#include "org/apache/commons/math/fraction/ProperFractionFormat.h"
#include "org/apache/commons/math/util/MathUtils.h"

#define OrgApacheCommonsMathFractionProperFractionFormat_serialVersionUID 760934726031766749LL

@interface OrgApacheCommonsMathFractionProperFractionFormat () {
 @public
  JavaTextNumberFormat *wholeFormat_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathFractionProperFractionFormat, wholeFormat_, JavaTextNumberFormat *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathFractionProperFractionFormat, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathFractionProperFractionFormat

- (instancetype)init {
  OrgApacheCommonsMathFractionProperFractionFormat_init(self);
  return self;
}

- (instancetype)initWithJavaTextNumberFormat:(JavaTextNumberFormat *)format {
  OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_(self, format);
  return self;
}

- (instancetype)initWithJavaTextNumberFormat:(JavaTextNumberFormat *)wholeFormat
                    withJavaTextNumberFormat:(JavaTextNumberFormat *)numeratorFormat
                    withJavaTextNumberFormat:(JavaTextNumberFormat *)denominatorFormat {
  OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_withJavaTextNumberFormat_withJavaTextNumberFormat_(self, wholeFormat, numeratorFormat, denominatorFormat);
  return self;
}

- (JavaLangStringBuffer *)formatWithOrgApacheCommonsMathFractionFraction:(OrgApacheCommonsMathFractionFraction *)fraction
                                                withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
                                               withJavaTextFieldPosition:(JavaTextFieldPosition *)pos {
  [((JavaTextFieldPosition *) nil_chk(pos)) setBeginIndexWithInt:0];
  [pos setEndIndexWithInt:0];
  jint num = [((OrgApacheCommonsMathFractionFraction *) nil_chk(fraction)) getNumerator];
  jint den = [fraction getDenominator];
  jint whole = num / den;
  num = num % den;
  if (whole != 0) {
    (void) [((JavaTextNumberFormat *) nil_chk([self getWholeFormat])) formatWithLong:whole withJavaLangStringBuffer:toAppendTo withJavaTextFieldPosition:pos];
    (void) [((JavaLangStringBuffer *) nil_chk(toAppendTo)) appendWithChar:' '];
    num = JavaLangMath_absWithInt_(num);
  }
  (void) [((JavaTextNumberFormat *) nil_chk([self getNumeratorFormat])) formatWithLong:num withJavaLangStringBuffer:toAppendTo withJavaTextFieldPosition:pos];
  (void) [((JavaLangStringBuffer *) nil_chk(toAppendTo)) appendWithNSString:@" / "];
  (void) [((JavaTextNumberFormat *) nil_chk([self getDenominatorFormat])) formatWithLong:den withJavaLangStringBuffer:toAppendTo withJavaTextFieldPosition:pos];
  return toAppendTo;
}

- (JavaTextNumberFormat *)getWholeFormat {
  return wholeFormat_;
}

- (OrgApacheCommonsMathFractionFraction *)parseWithNSString:(NSString *)source
                                  withJavaTextParsePosition:(JavaTextParsePosition *)pos {
  OrgApacheCommonsMathFractionFraction *ret = [super parseWithNSString:source withJavaTextParsePosition:pos];
  if (ret != nil) {
    return ret;
  }
  jint initialIndex = [((JavaTextParsePosition *) nil_chk(pos)) getIndex];
  OrgApacheCommonsMathFractionAbstractFormat_parseAndIgnoreWhitespaceWithNSString_withJavaTextParsePosition_(source, pos);
  NSNumber *whole = [((JavaTextNumberFormat *) nil_chk([self getWholeFormat])) parseWithNSString:source withJavaTextParsePosition:pos];
  if (whole == nil) {
    [pos setIndexWithInt:initialIndex];
    return nil;
  }
  OrgApacheCommonsMathFractionAbstractFormat_parseAndIgnoreWhitespaceWithNSString_withJavaTextParsePosition_(source, pos);
  NSNumber *num = [((JavaTextNumberFormat *) nil_chk([self getNumeratorFormat])) parseWithNSString:source withJavaTextParsePosition:pos];
  if (num == nil) {
    [pos setIndexWithInt:initialIndex];
    return nil;
  }
  if ([((NSNumber *) nil_chk(num)) intValue] < 0) {
    [pos setIndexWithInt:initialIndex];
    return nil;
  }
  jint startIndex = [pos getIndex];
  jchar c = OrgApacheCommonsMathFractionAbstractFormat_parseNextCharacterWithNSString_withJavaTextParsePosition_(source, pos);
  switch (c) {
    case 0:
    return new_OrgApacheCommonsMathFractionFraction_initWithInt_withInt_([num intValue], 1);
    case '/':
    break;
    default:
    [pos setIndexWithInt:initialIndex];
    [pos setErrorIndexWithInt:startIndex];
    return nil;
  }
  OrgApacheCommonsMathFractionAbstractFormat_parseAndIgnoreWhitespaceWithNSString_withJavaTextParsePosition_(source, pos);
  NSNumber *den = [((JavaTextNumberFormat *) nil_chk([self getDenominatorFormat])) parseWithNSString:source withJavaTextParsePosition:pos];
  if (den == nil) {
    [pos setIndexWithInt:initialIndex];
    return nil;
  }
  if ([((NSNumber *) nil_chk(den)) intValue] < 0) {
    [pos setIndexWithInt:initialIndex];
    return nil;
  }
  jint w = [((NSNumber *) nil_chk(whole)) intValue];
  jint n = [num intValue];
  jint d = [den intValue];
  return new_OrgApacheCommonsMathFractionFraction_initWithInt_withInt_(((JavaLangMath_absWithInt_(w) * d) + n) * OrgApacheCommonsMathUtilMathUtils_signWithInt_(w), d);
}

- (void)setWholeFormatWithJavaTextNumberFormat:(JavaTextNumberFormat *)format {
  if (format == nil) {
    @throw new_OrgApacheCommonsMathExceptionNullArgumentException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_WHOLE_FORMAT());
  }
  self->wholeFormat_ = format;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ProperFractionFormat", NULL, 0x1, NULL, NULL },
    { "initWithJavaTextNumberFormat:", "ProperFractionFormat", NULL, 0x1, NULL, NULL },
    { "initWithJavaTextNumberFormat:withJavaTextNumberFormat:withJavaTextNumberFormat:", "ProperFractionFormat", NULL, 0x1, NULL, NULL },
    { "formatWithOrgApacheCommonsMathFractionFraction:withJavaLangStringBuffer:withJavaTextFieldPosition:", "format", "Ljava.lang.StringBuffer;", 0x1, NULL, NULL },
    { "getWholeFormat", NULL, "Ljava.text.NumberFormat;", 0x1, NULL, NULL },
    { "parseWithNSString:withJavaTextParsePosition:", "parse", "Lorg.apache.commons.math.fraction.Fraction;", 0x1, NULL, NULL },
    { "setWholeFormatWithJavaTextNumberFormat:", "setWholeFormat", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathFractionProperFractionFormat_serialVersionUID },
    { "wholeFormat_", NULL, 0x2, "Ljava.text.NumberFormat;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathFractionProperFractionFormat = { 2, "ProperFractionFormat", "org.apache.commons.math.fraction", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathFractionProperFractionFormat;
}

@end

void OrgApacheCommonsMathFractionProperFractionFormat_init(OrgApacheCommonsMathFractionProperFractionFormat *self) {
  (void) OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_(self, OrgApacheCommonsMathFractionFractionFormat_getDefaultNumberFormat());
}

OrgApacheCommonsMathFractionProperFractionFormat *new_OrgApacheCommonsMathFractionProperFractionFormat_init() {
  OrgApacheCommonsMathFractionProperFractionFormat *self = [OrgApacheCommonsMathFractionProperFractionFormat alloc];
  OrgApacheCommonsMathFractionProperFractionFormat_init(self);
  return self;
}

void OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_(OrgApacheCommonsMathFractionProperFractionFormat *self, JavaTextNumberFormat *format) {
  (void) OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_withJavaTextNumberFormat_withJavaTextNumberFormat_(self, format, (JavaTextNumberFormat *) check_class_cast([((JavaTextNumberFormat *) nil_chk(format)) clone], [JavaTextNumberFormat class]), (JavaTextNumberFormat *) check_class_cast([format clone], [JavaTextNumberFormat class]));
}

OrgApacheCommonsMathFractionProperFractionFormat *new_OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_(JavaTextNumberFormat *format) {
  OrgApacheCommonsMathFractionProperFractionFormat *self = [OrgApacheCommonsMathFractionProperFractionFormat alloc];
  OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_(self, format);
  return self;
}

void OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_withJavaTextNumberFormat_withJavaTextNumberFormat_(OrgApacheCommonsMathFractionProperFractionFormat *self, JavaTextNumberFormat *wholeFormat, JavaTextNumberFormat *numeratorFormat, JavaTextNumberFormat *denominatorFormat) {
  (void) OrgApacheCommonsMathFractionFractionFormat_initWithJavaTextNumberFormat_withJavaTextNumberFormat_(self, numeratorFormat, denominatorFormat);
  [self setWholeFormatWithJavaTextNumberFormat:wholeFormat];
}

OrgApacheCommonsMathFractionProperFractionFormat *new_OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_withJavaTextNumberFormat_withJavaTextNumberFormat_(JavaTextNumberFormat *wholeFormat, JavaTextNumberFormat *numeratorFormat, JavaTextNumberFormat *denominatorFormat) {
  OrgApacheCommonsMathFractionProperFractionFormat *self = [OrgApacheCommonsMathFractionProperFractionFormat alloc];
  OrgApacheCommonsMathFractionProperFractionFormat_initWithJavaTextNumberFormat_withJavaTextNumberFormat_withJavaTextNumberFormat_(self, wholeFormat, numeratorFormat, denominatorFormat);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathFractionProperFractionFormat)
