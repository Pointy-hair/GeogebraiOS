//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/FunctionEvaluationException.h"
#include "org/apache/commons/math/MaxEvaluationsExceededException.h"
#include "org/apache/commons/math/MaxIterationsExceededException.h"
#include "org/apache/commons/math/analysis/DifferentiableMultivariateRealFunction.h"
#include "org/apache/commons/math/analysis/MultivariateVectorialFunction.h"
#include "org/apache/commons/math/optimization/GoalType.h"
#include "org/apache/commons/math/optimization/OptimizationException.h"
#include "org/apache/commons/math/optimization/RealConvergenceChecker.h"
#include "org/apache/commons/math/optimization/RealPointValuePair.h"
#include "org/apache/commons/math/optimization/SimpleScalarValueChecker.h"
#include "org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.h"

@interface OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer () {
 @public
  jint maxIterations_;
  jint iterations_;
  jint maxEvaluations_;
  jint evaluations_;
  jint gradientEvaluations_;
  id<OrgApacheCommonsMathAnalysisDifferentiableMultivariateRealFunction> function_;
  id<OrgApacheCommonsMathAnalysisMultivariateVectorialFunction> gradient_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer, function_, id<OrgApacheCommonsMathAnalysisDifferentiableMultivariateRealFunction>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer, gradient_, id<OrgApacheCommonsMathAnalysisMultivariateVectorialFunction>)

@implementation OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer

- (instancetype)init {
  OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_init(self);
  return self;
}

- (void)setMaxIterationsWithInt:(jint)maxIterations {
  self->maxIterations_ = maxIterations;
}

- (jint)getMaxIterations {
  return maxIterations_;
}

- (jint)getIterations {
  return iterations_;
}

- (void)setMaxEvaluationsWithInt:(jint)maxEvaluations {
  self->maxEvaluations_ = maxEvaluations;
}

- (jint)getMaxEvaluations {
  return maxEvaluations_;
}

- (jint)getEvaluations {
  return evaluations_;
}

- (jint)getGradientEvaluations {
  return gradientEvaluations_;
}

- (void)setConvergenceCheckerWithOrgApacheCommonsMathOptimizationRealConvergenceChecker:(id<OrgApacheCommonsMathOptimizationRealConvergenceChecker>)convergenceChecker {
  OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_set_checker_(self, convergenceChecker);
}

- (id<OrgApacheCommonsMathOptimizationRealConvergenceChecker>)getConvergenceChecker {
  return checker_;
}

- (void)incrementIterationsCounter {
  if (++iterations_ > maxIterations_) {
    @throw [new_OrgApacheCommonsMathOptimizationOptimizationException_initWithJavaLangThrowable_([new_OrgApacheCommonsMathMaxIterationsExceededException_initWithInt_(maxIterations_) autorelease]) autorelease];
  }
}

- (IOSDoubleArray *)computeObjectiveGradientWithDoubleArray:(IOSDoubleArray *)evaluationPoint {
  ++gradientEvaluations_;
  return [((id<OrgApacheCommonsMathAnalysisMultivariateVectorialFunction>) nil_chk(gradient_)) valueWithDoubleArray:evaluationPoint];
}

- (jdouble)computeObjectiveValueWithDoubleArray:(IOSDoubleArray *)evaluationPoint {
  if (++evaluations_ > maxEvaluations_) {
    @throw [new_OrgApacheCommonsMathFunctionEvaluationException_initWithJavaLangThrowable_withDoubleArray_([new_OrgApacheCommonsMathMaxEvaluationsExceededException_initWithInt_(maxEvaluations_) autorelease], evaluationPoint) autorelease];
  }
  return [((id<OrgApacheCommonsMathAnalysisDifferentiableMultivariateRealFunction>) nil_chk(function_)) valueWithDoubleArray:evaluationPoint];
}

- (OrgApacheCommonsMathOptimizationRealPointValuePair *)optimizeWithOrgApacheCommonsMathAnalysisDifferentiableMultivariateRealFunction:(id<OrgApacheCommonsMathAnalysisDifferentiableMultivariateRealFunction>)f
                                                                                      withOrgApacheCommonsMathOptimizationGoalTypeEnum:(OrgApacheCommonsMathOptimizationGoalTypeEnum *)goalType
                                                                                                                       withDoubleArray:(IOSDoubleArray *)startPoint {
  iterations_ = 0;
  evaluations_ = 0;
  gradientEvaluations_ = 0;
  OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_set_function_(self, f);
  OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_set_gradient_(self, [((id<OrgApacheCommonsMathAnalysisDifferentiableMultivariateRealFunction>) nil_chk(f)) gradient]);
  OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_set_goal_(self, goalType);
  OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_set_point_(self, [((IOSDoubleArray *) nil_chk(startPoint)) clone]);
  return [self doOptimize];
}

- (OrgApacheCommonsMathOptimizationRealPointValuePair *)doOptimize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(checker_);
  RELEASE_(goal_);
  RELEASE_(point_);
  RELEASE_(function_);
  RELEASE_(gradient_);
  [super dealloc];
}

+ (IOSObjectArray *)__annotations_checker_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_goal_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_point_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractScalarDifferentiableOptimizer", NULL, 0x4, NULL, NULL },
    { "setMaxIterationsWithInt:", "setMaxIterations", "V", 0x1, NULL, NULL },
    { "getMaxIterations", NULL, "I", 0x1, NULL, NULL },
    { "getIterations", NULL, "I", 0x1, NULL, NULL },
    { "setMaxEvaluationsWithInt:", "setMaxEvaluations", "V", 0x1, NULL, NULL },
    { "getMaxEvaluations", NULL, "I", 0x1, NULL, NULL },
    { "getEvaluations", NULL, "I", 0x1, NULL, NULL },
    { "getGradientEvaluations", NULL, "I", 0x1, NULL, NULL },
    { "setConvergenceCheckerWithOrgApacheCommonsMathOptimizationRealConvergenceChecker:", "setConvergenceChecker", "V", 0x1, NULL, NULL },
    { "getConvergenceChecker", NULL, "Lorg.apache.commons.math.optimization.RealConvergenceChecker;", 0x1, NULL, NULL },
    { "incrementIterationsCounter", NULL, "V", 0x4, "Lorg.apache.commons.math.optimization.OptimizationException;", NULL },
    { "computeObjectiveGradientWithDoubleArray:", "computeObjectiveGradient", "[D", 0x4, "Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "computeObjectiveValueWithDoubleArray:", "computeObjectiveValue", "D", 0x4, "Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "optimizeWithOrgApacheCommonsMathAnalysisDifferentiableMultivariateRealFunction:withOrgApacheCommonsMathOptimizationGoalTypeEnum:withDoubleArray:", "optimize", "Lorg.apache.commons.math.optimization.RealPointValuePair;", 0x1, "Lorg.apache.commons.math.FunctionEvaluationException;Lorg.apache.commons.math.optimization.OptimizationException;Ljava.lang.IllegalArgumentException;", NULL },
    { "doOptimize", NULL, "Lorg.apache.commons.math.optimization.RealPointValuePair;", 0x404, "Lorg.apache.commons.math.FunctionEvaluationException;Lorg.apache.commons.math.optimization.OptimizationException;Ljava.lang.IllegalArgumentException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_MAX_ITERATIONS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_DEFAULT_MAX_ITERATIONS },
    { "checker_", NULL, 0x4, "Lorg.apache.commons.math.optimization.RealConvergenceChecker;", NULL, NULL,  },
    { "goal_", NULL, 0x4, "Lorg.apache.commons.math.optimization.GoalType;", NULL, NULL,  },
    { "point_", NULL, 0x4, "[D", NULL, NULL,  },
    { "maxIterations_", NULL, 0x2, "I", NULL, NULL,  },
    { "iterations_", NULL, 0x2, "I", NULL, NULL,  },
    { "maxEvaluations_", NULL, 0x2, "I", NULL, NULL,  },
    { "evaluations_", NULL, 0x2, "I", NULL, NULL,  },
    { "gradientEvaluations_", NULL, 0x2, "I", NULL, NULL,  },
    { "function_", NULL, 0x2, "Lorg.apache.commons.math.analysis.DifferentiableMultivariateRealFunction;", NULL, NULL,  },
    { "gradient_", NULL, 0x2, "Lorg.apache.commons.math.analysis.MultivariateVectorialFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer = { 2, "AbstractScalarDifferentiableOptimizer", "org.apache.commons.math.optimization.general", NULL, 0x401, 15, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer;
}

@end

void OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_init(OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer *self) {
  NSObject_init(self);
  [self setConvergenceCheckerWithOrgApacheCommonsMathOptimizationRealConvergenceChecker:[new_OrgApacheCommonsMathOptimizationSimpleScalarValueChecker_init() autorelease]];
  [self setMaxIterationsWithInt:OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer_DEFAULT_MAX_ITERATIONS];
  [self setMaxEvaluationsWithInt:JavaLangInteger_MAX_VALUE];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOptimizationGeneralAbstractScalarDifferentiableOptimizer)
