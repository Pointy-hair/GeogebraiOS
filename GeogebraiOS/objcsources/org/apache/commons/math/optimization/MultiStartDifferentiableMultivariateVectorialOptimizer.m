//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "org/apache/commons/math/FunctionEvaluationException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.h"
#include "org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.h"
#include "org/apache/commons/math/optimization/OptimizationException.h"
#include "org/apache/commons/math/optimization/VectorialConvergenceChecker.h"
#include "org/apache/commons/math/optimization/VectorialPointValuePair.h"
#include "org/apache/commons/math/random/RandomVectorGenerator.h"

#define OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_serialVersionUID 9206382258980561530LL

@interface OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer () {
 @public
  id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer> optimizer_;
  jint maxIterations_;
  jint totalIterations_;
  jint maxEvaluations_;
  jint totalEvaluations_;
  jint totalJacobianEvaluations_;
  jint starts_;
  id<OrgApacheCommonsMathRandomRandomVectorGenerator> generator_;
  IOSObjectArray *optima_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer, optimizer_, id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer, generator_, id<OrgApacheCommonsMathRandomRandomVectorGenerator>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer, optima_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer, serialVersionUID, jlong)

@interface OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 : NSObject < JavaUtilComparator > {
 @public
  IOSDoubleArray *val$target_;
  IOSDoubleArray *val$weights_;
}

- (jint)compareWithId:(OrgApacheCommonsMathOptimizationVectorialPointValuePair *)o1
               withId:(OrgApacheCommonsMathOptimizationVectorialPointValuePair *)o2;

- (jdouble)weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair:(OrgApacheCommonsMathOptimizationVectorialPointValuePair *)pv;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)capture$0
                    withDoubleArray:(IOSDoubleArray *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1, val$target_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1, val$weights_, IOSDoubleArray *)

__attribute__((unused)) static jdouble OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair_(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 *self, OrgApacheCommonsMathOptimizationVectorialPointValuePair *pv);

__attribute__((unused)) static void OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_initWithDoubleArray_withDoubleArray_(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 *self, IOSDoubleArray *capture$0, IOSDoubleArray *capture$1);

__attribute__((unused)) static OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 *new_OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_initWithDoubleArray_withDoubleArray_(IOSDoubleArray *capture$0, IOSDoubleArray *capture$1) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1)

@implementation OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer

- (instancetype)initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer:(id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>)optimizer
                                                                                             withInt:(jint)starts
                                                 withOrgApacheCommonsMathRandomRandomVectorGenerator:(id<OrgApacheCommonsMathRandomRandomVectorGenerator>)generator {
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_withInt_withOrgApacheCommonsMathRandomRandomVectorGenerator_(self, optimizer, starts, generator);
  return self;
}

- (IOSObjectArray *)getOptima {
  if (optima_ == nil) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalStateExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NO_OPTIMUM_COMPUTED_YET(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  return [((IOSObjectArray *) nil_chk(optima_)) clone];
}

- (void)setMaxIterationsWithInt:(jint)maxIterations {
  self->maxIterations_ = maxIterations;
}

- (jint)getMaxIterations {
  return maxIterations_;
}

- (jint)getIterations {
  return totalIterations_;
}

- (void)setMaxEvaluationsWithInt:(jint)maxEvaluations {
  self->maxEvaluations_ = maxEvaluations;
}

- (jint)getMaxEvaluations {
  return maxEvaluations_;
}

- (jint)getEvaluations {
  return totalEvaluations_;
}

- (jint)getJacobianEvaluations {
  return totalJacobianEvaluations_;
}

- (void)setConvergenceCheckerWithOrgApacheCommonsMathOptimizationVectorialConvergenceChecker:(id<OrgApacheCommonsMathOptimizationVectorialConvergenceChecker>)checker {
  [((id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>) nil_chk(optimizer_)) setConvergenceCheckerWithOrgApacheCommonsMathOptimizationVectorialConvergenceChecker:checker];
}

- (id<OrgApacheCommonsMathOptimizationVectorialConvergenceChecker>)getConvergenceChecker {
  return [((id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>) nil_chk(optimizer_)) getConvergenceChecker];
}

- (OrgApacheCommonsMathOptimizationVectorialPointValuePair *)optimizeWithOrgApacheCommonsMathAnalysisDifferentiableMultivariateVectorialFunction:(id<OrgApacheCommonsMathAnalysisDifferentiableMultivariateVectorialFunction>)f
                                                                                                                                 withDoubleArray:(IOSDoubleArray *)target
                                                                                                                                 withDoubleArray:(IOSDoubleArray *)weights
                                                                                                                                 withDoubleArray:(IOSDoubleArray *)startPoint {
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_setAndConsume_optima_(self, [IOSObjectArray newArrayWithLength:starts_ type:OrgApacheCommonsMathOptimizationVectorialPointValuePair_class_()]);
  totalIterations_ = 0;
  totalEvaluations_ = 0;
  totalJacobianEvaluations_ = 0;
  for (jint i = 0; i < starts_; ++i) {
    @try {
      [((id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>) nil_chk(optimizer_)) setMaxIterationsWithInt:maxIterations_ - totalIterations_];
      [optimizer_ setMaxEvaluationsWithInt:maxEvaluations_ - totalEvaluations_];
      IOSObjectArray_Set(optima_, i, [optimizer_ optimizeWithOrgApacheCommonsMathAnalysisDifferentiableMultivariateVectorialFunction:f withDoubleArray:target withDoubleArray:weights withDoubleArray:(i == 0) ? startPoint : [((id<OrgApacheCommonsMathRandomRandomVectorGenerator>) nil_chk(generator_)) nextVector]]);
    }
    @catch (OrgApacheCommonsMathFunctionEvaluationException *fee) {
      IOSObjectArray_Set(optima_, i, nil);
    }
    @catch (OrgApacheCommonsMathOptimizationOptimizationException *oe) {
      IOSObjectArray_Set(optima_, i, nil);
    }
    totalIterations_ += [((id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>) nil_chk(optimizer_)) getIterations];
    totalEvaluations_ += [optimizer_ getEvaluations];
    totalJacobianEvaluations_ += [optimizer_ getJacobianEvaluations];
  }
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(optima_, [new_OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_initWithDoubleArray_withDoubleArray_(target, weights) autorelease]);
  if (IOSObjectArray_Get(optima_, 0) == nil) {
    @throw [new_OrgApacheCommonsMathOptimizationOptimizationException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NO_CONVERGENCE_WITH_ANY_START_POINT(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(starts_) } count:1 type:NSObject_class_()]) autorelease];
  }
  return IOSObjectArray_Get(optima_, 0);
}

- (void)dealloc {
  RELEASE_(optimizer_);
  RELEASE_(generator_);
  RELEASE_(optima_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer:withInt:withOrgApacheCommonsMathRandomRandomVectorGenerator:", "MultiStartDifferentiableMultivariateVectorialOptimizer", NULL, 0x1, NULL, NULL },
    { "getOptima", NULL, "[Lorg.apache.commons.math.optimization.VectorialPointValuePair;", 0x1, "Ljava.lang.IllegalStateException;", NULL },
    { "setMaxIterationsWithInt:", "setMaxIterations", "V", 0x1, NULL, NULL },
    { "getMaxIterations", NULL, "I", 0x1, NULL, NULL },
    { "getIterations", NULL, "I", 0x1, NULL, NULL },
    { "setMaxEvaluationsWithInt:", "setMaxEvaluations", "V", 0x1, NULL, NULL },
    { "getMaxEvaluations", NULL, "I", 0x1, NULL, NULL },
    { "getEvaluations", NULL, "I", 0x1, NULL, NULL },
    { "getJacobianEvaluations", NULL, "I", 0x1, NULL, NULL },
    { "setConvergenceCheckerWithOrgApacheCommonsMathOptimizationVectorialConvergenceChecker:", "setConvergenceChecker", "V", 0x1, NULL, NULL },
    { "getConvergenceChecker", NULL, "Lorg.apache.commons.math.optimization.VectorialConvergenceChecker;", 0x1, NULL, NULL },
    { "optimizeWithOrgApacheCommonsMathAnalysisDifferentiableMultivariateVectorialFunction:withDoubleArray:withDoubleArray:withDoubleArray:", "optimize", "Lorg.apache.commons.math.optimization.VectorialPointValuePair;", 0x1, "Lorg.apache.commons.math.FunctionEvaluationException;Lorg.apache.commons.math.optimization.OptimizationException;Ljava.lang.IllegalArgumentException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_serialVersionUID },
    { "optimizer_", NULL, 0x12, "Lorg.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer;", NULL, NULL,  },
    { "maxIterations_", NULL, 0x2, "I", NULL, NULL,  },
    { "totalIterations_", NULL, 0x2, "I", NULL, NULL,  },
    { "maxEvaluations_", NULL, 0x2, "I", NULL, NULL,  },
    { "totalEvaluations_", NULL, 0x2, "I", NULL, NULL,  },
    { "totalJacobianEvaluations_", NULL, 0x2, "I", NULL, NULL,  },
    { "starts_", NULL, 0x2, "I", NULL, NULL,  },
    { "generator_", NULL, 0x2, "Lorg.apache.commons.math.random.RandomVectorGenerator;", NULL, NULL,  },
    { "optima_", NULL, 0x2, "[Lorg.apache.commons.math.optimization.VectorialPointValuePair;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer = { 2, "MultiStartDifferentiableMultivariateVectorialOptimizer", "org.apache.commons.math.optimization", NULL, 0x1, 12, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer;
}

@end

void OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_withInt_withOrgApacheCommonsMathRandomRandomVectorGenerator_(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer *self, id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer> optimizer, jint starts, id<OrgApacheCommonsMathRandomRandomVectorGenerator> generator) {
  NSObject_init(self);
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_set_optimizer_(self, optimizer);
  self->totalIterations_ = 0;
  self->totalEvaluations_ = 0;
  self->totalJacobianEvaluations_ = 0;
  self->starts_ = starts;
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_set_generator_(self, generator);
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_set_optima_(self, nil);
  [self setMaxIterationsWithInt:JavaLangInteger_MAX_VALUE];
  [self setMaxEvaluationsWithInt:JavaLangInteger_MAX_VALUE];
}

OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer *new_OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_withInt_withOrgApacheCommonsMathRandomRandomVectorGenerator_(id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer> optimizer, jint starts, id<OrgApacheCommonsMathRandomRandomVectorGenerator> generator) {
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer *self = [OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer alloc];
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_withInt_withOrgApacheCommonsMathRandomRandomVectorGenerator_(self, optimizer, starts, generator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer)

@implementation OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1

- (jint)compareWithId:(OrgApacheCommonsMathOptimizationVectorialPointValuePair *)o1
               withId:(OrgApacheCommonsMathOptimizationVectorialPointValuePair *)o2 {
  if (o1 == nil) {
    return (o2 == nil) ? 0 : +1;
  }
  else if (o2 == nil) {
    return -1;
  }
  return JavaLangDouble_compareWithDouble_withDouble_(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair_(self, o1), OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair_(self, o2));
}

- (jdouble)weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair:(OrgApacheCommonsMathOptimizationVectorialPointValuePair *)pv {
  return OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair_(self, pv);
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)capture$0
                    withDoubleArray:(IOSDoubleArray *)capture$1 {
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_initWithDoubleArray_withDoubleArray_(self, capture$0, capture$1);
  return self;
}

- (void)dealloc {
  RELEASE_(val$target_);
  RELEASE_(val$weights_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair:", "weightedResidual", "D", 0x2, NULL, NULL },
    { "initWithDoubleArray:withDoubleArray:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$target_", NULL, 0x1012, "[D", NULL, NULL,  },
    { "val$weights_", NULL, 0x1012, "[D", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer", "optimizeWithOrgApacheCommonsMathAnalysisDifferentiableMultivariateVectorialFunction:withDoubleArray:withDoubleArray:withDoubleArray:" };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 = { 2, "", "org.apache.commons.math.optimization", "MultiStartDifferentiableMultivariateVectorialOptimizer", 0x8008, 3, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/commons/math/optimization/VectorialPointValuePair;>;" };
  return &_OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1;
}

@end

jdouble OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_weightedResidualWithOrgApacheCommonsMathOptimizationVectorialPointValuePair_(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 *self, OrgApacheCommonsMathOptimizationVectorialPointValuePair *pv) {
  IOSDoubleArray *value = [((OrgApacheCommonsMathOptimizationVectorialPointValuePair *) nil_chk(pv)) getValueRef];
  jdouble sum = 0;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(value))->size_; ++i) {
    jdouble ri = IOSDoubleArray_Get(value, i) - IOSDoubleArray_Get(nil_chk(self->val$target_), i);
    sum += IOSDoubleArray_Get(nil_chk(self->val$weights_), i) * ri * ri;
  }
  return sum;
}

void OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_initWithDoubleArray_withDoubleArray_(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 *self, IOSDoubleArray *capture$0, IOSDoubleArray *capture$1) {
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_set_val$target_(self, capture$0);
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_set_val$weights_(self, capture$1);
  NSObject_init(self);
}

OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 *new_OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_initWithDoubleArray_withDoubleArray_(IOSDoubleArray *capture$0, IOSDoubleArray *capture$1) {
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 *self = [OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1 alloc];
  OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1_initWithDoubleArray_withDoubleArray_(self, capture$0, capture$1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOptimizationMultiStartDifferentiableMultivariateVectorialOptimizer_$1)
