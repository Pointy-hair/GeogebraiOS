//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/optimization/fitting/GaussianFitter.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/commons/math/FunctionEvaluationException.h"
#include "org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.h"
#include "org/apache/commons/math/optimization/OptimizationException.h"
#include "org/apache/commons/math/optimization/fitting/CurveFitter.h"
#include "org/apache/commons/math/optimization/fitting/GaussianFitter.h"
#include "org/apache/commons/math/optimization/fitting/GaussianFunction.h"
#include "org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.h"
#include "org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.h"

@interface OrgApacheCommonsMathOptimizationFittingGaussianFitter () {
 @public
  OrgApacheCommonsMathOptimizationFittingCurveFitter *fitter_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationFittingGaussianFitter, fitter_, OrgApacheCommonsMathOptimizationFittingCurveFitter *)

@implementation OrgApacheCommonsMathOptimizationFittingGaussianFitter

- (instancetype)initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer:(id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>)optimizer {
  OrgApacheCommonsMathOptimizationFittingGaussianFitter_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_(self, optimizer);
  return self;
}

- (void)addObservedPointWithDouble:(jdouble)x
                        withDouble:(jdouble)y {
  [self addObservedPointWithDouble:1.0 withDouble:x withDouble:y];
}

- (void)addObservedPointWithDouble:(jdouble)weight
                        withDouble:(jdouble)x
                        withDouble:(jdouble)y {
  [((OrgApacheCommonsMathOptimizationFittingCurveFitter *) nil_chk(fitter_)) addObservedPointWithDouble:weight withDouble:x withDouble:y];
}

- (OrgApacheCommonsMathOptimizationFittingGaussianFunction *)fit {
  return new_OrgApacheCommonsMathOptimizationFittingGaussianFunction_initWithDoubleArray_([fitter_ fitWithOrgApacheCommonsMathOptimizationFittingParametricRealFunction:new_OrgApacheCommonsMathOptimizationFittingParametricGaussianFunction_init() withDoubleArray:[((OrgApacheCommonsMathOptimizationFittingGaussianParametersGuesser *) nil_chk([self createParametersGuesserWithOrgApacheCommonsMathOptimizationFittingWeightedObservedPointArray:[((OrgApacheCommonsMathOptimizationFittingCurveFitter *) nil_chk(fitter_)) getObservations]])) guess]]);
}

- (OrgApacheCommonsMathOptimizationFittingGaussianParametersGuesser *)createParametersGuesserWithOrgApacheCommonsMathOptimizationFittingWeightedObservedPointArray:(IOSObjectArray *)observations {
  return new_OrgApacheCommonsMathOptimizationFittingGaussianParametersGuesser_initWithOrgApacheCommonsMathOptimizationFittingWeightedObservedPointArray_(observations);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer:", "GaussianFitter", NULL, 0x1, NULL, NULL },
    { "addObservedPointWithDouble:withDouble:", "addObservedPoint", "V", 0x1, NULL, NULL },
    { "addObservedPointWithDouble:withDouble:withDouble:", "addObservedPoint", "V", 0x1, NULL, NULL },
    { "fit", NULL, "Lorg.apache.commons.math.optimization.fitting.GaussianFunction;", 0x1, "Lorg.apache.commons.math.FunctionEvaluationException;Lorg.apache.commons.math.optimization.OptimizationException;", NULL },
    { "createParametersGuesserWithOrgApacheCommonsMathOptimizationFittingWeightedObservedPointArray:", "createParametersGuesser", "Lorg.apache.commons.math.optimization.fitting.GaussianParametersGuesser;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fitter_", NULL, 0x12, "Lorg.apache.commons.math.optimization.fitting.CurveFitter;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOptimizationFittingGaussianFitter = { 2, "GaussianFitter", "org.apache.commons.math.optimization.fitting", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathOptimizationFittingGaussianFitter;
}

@end

void OrgApacheCommonsMathOptimizationFittingGaussianFitter_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_(OrgApacheCommonsMathOptimizationFittingGaussianFitter *self, id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer> optimizer) {
  (void) NSObject_init(self);
  self->fitter_ = new_OrgApacheCommonsMathOptimizationFittingCurveFitter_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_(optimizer);
}

OrgApacheCommonsMathOptimizationFittingGaussianFitter *new_OrgApacheCommonsMathOptimizationFittingGaussianFitter_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_(id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer> optimizer) {
  OrgApacheCommonsMathOptimizationFittingGaussianFitter *self = [OrgApacheCommonsMathOptimizationFittingGaussianFitter alloc];
  OrgApacheCommonsMathOptimizationFittingGaussianFitter_initWithOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_(self, optimizer);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOptimizationFittingGaussianFitter)
