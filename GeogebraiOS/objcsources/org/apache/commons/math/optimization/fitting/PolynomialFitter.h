//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/optimization/fitting/PolynomialFitter.java
//

#ifndef _OrgApacheCommonsMathOptimizationFittingPolynomialFitter_H_
#define _OrgApacheCommonsMathOptimizationFittingPolynomialFitter_H_

#include "J2ObjC_header.h"

@class OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction;
@protocol OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer;

@interface OrgApacheCommonsMathOptimizationFittingPolynomialFitter : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)degree
withOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer:(id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer>)optimizer;

- (void)addObservedPointWithDouble:(jdouble)weight
                        withDouble:(jdouble)x
                        withDouble:(jdouble)y;

- (void)clearObservations;

- (OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)fit;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathOptimizationFittingPolynomialFitter)

FOUNDATION_EXPORT void OrgApacheCommonsMathOptimizationFittingPolynomialFitter_initWithInt_withOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_(OrgApacheCommonsMathOptimizationFittingPolynomialFitter *self, jint degree, id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer> optimizer);

FOUNDATION_EXPORT OrgApacheCommonsMathOptimizationFittingPolynomialFitter *new_OrgApacheCommonsMathOptimizationFittingPolynomialFitter_initWithInt_withOrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer_(jint degree, id<OrgApacheCommonsMathOptimizationDifferentiableMultivariateVectorialOptimizer> optimizer) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathOptimizationFittingPolynomialFitter)

#endif // _OrgApacheCommonsMathOptimizationFittingPolynomialFitter_H_
