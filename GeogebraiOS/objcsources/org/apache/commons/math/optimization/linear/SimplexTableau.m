//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/optimization/linear/SimplexTableau.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/commons/math/linear/Array2DRowRealMatrix.h"
#include "org/apache/commons/math/linear/MatrixUtils.h"
#include "org/apache/commons/math/linear/RealMatrix.h"
#include "org/apache/commons/math/linear/RealVector.h"
#include "org/apache/commons/math/optimization/GoalType.h"
#include "org/apache/commons/math/optimization/RealPointValuePair.h"
#include "org/apache/commons/math/optimization/linear/LinearConstraint.h"
#include "org/apache/commons/math/optimization/linear/LinearObjectiveFunction.h"
#include "org/apache/commons/math/optimization/linear/Relationship.h"
#include "org/apache/commons/math/optimization/linear/SimplexTableau.h"
#include "org/apache/commons/math/util/MathUtils.h"

#define OrgApacheCommonsMathOptimizationLinearSimplexTableau_serialVersionUID -1369660067587938365LL

@interface OrgApacheCommonsMathOptimizationLinearSimplexTableau () {
 @public
  OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *f_;
  id<JavaUtilList> constraints_;
  jboolean restrictToNonNegative_;
  id<JavaUtilList> columnLabels_;
  id<OrgApacheCommonsMathLinearRealMatrix> tableau_;
  jint numDecisionVariables_;
  jint numSlackVariables_;
  jint numArtificialVariables_;
  jdouble epsilon_;
}

- (OrgApacheCommonsMathOptimizationLinearLinearConstraint *)normalizeWithOrgApacheCommonsMathOptimizationLinearLinearConstraint:(OrgApacheCommonsMathOptimizationLinearLinearConstraint *)constraint;

- (jint)getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum:(OrgApacheCommonsMathOptimizationLinearRelationshipEnum *)relationship;

- (void)copyArrayWithDoubleArray:(IOSDoubleArray *)src
                 withDoubleArray:(IOSDoubleArray *)dest OBJC_METHOD_FAMILY_NONE;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)ois;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationLinearSimplexTableau, f_, OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationLinearSimplexTableau, constraints_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationLinearSimplexTableau, columnLabels_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOptimizationLinearSimplexTableau, tableau_, id<OrgApacheCommonsMathLinearRealMatrix>)

static NSString *OrgApacheCommonsMathOptimizationLinearSimplexTableau_NEGATIVE_VAR_COLUMN_LABEL_ = @"x-";
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathOptimizationLinearSimplexTableau, NEGATIVE_VAR_COLUMN_LABEL_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathOptimizationLinearSimplexTableau, serialVersionUID, jlong)

__attribute__((unused)) static OrgApacheCommonsMathOptimizationLinearLinearConstraint *OrgApacheCommonsMathOptimizationLinearSimplexTableau_normalizeWithOrgApacheCommonsMathOptimizationLinearLinearConstraint_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, OrgApacheCommonsMathOptimizationLinearLinearConstraint *constraint);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, OrgApacheCommonsMathOptimizationLinearRelationshipEnum *relationship);

__attribute__((unused)) static void OrgApacheCommonsMathOptimizationLinearSimplexTableau_copyArrayWithDoubleArray_withDoubleArray_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, IOSDoubleArray *src, IOSDoubleArray *dest);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getHeight(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jdouble OrgApacheCommonsMathOptimizationLinearSimplexTableau_getEntryWithInt_withInt_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, jint row, jint column);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getSlackVariableOffset(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getArtificialVariableOffset(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getRhsOffset(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getOriginalNumDecisionVariables(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumSlackVariables(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

__attribute__((unused)) static jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumArtificialVariables(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self);

@implementation OrgApacheCommonsMathOptimizationLinearSimplexTableau

- (instancetype)initWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction:(OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *)f
                                                               withJavaUtilCollection:(id<JavaUtilCollection>)constraints
                                     withOrgApacheCommonsMathOptimizationGoalTypeEnum:(OrgApacheCommonsMathOptimizationGoalTypeEnum *)goalType
                                                                          withBoolean:(jboolean)restrictToNonNegative
                                                                           withDouble:(jdouble)epsilon {
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_initWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction_withJavaUtilCollection_withOrgApacheCommonsMathOptimizationGoalTypeEnum_withBoolean_withDouble_(self, f, constraints, goalType, restrictToNonNegative, epsilon);
  return self;
}

- (void)initializeColumnLabels {
  if (OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) == 2) {
    [((id<JavaUtilList>) nil_chk(columnLabels_)) addWithId:@"W"];
  }
  [((id<JavaUtilList>) nil_chk(columnLabels_)) addWithId:@"Z"];
  for (jint i = 0; i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getOriginalNumDecisionVariables(self); i++) {
    [columnLabels_ addWithId:JreStrcat("CI", 'x', i)];
  }
  if (!restrictToNonNegative_) {
    [columnLabels_ addWithId:OrgApacheCommonsMathOptimizationLinearSimplexTableau_NEGATIVE_VAR_COLUMN_LABEL_];
  }
  for (jint i = 0; i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumSlackVariables(self); i++) {
    [columnLabels_ addWithId:JreStrcat("CI", 's', i)];
  }
  for (jint i = 0; i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumArtificialVariables(self); i++) {
    [columnLabels_ addWithId:JreStrcat("CI", 'a', i)];
  }
  [columnLabels_ addWithId:@"RHS"];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)createTableauWithBoolean:(jboolean)maximize {
  jint width = numDecisionVariables_ + numSlackVariables_ + numArtificialVariables_ + OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) + 1;
  jint height = [((id<JavaUtilList>) nil_chk(constraints_)) size] + OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self);
  OrgApacheCommonsMathLinearArray2DRowRealMatrix *matrix = [new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithInt_withInt_(height, width) autorelease];
  if (OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) == 2) {
    [matrix setEntryWithInt:0 withInt:0 withDouble:-1];
  }
  jint zIndex = (OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) == 1) ? 0 : 1;
  [matrix setEntryWithInt:zIndex withInt:zIndex withDouble:maximize ? 1 : -1];
  id<OrgApacheCommonsMathLinearRealVector> objectiveCoefficients = maximize ? [((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f_)) getCoefficients])) mapMultiplyWithDouble:-1] : [((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f_)) getCoefficients];
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_copyArrayWithDoubleArray_withDoubleArray_(self, [objectiveCoefficients getData], IOSObjectArray_Get(nil_chk([matrix getDataRef]), zIndex));
  [matrix setEntryWithInt:zIndex withInt:width - 1 withDouble:maximize ? [((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f_)) getConstantTerm] : -1 * [((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f_)) getConstantTerm]];
  if (!restrictToNonNegative_) {
    [matrix setEntryWithInt:zIndex withInt:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getSlackVariableOffset(self) - 1 withDouble:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getInvertedCoeffiecientSumWithOrgApacheCommonsMathLinearRealVector_(objectiveCoefficients)];
  }
  jint slackVar = 0;
  jint artificialVar = 0;
  for (jint i = 0; i < [constraints_ size]; i++) {
    OrgApacheCommonsMathOptimizationLinearLinearConstraint *constraint = [constraints_ getWithInt:i];
    jint row = OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) + i;
    OrgApacheCommonsMathOptimizationLinearSimplexTableau_copyArrayWithDoubleArray_withDoubleArray_(self, [((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([((OrgApacheCommonsMathOptimizationLinearLinearConstraint *) nil_chk(constraint)) getCoefficients])) getData], IOSObjectArray_Get(nil_chk([matrix getDataRef]), row));
    if (!restrictToNonNegative_) {
      [matrix setEntryWithInt:row withInt:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getSlackVariableOffset(self) - 1 withDouble:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getInvertedCoeffiecientSumWithOrgApacheCommonsMathLinearRealVector_([constraint getCoefficients])];
    }
    [matrix setEntryWithInt:row withInt:width - 1 withDouble:[constraint getValue]];
    if ([constraint getRelationship] == OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_LEQ()) {
      [matrix setEntryWithInt:row withInt:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getSlackVariableOffset(self) + slackVar++ withDouble:1];
    }
    else if ([constraint getRelationship] == OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_GEQ()) {
      [matrix setEntryWithInt:row withInt:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getSlackVariableOffset(self) + slackVar++ withDouble:-1];
    }
    if (([constraint getRelationship] == OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_EQ()) || ([constraint getRelationship] == OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_GEQ())) {
      [matrix setEntryWithInt:0 withInt:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getArtificialVariableOffset(self) + artificialVar withDouble:1];
      [matrix setEntryWithInt:row withInt:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getArtificialVariableOffset(self) + artificialVar++ withDouble:1];
      [matrix setRowVectorWithInt:0 withOrgApacheCommonsMathLinearRealVector:[((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([matrix getRowVectorWithInt:0])) subtractWithOrgApacheCommonsMathLinearRealVector:[matrix getRowVectorWithInt:row]]];
    }
  }
  return matrix;
}

- (id<JavaUtilList>)normalizeConstraintsWithJavaUtilCollection:(id<JavaUtilCollection>)originalConstraints {
  id<JavaUtilList> normalized = [new_JavaUtilArrayList_init() autorelease];
  for (OrgApacheCommonsMathOptimizationLinearLinearConstraint * __strong constraint in nil_chk(originalConstraints)) {
    [normalized addWithId:OrgApacheCommonsMathOptimizationLinearSimplexTableau_normalizeWithOrgApacheCommonsMathOptimizationLinearLinearConstraint_(self, constraint)];
  }
  return normalized;
}

- (OrgApacheCommonsMathOptimizationLinearLinearConstraint *)normalizeWithOrgApacheCommonsMathOptimizationLinearLinearConstraint:(OrgApacheCommonsMathOptimizationLinearLinearConstraint *)constraint {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_normalizeWithOrgApacheCommonsMathOptimizationLinearLinearConstraint_(self, constraint);
}

- (jint)getNumObjectiveFunctions {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self);
}

- (jint)getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum:(OrgApacheCommonsMathOptimizationLinearRelationshipEnum *)relationship {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum_(self, relationship);
}

+ (jdouble)getInvertedCoeffiecientSumWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)coefficients {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getInvertedCoeffiecientSumWithOrgApacheCommonsMathLinearRealVector_(coefficients);
}

- (JavaLangInteger *)getBasicRowWithInt:(jint)col {
  JavaLangInteger *row = nil;
  for (jint i = 0; i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getHeight(self); i++) {
    if (OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withDouble_(OrgApacheCommonsMathOptimizationLinearSimplexTableau_getEntryWithInt_withInt_(self, i, col), 1.0, epsilon_) && (row == nil)) {
      row = JavaLangInteger_valueOfWithInt_(i);
    }
    else if (!OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withDouble_(OrgApacheCommonsMathOptimizationLinearSimplexTableau_getEntryWithInt_withInt_(self, i, col), 0.0, epsilon_)) {
      return nil;
    }
  }
  return row;
}

- (void)dropPhase1Objective {
  if (OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) == 1) {
    return;
  }
  id<JavaUtilList> columnsToDrop = [new_JavaUtilArrayList_init() autorelease];
  [columnsToDrop addWithId:JavaLangInteger_valueOfWithInt_(0)];
  for (jint i = OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self); i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getArtificialVariableOffset(self); i++) {
    if (OrgApacheCommonsMathUtilMathUtils_compareToWithDouble_withDouble_withDouble_([((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) getEntryWithInt:0 withInt:i], 0, epsilon_) > 0) {
      [columnsToDrop addWithId:JavaLangInteger_valueOfWithInt_(i)];
    }
  }
  for (jint i = 0; i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumArtificialVariables(self); i++) {
    jint col = i + OrgApacheCommonsMathOptimizationLinearSimplexTableau_getArtificialVariableOffset(self);
    if ([self getBasicRowWithInt:col] == nil) {
      [columnsToDrop addWithId:JavaLangInteger_valueOfWithInt_(col)];
    }
  }
  IOSObjectArray *matrix = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ OrgApacheCommonsMathOptimizationLinearSimplexTableau_getHeight(self) - 1, OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(self) - [columnsToDrop size] }];
  for (jint i = 1; i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getHeight(self); i++) {
    jint col = 0;
    for (jint j = 0; j < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(self); j++) {
      if (![columnsToDrop containsWithId:JavaLangInteger_valueOfWithInt_(j)]) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(matrix, i - 1)), col++) = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) getEntryWithInt:i withInt:j];
      }
    }
  }
  for (jint i = [columnsToDrop size] - 1; i >= 0; i--) {
    [((id<JavaUtilList>) nil_chk(columnLabels_)) removeWithInt:[((JavaLangInteger *) nil_chk([columnsToDrop getWithInt:i])) intValue]];
  }
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_setAndConsume_tableau_(self, new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_(matrix));
  self->numArtificialVariables_ = 0;
}

- (void)copyArrayWithDoubleArray:(IOSDoubleArray *)src
                 withDoubleArray:(IOSDoubleArray *)dest {
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_copyArrayWithDoubleArray_withDoubleArray_(self, src, dest);
}

- (jboolean)isOptimal {
  for (jint i = OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self); i < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(self) - 1; i++) {
    if (OrgApacheCommonsMathUtilMathUtils_compareToWithDouble_withDouble_withDouble_([((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) getEntryWithInt:0 withInt:i], 0, epsilon_) < 0) {
      return NO;
    }
  }
  return YES;
}

- (OrgApacheCommonsMathOptimizationRealPointValuePair *)getSolution {
  jint negativeVarColumn = [((id<JavaUtilList>) nil_chk(columnLabels_)) indexOfWithId:OrgApacheCommonsMathOptimizationLinearSimplexTableau_NEGATIVE_VAR_COLUMN_LABEL_];
  JavaLangInteger *negativeVarBasicRow = negativeVarColumn > 0 ? [self getBasicRowWithInt:negativeVarColumn] : nil;
  jdouble mostNegative = negativeVarBasicRow == nil ? 0 : OrgApacheCommonsMathOptimizationLinearSimplexTableau_getEntryWithInt_withInt_(self, [negativeVarBasicRow intValue], OrgApacheCommonsMathOptimizationLinearSimplexTableau_getRhsOffset(self));
  id<JavaUtilSet> basicRows = [new_JavaUtilHashSet_init() autorelease];
  IOSDoubleArray *coefficients = [IOSDoubleArray arrayWithLength:OrgApacheCommonsMathOptimizationLinearSimplexTableau_getOriginalNumDecisionVariables(self)];
  for (jint i = 0; i < coefficients->size_; i++) {
    jint colIndex = [columnLabels_ indexOfWithId:JreStrcat("CI", 'x', i)];
    if (colIndex < 0) {
      *IOSDoubleArray_GetRef(coefficients, i) = 0;
      continue;
    }
    JavaLangInteger *basicRow = [self getBasicRowWithInt:colIndex];
    if ([basicRows containsWithId:basicRow]) {
      *IOSDoubleArray_GetRef(coefficients, i) = 0;
    }
    else {
      [basicRows addWithId:basicRow];
      *IOSDoubleArray_GetRef(coefficients, i) = (basicRow == nil ? 0 : OrgApacheCommonsMathOptimizationLinearSimplexTableau_getEntryWithInt_withInt_(self, [basicRow intValue], OrgApacheCommonsMathOptimizationLinearSimplexTableau_getRhsOffset(self))) - (restrictToNonNegative_ ? 0 : mostNegative);
    }
  }
  return [new_OrgApacheCommonsMathOptimizationRealPointValuePair_initWithDoubleArray_withDouble_(coefficients, [((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f_)) getValueWithDoubleArray:coefficients]) autorelease];
}

- (void)divideRowWithInt:(jint)dividendRow
              withDouble:(jdouble)divisor {
  for (jint j = 0; j < OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(self); j++) {
    [tableau_ setEntryWithInt:dividendRow withInt:j withDouble:[((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) getEntryWithInt:dividendRow withInt:j] / divisor];
  }
}

- (void)subtractRowWithInt:(jint)minuendRow
                   withInt:(jint)subtrahendRow
                withDouble:(jdouble)multiple {
  [tableau_ setRowVectorWithInt:minuendRow withOrgApacheCommonsMathLinearRealVector:[((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) getRowVectorWithInt:minuendRow])) subtractWithOrgApacheCommonsMathLinearRealVector:[((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([tableau_ getRowVectorWithInt:subtrahendRow])) mapMultiplyWithDouble:multiple]]];
}

- (jint)getWidth {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(self);
}

- (jint)getHeight {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getHeight(self);
}

- (jdouble)getEntryWithInt:(jint)row
                   withInt:(jint)column {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getEntryWithInt_withInt_(self, row, column);
}

- (void)setEntryWithInt:(jint)row
                withInt:(jint)column
             withDouble:(jdouble)value {
  [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) setEntryWithInt:row withInt:column withDouble:value];
}

- (jint)getSlackVariableOffset {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getSlackVariableOffset(self);
}

- (jint)getArtificialVariableOffset {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getArtificialVariableOffset(self);
}

- (jint)getRhsOffset {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getRhsOffset(self);
}

- (jint)getNumDecisionVariables {
  return numDecisionVariables_;
}

- (jint)getOriginalNumDecisionVariables {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getOriginalNumDecisionVariables(self);
}

- (jint)getNumSlackVariables {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumSlackVariables(self);
}

- (jint)getNumArtificialVariables {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumArtificialVariables(self);
}

- (IOSObjectArray *)getData {
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) getData];
}

- (jboolean)isEqual:(id)other {
  if (self == other) {
    return YES;
  }
  if ([other isKindOfClass:[OrgApacheCommonsMathOptimizationLinearSimplexTableau class]]) {
    OrgApacheCommonsMathOptimizationLinearSimplexTableau *rhs = (OrgApacheCommonsMathOptimizationLinearSimplexTableau *) check_class_cast(other, [OrgApacheCommonsMathOptimizationLinearSimplexTableau class]);
    return (restrictToNonNegative_ == ((OrgApacheCommonsMathOptimizationLinearSimplexTableau *) nil_chk(rhs))->restrictToNonNegative_) && (numDecisionVariables_ == rhs->numDecisionVariables_) && (numSlackVariables_ == rhs->numSlackVariables_) && (numArtificialVariables_ == rhs->numArtificialVariables_) && (epsilon_ == rhs->epsilon_) && [((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f_)) isEqual:rhs->f_] && [((id<JavaUtilList>) nil_chk(constraints_)) isEqual:rhs->constraints_] && [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) isEqual:rhs->tableau_];
  }
  return NO;
}

- (NSUInteger)hash {
  return ((jint) [JavaLangBoolean_valueOfWithBoolean_(restrictToNonNegative_) hash]) ^ numDecisionVariables_ ^ numSlackVariables_ ^ numArtificialVariables_ ^ ((jint) [JavaLangDouble_valueOfWithDouble_(epsilon_) hash]) ^ ((jint) [((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f_)) hash]) ^ ((jint) [((id<JavaUtilList>) nil_chk(constraints_)) hash]) ^ ((jint) [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(tableau_)) hash]);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos {
  [((JavaIoObjectOutputStream *) nil_chk(oos)) defaultWriteObject];
  OrgApacheCommonsMathLinearMatrixUtils_serializeRealMatrixWithOrgApacheCommonsMathLinearRealMatrix_withJavaIoObjectOutputStream_(tableau_, oos);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)ois {
  [((JavaIoObjectInputStream *) nil_chk(ois)) defaultReadObject];
  OrgApacheCommonsMathLinearMatrixUtils_deserializeRealMatrixWithId_withNSString_withJavaIoObjectInputStream_(self, @"tableau", ois);
}

- (void)dealloc {
  RELEASE_(f_);
  RELEASE_(constraints_);
  RELEASE_(columnLabels_);
  RELEASE_(tableau_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction:withJavaUtilCollection:withOrgApacheCommonsMathOptimizationGoalTypeEnum:withBoolean:withDouble:", "SimplexTableau", NULL, 0x0, NULL, NULL },
    { "initializeColumnLabels", NULL, "V", 0x4, NULL, NULL },
    { "createTableauWithBoolean:", "createTableau", "Lorg.apache.commons.math.linear.RealMatrix;", 0x4, NULL, NULL },
    { "normalizeConstraintsWithJavaUtilCollection:", "normalizeConstraints", "Ljava.util.List;", 0x1, NULL, NULL },
    { "normalizeWithOrgApacheCommonsMathOptimizationLinearLinearConstraint:", "normalize", "Lorg.apache.commons.math.optimization.linear.LinearConstraint;", 0x2, NULL, NULL },
    { "getNumObjectiveFunctions", NULL, "I", 0x14, NULL, NULL },
    { "getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum:", "getConstraintTypeCounts", "I", 0x2, NULL, NULL },
    { "getInvertedCoeffiecientSumWithOrgApacheCommonsMathLinearRealVector:", "getInvertedCoeffiecientSum", "D", 0xc, NULL, NULL },
    { "getBasicRowWithInt:", "getBasicRow", "Ljava.lang.Integer;", 0x4, NULL, NULL },
    { "dropPhase1Objective", NULL, "V", 0x4, NULL, NULL },
    { "copyArrayWithDoubleArray:withDoubleArray:", "copyArray", "V", 0x2, NULL, NULL },
    { "isOptimal", NULL, "Z", 0x0, NULL, NULL },
    { "getSolution", NULL, "Lorg.apache.commons.math.optimization.RealPointValuePair;", 0x4, NULL, NULL },
    { "divideRowWithInt:withDouble:", "divideRow", "V", 0x4, NULL, NULL },
    { "subtractRowWithInt:withInt:withDouble:", "subtractRow", "V", 0x4, NULL, NULL },
    { "getWidth", NULL, "I", 0x14, NULL, NULL },
    { "getHeight", NULL, "I", 0x14, NULL, NULL },
    { "getEntryWithInt:withInt:", "getEntry", "D", 0x14, NULL, NULL },
    { "setEntryWithInt:withInt:withDouble:", "setEntry", "V", 0x14, NULL, NULL },
    { "getSlackVariableOffset", NULL, "I", 0x14, NULL, NULL },
    { "getArtificialVariableOffset", NULL, "I", 0x14, NULL, NULL },
    { "getRhsOffset", NULL, "I", 0x14, NULL, NULL },
    { "getNumDecisionVariables", NULL, "I", 0x14, NULL, NULL },
    { "getOriginalNumDecisionVariables", NULL, "I", 0x14, NULL, NULL },
    { "getNumSlackVariables", NULL, "I", 0x14, NULL, NULL },
    { "getNumArtificialVariables", NULL, "I", 0x14, NULL, NULL },
    { "getData", NULL, "[[D", 0x14, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "writeObjectWithJavaIoObjectOutputStream:", "writeObject", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.lang.ClassNotFoundException;Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NEGATIVE_VAR_COLUMN_LABEL_", NULL, 0x1a, "Ljava.lang.String;", &OrgApacheCommonsMathOptimizationLinearSimplexTableau_NEGATIVE_VAR_COLUMN_LABEL_, NULL,  },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathOptimizationLinearSimplexTableau_serialVersionUID },
    { "f_", NULL, 0x12, "Lorg.apache.commons.math.optimization.linear.LinearObjectiveFunction;", NULL, NULL,  },
    { "constraints_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/commons/math/optimization/linear/LinearConstraint;>;",  },
    { "restrictToNonNegative_", NULL, 0x12, "Z", NULL, NULL,  },
    { "columnLabels_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/String;>;",  },
    { "tableau_", NULL, 0x82, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "numDecisionVariables_", NULL, 0x12, "I", NULL, NULL,  },
    { "numSlackVariables_", NULL, 0x12, "I", NULL, NULL,  },
    { "numArtificialVariables_", NULL, 0x2, "I", NULL, NULL,  },
    { "epsilon_", NULL, 0x12, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOptimizationLinearSimplexTableau = { 2, "SimplexTableau", "org.apache.commons.math.optimization.linear", NULL, 0x0, 31, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathOptimizationLinearSimplexTableau;
}

@end

void OrgApacheCommonsMathOptimizationLinearSimplexTableau_initWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction_withJavaUtilCollection_withOrgApacheCommonsMathOptimizationGoalTypeEnum_withBoolean_withDouble_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *f, id<JavaUtilCollection> constraints, OrgApacheCommonsMathOptimizationGoalTypeEnum *goalType, jboolean restrictToNonNegative, jdouble epsilon) {
  NSObject_init(self);
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_setAndConsume_columnLabels_(self, new_JavaUtilArrayList_init());
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_set_f_(self, f);
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_set_constraints_(self, [self normalizeConstraintsWithJavaUtilCollection:constraints]);
  self->restrictToNonNegative_ = restrictToNonNegative;
  self->epsilon_ = epsilon;
  self->numDecisionVariables_ = [((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(f)) getCoefficients])) getDimension] + (restrictToNonNegative ? 0 : 1);
  self->numSlackVariables_ = OrgApacheCommonsMathOptimizationLinearSimplexTableau_getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum_(self, OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_LEQ()) + OrgApacheCommonsMathOptimizationLinearSimplexTableau_getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum_(self, OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_GEQ());
  self->numArtificialVariables_ = OrgApacheCommonsMathOptimizationLinearSimplexTableau_getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum_(self, OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_EQ()) + OrgApacheCommonsMathOptimizationLinearSimplexTableau_getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum_(self, OrgApacheCommonsMathOptimizationLinearRelationshipEnum_get_GEQ());
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_set_tableau_(self, [self createTableauWithBoolean:goalType == OrgApacheCommonsMathOptimizationGoalTypeEnum_get_MAXIMIZE()]);
  [self initializeColumnLabels];
}

OrgApacheCommonsMathOptimizationLinearSimplexTableau *new_OrgApacheCommonsMathOptimizationLinearSimplexTableau_initWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction_withJavaUtilCollection_withOrgApacheCommonsMathOptimizationGoalTypeEnum_withBoolean_withDouble_(OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *f, id<JavaUtilCollection> constraints, OrgApacheCommonsMathOptimizationGoalTypeEnum *goalType, jboolean restrictToNonNegative, jdouble epsilon) {
  OrgApacheCommonsMathOptimizationLinearSimplexTableau *self = [OrgApacheCommonsMathOptimizationLinearSimplexTableau alloc];
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_initWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction_withJavaUtilCollection_withOrgApacheCommonsMathOptimizationGoalTypeEnum_withBoolean_withDouble_(self, f, constraints, goalType, restrictToNonNegative, epsilon);
  return self;
}

OrgApacheCommonsMathOptimizationLinearLinearConstraint *OrgApacheCommonsMathOptimizationLinearSimplexTableau_normalizeWithOrgApacheCommonsMathOptimizationLinearLinearConstraint_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, OrgApacheCommonsMathOptimizationLinearLinearConstraint *constraint) {
  if ([((OrgApacheCommonsMathOptimizationLinearLinearConstraint *) nil_chk(constraint)) getValue] < 0) {
    return [new_OrgApacheCommonsMathOptimizationLinearLinearConstraint_initWithOrgApacheCommonsMathLinearRealVector_withOrgApacheCommonsMathOptimizationLinearRelationshipEnum_withDouble_([((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([constraint getCoefficients])) mapMultiplyWithDouble:-1], [((OrgApacheCommonsMathOptimizationLinearRelationshipEnum *) nil_chk([constraint getRelationship])) oppositeRelationship], -1 * [constraint getValue]) autorelease];
  }
  return [new_OrgApacheCommonsMathOptimizationLinearLinearConstraint_initWithOrgApacheCommonsMathLinearRealVector_withOrgApacheCommonsMathOptimizationLinearRelationshipEnum_withDouble_([constraint getCoefficients], [constraint getRelationship], [constraint getValue]) autorelease];
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return self->numArtificialVariables_ > 0 ? 2 : 1;
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getConstraintTypeCountsWithOrgApacheCommonsMathOptimizationLinearRelationshipEnum_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, OrgApacheCommonsMathOptimizationLinearRelationshipEnum *relationship) {
  jint count = 0;
  for (OrgApacheCommonsMathOptimizationLinearLinearConstraint * __strong constraint in nil_chk(self->constraints_)) {
    if ([((OrgApacheCommonsMathOptimizationLinearLinearConstraint *) nil_chk(constraint)) getRelationship] == relationship) {
      ++count;
    }
  }
  return count;
}

jdouble OrgApacheCommonsMathOptimizationLinearSimplexTableau_getInvertedCoeffiecientSumWithOrgApacheCommonsMathLinearRealVector_(id<OrgApacheCommonsMathLinearRealVector> coefficients) {
  OrgApacheCommonsMathOptimizationLinearSimplexTableau_initialize();
  jdouble sum = 0;
  {
    IOSDoubleArray *a__ = [((id<OrgApacheCommonsMathLinearRealVector>) nil_chk(coefficients)) getData];
    jdouble const *b__ = ((IOSDoubleArray *) nil_chk(a__))->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble coefficient = *b__++;
      sum -= coefficient;
    }
  }
  return sum;
}

void OrgApacheCommonsMathOptimizationLinearSimplexTableau_copyArrayWithDoubleArray_withDoubleArray_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, IOSDoubleArray *src, IOSDoubleArray *dest) {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(src, 0, dest, OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self), ((IOSDoubleArray *) nil_chk(src))->size_);
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(self->tableau_)) getColumnDimension];
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getHeight(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(self->tableau_)) getRowDimension];
}

jdouble OrgApacheCommonsMathOptimizationLinearSimplexTableau_getEntryWithInt_withInt_(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self, jint row, jint column) {
  return [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(self->tableau_)) getEntryWithInt:row withInt:column];
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getSlackVariableOffset(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) + self->numDecisionVariables_;
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getArtificialVariableOffset(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumObjectiveFunctions(self) + self->numDecisionVariables_ + self->numSlackVariables_;
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getRhsOffset(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return OrgApacheCommonsMathOptimizationLinearSimplexTableau_getWidth(self) - 1;
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getOriginalNumDecisionVariables(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return [((id<OrgApacheCommonsMathLinearRealVector>) nil_chk([((OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *) nil_chk(self->f_)) getCoefficients])) getDimension];
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumSlackVariables(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return self->numSlackVariables_;
}

jint OrgApacheCommonsMathOptimizationLinearSimplexTableau_getNumArtificialVariables(OrgApacheCommonsMathOptimizationLinearSimplexTableau *self) {
  return self->numArtificialVariables_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOptimizationLinearSimplexTableau)
