//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "org/apache/commons/math/MaxIterationsExceededException.h"
#include "org/apache/commons/math/optimization/GoalType.h"
#include "org/apache/commons/math/optimization/OptimizationException.h"
#include "org/apache/commons/math/optimization/RealPointValuePair.h"
#include "org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.h"
#include "org/apache/commons/math/optimization/linear/LinearObjectiveFunction.h"

@interface OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer () {
 @public
  jint maxIterations_;
  jint iterations_;
}

@end

@implementation OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer

- (instancetype)init {
  OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer_init(self);
  return self;
}

- (void)setMaxIterationsWithInt:(jint)maxIterations {
  self->maxIterations_ = maxIterations;
}

- (jint)getMaxIterations {
  return maxIterations_;
}

- (jint)getIterations {
  return iterations_;
}

- (void)incrementIterationsCounter {
  if (++iterations_ > maxIterations_) {
    @throw [new_OrgApacheCommonsMathOptimizationOptimizationException_initWithJavaLangThrowable_([new_OrgApacheCommonsMathMaxIterationsExceededException_initWithInt_(maxIterations_) autorelease]) autorelease];
  }
}

- (OrgApacheCommonsMathOptimizationRealPointValuePair *)optimizeWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction:(OrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction *)f
                                                                                                           withJavaUtilCollection:(id<JavaUtilCollection>)constraints
                                                                                 withOrgApacheCommonsMathOptimizationGoalTypeEnum:(OrgApacheCommonsMathOptimizationGoalTypeEnum *)goalType
                                                                                                                      withBoolean:(jboolean)restrictToNonNegative {
  OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer_set_function_(self, f);
  OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer_set_linearConstraints_(self, constraints);
  OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer_set_goal_(self, goalType);
  self->nonNegative_ = restrictToNonNegative;
  iterations_ = 0;
  return [self doOptimize];
}

- (OrgApacheCommonsMathOptimizationRealPointValuePair *)doOptimize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(function_);
  RELEASE_(linearConstraints_);
  RELEASE_(goal_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractLinearOptimizer", NULL, 0x4, NULL, NULL },
    { "setMaxIterationsWithInt:", "setMaxIterations", "V", 0x1, NULL, NULL },
    { "getMaxIterations", NULL, "I", 0x1, NULL, NULL },
    { "getIterations", NULL, "I", 0x1, NULL, NULL },
    { "incrementIterationsCounter", NULL, "V", 0x4, "Lorg.apache.commons.math.optimization.OptimizationException;", NULL },
    { "optimizeWithOrgApacheCommonsMathOptimizationLinearLinearObjectiveFunction:withJavaUtilCollection:withOrgApacheCommonsMathOptimizationGoalTypeEnum:withBoolean:", "optimize", "Lorg.apache.commons.math.optimization.RealPointValuePair;", 0x1, "Lorg.apache.commons.math.optimization.OptimizationException;", NULL },
    { "doOptimize", NULL, "Lorg.apache.commons.math.optimization.RealPointValuePair;", 0x404, "Lorg.apache.commons.math.optimization.OptimizationException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_MAX_ITERATIONS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer_DEFAULT_MAX_ITERATIONS },
    { "function_", NULL, 0x4, "Lorg.apache.commons.math.optimization.linear.LinearObjectiveFunction;", NULL, NULL,  },
    { "linearConstraints_", NULL, 0x4, "Ljava.util.Collection;", NULL, "Ljava/util/Collection<Lorg/apache/commons/math/optimization/linear/LinearConstraint;>;",  },
    { "goal_", NULL, 0x4, "Lorg.apache.commons.math.optimization.GoalType;", NULL, NULL,  },
    { "nonNegative_", NULL, 0x4, "Z", NULL, NULL,  },
    { "maxIterations_", NULL, 0x2, "I", NULL, NULL,  },
    { "iterations_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer = { 2, "AbstractLinearOptimizer", "org.apache.commons.math.optimization.linear", NULL, 0x401, 7, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer;
}

@end

void OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer_init(OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer *self) {
  NSObject_init(self);
  [self setMaxIterationsWithInt:OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer_DEFAULT_MAX_ITERATIONS];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOptimizationLinearAbstractLinearOptimizer)
