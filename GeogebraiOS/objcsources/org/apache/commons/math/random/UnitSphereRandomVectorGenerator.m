//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/random/UnitSphereRandomVectorGenerator.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/commons/math/random/MersenneTwister.h"
#include "org/apache/commons/math/random/RandomGenerator.h"
#include "org/apache/commons/math/random/UnitSphereRandomVectorGenerator.h"
#include "org/apache/commons/math/util/FastMath.h"

@interface OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator () {
 @public
  id<OrgApacheCommonsMathRandomRandomGenerator> rand_;
  jint dimension_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator, rand_, id<OrgApacheCommonsMathRandomRandomGenerator>)

@implementation OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator

- (instancetype)initWithInt:(jint)dimension
withOrgApacheCommonsMathRandomRandomGenerator:(id<OrgApacheCommonsMathRandomRandomGenerator>)rand {
  OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_withOrgApacheCommonsMathRandomRandomGenerator_(self, dimension, rand);
  return self;
}

- (instancetype)initWithInt:(jint)dimension {
  OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_(self, dimension);
  return self;
}

- (IOSDoubleArray *)nextVector {
  IOSDoubleArray *v = [IOSDoubleArray newArrayWithLength:dimension_];
  jdouble normSq;
  do {
    normSq = 0;
    for (jint i = 0; i < dimension_; i++) {
      jdouble comp = 2 * [((id<OrgApacheCommonsMathRandomRandomGenerator>) nil_chk(rand_)) nextDouble] - 1;
      *IOSDoubleArray_GetRef(v, i) = comp;
      normSq += comp * comp;
    }
  }
  while (normSq > 1);
  jdouble f = 1 / OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(normSq);
  for (jint i = 0; i < dimension_; i++) {
    *IOSDoubleArray_GetRef(v, i) *= f;
  }
  return v;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withOrgApacheCommonsMathRandomRandomGenerator:", "UnitSphereRandomVectorGenerator", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "UnitSphereRandomVectorGenerator", NULL, 0x1, NULL, NULL },
    { "nextVector", NULL, "[D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rand_", NULL, 0x12, "Lorg.apache.commons.math.random.RandomGenerator;", NULL, NULL,  },
    { "dimension_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator = { 2, "UnitSphereRandomVectorGenerator", "org.apache.commons.math.random", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator;
}

@end

void OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_withOrgApacheCommonsMathRandomRandomGenerator_(OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator *self, jint dimension, id<OrgApacheCommonsMathRandomRandomGenerator> rand) {
  (void) NSObject_init(self);
  self->dimension_ = dimension;
  self->rand_ = rand;
}

OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator *new_OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_withOrgApacheCommonsMathRandomRandomGenerator_(jint dimension, id<OrgApacheCommonsMathRandomRandomGenerator> rand) {
  OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator *self = [OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator alloc];
  OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_withOrgApacheCommonsMathRandomRandomGenerator_(self, dimension, rand);
  return self;
}

void OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_(OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator *self, jint dimension) {
  (void) OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_withOrgApacheCommonsMathRandomRandomGenerator_(self, dimension, new_OrgApacheCommonsMathRandomMersenneTwister_init());
}

OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator *new_OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_(jint dimension) {
  OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator *self = [OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator alloc];
  OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator_initWithInt_(self, dimension);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathRandomUnitSphereRandomVectorGenerator)
