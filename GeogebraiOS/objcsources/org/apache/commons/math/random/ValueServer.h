//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/random/ValueServer.java
//

#ifndef _OrgApacheCommonsMathRandomValueServer_H_
#define _OrgApacheCommonsMathRandomValueServer_H_

#include "J2ObjC_header.h"

@class IOSDoubleArray;
@class JavaNetURL;
@protocol OrgApacheCommonsMathRandomEmpiricalDistribution;
@protocol OrgApacheCommonsMathRandomRandomData;

#define OrgApacheCommonsMathRandomValueServer_DIGEST_MODE 0
#define OrgApacheCommonsMathRandomValueServer_REPLAY_MODE 1
#define OrgApacheCommonsMathRandomValueServer_UNIFORM_MODE 2
#define OrgApacheCommonsMathRandomValueServer_EXPONENTIAL_MODE 3
#define OrgApacheCommonsMathRandomValueServer_GAUSSIAN_MODE 4
#define OrgApacheCommonsMathRandomValueServer_CONSTANT_MODE 5

@interface OrgApacheCommonsMathRandomValueServer : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheCommonsMathRandomRandomData:(id<OrgApacheCommonsMathRandomRandomData>)randomData;

- (void)closeReplayFile;

- (void)computeDistribution;

- (void)computeDistributionWithInt:(jint)binCount;

- (void)fillWithDoubleArray:(IOSDoubleArray *)values;

- (IOSDoubleArray *)fillWithInt:(jint)length;

- (id<OrgApacheCommonsMathRandomEmpiricalDistribution>)getEmpiricalDistribution;

- (jint)getMode;

- (jdouble)getMu;

- (jdouble)getNext;

- (jdouble)getSigma;

- (JavaNetURL *)getValuesFileURL;

- (void)resetReplayFile;

- (void)setModeWithInt:(jint)mode;

- (void)setMuWithDouble:(jdouble)mu;

- (void)setSigmaWithDouble:(jdouble)sigma;

- (void)setValuesFileURLWithNSString:(NSString *)url;

- (void)setValuesFileURLWithJavaNetURL:(JavaNetURL *)url;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathRandomValueServer)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathRandomValueServer, DIGEST_MODE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathRandomValueServer, REPLAY_MODE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathRandomValueServer, UNIFORM_MODE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathRandomValueServer, EXPONENTIAL_MODE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathRandomValueServer, GAUSSIAN_MODE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathRandomValueServer, CONSTANT_MODE, jint)

FOUNDATION_EXPORT void OrgApacheCommonsMathRandomValueServer_init(OrgApacheCommonsMathRandomValueServer *self);

FOUNDATION_EXPORT OrgApacheCommonsMathRandomValueServer *new_OrgApacheCommonsMathRandomValueServer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathRandomValueServer_initWithOrgApacheCommonsMathRandomRandomData_(OrgApacheCommonsMathRandomValueServer *self, id<OrgApacheCommonsMathRandomRandomData> randomData);

FOUNDATION_EXPORT OrgApacheCommonsMathRandomValueServer *new_OrgApacheCommonsMathRandomValueServer_initWithOrgApacheCommonsMathRandomRandomData_(id<OrgApacheCommonsMathRandomRandomData> randomData) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathRandomValueServer)

#endif // _OrgApacheCommonsMathRandomValueServer_H_
