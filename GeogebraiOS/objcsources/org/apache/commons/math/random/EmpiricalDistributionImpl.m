//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/random/EmpiricalDistributionImpl.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedReader.h"
#include "java/io/EOFException.h"
#include "java/io/File.h"
#include "java/io/FileReader.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/random/EmpiricalDistributionImpl.h"
#include "org/apache/commons/math/random/RandomData.h"
#include "org/apache/commons/math/random/RandomDataImpl.h"
#include "org/apache/commons/math/stat/descriptive/StatisticalSummary.h"
#include "org/apache/commons/math/stat/descriptive/SummaryStatistics.h"
#include "org/apache/commons/math/util/FastMath.h"
#include "org/geogebra/common/util/StringUtil.h"

#define OrgApacheCommonsMathRandomEmpiricalDistributionImpl_serialVersionUID 5729073523949762654LL

@interface OrgApacheCommonsMathRandomEmpiricalDistributionImpl () {
 @public
  id<JavaUtilList> binStats_;
  OrgApacheCommonsMathStatDescriptiveSummaryStatistics *sampleStats_;
  jdouble max_;
  jdouble min_;
  jdouble delta_;
  jint binCount_;
  jboolean loaded_;
  IOSDoubleArray *upperBounds_;
  id<OrgApacheCommonsMathRandomRandomData> randomData_;
}

- (void)fillBinStatsWithId:(id)inArg;

- (jint)findBinWithDouble:(jdouble)value;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl, binStats_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl, sampleStats_, OrgApacheCommonsMathStatDescriptiveSummaryStatistics *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl, upperBounds_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl, randomData_, id<OrgApacheCommonsMathRandomRandomData>)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_fillBinStatsWithId_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self, id inArg);

__attribute__((unused)) static jint OrgApacheCommonsMathRandomEmpiricalDistributionImpl_findBinWithDouble_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self, jdouble value);

@interface OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter : NSObject

- (void)computeBinStats;

- (void)computeStats;

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter)

__attribute__((unused)) static void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter)

@interface OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory : NSObject {
 @public
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl *this$0_;
}

- (OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *)getAdapterWithId:(id)inArg;

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory, this$0_, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)

__attribute__((unused)) static void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$);

__attribute__((unused)) static OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory)

@interface OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter : OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter {
 @public
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl *this$1_;
  JavaIoBufferedReader *inputStream_;
}

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$
                                                   withJavaIoBufferedReader:(JavaIoBufferedReader *)inArg;

- (void)computeBinStats;

- (void)computeStats;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter, this$1_, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter, inputStream_, JavaIoBufferedReader *)

__attribute__((unused)) static void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, JavaIoBufferedReader *inArg);

__attribute__((unused)) static OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, JavaIoBufferedReader *inArg) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter)

@interface OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter : OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter {
 @public
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl *this$1_;
  IOSDoubleArray *inputArray_;
}

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$
                                                            withDoubleArray:(IOSDoubleArray *)inArg;

- (void)computeStats;

- (void)computeBinStats;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter, this$1_, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter, inputArray_, IOSDoubleArray *)

__attribute__((unused)) static void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, IOSDoubleArray *inArg);

__attribute__((unused)) static OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, IOSDoubleArray *inArg) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter)

@implementation OrgApacheCommonsMathRandomEmpiricalDistributionImpl

- (instancetype)init {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)binCount {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_initWithInt_(self, binCount);
  return self;
}

- (void)load__WithDoubleArray:(IOSDoubleArray *)inArg {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *da = new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(self, inArg);
  @try {
    [da computeStats];
    OrgApacheCommonsMathRandomEmpiricalDistributionImpl_fillBinStatsWithId_(self, inArg);
  }
  @catch (JavaIoIOException *e) {
    @throw new_OrgApacheCommonsMathMathRuntimeException_initWithJavaLangThrowable_(e);
  }
  loaded_ = YES;
}

- (void)load__WithJavaNetURL:(JavaNetURL *)url {
  JavaIoBufferedReader *in = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_([((JavaNetURL *) nil_chk(url)) openStream]));
  @try {
    OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *da = new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(self, in);
    [da computeStats];
    if ([((OrgApacheCommonsMathStatDescriptiveSummaryStatistics *) nil_chk(sampleStats_)) getN] == 0) {
      @throw OrgApacheCommonsMathMathRuntimeException_createEOFExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_URL_CONTAINS_NO_DATA(), [IOSObjectArray newArrayWithObjects:(id[]){ url } count:1 type:NSObject_class_()]);
    }
    in = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_([url openStream]));
    OrgApacheCommonsMathRandomEmpiricalDistributionImpl_fillBinStatsWithId_(self, in);
    loaded_ = YES;
  }
  @finally {
    @try {
      [in close];
    }
    @catch (JavaIoIOException *ex) {
    }
  }
}

- (void)load__WithJavaIoFile:(JavaIoFile *)file {
  JavaIoBufferedReader *in = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoFileReader_initWithJavaIoFile_(file));
  @try {
    OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *da = new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(self, in);
    [da computeStats];
    in = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoFileReader_initWithJavaIoFile_(file));
    OrgApacheCommonsMathRandomEmpiricalDistributionImpl_fillBinStatsWithId_(self, in);
    loaded_ = YES;
  }
  @finally {
    @try {
      [in close];
    }
    @catch (JavaIoIOException *ex) {
    }
  }
}

- (void)fillBinStatsWithId:(id)inArg {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_fillBinStatsWithId_(self, inArg);
}

- (jint)findBinWithDouble:(jdouble)value {
  return OrgApacheCommonsMathRandomEmpiricalDistributionImpl_findBinWithDouble_(self, value);
}

- (jdouble)getNextValue {
  if (!loaded_) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalStateExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_DISTRIBUTION_NOT_LOADED(), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  }
  jdouble x = OrgApacheCommonsMathUtilFastMath_random();
  for (jint i = 0; i < binCount_; i++) {
    if (x <= IOSDoubleArray_Get(nil_chk(upperBounds_), i)) {
      OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats = [((id<JavaUtilList>) nil_chk(binStats_)) getWithInt:i];
      if ([((OrgApacheCommonsMathStatDescriptiveSummaryStatistics *) nil_chk(stats)) getN] > 0) {
        if ([stats getStandardDeviation] > 0) {
          return [((id<OrgApacheCommonsMathRandomRandomData>) nil_chk(randomData_)) nextGaussianWithDouble:[stats getMean] withDouble:[stats getStandardDeviation]];
        }
        else {
          return [stats getMean];
        }
      }
    }
  }
  @throw new_OrgApacheCommonsMathMathRuntimeException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NO_BIN_SELECTED(), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
}

- (id<OrgApacheCommonsMathStatDescriptiveStatisticalSummary>)getSampleStats {
  return sampleStats_;
}

- (jint)getBinCount {
  return binCount_;
}

- (id<JavaUtilList>)getBinStats {
  return binStats_;
}

- (IOSDoubleArray *)getUpperBounds {
  IOSDoubleArray *binUpperBounds = [IOSDoubleArray newArrayWithLength:binCount_];
  *IOSDoubleArray_GetRef(binUpperBounds, 0) = min_ + delta_;
  for (jint i = 1; i < binCount_ - 1; i++) {
    *IOSDoubleArray_GetRef(binUpperBounds, i) = IOSDoubleArray_Get(binUpperBounds, i - 1) + delta_;
  }
  *IOSDoubleArray_GetRef(binUpperBounds, binCount_ - 1) = max_;
  return binUpperBounds;
}

- (IOSDoubleArray *)getGeneratorUpperBounds {
  jint len = ((IOSDoubleArray *) nil_chk(upperBounds_))->size_;
  IOSDoubleArray *out = [IOSDoubleArray newArrayWithLength:len];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(upperBounds_, 0, out, 0, len);
  return out;
}

- (jboolean)isLoaded {
  return loaded_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "EmpiricalDistributionImpl", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "EmpiricalDistributionImpl", NULL, 0x1, NULL, NULL },
    { "load__WithDoubleArray:", "load", "V", 0x1, NULL, NULL },
    { "load__WithJavaNetURL:", "load", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "load__WithJavaIoFile:", "load", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "fillBinStatsWithId:", "fillBinStats", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "findBinWithDouble:", "findBin", "I", 0x2, NULL, NULL },
    { "getNextValue", NULL, "D", 0x1, "Ljava.lang.IllegalStateException;", NULL },
    { "getSampleStats", NULL, "Lorg.apache.commons.math.stat.descriptive.StatisticalSummary;", 0x1, NULL, NULL },
    { "getBinCount", NULL, "I", 0x1, NULL, NULL },
    { "getBinStats", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "getUpperBounds", NULL, "[D", 0x1, NULL, NULL },
    { "getGeneratorUpperBounds", NULL, "[D", 0x1, NULL, NULL },
    { "isLoaded", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathRandomEmpiricalDistributionImpl_serialVersionUID },
    { "binStats_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/apache/commons/math/stat/descriptive/SummaryStatistics;>;",  },
    { "sampleStats_", NULL, 0x2, "Lorg.apache.commons.math.stat.descriptive.SummaryStatistics;", NULL, NULL,  },
    { "max_", NULL, 0x2, "D", NULL, NULL,  },
    { "min_", NULL, 0x2, "D", NULL, NULL,  },
    { "delta_", NULL, 0x2, "D", NULL, NULL,  },
    { "binCount_", NULL, 0x12, "I", NULL, NULL,  },
    { "loaded_", NULL, 0x2, "Z", NULL, NULL,  },
    { "upperBounds_", NULL, 0x2, "[D", NULL, NULL,  },
    { "randomData_", NULL, 0x12, "Lorg.apache.commons.math.random.RandomData;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.math.random.EmpiricalDistributionImpl$DataAdapter;", "Lorg.apache.commons.math.random.EmpiricalDistributionImpl$DataAdapterFactory;", "Lorg.apache.commons.math.random.EmpiricalDistributionImpl$StreamDataAdapter;", "Lorg.apache.commons.math.random.EmpiricalDistributionImpl$ArrayDataAdapter;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathRandomEmpiricalDistributionImpl = { 2, "EmpiricalDistributionImpl", "org.apache.commons.math.random", NULL, 0x1, 14, methods, 10, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_OrgApacheCommonsMathRandomEmpiricalDistributionImpl;
}

@end

void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_init(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self) {
  (void) NSObject_init(self);
  self->sampleStats_ = nil;
  self->max_ = JavaLangDouble_NEGATIVE_INFINITY;
  self->min_ = JavaLangDouble_POSITIVE_INFINITY;
  self->delta_ = 0.0;
  self->loaded_ = NO;
  self->upperBounds_ = nil;
  self->randomData_ = new_OrgApacheCommonsMathRandomRandomDataImpl_init();
  self->binCount_ = 1000;
  self->binStats_ = new_JavaUtilArrayList_init();
}

OrgApacheCommonsMathRandomEmpiricalDistributionImpl *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_init() {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self = [OrgApacheCommonsMathRandomEmpiricalDistributionImpl alloc];
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_init(self);
  return self;
}

void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_initWithInt_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self, jint binCount) {
  (void) NSObject_init(self);
  self->sampleStats_ = nil;
  self->max_ = JavaLangDouble_NEGATIVE_INFINITY;
  self->min_ = JavaLangDouble_POSITIVE_INFINITY;
  self->delta_ = 0.0;
  self->loaded_ = NO;
  self->upperBounds_ = nil;
  self->randomData_ = new_OrgApacheCommonsMathRandomRandomDataImpl_init();
  self->binCount_ = binCount;
  self->binStats_ = new_JavaUtilArrayList_init();
}

OrgApacheCommonsMathRandomEmpiricalDistributionImpl *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_initWithInt_(jint binCount) {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self = [OrgApacheCommonsMathRandomEmpiricalDistributionImpl alloc];
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_initWithInt_(self, binCount);
  return self;
}

void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_fillBinStatsWithId_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self, id inArg) {
  self->min_ = [((OrgApacheCommonsMathStatDescriptiveSummaryStatistics *) nil_chk(self->sampleStats_)) getMin];
  self->max_ = [self->sampleStats_ getMax];
  self->delta_ = (self->max_ - self->min_) / [(JavaLangDouble_valueOfWithDouble_(self->binCount_)) doubleValue];
  if (![((id<JavaUtilList>) nil_chk(self->binStats_)) isEmpty]) {
    [self->binStats_ clear];
  }
  for (jint i = 0; i < self->binCount_; i++) {
    OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats = new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init();
    [self->binStats_ addWithInt:i withId:stats];
  }
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory *aFactory = new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(self);
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *da = [aFactory getAdapterWithId:inArg];
  [((OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *) nil_chk(da)) computeBinStats];
  self->upperBounds_ = [IOSDoubleArray newArrayWithLength:self->binCount_];
  *IOSDoubleArray_GetRef(self->upperBounds_, 0) = ((jdouble) [((OrgApacheCommonsMathStatDescriptiveSummaryStatistics *) nil_chk([self->binStats_ getWithInt:0])) getN]) / (jdouble) [self->sampleStats_ getN];
  for (jint i = 1; i < self->binCount_ - 1; i++) {
    *IOSDoubleArray_GetRef(self->upperBounds_, i) = IOSDoubleArray_Get(self->upperBounds_, i - 1) + ((jdouble) [((OrgApacheCommonsMathStatDescriptiveSummaryStatistics *) nil_chk([self->binStats_ getWithInt:i])) getN]) / (jdouble) [self->sampleStats_ getN];
  }
  *IOSDoubleArray_GetRef(self->upperBounds_, self->binCount_ - 1) = 1.0;
}

jint OrgApacheCommonsMathRandomEmpiricalDistributionImpl_findBinWithDouble_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *self, jdouble value) {
  return OrgApacheCommonsMathUtilFastMath_minWithInt_withInt_(OrgApacheCommonsMathUtilFastMath_maxWithInt_withInt_(J2ObjCFpToInt(OrgApacheCommonsMathUtilFastMath_ceilWithDouble_((value - self->min_) / self->delta_)) - 1, 0), self->binCount_ - 1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathRandomEmpiricalDistributionImpl)

@implementation OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter

- (void)computeBinStats {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)computeStats {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$ {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "computeBinStats", NULL, "V", 0x401, "Ljava.io.IOException;", NULL },
    { "computeStats", NULL, "V", 0x401, "Ljava.io.IOException;", NULL },
    { "initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter = { 2, "DataAdapter", "org.apache.commons.math.random", "EmpiricalDistributionImpl", 0x402, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter;
}

@end

void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter)

@implementation OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory

- (OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter *)getAdapterWithId:(id)inArg {
  if ([inArg isKindOfClass:[JavaIoBufferedReader class]]) {
    JavaIoBufferedReader *inputStream = (JavaIoBufferedReader *) check_class_cast(inArg, [JavaIoBufferedReader class]);
    return new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(this$0_, inputStream);
  }
  else if ([inArg isKindOfClass:[IOSDoubleArray class]]) {
    IOSDoubleArray *inputArray = (IOSDoubleArray *) check_class_cast(inArg, [IOSDoubleArray class]);
    return new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(this$0_, inputArray);
  }
  else {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INPUT_DATA_FROM_UNSUPPORTED_DATASOURCE(), [IOSObjectArray newArrayWithObjects:(id[]){ [[nil_chk(inArg) getClass] getName], [JavaIoBufferedReader_class_() getName], [IOSClass_doubleArray(1) getName] } count:3 type:NSObject_class_()]);
  }
}

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$ {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getAdapterWithId:", "getAdapter", "Lorg.apache.commons.math.random.EmpiricalDistributionImpl$DataAdapter;", 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.apache.commons.math.random.EmpiricalDistributionImpl;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory = { 2, "DataAdapterFactory", "org.apache.commons.math.random", "EmpiricalDistributionImpl", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory;
}

@end

void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$) {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory *self = [OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory alloc];
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapterFactory)

@implementation OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$
                                                   withJavaIoBufferedReader:(JavaIoBufferedReader *)inArg {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(self, outer$, inArg);
  return self;
}

- (void)computeBinStats {
  NSString *str = nil;
  jdouble val = 0.0;
  while ((str = [((JavaIoBufferedReader *) nil_chk(inputStream_)) readLine]) != nil) {
    val = OrgGeogebraCommonUtilStringUtil_parseDoubleWithNSString_(str);
    OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats = [((id<JavaUtilList>) nil_chk(this$1_->binStats_)) getWithInt:OrgApacheCommonsMathRandomEmpiricalDistributionImpl_findBinWithDouble_(this$1_, val)];
    [((OrgApacheCommonsMathStatDescriptiveSummaryStatistics *) nil_chk(stats)) addValueWithDouble:val];
  }
  [inputStream_ close];
  inputStream_ = nil;
}

- (void)computeStats {
  NSString *str = nil;
  jdouble val = 0.0;
  this$1_->sampleStats_ = new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init();
  while ((str = [((JavaIoBufferedReader *) nil_chk(inputStream_)) readLine]) != nil) {
    val = [JavaLangDouble_valueOfWithNSString_(str) doubleValue];
    [this$1_->sampleStats_ addValueWithDouble:val];
  }
  [inputStream_ close];
  inputStream_ = nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:withJavaIoBufferedReader:", "StreamDataAdapter", NULL, 0x1, NULL, NULL },
    { "computeBinStats", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "computeStats", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lorg.apache.commons.math.random.EmpiricalDistributionImpl;", NULL, NULL,  },
    { "inputStream_", NULL, 0x2, "Ljava.io.BufferedReader;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter = { 2, "StreamDataAdapter", "org.apache.commons.math.random", "EmpiricalDistributionImpl", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter;
}

@end

void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, JavaIoBufferedReader *inArg) {
  self->this$1_ = outer$;
  (void) OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(self, outer$);
  self->inputStream_ = inArg;
}

OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, JavaIoBufferedReader *inArg) {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter *self = [OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter alloc];
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withJavaIoBufferedReader_(self, outer$, inArg);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_StreamDataAdapter)

@implementation OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter

- (instancetype)initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *)outer$
                                                            withDoubleArray:(IOSDoubleArray *)inArg {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(self, outer$, inArg);
  return self;
}

- (void)computeStats {
  this$1_->sampleStats_ = new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init();
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(inputArray_))->size_; i++) {
    [this$1_->sampleStats_ addValueWithDouble:IOSDoubleArray_Get(inputArray_, i)];
  }
}

- (void)computeBinStats {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(inputArray_))->size_; i++) {
    OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats = [((id<JavaUtilList>) nil_chk(this$1_->binStats_)) getWithInt:OrgApacheCommonsMathRandomEmpiricalDistributionImpl_findBinWithDouble_(this$1_, IOSDoubleArray_Get(inputArray_, i))];
    [((OrgApacheCommonsMathStatDescriptiveSummaryStatistics *) nil_chk(stats)) addValueWithDouble:IOSDoubleArray_Get(inputArray_, i)];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl:withDoubleArray:", "ArrayDataAdapter", NULL, 0x1, NULL, NULL },
    { "computeStats", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "computeBinStats", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lorg.apache.commons.math.random.EmpiricalDistributionImpl;", NULL, NULL,  },
    { "inputArray_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter = { 2, "ArrayDataAdapter", "org.apache.commons.math.random", "EmpiricalDistributionImpl", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter;
}

@end

void OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter *self, OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, IOSDoubleArray *inArg) {
  self->this$1_ = outer$;
  (void) OrgApacheCommonsMathRandomEmpiricalDistributionImpl_DataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_(self, outer$);
  self->inputArray_ = inArg;
}

OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter *new_OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(OrgApacheCommonsMathRandomEmpiricalDistributionImpl *outer$, IOSDoubleArray *inArg) {
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter *self = [OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter alloc];
  OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter_initWithOrgApacheCommonsMathRandomEmpiricalDistributionImpl_withDoubleArray_(self, outer$, inArg);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathRandomEmpiricalDistributionImpl_ArrayDataAdapter)
