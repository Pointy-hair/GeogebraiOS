//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/random/RandomDataImpl.java
//

#ifndef _OrgApacheCommonsMathRandomRandomDataImpl_H_
#define _OrgApacheCommonsMathRandomRandomDataImpl_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/math/random/RandomData.h"

@class IOSIntArray;
@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol OrgApacheCommonsMathDistributionContinuousDistribution;
@protocol OrgApacheCommonsMathDistributionIntegerDistribution;
@protocol OrgApacheCommonsMathRandomRandomGenerator;

@interface OrgApacheCommonsMathRandomRandomDataImpl : NSObject < OrgApacheCommonsMathRandomRandomData, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheCommonsMathRandomRandomGenerator:(id<OrgApacheCommonsMathRandomRandomGenerator>)rand;

- (jdouble)nextBetaWithDouble:(jdouble)alpha
                   withDouble:(jdouble)beta;

- (jint)nextBinomialWithInt:(jint)numberOfTrials
                 withDouble:(jdouble)probabilityOfSuccess;

- (jdouble)nextCauchyWithDouble:(jdouble)median
                     withDouble:(jdouble)scale_;

- (jdouble)nextChiSquareWithDouble:(jdouble)df;

- (jdouble)nextExponentialWithDouble:(jdouble)mean;

- (jdouble)nextFWithDouble:(jdouble)numeratorDf
                withDouble:(jdouble)denominatorDf;

- (jdouble)nextGammaWithDouble:(jdouble)shape
                    withDouble:(jdouble)scale_;

- (jdouble)nextGaussianWithDouble:(jdouble)mu
                       withDouble:(jdouble)sigma;

- (NSString *)nextHexStringWithInt:(jint)len;

- (jint)nextHypergeometricWithInt:(jint)populationSize
                          withInt:(jint)numberOfSuccesses
                          withInt:(jint)sampleSize;

- (jint)nextIntWithInt:(jint)lower
               withInt:(jint)upper;

- (jdouble)nextInversionDeviateWithOrgApacheCommonsMathDistributionContinuousDistribution:(id<OrgApacheCommonsMathDistributionContinuousDistribution>)distribution;

- (jint)nextInversionDeviateWithOrgApacheCommonsMathDistributionIntegerDistribution:(id<OrgApacheCommonsMathDistributionIntegerDistribution>)distribution;

- (jlong)nextLongWithLong:(jlong)lower
                 withLong:(jlong)upper;

- (jint)nextPascalWithInt:(jint)r
               withDouble:(jdouble)p;

- (IOSIntArray *)nextPermutationWithInt:(jint)n
                                withInt:(jint)k;

- (jlong)nextPoissonWithDouble:(jdouble)mean;

- (IOSObjectArray *)nextSampleWithJavaUtilCollection:(id<JavaUtilCollection>)c
                                             withInt:(jint)k;

- (NSString *)nextSecureHexStringWithInt:(jint)len;

- (jint)nextSecureIntWithInt:(jint)lower
                     withInt:(jint)upper;

- (jlong)nextSecureLongWithLong:(jlong)lower
                       withLong:(jlong)upper;

- (jdouble)nextTWithDouble:(jdouble)df;

- (jdouble)nextUniformWithDouble:(jdouble)lower
                      withDouble:(jdouble)upper;

- (jdouble)nextWeibullWithDouble:(jdouble)shape
                      withDouble:(jdouble)scale_;

- (jint)nextZipfWithInt:(jint)numberOfElements
             withDouble:(jdouble)exponent;

- (void)reSeed;

- (void)reSeedWithLong:(jlong)seed;

- (void)reSeedSecure;

- (void)reSeedSecureWithLong:(jlong)seed;

- (void)setSecureAlgorithmWithNSString:(NSString *)algorithm
                          withNSString:(NSString *)provider;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathRandomRandomDataImpl)

FOUNDATION_EXPORT void OrgApacheCommonsMathRandomRandomDataImpl_init(OrgApacheCommonsMathRandomRandomDataImpl *self);

FOUNDATION_EXPORT OrgApacheCommonsMathRandomRandomDataImpl *new_OrgApacheCommonsMathRandomRandomDataImpl_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathRandomRandomDataImpl_initWithOrgApacheCommonsMathRandomRandomGenerator_(OrgApacheCommonsMathRandomRandomDataImpl *self, id<OrgApacheCommonsMathRandomRandomGenerator> rand);

FOUNDATION_EXPORT OrgApacheCommonsMathRandomRandomDataImpl *new_OrgApacheCommonsMathRandomRandomDataImpl_initWithOrgApacheCommonsMathRandomRandomGenerator_(id<OrgApacheCommonsMathRandomRandomGenerator> rand) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathRandomRandomDataImpl)

#endif // _OrgApacheCommonsMathRandomRandomDataImpl_H_
