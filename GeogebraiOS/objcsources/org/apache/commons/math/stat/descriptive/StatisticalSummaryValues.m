//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java
//


#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.h"
#include "org/apache/commons/math/util/FastMath.h"
#include "org/apache/commons/math/util/MathUtils.h"

#define OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues_serialVersionUID -5108854841843722536LL

@interface OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues () {
 @public
  jdouble mean_;
  jdouble variance_;
  jlong n_;
  jdouble max_;
  jdouble min_;
  jdouble sum_;
}

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues

- (instancetype)initWithDouble:(jdouble)mean
                    withDouble:(jdouble)variance
                      withLong:(jlong)n
                    withDouble:(jdouble)max
                    withDouble:(jdouble)min
                    withDouble:(jdouble)sum {
  OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues_initWithDouble_withDouble_withLong_withDouble_withDouble_withDouble_(self, mean, variance, n, max, min, sum);
  return self;
}

- (jdouble)getMax {
  return max_;
}

- (jdouble)getMean {
  return mean_;
}

- (jdouble)getMin {
  return min_;
}

- (jlong)getN {
  return n_;
}

- (jdouble)getSum {
  return sum_;
}

- (jdouble)getStandardDeviation {
  return OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(variance_);
}

- (jdouble)getVariance {
  return variance_;
}

- (jboolean)isEqual:(id)object {
  if (object == self) {
    return YES;
  }
  if ([object isKindOfClass:[OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues class]] == NO) {
    return NO;
  }
  OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues *stat = (OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues *) check_class_cast(object, [OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues class]);
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_([((OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues *) nil_chk(stat)) getMax], [self getMax]) && OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_([stat getMean], [self getMean]) && OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_([stat getMin], [self getMin]) && OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_([stat getN], [self getN]) && OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_([stat getSum], [self getSum]) && OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_([stat getVariance], [self getVariance]);
}

- (NSUInteger)hash {
  jint result = 31 + OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_([self getMax]);
  result = result * 31 + OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_([self getMean]);
  result = result * 31 + OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_([self getMin]);
  result = result * 31 + OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_([self getN]);
  result = result * 31 + OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_([self getSum]);
  result = result * 31 + OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_([self getVariance]);
  return result;
}

- (NSString *)description {
  JavaLangStringBuilder *outBuffer = [new_JavaLangStringBuilder_init() autorelease];
  NSString *endl = @"\n";
  [((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"StatisticalSummaryValues:"])) appendWithNSString:endl];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"n: "])) appendWithLong:[self getN]])) appendWithNSString:endl];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"min: "])) appendWithDouble:[self getMin]])) appendWithNSString:endl];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"max: "])) appendWithDouble:[self getMax]])) appendWithNSString:endl];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"mean: "])) appendWithDouble:[self getMean]])) appendWithNSString:endl];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"std dev: "])) appendWithDouble:[self getStandardDeviation]])) appendWithNSString:endl];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"variance: "])) appendWithDouble:[self getVariance]])) appendWithNSString:endl];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([outBuffer appendWithNSString:@"sum: "])) appendWithDouble:[self getSum]])) appendWithNSString:endl];
  return [outBuffer description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withDouble:withLong:withDouble:withDouble:withDouble:", "StatisticalSummaryValues", NULL, 0x1, NULL, NULL },
    { "getMax", NULL, "D", 0x1, NULL, NULL },
    { "getMean", NULL, "D", 0x1, NULL, NULL },
    { "getMin", NULL, "D", 0x1, NULL, NULL },
    { "getN", NULL, "J", 0x1, NULL, NULL },
    { "getSum", NULL, "D", 0x1, NULL, NULL },
    { "getStandardDeviation", NULL, "D", 0x1, NULL, NULL },
    { "getVariance", NULL, "D", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues_serialVersionUID },
    { "mean_", NULL, 0x12, "D", NULL, NULL,  },
    { "variance_", NULL, 0x12, "D", NULL, NULL,  },
    { "n_", NULL, 0x12, "J", NULL, NULL,  },
    { "max_", NULL, 0x12, "D", NULL, NULL,  },
    { "min_", NULL, 0x12, "D", NULL, NULL,  },
    { "sum_", NULL, 0x12, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues = { 2, "StatisticalSummaryValues", "org.apache.commons.math.stat.descriptive", NULL, 0x1, 11, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues;
}

@end

void OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues_initWithDouble_withDouble_withLong_withDouble_withDouble_withDouble_(OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues *self, jdouble mean, jdouble variance, jlong n, jdouble max, jdouble min, jdouble sum) {
  NSObject_init(self);
  self->mean_ = mean;
  self->variance_ = variance;
  self->n_ = n;
  self->max_ = max;
  self->min_ = min;
  self->sum_ = sum;
}

OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues *new_OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues_initWithDouble_withDouble_withLong_withDouble_withDouble_withDouble_(jdouble mean, jdouble variance, jlong n, jdouble max, jdouble min, jdouble sum) {
  OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues *self = [OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues alloc];
  OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues_initWithDouble_withDouble_withLong_withDouble_withDouble_withDouble_(self, mean, variance, n, max, min, sum);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatDescriptiveStatisticalSummaryValues)
