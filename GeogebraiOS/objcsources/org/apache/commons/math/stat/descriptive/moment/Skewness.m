//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/stat/descriptive/moment/Skewness.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/moment/Mean.h"
#include "org/apache/commons/math/stat/descriptive/moment/Skewness.h"
#include "org/apache/commons/math/stat/descriptive/moment/ThirdMoment.h"
#include "org/apache/commons/math/util/FastMath.h"

#define OrgApacheCommonsMathStatDescriptiveMomentSkewness_serialVersionUID 7101857578996691352LL

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathStatDescriptiveMomentSkewness, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathStatDescriptiveMomentSkewness

- (instancetype)init {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_init(self);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathStatDescriptiveMomentThirdMoment:(OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *)m3 {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentThirdMoment_(self, m3);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathStatDescriptiveMomentSkewness:(OrgApacheCommonsMathStatDescriptiveMomentSkewness *)original {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentSkewness_(self, original);
  return self;
}

- (void)incrementWithDouble:(jdouble)d {
  if (incMoment_) {
    [((OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *) nil_chk(moment_)) incrementWithDouble:d];
  }
}

- (jdouble)getResult {
  if (((OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *) nil_chk(moment_))->n_ < 3) {
    return JavaLangDouble_NaN;
  }
  jdouble variance = moment_->m2_ / (moment_->n_ - 1);
  if (variance < 10E-20) {
    return 0.0;
  }
  else {
    jdouble n0 = [moment_ getN];
    return (n0 * moment_->m3_) / ((n0 - 1) * (n0 - 2) * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(variance) * variance);
  }
}

- (jlong)getN {
  return [((OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *) nil_chk(moment_)) getN];
}

- (void)clear {
  if (incMoment_) {
    [((OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *) nil_chk(moment_)) clear];
  }
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                           withInt:(jint)begin
                           withInt:(jint)length {
  jdouble skew = JavaLangDouble_NaN;
  if ([self testWithDoubleArray:values withInt:begin withInt:length] && length > 2) {
    OrgApacheCommonsMathStatDescriptiveMomentMean *mean = new_OrgApacheCommonsMathStatDescriptiveMomentMean_init();
    jdouble m = [mean evaluateWithDoubleArray:values withInt:begin withInt:length];
    jdouble accum = 0.0;
    jdouble accum2 = 0.0;
    for (jint i = begin; i < begin + length; i++) {
      jdouble d = IOSDoubleArray_Get(nil_chk(values), i) - m;
      accum += d * d;
      accum2 += d;
    }
    jdouble variance = (accum - (accum2 * accum2 / length)) / (length - 1);
    jdouble accum3 = 0.0;
    for (jint i = begin; i < begin + length; i++) {
      jdouble d = IOSDoubleArray_Get(nil_chk(values), i) - m;
      accum3 += d * d * d;
    }
    accum3 /= variance * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(variance);
    jdouble n0 = length;
    skew = (n0 / ((n0 - 1) * (n0 - 2))) * accum3;
  }
  return skew;
}

- (OrgApacheCommonsMathStatDescriptiveMomentSkewness *)copy__ {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness *result = new_OrgApacheCommonsMathStatDescriptiveMomentSkewness_init();
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_copy__WithOrgApacheCommonsMathStatDescriptiveMomentSkewness_withOrgApacheCommonsMathStatDescriptiveMomentSkewness_(self, result);
  return result;
}

+ (void)copy__WithOrgApacheCommonsMathStatDescriptiveMomentSkewness:(OrgApacheCommonsMathStatDescriptiveMomentSkewness *)source
              withOrgApacheCommonsMathStatDescriptiveMomentSkewness:(OrgApacheCommonsMathStatDescriptiveMomentSkewness *)dest {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_copy__WithOrgApacheCommonsMathStatDescriptiveMomentSkewness_withOrgApacheCommonsMathStatDescriptiveMomentSkewness_(source, dest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Skewness", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathStatDescriptiveMomentThirdMoment:", "Skewness", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathStatDescriptiveMomentSkewness:", "Skewness", NULL, 0x1, NULL, NULL },
    { "incrementWithDouble:", "increment", "V", 0x1, NULL, NULL },
    { "getResult", NULL, "D", 0x1, NULL, NULL },
    { "getN", NULL, "J", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withInt:withInt:", "evaluate", "D", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.apache.commons.math.stat.descriptive.moment.Skewness;", 0x1, NULL, NULL },
    { "copy__WithOrgApacheCommonsMathStatDescriptiveMomentSkewness:withOrgApacheCommonsMathStatDescriptiveMomentSkewness:", "copy", "V", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathStatDescriptiveMomentSkewness_serialVersionUID },
    { "moment_", NULL, 0x4, "Lorg.apache.commons.math.stat.descriptive.moment.ThirdMoment;", NULL, NULL,  },
    { "incMoment_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatDescriptiveMomentSkewness = { 2, "Skewness", "org.apache.commons.math.stat.descriptive.moment", NULL, 0x1, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatDescriptiveMomentSkewness;
}

@end

void OrgApacheCommonsMathStatDescriptiveMomentSkewness_init(OrgApacheCommonsMathStatDescriptiveMomentSkewness *self) {
  (void) OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  self->moment_ = nil;
  self->incMoment_ = YES;
  self->moment_ = new_OrgApacheCommonsMathStatDescriptiveMomentThirdMoment_init();
}

OrgApacheCommonsMathStatDescriptiveMomentSkewness *new_OrgApacheCommonsMathStatDescriptiveMomentSkewness_init() {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness *self = [OrgApacheCommonsMathStatDescriptiveMomentSkewness alloc];
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_init(self);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentThirdMoment_(OrgApacheCommonsMathStatDescriptiveMomentSkewness *self, OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *m3) {
  (void) OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  self->moment_ = nil;
  self->incMoment_ = NO;
  self->moment_ = m3;
}

OrgApacheCommonsMathStatDescriptiveMomentSkewness *new_OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentThirdMoment_(OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *m3) {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness *self = [OrgApacheCommonsMathStatDescriptiveMomentSkewness alloc];
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentThirdMoment_(self, m3);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentSkewness_(OrgApacheCommonsMathStatDescriptiveMomentSkewness *self, OrgApacheCommonsMathStatDescriptiveMomentSkewness *original) {
  (void) OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  self->moment_ = nil;
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_copy__WithOrgApacheCommonsMathStatDescriptiveMomentSkewness_withOrgApacheCommonsMathStatDescriptiveMomentSkewness_(original, self);
}

OrgApacheCommonsMathStatDescriptiveMomentSkewness *new_OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentSkewness_(OrgApacheCommonsMathStatDescriptiveMomentSkewness *original) {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness *self = [OrgApacheCommonsMathStatDescriptiveMomentSkewness alloc];
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_initWithOrgApacheCommonsMathStatDescriptiveMomentSkewness_(self, original);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveMomentSkewness_copy__WithOrgApacheCommonsMathStatDescriptiveMomentSkewness_withOrgApacheCommonsMathStatDescriptiveMomentSkewness_(OrgApacheCommonsMathStatDescriptiveMomentSkewness *source, OrgApacheCommonsMathStatDescriptiveMomentSkewness *dest) {
  OrgApacheCommonsMathStatDescriptiveMomentSkewness_initialize();
  [((OrgApacheCommonsMathStatDescriptiveMomentSkewness *) nil_chk(dest)) setDataWithDoubleArray:[((OrgApacheCommonsMathStatDescriptiveMomentSkewness *) nil_chk(source)) getDataRef]];
  dest->moment_ = new_OrgApacheCommonsMathStatDescriptiveMomentThirdMoment_initWithOrgApacheCommonsMathStatDescriptiveMomentThirdMoment_([((OrgApacheCommonsMathStatDescriptiveMomentThirdMoment *) nil_chk(source->moment_)) copy__]);
  dest->incMoment_ = source->incMoment_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatDescriptiveMomentSkewness)
