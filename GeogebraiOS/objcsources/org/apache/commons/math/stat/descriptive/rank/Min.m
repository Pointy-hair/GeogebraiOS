//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/stat/descriptive/rank/Min.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/rank/Min.h"

#define OrgApacheCommonsMathStatDescriptiveRankMin_serialVersionUID -2941995784909003131LL

@interface OrgApacheCommonsMathStatDescriptiveRankMin () {
 @public
  jlong n_;
  jdouble value_;
}

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathStatDescriptiveRankMin, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathStatDescriptiveRankMin

- (instancetype)init {
  OrgApacheCommonsMathStatDescriptiveRankMin_init(self);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathStatDescriptiveRankMin:(OrgApacheCommonsMathStatDescriptiveRankMin *)original {
  OrgApacheCommonsMathStatDescriptiveRankMin_initWithOrgApacheCommonsMathStatDescriptiveRankMin_(self, original);
  return self;
}

- (void)incrementWithDouble:(jdouble)d {
  if (d < value_ || JavaLangDouble_isNaNWithDouble_(value_)) {
    value_ = d;
  }
  n_++;
}

- (void)clear {
  value_ = JavaLangDouble_NaN;
  n_ = 0;
}

- (jdouble)getResult {
  return value_;
}

- (jlong)getN {
  return n_;
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                           withInt:(jint)begin
                           withInt:(jint)length {
  jdouble min = JavaLangDouble_NaN;
  if ([self testWithDoubleArray:values withInt:begin withInt:length]) {
    min = IOSDoubleArray_Get(nil_chk(values), begin);
    for (jint i = begin; i < begin + length; i++) {
      if (!JavaLangDouble_isNaNWithDouble_(IOSDoubleArray_Get(values, i))) {
        min = (min < IOSDoubleArray_Get(values, i)) ? min : IOSDoubleArray_Get(values, i);
      }
    }
  }
  return min;
}

- (OrgApacheCommonsMathStatDescriptiveRankMin *)copy__ {
  OrgApacheCommonsMathStatDescriptiveRankMin *result = new_OrgApacheCommonsMathStatDescriptiveRankMin_init();
  OrgApacheCommonsMathStatDescriptiveRankMin_copy__WithOrgApacheCommonsMathStatDescriptiveRankMin_withOrgApacheCommonsMathStatDescriptiveRankMin_(self, result);
  return result;
}

+ (void)copy__WithOrgApacheCommonsMathStatDescriptiveRankMin:(OrgApacheCommonsMathStatDescriptiveRankMin *)source
              withOrgApacheCommonsMathStatDescriptiveRankMin:(OrgApacheCommonsMathStatDescriptiveRankMin *)dest {
  OrgApacheCommonsMathStatDescriptiveRankMin_copy__WithOrgApacheCommonsMathStatDescriptiveRankMin_withOrgApacheCommonsMathStatDescriptiveRankMin_(source, dest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Min", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathStatDescriptiveRankMin:", "Min", NULL, 0x1, NULL, NULL },
    { "incrementWithDouble:", "increment", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getResult", NULL, "D", 0x1, NULL, NULL },
    { "getN", NULL, "J", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withInt:withInt:", "evaluate", "D", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.apache.commons.math.stat.descriptive.rank.Min;", 0x1, NULL, NULL },
    { "copy__WithOrgApacheCommonsMathStatDescriptiveRankMin:withOrgApacheCommonsMathStatDescriptiveRankMin:", "copy", "V", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathStatDescriptiveRankMin_serialVersionUID },
    { "n_", NULL, 0x2, "J", NULL, NULL,  },
    { "value_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatDescriptiveRankMin = { 2, "Min", "org.apache.commons.math.stat.descriptive.rank", NULL, 0x1, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatDescriptiveRankMin;
}

@end

void OrgApacheCommonsMathStatDescriptiveRankMin_init(OrgApacheCommonsMathStatDescriptiveRankMin *self) {
  (void) OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  self->n_ = 0;
  self->value_ = JavaLangDouble_NaN;
}

OrgApacheCommonsMathStatDescriptiveRankMin *new_OrgApacheCommonsMathStatDescriptiveRankMin_init() {
  OrgApacheCommonsMathStatDescriptiveRankMin *self = [OrgApacheCommonsMathStatDescriptiveRankMin alloc];
  OrgApacheCommonsMathStatDescriptiveRankMin_init(self);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveRankMin_initWithOrgApacheCommonsMathStatDescriptiveRankMin_(OrgApacheCommonsMathStatDescriptiveRankMin *self, OrgApacheCommonsMathStatDescriptiveRankMin *original) {
  (void) OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  OrgApacheCommonsMathStatDescriptiveRankMin_copy__WithOrgApacheCommonsMathStatDescriptiveRankMin_withOrgApacheCommonsMathStatDescriptiveRankMin_(original, self);
}

OrgApacheCommonsMathStatDescriptiveRankMin *new_OrgApacheCommonsMathStatDescriptiveRankMin_initWithOrgApacheCommonsMathStatDescriptiveRankMin_(OrgApacheCommonsMathStatDescriptiveRankMin *original) {
  OrgApacheCommonsMathStatDescriptiveRankMin *self = [OrgApacheCommonsMathStatDescriptiveRankMin alloc];
  OrgApacheCommonsMathStatDescriptiveRankMin_initWithOrgApacheCommonsMathStatDescriptiveRankMin_(self, original);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveRankMin_copy__WithOrgApacheCommonsMathStatDescriptiveRankMin_withOrgApacheCommonsMathStatDescriptiveRankMin_(OrgApacheCommonsMathStatDescriptiveRankMin *source, OrgApacheCommonsMathStatDescriptiveRankMin *dest) {
  OrgApacheCommonsMathStatDescriptiveRankMin_initialize();
  [((OrgApacheCommonsMathStatDescriptiveRankMin *) nil_chk(dest)) setDataWithDoubleArray:[((OrgApacheCommonsMathStatDescriptiveRankMin *) nil_chk(source)) getDataRef]];
  dest->n_ = source->n_;
  dest->value_ = source->value_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatDescriptiveRankMin)
