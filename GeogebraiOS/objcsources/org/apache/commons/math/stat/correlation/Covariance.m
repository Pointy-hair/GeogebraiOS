//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/stat/correlation/Covariance.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/linear/BlockRealMatrix.h"
#include "org/apache/commons/math/linear/RealMatrix.h"
#include "org/apache/commons/math/stat/correlation/Covariance.h"
#include "org/apache/commons/math/stat/descriptive/moment/Mean.h"
#include "org/apache/commons/math/stat/descriptive/moment/Variance.h"

@interface OrgApacheCommonsMathStatCorrelationCovariance () {
 @public
  id<OrgApacheCommonsMathLinearRealMatrix> covarianceMatrix_;
  jint n_;
}

- (void)checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathStatCorrelationCovariance, covarianceMatrix_, id<OrgApacheCommonsMathLinearRealMatrix>)

__attribute__((unused)) static void OrgApacheCommonsMathStatCorrelationCovariance_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathStatCorrelationCovariance *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix);

@implementation OrgApacheCommonsMathStatCorrelationCovariance

- (instancetype)init {
  OrgApacheCommonsMathStatCorrelationCovariance_init(self);
  return self;
}

- (instancetype)initWithDoubleArray2:(IOSObjectArray *)data
                         withBoolean:(jboolean)biasCorrected {
  OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_withBoolean_(self, data, biasCorrected);
  return self;
}

- (instancetype)initWithDoubleArray2:(IOSObjectArray *)data {
  OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_(self, data);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix
                                                 withBoolean:(jboolean)biasCorrected {
  OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_withBoolean_(self, matrix, biasCorrected);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  return self;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getCovarianceMatrix {
  return covarianceMatrix_;
}

- (jint)getN {
  return n_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)computeCovarianceMatrixWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix
                                                                                                withBoolean:(jboolean)biasCorrected {
  jint dimension = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getColumnDimension];
  OrgApacheCommonsMathStatDescriptiveMomentVariance *variance = new_OrgApacheCommonsMathStatDescriptiveMomentVariance_initWithBoolean_(biasCorrected);
  id<OrgApacheCommonsMathLinearRealMatrix> outMatrix = new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithInt_withInt_(dimension, dimension);
  for (jint i = 0; i < dimension; i++) {
    for (jint j = 0; j < i; j++) {
      jdouble cov = [self covarianceWithDoubleArray:[matrix getColumnWithInt:i] withDoubleArray:[matrix getColumnWithInt:j] withBoolean:biasCorrected];
      [outMatrix setEntryWithInt:i withInt:j withDouble:cov];
      [outMatrix setEntryWithInt:j withInt:i withDouble:cov];
    }
    [outMatrix setEntryWithInt:i withInt:i withDouble:[variance evaluateWithDoubleArray:[matrix getColumnWithInt:i]]];
  }
  return outMatrix;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)computeCovarianceMatrixWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  return [self computeCovarianceMatrixWithOrgApacheCommonsMathLinearRealMatrix:matrix withBoolean:YES];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)computeCovarianceMatrixWithDoubleArray2:(IOSObjectArray *)data
                                                                        withBoolean:(jboolean)biasCorrected {
  return [self computeCovarianceMatrixWithOrgApacheCommonsMathLinearRealMatrix:new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithDoubleArray2_(data) withBoolean:biasCorrected];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)computeCovarianceMatrixWithDoubleArray2:(IOSObjectArray *)data {
  return [self computeCovarianceMatrixWithDoubleArray2:data withBoolean:YES];
}

- (jdouble)covarianceWithDoubleArray:(IOSDoubleArray *)xArray
                     withDoubleArray:(IOSDoubleArray *)yArray
                         withBoolean:(jboolean)biasCorrected {
  OrgApacheCommonsMathStatDescriptiveMomentMean *mean = new_OrgApacheCommonsMathStatDescriptiveMomentMean_init();
  jdouble result = 0.0;
  jint length = ((IOSDoubleArray *) nil_chk(xArray))->size_;
  if (length != ((IOSDoubleArray *) nil_chk(yArray))->size_) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_DIMENSIONS_MISMATCH_SIMPLE(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length), JavaLangInteger_valueOfWithInt_(yArray->size_) } count:2 type:NSObject_class_()]);
  }
  else if (length < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_DIMENSION(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length), JavaLangInteger_valueOfWithInt_(2) } count:2 type:NSObject_class_()]);
  }
  else {
    jdouble xMean = [mean evaluateWithDoubleArray:xArray];
    jdouble yMean = [mean evaluateWithDoubleArray:yArray];
    for (jint i = 0; i < length; i++) {
      jdouble xDev = IOSDoubleArray_Get(xArray, i) - xMean;
      jdouble yDev = IOSDoubleArray_Get(yArray, i) - yMean;
      result += (xDev * yDev - result) / (i + 1);
    }
  }
  return biasCorrected ? result * ((jdouble) length / (jdouble) (length - 1)) : result;
}

- (jdouble)covarianceWithDoubleArray:(IOSDoubleArray *)xArray
                     withDoubleArray:(IOSDoubleArray *)yArray {
  return [self covarianceWithDoubleArray:xArray withDoubleArray:yArray withBoolean:YES];
}

- (void)checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  OrgApacheCommonsMathStatCorrelationCovariance_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Covariance", NULL, 0x1, NULL, NULL },
    { "initWithDoubleArray2:withBoolean:", "Covariance", NULL, 0x1, NULL, NULL },
    { "initWithDoubleArray2:", "Covariance", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathLinearRealMatrix:withBoolean:", "Covariance", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathLinearRealMatrix:", "Covariance", NULL, 0x1, NULL, NULL },
    { "getCovarianceMatrix", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
    { "getN", NULL, "I", 0x1, NULL, NULL },
    { "computeCovarianceMatrixWithOrgApacheCommonsMathLinearRealMatrix:withBoolean:", "computeCovarianceMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x4, NULL, NULL },
    { "computeCovarianceMatrixWithOrgApacheCommonsMathLinearRealMatrix:", "computeCovarianceMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x4, NULL, NULL },
    { "computeCovarianceMatrixWithDoubleArray2:withBoolean:", "computeCovarianceMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x4, NULL, NULL },
    { "computeCovarianceMatrixWithDoubleArray2:", "computeCovarianceMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x4, NULL, NULL },
    { "covarianceWithDoubleArray:withDoubleArray:withBoolean:", "covariance", "D", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "covarianceWithDoubleArray:withDoubleArray:", "covariance", "D", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix:", "checkSufficientData", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "covarianceMatrix_", NULL, 0x12, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "n_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatCorrelationCovariance = { 2, "Covariance", "org.apache.commons.math.stat.correlation", NULL, 0x1, 14, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatCorrelationCovariance;
}

@end

void OrgApacheCommonsMathStatCorrelationCovariance_init(OrgApacheCommonsMathStatCorrelationCovariance *self) {
  (void) NSObject_init(self);
  self->covarianceMatrix_ = nil;
  self->n_ = 0;
}

OrgApacheCommonsMathStatCorrelationCovariance *new_OrgApacheCommonsMathStatCorrelationCovariance_init() {
  OrgApacheCommonsMathStatCorrelationCovariance *self = [OrgApacheCommonsMathStatCorrelationCovariance alloc];
  OrgApacheCommonsMathStatCorrelationCovariance_init(self);
  return self;
}

void OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_withBoolean_(OrgApacheCommonsMathStatCorrelationCovariance *self, IOSObjectArray *data, jboolean biasCorrected) {
  (void) OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_withBoolean_(self, new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithDoubleArray2_(data), biasCorrected);
}

OrgApacheCommonsMathStatCorrelationCovariance *new_OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_withBoolean_(IOSObjectArray *data, jboolean biasCorrected) {
  OrgApacheCommonsMathStatCorrelationCovariance *self = [OrgApacheCommonsMathStatCorrelationCovariance alloc];
  OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_withBoolean_(self, data, biasCorrected);
  return self;
}

void OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_(OrgApacheCommonsMathStatCorrelationCovariance *self, IOSObjectArray *data) {
  (void) OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_withBoolean_(self, data, YES);
}

OrgApacheCommonsMathStatCorrelationCovariance *new_OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_(IOSObjectArray *data) {
  OrgApacheCommonsMathStatCorrelationCovariance *self = [OrgApacheCommonsMathStatCorrelationCovariance alloc];
  OrgApacheCommonsMathStatCorrelationCovariance_initWithDoubleArray2_(self, data);
  return self;
}

void OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_withBoolean_(OrgApacheCommonsMathStatCorrelationCovariance *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix, jboolean biasCorrected) {
  (void) NSObject_init(self);
  OrgApacheCommonsMathStatCorrelationCovariance_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  self->n_ = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getRowDimension];
  self->covarianceMatrix_ = [self computeCovarianceMatrixWithOrgApacheCommonsMathLinearRealMatrix:matrix withBoolean:biasCorrected];
}

OrgApacheCommonsMathStatCorrelationCovariance *new_OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_withBoolean_(id<OrgApacheCommonsMathLinearRealMatrix> matrix, jboolean biasCorrected) {
  OrgApacheCommonsMathStatCorrelationCovariance *self = [OrgApacheCommonsMathStatCorrelationCovariance alloc];
  OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_withBoolean_(self, matrix, biasCorrected);
  return self;
}

void OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathStatCorrelationCovariance *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  (void) OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_withBoolean_(self, matrix, YES);
}

OrgApacheCommonsMathStatCorrelationCovariance *new_OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_(id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  OrgApacheCommonsMathStatCorrelationCovariance *self = [OrgApacheCommonsMathStatCorrelationCovariance alloc];
  OrgApacheCommonsMathStatCorrelationCovariance_initWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  return self;
}

void OrgApacheCommonsMathStatCorrelationCovariance_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathStatCorrelationCovariance *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  jint nRows = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getRowDimension];
  jint nCols = [matrix getColumnDimension];
  if (nRows < 2 || nCols < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_ROWS_AND_COLUMNS(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(nRows), JavaLangInteger_valueOfWithInt_(nCols) } count:2 type:NSObject_class_()]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatCorrelationCovariance)
