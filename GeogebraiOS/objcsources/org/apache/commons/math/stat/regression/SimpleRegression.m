//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/stat/regression/SimpleRegression.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/distribution/TDistribution.h"
#include "org/apache/commons/math/distribution/TDistributionImpl.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/stat/regression/SimpleRegression.h"
#include "org/apache/commons/math/util/FastMath.h"

#define OrgApacheCommonsMathStatRegressionSimpleRegression_serialVersionUID -3004689053607543335LL

@interface OrgApacheCommonsMathStatRegressionSimpleRegression () {
 @public
  id<OrgApacheCommonsMathDistributionTDistribution> distribution_;
  jdouble sumX_;
  jdouble sumXX_;
  jdouble sumY_;
  jdouble sumYY_;
  jdouble sumXY_;
  jlong n_;
  jdouble xbar_;
  jdouble ybar_;
}

- (jdouble)getInterceptWithDouble:(jdouble)slope;

- (jdouble)getRegressionSumSquaresWithDouble:(jdouble)slope;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathStatRegressionSimpleRegression, distribution_, id<OrgApacheCommonsMathDistributionTDistribution>)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathStatRegressionSimpleRegression, serialVersionUID, jlong)

__attribute__((unused)) static jdouble OrgApacheCommonsMathStatRegressionSimpleRegression_getInterceptWithDouble_(OrgApacheCommonsMathStatRegressionSimpleRegression *self, jdouble slope);

__attribute__((unused)) static jdouble OrgApacheCommonsMathStatRegressionSimpleRegression_getRegressionSumSquaresWithDouble_(OrgApacheCommonsMathStatRegressionSimpleRegression *self, jdouble slope);

@implementation OrgApacheCommonsMathStatRegressionSimpleRegression

- (instancetype)init {
  OrgApacheCommonsMathStatRegressionSimpleRegression_init(self);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathDistributionTDistribution:(id<OrgApacheCommonsMathDistributionTDistribution>)t {
  OrgApacheCommonsMathStatRegressionSimpleRegression_initWithOrgApacheCommonsMathDistributionTDistribution_(self, t);
  return self;
}

- (instancetype)initWithInt:(jint)degrees {
  OrgApacheCommonsMathStatRegressionSimpleRegression_initWithInt_(self, degrees);
  return self;
}

- (void)addDataWithDouble:(jdouble)x
               withDouble:(jdouble)y {
  if (n_ == 0) {
    xbar_ = x;
    ybar_ = y;
  }
  else {
    jdouble dx = x - xbar_;
    jdouble dy = y - ybar_;
    sumXX_ += dx * dx * n_ / (n_ + 1.0);
    sumYY_ += dy * dy * n_ / (n_ + 1.0);
    sumXY_ += dx * dy * n_ / (n_ + 1.0);
    xbar_ += dx / (n_ + 1.0);
    ybar_ += dy / (n_ + 1.0);
  }
  sumX_ += x;
  sumY_ += y;
  n_++;
  if (n_ > 2) {
    [((id<OrgApacheCommonsMathDistributionTDistribution>) nil_chk(distribution_)) setDegreesOfFreedomWithDouble:n_ - 2];
  }
}

- (void)removeDataWithDouble:(jdouble)x
                  withDouble:(jdouble)y {
  if (n_ > 0) {
    jdouble dx = x - xbar_;
    jdouble dy = y - ybar_;
    sumXX_ -= dx * dx * n_ / (n_ - 1.0);
    sumYY_ -= dy * dy * n_ / (n_ - 1.0);
    sumXY_ -= dx * dy * n_ / (n_ - 1.0);
    xbar_ -= dx / (n_ - 1.0);
    ybar_ -= dy / (n_ - 1.0);
    sumX_ -= x;
    sumY_ -= y;
    n_--;
    if (n_ > 2) {
      [((id<OrgApacheCommonsMathDistributionTDistribution>) nil_chk(distribution_)) setDegreesOfFreedomWithDouble:n_ - 2];
    }
  }
}

- (void)addDataWithDoubleArray2:(IOSObjectArray *)data {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(data))->size_; i++) {
    [self addDataWithDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(data, i)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(data, i)), 1)];
  }
}

- (void)removeDataWithDoubleArray2:(IOSObjectArray *)data {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(data))->size_ && n_ > 0; i++) {
    [self removeDataWithDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(data, i)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(data, i)), 1)];
  }
}

- (void)clear {
  sumX_ = 0.0;
  sumXX_ = 0.0;
  sumY_ = 0.0;
  sumYY_ = 0.0;
  sumXY_ = 0.0;
  n_ = 0;
}

- (jlong)getN {
  return n_;
}

- (jdouble)predictWithDouble:(jdouble)x {
  jdouble b1 = [self getSlope];
  return OrgApacheCommonsMathStatRegressionSimpleRegression_getInterceptWithDouble_(self, b1) + b1 * x;
}

- (jdouble)getIntercept {
  return OrgApacheCommonsMathStatRegressionSimpleRegression_getInterceptWithDouble_(self, [self getSlope]);
}

- (jdouble)getSlope {
  if (n_ < 2) {
    return JavaLangDouble_NaN;
  }
  if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(sumXX_) < 10 * JavaLangDouble_MIN_VALUE) {
    return JavaLangDouble_NaN;
  }
  return sumXY_ / sumXX_;
}

- (jdouble)getSumSquaredErrors {
  return OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(0.0, sumYY_ - sumXY_ * sumXY_ / sumXX_);
}

- (jdouble)getTotalSumSquares {
  if (n_ < 2) {
    return JavaLangDouble_NaN;
  }
  return sumYY_;
}

- (jdouble)getXSumSquares {
  if (n_ < 2) {
    return JavaLangDouble_NaN;
  }
  return sumXX_;
}

- (jdouble)getSumOfCrossProducts {
  return sumXY_;
}

- (jdouble)getRegressionSumSquares {
  return OrgApacheCommonsMathStatRegressionSimpleRegression_getRegressionSumSquaresWithDouble_(self, [self getSlope]);
}

- (jdouble)getMeanSquareError {
  if (n_ < 3) {
    return JavaLangDouble_NaN;
  }
  return [self getSumSquaredErrors] / (n_ - 2);
}

- (jdouble)getR {
  jdouble b1 = [self getSlope];
  jdouble result = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_([self getRSquare]);
  if (b1 < 0) {
    result = -result;
  }
  return result;
}

- (jdouble)getRSquare {
  jdouble ssto = [self getTotalSumSquares];
  return (ssto - [self getSumSquaredErrors]) / ssto;
}

- (jdouble)getInterceptStdErr {
  return OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_([self getMeanSquareError] * ((1.0 / n_) + (xbar_ * xbar_) / sumXX_));
}

- (jdouble)getSlopeStdErr {
  return OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_([self getMeanSquareError] / sumXX_);
}

- (jdouble)getSlopeConfidenceInterval {
  return [self getSlopeConfidenceIntervalWithDouble:0.05];
}

- (jdouble)getSlopeConfidenceIntervalWithDouble:(jdouble)alpha {
  if (alpha >= 1 || alpha <= 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OUT_OF_BOUND_SIGNIFICANCE_LEVEL(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(alpha), JavaLangDouble_valueOfWithDouble_(0.0), JavaLangDouble_valueOfWithDouble_(1.0) } count:3 type:NSObject_class_()]);
  }
  return [self getSlopeStdErr] * [((id<OrgApacheCommonsMathDistributionTDistribution>) nil_chk(distribution_)) inverseCumulativeProbabilityWithDouble:1.0 - alpha / 2.0];
}

- (jdouble)getSignificance {
  return 2.0 * (1.0 - [((id<OrgApacheCommonsMathDistributionTDistribution>) nil_chk(distribution_)) cumulativeProbabilityWithDouble:OrgApacheCommonsMathUtilFastMath_absWithDouble_([self getSlope]) / [self getSlopeStdErr]]);
}

- (jdouble)getInterceptWithDouble:(jdouble)slope {
  return OrgApacheCommonsMathStatRegressionSimpleRegression_getInterceptWithDouble_(self, slope);
}

- (jdouble)getRegressionSumSquaresWithDouble:(jdouble)slope {
  return OrgApacheCommonsMathStatRegressionSimpleRegression_getRegressionSumSquaresWithDouble_(self, slope);
}

- (void)setDistributionWithOrgApacheCommonsMathDistributionTDistribution:(id<OrgApacheCommonsMathDistributionTDistribution>)value {
  distribution_ = value;
  if (n_ > 2) {
    [((id<OrgApacheCommonsMathDistributionTDistribution>) nil_chk(distribution_)) setDegreesOfFreedomWithDouble:n_ - 2];
  }
}

+ (IOSObjectArray *)__annotations_initWithOrgApacheCommonsMathDistributionTDistribution_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_setDistributionWithOrgApacheCommonsMathDistributionTDistribution_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SimpleRegression", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathDistributionTDistribution:", "SimpleRegression", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "SimpleRegression", NULL, 0x1, NULL, NULL },
    { "addDataWithDouble:withDouble:", "addData", "V", 0x1, NULL, NULL },
    { "removeDataWithDouble:withDouble:", "removeData", "V", 0x1, NULL, NULL },
    { "addDataWithDoubleArray2:", "addData", "V", 0x1, NULL, NULL },
    { "removeDataWithDoubleArray2:", "removeData", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getN", NULL, "J", 0x1, NULL, NULL },
    { "predictWithDouble:", "predict", "D", 0x1, NULL, NULL },
    { "getIntercept", NULL, "D", 0x1, NULL, NULL },
    { "getSlope", NULL, "D", 0x1, NULL, NULL },
    { "getSumSquaredErrors", NULL, "D", 0x1, NULL, NULL },
    { "getTotalSumSquares", NULL, "D", 0x1, NULL, NULL },
    { "getXSumSquares", NULL, "D", 0x1, NULL, NULL },
    { "getSumOfCrossProducts", NULL, "D", 0x1, NULL, NULL },
    { "getRegressionSumSquares", NULL, "D", 0x1, NULL, NULL },
    { "getMeanSquareError", NULL, "D", 0x1, NULL, NULL },
    { "getR", NULL, "D", 0x1, NULL, NULL },
    { "getRSquare", NULL, "D", 0x1, NULL, NULL },
    { "getInterceptStdErr", NULL, "D", 0x1, NULL, NULL },
    { "getSlopeStdErr", NULL, "D", 0x1, NULL, NULL },
    { "getSlopeConfidenceInterval", NULL, "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "getSlopeConfidenceIntervalWithDouble:", "getSlopeConfidenceInterval", "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "getSignificance", NULL, "D", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "getInterceptWithDouble:", "getIntercept", "D", 0x2, NULL, NULL },
    { "getRegressionSumSquaresWithDouble:", "getRegressionSumSquares", "D", 0x2, NULL, NULL },
    { "setDistributionWithOrgApacheCommonsMathDistributionTDistribution:", "setDistribution", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathStatRegressionSimpleRegression_serialVersionUID },
    { "distribution_", NULL, 0x2, "Lorg.apache.commons.math.distribution.TDistribution;", NULL, NULL,  },
    { "sumX_", NULL, 0x2, "D", NULL, NULL,  },
    { "sumXX_", NULL, 0x2, "D", NULL, NULL,  },
    { "sumY_", NULL, 0x2, "D", NULL, NULL,  },
    { "sumYY_", NULL, 0x2, "D", NULL, NULL,  },
    { "sumXY_", NULL, 0x2, "D", NULL, NULL,  },
    { "n_", NULL, 0x2, "J", NULL, NULL,  },
    { "xbar_", NULL, 0x2, "D", NULL, NULL,  },
    { "ybar_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatRegressionSimpleRegression = { 2, "SimpleRegression", "org.apache.commons.math.stat.regression", NULL, 0x1, 28, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatRegressionSimpleRegression;
}

@end

void OrgApacheCommonsMathStatRegressionSimpleRegression_init(OrgApacheCommonsMathStatRegressionSimpleRegression *self) {
  (void) OrgApacheCommonsMathStatRegressionSimpleRegression_initWithOrgApacheCommonsMathDistributionTDistribution_(self, new_OrgApacheCommonsMathDistributionTDistributionImpl_initWithDouble_(1.0));
}

OrgApacheCommonsMathStatRegressionSimpleRegression *new_OrgApacheCommonsMathStatRegressionSimpleRegression_init() {
  OrgApacheCommonsMathStatRegressionSimpleRegression *self = [OrgApacheCommonsMathStatRegressionSimpleRegression alloc];
  OrgApacheCommonsMathStatRegressionSimpleRegression_init(self);
  return self;
}

void OrgApacheCommonsMathStatRegressionSimpleRegression_initWithOrgApacheCommonsMathDistributionTDistribution_(OrgApacheCommonsMathStatRegressionSimpleRegression *self, id<OrgApacheCommonsMathDistributionTDistribution> t) {
  (void) NSObject_init(self);
  self->sumX_ = 0.0;
  self->sumXX_ = 0.0;
  self->sumY_ = 0.0;
  self->sumYY_ = 0.0;
  self->sumXY_ = 0.0;
  self->n_ = 0;
  self->xbar_ = 0;
  self->ybar_ = 0;
  [self setDistributionWithOrgApacheCommonsMathDistributionTDistribution:t];
}

OrgApacheCommonsMathStatRegressionSimpleRegression *new_OrgApacheCommonsMathStatRegressionSimpleRegression_initWithOrgApacheCommonsMathDistributionTDistribution_(id<OrgApacheCommonsMathDistributionTDistribution> t) {
  OrgApacheCommonsMathStatRegressionSimpleRegression *self = [OrgApacheCommonsMathStatRegressionSimpleRegression alloc];
  OrgApacheCommonsMathStatRegressionSimpleRegression_initWithOrgApacheCommonsMathDistributionTDistribution_(self, t);
  return self;
}

void OrgApacheCommonsMathStatRegressionSimpleRegression_initWithInt_(OrgApacheCommonsMathStatRegressionSimpleRegression *self, jint degrees) {
  (void) NSObject_init(self);
  self->sumX_ = 0.0;
  self->sumXX_ = 0.0;
  self->sumY_ = 0.0;
  self->sumYY_ = 0.0;
  self->sumXY_ = 0.0;
  self->n_ = 0;
  self->xbar_ = 0;
  self->ybar_ = 0;
  [self setDistributionWithOrgApacheCommonsMathDistributionTDistribution:new_OrgApacheCommonsMathDistributionTDistributionImpl_initWithDouble_(degrees)];
}

OrgApacheCommonsMathStatRegressionSimpleRegression *new_OrgApacheCommonsMathStatRegressionSimpleRegression_initWithInt_(jint degrees) {
  OrgApacheCommonsMathStatRegressionSimpleRegression *self = [OrgApacheCommonsMathStatRegressionSimpleRegression alloc];
  OrgApacheCommonsMathStatRegressionSimpleRegression_initWithInt_(self, degrees);
  return self;
}

jdouble OrgApacheCommonsMathStatRegressionSimpleRegression_getInterceptWithDouble_(OrgApacheCommonsMathStatRegressionSimpleRegression *self, jdouble slope) {
  return (self->sumY_ - slope * self->sumX_) / self->n_;
}

jdouble OrgApacheCommonsMathStatRegressionSimpleRegression_getRegressionSumSquaresWithDouble_(OrgApacheCommonsMathStatRegressionSimpleRegression *self, jdouble slope) {
  return slope * slope * self->sumXX_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatRegressionSimpleRegression)
