//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/apache/commons/math/DimensionMismatchException.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/DimensionMismatchException.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"

#define OrgApacheCommonsMathDimensionMismatchException_serialVersionUID -1316089546353786411LL

@interface OrgApacheCommonsMathDimensionMismatchException () {
 @public
  jint dimension1_;
  jint dimension2_;
}

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDimensionMismatchException, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathDimensionMismatchException

- (instancetype)initWithInt:(jint)dimension1
                    withInt:(jint)dimension2 {
  OrgApacheCommonsMathDimensionMismatchException_initWithInt_withInt_(self, dimension1, dimension2);
  return self;
}

- (jint)getDimension1 {
  return dimension1_;
}

- (jint)getDimension2 {
  return dimension2_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:", "DimensionMismatchException", NULL, 0x1, NULL, NULL },
    { "getDimension1", NULL, "I", 0x1, NULL, NULL },
    { "getDimension2", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathDimensionMismatchException_serialVersionUID },
    { "dimension1_", NULL, 0x12, "I", NULL, NULL,  },
    { "dimension2_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathDimensionMismatchException = { 2, "DimensionMismatchException", "org.apache.commons.math", NULL, 0x1, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathDimensionMismatchException;
}

@end

void OrgApacheCommonsMathDimensionMismatchException_initWithInt_withInt_(OrgApacheCommonsMathDimensionMismatchException *self, jint dimension1, jint dimension2) {
  (void) OrgApacheCommonsMathMathException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(self, OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_DIMENSIONS_MISMATCH_SIMPLE(), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(dimension1), JavaLangInteger_valueOfWithInt_(dimension2) } count:2 type:NSObject_class_()]);
  self->dimension1_ = dimension1;
  self->dimension2_ = dimension2;
}

OrgApacheCommonsMathDimensionMismatchException *new_OrgApacheCommonsMathDimensionMismatchException_initWithInt_withInt_(jint dimension1, jint dimension2) {
  OrgApacheCommonsMathDimensionMismatchException *self = [OrgApacheCommonsMathDimensionMismatchException alloc];
  OrgApacheCommonsMathDimensionMismatchException_initWithInt_withInt_(self, dimension1, dimension2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathDimensionMismatchException)
