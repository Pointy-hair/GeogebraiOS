//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/commands/CommandDispatcher.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/util/HashMap.h"
#include "org/geogebra/common/GeoGebraConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Macro.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CAScmdProcessor.h"
#include "org/geogebra/common/kernel/commands/CmdDerivative.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcher.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherAdvanced.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherBasic.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherCAS.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherDiscrete.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherInterface.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherScripting.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherStats.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/commands/CommandsConstants.h"
#include "org/geogebra/common/kernel/commands/MacroProcessor.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/main/MyError.h"
#include "org/geogebra/common/util/debug/Log.h"

@interface OrgGeogebraCommonKernelCommandsCommandDispatcher () {
 @public
  OrgGeogebraCommonKernelConstruction *cons_;
  OrgGeogebraCommonMainApp *app_;
  jboolean isCasActive_;
  OrgGeogebraCommonKernelCommandsMacroProcessor *macroProc_;
  OrgGeogebraCommonKernelCommandsCommandDispatcherStats *statsDispatcher_;
  OrgGeogebraCommonKernelCommandsCommandDispatcherBasic *basicDispatcher_;
}

- (OrgGeogebraCommonKernelCommandsCommandDispatcherStats *)getStatsDispatcher;

- (OrgGeogebraCommonKernelCommandsCommandDispatcherBasic *)getBasicDispatcher;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, cons_, OrgGeogebraCommonKernelConstruction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, macroProc_, OrgGeogebraCommonKernelCommandsMacroProcessor *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, statsDispatcher_, OrgGeogebraCommonKernelCommandsCommandDispatcherStats *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, basicDispatcher_, OrgGeogebraCommonKernelCommandsCommandDispatcherBasic *)

__attribute__((unused)) static OrgGeogebraCommonKernelCommandsCommandDispatcherStats *OrgGeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(OrgGeogebraCommonKernelCommandsCommandDispatcher *self);

__attribute__((unused)) static OrgGeogebraCommonKernelCommandsCommandDispatcherBasic *OrgGeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(OrgGeogebraCommonKernelCommandsCommandDispatcher *self);

@implementation OrgGeogebraCommonKernelCommandsCommandDispatcher

- (NSString *)getSubCommandSetNameWithInt:(jint)index {
  switch (index) {
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_GEOMETRY:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Geometry"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_ALGEBRA:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Algebra"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_TEXT:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Text"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_LOGICAL:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Logic"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_FUNCTION:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.FunctionsAndCalculus"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_CONIC:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Conic"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_LIST:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.List"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_VECTOR:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.VectorAndMatrix"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_TRANSFORMATION:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Transformation"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_CHARTS:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Chart"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_STATISTICS:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Statistics"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_PROBABILITY:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Probability"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_SPREADSHEET:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Spreadsheet"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_SCRIPTING:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Scripting"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_DISCRETE:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.DiscreteMath"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_GEOGEBRA:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.GeoGebra"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_OPTIMIZATION:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.OptimizationCommands"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_CAS:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.CAS"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_3D:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.3D"];
    case OrgGeogebraCommonKernelCommandsCommandsConstants_TABLE_FINANCIAL:
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Type.Financial"];
    default:
    return nil;
  }
}

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel2 {
  OrgGeogebraCommonKernelCommandsCommandDispatcher_initWithOrgGeogebraCommonKernelKernel_(self, kernel2);
  return self;
}

- (jboolean)isCommandAvailableWithNSString:(NSString *)cmd {
  if (cmdTable_ == nil) {
    [self initCmdTable];
  }
  return [((JavaUtilHashMap *) nil_chk(cmdTable_)) containsKeyWithId:cmd];
}

- (IOSObjectArray *)processCommandWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c
                                                                   withBoolean:(jboolean)labelOutput {
  if (cmdTable_ == nil) {
    [self initCmdTable];
  }
  NSString *cmdName = [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getName];
  OrgGeogebraCommonKernelCommandsCommandProcessor *cmdProc;
  OrgGeogebraCommonKernelMacro *macro = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getMacroWithNSString:cmdName];
  if (macro != nil) {
    [c setMacroWithOrgGeogebraCommonKernelMacro:macro];
    cmdProc = macroProc_;
  }
  else {
    cmdProc = [((JavaUtilHashMap *) nil_chk(cmdTable_)) getWithId:cmdName];
    if (cmdProc == nil) {
      cmdProc = [self commandTableSwitchWithNSString:cmdName];
      if (cmdProc != nil) {
        (void) [cmdTable_ putWithId:cmdName withId:cmdProc];
      }
    }
    if (cmdProc == nil && internalCmdTable_ != nil) {
      cmdProc = [internalCmdTable_ getWithId:cmdName];
    }
  }
  if (cmdProc == nil) @throw new_OrgGeogebraCommonMainMyError_initWithOrgGeogebraCommonMainLocalization_withNSString_([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getLocalization], JreStrcat("$$$", [((OrgGeogebraCommonMainLocalization *) nil_chk([app_ getLocalization])) getErrorWithNSString:@"UnknownCommand"], @" : ", [((OrgGeogebraCommonMainLocalization *) nil_chk([app_ getLocalization])) getCommandWithNSString:[c getName]]));
  jboolean oldMacroMode = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) isSuppressLabelsActive];
  if (!labelOutput) [cons_ setSuppressLabelCreationWithBoolean:YES];
  IOSObjectArray *ret = nil;
  @try {
    ret = [((OrgGeogebraCommonKernelCommandsCommandProcessor *) nil_chk(cmdProc)) processWithOrgGeogebraCommonKernelArithmeticCommand:c];
  }
  @catch (OrgGeogebraCommonMainMyError *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    [cons_ setSuppressLabelCreationWithBoolean:oldMacroMode];
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    @throw new_OrgGeogebraCommonMainMyError_initWithOrgGeogebraCommonMainLocalization_withNSString_withNSString_withJavaLangThrowable_([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getLocalization], @"CAS.GeneralErrorMessage", [c getName], e);
  }
  @finally {
    [cons_ setSuppressLabelCreationWithBoolean:oldMacroMode];
  }
  if (macro != nil) [cons_ addUsedMacroWithOrgGeogebraCommonKernelMacro:macro];
  return ret;
}

- (void)initCmdTable {
  macroProc_ = new_OrgGeogebraCommonKernelCommandsMacroProcessor_initWithOrgGeogebraCommonKernelKernel_(kernel_);
  cmdTable_ = new_JavaUtilHashMap_initWithInt_(500);
  casTable_ = new_JavaUtilHashMap_initWithInt_(500);
  {
    IOSObjectArray *a__ = OrgGeogebraCommonKernelCommandsCommandsEnum_values();
    OrgGeogebraCommonKernelCommandsCommandsEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonKernelCommandsCommandsEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonKernelCommandsCommandsEnum *comm = *b__++;
      (void) [cmdTable_ putWithId:[((OrgGeogebraCommonKernelCommandsCommandsEnum *) nil_chk(comm)) name] withId:nil];
    }
  }
  if ([((OrgGeogebraCommonMainApp *) nil_chk(app_)) isUsingFullGui]) [self initCASCommands];
}

- (void)initCASCommands {
  isCasActive_ = YES;
  if (cmdTable_ == nil) return;
  [self fillInternalCmdTable];
}

- (void)fillInternalCmdTable {
  internalCmdTable_ = new_JavaUtilHashMap_init();
  (void) [internalCmdTable_ putWithId:@"diff" withId:new_OrgGeogebraCommonKernelCommandsCmdDerivative_initWithOrgGeogebraCommonKernelKernel_(kernel_)];
}

- (OrgGeogebraCommonKernelCommandsCommandProcessor *)commandTableSwitchWithNSString:(NSString *)cmdName {
  @try {
    OrgGeogebraCommonKernelCommandsCommandsEnum *command = OrgGeogebraCommonKernelCommandsCommandsEnum_valueOfWithNSString_(cmdName);
    switch ([command ordinal]) {
      case OrgGeogebraCommonKernelCommandsCommands_RigidPolygon:
      case OrgGeogebraCommonKernelCommandsCommands_Relation:
      case OrgGeogebraCommonKernelCommandsCommands_CopyFreeObject:
      case OrgGeogebraCommonKernelCommandsCommands_DataFunction:
      case OrgGeogebraCommonKernelCommandsCommands_SetColor:
      case OrgGeogebraCommonKernelCommandsCommands_SetBackgroundColor:
      case OrgGeogebraCommonKernelCommandsCommands_SetDynamicColor:
      case OrgGeogebraCommonKernelCommandsCommands_SetConditionToShowObject:
      case OrgGeogebraCommonKernelCommandsCommands_SetFilling:
      case OrgGeogebraCommonKernelCommandsCommands_SetLineThickness:
      case OrgGeogebraCommonKernelCommandsCommands_SetLineStyle:
      case OrgGeogebraCommonKernelCommandsCommands_SetPointStyle:
      case OrgGeogebraCommonKernelCommandsCommands_SetPointSize:
      case OrgGeogebraCommonKernelCommandsCommands_SetFixed:
      case OrgGeogebraCommonKernelCommandsCommands_SetTrace:
      case OrgGeogebraCommonKernelCommandsCommands_Rename:
      case OrgGeogebraCommonKernelCommandsCommands_HideLayer:
      case OrgGeogebraCommonKernelCommandsCommands_ShowLayer:
      case OrgGeogebraCommonKernelCommandsCommands_SetCoords:
      case OrgGeogebraCommonKernelCommandsCommands_Pan:
      case OrgGeogebraCommonKernelCommandsCommands_CenterView:
      case OrgGeogebraCommonKernelCommandsCommands_ZoomIn:
      case OrgGeogebraCommonKernelCommandsCommands_SetSeed:
      case OrgGeogebraCommonKernelCommandsCommands_ZoomOut:
      case OrgGeogebraCommonKernelCommandsCommands_SetActiveView:
      case OrgGeogebraCommonKernelCommandsCommands_SelectObjects:
      case OrgGeogebraCommonKernelCommandsCommands_SetLayer:
      case OrgGeogebraCommonKernelCommandsCommands_SetCaption:
      case OrgGeogebraCommonKernelCommandsCommands_SetLabelMode:
      case OrgGeogebraCommonKernelCommandsCommands_SetTooltipMode:
      case OrgGeogebraCommonKernelCommandsCommands_UpdateConstruction:
      case OrgGeogebraCommonKernelCommandsCommands_SetValue:
      case OrgGeogebraCommonKernelCommandsCommands_PlaySound:
      case OrgGeogebraCommonKernelCommandsCommands_ParseToNumber:
      case OrgGeogebraCommonKernelCommandsCommands_ParseToFunction:
      case OrgGeogebraCommonKernelCommandsCommands_StartAnimation:
      case OrgGeogebraCommonKernelCommandsCommands_StartLogging:
      case OrgGeogebraCommonKernelCommandsCommands_StopLogging:
      case OrgGeogebraCommonKernelCommandsCommands_StartRecord:
      case OrgGeogebraCommonKernelCommandsCommands_SetPerspective:
      case OrgGeogebraCommonKernelCommandsCommands_Delete:
      case OrgGeogebraCommonKernelCommandsCommands_Repeat:
      case OrgGeogebraCommonKernelCommandsCommands_Slider:
      case OrgGeogebraCommonKernelCommandsCommands_Checkbox:
      case OrgGeogebraCommonKernelCommandsCommands_InputBox:
      case OrgGeogebraCommonKernelCommandsCommands_Textfield:
      case OrgGeogebraCommonKernelCommandsCommands_Button:
      case OrgGeogebraCommonKernelCommandsCommands_Execute:
      case OrgGeogebraCommonKernelCommandsCommands_GetTime:
      case OrgGeogebraCommonKernelCommandsCommands_ShowLabel:
      case OrgGeogebraCommonKernelCommandsCommands_SetAxesRatio:
      case OrgGeogebraCommonKernelCommandsCommands_SetVisibleInView:
      case OrgGeogebraCommonKernelCommandsCommands_ShowAxes:
      case OrgGeogebraCommonKernelCommandsCommands_ShowGrid:
      case OrgGeogebraCommonKernelCommandsCommands_SlowPlot:
      case OrgGeogebraCommonKernelCommandsCommands_ToolImage:
      case OrgGeogebraCommonKernelCommandsCommands_Turtle:
      case OrgGeogebraCommonKernelCommandsCommands_TurtleForward:
      case OrgGeogebraCommonKernelCommandsCommands_TurtleBack:
      case OrgGeogebraCommonKernelCommandsCommands_TurtleLeft:
      case OrgGeogebraCommonKernelCommandsCommands_TurtleRight:
      case OrgGeogebraCommonKernelCommandsCommands_TurtleUp:
      case OrgGeogebraCommonKernelCommandsCommands_TurtleDown:
      case OrgGeogebraCommonKernelCommandsCommands_RunClickScript:
      case OrgGeogebraCommonKernelCommandsCommands_RunUpdateScript:
      return [((id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getScriptingDispatcher])) dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:command withOrgGeogebraCommonKernelKernel:kernel_];
      case OrgGeogebraCommonKernelCommandsCommands_IntersectPath:
      case OrgGeogebraCommonKernelCommandsCommands_IntersectRegion:
      case OrgGeogebraCommonKernelCommandsCommands_Direction:
      case OrgGeogebraCommonKernelCommandsCommands_TaylorPolynomial:
      case OrgGeogebraCommonKernelCommandsCommands_TaylorSeries:
      case OrgGeogebraCommonKernelCommandsCommands_SecondAxis:
      case OrgGeogebraCommonKernelCommandsCommands_MinorAxis:
      case OrgGeogebraCommonKernelCommandsCommands_SemiMinorAxisLength:
      case OrgGeogebraCommonKernelCommandsCommands_SecondAxisLength:
      case OrgGeogebraCommonKernelCommandsCommands_Directrix:
      case OrgGeogebraCommonKernelCommandsCommands_Numerator:
      case OrgGeogebraCommonKernelCommandsCommands_Denominator:
      case OrgGeogebraCommonKernelCommandsCommands_ComplexRoot:
      case OrgGeogebraCommonKernelCommandsCommands_SlopeField:
      case OrgGeogebraCommonKernelCommandsCommands_Iteration:
      case OrgGeogebraCommonKernelCommandsCommands_PathParameter:
      case OrgGeogebraCommonKernelCommandsCommands_Asymptote:
      case OrgGeogebraCommonKernelCommandsCommands_CurvatureVector:
      case OrgGeogebraCommonKernelCommandsCommands_Curvature:
      case OrgGeogebraCommonKernelCommandsCommands_OsculatingCircle:
      case OrgGeogebraCommonKernelCommandsCommands_IterationList:
      case OrgGeogebraCommonKernelCommandsCommands_RootList:
      case OrgGeogebraCommonKernelCommandsCommands_ImplicitCurve:
      case OrgGeogebraCommonKernelCommandsCommands_Roots:
      case OrgGeogebraCommonKernelCommandsCommands_AffineRatio:
      case OrgGeogebraCommonKernelCommandsCommands_CrossRatio:
      case OrgGeogebraCommonKernelCommandsCommands_ClosestPoint:
      case OrgGeogebraCommonKernelCommandsCommands_IsInRegion:
      case OrgGeogebraCommonKernelCommandsCommands_PrimeFactors:
      case OrgGeogebraCommonKernelCommandsCommands_CompleteSquare:
      case OrgGeogebraCommonKernelCommandsCommands_Union:
      case OrgGeogebraCommonKernelCommandsCommands_ScientificText:
      case OrgGeogebraCommonKernelCommandsCommands_VerticalText:
      case OrgGeogebraCommonKernelCommandsCommands_RotateText:
      case OrgGeogebraCommonKernelCommandsCommands_Ordinal:
      case OrgGeogebraCommonKernelCommandsCommands_Parameter:
      case OrgGeogebraCommonKernelCommandsCommands_Incircle:
      case OrgGeogebraCommonKernelCommandsCommands_SelectedElement:
      case OrgGeogebraCommonKernelCommandsCommands_SelectedIndex:
      case OrgGeogebraCommonKernelCommandsCommands_Unique:
      case OrgGeogebraCommonKernelCommandsCommands_Zip:
      case OrgGeogebraCommonKernelCommandsCommands_Intersection:
      case OrgGeogebraCommonKernelCommandsCommands_PointList:
      case OrgGeogebraCommonKernelCommandsCommands_ApplyMatrix:
      case OrgGeogebraCommonKernelCommandsCommands_Invert:
      case OrgGeogebraCommonKernelCommandsCommands_Transpose:
      case OrgGeogebraCommonKernelCommandsCommands_ReducedRowEchelonForm:
      case OrgGeogebraCommonKernelCommandsCommands_Determinant:
      case OrgGeogebraCommonKernelCommandsCommands_Identity:
      case OrgGeogebraCommonKernelCommandsCommands_Centroid:
      case OrgGeogebraCommonKernelCommandsCommands_MajorAxis:
      case OrgGeogebraCommonKernelCommandsCommands_FirstAxis:
      case OrgGeogebraCommonKernelCommandsCommands_SemiMajorAxisLength:
      case OrgGeogebraCommonKernelCommandsCommands_FirstAxisLength:
      case OrgGeogebraCommonKernelCommandsCommands_AxisStepX:
      case OrgGeogebraCommonKernelCommandsCommands_AxisStepY:
      case OrgGeogebraCommonKernelCommandsCommands_ConstructionStep:
      case OrgGeogebraCommonKernelCommandsCommands_Polar:
      case OrgGeogebraCommonKernelCommandsCommands_LinearEccentricity:
      case OrgGeogebraCommonKernelCommandsCommands_Excentricity:
      case OrgGeogebraCommonKernelCommandsCommands_Eccentricity:
      case OrgGeogebraCommonKernelCommandsCommands_Axes:
      case OrgGeogebraCommonKernelCommandsCommands_IndexOf:
      case OrgGeogebraCommonKernelCommandsCommands_Flatten:
      case OrgGeogebraCommonKernelCommandsCommands_Insert:
      case OrgGeogebraCommonKernelCommandsCommands_Prove:
      case OrgGeogebraCommonKernelCommandsCommands_ProveDetails:
      case OrgGeogebraCommonKernelCommandsCommands_DynamicCoordinates:
      case OrgGeogebraCommonKernelCommandsCommands_Maximize:
      case OrgGeogebraCommonKernelCommandsCommands_Minimize:
      case OrgGeogebraCommonKernelCommandsCommands_AreCollinear:
      case OrgGeogebraCommonKernelCommandsCommands_AreParallel:
      case OrgGeogebraCommonKernelCommandsCommands_AreConcyclic:
      case OrgGeogebraCommonKernelCommandsCommands_ArePerpendicular:
      case OrgGeogebraCommonKernelCommandsCommands_AreEqual:
      case OrgGeogebraCommonKernelCommandsCommands_AreConcurrent:
      case OrgGeogebraCommonKernelCommandsCommands_ToBase:
      case OrgGeogebraCommonKernelCommandsCommands_FromBase:
      case OrgGeogebraCommonKernelCommandsCommands_ContinuedFraction:
      case OrgGeogebraCommonKernelCommandsCommands_AttachCopyToView:
      case OrgGeogebraCommonKernelCommandsCommands_Divisors:
      case OrgGeogebraCommonKernelCommandsCommands_DivisorsSum:
      case OrgGeogebraCommonKernelCommandsCommands_Dimension:
      case OrgGeogebraCommonKernelCommandsCommands_DivisorsList:
      case OrgGeogebraCommonKernelCommandsCommands_IsPrime:
      case OrgGeogebraCommonKernelCommandsCommands_LeftSide:
      case OrgGeogebraCommonKernelCommandsCommands_RightSide:
      case OrgGeogebraCommonKernelCommandsCommands_Division:
      case OrgGeogebraCommonKernelCommandsCommands_MatrixRank:
      case OrgGeogebraCommonKernelCommandsCommands_CommonDenominator:
      case OrgGeogebraCommonKernelCommandsCommands_ToPoint:
      case OrgGeogebraCommonKernelCommandsCommands_ToComplex:
      case OrgGeogebraCommonKernelCommandsCommands_ToPolar:
      case OrgGeogebraCommonKernelCommandsCommands_Factors:
      case OrgGeogebraCommonKernelCommandsCommands_NSolveODE:
      case OrgGeogebraCommonKernelCommandsCommands_Rate:
      case OrgGeogebraCommonKernelCommandsCommands_Periods:
      case OrgGeogebraCommonKernelCommandsCommands_Payment:
      case OrgGeogebraCommonKernelCommandsCommands_FutureValue:
      case OrgGeogebraCommonKernelCommandsCommands_PresentValue:
      return [((id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getAdvancedDispatcher])) dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:command withOrgGeogebraCommonKernelKernel:kernel_];
      case OrgGeogebraCommonKernelCommandsCommands_Tangent:
      case OrgGeogebraCommonKernelCommandsCommands_Length:
      case OrgGeogebraCommonKernelCommandsCommands_UnitPerpendicularVector:
      case OrgGeogebraCommonKernelCommandsCommands_UnitOrthogonalVector:
      case OrgGeogebraCommonKernelCommandsCommands_Sort:
      case OrgGeogebraCommonKernelCommandsCommands_BarChart:
      case OrgGeogebraCommonKernelCommandsCommands_Product:
      case OrgGeogebraCommonKernelCommandsCommands_Join:
      case OrgGeogebraCommonKernelCommandsCommands_LCM:
      case OrgGeogebraCommonKernelCommandsCommands_GCD:
      case OrgGeogebraCommonKernelCommandsCommands_LetterToUnicode:
      case OrgGeogebraCommonKernelCommandsCommands_UnicodeToLetter:
      case OrgGeogebraCommonKernelCommandsCommands_Object:
      case OrgGeogebraCommonKernelCommandsCommands_CountIf:
      case OrgGeogebraCommonKernelCommandsCommands_Extremum:
      case OrgGeogebraCommonKernelCommandsCommands_UnitVector:
      case OrgGeogebraCommonKernelCommandsCommands_Text:
      case OrgGeogebraCommonKernelCommandsCommands_Vector:
      case OrgGeogebraCommonKernelCommandsCommands_Dot:
      case OrgGeogebraCommonKernelCommandsCommands_Cross:
      case OrgGeogebraCommonKernelCommandsCommands_PolyLine:
      case OrgGeogebraCommonKernelCommandsCommands_PointIn:
      case OrgGeogebraCommonKernelCommandsCommands_Line:
      case OrgGeogebraCommonKernelCommandsCommands_Ray:
      case OrgGeogebraCommonKernelCommandsCommands_AngleBisector:
      case OrgGeogebraCommonKernelCommandsCommands_AngularBisector:
      case OrgGeogebraCommonKernelCommandsCommands_Segment:
      case OrgGeogebraCommonKernelCommandsCommands_Slope:
      case OrgGeogebraCommonKernelCommandsCommands_Angle:
      case OrgGeogebraCommonKernelCommandsCommands_Point:
      case OrgGeogebraCommonKernelCommandsCommands_Midpoint:
      case OrgGeogebraCommonKernelCommandsCommands_Intersect:
      case OrgGeogebraCommonKernelCommandsCommands_Distance:
      case OrgGeogebraCommonKernelCommandsCommands_Radius:
      case OrgGeogebraCommonKernelCommandsCommands_Arc:
      case OrgGeogebraCommonKernelCommandsCommands_Sector:
      case OrgGeogebraCommonKernelCommandsCommands_CircleArc:
      case OrgGeogebraCommonKernelCommandsCommands_CircularArc:
      case OrgGeogebraCommonKernelCommandsCommands_CircleSector:
      case OrgGeogebraCommonKernelCommandsCommands_CircularSector:
      case OrgGeogebraCommonKernelCommandsCommands_CircumcircleSector:
      case OrgGeogebraCommonKernelCommandsCommands_CircumcircularSector:
      case OrgGeogebraCommonKernelCommandsCommands_CircumcircleArc:
      case OrgGeogebraCommonKernelCommandsCommands_CircumcircularArc:
      case OrgGeogebraCommonKernelCommandsCommands_Polygon:
      case OrgGeogebraCommonKernelCommandsCommands_Area:
      case OrgGeogebraCommonKernelCommandsCommands_Circumference:
      case OrgGeogebraCommonKernelCommandsCommands_Perimeter:
      case OrgGeogebraCommonKernelCommandsCommands_Locus:
      case OrgGeogebraCommonKernelCommandsCommands_Vertex:
      case OrgGeogebraCommonKernelCommandsCommands_If:
      case OrgGeogebraCommonKernelCommandsCommands_Root:
      case OrgGeogebraCommonKernelCommandsCommands_TurningPoint:
      case OrgGeogebraCommonKernelCommandsCommands_Polynomial:
      case OrgGeogebraCommonKernelCommandsCommands_Spline:
      case OrgGeogebraCommonKernelCommandsCommands_Function:
      case OrgGeogebraCommonKernelCommandsCommands_Curve:
      case OrgGeogebraCommonKernelCommandsCommands_CurveCartesian:
      case OrgGeogebraCommonKernelCommandsCommands_LowerSum:
      case OrgGeogebraCommonKernelCommandsCommands_LeftSum:
      case OrgGeogebraCommonKernelCommandsCommands_RectangleSum:
      case OrgGeogebraCommonKernelCommandsCommands_UpperSum:
      case OrgGeogebraCommonKernelCommandsCommands_TrapezoidalSum:
      case OrgGeogebraCommonKernelCommandsCommands_Ellipse:
      case OrgGeogebraCommonKernelCommandsCommands_Hyperbola:
      case OrgGeogebraCommonKernelCommandsCommands_Conic:
      case OrgGeogebraCommonKernelCommandsCommands_Circle:
      case OrgGeogebraCommonKernelCommandsCommands_Semicircle:
      case OrgGeogebraCommonKernelCommandsCommands_Parabola:
      case OrgGeogebraCommonKernelCommandsCommands_Focus:
      case OrgGeogebraCommonKernelCommandsCommands_Center:
      case OrgGeogebraCommonKernelCommandsCommands_Element:
      case OrgGeogebraCommonKernelCommandsCommands_Sequence:
      case OrgGeogebraCommonKernelCommandsCommands_Reflect:
      case OrgGeogebraCommonKernelCommandsCommands_Mirror:
      case OrgGeogebraCommonKernelCommandsCommands_Dilate:
      case OrgGeogebraCommonKernelCommandsCommands_Rotate:
      case OrgGeogebraCommonKernelCommandsCommands_Translate:
      case OrgGeogebraCommonKernelCommandsCommands_Shear:
      case OrgGeogebraCommonKernelCommandsCommands_Stretch:
      case OrgGeogebraCommonKernelCommandsCommands_Corner:
      case OrgGeogebraCommonKernelCommandsCommands_Name:
      case OrgGeogebraCommonKernelCommandsCommands_Diameter:
      case OrgGeogebraCommonKernelCommandsCommands_ConjugateDiameter:
      case OrgGeogebraCommonKernelCommandsCommands_LineBisector:
      case OrgGeogebraCommonKernelCommandsCommands_PerpendicularBisector:
      case OrgGeogebraCommonKernelCommandsCommands_OrthogonalLine:
      case OrgGeogebraCommonKernelCommandsCommands_PerpendicularLine:
      case OrgGeogebraCommonKernelCommandsCommands_OrthogonalVector:
      case OrgGeogebraCommonKernelCommandsCommands_PerpendicularVector:
      case OrgGeogebraCommonKernelCommandsCommands_Random:
      case OrgGeogebraCommonKernelCommandsCommands_RandomBetween:
      case OrgGeogebraCommonKernelCommandsCommands_Sum:
      case OrgGeogebraCommonKernelCommandsCommands_Binomial:
      case OrgGeogebraCommonKernelCommandsCommands_BinomialCoefficient:
      case OrgGeogebraCommonKernelCommandsCommands_Mod:
      case OrgGeogebraCommonKernelCommandsCommands_Div:
      case OrgGeogebraCommonKernelCommandsCommands_Min:
      case OrgGeogebraCommonKernelCommandsCommands_Max:
      case OrgGeogebraCommonKernelCommandsCommands_Append:
      case OrgGeogebraCommonKernelCommandsCommands_First:
      case OrgGeogebraCommonKernelCommandsCommands_Last:
      case OrgGeogebraCommonKernelCommandsCommands_Remove:
      case OrgGeogebraCommonKernelCommandsCommands_RemoveUndefined:
      case OrgGeogebraCommonKernelCommandsCommands_Reverse:
      case OrgGeogebraCommonKernelCommandsCommands_TableText:
      case OrgGeogebraCommonKernelCommandsCommands_Take:
      case OrgGeogebraCommonKernelCommandsCommands_TextToUnicode:
      case OrgGeogebraCommonKernelCommandsCommands_UnicodeToText:
      case OrgGeogebraCommonKernelCommandsCommands_FractionText:
      case OrgGeogebraCommonKernelCommandsCommands_KeepIf:
      case OrgGeogebraCommonKernelCommandsCommands_IsInteger:
      case OrgGeogebraCommonKernelCommandsCommands_Defined:
      case OrgGeogebraCommonKernelCommandsCommands_IsDefined:
      case OrgGeogebraCommonKernelCommandsCommands_FormulaText:
      case OrgGeogebraCommonKernelCommandsCommands_LaTeX:
      return [((OrgGeogebraCommonKernelCommandsCommandDispatcherBasic *) nil_chk(OrgGeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(self))) dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:command withOrgGeogebraCommonKernelKernel:kernel_];
      case OrgGeogebraCommonKernelCommandsCommands_CFactor:
      case OrgGeogebraCommonKernelCommandsCommands_CIFactor:
      case OrgGeogebraCommonKernelCommandsCommands_CSolutions:
      case OrgGeogebraCommonKernelCommandsCommands_CSolve:
      case OrgGeogebraCommonKernelCommandsCommands_Eliminate:
      case OrgGeogebraCommonKernelCommandsCommands_GroebnerLex:
      case OrgGeogebraCommonKernelCommandsCommands_GroebnerDegRevLex:
      case OrgGeogebraCommonKernelCommandsCommands_GroebnerLexDeg:
      case OrgGeogebraCommonKernelCommandsCommands_NSolve:
      case OrgGeogebraCommonKernelCommandsCommands_NSolutions:
      case OrgGeogebraCommonKernelCommandsCommands_Numeric:
      case OrgGeogebraCommonKernelCommandsCommands_MixedNumber:
      case OrgGeogebraCommonKernelCommandsCommands_Rationalize:
      case OrgGeogebraCommonKernelCommandsCommands_Solutions:
      case OrgGeogebraCommonKernelCommandsCommands_Solve:
      case OrgGeogebraCommonKernelCommandsCommands_Substitute:
      case OrgGeogebraCommonKernelCommandsCommands_ToExponential:
      return new_OrgGeogebraCommonKernelCommandsCAScmdProcessor_initWithOrgGeogebraCommonKernelKernel_(kernel_);
      case OrgGeogebraCommonKernelCommandsCommands_ANOVA:
      case OrgGeogebraCommonKernelCommandsCommands_Bernoulli:
      case OrgGeogebraCommonKernelCommandsCommands_BinomialDist:
      case OrgGeogebraCommonKernelCommandsCommands_BoxPlot:
      case OrgGeogebraCommonKernelCommandsCommands_Cauchy:
      case OrgGeogebraCommonKernelCommandsCommands_Cell:
      case OrgGeogebraCommonKernelCommandsCommands_CellRange:
      case OrgGeogebraCommonKernelCommandsCommands_ChiSquaredTest:
      case OrgGeogebraCommonKernelCommandsCommands_ChiSquared:
      case OrgGeogebraCommonKernelCommandsCommands_Classes:
      case OrgGeogebraCommonKernelCommandsCommands_Column:
      case OrgGeogebraCommonKernelCommandsCommands_ColumnName:
      case OrgGeogebraCommonKernelCommandsCommands_CorrelationCoefficient:
      case OrgGeogebraCommonKernelCommandsCommands_Covariance:
      case OrgGeogebraCommonKernelCommandsCommands_ContingencyTable:
      case OrgGeogebraCommonKernelCommandsCommands_DotPlot:
      case OrgGeogebraCommonKernelCommandsCommands_Erlang:
      case OrgGeogebraCommonKernelCommandsCommands_Exponential:
      case OrgGeogebraCommonKernelCommandsCommands_FDistribution:
      case OrgGeogebraCommonKernelCommandsCommands_FillCells:
      case OrgGeogebraCommonKernelCommandsCommands_FillColumn:
      case OrgGeogebraCommonKernelCommandsCommands_FillRow:
      case OrgGeogebraCommonKernelCommandsCommands_Fit:
      case OrgGeogebraCommonKernelCommandsCommands_FitImplicit:
      case OrgGeogebraCommonKernelCommandsCommands_FitExp:
      case OrgGeogebraCommonKernelCommandsCommands_FitGrowth:
      case OrgGeogebraCommonKernelCommandsCommands_FitLine:
      case OrgGeogebraCommonKernelCommandsCommands_FitLineX:
      case OrgGeogebraCommonKernelCommandsCommands_FitLineY:
      case OrgGeogebraCommonKernelCommandsCommands_FitLog:
      case OrgGeogebraCommonKernelCommandsCommands_FitLogistic:
      case OrgGeogebraCommonKernelCommandsCommands_FitPoly:
      case OrgGeogebraCommonKernelCommandsCommands_FitPow:
      case OrgGeogebraCommonKernelCommandsCommands_FitSin:
      case OrgGeogebraCommonKernelCommandsCommands_Frequency:
      case OrgGeogebraCommonKernelCommandsCommands_FrequencyPolygon:
      case OrgGeogebraCommonKernelCommandsCommands_FrequencyTable:
      case OrgGeogebraCommonKernelCommandsCommands_Gamma:
      case OrgGeogebraCommonKernelCommandsCommands_GeometricMean:
      case OrgGeogebraCommonKernelCommandsCommands_HarmonicMean:
      case OrgGeogebraCommonKernelCommandsCommands_Histogram:
      case OrgGeogebraCommonKernelCommandsCommands_HistogramRight:
      case OrgGeogebraCommonKernelCommandsCommands_HyperGeometric:
      case OrgGeogebraCommonKernelCommandsCommands_InverseBinomial:
      case OrgGeogebraCommonKernelCommandsCommands_InverseCauchy:
      case OrgGeogebraCommonKernelCommandsCommands_InverseChiSquared:
      case OrgGeogebraCommonKernelCommandsCommands_InverseExponential:
      case OrgGeogebraCommonKernelCommandsCommands_InverseFDistribution:
      case OrgGeogebraCommonKernelCommandsCommands_InverseGamma:
      case OrgGeogebraCommonKernelCommandsCommands_InverseHyperGeometric:
      case OrgGeogebraCommonKernelCommandsCommands_InverseLogNormal:
      case OrgGeogebraCommonKernelCommandsCommands_InverseLogistic:
      case OrgGeogebraCommonKernelCommandsCommands_InverseNormal:
      case OrgGeogebraCommonKernelCommandsCommands_InversePascal:
      case OrgGeogebraCommonKernelCommandsCommands_InversePoisson:
      case OrgGeogebraCommonKernelCommandsCommands_InverseTDistribution:
      case OrgGeogebraCommonKernelCommandsCommands_InverseWeibull:
      case OrgGeogebraCommonKernelCommandsCommands_InverseZipf:
      case OrgGeogebraCommonKernelCommandsCommands_LogNormal:
      case OrgGeogebraCommonKernelCommandsCommands_Logistic:
      case OrgGeogebraCommonKernelCommandsCommands_Mean:
      case OrgGeogebraCommonKernelCommandsCommands_MeanX:
      case OrgGeogebraCommonKernelCommandsCommands_MeanY:
      case OrgGeogebraCommonKernelCommandsCommands_Median:
      case OrgGeogebraCommonKernelCommandsCommands_Mode:
      case OrgGeogebraCommonKernelCommandsCommands_Normal:
      case OrgGeogebraCommonKernelCommandsCommands_NormalQuantilePlot:
      case OrgGeogebraCommonKernelCommandsCommands_nPr:
      case OrgGeogebraCommonKernelCommandsCommands_OrdinalRank:
      case OrgGeogebraCommonKernelCommandsCommands_PMCC:
      case OrgGeogebraCommonKernelCommandsCommands_Pascal:
      case OrgGeogebraCommonKernelCommandsCommands_Percentile:
      case OrgGeogebraCommonKernelCommandsCommands_Poisson:
      case OrgGeogebraCommonKernelCommandsCommands_Q1:
      case OrgGeogebraCommonKernelCommandsCommands_Q3:
      case OrgGeogebraCommonKernelCommandsCommands_RSquare:
      case OrgGeogebraCommonKernelCommandsCommands_RandomElement:
      case OrgGeogebraCommonKernelCommandsCommands_RandomPolynomial:
      case OrgGeogebraCommonKernelCommandsCommands_RandomBinomial:
      case OrgGeogebraCommonKernelCommandsCommands_RandomNormal:
      case OrgGeogebraCommonKernelCommandsCommands_RandomPoisson:
      case OrgGeogebraCommonKernelCommandsCommands_RandomUniform:
      case OrgGeogebraCommonKernelCommandsCommands_ResidualPlot:
      case OrgGeogebraCommonKernelCommandsCommands_RootMeanSquare:
      case OrgGeogebraCommonKernelCommandsCommands_Row:
      case OrgGeogebraCommonKernelCommandsCommands_SD:
      case OrgGeogebraCommonKernelCommandsCommands_SDX:
      case OrgGeogebraCommonKernelCommandsCommands_SDY:
      case OrgGeogebraCommonKernelCommandsCommands_SXX:
      case OrgGeogebraCommonKernelCommandsCommands_SXY:
      case OrgGeogebraCommonKernelCommandsCommands_SYY:
      case OrgGeogebraCommonKernelCommandsCommands_Sample:
      case OrgGeogebraCommonKernelCommandsCommands_SampleSD:
      case OrgGeogebraCommonKernelCommandsCommands_SampleSDX:
      case OrgGeogebraCommonKernelCommandsCommands_SampleSDY:
      case OrgGeogebraCommonKernelCommandsCommands_SampleVariance:
      case OrgGeogebraCommonKernelCommandsCommands_Shuffle:
      case OrgGeogebraCommonKernelCommandsCommands_SigmaXX:
      case OrgGeogebraCommonKernelCommandsCommands_SigmaXY:
      case OrgGeogebraCommonKernelCommandsCommands_SigmaYY:
      case OrgGeogebraCommonKernelCommandsCommands_Spearman:
      case OrgGeogebraCommonKernelCommandsCommands_StemPlot:
      case OrgGeogebraCommonKernelCommandsCommands_StepGraph:
      case OrgGeogebraCommonKernelCommandsCommands_StickGraph:
      case OrgGeogebraCommonKernelCommandsCommands_SumSquaredErrors:
      case OrgGeogebraCommonKernelCommandsCommands_TDistribution:
      case OrgGeogebraCommonKernelCommandsCommands_TMean2Estimate:
      case OrgGeogebraCommonKernelCommandsCommands_TMeanEstimate:
      case OrgGeogebraCommonKernelCommandsCommands_TTest2:
      case OrgGeogebraCommonKernelCommandsCommands_TTest:
      case OrgGeogebraCommonKernelCommandsCommands_TTestPaired:
      case OrgGeogebraCommonKernelCommandsCommands_TiedRank:
      case OrgGeogebraCommonKernelCommandsCommands_Triangular:
      case OrgGeogebraCommonKernelCommandsCommands_Uniform:
      case OrgGeogebraCommonKernelCommandsCommands_Variance:
      case OrgGeogebraCommonKernelCommandsCommands_Weibull:
      case OrgGeogebraCommonKernelCommandsCommands_ZMean2Estimate:
      case OrgGeogebraCommonKernelCommandsCommands_ZMean2Test:
      case OrgGeogebraCommonKernelCommandsCommands_ZMeanEstimate:
      case OrgGeogebraCommonKernelCommandsCommands_ZMeanTest:
      case OrgGeogebraCommonKernelCommandsCommands_ZProportion2Estimate:
      case OrgGeogebraCommonKernelCommandsCommands_ZProportion2Test:
      case OrgGeogebraCommonKernelCommandsCommands_ZProportionEstimate:
      case OrgGeogebraCommonKernelCommandsCommands_ZProportionTest:
      case OrgGeogebraCommonKernelCommandsCommands_Zipf:
      return [((OrgGeogebraCommonKernelCommandsCommandDispatcherStats *) nil_chk(OrgGeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(self))) dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:command withOrgGeogebraCommonKernelKernel:kernel_];
      case OrgGeogebraCommonKernelCommandsCommands_TriangleCenter:
      case OrgGeogebraCommonKernelCommandsCommands_Barycenter:
      case OrgGeogebraCommonKernelCommandsCommands_Trilinear:
      case OrgGeogebraCommonKernelCommandsCommands_Cubic:
      case OrgGeogebraCommonKernelCommandsCommands_TriangleCurve:
      case OrgGeogebraCommonKernelCommandsCommands_Voronoi:
      case OrgGeogebraCommonKernelCommandsCommands_Hull:
      case OrgGeogebraCommonKernelCommandsCommands_ConvexHull:
      case OrgGeogebraCommonKernelCommandsCommands_MinimumSpanningTree:
      case OrgGeogebraCommonKernelCommandsCommands_DelauneyTriangulation:
      case OrgGeogebraCommonKernelCommandsCommands_TravelingSalesman:
      case OrgGeogebraCommonKernelCommandsCommands_ShortestDistance:
      return [((id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getDiscreteDispatcher])) dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:command withOrgGeogebraCommonKernelKernel:kernel_];
      case OrgGeogebraCommonKernelCommandsCommands_LocusEquation:
      case OrgGeogebraCommonKernelCommandsCommands_Envelope:
      case OrgGeogebraCommonKernelCommandsCommands_Expand:
      case OrgGeogebraCommonKernelCommandsCommands_Factor:
      case OrgGeogebraCommonKernelCommandsCommands_IFactor:
      case OrgGeogebraCommonKernelCommandsCommands_Simplify:
      case OrgGeogebraCommonKernelCommandsCommands_SurdText:
      case OrgGeogebraCommonKernelCommandsCommands_ParametricDerivative:
      case OrgGeogebraCommonKernelCommandsCommands_Derivative:
      case OrgGeogebraCommonKernelCommandsCommands_Integral:
      case OrgGeogebraCommonKernelCommandsCommands_IntegralBetween:
      case OrgGeogebraCommonKernelCommandsCommands_NIntegral:
      case OrgGeogebraCommonKernelCommandsCommands_TrigExpand:
      case OrgGeogebraCommonKernelCommandsCommands_TrigSimplify:
      case OrgGeogebraCommonKernelCommandsCommands_TrigCombine:
      case OrgGeogebraCommonKernelCommandsCommands_Limit:
      case OrgGeogebraCommonKernelCommandsCommands_LimitBelow:
      case OrgGeogebraCommonKernelCommandsCommands_LimitAbove:
      case OrgGeogebraCommonKernelCommandsCommands_Degree:
      case OrgGeogebraCommonKernelCommandsCommands_Coefficients:
      case OrgGeogebraCommonKernelCommandsCommands_PartialFractions:
      case OrgGeogebraCommonKernelCommandsCommands_SolveODE:
      case OrgGeogebraCommonKernelCommandsCommands_ImplicitDerivative:
      case OrgGeogebraCommonKernelCommandsCommands_NextPrime:
      case OrgGeogebraCommonKernelCommandsCommands_PreviousPrime:
      return [((id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>) nil_chk([self getCASDispatcher])) dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:command withOrgGeogebraCommonKernelKernel:kernel_];
      default:
      OrgGeogebraCommonUtilDebugLog_errorWithNSString_(JreStrcat("$$", @"missing case in CommandDispatcher ", cmdName));
      return nil;
    }
  }
  @catch (JavaLangException *e) {
    OrgGeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$$", @"command not found / CAS command called:", cmdName));
  }
  return nil;
}

- (OrgGeogebraCommonKernelCommandsCommandDispatcherStats *)getStatsDispatcher {
  return OrgGeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(self);
}

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getDiscreteDispatcher {
  if (discreteDispatcher_ == nil) {
    discreteDispatcher_ = new_OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete_init();
  }
  return discreteDispatcher_;
}

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getCASDispatcher {
  if (casDispatcher_ == nil) {
    casDispatcher_ = new_OrgGeogebraCommonKernelCommandsCommandDispatcherCAS_init();
  }
  return casDispatcher_;
}

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getScriptingDispatcher {
  if (scriptingDispatcher_ == nil) {
    scriptingDispatcher_ = new_OrgGeogebraCommonKernelCommandsCommandDispatcherScripting_init();
  }
  return scriptingDispatcher_;
}

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getAdvancedDispatcher {
  if (advancedDispatcher_ == nil) {
    advancedDispatcher_ = new_OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced_init();
  }
  return advancedDispatcher_;
}

- (OrgGeogebraCommonKernelCommandsCommandDispatcherBasic *)getBasicDispatcher {
  return OrgGeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSubCommandSetNameWithInt:", "getSubCommandSetName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernel:", "CommandDispatcher", NULL, 0x1, NULL, NULL },
    { "isCommandAvailableWithNSString:", "isCommandAvailable", "Z", 0x1, NULL, NULL },
    { "processCommandWithOrgGeogebraCommonKernelArithmeticCommand:withBoolean:", "processCommand", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x11, "Lorg.geogebra.common.main.MyError;", NULL },
    { "initCmdTable", NULL, "V", 0x4, NULL, NULL },
    { "initCASCommands", NULL, "V", 0x1, NULL, NULL },
    { "fillInternalCmdTable", NULL, "V", 0x4, NULL, NULL },
    { "commandTableSwitchWithNSString:", "commandTableSwitch", "Lorg.geogebra.common.kernel.commands.CommandProcessor;", 0x1, NULL, NULL },
    { "getStatsDispatcher", NULL, "Lorg.geogebra.common.kernel.commands.CommandDispatcherStats;", 0x2, NULL, NULL },
    { "getDiscreteDispatcher", NULL, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getCASDispatcher", NULL, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getScriptingDispatcher", NULL, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getAdvancedDispatcher", NULL, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", 0x4, NULL, NULL },
    { "getBasicDispatcher", NULL, "Lorg.geogebra.common.kernel.commands.CommandDispatcherBasic;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "kernel_", NULL, 0x4, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "cons_", NULL, 0x2, "Lorg.geogebra.common.kernel.Construction;", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "isCasActive_", NULL, 0x2, "Z", NULL, NULL,  },
    { "cmdTable_", NULL, 0x4, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lorg/geogebra/common/kernel/commands/CommandProcessor;>;",  },
    { "casTable_", NULL, 0x4, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lorg/geogebra/common/kernel/commands/CommandProcessor;>;",  },
    { "tableCount_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelCommandsCommandDispatcher_tableCount },
    { "internalCmdTable_", NULL, 0x4, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lorg/geogebra/common/kernel/commands/CommandProcessor;>;",  },
    { "macroProc_", NULL, 0x2, "Lorg.geogebra.common.kernel.commands.MacroProcessor;", NULL, NULL,  },
    { "statsDispatcher_", NULL, 0x2, "Lorg.geogebra.common.kernel.commands.CommandDispatcherStats;", NULL, NULL,  },
    { "discreteDispatcher_", NULL, 0x4, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "casDispatcher_", NULL, 0x4, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "scriptingDispatcher_", NULL, 0x4, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "advancedDispatcher_", NULL, 0x4, "Lorg.geogebra.common.kernel.commands.CommandDispatcherInterface;", NULL, NULL,  },
    { "basicDispatcher_", NULL, 0x2, "Lorg.geogebra.common.kernel.commands.CommandDispatcherBasic;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCommandsCommandDispatcher = { 2, "CommandDispatcher", "org.geogebra.common.kernel.commands", NULL, 0x401, 14, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCommandsCommandDispatcher;
}

@end

void OrgGeogebraCommonKernelCommandsCommandDispatcher_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelCommandsCommandDispatcher *self, OrgGeogebraCommonKernelKernel *kernel2) {
  (void) NSObject_init(self);
  self->isCasActive_ = NO;
  self->statsDispatcher_ = nil;
  self->discreteDispatcher_ = nil;
  self->casDispatcher_ = nil;
  self->scriptingDispatcher_ = nil;
  self->advancedDispatcher_ = nil;
  self->basicDispatcher_ = nil;
  self->kernel_ = kernel2;
  self->cons_ = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel2)) getConstruction];
  self->app_ = [kernel2 getApplication];
}

OrgGeogebraCommonKernelCommandsCommandDispatcherStats *OrgGeogebraCommonKernelCommandsCommandDispatcher_getStatsDispatcher(OrgGeogebraCommonKernelCommandsCommandDispatcher *self) {
  if (self->statsDispatcher_ == nil) {
    self->statsDispatcher_ = new_OrgGeogebraCommonKernelCommandsCommandDispatcherStats_init();
  }
  return self->statsDispatcher_;
}

OrgGeogebraCommonKernelCommandsCommandDispatcherBasic *OrgGeogebraCommonKernelCommandsCommandDispatcher_getBasicDispatcher(OrgGeogebraCommonKernelCommandsCommandDispatcher *self) {
  if (self->basicDispatcher_ == nil) {
    self->basicDispatcher_ = new_OrgGeogebraCommonKernelCommandsCommandDispatcherBasic_init();
  }
  return self->basicDispatcher_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCommandsCommandDispatcher)
