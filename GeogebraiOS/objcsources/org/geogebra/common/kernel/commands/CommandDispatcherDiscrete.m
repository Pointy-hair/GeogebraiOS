//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/commands/CommandDispatcherDiscrete.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/barycentric/CmdBarycenter.h"
#include "org/geogebra/common/kernel/barycentric/CmdCubic.h"
#include "org/geogebra/common/kernel/barycentric/CmdKimberling.h"
#include "org/geogebra/common/kernel/barycentric/CmdTriangleCurve.h"
#include "org/geogebra/common/kernel/barycentric/CmdTrilinear.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherDiscrete.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/discrete/CmdConvexHull.h"
#include "org/geogebra/common/kernel/discrete/CmdDelauneyTriangulation.h"
#include "org/geogebra/common/kernel/discrete/CmdHull.h"
#include "org/geogebra/common/kernel/discrete/CmdMinimumSpanningTree.h"
#include "org/geogebra/common/kernel/discrete/CmdShortestDistance.h"
#include "org/geogebra/common/kernel/discrete/CmdTravelingSalesman.h"
#include "org/geogebra/common/kernel/discrete/CmdVoronoi.h"

@implementation OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete

- (OrgGeogebraCommonKernelCommandsCommandProcessor *)dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:(OrgGeogebraCommonKernelCommandsCommandsEnum *)c
                                                                           withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  switch ([c ordinal]) {
    case OrgGeogebraCommonKernelCommandsCommands_TriangleCenter:
    return new_OrgGeogebraCommonKernelBarycentricCmdKimberling_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_Barycenter:
    return new_OrgGeogebraCommonKernelBarycentricCmdBarycenter_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_Trilinear:
    return new_OrgGeogebraCommonKernelBarycentricCmdTrilinear_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_Cubic:
    return new_OrgGeogebraCommonKernelBarycentricCmdCubic_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_TriangleCurve:
    return new_OrgGeogebraCommonKernelBarycentricCmdTriangleCurve_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_Voronoi:
    return new_OrgGeogebraCommonKernelDiscreteCmdVoronoi_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_Hull:
    return new_OrgGeogebraCommonKernelDiscreteCmdHull_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_ConvexHull:
    return new_OrgGeogebraCommonKernelDiscreteCmdConvexHull_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_MinimumSpanningTree:
    return new_OrgGeogebraCommonKernelDiscreteCmdMinimumSpanningTree_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_DelauneyTriangulation:
    return new_OrgGeogebraCommonKernelDiscreteCmdDelauneyTriangulation_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_TravelingSalesman:
    return new_OrgGeogebraCommonKernelDiscreteCmdTravelingSalesman_initWithOrgGeogebraCommonKernelKernel_(kernel);
    case OrgGeogebraCommonKernelCommandsCommands_ShortestDistance:
    return new_OrgGeogebraCommonKernelDiscreteCmdShortestDistance_initWithOrgGeogebraCommonKernelKernel_(kernel);
    default:
    break;
  }
  return nil;
}

- (instancetype)init {
  OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:withOrgGeogebraCommonKernelKernel:", "dispatch", "Lorg.geogebra.common.kernel.commands.CommandProcessor;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete = { 2, "CommandDispatcherDiscrete", "org.geogebra.common.kernel.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete;
}

@end

void OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete_init(OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete *new_OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete_init() {
  OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete *self = [OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete alloc];
  OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCommandsCommandDispatcherDiscrete)
