//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/commands/CommandDictionary.java
//


#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/kernel/commands/CommandDictionary.h"

#define OrgGeogebraCommonKernelCommandsCommandDictionary_serialVersionUID 1LL

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelCommandsCommandDictionary, serialVersionUID, jlong)

@implementation OrgGeogebraCommonKernelCommandsCommandDictionary

- (void)addEntryWithNSString:(NSString *)s {
  [super addWithId:s];
}

- (jboolean)removeEntryWithNSString:(NSString *)s {
  return [super removeWithId:s];
}

- (NSString *)lookupWithNSString:(NSString *)curr {
  if ([@"" isEqual:curr]) return nil;
  @try {
    id<JavaUtilSortedSet> tailSet = [self tailSetWithId:curr];
    if (tailSet != nil) {
      id firstObj = [tailSet first];
      if (firstObj != nil) {
        NSString *first = (NSString *) check_class_cast(firstObj, [NSString class]);
        if ([first hasPrefix:curr]) return first;
      }
    }
  }
  @catch (JavaLangException *e) {
    return nil;
  }
  return nil;
}

- (instancetype)init {
  OrgGeogebraCommonKernelCommandsCommandDictionary_init(self);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addEntryWithNSString:", "addEntry", "V", 0x1, NULL, NULL },
    { "removeEntryWithNSString:", "removeEntry", "Z", 0x1, NULL, NULL },
    { "lookupWithNSString:", "lookup", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonKernelCommandsCommandDictionary_serialVersionUID },
  };
  static const char *superclass_type_args[] = {"Ljava.lang.String;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCommandsCommandDictionary = { 2, "CommandDictionary", "org.geogebra.common.kernel.commands", NULL, 0x1, 4, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/TreeSet<Ljava/lang/String;>;" };
  return &_OrgGeogebraCommonKernelCommandsCommandDictionary;
}

@end

void OrgGeogebraCommonKernelCommandsCommandDictionary_init(OrgGeogebraCommonKernelCommandsCommandDictionary *self) {
  JavaUtilTreeSet_init(self);
}

OrgGeogebraCommonKernelCommandsCommandDictionary *new_OrgGeogebraCommonKernelCommandsCommandDictionary_init() {
  OrgGeogebraCommonKernelCommandsCommandDictionary *self = [OrgGeogebraCommonKernelCommandsCommandDictionary alloc];
  OrgGeogebraCommonKernelCommandsCommandDictionary_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCommandsCommandDictionary)
