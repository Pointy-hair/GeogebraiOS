//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/commands/CommandDispatcher.java
//

#ifndef _OrgGeogebraCommonKernelCommandsCommandDispatcher_H_
#define _OrgGeogebraCommonKernelCommandsCommandDispatcher_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaUtilHashMap;
@class OrgGeogebraCommonKernelArithmeticCommand;
@class OrgGeogebraCommonKernelCommandsCommandProcessor;
@class OrgGeogebraCommonKernelKernel;
@protocol OrgGeogebraCommonKernelCommandsCommandDispatcherInterface;

#define OrgGeogebraCommonKernelCommandsCommandDispatcher_tableCount 20

@interface OrgGeogebraCommonKernelCommandsCommandDispatcher : NSObject {
 @public
  OrgGeogebraCommonKernelKernel *kernel_;
  JavaUtilHashMap *cmdTable_;
  JavaUtilHashMap *casTable_;
  JavaUtilHashMap *internalCmdTable_;
  id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface> discreteDispatcher_;
  id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface> casDispatcher_;
  id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface> scriptingDispatcher_;
  id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface> advancedDispatcher_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel2;

- (OrgGeogebraCommonKernelCommandsCommandProcessor *)commandTableSwitchWithNSString:(NSString *)cmdName;

- (NSString *)getSubCommandSetNameWithInt:(jint)index;

- (void)initCASCommands OBJC_METHOD_FAMILY_NONE;

- (jboolean)isCommandAvailableWithNSString:(NSString *)cmd;

- (IOSObjectArray *)processCommandWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c
                                                                   withBoolean:(jboolean)labelOutput;

#pragma mark Protected

- (void)fillInternalCmdTable;

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getAdvancedDispatcher;

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getCASDispatcher;

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getDiscreteDispatcher;

- (id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)getScriptingDispatcher;

- (void)initCmdTable OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelCommandsCommandDispatcher)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, kernel_, OrgGeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, cmdTable_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, casTable_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, internalCmdTable_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, discreteDispatcher_, id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, casDispatcher_, id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, scriptingDispatcher_, id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, advancedDispatcher_, id<OrgGeogebraCommonKernelCommandsCommandDispatcherInterface>)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelCommandsCommandDispatcher, tableCount, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelCommandsCommandDispatcher_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelCommandsCommandDispatcher *self, OrgGeogebraCommonKernelKernel *kernel2);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelCommandsCommandDispatcher)

#endif // _OrgGeogebraCommonKernelCommandsCommandDispatcher_H_
