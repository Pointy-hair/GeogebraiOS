//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/commands/CommandDispatcherAdvanced.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/advanced/CmdAffineRatio.h"
#include "org/geogebra/common/kernel/advanced/CmdApplyMatrix.h"
#include "org/geogebra/common/kernel/advanced/CmdAreCollinear.h"
#include "org/geogebra/common/kernel/advanced/CmdAreConcurrent.h"
#include "org/geogebra/common/kernel/advanced/CmdAreConcyclic.h"
#include "org/geogebra/common/kernel/advanced/CmdAreEqual.h"
#include "org/geogebra/common/kernel/advanced/CmdAreParallel.h"
#include "org/geogebra/common/kernel/advanced/CmdArePerpendicular.h"
#include "org/geogebra/common/kernel/advanced/CmdAsymptote.h"
#include "org/geogebra/common/kernel/advanced/CmdAttachCopyToView.h"
#include "org/geogebra/common/kernel/advanced/CmdAxes.h"
#include "org/geogebra/common/kernel/advanced/CmdAxisStepX.h"
#include "org/geogebra/common/kernel/advanced/CmdAxisStepY.h"
#include "org/geogebra/common/kernel/advanced/CmdCentroid.h"
#include "org/geogebra/common/kernel/advanced/CmdClosestPoint.h"
#include "org/geogebra/common/kernel/advanced/CmdCommonDenominator.h"
#include "org/geogebra/common/kernel/advanced/CmdCompleteSquare.h"
#include "org/geogebra/common/kernel/advanced/CmdComplexRoot.h"
#include "org/geogebra/common/kernel/advanced/CmdConstructionStep.h"
#include "org/geogebra/common/kernel/advanced/CmdContinuedFraction.h"
#include "org/geogebra/common/kernel/advanced/CmdCrossRatio.h"
#include "org/geogebra/common/kernel/advanced/CmdCurvature.h"
#include "org/geogebra/common/kernel/advanced/CmdCurvatureVector.h"
#include "org/geogebra/common/kernel/advanced/CmdDenominator.h"
#include "org/geogebra/common/kernel/advanced/CmdDeterminant.h"
#include "org/geogebra/common/kernel/advanced/CmdDimension.h"
#include "org/geogebra/common/kernel/advanced/CmdDirection.h"
#include "org/geogebra/common/kernel/advanced/CmdDirectrix.h"
#include "org/geogebra/common/kernel/advanced/CmdDivision.h"
#include "org/geogebra/common/kernel/advanced/CmdDivisorsList.h"
#include "org/geogebra/common/kernel/advanced/CmdDivisorsOrDivisorsSum.h"
#include "org/geogebra/common/kernel/advanced/CmdDynamicCoordinates.h"
#include "org/geogebra/common/kernel/advanced/CmdEccentricity.h"
#include "org/geogebra/common/kernel/advanced/CmdExcentricity.h"
#include "org/geogebra/common/kernel/advanced/CmdFactors.h"
#include "org/geogebra/common/kernel/advanced/CmdFinancialFV.h"
#include "org/geogebra/common/kernel/advanced/CmdFinancialNper.h"
#include "org/geogebra/common/kernel/advanced/CmdFinancialPV.h"
#include "org/geogebra/common/kernel/advanced/CmdFinancialPmt.h"
#include "org/geogebra/common/kernel/advanced/CmdFinancialRate.h"
#include "org/geogebra/common/kernel/advanced/CmdFirstAxis.h"
#include "org/geogebra/common/kernel/advanced/CmdFirstAxisLength.h"
#include "org/geogebra/common/kernel/advanced/CmdFlatten.h"
#include "org/geogebra/common/kernel/advanced/CmdFromBase.h"
#include "org/geogebra/common/kernel/advanced/CmdIdentity.h"
#include "org/geogebra/common/kernel/advanced/CmdImplicitPoly.h"
#include "org/geogebra/common/kernel/advanced/CmdIncircle.h"
#include "org/geogebra/common/kernel/advanced/CmdIndexOf.h"
#include "org/geogebra/common/kernel/advanced/CmdInsert.h"
#include "org/geogebra/common/kernel/advanced/CmdIntersectPath.h"
#include "org/geogebra/common/kernel/advanced/CmdIntersection.h"
#include "org/geogebra/common/kernel/advanced/CmdInvert.h"
#include "org/geogebra/common/kernel/advanced/CmdIsInRegion.h"
#include "org/geogebra/common/kernel/advanced/CmdIsPrime.h"
#include "org/geogebra/common/kernel/advanced/CmdIteration.h"
#include "org/geogebra/common/kernel/advanced/CmdIterationList.h"
#include "org/geogebra/common/kernel/advanced/CmdLeftRightSide.h"
#include "org/geogebra/common/kernel/advanced/CmdMatrixRank.h"
#include "org/geogebra/common/kernel/advanced/CmdMaximize.h"
#include "org/geogebra/common/kernel/advanced/CmdMinimize.h"
#include "org/geogebra/common/kernel/advanced/CmdNSolveODE.h"
#include "org/geogebra/common/kernel/advanced/CmdNumerator.h"
#include "org/geogebra/common/kernel/advanced/CmdOrdinal.h"
#include "org/geogebra/common/kernel/advanced/CmdOsculatingCircle.h"
#include "org/geogebra/common/kernel/advanced/CmdParameter.h"
#include "org/geogebra/common/kernel/advanced/CmdPathParameter.h"
#include "org/geogebra/common/kernel/advanced/CmdPolar.h"
#include "org/geogebra/common/kernel/advanced/CmdPrimeFactors.h"
#include "org/geogebra/common/kernel/advanced/CmdProve.h"
#include "org/geogebra/common/kernel/advanced/CmdProveDetails.h"
#include "org/geogebra/common/kernel/advanced/CmdReducedRowEchelonForm.h"
#include "org/geogebra/common/kernel/advanced/CmdRootList.h"
#include "org/geogebra/common/kernel/advanced/CmdRoots.h"
#include "org/geogebra/common/kernel/advanced/CmdRotateText.h"
#include "org/geogebra/common/kernel/advanced/CmdScientificText.h"
#include "org/geogebra/common/kernel/advanced/CmdSecondAxis.h"
#include "org/geogebra/common/kernel/advanced/CmdSecondAxisLength.h"
#include "org/geogebra/common/kernel/advanced/CmdSelectedElement.h"
#include "org/geogebra/common/kernel/advanced/CmdSelectedIndex.h"
#include "org/geogebra/common/kernel/advanced/CmdSlopeField.h"
#include "org/geogebra/common/kernel/advanced/CmdTaylorSeries.h"
#include "org/geogebra/common/kernel/advanced/CmdToBase.h"
#include "org/geogebra/common/kernel/advanced/CmdToComplexPolar.h"
#include "org/geogebra/common/kernel/advanced/CmdTranspose.h"
#include "org/geogebra/common/kernel/advanced/CmdUnion.h"
#include "org/geogebra/common/kernel/advanced/CmdUnique.h"
#include "org/geogebra/common/kernel/advanced/CmdVerticalText.h"
#include "org/geogebra/common/kernel/advanced/CmdZip.h"
#include "org/geogebra/common/kernel/commands/CmdPointList.h"
#include "org/geogebra/common/kernel/commands/CommandDispatcherAdvanced.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/commands/Commands.h"

@implementation OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced

- (OrgGeogebraCommonKernelCommandsCommandProcessor *)dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:(OrgGeogebraCommonKernelCommandsCommandsEnum *)c
                                                                           withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  switch ([c ordinal]) {
    case OrgGeogebraCommonKernelCommandsCommands_Factors:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFactors_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_IntersectPath:
    case OrgGeogebraCommonKernelCommandsCommands_IntersectRegion:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIntersectPath_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Direction:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDirection_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_TaylorPolynomial:
    case OrgGeogebraCommonKernelCommandsCommands_TaylorSeries:
    return [new_OrgGeogebraCommonKernelAdvancedCmdTaylorSeries_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_SecondAxis:
    case OrgGeogebraCommonKernelCommandsCommands_MinorAxis:
    return [new_OrgGeogebraCommonKernelAdvancedCmdSecondAxis_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_SemiMinorAxisLength:
    case OrgGeogebraCommonKernelCommandsCommands_SecondAxisLength:
    return [new_OrgGeogebraCommonKernelAdvancedCmdSecondAxisLength_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Directrix:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDirectrix_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Numerator:
    return [new_OrgGeogebraCommonKernelAdvancedCmdNumerator_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Denominator:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDenominator_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ComplexRoot:
    return [new_OrgGeogebraCommonKernelAdvancedCmdComplexRoot_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_SlopeField:
    return [new_OrgGeogebraCommonKernelAdvancedCmdSlopeField_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Iteration:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIteration_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_PathParameter:
    return [new_OrgGeogebraCommonKernelAdvancedCmdPathParameter_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Asymptote:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAsymptote_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_CurvatureVector:
    return [new_OrgGeogebraCommonKernelAdvancedCmdCurvatureVector_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Curvature:
    return [new_OrgGeogebraCommonKernelAdvancedCmdCurvature_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_OsculatingCircle:
    return [new_OrgGeogebraCommonKernelAdvancedCmdOsculatingCircle_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_IterationList:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIterationList_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_RootList:
    return [new_OrgGeogebraCommonKernelAdvancedCmdRootList_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ImplicitCurve:
    return [new_OrgGeogebraCommonKernelAdvancedCmdImplicitPoly_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Roots:
    return [new_OrgGeogebraCommonKernelAdvancedCmdRoots_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AffineRatio:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAffineRatio_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_CrossRatio:
    return [new_OrgGeogebraCommonKernelAdvancedCmdCrossRatio_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ClosestPoint:
    return [new_OrgGeogebraCommonKernelAdvancedCmdClosestPoint_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_IsInRegion:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIsInRegion_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_PrimeFactors:
    return [new_OrgGeogebraCommonKernelAdvancedCmdPrimeFactors_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_CompleteSquare:
    return [new_OrgGeogebraCommonKernelAdvancedCmdCompleteSquare_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Union:
    return [new_OrgGeogebraCommonKernelAdvancedCmdUnion_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ScientificText:
    return [new_OrgGeogebraCommonKernelAdvancedCmdScientificText_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_VerticalText:
    return [new_OrgGeogebraCommonKernelAdvancedCmdVerticalText_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_RotateText:
    return [new_OrgGeogebraCommonKernelAdvancedCmdRotateText_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Ordinal:
    return [new_OrgGeogebraCommonKernelAdvancedCmdOrdinal_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Parameter:
    return [new_OrgGeogebraCommonKernelAdvancedCmdParameter_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Incircle:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIncircle_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_SelectedElement:
    return [new_OrgGeogebraCommonKernelAdvancedCmdSelectedElement_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_SelectedIndex:
    return [new_OrgGeogebraCommonKernelAdvancedCmdSelectedIndex_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Unique:
    return [new_OrgGeogebraCommonKernelAdvancedCmdUnique_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Zip:
    return [new_OrgGeogebraCommonKernelAdvancedCmdZip_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Intersection:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIntersection_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_PointList:
    return [new_OrgGeogebraCommonKernelCommandsCmdPointList_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ApplyMatrix:
    return [new_OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Invert:
    return [new_OrgGeogebraCommonKernelAdvancedCmdInvert_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Transpose:
    return [new_OrgGeogebraCommonKernelAdvancedCmdTranspose_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ReducedRowEchelonForm:
    return [new_OrgGeogebraCommonKernelAdvancedCmdReducedRowEchelonForm_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Determinant:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDeterminant_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Identity:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIdentity_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Centroid:
    return [new_OrgGeogebraCommonKernelAdvancedCmdCentroid_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_MajorAxis:
    case OrgGeogebraCommonKernelCommandsCommands_FirstAxis:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFirstAxis_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_SemiMajorAxisLength:
    case OrgGeogebraCommonKernelCommandsCommands_FirstAxisLength:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFirstAxisLength_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AxisStepX:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAxisStepX_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AxisStepY:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAxisStepY_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ConstructionStep:
    return [new_OrgGeogebraCommonKernelAdvancedCmdConstructionStep_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Polar:
    return [new_OrgGeogebraCommonKernelAdvancedCmdPolar_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_LinearEccentricity:
    case OrgGeogebraCommonKernelCommandsCommands_Excentricity:
    return [new_OrgGeogebraCommonKernelAdvancedCmdExcentricity_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Eccentricity:
    return [new_OrgGeogebraCommonKernelAdvancedCmdEccentricity_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Axes:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAxes_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_IndexOf:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIndexOf_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Flatten:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFlatten_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Insert:
    return [new_OrgGeogebraCommonKernelAdvancedCmdInsert_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Prove:
    return [new_OrgGeogebraCommonKernelAdvancedCmdProve_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ProveDetails:
    return [new_OrgGeogebraCommonKernelAdvancedCmdProveDetails_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_DynamicCoordinates:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDynamicCoordinates_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Maximize:
    return [new_OrgGeogebraCommonKernelAdvancedCmdMaximize_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Minimize:
    return [new_OrgGeogebraCommonKernelAdvancedCmdMinimize_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AreCollinear:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAreCollinear_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AreParallel:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAreParallel_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AreConcyclic:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAreConcyclic_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ArePerpendicular:
    return [new_OrgGeogebraCommonKernelAdvancedCmdArePerpendicular_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AreEqual:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAreEqual_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AreConcurrent:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAreConcurrent_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ToBase:
    return [new_OrgGeogebraCommonKernelAdvancedCmdToBase_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_FromBase:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFromBase_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ContinuedFraction:
    return [new_OrgGeogebraCommonKernelAdvancedCmdContinuedFraction_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_AttachCopyToView:
    return [new_OrgGeogebraCommonKernelAdvancedCmdAttachCopyToView_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Divisors:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithOrgGeogebraCommonKernelKernel_withBoolean_(kernel, NO) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_DivisorsSum:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithOrgGeogebraCommonKernelKernel_withBoolean_(kernel, YES) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Dimension:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDimension_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_DivisorsList:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDivisorsList_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_IsPrime:
    return [new_OrgGeogebraCommonKernelAdvancedCmdIsPrime_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_LeftSide:
    return [new_OrgGeogebraCommonKernelAdvancedCmdLeftRightSide_initWithOrgGeogebraCommonKernelKernel_withBoolean_(kernel, YES) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_RightSide:
    return [new_OrgGeogebraCommonKernelAdvancedCmdLeftRightSide_initWithOrgGeogebraCommonKernelKernel_withBoolean_(kernel, NO) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Division:
    return [new_OrgGeogebraCommonKernelAdvancedCmdDivision_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_MatrixRank:
    return [new_OrgGeogebraCommonKernelAdvancedCmdMatrixRank_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_CommonDenominator:
    return [new_OrgGeogebraCommonKernelAdvancedCmdCommonDenominator_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ToPoint:
    return [new_OrgGeogebraCommonKernelAdvancedCmdToComplexPolar_initWithOrgGeogebraCommonKernelKernel_withInt_(kernel, OrgGeogebraCommonKernelKernel_COORD_CARTESIAN) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ToComplex:
    return [new_OrgGeogebraCommonKernelAdvancedCmdToComplexPolar_initWithOrgGeogebraCommonKernelKernel_withInt_(kernel, OrgGeogebraCommonKernelKernel_COORD_COMPLEX) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_ToPolar:
    return [new_OrgGeogebraCommonKernelAdvancedCmdToComplexPolar_initWithOrgGeogebraCommonKernelKernel_withInt_(kernel, OrgGeogebraCommonKernelKernel_COORD_POLAR) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_NSolveODE:
    return [new_OrgGeogebraCommonKernelAdvancedCmdNSolveODE_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Rate:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFinancialRate_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Periods:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFinancialNper_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_Payment:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFinancialPmt_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_PresentValue:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFinancialPV_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    case OrgGeogebraCommonKernelCommandsCommands_FutureValue:
    return [new_OrgGeogebraCommonKernelAdvancedCmdFinancialFV_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    default:
    break;
  }
  return nil;
}

- (instancetype)init {
  OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispatchWithOrgGeogebraCommonKernelCommandsCommandsEnum:withOrgGeogebraCommonKernelKernel:", "dispatch", "Lorg.geogebra.common.kernel.commands.CommandProcessor;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced = { 2, "CommandDispatcherAdvanced", "org.geogebra.common.kernel.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced;
}

@end

void OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced_init(OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced *self) {
  NSObject_init(self);
}

OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced *new_OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced_init() {
  OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced *self = [OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced alloc];
  OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCommandsCommandDispatcherAdvanced)
