//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/Relation.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "org/geogebra/common/GeoGebraConstants.h"
#include "org/geogebra/common/cas/GeoGebraCAS.h"
#include "org/geogebra/common/factories/Factory.h"
#include "org/geogebra/common/gui/util/RelationMore.h"
#include "org/geogebra/common/javax/swing/RelationPane.h"
#include "org/geogebra/common/kernel/CASGenericInterface.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/GeoGebraCasInterface.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/Relation.h"
#include "org/geogebra/common/kernel/RelationNumerical.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/prover/AlgoAreEqual.h"
#include "org/geogebra/common/kernel/prover/AlgoAreParallel.h"
#include "org/geogebra/common/kernel/prover/AlgoArePerpendicular.h"
#include "org/geogebra/common/kernel/prover/AlgoIsOnPath.h"
#include "org/geogebra/common/kernel/prover/AlgoProve.h"
#include "org/geogebra/common/kernel/prover/AlgoProveDetails.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelRelation_$1 : NSObject < OrgGeogebraCommonGuiUtilRelationMore > {
 @public
  OrgGeogebraCommonMainApp *val$app_;
  OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *val$relAlgo_;
  OrgGeogebraCommonKernelGeosGeoElement *val$ra_;
  OrgGeogebraCommonKernelGeosGeoElement *val$rb_;
  NSString *val$relInfo_;
}

- (void)actionWithOrgGeogebraCommonJavaxSwingRelationPane:(id<OrgGeogebraCommonJavaxSwingRelationPane>)table
                                                  withInt:(jint)row;

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)capture$0
withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)capture$1
       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)capture$2
       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)capture$3
                                    withNSString:(NSString *)capture$4;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelRelation_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelation_$1, val$app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelation_$1, val$relAlgo_, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelation_$1, val$ra_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelation_$1, val$rb_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelation_$1, val$relInfo_, NSString *)

__attribute__((unused)) static void OrgGeogebraCommonKernelRelation_$1_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(OrgGeogebraCommonKernelRelation_$1 *self, OrgGeogebraCommonMainApp *capture$0, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *capture$1, OrgGeogebraCommonKernelGeosGeoElement *capture$2, OrgGeogebraCommonKernelGeosGeoElement *capture$3, NSString *capture$4);

__attribute__((unused)) static OrgGeogebraCommonKernelRelation_$1 *new_OrgGeogebraCommonKernelRelation_$1_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(OrgGeogebraCommonMainApp *capture$0, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *capture$1, OrgGeogebraCommonKernelGeosGeoElement *capture$2, OrgGeogebraCommonKernelGeosGeoElement *capture$3, NSString *capture$4) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelRelation_$1)

@implementation OrgGeogebraCommonKernelRelation

+ (void)showRelationWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)ra
       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)rb {
  OrgGeogebraCommonKernelRelation_showRelationWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(app, ra, rb);
}

+ (JavaLangBoolean *)checkGenerallyWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                                                                 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g1
                                                                 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g2 {
  return OrgGeogebraCommonKernelRelation_checkGenerallyWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(command, g1, g2);
}

+ (IOSObjectArray *)getNDGConditionsWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                                                                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g1
                                                                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g2 {
  return OrgGeogebraCommonKernelRelation_getNDGConditionsWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(command, g1, g2);
}

- (instancetype)init {
  OrgGeogebraCommonKernelRelation_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "showRelationWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "showRelation", "V", 0x9, NULL, NULL },
    { "checkGenerallyWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "checkGenerally", "Ljava.lang.Boolean;", 0x19, NULL, NULL },
    { "getNDGConditionsWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "getNDGConditions", "[Ljava.lang.String;", 0x19, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelRelation = { 2, "Relation", "org.geogebra.common.kernel", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelRelation;
}

@end

void OrgGeogebraCommonKernelRelation_showRelationWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonMainApp *app, OrgGeogebraCommonKernelGeosGeoElement *ra, OrgGeogebraCommonKernelGeosGeoElement *rb) {
  OrgGeogebraCommonKernelRelation_initialize();
  OrgGeogebraCommonCasGeoGebraCAS *cas = (OrgGeogebraCommonCasGeoGebraCAS *) check_class_cast([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(ra)) getKernel])) getGeoGebraCAS], [OrgGeogebraCommonCasGeoGebraCAS class]);
  @try {
    [((id<OrgGeogebraCommonKernelCASGenericInterface>) nil_chk([((OrgGeogebraCommonCasGeoGebraCAS *) nil_chk(cas)) getCurrentCAS])) evaluateRawWithNSString:@"1"];
  }
  @catch (JavaLangThrowable *e) {
    [((JavaLangThrowable *) nil_chk(e)) printStackTrace];
  }
  id<OrgGeogebraCommonJavaxSwingRelationPane> tablePane = [((OrgGeogebraCommonFactoriesFactory *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getFactory])) newRelationPane];
  id<JavaUtilSortedSet> relInfosAll = OrgGeogebraCommonKernelRelationNumerical_sortAlphabeticallyWithJavaUtilSet_([((OrgGeogebraCommonKernelRelationNumerical *) [new_OrgGeogebraCommonKernelRelationNumerical_initWithOrgGeogebraCommonKernelKernel_([app getKernel]) autorelease]) relationWithOrgGeogebraCommonKernelGeosGeoElement:ra withOrgGeogebraCommonKernelGeosGeoElement:rb]);
  id<JavaUtilIterator> it = [((id<JavaUtilSortedSet>) nil_chk(relInfosAll)) iterator];
  jint rels = [relInfosAll size];
  IOSObjectArray *relInfos = [IOSObjectArray arrayWithLength:rels type:NSString_class_()];
  IOSObjectArray *relAlgos = [IOSObjectArray arrayWithLength:rels type:OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_class_()];
  IOSObjectArray *relBools = [IOSObjectArray arrayWithLength:rels type:JavaLangBoolean_class_()];
  jint i = 0;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    OrgGeogebraCommonKernelRelationNumerical_Report *r = [it next];
    IOSObjectArray_Set(relInfos, i, ((OrgGeogebraCommonKernelRelationNumerical_Report *) nil_chk(r))->stringResult_);
    IOSObjectArray_Set(relAlgos, i, r->symbolicCheck_);
    IOSObjectArray_Set(relBools, i, r->boolResult_);
    i++;
  }
  IOSObjectArray *rr = [IOSObjectArray arrayWithLength:rels type:OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_class_()];
  for (i = 0; i < rels; i++) {
    IOSObjectArray_SetAndConsume(rr, i, new_OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_init());
    NSString *relInfo = [((NSString *) nil_chk(IOSObjectArray_Get(relInfos, i))) replace:@"\n" withSequence:@"<br>"];
    OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(nil_chk(IOSObjectArray_Get(rr, i)), JreStrcat("$$$$$", @"<html>", relInfo, @"<br>", [app getPlainWithNSString:@"CheckedNumerically"], @"</html>"));
    OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *relAlgo = IOSObjectArray_Get(relAlgos, i);
    id<OrgGeogebraCommonGuiUtilRelationMore> rm = [new_OrgGeogebraCommonKernelRelation_$1_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(app, relAlgo, ra, rb, relInfo) autorelease];
    if (IOSObjectArray_Get(relBools, i) != nil && [((JavaLangBoolean *) nil_chk(IOSObjectArray_Get(relBools, i))) booleanValue] && IOSObjectArray_Get(relAlgos, i) != nil) {
      OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_callback_(nil_chk(IOSObjectArray_Get(rr, i)), rm);
    }
  }
  [((id<OrgGeogebraCommonJavaxSwingRelationPane>) nil_chk(tablePane)) showDialogWithNSString:JreStrcat("$$$", OrgGeogebraCommonGeoGebraConstants_get_APPLICATION_NAME_(), @" - ", [((OrgGeogebraCommonMainLocalization *) nil_chk([app getLocalization])) getCommandWithNSString:@"Relation"]) withOrgGeogebraCommonJavaxSwingRelationPane_RelationRowArray:rr withOrgGeogebraCommonMainApp:[((OrgGeogebraCommonKernelConstruction *) nil_chk([ra getConstruction])) getApplication]];
}

JavaLangBoolean *OrgGeogebraCommonKernelRelation_checkGenerallyWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, OrgGeogebraCommonKernelGeosGeoElement *g1, OrgGeogebraCommonKernelGeosGeoElement *g2) {
  OrgGeogebraCommonKernelRelation_initialize();
  JavaLangBoolean *ret = nil;
  OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(g1)) getConstruction];
  OrgGeogebraCommonKernelGeosGeoElement *root = [new_OrgGeogebraCommonKernelGeosGeoBoolean_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  OrgGeogebraCommonKernelAlgosAlgoElement *ae = nil;
  @try {
    switch ([command ordinal]) {
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreEqual:
      ae = [new_OrgGeogebraCommonKernelProverAlgoAreEqual_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(cons, nil, g1, g2) autorelease];
      break;
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreParallel:
      ae = [new_OrgGeogebraCommonKernelProverAlgoAreParallel_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(cons, nil, g1, g2) autorelease];
      break;
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_ArePerpendicular:
      ae = [new_OrgGeogebraCommonKernelProverAlgoArePerpendicular_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(cons, nil, g1, g2) autorelease];
      break;
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_IsOnPath:
      if (([g1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) && ([OrgGeogebraCommonKernelPath_class_() isInstance:g2])) {
        ae = [new_OrgGeogebraCommonKernelProverAlgoIsOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(cons, nil, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(g1, [OrgGeogebraCommonKernelGeosGeoPoint class]), (id<OrgGeogebraCommonKernelPath>) check_protocol_cast(g2, @protocol(OrgGeogebraCommonKernelPath))) autorelease];
      }
      else if (([g2 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) && ([OrgGeogebraCommonKernelPath_class_() isInstance:g1])) {
        ae = [new_OrgGeogebraCommonKernelProverAlgoIsOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(cons, nil, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(g2, [OrgGeogebraCommonKernelGeosGeoPoint class]), (id<OrgGeogebraCommonKernelPath>) check_protocol_cast(g1, @protocol(OrgGeogebraCommonKernelPath))) autorelease];
      }
      break;
    }
  }
  @catch (JavaLangException *ex) {
    return ret;
  }
  if (ae == nil) {
    return ret;
  }
  [root setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:ae];
  OrgGeogebraCommonKernelProverAlgoProve *ap = [new_OrgGeogebraCommonKernelProverAlgoProve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(cons, nil, root) autorelease];
  [ap compute];
  IOSObjectArray *o = [ap getOutput];
  OrgGeogebraCommonKernelGeosGeoBoolean *ans = ((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(nil_chk(o), 0), [OrgGeogebraCommonKernelGeosGeoBoolean class]));
  if ([((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(ans)) isDefined]) {
    ret = JavaLangBoolean_valueOfWithBoolean_([ans getBoolean]);
  }
  [root remove];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(o, 0))) remove];
  return ret;
}

IOSObjectArray *OrgGeogebraCommonKernelRelation_getNDGConditionsWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, OrgGeogebraCommonKernelGeosGeoElement *g1, OrgGeogebraCommonKernelGeosGeoElement *g2) {
  OrgGeogebraCommonKernelRelation_initialize();
  OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(g1)) getConstruction];
  OrgGeogebraCommonKernelGeosGeoElement *root = [new_OrgGeogebraCommonKernelGeosGeoBoolean_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  OrgGeogebraCommonKernelAlgosAlgoElement *ae = nil;
  IOSObjectArray *ret;
  @try {
    switch ([command ordinal]) {
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreEqual:
      ae = [new_OrgGeogebraCommonKernelProverAlgoAreEqual_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(cons, nil, g1, g2) autorelease];
      break;
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreParallel:
      ae = [new_OrgGeogebraCommonKernelProverAlgoAreParallel_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(cons, nil, g1, g2) autorelease];
      break;
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_ArePerpendicular:
      ae = [new_OrgGeogebraCommonKernelProverAlgoArePerpendicular_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(cons, nil, g1, g2) autorelease];
      break;
      case OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommand_IsOnPath:
      if (([g1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) && ([OrgGeogebraCommonKernelPath_class_() isInstance:g2])) {
        ae = [new_OrgGeogebraCommonKernelProverAlgoIsOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(cons, nil, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(g1, [OrgGeogebraCommonKernelGeosGeoPoint class]), (id<OrgGeogebraCommonKernelPath>) check_protocol_cast(g2, @protocol(OrgGeogebraCommonKernelPath))) autorelease];
      }
      else if (([g2 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) && ([OrgGeogebraCommonKernelPath_class_() isInstance:g1])) {
        ae = [new_OrgGeogebraCommonKernelProverAlgoIsOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(cons, nil, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(g2, [OrgGeogebraCommonKernelGeosGeoPoint class]), (id<OrgGeogebraCommonKernelPath>) check_protocol_cast(g1, @protocol(OrgGeogebraCommonKernelPath))) autorelease];
      }
      break;
    }
  }
  @catch (JavaLangException *ex) {
    ret = [IOSObjectArray arrayWithLength:1 type:NSString_class_()];
    IOSObjectArray_Set(ret, 0, @"");
    return ret;
  }
  if (ae == nil) {
    ret = [IOSObjectArray arrayWithLength:1 type:NSString_class_()];
    IOSObjectArray_Set(ret, 0, @"");
    return ret;
  }
  [root setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:ae];
  OrgGeogebraCommonKernelProverAlgoProveDetails *ap = [new_OrgGeogebraCommonKernelProverAlgoProveDetails_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(cons, nil, root, YES) autorelease];
  [ap compute];
  IOSObjectArray *o = [ap getOutput];
  OrgGeogebraCommonKernelGeosGeoList *list = ((OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(nil_chk(o), 0), [OrgGeogebraCommonKernelGeosGeoList class]));
  if ([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(list)) size] >= 2) {
    OrgGeogebraCommonKernelGeosGeoList *conds = (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast([list getWithInt:1], [OrgGeogebraCommonKernelGeosGeoList class]);
    jint condsSize = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(conds)) size];
    ret = [IOSObjectArray arrayWithLength:condsSize + 1 type:NSString_class_()];
    for (jint i = 0; i < condsSize; ++i) {
      NSString *cond = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([conds getWithInt:i])) description];
      IOSObjectArray_Set(ret, i + 1, [cond substring:1 endIndex:((jint) [((NSString *) nil_chk(cond)) length]) - 1]);
    }
  }
  else {
    ret = [IOSObjectArray arrayWithLength:1 type:NSString_class_()];
  }
  if ([list size] != 0) {
    JavaLangBoolean *ans = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast([list getWithInt:0], [OrgGeogebraCommonKernelGeosGeoBoolean class])))) getBoolean]);
    if (ans == nil) {
      IOSObjectArray_Set(nil_chk(ret), 0, @"");
    }
    else if ([ans booleanValue]) {
      IOSObjectArray_Set(nil_chk(ret), 0, @"1");
    }
    else {
      IOSObjectArray_Set(nil_chk(ret), 0, @"0");
    }
  }
  else {
    IOSObjectArray_Set(nil_chk(ret), 0, @"");
  }
  [root remove];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(o, 0))) remove];
  return ret;
}

void OrgGeogebraCommonKernelRelation_init(OrgGeogebraCommonKernelRelation *self) {
  NSObject_init(self);
}

OrgGeogebraCommonKernelRelation *new_OrgGeogebraCommonKernelRelation_init() {
  OrgGeogebraCommonKernelRelation *self = [OrgGeogebraCommonKernelRelation alloc];
  OrgGeogebraCommonKernelRelation_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelRelation)

@implementation OrgGeogebraCommonKernelRelation_$1

- (void)actionWithOrgGeogebraCommonJavaxSwingRelationPane:(id<OrgGeogebraCommonJavaxSwingRelationPane>)table
                                                  withInt:(jint)row {
  OrgGeogebraCommonJavaxSwingRelationPane_RelationRow *rel = [new_OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_init() autorelease];
  [((OrgGeogebraCommonMainApp *) nil_chk(val$app_)) setWaitCursor];
  JavaLangBoolean *result = OrgGeogebraCommonKernelRelation_checkGenerallyWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(val$relAlgo_, val$ra_, val$rb_);
  OrgGeogebraCommonMainLocalization *loc = [((OrgGeogebraCommonMainApp *) nil_chk([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(val$ra_)) getConstruction])) getApplication])) getLocalization];
  NSString *and_ = [((NSString *) nil_chk([((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getMenuWithNSString:@"Symbol.And"])) lowercaseString];
  OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, @"<html>");
  if (result != nil && ![result booleanValue]) {
    OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, JreStrcat("$$$$", val$relInfo_, @"<br><b>", [val$app_ getPlainWithNSString:@"ButNotGenerallyTrue"], @"</b>")));
    [val$app_ setDefaultCursor];
  }
  else {
    IOSObjectArray *ndgResult = OrgGeogebraCommonKernelRelation_getNDGConditionsWithOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(val$relAlgo_, val$ra_, val$rb_);
    [val$app_ setDefaultCursor];
    NSString *liStyle = @"class=\"RelationTool\"";
    if (((IOSObjectArray *) nil_chk(ndgResult))->size_ == 1) {
      OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, JreStrcat("$$", val$relInfo_, @"<br><b>")));
      if ([@"" isEqual:IOSObjectArray_Get(ndgResult, 0)]) {
        if (result != nil && [result booleanValue]) {
          OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, [val$app_ getPlainWithNSString:@"GenerallyTrue"]));
        }
        else {
          OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, [val$app_ getPlainWithNSString:@"PossiblyGenerallyTrue"]));
        }
      }
      else if ([@"1" isEqual:IOSObjectArray_Get(ndgResult, 0)]) {
        OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, [val$app_ getPlainWithNSString:@"AlwaysTrue"]));
      }
      else {
        OrgGeogebraCommonMainApp_errorWithNSString_(@"Internal error in prover: Prove==true <-> ProveDetails==false");
        OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, [val$app_ getPlainWithNSString:@"ButNotGenerallyTrue"]));
      }
      OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, @"</b>"));
    }
    else {
      jint ndgs = ndgResult->size_;
      if ((ndgs == 2) && ([@"..." isEqual:IOSObjectArray_Get(ndgResult, 1)])) {
        OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, [loc getPlainWithNSString:@"UnderCertainConditionsA" withNSString:JreStrcat("$$C$$", @"<ul><li ", liStyle, '>', val$relInfo_, @"</ul>")]));
      }
      else {
        NSString *conds = @"<ul>";
        for (jint j = 1; j < ndgs; ++j) {
          conds = JreStrcat("$$", conds, JreStrcat("$$C", @"<li ", liStyle, '>'));
          conds = JreStrcat("$$", conds, IOSObjectArray_Get(ndgResult, j));
          if ((j < ndgs - 1)) {
            conds = JreStrcat("$$", conds, JreStrcat("C$", ' ', and_));
          }
        }
        conds = JreStrcat("$$", conds, @"</ul>");
        OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, [loc getPlainWithNSString:@"GenerallyTrueAcondB" withNSString:JreStrcat("$$C$$", @"<ul><li ", liStyle, '>', val$relInfo_, @"</ul>") withNSString:conds]));
      }
    }
  }
  OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_info_(rel, JreStrcat("$$", rel->info_, @"</html>"));
  OrgGeogebraCommonJavaxSwingRelationPane_RelationRow_set_callback_(rel, nil);
  [((id<OrgGeogebraCommonJavaxSwingRelationPane>) nil_chk(table)) updateRowWithInt:row withOrgGeogebraCommonJavaxSwingRelationPane_RelationRow:rel];
}

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)capture$0
withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)capture$1
       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)capture$2
       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)capture$3
                                    withNSString:(NSString *)capture$4 {
  OrgGeogebraCommonKernelRelation_$1_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(self, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

- (void)dealloc {
  RELEASE_(val$app_);
  RELEASE_(val$relAlgo_);
  RELEASE_(val$ra_);
  RELEASE_(val$rb_);
  RELEASE_(val$relInfo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "actionWithOrgGeogebraCommonJavaxSwingRelationPane:withInt:", "action", "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withNSString:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$app_", NULL, 0x1012, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "val$relAlgo_", NULL, 0x1012, "Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;", NULL, NULL,  },
    { "val$ra_", NULL, 0x1012, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "val$rb_", NULL, 0x1012, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "val$relInfo_", NULL, 0x1012, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelRelation", "showRelationWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelRelation_$1 = { 2, "", "org.geogebra.common.kernel", "Relation", 0x8008, 2, methods, 5, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgGeogebraCommonKernelRelation_$1;
}

@end

void OrgGeogebraCommonKernelRelation_$1_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(OrgGeogebraCommonKernelRelation_$1 *self, OrgGeogebraCommonMainApp *capture$0, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *capture$1, OrgGeogebraCommonKernelGeosGeoElement *capture$2, OrgGeogebraCommonKernelGeosGeoElement *capture$3, NSString *capture$4) {
  OrgGeogebraCommonKernelRelation_$1_set_val$app_(self, capture$0);
  OrgGeogebraCommonKernelRelation_$1_set_val$relAlgo_(self, capture$1);
  OrgGeogebraCommonKernelRelation_$1_set_val$ra_(self, capture$2);
  OrgGeogebraCommonKernelRelation_$1_set_val$rb_(self, capture$3);
  OrgGeogebraCommonKernelRelation_$1_set_val$relInfo_(self, capture$4);
  NSObject_init(self);
}

OrgGeogebraCommonKernelRelation_$1 *new_OrgGeogebraCommonKernelRelation_$1_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(OrgGeogebraCommonMainApp *capture$0, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *capture$1, OrgGeogebraCommonKernelGeosGeoElement *capture$2, OrgGeogebraCommonKernelGeosGeoElement *capture$3, NSString *capture$4) {
  OrgGeogebraCommonKernelRelation_$1 *self = [OrgGeogebraCommonKernelRelation_$1 alloc];
  OrgGeogebraCommonKernelRelation_$1_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(self, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelRelation_$1)
