//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/Transform.java
//

#ifndef _OrgGeogebraCommonKernelTransform_H_
#define _OrgGeogebraCommonKernelTransform_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelAlgosAlgoTransformation;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoPolygon;
@class OrgGeogebraCommonKernelKernelNDGeoConicND;
@protocol OrgGeogebraCommonKernelKernelNDGeoLineND;

@interface OrgGeogebraCommonKernelTransform : NSObject {
 @public
  OrgGeogebraCommonKernelConstruction *cons_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)changesOrientation;

- (OrgGeogebraCommonKernelGeosGeoElement *)doTransformWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)getTransformedConicWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)conic;

- (OrgGeogebraCommonKernelGeosGeoElement *)getTransformedLineWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line;

- (jboolean)isAffine;

- (jboolean)isSimilar;

+ (void)setVisualStyleForTransformationsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)input
                                        withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)transformed;

- (IOSObjectArray *)transformWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                          withNSString:(NSString *)transformedLabel;

+ (NSString *)transformedGeoLabelWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)transformPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points;

- (IOSObjectArray *)transformPolyWithNSString:(NSString *)label
    withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)poly;

#pragma mark Protected

- (OrgGeogebraCommonKernelAlgosAlgoTransformation *)getTransformAlgoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelTransform)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelTransform, cons_, OrgGeogebraCommonKernelConstruction *)

FOUNDATION_EXPORT NSString *OrgGeogebraCommonKernelTransform_transformedGeoLabelWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *geo);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelTransform_setVisualStyleForTransformationsWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *input, OrgGeogebraCommonKernelGeosGeoElement *transformed);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelTransform_init(OrgGeogebraCommonKernelTransform *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelTransform)

#endif // _OrgGeogebraCommonKernelTransform_H_
