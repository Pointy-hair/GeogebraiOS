//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/scripting/AlgoTurtle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoTurtle.h"
#include "org/geogebra/common/kernel/scripting/AlgoTurtle.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelScriptingAlgoTurtle () {
 @public
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelScriptingAlgoTurtle, sb_, JavaLangStringBuilder *)

@implementation OrgGeogebraCommonKernelScriptingAlgoTurtle

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label {
  OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (void)createTurtle {
  OrgGeogebraCommonKernelScriptingAlgoTurtle_setAndConsume_turtle_(self, new_OrgGeogebraCommonKernelGeosGeoTurtle_initWithOrgGeogebraCommonKernelConstruction_(self->cons_));
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Turtle();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:turtle_];
  [self setDependencies];
}

- (void)update {
  [self compute];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getOutputWithInt:0])) update];
}

- (OrgGeogebraCommonKernelGeosGeoTurtle *)getTurtle {
  return turtle_;
}

- (void)compute {
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  if (sb_ == nil) OrgGeogebraCommonKernelScriptingAlgoTurtle_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
  else [sb_ setLengthWithInt:0];
  [((JavaLangStringBuilder *) nil_chk(sb_)) appendWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"Turtle"]];
  return [sb_ description];
}

- (void)dealloc {
  RELEASE_(turtle_);
  RELEASE_(sb_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:", "AlgoTurtle", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoTurtle", NULL, 0x4, NULL, NULL },
    { "createTurtle", NULL, "V", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "update", NULL, "V", 0x1, NULL, NULL },
    { "getTurtle", NULL, "Lorg.geogebra.common.kernel.geos.GeoTurtle;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "turtle_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoTurtle;", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelScriptingAlgoTurtle = { 2, "AlgoTurtle", "org.geogebra.common.kernel.scripting", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelScriptingAlgoTurtle;
}

@end

void OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelScriptingAlgoTurtle *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  [self createTurtle];
  [self compute];
  [self setInputOutput];
  [((OrgGeogebraCommonKernelGeosGeoTurtle *) nil_chk(self->turtle_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelScriptingAlgoTurtle *new_OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelConstruction *cons, NSString *label) {
  OrgGeogebraCommonKernelScriptingAlgoTurtle *self = [OrgGeogebraCommonKernelScriptingAlgoTurtle alloc];
  OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

void OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelScriptingAlgoTurtle *self, OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  [self createTurtle];
  [self compute];
  [self setInputOutput];
}

OrgGeogebraCommonKernelScriptingAlgoTurtle *new_OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelScriptingAlgoTurtle *self = [OrgGeogebraCommonKernelScriptingAlgoTurtle alloc];
  OrgGeogebraCommonKernelScriptingAlgoTurtle_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelScriptingAlgoTurtle)
