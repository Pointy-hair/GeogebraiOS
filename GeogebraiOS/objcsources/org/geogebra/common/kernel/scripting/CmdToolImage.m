//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/scripting/CmdToolImage.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/CircularDefinitionException.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoImage.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/scripting/CmdToolImage.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/MyError.h"
#include "org/geogebra/common/util/ImageManager.h"
#include "org/geogebra/common/util/StringUtil.h"

@implementation OrgGeogebraCommonKernelScriptingCmdToolImage

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonKernelScriptingCmdToolImage_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSObjectArray *arg;
  arg = [self resArgsWithOrgGeogebraCommonKernelArithmeticCommand:c];
  switch (n) {
    case 1:
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoNumeric]) {
      jint mode = J2ObjCFpToInt([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 0), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble]);
      NSString *modeStr = OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getModeTextWithInt:mode]);
      if ([@"" isEqual:modeStr]) @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
      NSString *fileName = [((OrgGeogebraCommonUtilImageManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getImageManager])) createImageWithNSString:JreStrcat("$$$", @"/org/geogebra/desktop/gui/toolbar/images/64/mode_", modeStr, @".png") withOrgGeogebraCommonMainApp:app_];
      OrgGeogebraCommonKernelGeosGeoImage *geoImage = new_OrgGeogebraCommonKernelGeosGeoImage_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk([app_ getKernel])) getConstruction]);
      [geoImage setImageFileNameWithNSString:fileName];
      [geoImage setTooltipModeWithInt:OrgGeogebraCommonKernelGeosGeoElement_TOOLTIP_OFF];
      jboolean oldState = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) isSuppressLabelsActive];
      [cons_ setSuppressLabelCreationWithBoolean:YES];
      OrgGeogebraCommonKernelGeosGeoPoint *corner = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_(cons_, nil, 0, 0, 1);
      [cons_ setSuppressLabelCreationWithBoolean:oldState];
      @try {
        [geoImage setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:corner];
      }
      @catch (OrgGeogebraCommonKernelCircularDefinitionException *e) {
        [((OrgGeogebraCommonKernelCircularDefinitionException *) nil_chk(e)) printStackTrace];
      }
      [geoImage setLabelWithNSString:nil];
      IOSObjectArray *ret = [IOSObjectArray newArrayWithObjects:(id[]){  } count:0 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    default:
    @throw [self argNumErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdToolImage", NULL, 0x1, NULL, NULL },
    { "processWithOrgGeogebraCommonKernelArithmeticCommand:", "process", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, "Lorg.geogebra.common.main.MyError;", NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelScriptingCmdToolImage = { 2, "CmdToolImage", "org.geogebra.common.kernel.scripting", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelScriptingCmdToolImage;
}

@end

void OrgGeogebraCommonKernelScriptingCmdToolImage_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelScriptingCmdToolImage *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) OrgGeogebraCommonKernelCommandsCommandProcessor_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonKernelScriptingCmdToolImage *new_OrgGeogebraCommonKernelScriptingCmdToolImage_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelScriptingCmdToolImage *self = [OrgGeogebraCommonKernelScriptingCmdToolImage alloc];
  OrgGeogebraCommonKernelScriptingCmdToolImage_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelScriptingCmdToolImage)
