//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/cas/AlgoDerivative.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoCasBase.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/cas/AlgoDerivative.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionNVar.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoCurveCartesianND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelCasAlgoDerivative () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *var_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> order_;
  jboolean fast_;
  OrgGeogebraCommonKernelArithmeticMyArbitraryConstant *arbconst_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoDerivative, var_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoDerivative, order_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoDerivative, arbconst_, OrgGeogebraCommonKernelArithmeticMyArbitraryConstant *)

@implementation OrgGeogebraCommonKernelCasAlgoDerivative

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
        withOrgGeogebraCommonKernelGeosCasEvaluableFunction:(id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>)f
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)var
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)order {
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, f, var, order);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
        withOrgGeogebraCommonKernelGeosCasEvaluableFunction:(id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>)f {
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_(self, cons, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
        withOrgGeogebraCommonKernelGeosCasEvaluableFunction:(id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>)f
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)var
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)order
                                                withBoolean:(jboolean)fast {
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, var, order, fast);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
        withOrgGeogebraCommonKernelGeosCasEvaluableFunction:(id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>)f
                                                withBoolean:(jboolean)fast {
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(self, cons, f, fast);
  return self;
}

- (void)setInputOutput {
  jint length = 1;
  if (order_ != nil) length++;
  if (var_ != nil) length++;
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:length type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  length = 0;
  IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement]);
  if (var_ != nil) IOSObjectArray_Set(input_, ++length, var_);
  if (order_ != nil) IOSObjectArray_Set(input_, ++length, [order_ toGeoElement]);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:g_];
  [self setDependencies];
}

- (void)applyCasCommandWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  jint orderInt = order_ == nil ? 1 : (jint) JavaLangMath_roundWithDouble_([order_ getDouble]);
  if ([f_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
    OrgGeogebraCommonKernelArithmeticFunction *funDeriv = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(f_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) getFunction])) getDerivativeWithInt:orderInt withBoolean:fast_];
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:funDeriv];
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setDefinedWithBoolean:YES];
    return;
  }
  if ([f_ isKindOfClass:[OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND class]]) {
    [((OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *) nil_chk(((OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *) check_class_cast(g_, [OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND class])))) setDerivativeWithOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND:(OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *) check_class_cast(f_, [OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND class]) withInt:orderInt];
    return;
  }
  NSString *varStr = var_ != nil ? [var_ getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] : [((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) getVarStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
  if ([f_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunctionNVar class]]) {
    OrgGeogebraCommonKernelArithmeticFunctionNVar *inFun = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(f_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class])))) getFunction];
    if (![((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) useCASforDerivatives]) {
      IOSObjectArray *fVars = [((OrgGeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(inFun)) getFunctionVariables];
      OrgGeogebraCommonKernelArithmeticFunctionVariable *fv = nil;
      for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fVars))->size_; i++) {
        if ([varStr isEqual:[((OrgGeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(fVars, i))) getSetVarString]]) {
          fv = IOSObjectArray_Get(fVars, i);
          break;
        }
      }
      if (fv == nil) {
        [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class])))) setDefinedWithBoolean:NO];
        return;
      }
      inFun = [inFun getDerivativeNoCASWithOrgGeogebraCommonKernelArithmeticFunctionVariable:fv withInt:orderInt];
      [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunctionNVar:inFun];
      [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class])))) setDefinedWithBoolean:YES];
      return;
    }
  }
  [((JavaLangStringBuilder *) nil_chk(sbAE_)) setLengthWithInt:0];
  [sbAE_ appendWithNSString:@"Derivative[%"];
  [sbAE_ appendWithNSString:@","];
  [sbAE_ appendWithNSString:varStr];
  [sbAE_ appendWithNSString:@","];
  [sbAE_ appendWithInt:order_ == nil ? 1 : (jint) JavaLangMath_roundWithDouble_([order_ getDouble])];
  [sbAE_ appendWithNSString:@"]"];
  [((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) setUsingCasCommandWithNSString:[sbAE_ description] withOrgGeogebraCommonKernelGeosCasEvaluableFunction:f_ withBoolean:YES withOrgGeogebraCommonKernelArithmeticMyArbitraryConstant:arbconst_];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  if (var_ != nil) {
    [sb appendWithNSString:[super toStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  }
  else {
    if (order_ != nil) {
      NSString *orderStr = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([order_ toGeoElement])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl];
      jchar firstCh = [((NSString *) nil_chk(orderStr)) charAtWithInt:0];
      if (firstCh >= '0' && firstCh <= '9') {
        orderStr = [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getOrdinalNumberWithInt:J2ObjCFpToInt([order_ getDouble])];
      }
      else {
        orderStr = [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"Ath" withNSString:orderStr];
      }
      [sb appendWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"ADerivativeOfB" withNSString:orderStr withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]]];
    }
    else {
      [sb appendWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"DerivativeOfA" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]]];
    }
  }
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) isIndependent]) {
    [sb appendWithNSString:@": "];
    [sb appendWithNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) toGeoElement])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithChar:'('];
    [sb appendWithNSString:[g_ getVarStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@") = "];
    [sb appendWithNSString:[g_ toSymbolicStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  }
  return [sb description];
}

- (void)dealloc {
  RELEASE_(var_);
  RELEASE_(order_);
  RELEASE_(arbconst_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosCasEvaluableFunction:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosCasEvaluableFunction:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosCasEvaluableFunction:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelArithmeticNumberValue:withBoolean:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosCasEvaluableFunction:withBoolean:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "applyCasCommandWithOrgGeogebraCommonKernelStringTemplate:", "applyCasCommand", "V", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "var_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "order_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "fast_", NULL, 0x2, "Z", NULL, NULL,  },
    { "arbconst_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.MyArbitraryConstant;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoDerivative = { 2, "AlgoDerivative", "org.geogebra.common.kernel.cas", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoDerivative;
}

@end

void OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelCasAlgoDerivative *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var, id<OrgGeogebraCommonKernelArithmeticNumberValue> order) {
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, var, order, NO);
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(self->g_)) toGeoElement])) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelCasAlgoDerivative *new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var, id<OrgGeogebraCommonKernelArithmeticNumberValue> order) {
  OrgGeogebraCommonKernelCasAlgoDerivative *self = [OrgGeogebraCommonKernelCasAlgoDerivative alloc];
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, f, var, order);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_(OrgGeogebraCommonKernelCasAlgoDerivative *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f) {
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, nil, nil, NO);
}

OrgGeogebraCommonKernelCasAlgoDerivative *new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f) {
  OrgGeogebraCommonKernelCasAlgoDerivative *self = [OrgGeogebraCommonKernelCasAlgoDerivative alloc];
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_(self, cons, f);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(OrgGeogebraCommonKernelCasAlgoDerivative *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var, id<OrgGeogebraCommonKernelArithmeticNumberValue> order, jboolean fast) {
  OrgGeogebraCommonKernelAlgosAlgoCasBase_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelCommandsCommandsEnum_(self, cons, f, OrgGeogebraCommonKernelCommandsCommandsEnum_get_Derivative());
  self->fast_ = NO;
  OrgGeogebraCommonKernelCasAlgoDerivative_setAndConsume_arbconst_(self, new_OrgGeogebraCommonKernelArithmeticMyArbitraryConstant_initWithOrgGeogebraCommonKernelAlgosConstructionElement_(self));
  OrgGeogebraCommonKernelCasAlgoDerivative_set_var_(self, var);
  OrgGeogebraCommonKernelCasAlgoDerivative_set_order_(self, order);
  self->fast_ = fast;
  [self setInputOutput];
  [self compute];
}

OrgGeogebraCommonKernelCasAlgoDerivative *new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var, id<OrgGeogebraCommonKernelArithmeticNumberValue> order, jboolean fast) {
  OrgGeogebraCommonKernelCasAlgoDerivative *self = [OrgGeogebraCommonKernelCasAlgoDerivative alloc];
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, var, order, fast);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(OrgGeogebraCommonKernelCasAlgoDerivative *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, jboolean fast) {
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, nil, nil, fast);
}

OrgGeogebraCommonKernelCasAlgoDerivative *new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, jboolean fast) {
  OrgGeogebraCommonKernelCasAlgoDerivative *self = [OrgGeogebraCommonKernelCasAlgoDerivative alloc];
  OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(self, cons, f, fast);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoDerivative)
