//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/cas/AlgoSolveODE.java
//

#ifndef _OrgGeogebraCommonKernelCasAlgoSolveODE_H_
#define _OrgGeogebraCommonKernelCasAlgoSolveODE_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"

@class JavaUtilArrayList;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoLocus;
@class OrgGeogebraCommonKernelGeosGeoNumeric;
@protocol OrgGeogebraCommonKernelArithmeticFunctionalNVar;

@interface OrgGeogebraCommonKernelCasAlgoSolveODE : OrgGeogebraCommonKernelAlgosAlgoElement {
 @public
  JavaUtilArrayList *al_;
  jboolean quotient_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
        withOrgGeogebraCommonKernelArithmeticFunctionalNVar:(id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>)f0
        withOrgGeogebraCommonKernelArithmeticFunctionalNVar:(id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>)f1
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)x
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)y
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)end
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)step;

- (void)compute;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (OrgGeogebraCommonKernelGeosGeoLocus *)getResult;

- (void)remove;

#pragma mark Protected

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelCasAlgoSolveODE)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSolveODE, al_, JavaUtilArrayList *)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelCasAlgoSolveODE_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelCasAlgoSolveODE *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f0, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f1, OrgGeogebraCommonKernelGeosGeoNumeric *x, OrgGeogebraCommonKernelGeosGeoNumeric *y, OrgGeogebraCommonKernelGeosGeoNumeric *end, OrgGeogebraCommonKernelGeosGeoNumeric *step);

FOUNDATION_EXPORT OrgGeogebraCommonKernelCasAlgoSolveODE *new_OrgGeogebraCommonKernelCasAlgoSolveODE_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f0, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f1, OrgGeogebraCommonKernelGeosGeoNumeric *x, OrgGeogebraCommonKernelGeosGeoNumeric *y, OrgGeogebraCommonKernelGeosGeoNumeric *end, OrgGeogebraCommonKernelGeosGeoNumeric *step) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelCasAlgoSolveODE)

#endif // _OrgGeogebraCommonKernelCasAlgoSolveODE_H_
