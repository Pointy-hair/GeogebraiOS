//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/cas/AlgoCoefficients.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/PolyFunction.h"
#include "org/geogebra/common/kernel/cas/AlgoCoefficients.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/statistics/FitAlgo.h"

@interface OrgGeogebraCommonKernelCasAlgoCoefficients () {
 @public
  OrgGeogebraCommonKernelGeosGeoFunction *f_;
  OrgGeogebraCommonKernelGeosGeoList *g_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoCoefficients, f_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoCoefficients, g_, OrgGeogebraCommonKernelGeosGeoList *)

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoCoefficients_compute(OrgGeogebraCommonKernelCasAlgoCoefficients *self);

@implementation OrgGeogebraCommonKernelCasAlgoCoefficients

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, label, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, f);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Coefficients();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, f_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:g_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoList *)getResult {
  return g_;
}

- (void)compute {
  OrgGeogebraCommonKernelCasAlgoCoefficients_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoCoefficients", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoCoefficients", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoCoefficients = { 2, "AlgoCoefficients", "org.geogebra.common.kernel.cas", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoCoefficients;
}

@end

void OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelCasAlgoCoefficients *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  (void) OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, f);
  [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelCasAlgoCoefficients *new_OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelCasAlgoCoefficients *self = [OrgGeogebraCommonKernelCasAlgoCoefficients alloc];
  OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, label, f);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelCasAlgoCoefficients *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) addCASAlgoWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  self->f_ = f;
  self->g_ = new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelCasAlgoCoefficients_compute(self);
}

OrgGeogebraCommonKernelCasAlgoCoefficients *new_OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelCasAlgoCoefficients *self = [OrgGeogebraCommonKernelCasAlgoCoefficients alloc];
  OrgGeogebraCommonKernelCasAlgoCoefficients_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, f);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoCoefficients_compute(OrgGeogebraCommonKernelCasAlgoCoefficients *self) {
  if (![((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setUndefined];
    return;
  }
  OrgGeogebraCommonKernelArithmeticFunction *inFun = [self->f_ getFunction];
  OrgGeogebraCommonKernelArithmeticPolyFunction *poly = [inFun expandToPolyFunctionWithOrgGeogebraCommonKernelArithmeticExpressionValue:[((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(inFun)) getExpression] withBoolean:NO withBoolean:NO];
  if (poly != nil) {
    IOSDoubleArray *coeffs = [poly getCoeffs];
    [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) clear];
    [self->g_ setDefinedWithBoolean:YES];
    for (jint i = ((IOSDoubleArray *) nil_chk(coeffs))->size_ - 1; i >= 0; i--) {
      [self->g_ addWithOrgGeogebraCommonKernelGeosGeoElement:new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(coeffs, i))];
    }
    return;
  }
  else if ([OrgGeogebraCommonKernelStatisticsFitAlgo_class_() isInstance:[self->f_ getParentAlgorithm]]) {
    id<OrgGeogebraCommonKernelStatisticsFitAlgo> fitAlgo = (id<OrgGeogebraCommonKernelStatisticsFitAlgo>) check_protocol_cast([self->f_ getParentAlgorithm], @protocol(OrgGeogebraCommonKernelStatisticsFitAlgo));
    IOSDoubleArray *coeffs = [((id<OrgGeogebraCommonKernelStatisticsFitAlgo>) nil_chk(fitAlgo)) getCoeffs];
    [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) clear];
    [self->g_ setDefinedWithBoolean:YES];
    for (jint i = ((IOSDoubleArray *) nil_chk(coeffs))->size_ - 1; i >= 0; i--) {
      [self->g_ addWithOrgGeogebraCommonKernelGeosGeoElement:new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(coeffs, i))];
    }
    return;
  }
  [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setUndefined];
  return;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoCoefficients)
