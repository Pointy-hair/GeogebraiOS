//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/cas/AlgoParametricDerivative.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/cas/AlgoParametricDerivative.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelCasAlgoParametricDerivative () {
 @public
  OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve_, *paramDeriv_;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
           withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)curve;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoParametricDerivative, curve_, OrgGeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoParametricDerivative, paramDeriv_, OrgGeogebraCommonKernelGeosGeoCurveCartesian *)

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelCasAlgoParametricDerivative *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve);

__attribute__((unused)) static OrgGeogebraCommonKernelCasAlgoParametricDerivative *new_OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoParametricDerivative_compute(OrgGeogebraCommonKernelCasAlgoParametricDerivative *self);

@implementation OrgGeogebraCommonKernelCasAlgoParametricDerivative

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)curve {
  OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, curve);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
           withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)curve {
  OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, curve);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ParametricDerivative();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, curve_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:paramDeriv_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoCurveCartesian *)getParametricDerivative {
  return paramDeriv_;
}

- (void)compute {
  OrgGeogebraCommonKernelCasAlgoParametricDerivative_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"ParametricDerivativeOfA" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(curve_)) toGeoElement])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoCurveCartesian:", "AlgoParametricDerivative", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoCurveCartesian:", "AlgoParametricDerivative", NULL, 0x2, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getParametricDerivative", NULL, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "curve_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "paramDeriv_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoParametricDerivative = { 2, "AlgoParametricDerivative", "org.geogebra.common.kernel.cas", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoParametricDerivative;
}

@end

void OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelCasAlgoParametricDerivative *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  (void) OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, curve);
  [((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->paramDeriv_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelCasAlgoParametricDerivative *new_OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  OrgGeogebraCommonKernelCasAlgoParametricDerivative *self = [OrgGeogebraCommonKernelCasAlgoParametricDerivative alloc];
  OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, curve);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelCasAlgoParametricDerivative *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->curve_ = curve;
  self->paramDeriv_ = (OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(curve)) copyInternalWithOrgGeogebraCommonKernelConstruction:cons], [OrgGeogebraCommonKernelGeosGeoCurveCartesian class]);
  [self setInputOutput];
  OrgGeogebraCommonKernelCasAlgoParametricDerivative_compute(self);
}

OrgGeogebraCommonKernelCasAlgoParametricDerivative *new_OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  OrgGeogebraCommonKernelCasAlgoParametricDerivative *self = [OrgGeogebraCommonKernelCasAlgoParametricDerivative alloc];
  OrgGeogebraCommonKernelCasAlgoParametricDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, curve);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoParametricDerivative_compute(OrgGeogebraCommonKernelCasAlgoParametricDerivative *self) {
  if (![((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->curve_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->paramDeriv_)) setUndefined];
    return;
  }
  [((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->paramDeriv_)) setParametricDerivativeWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:self->curve_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoParametricDerivative)
