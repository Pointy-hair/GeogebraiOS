//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/cas/AlgoIntegral.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoCasBase.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "org/geogebra/common/kernel/arithmetic/PolyFunction.h"
#include "org/geogebra/common/kernel/cas/AlgoIntegral.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelCasAlgoIntegral () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *var_;
  jboolean allowConstant_;
  OrgGeogebraCommonKernelArithmeticMyArbitraryConstant *arbconst_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoIntegral, var_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoIntegral, arbconst_, OrgGeogebraCommonKernelArithmeticMyArbitraryConstant *)

@implementation OrgGeogebraCommonKernelCasAlgoIntegral

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
        withOrgGeogebraCommonKernelGeosCasEvaluableFunction:(id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>)f
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)var {
  OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, f, var);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
        withOrgGeogebraCommonKernelGeosCasEvaluableFunction:(id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>)f
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)var
                                                withBoolean:(jboolean)allowConstant {
  OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, f, var, allowConstant);
  return self;
}

- (void)setInputOutput {
  jint length = 1;
  if (var_ != nil) length++;
  input_ = [IOSObjectArray newArrayWithLength:length type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  length = 0;
  (void) IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement]);
  if (var_ != nil) (void) IOSObjectArray_Set(input_, ++length, var_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:[((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) toGeoElement]];
  [self setDependencies];
}

- (void)applyCasCommandWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  if ([f_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
    OrgGeogebraCommonKernelArithmeticFunction *inFun = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(f_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) getFunction];
    if (![((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) useCASforIntegrals]) {
      inFun = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(inFun)) getIntegralNoCAS];
      if (inFun == nil) {
        [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setDefinedWithBoolean:NO];
      }
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:inFun];
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setDefinedWithBoolean:YES];
      return;
    }
    OrgGeogebraCommonKernelArithmeticPolyFunction *polyDeriv = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(inFun)) getNumericPolynomialIntegral];
    if (polyDeriv != nil) {
      OrgGeogebraCommonKernelArithmeticFunction *funDeriv = [polyDeriv getFunctionWithOrgGeogebraCommonKernelKernel:kernel_ withOrgGeogebraCommonKernelArithmeticFunctionVariable:[inFun getFunctionVariable]];
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:funDeriv];
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setDefinedWithBoolean:YES];
      return;
    }
  }
  NSString *varStr = var_ != nil ? [var_ getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] : [((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) getVarStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
  [((JavaLangStringBuilder *) nil_chk(sbAE_)) setLengthWithInt:0];
  (void) [sbAE_ appendWithNSString:@"Integral[%"];
  (void) [sbAE_ appendWithNSString:@","];
  (void) [sbAE_ appendWithNSString:varStr];
  (void) [sbAE_ appendWithNSString:@"]"];
  [((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) setUsingCasCommandWithNSString:[sbAE_ description] withOrgGeogebraCommonKernelGeosCasEvaluableFunction:f_ withBoolean:YES withOrgGeogebraCommonKernelArithmeticMyArbitraryConstant:self->allowConstant_ ? arbconst_ : nil];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  if (var_ != nil) {
    (void) [sb appendWithNSString:[super toStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  }
  else {
    (void) [sb appendWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"IntegralOfA" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]]];
  }
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) isIndependent]) {
    (void) [sb appendWithNSString:@": "];
    (void) [sb appendWithNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) toGeoElement])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
    if ([[g_ toGeoElement] isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
      (void) [sb appendWithChar:'('];
      (void) [sb appendWithNSString:[((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast([g_ toGeoElement], [OrgGeogebraCommonKernelGeosGeoFunction class])))) getVarStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
      (void) [sb appendWithChar:')'];
    }
    (void) [sb appendWithNSString:@" = "];
    (void) [sb appendWithNSString:[g_ toSymbolicStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  }
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosCasEvaluableFunction:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoIntegral", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosCasEvaluableFunction:withOrgGeogebraCommonKernelGeosGeoNumeric:withBoolean:", "AlgoIntegral", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "applyCasCommandWithOrgGeogebraCommonKernelStringTemplate:", "applyCasCommand", "V", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "var_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "allowConstant_", NULL, 0x2, "Z", NULL, NULL,  },
    { "arbconst_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.MyArbitraryConstant;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoIntegral = { 2, "AlgoIntegral", "org.geogebra.common.kernel.cas", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoIntegral;
}

@end

void OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelCasAlgoIntegral *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var) {
  (void) OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, f, var, YES);
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(self->g_)) toGeoElement])) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelCasAlgoIntegral *new_OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var) {
  OrgGeogebraCommonKernelCasAlgoIntegral *self = [OrgGeogebraCommonKernelCasAlgoIntegral alloc];
  OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, f, var);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(OrgGeogebraCommonKernelCasAlgoIntegral *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var, jboolean allowConstant) {
  (void) OrgGeogebraCommonKernelAlgosAlgoCasBase_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelCommandsCommandsEnum_(self, cons, f, OrgGeogebraCommonKernelCommandsCommandsEnum_get_Integral());
  self->arbconst_ = new_OrgGeogebraCommonKernelArithmeticMyArbitraryConstant_initWithOrgGeogebraCommonKernelAlgosConstructionElement_(self);
  self->var_ = var;
  self->allowConstant_ = allowConstant;
  [self setInputOutput];
  [self compute];
}

OrgGeogebraCommonKernelCasAlgoIntegral *new_OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelGeosGeoNumeric *var, jboolean allowConstant) {
  OrgGeogebraCommonKernelCasAlgoIntegral *self = [OrgGeogebraCommonKernelCasAlgoIntegral alloc];
  OrgGeogebraCommonKernelCasAlgoIntegral_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, f, var, allowConstant);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoIntegral)
