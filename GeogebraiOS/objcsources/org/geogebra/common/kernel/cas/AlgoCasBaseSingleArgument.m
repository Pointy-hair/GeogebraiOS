//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/cas/AlgoCasBaseSingleArgument.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoCasBase.h"
#include "org/geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "org/geogebra/common/kernel/cas/AlgoCasBaseSingleArgument.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"

@interface OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument () {
 @public
  OrgGeogebraCommonKernelArithmeticMyArbitraryConstant *arbconst_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument, arbconst_, OrgGeogebraCommonKernelArithmeticMyArbitraryConstant *)

@implementation OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
        withOrgGeogebraCommonKernelGeosCasEvaluableFunction:(id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>)f
            withOrgGeogebraCommonKernelCommandsCommandsEnum:(OrgGeogebraCommonKernelCommandsCommandsEnum *)cmd {
  OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelCommandsCommandsEnum_(self, cons, label, f, cmd);
  return self;
}

- (void)applyCasCommandWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  OrgGeogebraCommonKernelCommandsCommandsEnum *cmd = [self getClassName];
  [((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) setUsingCasCommandWithNSString:JreStrcat("$$", [((OrgGeogebraCommonKernelCommandsCommandsEnum *) nil_chk(cmd)) name], @"[%]") withOrgGeogebraCommonKernelGeosCasEvaluableFunction:f_ withBoolean:NO withOrgGeogebraCommonKernelArithmeticMyArbitraryConstant:arbconst_];
  if ([((id<OrgGeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) isDefined] && ![g_ isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([g_ toGeoElement])) setWithOrgGeogebraCommonKernelGeosGeoElement:[f_ toGeoElement]];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosCasEvaluableFunction:withOrgGeogebraCommonKernelCommandsCommandsEnum:", "AlgoCasBaseSingleArgument", NULL, 0x1, NULL, NULL },
    { "applyCasCommandWithOrgGeogebraCommonKernelStringTemplate:", "applyCasCommand", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "arbconst_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.MyArbitraryConstant;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument = { 2, "AlgoCasBaseSingleArgument", "org.geogebra.common.kernel.cas", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument;
}

@end

void OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelCommandsCommandsEnum_(OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelCommandsCommandsEnum *cmd) {
  (void) OrgGeogebraCommonKernelAlgosAlgoCasBase_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelCommandsCommandsEnum_(self, cons, label, f, cmd);
  self->arbconst_ = new_OrgGeogebraCommonKernelArithmeticMyArbitraryConstant_initWithOrgGeogebraCommonKernelAlgosConstructionElement_(self);
}

OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument *new_OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelCommandsCommandsEnum_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosCasEvaluableFunction> f, OrgGeogebraCommonKernelCommandsCommandsEnum *cmd) {
  OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument *self = [OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument alloc];
  OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelCommandsCommandsEnum_(self, cons, label, f, cmd);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoCasBaseSingleArgument)
