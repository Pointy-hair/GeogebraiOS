//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/cas/AlgoSurdText.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Comparable.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/math/BigDecimal.h"
#include "java/util/ArrayList.h"
#include "org/apache/commons/math/util/MathUtils.h"
#include "org/geogebra/common/euclidian/DrawEquation.h"
#include "org/geogebra/common/kernel/CASParserInterface.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/GeoGebraCasInterface.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "org/geogebra/common/kernel/cas/AlgoSurdText.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/util/MyMathExact.h"
#include "org/geogebra/common/util/Unicode.h"
#include "org/geogebra/common/util/debug/Log.h"

@interface OrgGeogebraCommonKernelCasAlgoSurdText () {
 @public
  id<OrgGeogebraCommonKernelGeosGeoNumberValue> num_;
  OrgGeogebraCommonKernelGeosGeoList *list_;
  OrgGeogebraCommonKernelGeosGeoText *text_;
  JavaLangStringBuilder *sb_;
}

- (void)FractionappendWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                        withInt:(jint)numer
                                        withInt:(jint)denom
      withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (jboolean)fitLinearCombWithDouble:(jdouble)y
                  withNSStringArray:(IOSObjectArray *)constNameSet
                    withDoubleArray:(IOSDoubleArray *)constValueSet
                            withInt:(jint)coeffBound
          withJavaLangStringBuilder:(JavaLangStringBuilder *)sb1
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (OrgGeogebraCommonKernelArithmeticValidExpression *)sbToCASWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)appendUndefinedWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb1
       withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl
                                      withDouble:(jdouble)num1;

+ (IOSIntArray *)PSLQWithDoubleArray:(IOSDoubleArray *)x
                          withDouble:(jdouble)AccuracyFactor
                             withInt:(jint)bound;

+ (IOSIntArray *)PSLQWithInt:(jint)n
             withDoubleArray:(IOSDoubleArray *)x_input
                  withDouble:(jdouble)AccuracyFactor
                     withInt:(jint)bound
               withIntArray2:(IOSObjectArray *)B_mutable
             withDoubleArray:(IOSDoubleArray *)xB_mutable
                withIntArray:(IOSIntArray *)orthoIndices_mutable;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText, num_, id<OrgGeogebraCommonKernelGeosGeoNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText, list_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText, text_, OrgGeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText, sb_, JavaLangStringBuilder *)

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_FractionappendWithJavaLangStringBuilder_withInt_withInt_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText *self, JavaLangStringBuilder *sb, jint numer, jint denom, OrgGeogebraCommonKernelStringTemplate *tpl);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelCasAlgoSurdText_fitLinearCombWithDouble_withNSStringArray_withDoubleArray_withInt_withJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText *self, jdouble y, IOSObjectArray *constNameSet, IOSDoubleArray *constValueSet, jint coeffBound, JavaLangStringBuilder *sb1, OrgGeogebraCommonKernelStringTemplate *tpl);

__attribute__((unused)) static OrgGeogebraCommonKernelArithmeticValidExpression *OrgGeogebraCommonKernelCasAlgoSurdText_sbToCASWithJavaLangStringBuilder_(OrgGeogebraCommonKernelCasAlgoSurdText *self, JavaLangStringBuilder *sb);

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText *self, JavaLangStringBuilder *sb1, OrgGeogebraCommonKernelStringTemplate *tpl, jdouble num1);

__attribute__((unused)) static IOSIntArray *OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithDoubleArray_withDouble_withInt_(IOSDoubleArray *x, jdouble AccuracyFactor, jint bound);

__attribute__((unused)) static IOSIntArray *OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithInt_withDoubleArray_withDouble_withInt_withIntArray2_withDoubleArray_withIntArray_(jint n, IOSDoubleArray *x_input, jdouble AccuracyFactor, jint bound, IOSObjectArray *B_mutable, IOSDoubleArray *xB_mutable, IOSIntArray *orthoIndices_mutable);

@interface OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder : NSObject {
 @public
  OrgGeogebraCommonUtilMyMathExact_MyDecimal *ZERO_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimal *ZERO_LESS_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimal *ONE_LESS_;
  jdouble tau_, rho_, gamma_;
  jdouble err_;
  jdouble M_;
  jint n_;
  IOSDoubleArray *x_;
  IOSObjectArray *x_full_;
  IOSObjectArray *x_double_;
  jint fullScale1_;
  jint lessScale1_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimal *xNorm_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *H_full_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *H_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *I_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *A_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *B_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *D_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *xB_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimal *b_, *l_, *d_;
  jint r_;
  JavaUtilArrayList *result_;
}

- (instancetype)initWithOrgGeogebraCommonKernelCasAlgoSurdText:(OrgGeogebraCommonKernelCasAlgoSurdText *)outer$
                                                       withInt:(jint)n
                                               withDoubleArray:(IOSDoubleArray *)x
                                                       withInt:(jint)fullScale_input
                                                       withInt:(jint)lessScale_input
                                                    withDouble:(jdouble)err
                                                    withDouble:(jdouble)bound;

- (void)initialize_full OBJC_METHOD_FAMILY_NONE;

- (void)hermiteReduction;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, ZERO_, OrgGeogebraCommonUtilMyMathExact_MyDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, ZERO_LESS_, OrgGeogebraCommonUtilMyMathExact_MyDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, ONE_LESS_, OrgGeogebraCommonUtilMyMathExact_MyDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, x_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, x_full_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, x_double_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, xNorm_, OrgGeogebraCommonUtilMyMathExact_MyDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, H_full_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, H_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, I_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, A_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, B_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, D_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, xB_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, b_, OrgGeogebraCommonUtilMyMathExact_MyDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, l_, OrgGeogebraCommonUtilMyMathExact_MyDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, d_, OrgGeogebraCommonUtilMyMathExact_MyDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder, result_, JavaUtilArrayList *)

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *self, OrgGeogebraCommonKernelCasAlgoSurdText *outer$, jint n, IOSDoubleArray *x, jint fullScale_input, jint lessScale_input, jdouble err, jdouble bound);

__attribute__((unused)) static OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText *outer$, jint n, IOSDoubleArray *x, jint fullScale_input, jint lessScale_input, jdouble err, jdouble bound) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_hermiteReduction(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder)

@interface OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation : NSObject < JavaLangComparable > {
 @public
  jint size_;
  jdouble sig_;
  jint nilDim_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *B1_, *B_sol_, *B_rest_;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *xB1_;
  IOSIntArray *orthoIndices_;
}

- (instancetype)initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder:(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *)outer$
                                                                         withInt:(jint)n
                            withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:(OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)B
                            withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:(OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)xB
                                                                      withDouble:(jdouble)sig;

- (OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)getBMatrix;

- (OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)getBSolMatrix;

- (OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)getBRestMatrix;

- (jint)compareToWithId:(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *)m2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation, B1_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation, B_sol_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation, B_rest_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation, xB1_, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation, orthoIndices_, IOSIntArray *)

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *self, OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *outer$, jint n, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *B, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *xB, jdouble sig);

__attribute__((unused)) static OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *outer$, jint n, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *B, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *xB, jdouble sig) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation)

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit : NSObject {
 @public
  OrgGeogebraCommonKernelCasAlgoSurdText *this$0_;
  jdouble num1_;
  jint numOfConsts_;
  jint numOfRadicals_;
  IOSDoubleArray *constValues_;
  IOSObjectArray *constStrings_;
  jint coeffBound_;
  jdouble err_;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *aft_;
  OrgGeogebraCommonKernelStringTemplate *tpl_;
  IOSDoubleArray *numList_;
  IOSObjectArray *coeffs_;
  jint s_;
  jint numOfPenalties_;
  IOSObjectArray *penalties_;
  jint numOfConstsUsed_;
  jint maxCoeff_;
  jint sumCoeffs_;
  jboolean isOneUsed_;
  jint bestIndex_;
  IOSIntArray *bestRelation_;
  JavaLangStringBuilder *formalSolution_;
}

- (instancetype)initWithOrgGeogebraCommonKernelCasAlgoSurdText:(OrgGeogebraCommonKernelCasAlgoSurdText *)outer$
                                             withNSStringArray:(IOSObjectArray *)constStrings
                                               withDoubleArray:(IOSDoubleArray *)constValues
withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum:(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *)aft
                     withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (void)computeWithDouble:(jdouble)number;

- (void)computeQuadraticWithDouble:(jdouble)number;

- (void)computeRationalNumberWithDouble:(jdouble)number;

- (void)computeConstantWithDouble:(jdouble)number;

- (jint)leastPenaltyIndex;

- (void)setCoeffBoundWithInt:(jint)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, this$0_, OrgGeogebraCommonKernelCasAlgoSurdText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, constValues_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, constStrings_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, aft_, OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, tpl_, OrgGeogebraCommonKernelStringTemplate *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, numList_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, coeffs_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, penalties_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, bestRelation_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit, formalSolution_, JavaLangStringBuilder *)

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self, OrgGeogebraCommonKernelCasAlgoSurdText *outer$, IOSObjectArray *constStrings, IOSDoubleArray *constValues, OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *aft, OrgGeogebraCommonKernelStringTemplate *tpl);

__attribute__((unused)) static OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText *outer$, IOSObjectArray *constStrings, IOSDoubleArray *constValues, OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *aft, OrgGeogebraCommonKernelStringTemplate *tpl) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeQuadraticWithDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self, jdouble number);

__attribute__((unused)) static void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeRationalNumberWithDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self, jdouble number);

__attribute__((unused)) static jint OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_leastPenaltyIndex(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit)

@implementation OrgGeogebraCommonKernelCasAlgoSurdText

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)num
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list {
  OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, num, list);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)num
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list {
  OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, num, list);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_SurdText();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:list_ == nil ? 1 : 2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelGeosGeoNumberValue>) nil_chk(num_)) toGeoElement]);
  if (list_ != nil) {
    IOSObjectArray_Set(input_, 1, list_);
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoText *)getResult {
  return text_;
}

- (void)compute {
  OrgGeogebraCommonKernelStringTemplate *tpl = [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text_)) getStringTemplate];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 0))) isDefined]) {
    [((JavaLangStringBuilder *) nil_chk(sb_)) setLengthWithInt:0];
    jdouble decimal = [((id<OrgGeogebraCommonKernelGeosGeoNumberValue>) nil_chk(num_)) getDouble];
    if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(decimal - JavaLangMath_roundWithDouble_(decimal), 0.0, OrgGeogebraCommonKernelKernel_MAX_PRECISION)) {
      [sb_ appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:JavaLangMath_roundWithDouble_(decimal) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    }
    else {
      if (list_ == nil) {
        [self PSLQappendQuadraticWithJavaLangStringBuilder:sb_ withDouble:decimal withOrgGeogebraCommonKernelStringTemplate:tpl];
      }
      else {
        [self PSLQappendGeneralWithJavaLangStringBuilder:sb_ withDouble:decimal withOrgGeogebraCommonKernelStringTemplate:tpl];
      }
    }
    [text_ setTextStringWithNSString:[sb_ description]];
    [text_ setLaTeXWithBoolean:YES withBoolean:NO];
  }
  else {
    [text_ setTextStringWithNSString:@"?"];
    [text_ setLaTeXWithBoolean:YES withBoolean:NO];
  }
}

- (void)FractionappendWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                        withInt:(jint)numer
                                        withInt:(jint)denom
      withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  OrgGeogebraCommonKernelCasAlgoSurdText_FractionappendWithJavaLangStringBuilder_withInt_withInt_withOrgGeogebraCommonKernelStringTemplate_(self, sb, numer, denom, tpl);
}

- (void)PSLQappendGeneralWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                        withDouble:(jdouble)num
         withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(num)) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:0 withOrgGeogebraCommonKernelStringTemplate:tpl]];
    return;
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *fitter = [new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(self, nil, nil, OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_get_RATIONAL_NUMBER(), tpl) autorelease];
  [fitter setCoeffBoundWithInt:1000];
  [fitter computeWithDouble:num];
  OrgGeogebraCommonKernelArithmeticValidExpression *ve = OrgGeogebraCommonKernelCasAlgoSurdText_sbToCASWithJavaLangStringBuilder_(self, fitter->formalSolution_);
  if ([((JavaLangStringBuilder *) nil_chk(fitter->formalSolution_)) length] > 0 && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((OrgGeogebraCommonKernelArithmeticValidExpression *) nil_chk(ve)) evaluateDouble], num)) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((id<OrgGeogebraCommonKernelGeoGebraCasInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getGeoGebraCAS])) evaluateGeoGebraCASWithOrgGeogebraCommonKernelArithmeticValidExpression:ve withOrgGeogebraCommonKernelArithmeticMyArbitraryConstant:nil withOrgGeogebraCommonKernelStringTemplate:tpl withOrgGeogebraCommonKernelGeosGeoCasCell:nil withOrgGeogebraCommonKernelKernel:kernel_]];
    return;
  }
  IOSDoubleArray *testValues;
  IOSObjectArray *testNames;
  if (list_ != nil) {
    JavaUtilArrayList *values = [new_JavaUtilArrayList_init() autorelease];
    JavaUtilArrayList *names = [new_JavaUtilArrayList_init() autorelease];
    for (jint i = 0; i < [list_ size]; i++) {
      jdouble x = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([list_ getWithInt:i])) evaluateDouble];
      if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, JavaLangMath_PI)) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(JavaLangMath_PI)];
        [names addWithId:@"pi"];
      }
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, 1 / JavaLangMath_PI)) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(1 / JavaLangMath_PI)];
        [names addWithId:@"1/pi"];
      }
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, JavaLangMath_PI * JavaLangMath_PI)) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(JavaLangMath_PI * JavaLangMath_PI)];
        [names addWithId:@"pi^2"];
      }
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, JavaLangMath_sqrtWithDouble_(JavaLangMath_PI))) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(JavaLangMath_sqrtWithDouble_(JavaLangMath_PI))];
        [names addWithId:@"sqrt(pi)"];
      }
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, JavaLangMath_E)) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(JavaLangMath_E)];
        [names addWithId:OrgGeogebraCommonUtilUnicode_get_EULER_STRING_()];
      }
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, 1 / JavaLangMath_E)) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(1 / JavaLangMath_E)];
        [names addWithId:JreStrcat("$$", @"1/", OrgGeogebraCommonUtilUnicode_get_EULER_STRING_())];
      }
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, JavaLangMath_E * JavaLangMath_E)) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(JavaLangMath_E * JavaLangMath_PI)];
        [names addWithId:JreStrcat("$$", OrgGeogebraCommonUtilUnicode_get_EULER_STRING_(), @"^2")];
      }
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, JavaLangMath_sqrtWithDouble_(JavaLangMath_E))) {
        [values addWithId:JavaLangDouble_valueOfWithDouble_(JavaLangMath_sqrtWithDouble_(JavaLangMath_E))];
        [names addWithId:JreStrcat("$$C", @"sqrt(", OrgGeogebraCommonUtilUnicode_get_EULER_STRING_(), ')')];
      }
      else {
        jint j;
        for (j = 2; j < 100; j++) {
          jdouble sqrt = JavaLangMath_sqrtWithDouble_(j);
          if (!OrgGeogebraCommonKernelKernel_isIntegerWithDouble_(sqrt) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, sqrt)) {
            [values addWithId:JavaLangDouble_valueOfWithDouble_(sqrt)];
            [names addWithId:JreStrcat("$IC", @"sqrt(", j, ')')];
            break;
          }
          jdouble ln = JavaLangMath_logWithDouble_(j);
          if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, ln)) {
            [values addWithId:JavaLangDouble_valueOfWithDouble_(ln)];
            [names addWithId:JreStrcat("$IC", @"ln(", j, ')')];
            break;
          }
        }
      }
    }
    testValues = [IOSDoubleArray arrayWithLength:[values size]];
    testNames = [IOSObjectArray arrayWithLength:[values size] type:NSString_class_()];
    for (jint i = 0; i < [values size]; i++) {
      *IOSDoubleArray_GetRef(testValues, i) = [((JavaLangDouble *) nil_chk([values getWithInt:i])) doubleValue];
      IOSObjectArray_Set(testNames, i, [names getWithInt:i]);
    }
  }
  else {
    testValues = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ JavaLangMath_sqrtWithDouble_(2.0), JavaLangMath_sqrtWithDouble_(3.0), JavaLangMath_sqrtWithDouble_(5.0), JavaLangMath_sqrtWithDouble_(6.0), JavaLangMath_sqrtWithDouble_(7.0), JavaLangMath_sqrtWithDouble_(10.0), JavaLangMath_PI } count:7];
    testNames = [IOSObjectArray arrayWithObjects:(id[]){ @"sqrt(2)", @"sqrt(3)", @"sqrt(5)", @"sqrt(6)", @"sqrt(7)", @"sqrt(10)", @"pi" } count:7 type:NSString_class_()];
  }
  jboolean success = OrgGeogebraCommonKernelCasAlgoSurdText_fitLinearCombWithDouble_withNSStringArray_withDoubleArray_withInt_withJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(self, num, testNames, testValues, 100, sb, tpl);
  if (success) {
    return;
  }
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:num withOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_maxPrecision_()]];
}

- (jboolean)fitLinearCombWithDouble:(jdouble)y
                  withNSStringArray:(IOSObjectArray *)constNameSet
                    withDoubleArray:(IOSDoubleArray *)constValueSet
                            withInt:(jint)coeffBound
          withJavaLangStringBuilder:(JavaLangStringBuilder *)sb1
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return OrgGeogebraCommonKernelCasAlgoSurdText_fitLinearCombWithDouble_withNSStringArray_withDoubleArray_withInt_withJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(self, y, constNameSet, constValueSet, coeffBound, sb1, tpl);
}

- (OrgGeogebraCommonKernelArithmeticValidExpression *)sbToCASWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  return OrgGeogebraCommonKernelCasAlgoSurdText_sbToCASWithJavaLangStringBuilder_(self, sb);
}

+ (jdouble)evaluateCombinationWithInt:(jint)n
                      withDoubleArray:(IOSDoubleArray *)constValue
                         withIntArray:(IOSIntArray *)coeffs
                              withInt:(jint)offset
                              withInt:(jint)step {
  return OrgGeogebraCommonKernelCasAlgoSurdText_evaluateCombinationWithInt_withDoubleArray_withIntArray_withInt_withInt_(n, constValue, coeffs, offset, step);
}

- (void)appendCombinationWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbToCAS
                                           withInt:(jint)numOfTerms
                                 withNSStringArray:(IOSObjectArray *)vars
                                      withIntArray:(IOSIntArray *)coeffs
                                           withInt:(jint)offset
                                           withInt:(jint)step
         withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  jint numOfAllTerms = ((IOSObjectArray *) nil_chk(vars))->size_;
  if (numOfAllTerms - 1 > JavaLangMath_floorWithDouble_((((IOSIntArray *) nil_chk(coeffs))->size_ - 1 - step - offset) / step)) {
    return;
  }
  if (numOfTerms == 0) {
    return;
  }
  jint counter = numOfTerms - 1;
  for (jint j = 0; j < numOfAllTerms; j++) {
    [((JavaLangStringBuilder *) nil_chk(sbToCAS)) appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:IOSIntArray_Get(coeffs, offset + j * step) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sbToCAS appendWithNSString:@"*"];
    [sbToCAS appendWithNSString:IOSObjectArray_Get(vars, j)];
    if (counter > 0) {
      [sbToCAS appendWithNSString:@" + "];
      counter--;
    }
  }
}

- (void)appendUndefinedWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb1
       withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl
                                      withDouble:(jdouble)num1 {
  OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(self, sb1, tpl, num1);
}

- (void)PSLQappendQuarticWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                        withDouble:(jdouble)num1
         withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  IOSDoubleArray *numPowers = [IOSDoubleArray arrayWithLength:5];
  jdouble temp = 1.0;
  for (jint i = 4; i >= 0; i--) {
    *IOSDoubleArray_GetRef(numPowers, i) = temp;
    temp *= num1;
  }
  [self getKernel];
  IOSIntArray *coeffs = OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithDoubleArray_withDouble_withInt_(numPowers, OrgGeogebraCommonKernelKernel_STANDARD_PRECISION, 10);
  if (IOSIntArray_Get(nil_chk(coeffs), 0) == 0 && IOSIntArray_Get(coeffs, 1) == 0) {
    if (IOSIntArray_Get(coeffs, 2) == 0 && IOSIntArray_Get(coeffs, 3) == 0 && IOSIntArray_Get(coeffs, 4) == 0) {
      OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(self, sb, tpl, num1);
    }
    else if (IOSIntArray_Get(coeffs, 2) == 0) {
      jint denom = IOSIntArray_Get(coeffs, 3);
      jint numer = -IOSIntArray_Get(coeffs, 4);
      OrgGeogebraCommonKernelCasAlgoSurdText_FractionappendWithJavaLangStringBuilder_withInt_withInt_withOrgGeogebraCommonKernelStringTemplate_(self, sb, numer, denom, tpl);
    }
    else {
      jint a = -IOSIntArray_Get(coeffs, 3);
      jint b2 = IOSIntArray_Get(coeffs, 3) * IOSIntArray_Get(coeffs, 3) - 4 * IOSIntArray_Get(coeffs, 2) * IOSIntArray_Get(coeffs, 4);
      jint b1 = 1;
      jint c = 2 * IOSIntArray_Get(coeffs, 2);
      if (b2 <= 0) {
        OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(self, sb, tpl, num1);
        return;
      }
      while (b2 % 4 == 0) {
        b2 = b2 / 4;
        b1 = b1 * 2;
      }
      for (jint s = 3; s <= JavaLangMath_sqrtWithDouble_(b2); s += 2) while (b2 % (s * s) == 0) {
        b2 = b2 / (s * s);
        b1 = b1 * s;
      }
      if (c < 0) {
        a = -a;
        c = -c;
      }
      jboolean positive;
      if (num1 > (a + 0.0) / c) {
        positive = YES;
        if (b2 == 1) {
          a += b1;
          b1 = 0;
          b2 = 0;
        }
      }
      else {
        positive = NO;
        if (b2 == 1) {
          a -= b1;
          b1 = 0;
          b2 = 0;
        }
      }
      jint gcd = OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(a, b1), c);
      if (gcd != 1) {
        a = a / gcd;
        b1 = b1 / gcd;
        c = c / gcd;
      }
      OrgGeogebraCommonKernelArithmeticExpressionNode *en;
      if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(b1)) {
        en = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, a) autorelease];
      }
      else {
        en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([([new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, b2) autorelease]) sqrt])) multiplyRWithDouble:b1];
        if (positive) {
          en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) plusRWithDouble:a];
        }
        else {
          en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) subtractRWithDouble:a];
        }
      }
      en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) divideWithDouble:c];
      [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
    }
  }
  else if (IOSIntArray_Get(coeffs, 0) == 0) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"Root of a cubic equation: "];
    [sb appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:IOSIntArray_Get(coeffs, 1) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@"x^3 + "];
    [sb appendWithNSString:[kernel_ formatWithDouble:IOSIntArray_Get(coeffs, 2) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@"x^2 + "];
    [sb appendWithNSString:[kernel_ formatWithDouble:IOSIntArray_Get(coeffs, 3) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@"x + "];
    [sb appendWithNSString:[kernel_ formatWithDouble:IOSIntArray_Get(coeffs, 4) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    OrgGeogebraCommonMainApp_debugWithNSString_([sb description]);
  }
  else {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"Root of a quartic equation: "];
    [sb appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:IOSIntArray_Get(coeffs, 0) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@"x^4 + "];
    [sb appendWithNSString:[kernel_ formatWithDouble:IOSIntArray_Get(coeffs, 1) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@"x^3 + "];
    [sb appendWithNSString:[kernel_ formatWithDouble:IOSIntArray_Get(coeffs, 2) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@"x^2 + "];
    [sb appendWithNSString:[kernel_ formatWithDouble:IOSIntArray_Get(coeffs, 3) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@"x + "];
    [sb appendWithNSString:[kernel_ formatWithDouble:IOSIntArray_Get(coeffs, 4) withOrgGeogebraCommonKernelStringTemplate:tpl]];
    OrgGeogebraCommonMainApp_debugWithNSString_([sb description]);
  }
}

- (void)PSLQappendQuadraticWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                          withDouble:(jdouble)num1
           withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(num1)) {
    OrgGeogebraCommonEuclidianDrawEquation_appendNumberWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withNSString_(sb, tpl, @"0");
    return;
  }
  IOSDoubleArray *numPowers = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ num1 * num1, num1, 1.0 } count:3];
  IOSIntArray *coeffs = OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithDoubleArray_withDouble_withInt_(numPowers, 1E-10, 10);
  if (coeffs == nil) {
    OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(self, sb, tpl, num1);
    return;
  }
  if ((IOSIntArray_Get(nil_chk(coeffs), 0) == 0 && IOSIntArray_Get(coeffs, 1) == 0 && IOSIntArray_Get(coeffs, 2) == 0) || JavaLangMath_absWithInt_(IOSIntArray_Get(coeffs, 0)) > 570 || JavaLangMath_absWithInt_(IOSIntArray_Get(coeffs, 1)) > 729 || JavaLangMath_absWithInt_(IOSIntArray_Get(coeffs, 2)) > 465) {
    OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(self, sb, tpl, num1);
  }
  else if (IOSIntArray_Get(coeffs, 0) == 0) {
    jint denom = IOSIntArray_Get(coeffs, 1);
    jint numer = -IOSIntArray_Get(coeffs, 2);
    OrgGeogebraCommonKernelCasAlgoSurdText_FractionappendWithJavaLangStringBuilder_withInt_withInt_withOrgGeogebraCommonKernelStringTemplate_(self, sb, numer, denom, tpl);
  }
  else {
    jint a = -IOSIntArray_Get(coeffs, 1);
    jint b2 = IOSIntArray_Get(coeffs, 1) * IOSIntArray_Get(coeffs, 1) - 4 * IOSIntArray_Get(coeffs, 0) * IOSIntArray_Get(coeffs, 2);
    jint b1 = 1;
    jint c = 2 * IOSIntArray_Get(coeffs, 0);
    if (b2 <= 0) {
      OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(self, sb, tpl, num1);
      return;
    }
    while (b2 % 4 == 0) {
      b2 = b2 / 4;
      b1 = b1 * 2;
    }
    for (jint s = 3; s <= JavaLangMath_sqrtWithDouble_(b2); s += 2) while (b2 % (s * s) == 0) {
      b2 = b2 / (s * s);
      b1 = b1 * s;
    }
    if (c < 0) {
      a = -a;
      c = -c;
    }
    jboolean positive;
    if (num1 > (a + 0.0) / c) {
      positive = YES;
      if (b2 == 1) {
        a += b1;
        b1 = 0;
        b2 = 0;
      }
    }
    else {
      positive = NO;
      if (b2 == 1) {
        a -= b1;
        b1 = 0;
        b2 = 0;
      }
    }
    jint gcd = OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(a, b1), c);
    if (gcd != 1) {
      a = a / gcd;
      b1 = b1 / gcd;
      c = c / gcd;
    }
    OrgGeogebraCommonKernelArithmeticExpressionNode *en;
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(b1)) {
      en = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, a) autorelease];
    }
    else {
      en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([([new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, b2) autorelease]) sqrt])) multiplyRWithDouble:b1];
      if (positive) {
        en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) plusRWithDouble:a];
      }
      else {
        en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) subtractRWithDouble:a];
      }
    }
    en = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) divideWithDouble:c];
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  }
}

- (IOSObjectArray *)mPSLQWithInt:(jint)n
                 withDoubleArray:(IOSDoubleArray *)x
                      withDouble:(jdouble)AccuracyFactor
                         withInt:(jint)bound {
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *r2;
  jint rCols = 0;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *B_comp;
  OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *result2;
  jint p = n;
  jint oldp = p;
  jint q;
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *irf = [new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(self, oldp, x, fullScale_, lessScale_, AccuracyFactor, bound) autorelease];
  if ([((JavaUtilArrayList *) nil_chk(irf->result_)) size] == 0) {
    return nil;
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *m = [irf->result_ getWithInt:0];
  r2 = [new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk([((OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *) nil_chk(m)) getBMatrix])) getScale], n, n) autorelease];
  result2 = [m getBSolMatrix];
  if (result2 != nil) q = [result2 getColumnDimension];
  else q = 0;
  for (jint j = 0; j < q; j++) {
    for (jint i = 0; i < n; i++) {
      [r2 setEntryWithInt:i withInt:rCols withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(result2)) getEntryWithInt:i withInt:j]];
    }
    if (rCols == n - 1) OrgGeogebraCommonUtilDebugLog_warnWithNSString_(@"There should not be that many solutions.");
    rCols++;
  }
  p = 0;
  for (jint j = 0; j < oldp; j++) {
    if (IOSIntArray_Get(nil_chk(m->orthoIndices_), j) == 0) {
      *IOSDoubleArray_GetRef(nil_chk(x), p++) = [((JavaLangDouble *) [new_JavaLangDouble_initWithNSString_([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(m->xB1_)) getEntryWithInt:0 withInt:j])) description]) autorelease]) doubleValue];
    }
  }
  B_comp = [m getBRestMatrix];
  while (oldp >= 2 && p < oldp && rCols < n - 1) {
    oldp = p;
    p = 0;
    irf = [new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(self, oldp, x, fullScale_, lessScale_, AccuracyFactor, bound) autorelease];
    if ([irf->result_ size] == 0) {
      break;
    }
    m = [irf->result_ getWithInt:0];
    if ([((OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *) nil_chk(m)) getBSolMatrix] == nil) {
      break;
    }
    result2 = [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(B_comp)) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:[m getBSolMatrix]];
    q = [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(result2)) getColumnDimension];
    for (jint j = 0; j < q; j++) {
      jboolean allZero = YES;
      for (jint i = 0; i < n; i++) allZero = (allZero && [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([result2 getEntryWithInt:i withInt:j])) intValue] == 0);
      if (allZero) break;
      jboolean tooLargeEntry = NO;
      for (jint i = 0; i < n; i++) tooLargeEntry = (tooLargeEntry || [((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([result2 getEntryWithInt:i withInt:j])) abs])) intValue] > bound);
      if (tooLargeEntry) break;
      for (jint i = 0; i < n; i++) {
        [r2 setEntryWithInt:i withInt:rCols withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[result2 getEntryWithInt:i withInt:j]];
      }
      if (rCols == n - 1) {
        OrgGeogebraCommonUtilDebugLog_warnWithNSString_(@"There should not be that many solutions.");
      }
      rCols++;
    }
    p = 0;
    for (jint j = 0; j < oldp; j++) {
      if (IOSIntArray_Get(nil_chk(m->orthoIndices_), j) == 0) {
        *IOSDoubleArray_GetRef(nil_chk(x), p++) = [((JavaLangDouble *) [new_JavaLangDouble_initWithNSString_([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(m->xB1_)) getEntryWithInt:0 withInt:j])) description]) autorelease]) doubleValue];
      }
    }
    if ([m getBRestMatrix] != nil) B_comp = [B_comp multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:[m getBRestMatrix]];
  }
  IOSObjectArray *result = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ n, rCols }];
  for (jint i = 0; i < n; i++) {
    for (jint j = 0; j < rCols; j++) {
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(result, i)), j) = [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([r2 getEntryWithInt:i withInt:j])) intValue];
    }
  }
  return result;
}

+ (IOSIntArray *)PSLQWithDoubleArray:(IOSDoubleArray *)x
                          withDouble:(jdouble)AccuracyFactor
                             withInt:(jint)bound {
  return OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithDoubleArray_withDouble_withInt_(x, AccuracyFactor, bound);
}

+ (IOSIntArray *)PSLQWithInt:(jint)n
             withDoubleArray:(IOSDoubleArray *)x_input
                  withDouble:(jdouble)AccuracyFactor
                     withInt:(jint)bound
               withIntArray2:(IOSObjectArray *)B_mutable
             withDoubleArray:(IOSDoubleArray *)xB_mutable
                withIntArray:(IOSIntArray *)orthoIndices_mutable {
  return OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithInt_withDoubleArray_withDouble_withInt_withIntArray2_withDoubleArray_withIntArray_(n, x_input, AccuracyFactor, bound, B_mutable, xB_mutable, orthoIndices_mutable);
}

- (jboolean)isLaTeXTextCommand {
  return YES;
}

- (void)dealloc {
  RELEASE_(num_);
  RELEASE_(list_);
  RELEASE_(text_);
  RELEASE_(sb_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoSurdText", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoSurdText", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoSurdText", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "FractionappendWithJavaLangStringBuilder:withInt:withInt:withOrgGeogebraCommonKernelStringTemplate:", "Fractionappend", "V", 0x2, NULL, NULL },
    { "PSLQappendGeneralWithJavaLangStringBuilder:withDouble:withOrgGeogebraCommonKernelStringTemplate:", "PSLQappendGeneral", "V", 0x4, NULL, NULL },
    { "fitLinearCombWithDouble:withNSStringArray:withDoubleArray:withInt:withJavaLangStringBuilder:withOrgGeogebraCommonKernelStringTemplate:", "fitLinearComb", "Z", 0x2, NULL, NULL },
    { "sbToCASWithJavaLangStringBuilder:", "sbToCAS", "Lorg.geogebra.common.kernel.arithmetic.ValidExpression;", 0x2, NULL, NULL },
    { "evaluateCombinationWithInt:withDoubleArray:withIntArray:withInt:withInt:", "evaluateCombination", "D", 0x8, NULL, NULL },
    { "appendCombinationWithJavaLangStringBuilder:withInt:withNSStringArray:withIntArray:withInt:withInt:withOrgGeogebraCommonKernelStringTemplate:", "appendCombination", "V", 0x1, NULL, NULL },
    { "appendUndefinedWithJavaLangStringBuilder:withOrgGeogebraCommonKernelStringTemplate:withDouble:", "appendUndefined", "V", 0x2, NULL, NULL },
    { "PSLQappendQuarticWithJavaLangStringBuilder:withDouble:withOrgGeogebraCommonKernelStringTemplate:", "PSLQappendQuartic", "V", 0x4, NULL, NULL },
    { "PSLQappendQuadraticWithJavaLangStringBuilder:withDouble:withOrgGeogebraCommonKernelStringTemplate:", "PSLQappendQuadratic", "V", 0x4, NULL, NULL },
    { "mPSLQWithInt:withDoubleArray:withDouble:withInt:", "mPSLQ", "[[I", 0x0, NULL, NULL },
    { "PSLQWithDoubleArray:withDouble:withInt:", "PSLQ", "[I", 0xa, NULL, NULL },
    { "PSLQWithInt:withDoubleArray:withDouble:withInt:withIntArray2:withDoubleArray:withIntArray:", "PSLQ", "[I", 0xa, NULL, NULL },
    { "isLaTeXTextCommand", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fullScale_", NULL, 0x0, "I", NULL, NULL,  },
    { "lessScale_", NULL, 0x0, "I", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumberValue;", NULL, NULL,  },
    { "list_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "text_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.cas.AlgoSurdText$IntRelationFinder;", "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFit;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoSurdText = { 2, "AlgoSurdText", "org.geogebra.common.kernel.cas", NULL, 0x1, 20, methods, 6, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoSurdText;
}

@end

void OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelCasAlgoSurdText *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num, OrgGeogebraCommonKernelGeosGeoList *list) {
  OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, num, list);
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelCasAlgoSurdText *new_OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num, OrgGeogebraCommonKernelGeosGeoList *list) {
  OrgGeogebraCommonKernelCasAlgoSurdText *self = [OrgGeogebraCommonKernelCasAlgoSurdText alloc];
  OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, num, list);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelCasAlgoSurdText *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num, OrgGeogebraCommonKernelGeosGeoList *list) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->fullScale_ = 64;
  self->lessScale_ = 16;
  OrgGeogebraCommonKernelCasAlgoSurdText_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
  if (list != nil) {
    [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) addCASAlgoWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_set_num_(self, num);
  OrgGeogebraCommonKernelCasAlgoSurdText_set_list_(self, list);
  OrgGeogebraCommonKernelCasAlgoSurdText_setAndConsume_text_(self, new_OrgGeogebraCommonKernelGeosGeoText_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self->text_ setFormulaTypeWithOrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum:[((OrgGeogebraCommonMainApp *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication])) getPreferredFormulaRenderingType]];
  [self->text_ setLaTeXWithBoolean:YES withBoolean:NO];
  [self->text_ setIsTextCommandWithBoolean:YES];
  [self setInputOutput];
  [self compute];
}

OrgGeogebraCommonKernelCasAlgoSurdText *new_OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num, OrgGeogebraCommonKernelGeosGeoList *list) {
  OrgGeogebraCommonKernelCasAlgoSurdText *self = [OrgGeogebraCommonKernelCasAlgoSurdText alloc];
  OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, num, list);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelCasAlgoSurdText *self, OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->fullScale_ = 64;
  self->lessScale_ = 16;
  OrgGeogebraCommonKernelCasAlgoSurdText_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
}

OrgGeogebraCommonKernelCasAlgoSurdText *new_OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelCasAlgoSurdText *self = [OrgGeogebraCommonKernelCasAlgoSurdText alloc];
  OrgGeogebraCommonKernelCasAlgoSurdText_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoSurdText_FractionappendWithJavaLangStringBuilder_withInt_withInt_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText *self, JavaLangStringBuilder *sb, jint numer, jint denom, OrgGeogebraCommonKernelStringTemplate *tpl) {
  if (denom < 0) {
    denom = -denom;
    numer = -numer;
  }
  jint gcdiv = (jint) OrgGeogebraCommonKernelKernel_gcdWithLong_withLong_(JavaLangMath_absWithInt_(numer), denom);
  if (gcdiv != 1) {
    denom = denom / gcdiv;
    numer = numer / gcdiv;
  }
  if (denom == 1) {
    OrgGeogebraCommonEuclidianDrawEquation_appendNumberWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withNSString_(sb, tpl, [((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) formatWithDouble:numer withOrgGeogebraCommonKernelStringTemplate:tpl]);
  }
  else if (denom == 0) {
    if (numer < 0) {
      OrgGeogebraCommonEuclidianDrawEquation_appendMinusInfinityWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(sb, tpl);
    }
    else {
      OrgGeogebraCommonEuclidianDrawEquation_appendInfinityWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(sb, tpl);
    }
  }
  else {
    OrgGeogebraCommonEuclidianDrawEquation_appendFormulaStartWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(sb, tpl);
    jboolean negative = numer < 0;
    if (negative) {
      numer = -numer;
      OrgGeogebraCommonEuclidianDrawEquation_appendNegationWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(sb, tpl);
    }
    OrgGeogebraCommonEuclidianDrawEquation_appendFractionStartWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(sb, tpl);
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) formatWithDouble:numer withOrgGeogebraCommonKernelStringTemplate:tpl]];
    OrgGeogebraCommonEuclidianDrawEquation_appendFractionMiddleWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(sb, tpl);
    [sb appendWithNSString:[self->kernel_ formatWithDouble:denom withOrgGeogebraCommonKernelStringTemplate:tpl]];
    OrgGeogebraCommonEuclidianDrawEquation_appendFractionEndWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(sb, tpl);
  }
}

jboolean OrgGeogebraCommonKernelCasAlgoSurdText_fitLinearCombWithDouble_withNSStringArray_withDoubleArray_withInt_withJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText *self, jdouble y, IOSObjectArray *constNameSet, IOSDoubleArray *constValueSet, jint coeffBound, JavaLangStringBuilder *sb1, OrgGeogebraCommonKernelStringTemplate *tpl) {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *fitter0 = [new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(self, constNameSet, constValueSet, OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_get_LINEAR_COMBINATION(), tpl) autorelease];
  [fitter0 setCoeffBoundWithInt:coeffBound];
  [fitter0 computeWithDouble:y];
  OrgGeogebraCommonKernelArithmeticValidExpression *ve0 = OrgGeogebraCommonKernelCasAlgoSurdText_sbToCASWithJavaLangStringBuilder_(self, fitter0->formalSolution_);
  if ([((JavaLangStringBuilder *) nil_chk(fitter0->formalSolution_)) length] > 0 && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((OrgGeogebraCommonKernelArithmeticValidExpression *) nil_chk(ve0)) evaluateDouble], y)) {
    [((JavaLangStringBuilder *) nil_chk(sb1)) appendWithNSString:[((id<OrgGeogebraCommonKernelGeoGebraCasInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getGeoGebraCAS])) evaluateGeoGebraCASWithOrgGeogebraCommonKernelArithmeticValidExpression:ve0 withOrgGeogebraCommonKernelArithmeticMyArbitraryConstant:nil withOrgGeogebraCommonKernelStringTemplate:tpl withOrgGeogebraCommonKernelGeosGeoCasCell:nil withOrgGeogebraCommonKernelKernel:self->kernel_]];
    return YES;
  }
  return NO;
}

OrgGeogebraCommonKernelArithmeticValidExpression *OrgGeogebraCommonKernelCasAlgoSurdText_sbToCASWithJavaLangStringBuilder_(OrgGeogebraCommonKernelCasAlgoSurdText *self, JavaLangStringBuilder *sb) {
  if (sb != nil) {
    return [((id<OrgGeogebraCommonKernelCASParserInterface>) nil_chk([((id<OrgGeogebraCommonKernelGeoGebraCasInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getGeoGebraCAS])) getCASparser])) parseGeoGebraCASInputAndResolveDummyVarsWithNSString:[sb description] withOrgGeogebraCommonKernelKernel:[self getKernel] withOrgGeogebraCommonKernelGeosGeoCasCell:nil];
  }
  return nil;
}

jdouble OrgGeogebraCommonKernelCasAlgoSurdText_evaluateCombinationWithInt_withDoubleArray_withIntArray_withInt_withInt_(jint n, IOSDoubleArray *constValue, IOSIntArray *coeffs, jint offset, jint step) {
  OrgGeogebraCommonKernelCasAlgoSurdText_initialize();
  jdouble sum = 0;
  for (jint j = 0; j < n; j++) {
    sum += IOSDoubleArray_Get(nil_chk(constValue), j) * IOSIntArray_Get(nil_chk(coeffs), offset + j * step);
  }
  return sum;
}

void OrgGeogebraCommonKernelCasAlgoSurdText_appendUndefinedWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText *self, JavaLangStringBuilder *sb1, OrgGeogebraCommonKernelStringTemplate *tpl, jdouble num1) {
  OrgGeogebraCommonEuclidianDrawEquation_appendNumberWithJavaLangStringBuilder_withOrgGeogebraCommonKernelStringTemplate_withNSString_(sb1, tpl, [((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) formatWithDouble:num1 withOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_maxPrecision_()]);
}

IOSIntArray *OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithDoubleArray_withDouble_withInt_(IOSDoubleArray *x, jdouble AccuracyFactor, jint bound) {
  OrgGeogebraCommonKernelCasAlgoSurdText_initialize();
  return OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithInt_withDoubleArray_withDouble_withInt_withIntArray2_withDoubleArray_withIntArray_(((IOSDoubleArray *) nil_chk(x))->size_, x, AccuracyFactor, bound, nil, nil, nil);
}

IOSIntArray *OrgGeogebraCommonKernelCasAlgoSurdText_PSLQWithInt_withDoubleArray_withDouble_withInt_withIntArray2_withDoubleArray_withIntArray_(jint n, IOSDoubleArray *x_input, jdouble AccuracyFactor, jint bound, IOSObjectArray *B_mutable, IOSDoubleArray *xB_mutable, IOSIntArray *orthoIndices_mutable) {
  OrgGeogebraCommonKernelCasAlgoSurdText_initialize();
  IOSDoubleArray *x = [IOSDoubleArray arrayWithLength:n];
  for (jint i = 0; i < n; i++) {
    *IOSDoubleArray_GetRef(x, i) = IOSDoubleArray_Get(nil_chk(x_input), i);
  }
  IOSIntArray *coeffs = [IOSIntArray arrayWithLength:n];
  IOSIntArray *orthoIndices;
  if (orthoIndices_mutable == nil) orthoIndices = [IOSIntArray arrayWithLength:n];
  else orthoIndices = orthoIndices_mutable;
  IOSDoubleArray *xB;
  if (xB_mutable == nil) xB = [IOSDoubleArray arrayWithLength:n];
  else xB = xB_mutable;
  IOSObjectArray *B;
  if (B_mutable == nil) B = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ n, n }];
  else B = B_mutable;
  jdouble normX;
  IOSDoubleArray *ss;
  IOSObjectArray *H, *P, *newH;
  IOSObjectArray *D, *E, *A, *newAorB;
  IOSObjectArray *G;
  IOSObjectArray *R;
  jdouble gamma, deltaSq;
  for (jint i = 0; i < n; i++) {
    *IOSIntArray_GetRef(coeffs, i) = 0;
    *IOSIntArray_GetRef(nil_chk(orthoIndices), i) = 0;
  }
  if (n <= 1) return coeffs;
  for (jint i = 0; i < n; i++) {
    if (JavaLangDouble_isNaNWithDouble_(IOSDoubleArray_Get(x, i))) return coeffs;
  }
  normX = 0;
  for (jint i = 0; i < n; i++) {
    normX += IOSDoubleArray_Get(x, i) * IOSDoubleArray_Get(x, i);
  }
  normX = JavaLangMath_sqrtWithDouble_(normX);
  for (jint i = 0; i < n; i++) {
    *IOSDoubleArray_GetRef(x, i) = IOSDoubleArray_Get(x, i) / normX;
  }
  ss = [IOSDoubleArray arrayWithLength:n];
  *IOSDoubleArray_GetRef(ss, n - 1) = IOSDoubleArray_Get(x, n - 1) * IOSDoubleArray_Get(x, n - 1);
  for (jint i = n - 2; i >= 0; i--) {
    *IOSDoubleArray_GetRef(ss, i) = IOSDoubleArray_Get(ss, i + 1) + IOSDoubleArray_Get(x, i) * IOSDoubleArray_Get(x, i);
  }
  for (jint i = 0; i < n; i++) {
    *IOSDoubleArray_GetRef(ss, i) = JavaLangMath_sqrtWithDouble_(IOSDoubleArray_Get(ss, i));
  }
  IOSDoubleArray *Pss = [IOSDoubleArray arrayWithLength:n - 1];
  for (jint i = 0; i < n - 1; i++) {
    *IOSDoubleArray_GetRef(Pss, i) = IOSDoubleArray_Get(ss, i) * IOSDoubleArray_Get(ss, i + 1);
  }
  H = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ n, n - 1 }];
  for (jint i = 0; i < n; i++) {
    for (jint j = 0; j < i; j++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(H, i)), j) = -IOSDoubleArray_Get(x, i) * IOSDoubleArray_Get(x, j) / IOSDoubleArray_Get(Pss, j);
    }
    if (i < n - 1) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(H, i)), i) = IOSDoubleArray_Get(ss, i + 1) / IOSDoubleArray_Get(ss, i);
    for (jint j = i + 1; j < n - 1; j++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(H, i)), j) = 0;
    }
  }
  P = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ n, n }];
  for (jint i = 0; i < n; i++) for (jint j = 0; j < n; j++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(P, i)), j) = -IOSDoubleArray_Get(x, i) * IOSDoubleArray_Get(x, j);
  for (jint i = 0; i < n; i++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(P, i)), i) += 1;
  R = [IOSIntArray arrayWithDimensions:3 lengths:(jint[]){ n - 1, n, n }];
  for (jint j = 0; j < n - 1; j++) {
    for (jint i = 0; i < n; i++) for (jint k = 0; k < n; k++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, j)), i)), k) = 0;
    for (jint i = 0; i < n; i++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, j)), i)), i) = 1;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, j)), j)), j) = 0;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, j)), j)), j + 1) = 1;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, j)), j + 1)), j) = 1;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, j)), j + 1)), j + 1) = 0;
  }
  gamma = 1.5;
  deltaSq = 3.0 / 4 - (1.0 / gamma) / gamma;
  A = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ n, n }];
  for (jint i = 0; i < n; i++) for (jint j = 0; j < n; j++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(A, i)), j) = 0;
  for (jint i = 0; i < n; i++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(A, i)), i) = 1;
  for (jint i = 0; i < n; i++) for (jint j = 0; j < n; j++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(B), i)), j) = 0;
  for (jint i = 0; i < n; i++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(B), i)), i) = 1;
  jint itCount = 0;
  jdouble itBound = 2.0 * gamma / deltaSq * n * n * (n + 1) * JavaLangMath_logWithDouble_(JavaLangMath_sqrtWithDouble_(bound * bound * n) * n * n) / JavaLangMath_logWithDouble_(2);
  while (itCount < itBound) {
    jboolean solutionFound = NO;
    jboolean firstSolutionRecorded = NO;
    for (jint i = 0; i < n; i++) {
      *IOSDoubleArray_GetRef(nil_chk(xB), i) = 0;
      for (jint k = 0; k < n; k++) *IOSDoubleArray_GetRef(xB, i) += IOSDoubleArray_Get(x, k) * IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(B), k)), i);
      if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(xB, i), 0, AccuracyFactor / normX)) {
        solutionFound = YES;
        *IOSIntArray_GetRef(nil_chk(orthoIndices), i) = 1;
        if (!firstSolutionRecorded) {
          for (jint k = 0; k < n; k++) *IOSIntArray_GetRef(coeffs, k) = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(B), k)), i);
          firstSolutionRecorded = YES;
        }
      }
    }
    if (solutionFound) return coeffs;
    D = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ n, n }];
    IOSObjectArray *D0 = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ n, n }];
    for (jint i = 0; i < n; i++) {
      for (jint j = n - 1; j >= i + 1; j--) {
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(D, i)), j) = 0;
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(D0, i)), j) = 0;
      }
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(D, i)), i) = 1;
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(D0, i)), i) = 1;
      for (jint j = i - 1; j >= 0; j--) {
        jdouble sum = 0;
        jdouble sum0 = 0;
        for (jint k = j + 1; k <= i; k++) {
          sum += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(D, i)), k) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, k)), j);
          sum0 += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(D0, i)), k) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, k)), j);
        }
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(D, i)), j) = J2ObjCFpToInt(JavaLangMath_floorWithDouble_(-1.0 / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, j)), j) * sum + 0.5));
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(D0, i)), j) = -1.0 / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, j)), j) * sum0;
      }
    }
    E = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ n, n }];
    for (jint i = 0; i < n; i++) {
      for (jint j = n - 1; j >= i + 1; j--) {
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(E, i)), j) = 0;
      }
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(E, i)), i) = 1;
      for (jint j = i - 1; j >= 0; j--) {
        jint sum = 0;
        for (jint k = j + 1; k <= i; k++) sum += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(E, i)), k) * IOSIntArray_Get(nil_chk(IOSObjectArray_Get(D, k)), j);
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(E, i)), j) = -sum;
      }
    }
    newH = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ n, n - 1 }];
    IOSObjectArray *newH0 = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ n, n - 1 }];
    for (jint i = 0; i < n; i++) {
      for (jint j = 0; j < n - 1; j++) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(newH, i)), j) = 0;
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(newH0, i)), j) = 0;
        for (jint k = 0; k < n; k++) {
          *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(newH, i)), j) += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(D, i)), k) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, k)), j);
          *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(newH0, i)), j) += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(D0, i)), k) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, k)), j);
        }
      }
    }
    for (jint i = 0; i < n; i++) for (jint j = 0; j < n - 1; j++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(H, i)), j) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(newH, i)), j);
    jdouble gammaPow = 1;
    jdouble temp;
    jdouble max = 0;
    jint index = 0;
    for (jint j = 0; j < n - 1; j++) {
      gammaPow *= gamma;
      temp = gammaPow * JavaLangMath_absWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, j)), j));
      if (max < temp) {
        max = temp;
        index = j;
      }
    }
    G = [IOSDoubleArray arrayWithDimensions:3 lengths:(jint[]){ n - 1, n - 1, n - 1 }];
    for (jint i = 0; i < n - 1; i++) for (jint k = 0; k < n - 1; k++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, n - 2)), i)), k) = 0;
    for (jint i = 0; i < n - 1; i++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, n - 2)), i)), i) = 1;
    for (jint j = 0; j < n - 2; j++) {
      jdouble b = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, j + 1)), j);
      jdouble c = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, j + 1)), j + 1);
      jdouble d = JavaLangMath_sqrtWithDouble_(b * b + c * c);
      for (jint i = 0; i < n - 2; i++) for (jint k = 0; k < n - 2; k++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), i)), k) = 0;
      for (jint i = 0; i < j; i++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), i)), i) = 1;
      for (jint i = j + 2; i < n - 1; i++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), i)), i) = 1;
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), j)), j) = b / d;
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), j)), j + 1) = -c / d;
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), j + 1)), j) = -IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), j)), j + 1);
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), j + 1)), j + 1) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, j)), j)), j);
    }
    newH = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ n, n - 1 }];
    for (jint i = 0; i < n; i++) {
      for (jint j = 0; j < n - 1; j++) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(newH, i)), j) = 0;
        for (jint k = 0; k < n; k++) for (jint l = 0; l < n - 1; l++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(newH, i)), j) += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, index)), i)), k) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(H, k)), l) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(G, index)), l)), j);
      }
    }
    for (jint i = 0; i < n; i++) for (jint j = 0; j < n - 1; j++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(H, i)), j) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(newH, i)), j);
    newAorB = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ n, n }];
    for (jint i = 0; i < n; i++) {
      for (jint j = 0; j < n; j++) {
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(newAorB, i)), j) = 0;
        for (jint k = 0; k < n; k++) for (jint l = 0; l < n; l++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(newAorB, i)), j) += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, index)), i)), k) * IOSIntArray_Get(nil_chk(IOSObjectArray_Get(D, k)), l) * IOSIntArray_Get(nil_chk(IOSObjectArray_Get(A, l)), j);
      }
    }
    for (jint i = 0; i < n; i++) for (jint j = 0; j < n; j++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(A, i)), j) = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(newAorB, i)), j);
    for (jint i = 0; i < n; i++) {
      for (jint j = 0; j < n; j++) {
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(newAorB, i)), j) = 0;
        for (jint k = 0; k < n; k++) for (jint l = 0; l < n; l++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(newAorB, i)), j) += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(B), i)), k) * IOSIntArray_Get(nil_chk(IOSObjectArray_Get(E, k)), l) * IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(R, index)), l)), j);
      }
    }
    for (jint i = 0; i < n; i++) for (jint j = 0; j < n; j++) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(B), i)), j) = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(newAorB, i)), j);
    itCount++;
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoSurdText)

@implementation OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder

- (instancetype)initWithOrgGeogebraCommonKernelCasAlgoSurdText:(OrgGeogebraCommonKernelCasAlgoSurdText *)outer$
                                                       withInt:(jint)n
                                               withDoubleArray:(IOSDoubleArray *)x
                                                       withInt:(jint)fullScale_input
                                                       withInt:(jint)lessScale_input
                                                    withDouble:(jdouble)err
                                                    withDouble:(jdouble)bound {
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(self, outer$, n, x, fullScale_input, lessScale_input, err, bound);
  return self;
}

- (void)initialize_full {
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_xNorm_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_(lessScale1_));
  for (jint i = 0; i < n_; i++) {
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_xNorm_(self, [xNorm_ addWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(nil_chk(x_full_), i))) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(x_full_, i)]]);
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_xNorm_(self, [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(xNorm_)) sqrt]);
  for (jint i = 0; i < n_; i++) {
    IOSObjectArray_Set(nil_chk(x_full_), i, [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(x_full_, i))) divideWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:xNorm_]);
    IOSObjectArray_SetAndConsume(nil_chk(x_double_), i, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withJavaMathBigDecimal_(lessScale1_, IOSObjectArray_Get(x_full_, i)));
  }
  IOSObjectArray *ss = [IOSObjectArray arrayWithLength:n_ type:OrgGeogebraCommonUtilMyMathExact_MyDecimal_class_()];
  for (jint i = 0; i < n_; i++) {
    IOSObjectArray_SetAndConsume(ss, i, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_(fullScale1_));
  }
  IOSObjectArray_Set(ss, n_ - 1, [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(nil_chk(x_full_), n_ - 1))) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(x_full_, n_ - 1)]);
  for (jint i = n_ - 2; i >= 0; i--) {
    IOSObjectArray_Set(ss, i, [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(ss, i + 1))) addWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(x_full_, i))) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(x_full_, i)]]);
  }
  for (jint i = 0; i < n_; i++) {
    IOSObjectArray_Set(ss, i, [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(ss, i))) sqrt]);
  }
  IOSObjectArray *Pss = [IOSObjectArray arrayWithLength:n_ - 1 type:OrgGeogebraCommonUtilMyMathExact_MyDecimal_class_()];
  for (jint i = 0; i < n_ - 1; i++) {
    IOSObjectArray_SetAndConsume(Pss, i, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withJavaMathBigDecimal_(fullScale1_, [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(ss, i))) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(ss, i + 1)]));
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_H_full_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_(fullScale1_, n_, n_ - 1));
  for (jint i = 0; i < n_; i++) {
    for (jint j = 0; j < i; j++) {
      [H_full_ setEntryWithInt:i withInt:j withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(x_full_, i))) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(x_full_, j)])) divideWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(Pss, j)])) negate]];
    }
    if (i < n_ - 1) [H_full_ setEntryWithInt:i withInt:i withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(IOSObjectArray_Get(ss, i + 1))) divideWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(ss, i)]];
    for (jint j = i + 1; j < n_ - 1; j++) {
      [H_full_ setEntryWithInt:i withInt:j withOrgGeogebraCommonUtilMyMathExact_MyDecimal:ZERO_];
    }
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_H_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_(lessScale1_, n_, n_ - 1));
  for (jint i = 0; i < n_; i++) {
    for (jint j = 0; j < n_ - 1; j++) {
      [H_ setEntryWithInt:i withInt:j withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withJavaMathBigDecimal_(lessScale1_, [H_full_ getEntryWithInt:i withInt:j]) autorelease]];
    }
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_I_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_(lessScale1_, n_, n_));
  for (jint i = 0; i < n_; i++) {
    for (jint j = 0; j < n_; j++) {
      if (i == j) [I_ setEntryWithInt:i withInt:i withOrgGeogebraCommonUtilMyMathExact_MyDecimal:ONE_LESS_];
      else [I_ setEntryWithInt:i withInt:j withOrgGeogebraCommonUtilMyMathExact_MyDecimal:ZERO_LESS_];
    }
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_A_(self, [I_ copy__]);
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_B_(self, [I_ copy__]);
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_xB_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_(lessScale1_, 1, n_));
  for (jint i = 0; i < n_; i++) {
    [xB_ setEntryWithInt:0 withInt:i withOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(nil_chk(x_double_), i)];
  }
}

- (void)hermiteReduction {
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_hermiteReduction(self);
}

- (void)dealloc {
  RELEASE_(ZERO_);
  RELEASE_(ZERO_LESS_);
  RELEASE_(ONE_LESS_);
  RELEASE_(x_);
  RELEASE_(x_full_);
  RELEASE_(x_double_);
  RELEASE_(xNorm_);
  RELEASE_(H_full_);
  RELEASE_(H_);
  RELEASE_(I_);
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(D_);
  RELEASE_(xB_);
  RELEASE_(b_);
  RELEASE_(l_);
  RELEASE_(d_);
  RELEASE_(result_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelCasAlgoSurdText:withInt:withDoubleArray:withInt:withInt:withDouble:withDouble:", "IntRelationFinder", NULL, 0x0, NULL, NULL },
    { "initialize_full", NULL, "V", 0x0, NULL, NULL },
    { "hermiteReduction", NULL, "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "ZERO_LESS_", NULL, 0x0, "Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "ONE_LESS_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "tau_", NULL, 0x2, "D", NULL, NULL,  },
    { "rho_", NULL, 0x2, "D", NULL, NULL,  },
    { "gamma_", NULL, 0x2, "D", NULL, NULL,  },
    { "err_", NULL, 0x0, "D", NULL, NULL,  },
    { "M_", NULL, 0x2, "D", NULL, NULL,  },
    { "n_", NULL, 0x2, "I", NULL, NULL,  },
    { "x_", NULL, 0x2, "[D", NULL, NULL,  },
    { "x_full_", NULL, 0x2, "[Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "x_double_", NULL, 0x2, "[Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "fullScale1_", NULL, 0x2, "I", NULL, NULL,  },
    { "lessScale1_", NULL, 0x2, "I", NULL, NULL,  },
    { "xNorm_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "H_full_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "H_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "I_", NULL, 0x0, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "A_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "D_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "xB_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "b_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "l_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "d_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimal;", NULL, NULL,  },
    { "r_", NULL, 0x2, "I", NULL, NULL,  },
    { "result_", NULL, 0x0, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/cas/AlgoSurdText$IntRelationFinder$IntRelation;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.cas.AlgoSurdText$IntRelationFinder$IntRelation;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder = { 2, "IntRelationFinder", "org.geogebra.common.kernel.cas", "AlgoSurdText", 0x2, 3, methods, 27, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder;
}

@end

void OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *self, OrgGeogebraCommonKernelCasAlgoSurdText *outer$, jint n, IOSDoubleArray *x, jint fullScale_input, jint lessScale_input, jdouble err, jdouble bound) {
  NSObject_init(self);
  self->fullScale1_ = fullScale_input;
  self->lessScale1_ = lessScale_input;
  self->n_ = n;
  self->err_ = err;
  self->M_ = bound;
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_result_(self, new_JavaUtilArrayList_init());
  jint digitsNeeded = J2ObjCFpToInt(JavaLangMath_ceilWithDouble_(-JavaLangMath_log10WithDouble_(err)));
  self->lessScale1_ = digitsNeeded;
  self->fullScale1_ = digitsNeeded * n;
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_ZERO_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withJavaMathBigDecimal_(self->fullScale1_, JavaMathBigDecimal_get_ZERO_()));
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_ZERO_LESS_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withJavaMathBigDecimal_(self->lessScale1_, JavaMathBigDecimal_get_ZERO_()));
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_ONE_LESS_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withJavaMathBigDecimal_(self->lessScale1_, JavaMathBigDecimal_get_ONE_()));
  if (n < 1) {
    [self->result_ clear];
    return;
  }
  if (n == 1) {
    if (x == nil || IOSDoubleArray_Get(x, 0) >= err) {
      [self->result_ clear];
      return;
    }
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_B_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_(self->lessScale1_, 1, 1));
    [self->B_ setEntryWithInt:0 withInt:0 withOrgGeogebraCommonUtilMyMathExact_MyDecimal:self->ONE_LESS_];
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_xB_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_(self->lessScale1_, 1, 1));
    [self->xB_ setEntryWithInt:0 withInt:0 withOrgGeogebraCommonUtilMyMathExact_MyDecimal:self->ZERO_LESS_];
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *m = [new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(self, n, self->B_, self->xB_, 1) autorelease];
    [self->result_ addWithId:m];
    return;
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_x_(self, [IOSDoubleArray newArrayWithLength:n]);
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_x_full_(self, [IOSObjectArray newArrayWithLength:n type:OrgGeogebraCommonUtilMyMathExact_MyDecimal_class_()]);
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_x_double_(self, [IOSObjectArray newArrayWithLength:n type:OrgGeogebraCommonUtilMyMathExact_MyDecimal_class_()]);
  for (jint i = 0; i < n; i++) {
    *IOSDoubleArray_GetRef(self->x_, i) = IOSDoubleArray_Get(nil_chk(x), i);
    IOSObjectArray_SetAndConsume(self->x_full_, i, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withDouble_(self->fullScale1_, IOSDoubleArray_Get(x, i)));
  }
  self->rho_ = 2;
  self->tau_ = 1.5;
  self->gamma_ = 1 / JavaLangMath_sqrtWithDouble_(1 / self->tau_ / self->tau_ - 1 / self->rho_ / self->rho_);
  [self initialize_full];
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_b_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_(self->lessScale1_));
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_l_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_(self->lessScale1_));
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_setAndConsume_d_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_(self->lessScale1_));
  jboolean loopTillExhausted = YES;
  jint iterCount = 0;
  jdouble iterBound = n * (n + 1) / 2.0 * ((n - 1) * JavaLangMath_logWithDouble_(self->gamma_) + 0.5 * JavaLangMath_logWithDouble_(n) + JavaLangMath_logWithDouble_(self->M_)) / JavaLangMath_logWithDouble_(self->tau_);
  while (iterCount < iterBound) {
    jdouble gammaPow = 1.0;
    jdouble temp;
    jdouble max = 0;
    for (jint index = 0; index < n - 1; index++) {
      gammaPow *= self->gamma_;
      temp = gammaPow * [((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->H_)) getEntryWithInt:index withInt:index])) abs])) doubleValue];
      if (max < temp) {
        max = temp;
        self->r_ = index;
      }
    }
    if (self->r_ < n - 2) {
      [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->H_)) getEntryWithInt:self->r_ withInt:self->r_];
      OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_b_(self, [self->H_ getEntryWithInt:self->r_ + 1 withInt:self->r_]);
      OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_l_(self, [self->H_ getEntryWithInt:self->r_ + 1 withInt:self->r_ + 1]);
      OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_d_(self, [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(self->b_)) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:self->b_])) addWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(self->l_)) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:self->l_]])) sqrt]);
    }
    OrgGeogebraCommonUtilMyMathExact_MyDecimal *temp2 = [new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithOrgGeogebraCommonUtilMyMathExact_MyDecimal_([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->xB_)) getEntryWithInt:0 withInt:self->r_]) autorelease];
    [self->xB_ setEntryWithInt:0 withInt:self->r_ withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[self->xB_ getEntryWithInt:0 withInt:self->r_ + 1]];
    [self->xB_ setEntryWithInt:0 withInt:self->r_ + 1 withOrgGeogebraCommonUtilMyMathExact_MyDecimal:temp2];
    IOSObjectArray *temp3 = [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->H_)) getRowWithInt:self->r_];
    [self->H_ setRowWithInt:self->r_ withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:[self->H_ getRowWithInt:self->r_ + 1]];
    [self->H_ setRowWithInt:self->r_ + 1 withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:temp3];
    temp3 = [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->A_)) getRowWithInt:self->r_];
    [self->A_ setRowWithInt:self->r_ withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:[self->A_ getRowWithInt:self->r_ + 1]];
    [self->A_ setRowWithInt:self->r_ + 1 withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:temp3];
    temp3 = [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->B_)) getColumnWithInt:self->r_];
    [self->B_ setColumnWithInt:self->r_ withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:[self->B_ getColumnWithInt:self->r_ + 1]];
    [self->B_ setColumnWithInt:self->r_ + 1 withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:temp3];
    IOSObjectArray *temp4;
    if (self->r_ < n - 2) {
      temp3 = [self->H_ getColumnWithInt:self->r_];
      temp4 = [self->H_ getColumnWithInt:self->r_ + 1];
      for (jint i = self->r_; i < n; i++) {
        [self->H_ setEntryWithInt:i withInt:self->r_ withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(self->b_)) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(nil_chk(temp3), i)])) addWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk(self->l_)) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(nil_chk(temp4), i)]])) divideWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:self->d_]];
        [self->H_ setEntryWithInt:i withInt:self->r_ + 1 withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->l_ negate])) multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(temp3, i)])) addWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[self->b_ multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:IOSObjectArray_Get(temp4, i)]])) divideWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:self->d_]];
      }
    }
    jboolean relationExhausted = NO;
    for (jint j = 0; j < n - 1; j++) {
      if ([((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->H_ getEntryWithInt:j withInt:j])) abs])) doubleValue] < JavaLangMath_powWithDouble_withDouble_(10, -JavaLangMath_minWithInt_withInt_([self->H_ getScale], 5))) {
        relationExhausted = YES;
        OrgGeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$I$I$I", @"relation pre-Exhausted at iteration ", iterCount, @"with r = ", j, @"where n-1 = ", (n - 1)));
      }
    }
    if (!relationExhausted) OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_hermiteReduction(self);
    jboolean relationFound = NO;
    relationExhausted = NO;
    for (jint j = 0; j < n - 1; j++) {
      if ([((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->H_ getEntryWithInt:j withInt:j])) abs])) doubleValue] < JavaLangMath_powWithDouble_withDouble_(10, -JavaLangMath_minWithInt_withInt_([self->H_ getScale], 5))) {
        relationExhausted = YES;
        OrgGeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$I$I$I", @"relation Exhausted at iteration ", iterCount, @"with r = ", j, @"where n-1 = ", (n - 1)));
      }
    }
    for (jint j = 0; j < n; j++) {
      jdouble sumBCol = 0;
      jdouble maxxB = 0;
      for (jint i = 0; i < n; i++) {
        sumBCol += [((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->B_ getEntryWithInt:i withInt:j])) abs])) doubleValue];
        maxxB = JavaLangMath_maxWithDouble_withDouble_(maxxB, [((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->xB_ getEntryWithInt:0 withInt:i])) abs])) doubleValue]);
      }
      if ([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->xB_ getEntryWithInt:0 withInt:j])) signum] == 0 || [((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->xB_ getEntryWithInt:0 withInt:j])) abs])) doubleValue] < sumBCol * err) {
        relationFound = YES;
        OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *m = [new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(self, n, self->B_, self->xB_, err / maxxB) autorelease];
        [self->result_ addWithId:m];
        break;
      }
    }
    if ((relationFound && !loopTillExhausted) || relationExhausted) break;
    iterCount++;
  }
}

OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText *outer$, jint n, IOSDoubleArray *x, jint fullScale_input, jint lessScale_input, jdouble err, jdouble bound) {
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *self = [OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder alloc];
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withInt_withDoubleArray_withInt_withInt_withDouble_withDouble_(self, outer$, n, x, fullScale_input, lessScale_input, err, bound);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_hermiteReduction(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *self) {
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_set_D_(self, [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->I_)) copy__]);
  for (jint i = 1; i < self->n_; i++) {
    for (jint j = i - 1; j >= 0; j--) {
      OrgGeogebraCommonUtilMyMathExact_MyDecimal *q = [new_OrgGeogebraCommonUtilMyMathExact_MyDecimal_initWithInt_withDouble_(self->lessScale1_, JavaLangMath_rintWithDouble_([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->H_)) getEntryWithInt:i withInt:j])) doubleValue] / [((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->H_ getEntryWithInt:j withInt:j])) doubleValue])) autorelease];
      for (jint k = 0; k <= j; k++) {
        [self->H_ setEntryWithInt:i withInt:k withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([self->H_ getEntryWithInt:i withInt:k])) subtractWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[q multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[self->H_ getEntryWithInt:j withInt:k]]]];
      }
      for (jint k = 0; k < self->n_; k++) {
        [self->D_ setEntryWithInt:i withInt:k withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->D_)) getEntryWithInt:i withInt:k])) subtractWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[q multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[self->D_ getEntryWithInt:j withInt:k]]]];
        [self->A_ setEntryWithInt:i withInt:k withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->A_)) getEntryWithInt:i withInt:k])) subtractWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[q multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[self->A_ getEntryWithInt:j withInt:k]]]];
        [self->B_ setEntryWithInt:k withInt:j withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->B_)) getEntryWithInt:k withInt:j])) addWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[q multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[self->B_ getEntryWithInt:k withInt:i]]]];
      }
      [self->xB_ setEntryWithInt:0 withInt:j withOrgGeogebraCommonUtilMyMathExact_MyDecimal:[((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->xB_)) getEntryWithInt:0 withInt:j])) addWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[q multiplyWithOrgGeogebraCommonUtilMyMathExact_MyDecimal:[self->xB_ getEntryWithInt:0 withInt:i]]]];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder)

@implementation OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation

- (instancetype)initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder:(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *)outer$
                                                                         withInt:(jint)n
                            withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:(OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)B
                            withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:(OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)xB
                                                                      withDouble:(jdouble)sig {
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(self, outer$, n, B, xB, sig);
  return self;
}

- (OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)getBMatrix {
  return [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(B1_)) copy__];
}

- (OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)getBSolMatrix {
  if (B_sol_ != nil) {
    return [B_sol_ copy__];
  }
  return nil;
}

- (OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *)getBRestMatrix {
  if (B_rest_ != nil) {
    return [B_rest_ copy__];
  }
  return nil;
}

- (jint)compareToWithId:(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *)m2 {
  check_class_cast(m2, [OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation class]);
  if (self->size_ != ((OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *) nil_chk(m2))->size_) {
    return -100 * (self->size_ - m2->size_);
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(self->sig_, m2->sig_, 10E-7)) {
    return 1;
  }
  else if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(m2->sig_, self->sig_, 10E-7)) {
    return -1;
  }
  return 0;
}

- (void)dealloc {
  RELEASE_(B1_);
  RELEASE_(B_sol_);
  RELEASE_(B_rest_);
  RELEASE_(xB1_);
  RELEASE_(orthoIndices_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder:withInt:withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix:withDouble:", "IntRelation", NULL, 0x1, NULL, NULL },
    { "getBMatrix", NULL, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", 0x1, NULL, NULL },
    { "getBSolMatrix", NULL, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", 0x1, NULL, NULL },
    { "getBRestMatrix", NULL, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "size_", NULL, 0x2, "I", NULL, NULL,  },
    { "sig_", NULL, 0x0, "D", NULL, NULL,  },
    { "nilDim_", NULL, 0x2, "I", NULL, NULL,  },
    { "B1_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "B_sol_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "B_rest_", NULL, 0x2, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "xB1_", NULL, 0x0, "Lorg.geogebra.common.util.MyMathExact$MyDecimalMatrix;", NULL, NULL,  },
    { "orthoIndices_", NULL, 0x0, "[I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation = { 2, "IntRelation", "org.geogebra.common.kernel.cas", "AlgoSurdText$IntRelationFinder", 0x2, 5, methods, 8, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/geogebra/common/kernel/cas/AlgoSurdText$IntRelationFinder$IntRelation;>;" };
  return &_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation;
}

@end

void OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *self, OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *outer$, jint n, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *B, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *xB, jdouble sig) {
  NSObject_init(self);
  if (n == 0) return;
  self->size_ = n;
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_set_B1_(self, [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(B)) copy__]);
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_set_xB1_(self, [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(xB)) copy__]);
  self->sig_ = sig;
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_setAndConsume_orthoIndices_(self, [IOSIntArray newArrayWithLength:n]);
  self->nilDim_ = 0;
  for (jint j = 0; j < n; j++) {
    jdouble sumBCol = 0;
    jdouble maxxB = 0;
    for (jint i = 0; i < n; i++) {
      sumBCol += [((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([B getEntryWithInt:i withInt:j])) abs])) doubleValue];
      maxxB = JavaLangMath_maxWithDouble_withDouble_(maxxB, [((JavaMathBigDecimal *) nil_chk([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([xB getEntryWithInt:0 withInt:i])) abs])) doubleValue]);
    }
    if ([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([xB getEntryWithInt:0 withInt:j])) isEqual:outer$->ZERO_LESS_] || JavaLangMath_absWithDouble_([((OrgGeogebraCommonUtilMyMathExact_MyDecimal *) nil_chk([xB getEntryWithInt:0 withInt:j])) doubleValue]) < sumBCol * outer$->err_) {
      *IOSIntArray_GetRef(self->orthoIndices_, j) = 1;
      self->nilDim_++;
    }
    else {
      *IOSIntArray_GetRef(self->orthoIndices_, j) = 0;
    }
  }
  if (self->nilDim_ > 0) {
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_setAndConsume_B_sol_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_([B getScale], self->size_, self->nilDim_));
  }
  else {
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_set_B_sol_(self, nil);
  }
  if (self->nilDim_ < self->size_) {
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_setAndConsume_B_rest_(self, new_OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_initWithInt_withInt_withInt_([B getScale], self->size_, self->size_ - self->nilDim_));
  }
  else {
    OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_set_B_rest_(self, nil);
  }
  jint is, ir;
  is = ir = 0;
  for (jint j = 0; j < n; j++) {
    if (IOSIntArray_Get(self->orthoIndices_, j) == 1) {
      [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->B_sol_)) setColumnWithInt:is++ withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:[B getColumnWithInt:j]];
    }
    else {
      [((OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *) nil_chk(self->B_rest_)) setColumnWithInt:ir++ withOrgGeogebraCommonUtilMyMathExact_MyDecimalArray:[B getColumnWithInt:j]];
    }
  }
}

OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *new_OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder *outer$, jint n, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *B, OrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix *xB, jdouble sig) {
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation *self = [OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation alloc];
  OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation_initWithOrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_withInt_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withOrgGeogebraCommonUtilMyMathExact_MyDecimalMatrix_withDouble_(self, outer$, n, B, xB, sig);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoSurdText_IntRelationFinder_IntRelation)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum)

OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_values_[9];

@implementation OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_values() {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_values_ count:9 type:OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_values();
}

+ (OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initialize();
  for (int i = 0; i < 9; i++) {
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *e = OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum class]) {
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_RATIONAL_NUMBER = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"RATIONAL_NUMBER", 0);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_LINEAR_COMBINATION = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"LINEAR_COMBINATION", 1);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_RATIONAL_COMBINATION = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"RATIONAL_COMBINATION", 2);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_POWER_PRODUCT = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"POWER_PRODUCT", 3);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_QUADRATIC_RADICAL = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"QUADRATIC_RADICAL", 4);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_RATIONAL_NUMBER = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"FUNCTION_OF_RATIONAL_NUMBER", 5);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_LINEAR_COMBINATION = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"FUNCTION_OF_LINEAR_COMBINATION", 6);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_POWER_PRODUCT = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"FUNCTION_OF_POWER_PRODUCT", 7);
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_QUADRATIC_RADICAL = new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(@"FUNCTION_OF_QUADRATIC_RADICAL", 8);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "RATIONAL_NUMBER", "RATIONAL_NUMBER", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_RATIONAL_NUMBER, NULL,  },
    { "LINEAR_COMBINATION", "LINEAR_COMBINATION", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_LINEAR_COMBINATION, NULL,  },
    { "RATIONAL_COMBINATION", "RATIONAL_COMBINATION", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_RATIONAL_COMBINATION, NULL,  },
    { "POWER_PRODUCT", "POWER_PRODUCT", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_POWER_PRODUCT, NULL,  },
    { "QUADRATIC_RADICAL", "QUADRATIC_RADICAL", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_QUADRATIC_RADICAL, NULL,  },
    { "FUNCTION_OF_RATIONAL_NUMBER", "FUNCTION_OF_RATIONAL_NUMBER", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_RATIONAL_NUMBER, NULL,  },
    { "FUNCTION_OF_LINEAR_COMBINATION", "FUNCTION_OF_LINEAR_COMBINATION", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_LINEAR_COMBINATION, NULL,  },
    { "FUNCTION_OF_POWER_PRODUCT", "FUNCTION_OF_POWER_PRODUCT", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_POWER_PRODUCT, NULL,  },
    { "FUNCTION_OF_QUADRATIC_RADICAL", "FUNCTION_OF_QUADRATIC_RADICAL", 0x4019, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", &OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_FUNCTION_OF_QUADRATIC_RADICAL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum = { 2, "AlgebraicFittingType", "org.geogebra.common.kernel.cas", "AlgoSurdText", 0x4019, 0, NULL, 9, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/cas/AlgoSurdText$AlgebraicFittingType;>;" };
  return &_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum;
}

@end

void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *self = [OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum alloc];
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum)

@implementation OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit

- (instancetype)initWithOrgGeogebraCommonKernelCasAlgoSurdText:(OrgGeogebraCommonKernelCasAlgoSurdText *)outer$
                                             withNSStringArray:(IOSObjectArray *)constStrings
                                               withDoubleArray:(IOSDoubleArray *)constValues
withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum:(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *)aft
                     withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(self, outer$, constStrings, constValues, aft, tpl);
  return self;
}

- (void)computeWithDouble:(jdouble)number {
  switch ([aft_ ordinal]) {
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_RATIONAL_NUMBER:
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeRationalNumberWithDouble_(self, number);
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_LINEAR_COMBINATION:
    [self computeConstantWithDouble:number];
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_RATIONAL_COMBINATION:
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_POWER_PRODUCT:
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_QUADRATIC_RADICAL:
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeQuadraticWithDouble_(self, number);
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_FUNCTION_OF_RATIONAL_NUMBER:
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_FUNCTION_OF_LINEAR_COMBINATION:
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_FUNCTION_OF_POWER_PRODUCT:
    return;
    case OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingType_FUNCTION_OF_QUADRATIC_RADICAL:
    return;
  }
}

- (void)computeQuadraticWithDouble:(jdouble)number {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeQuadraticWithDouble_(self, number);
}

- (void)computeRationalNumberWithDouble:(jdouble)number {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeRationalNumberWithDouble_(self, number);
}

- (void)computeConstantWithDouble:(jdouble)number {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_numList_(self, [IOSDoubleArray newArrayWithLength:numOfConsts_ + 2]);
  for (jint j = 0; j < numOfConsts_; j++) {
    *IOSDoubleArray_GetRef(numList_, j) = IOSDoubleArray_Get(nil_chk(constValues_), j);
  }
  *IOSDoubleArray_GetRef(numList_, numOfConsts_) = 1.0;
  *IOSDoubleArray_GetRef(numList_, numOfConsts_ + 1) = number;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_set_coeffs_(self, [this$0_ mPSLQWithInt:numOfConsts_ + 2 withDoubleArray:numList_ withDouble:err_ withInt:coeffBound_]);
  if (coeffs_ == nil) {
    return;
  }
  s_ = ((IOSIntArray *) nil_chk(IOSObjectArray_Get(nil_chk(coeffs_), 0)))->size_;
  jint numOfRadicalsUsed = 0;
  jint numOfOthersUsed = 0;
  for (jint j = 0; j < s_; j++) {
    for (jint i = 0; i < numOfRadicals_; i++) if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(coeffs_, i)), j) != 0) numOfRadicalsUsed++;
    for (jint i = numOfRadicals_; i < numOfConsts_; i++) if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(coeffs_, i)), j) != 0) numOfOthersUsed++;
    numOfConstsUsed_ = numOfRadicalsUsed + numOfOthersUsed;
    isOneUsed_ = (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(coeffs_, numOfConsts_)), j) == 1);
    maxCoeff_ = 0;
    sumCoeffs_ = 0;
    for (jint i = 0; i < numOfConsts_ + 1; i++) {
      sumCoeffs_ += JavaLangMath_absWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(coeffs_, i)), j));
      maxCoeff_ = JavaLangMath_maxWithInt_withInt_(maxCoeff_, JavaLangMath_absWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(coeffs_, i)), j)));
    }
  }
  numOfPenalties_ = 7;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_penalties_(self, [IOSIntArray newArrayWithDimensions:2 lengths:(jint[]){ numOfPenalties_, s_ }]);
  for (jint j = 0; j < s_; j++) {
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(penalties_, 0)), j) = (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(coeffs_, numOfConsts_ + 1)), j) == 0) ? 1 : 0;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(penalties_, 1)), j) = (maxCoeff_ > coeffBound_) ? 1 : 0;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(penalties_, 2)), j) = numOfOthersUsed > 0 ? 1 : 0;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(penalties_, 3)), j) = numOfConstsUsed_;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(penalties_, 4)), j) = JavaLangMath_minWithInt_withInt_(sumCoeffs_, coeffBound_ + 1);
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(penalties_, 5)), j) = isOneUsed_ ? 1 : 0;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(penalties_, 6)), j) = -j;
  }
  bestIndex_ = OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_leastPenaltyIndex(self);
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_bestRelation_(self, [IOSIntArray newArrayWithLength:numOfConsts_ + 2]);
  for (jint i = 0; i < numOfConsts_ + 2; i++) {
    *IOSIntArray_GetRef(bestRelation_, i) = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(coeffs_, i)), bestIndex_);
  }
  if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(penalties_, 0)), bestIndex_) == 1 || IOSIntArray_Get(nil_chk(IOSObjectArray_Get(penalties_, 1)), bestIndex_) == 1) {
    bestIndex_ = -1;
    [((JavaLangStringBuilder *) nil_chk(formalSolution_)) setLengthWithInt:0];
    return;
  }
  [((JavaLangStringBuilder *) nil_chk(formalSolution_)) appendWithNSString:@"("];
  [this$0_ appendCombinationWithJavaLangStringBuilder:formalSolution_ withInt:numOfConsts_ withNSStringArray:constStrings_ withIntArray:bestRelation_ withInt:0 withInt:1 withOrgGeogebraCommonKernelStringTemplate:tpl_];
  [formalSolution_ appendWithNSString:@"+"];
  [formalSolution_ appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(this$0_->kernel_)) formatWithDouble:IOSIntArray_Get(bestRelation_, numOfConsts_) withOrgGeogebraCommonKernelStringTemplate:tpl_]];
  [formalSolution_ appendWithNSString:@")/("];
  [formalSolution_ appendWithNSString:[this$0_->kernel_ formatWithDouble:-IOSIntArray_Get(bestRelation_, numOfConsts_ + 1) withOrgGeogebraCommonKernelStringTemplate:tpl_]];
  [formalSolution_ appendWithNSString:@")"];
  return;
}

- (jint)leastPenaltyIndex {
  return OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_leastPenaltyIndex(self);
}

- (void)setCoeffBoundWithInt:(jint)b {
  coeffBound_ = b;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(constValues_);
  RELEASE_(constStrings_);
  RELEASE_(aft_);
  RELEASE_(tpl_);
  RELEASE_(numList_);
  RELEASE_(coeffs_);
  RELEASE_(penalties_);
  RELEASE_(bestRelation_);
  RELEASE_(formalSolution_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelCasAlgoSurdText:withNSStringArray:withDoubleArray:withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum:withOrgGeogebraCommonKernelStringTemplate:", "AlgebraicFit", NULL, 0x1, NULL, NULL },
    { "computeWithDouble:", "compute", "V", 0x1, NULL, NULL },
    { "computeQuadraticWithDouble:", "computeQuadratic", "V", 0x2, NULL, NULL },
    { "computeRationalNumberWithDouble:", "computeRationalNumber", "V", 0x2, NULL, NULL },
    { "computeConstantWithDouble:", "computeConstant", "V", 0x1, NULL, NULL },
    { "leastPenaltyIndex", NULL, "I", 0x2, NULL, NULL },
    { "setCoeffBoundWithInt:", "setCoeffBound", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.cas.AlgoSurdText;", NULL, NULL,  },
    { "num1_", NULL, 0x2, "D", NULL, NULL,  },
    { "numOfConsts_", NULL, 0x2, "I", NULL, NULL,  },
    { "numOfRadicals_", NULL, 0x2, "I", NULL, NULL,  },
    { "constValues_", NULL, 0x2, "[D", NULL, NULL,  },
    { "constStrings_", NULL, 0x2, "[Ljava.lang.String;", NULL, NULL,  },
    { "coeffBound_", NULL, 0x2, "I", NULL, NULL,  },
    { "err_", NULL, 0x2, "D", NULL, NULL,  },
    { "aft_", NULL, 0x2, "Lorg.geogebra.common.kernel.cas.AlgoSurdText$AlgebraicFittingType;", NULL, NULL,  },
    { "tpl_", NULL, 0x2, "Lorg.geogebra.common.kernel.StringTemplate;", NULL, NULL,  },
    { "numList_", NULL, 0x2, "[D", NULL, NULL,  },
    { "coeffs_", NULL, 0x2, "[[I", NULL, NULL,  },
    { "s_", NULL, 0x2, "I", NULL, NULL,  },
    { "numOfPenalties_", NULL, 0x2, "I", NULL, NULL,  },
    { "penalties_", NULL, 0x2, "[[I", NULL, NULL,  },
    { "numOfConstsUsed_", NULL, 0x2, "I", NULL, NULL,  },
    { "maxCoeff_", NULL, 0x2, "I", NULL, NULL,  },
    { "sumCoeffs_", NULL, 0x2, "I", NULL, NULL,  },
    { "isOneUsed_", NULL, 0x2, "Z", NULL, NULL,  },
    { "bestIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "bestRelation_", NULL, 0x2, "[I", NULL, NULL,  },
    { "formalSolution_", NULL, 0x1, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit = { 2, "AlgebraicFit", "org.geogebra.common.kernel.cas", "AlgoSurdText", 0x2, 7, methods, 22, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit;
}

@end

void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self, OrgGeogebraCommonKernelCasAlgoSurdText *outer$, IOSObjectArray *constStrings, IOSDoubleArray *constValues, OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *aft, OrgGeogebraCommonKernelStringTemplate *tpl) {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_set_this$0_(self, outer$);
  NSObject_init(self);
  self->numOfConsts_ = constValues == nil ? 0 : constValues->size_;
  self->numOfRadicals_ = self->numOfConsts_;
  if (constValues != nil) {
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_constValues_(self, [IOSDoubleArray newArrayWithLength:constValues->size_]);
    for (jint i = 0; i < constValues->size_; i++) {
      *IOSDoubleArray_GetRef(self->constValues_, i) = IOSDoubleArray_Get(constValues, i);
    }
  }
  if (constStrings != nil) {
    OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_constStrings_(self, [IOSObjectArray newArrayWithLength:constStrings->size_ type:NSString_class_()]);
    for (jint i = 0; i < constStrings->size_; i++) {
      IOSObjectArray_Set(self->constStrings_, i, IOSObjectArray_Get(constStrings, i));
    }
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_set_aft_(self, aft);
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_set_tpl_(self, tpl);
  [outer$ getKernel];
  [outer$ getKernel];
  self->err_ = JavaLangMath_minWithDouble_withDouble_(OrgGeogebraCommonKernelKernel_MAX_PRECISION, OrgGeogebraCommonKernelKernel_STANDARD_PRECISION);
  self->coeffBound_ = 100;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_formalSolution_(self, new_JavaLangStringBuilder_init());
  [self->formalSolution_ setLengthWithInt:0];
}

OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *new_OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonKernelCasAlgoSurdText *outer$, IOSObjectArray *constStrings, IOSDoubleArray *constValues, OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum *aft, OrgGeogebraCommonKernelStringTemplate *tpl) {
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self = [OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit alloc];
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_initWithOrgGeogebraCommonKernelCasAlgoSurdText_withNSStringArray_withDoubleArray_withOrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFittingTypeEnum_withOrgGeogebraCommonKernelStringTemplate_(self, outer$, constStrings, constValues, aft, tpl);
  return self;
}

void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeQuadraticWithDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self, jdouble number) {
  self->num1_ = number;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_numList_(self, [IOSDoubleArray newArrayWithLength:(1 + self->numOfConsts_) * 3]);
  jdouble temp;
  for (jint j = 0; j < self->numOfConsts_; j++) {
    temp = IOSDoubleArray_Get(nil_chk(self->constValues_), j);
    for (jint i = 0; i < 3; i++) {
      *IOSDoubleArray_GetRef(self->numList_, j * 3 + i) = temp;
      temp *= self->num1_;
    }
  }
  temp = 1.0;
  for (jint i = 0; i < 3; i++) {
    *IOSDoubleArray_GetRef(self->numList_, self->numOfConsts_ * 3 + i) = temp;
    temp *= self->num1_;
  }
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_set_coeffs_(self, [self->this$0_ mPSLQWithInt:(self->numOfConsts_ + 1) * 3 withDoubleArray:self->numList_ withDouble:self->err_ withInt:self->coeffBound_]);
  if (self->coeffs_ == nil || ((IOSIntArray *) nil_chk(IOSObjectArray_Get(self->coeffs_, 0)))->size_ == 0) {
    return;
  }
  self->s_ = ((IOSIntArray *) nil_chk(IOSObjectArray_Get(nil_chk(self->coeffs_), 0)))->size_;
  IOSObjectArray *termCount = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ self->numOfConsts_ + 1, self->s_ }];
  IOSObjectArray *termMax = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ self->numOfConsts_ + 1, self->s_ }];
  IOSObjectArray *w = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ 4, self->s_ }];
  self->numOfPenalties_ = 7;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_penalties_(self, [IOSIntArray newArrayWithDimensions:2 lengths:(jint[]){ self->numOfPenalties_, self->s_ }]);
  for (jint j = 0; j < self->s_; j++) {
    for (jint i = 0; i < self->numOfPenalties_; i++) {
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, i)), j) = 0;
    }
    for (jint a = 0; a < self->numOfConsts_ + 1; a++) {
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(termCount, a)), j) = 0;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(termMax, a)), j) = 0;
      for (jint b = 0; b < 3; b++) {
        if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, a * 3 + b)), j) != 0) {
          (*IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(termCount, a)), j))++;
        }
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(termMax, a)), j) = JavaLangMath_maxWithInt_withInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(termMax, a)), j), JavaLangMath_absWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, a * 3 + b)), j)));
      }
    }
    IOSIntArray *wj = [IOSIntArray arrayWithLength:(self->numOfConsts_ + 1) * 3];
    for (jint i = 0; i < wj->size_; i++) {
      *IOSIntArray_GetRef(wj, i) = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, i)), j);
    }
    for (jint b = 0; b < 3; b++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(w, b)), j) = OrgGeogebraCommonKernelCasAlgoSurdText_evaluateCombinationWithInt_withDoubleArray_withIntArray_withInt_withInt_(self->numOfConsts_, self->constValues_, wj, b, 3) + IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, self->numOfConsts_ * 3 + b)), j);
    }
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(w, 3)), j) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 1)), j) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 1)), j) - 4 * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 0)), j) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 2)), j);
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 2)), j))) {
      if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 1)), j))) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 10000;
      else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(JavaLangMath_absWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 1)), j)), 1.0)) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 0;
      else *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 1;
    }
    else {
      if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(JavaLangMath_absWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 2)), j)), 0.5)) {
        if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 3)), j))) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 0;
        else if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 1)), j))) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 2;
        else *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 4;
      }
      else {
        if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 3)), j))) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 1;
        else if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(w, 1)), j))) *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 3;
        else *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 3)), j) = 5;
      }
    }
    for (jint a = 0; a < self->numOfConsts_ + 1; a++) {
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 0)), j) += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(termMax, a)), j) > self->coeffBound_ ? 1 : 0;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 1)), j) += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(termCount, a)), j) > 0 ? 1 : 0;
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 2)), j) = JavaLangMath_maxWithInt_withInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->penalties_, 2)), j), IOSIntArray_Get(nil_chk(IOSObjectArray_Get(termCount, a)), j));
      if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(termMax, a)), j) >= 100) {
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 4)), j) += 100;
      }
      else {
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 4)), j) += IOSIntArray_Get(nil_chk(IOSObjectArray_Get(termMax, a)), j);
      }
    }
    jboolean isOneUsed1 = NO;
    for (jint b = 0; b < 3; b++) {
      isOneUsed1 = (isOneUsed1 || IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, self->numOfConsts_ * 3 + b)), j) != 0);
    }
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 5)), j) = isOneUsed1 ? 1 : 0;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 6)), j) = -j;
  }
  self->bestIndex_ = OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_leastPenaltyIndex(self);
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_bestRelation_(self, [IOSIntArray newArrayWithLength:(1 + self->numOfConsts_) * 3]);
  for (jint a = 0; a < (1 + self->numOfConsts_) * 3; a++) {
    *IOSIntArray_GetRef(self->bestRelation_, a) = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, a)), self->bestIndex_);
  }
  if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->penalties_, 0)), self->bestIndex_) >= 1) {
    self->bestIndex_ = -1;
    [((JavaLangStringBuilder *) nil_chk(self->formalSolution_)) setLengthWithInt:0];
    return;
  }
  jboolean isAZero = YES;
  jboolean isARational = YES;
  jboolean isBZero = YES;
  jboolean isBRational = YES;
  jboolean isCZero = YES;
  jboolean isCRational = YES;
  if (IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3) != 0) {
    isAZero = NO;
  }
  if (IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3 + 1) != 0) {
    isBZero = NO;
  }
  if (IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3 + 2) != 0) {
    isCZero = NO;
  }
  for (jint j = 0; j < self->numOfConsts_; j++) {
    if (IOSIntArray_Get(self->bestRelation_, j * 3) != 0) {
      isAZero = NO;
      isARational = NO;
    }
    if (IOSIntArray_Get(self->bestRelation_, j * 3 + 1) != 0) {
      isBZero = NO;
      isBRational = NO;
    }
    if (IOSIntArray_Get(self->bestRelation_, j * 3 + 2) != 0) {
      isCZero = NO;
      isCRational = NO;
    }
  }
  if (isAZero && isBZero && isCZero) {
    [((JavaLangStringBuilder *) nil_chk(self->formalSolution_)) setLengthWithInt:0];
  }
  else if (isCZero) {
    if (isBZero) {
      [((JavaLangStringBuilder *) nil_chk(self->formalSolution_)) setLengthWithInt:0];
    }
    else {
      JavaLangStringBuilder *AString = [new_JavaLangStringBuilder_init() autorelease];
      JavaLangStringBuilder *BString = [new_JavaLangStringBuilder_init() autorelease];
      [AString appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(self->this$0_->kernel_)) formatWithDouble:IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3) withOrgGeogebraCommonKernelStringTemplate:self->tpl_]];
      if (!isARational) {
        [AString appendWithNSString:@"+"];
        [self->this$0_ appendCombinationWithJavaLangStringBuilder:AString withInt:self->numOfConsts_ withNSStringArray:self->constStrings_ withIntArray:self->bestRelation_ withInt:0 withInt:3 withOrgGeogebraCommonKernelStringTemplate:self->tpl_];
      }
      [BString appendWithNSString:[self->this$0_->kernel_ formatWithDouble:IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3 + 1) withOrgGeogebraCommonKernelStringTemplate:self->tpl_]];
      if (!isBRational) {
        [BString appendWithNSString:@"+"];
        [self->this$0_ appendCombinationWithJavaLangStringBuilder:BString withInt:self->numOfConsts_ withNSStringArray:self->constStrings_ withIntArray:self->bestRelation_ withInt:1 withInt:3 withOrgGeogebraCommonKernelStringTemplate:self->tpl_];
      }
      [((JavaLangStringBuilder *) nil_chk(self->formalSolution_)) appendWithNSString:@"-("];
      [self->formalSolution_ appendWithNSString:[AString description]];
      [self->formalSolution_ appendWithNSString:@")/("];
      [self->formalSolution_ appendWithNSString:[BString description]];
      [self->formalSolution_ appendWithNSString:@")"];
    }
  }
  else {
    jdouble Avalue = IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3) + OrgGeogebraCommonKernelCasAlgoSurdText_evaluateCombinationWithInt_withDoubleArray_withIntArray_withInt_withInt_(self->numOfConsts_, self->constValues_, self->bestRelation_, 0, 3);
    jdouble Bvalue = IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3 + 1) + OrgGeogebraCommonKernelCasAlgoSurdText_evaluateCombinationWithInt_withDoubleArray_withIntArray_withInt_withInt_(self->numOfConsts_, self->constValues_, self->bestRelation_, 1, 3);
    jdouble Cvalue = IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3 + 2) + OrgGeogebraCommonKernelCasAlgoSurdText_evaluateCombinationWithInt_withDoubleArray_withIntArray_withInt_withInt_(self->numOfConsts_, self->constValues_, self->bestRelation_, 2, 3);
    jdouble discr = Bvalue * Bvalue - 4 * Avalue * Cvalue;
    JavaLangStringBuilder *AString = [new_JavaLangStringBuilder_init() autorelease];
    JavaLangStringBuilder *BString = [new_JavaLangStringBuilder_init() autorelease];
    JavaLangStringBuilder *CString = [new_JavaLangStringBuilder_init() autorelease];
    [AString appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(self->this$0_->kernel_)) formatWithDouble:IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3) withOrgGeogebraCommonKernelStringTemplate:self->tpl_]];
    if (!isARational) {
      [AString appendWithNSString:@"+"];
      [self->this$0_ appendCombinationWithJavaLangStringBuilder:AString withInt:self->numOfConsts_ withNSStringArray:self->constStrings_ withIntArray:self->bestRelation_ withInt:0 withInt:3 withOrgGeogebraCommonKernelStringTemplate:self->tpl_];
    }
    [BString appendWithNSString:[self->this$0_->kernel_ formatWithDouble:IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3 + 1) withOrgGeogebraCommonKernelStringTemplate:self->tpl_]];
    if (!isBRational) {
      [BString appendWithNSString:@"+"];
      [self->this$0_ appendCombinationWithJavaLangStringBuilder:BString withInt:self->numOfConsts_ withNSStringArray:self->constStrings_ withIntArray:self->bestRelation_ withInt:1 withInt:3 withOrgGeogebraCommonKernelStringTemplate:self->tpl_];
    }
    [CString appendWithNSString:[self->this$0_->kernel_ formatWithDouble:IOSIntArray_Get(self->bestRelation_, self->numOfConsts_ * 3 + 2) withOrgGeogebraCommonKernelStringTemplate:self->tpl_]];
    if (!isCRational) {
      [CString appendWithNSString:@"+"];
      [self->this$0_ appendCombinationWithJavaLangStringBuilder:CString withInt:self->numOfConsts_ withNSStringArray:self->constStrings_ withIntArray:self->bestRelation_ withInt:2 withInt:3 withOrgGeogebraCommonKernelStringTemplate:self->tpl_];
    }
    [((JavaLangStringBuilder *) nil_chk(self->formalSolution_)) appendWithNSString:@"("];
    [self->formalSolution_ appendWithNSString:@"-("];
    [self->formalSolution_ appendWithNSString:[BString description]];
    [self->formalSolution_ appendWithNSString:@")"];
    if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_(discr)) {
      if (self->num1_ * 2 * Cvalue + Bvalue >= 0) {
        [self->formalSolution_ appendWithNSString:@"+"];
      }
      else [self->formalSolution_ appendWithNSString:@"-"];
      [self->formalSolution_ appendWithNSString:@"sqrt("];
      [self->formalSolution_ appendWithNSString:@"("];
      [self->formalSolution_ appendWithNSString:[BString description]];
      [self->formalSolution_ appendWithNSString:@")^2"];
      [self->formalSolution_ appendWithNSString:@"-4*("];
      [self->formalSolution_ appendWithNSString:[CString description]];
      [self->formalSolution_ appendWithNSString:@")*("];
      [self->formalSolution_ appendWithNSString:[AString description]];
      [self->formalSolution_ appendWithNSString:@")"];
      [self->formalSolution_ appendWithNSString:@")"];
    }
    [self->formalSolution_ appendWithNSString:@")/("];
    [self->formalSolution_ appendWithNSString:@"2*("];
    [self->formalSolution_ appendWithNSString:[CString description]];
    [self->formalSolution_ appendWithNSString:@")"];
    [self->formalSolution_ appendWithNSString:@")"];
  }
}

void OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_computeRationalNumberWithDouble_(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self, jdouble number) {
  self->numOfConsts_ = 0;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_numList_(self, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ number, 1 } count:2]);
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_set_coeffs_(self, [self->this$0_ mPSLQWithInt:2 withDoubleArray:self->numList_ withDouble:self->err_ withInt:self->coeffBound_]);
  if (self->coeffs_ == nil) return;
  self->s_ = ((IOSIntArray *) nil_chk(IOSObjectArray_Get(nil_chk(self->coeffs_), 0)))->size_;
  self->numOfPenalties_ = 3;
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_penalties_(self, [IOSIntArray newArrayWithDimensions:2 lengths:(jint[]){ self->numOfPenalties_, self->s_ }]);
  for (jint j = 0; j < self->s_; j++) {
    self->maxCoeff_ = JavaLangMath_maxWithInt_withInt_(JavaLangMath_absWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, 0)), j)), JavaLangMath_absWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, 1)), j)));
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 0)), j) = self->maxCoeff_ > self->coeffBound_ ? 1 : 0;
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 1)), j) = JavaLangMath_absWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, 0)), j));
    *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(self->penalties_, 2)), j) = JavaLangMath_absWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, 1)), j));
  }
  self->bestIndex_ = OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_leastPenaltyIndex(self);
  OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_setAndConsume_bestRelation_(self, [IOSIntArray newArrayWithLength:self->numOfConsts_ + 2]);
  for (jint i = 0; i < self->numOfConsts_ + 2; i++) {
    *IOSIntArray_GetRef(self->bestRelation_, i) = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->coeffs_, i)), self->bestIndex_);
  }
  if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->penalties_, 0)), self->bestIndex_) == 1) {
    self->bestIndex_ = -1;
    [((JavaLangStringBuilder *) nil_chk(self->formalSolution_)) setLengthWithInt:0];
    return;
  }
  [((JavaLangStringBuilder *) nil_chk(self->formalSolution_)) appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(self->this$0_->kernel_)) formatWithDouble:-IOSIntArray_Get(self->bestRelation_, 1) withOrgGeogebraCommonKernelStringTemplate:self->tpl_]];
  [self->formalSolution_ appendWithNSString:@"/("];
  [self->formalSolution_ appendWithNSString:[self->this$0_->kernel_ formatWithDouble:IOSIntArray_Get(self->bestRelation_, 0) withOrgGeogebraCommonKernelStringTemplate:self->tpl_]];
  [self->formalSolution_ appendWithNSString:@")"];
}

jint OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit_leastPenaltyIndex(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit *self) {
  IOSBooleanArray *candidates = [IOSBooleanArray arrayWithLength:self->s_];
  jint bestIndex1 = -1;
  for (jint j = 0; j < self->s_; j++) {
    *IOSBooleanArray_GetRef(candidates, j) = YES;
  }
  for (jint k = 0; k < self->numOfPenalties_; k++) {
    jint minPenalty = JavaLangInteger_MAX_VALUE;
    for (jint j = 0; j < self->s_; j++) {
      if (IOSBooleanArray_Get(candidates, j)) {
        if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->penalties_), k)), j) < minPenalty) {
          minPenalty = IOSIntArray_Get(nil_chk(IOSObjectArray_Get(self->penalties_, k)), j);
        }
      }
    }
    for (jint j = 0; j < self->s_; j++) {
      if (IOSBooleanArray_Get(candidates, j)) {
        if (IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->penalties_), k)), j) > minPenalty) {
          *IOSBooleanArray_GetRef(candidates, j) = NO;
        }
        else {
          bestIndex1 = j;
        }
      }
    }
  }
  return bestIndex1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelCasAlgoSurdText_AlgebraicFit)
