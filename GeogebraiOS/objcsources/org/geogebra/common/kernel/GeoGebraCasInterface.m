//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/GeoGebraCasInterface.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/Set.h"
#include "org/geogebra/common/kernel/AsynchronousCommand.h"
#include "org/geogebra/common/kernel/CASException.h"
#include "org/geogebra/common/kernel/CASGenericInterface.h"
#include "org/geogebra/common/kernel/CASParserInterface.h"
#include "org/geogebra/common/kernel/GeoGebraCasInterface.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "org/geogebra/common/kernel/geos/GeoCasCell.h"

@interface OrgGeogebraCommonKernelGeoGebraCasInterface : NSObject
@end

@implementation OrgGeogebraCommonKernelGeoGebraCasInterface

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "evaluateRawWithNSString:", "evaluateRaw", "Ljava.lang.String;", 0x401, "Ljava.lang.Throwable;", NULL },
    { "getCurrentCAS", NULL, "Lorg.geogebra.common.kernel.CASGenericInterface;", 0x401, NULL, NULL },
    { "getCASparser", NULL, "Lorg.geogebra.common.kernel.CASParserInterface;", 0x401, NULL, NULL },
    { "isStructurallyEqualWithOrgGeogebraCommonKernelArithmeticValidExpression:withNSString:withOrgGeogebraCommonKernelKernel:", "isStructurallyEqual", "Z", 0x401, NULL, NULL },
    { "setCurrentCAS", NULL, "V", 0x401, NULL, NULL },
    { "isCommandAvailableWithOrgGeogebraCommonKernelArithmeticCommand:", "isCommandAvailable", "Z", 0x401, NULL, NULL },
    { "getPolynomialCoeffsWithNSString:withNSString:", "getPolynomialCoeffs", "[Ljava.lang.String;", 0x401, NULL, NULL },
    { "evaluateGeoGebraCASWithNSString:withOrgGeogebraCommonKernelArithmeticMyArbitraryConstant:withOrgGeogebraCommonKernelStringTemplate:withOrgGeogebraCommonKernelKernel:", "evaluateGeoGebraCAS", "Ljava.lang.String;", 0x401, "Lorg.geogebra.common.kernel.CASException;", NULL },
    { "evaluateGeoGebraCASWithOrgGeogebraCommonKernelArithmeticValidExpression:withOrgGeogebraCommonKernelArithmeticMyArbitraryConstant:withOrgGeogebraCommonKernelStringTemplate:withOrgGeogebraCommonKernelGeosGeoCasCell:withOrgGeogebraCommonKernelKernel:", "evaluateGeoGebraCAS", "Ljava.lang.String;", 0x401, "Lorg.geogebra.common.kernel.CASException;", NULL },
    { "getCASCommandWithNSString:withJavaUtilArrayList:withBoolean:withOrgGeogebraCommonKernelStringTemplate:", "getCASCommand", "Ljava.lang.String;", 0x401, NULL, NULL },
    { "evaluateGeoGebraCASAsyncWithOrgGeogebraCommonKernelAsynchronousCommand:", "evaluateGeoGebraCASAsync", "V", 0x401, NULL, NULL },
    { "getAvailableCommandNames", NULL, "Ljava.util.Set;", 0x401, NULL, NULL },
    { "clearCache", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelGeoGebraCasInterface = { 2, "GeoGebraCasInterface", "org.geogebra.common.kernel", NULL, 0x609, 13, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelGeoGebraCasInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelGeoGebraCasInterface)
