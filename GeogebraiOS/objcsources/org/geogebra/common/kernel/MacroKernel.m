//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/MacroKernel.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/util/LinkedHashMap.h"
#include "org/geogebra/common/io/MyXMLHandler.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/GeoGebraCasInterface.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Macro.h"
#include "org/geogebra/common/kernel/MacroConstruction.h"
#include "org/geogebra/common/kernel/MacroKernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNodeEvaluator.h"
#include "org/geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/MyError.h"
#include "org/geogebra/common/util/MaxSizeHashMap.h"

@interface OrgGeogebraCommonKernelMacroKernel () {
 @public
  OrgGeogebraCommonKernelKernel *parentKernel_;
  OrgGeogebraCommonKernelMacroConstruction *macroCons_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMacroKernel, parentKernel_, OrgGeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMacroKernel, macroCons_, OrgGeogebraCommonKernelMacroConstruction *)

@implementation OrgGeogebraCommonKernelMacroKernel

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)parentKernel {
  OrgGeogebraCommonKernelMacroKernel_initWithOrgGeogebraCommonKernelKernel_(self, parentKernel);
  return self;
}

- (jboolean)isMacroKernel {
  return YES;
}

- (OrgGeogebraCommonKernelKernel *)getParentKernel {
  return parentKernel_;
}

- (void)addReservedLabelWithNSString:(NSString *)label {
  [((OrgGeogebraCommonKernelMacroConstruction *) nil_chk(macroCons_)) addReservedLabelWithNSString:label];
}

- (void)setGlobalVariableLookupWithBoolean:(jboolean)flag {
  [((OrgGeogebraCommonKernelMacroConstruction *) nil_chk(macroCons_)) setGlobalVariableLookupWithBoolean:flag];
}

- (void)loadXMLWithNSString:(NSString *)xmlString {
  [((OrgGeogebraCommonKernelMacroConstruction *) nil_chk(macroCons_)) loadXMLWithNSString:xmlString];
}

- (jdouble)getXmax {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getXmax];
}

- (jdouble)getXmin {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getXmin];
}

- (jdouble)getXscale {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getXscale];
}

- (jdouble)getYmax {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getYmax];
}

- (jdouble)getYmin {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getYmin];
}

- (jdouble)getYscale {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getYscale];
}

- (void)addMacroWithOrgGeogebraCommonKernelMacro:(OrgGeogebraCommonKernelMacro *)macro {
  [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) addMacroWithOrgGeogebraCommonKernelMacro:macro];
}

- (OrgGeogebraCommonKernelMacro *)getMacroWithNSString:(NSString *)name {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getMacroWithNSString:name];
}

- (OrgGeogebraCommonIoMyXMLHandler *)newMyXMLHandlerWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1 {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) newMyXMLHandlerWithOrgGeogebraCommonKernelKernel:self withOrgGeogebraCommonKernelConstruction:cons1];
}

- (OrgGeogebraCommonKernelCommandsAlgebraProcessor *)newAlgebraProcessorWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) newAlgebraProcessorWithOrgGeogebraCommonKernelKernel:kernel];
}

- (OrgGeogebraCommonKernelArithmeticExpressionNodeEvaluator *)newExpressionNodeEvaluatorWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) newExpressionNodeEvaluatorWithOrgGeogebraCommonKernelKernel:kernel];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)createGeoElementWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1
                                                                                      withNSString:(NSString *)type {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) createGeoElementWithOrgGeogebraCommonKernelConstruction:cons1 withNSString:type];
}

- (jboolean)handleCoordsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                        withJavaUtilLinkedHashMap:(JavaUtilLinkedHashMap *)attrs {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) handleCoordsWithOrgGeogebraCommonKernelGeosGeoElement:geo withJavaUtilLinkedHashMap:attrs];
}

- (id<OrgGeogebraCommonKernelGeoGebraCasInterface>)getGeoGebraCAS {
  @synchronized(self) {
    return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getGeoGebraCAS];
  }
}

- (jboolean)isGeoGebraCASready {
  @synchronized(self) {
    return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) isGeoGebraCASready];
  }
}

- (OrgGeogebraCommonUtilMaxSizeHashMap *)getCasCache {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) getCasCache];
}

- (jboolean)hasCasCache {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) hasCasCache];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy3DWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) copy3DWithOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copyInternal3DWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel_)) copyInternal3DWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (OrgGeogebraCommonKernelAlgosAlgoDispatcher *)newAlgoDispatcherWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1 {
  return [((OrgGeogebraCommonKernelKernel *) nil_chk(self->parentKernel_)) newAlgoDispatcherWithOrgGeogebraCommonKernelConstruction:cons1];
}

- (void)dealloc {
  RELEASE_(parentKernel_);
  RELEASE_(macroCons_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "MacroKernel", NULL, 0x1, NULL, NULL },
    { "isMacroKernel", NULL, "Z", 0x11, NULL, NULL },
    { "getParentKernel", NULL, "Lorg.geogebra.common.kernel.Kernel;", 0x1, NULL, NULL },
    { "addReservedLabelWithNSString:", "addReservedLabel", "V", 0x1, NULL, NULL },
    { "setGlobalVariableLookupWithBoolean:", "setGlobalVariableLookup", "V", 0x1, NULL, NULL },
    { "loadXMLWithNSString:", "loadXML", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "getXmax", NULL, "D", 0x11, NULL, NULL },
    { "getXmin", NULL, "D", 0x11, NULL, NULL },
    { "getXscale", NULL, "D", 0x11, NULL, NULL },
    { "getYmax", NULL, "D", 0x11, NULL, NULL },
    { "getYmin", NULL, "D", 0x11, NULL, NULL },
    { "getYscale", NULL, "D", 0x11, NULL, NULL },
    { "addMacroWithOrgGeogebraCommonKernelMacro:", "addMacro", "V", 0x1, NULL, NULL },
    { "getMacroWithNSString:", "getMacro", "Lorg.geogebra.common.kernel.Macro;", 0x1, NULL, NULL },
    { "newMyXMLHandlerWithOrgGeogebraCommonKernelConstruction:", "newMyXMLHandler", "Lorg.geogebra.common.io.MyXMLHandler;", 0x1, NULL, NULL },
    { "newAlgebraProcessorWithOrgGeogebraCommonKernelKernel:", "newAlgebraProcessor", "Lorg.geogebra.common.kernel.commands.AlgebraProcessor;", 0x1, NULL, NULL },
    { "newExpressionNodeEvaluatorWithOrgGeogebraCommonKernelKernel:", "newExpressionNodeEvaluator", "Lorg.geogebra.common.kernel.arithmetic.ExpressionNodeEvaluator;", 0x1, NULL, NULL },
    { "createGeoElementWithOrgGeogebraCommonKernelConstruction:withNSString:", "createGeoElement", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, "Lorg.geogebra.common.main.MyError;", NULL },
    { "handleCoordsWithOrgGeogebraCommonKernelGeosGeoElement:withJavaUtilLinkedHashMap:", "handleCoords", "Z", 0x1, NULL, NULL },
    { "getGeoGebraCAS", NULL, "Lorg.geogebra.common.kernel.GeoGebraCasInterface;", 0x21, NULL, NULL },
    { "isGeoGebraCASready", NULL, "Z", 0x21, NULL, NULL },
    { "getCasCache", NULL, "Lorg.geogebra.common.util.MaxSizeHashMap;", 0x1, NULL, NULL },
    { "hasCasCache", NULL, "Z", 0x1, NULL, NULL },
    { "copy3DWithOrgGeogebraCommonKernelGeosGeoElement:", "copy3D", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "copyInternal3DWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoElement:", "copyInternal3D", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "newAlgoDispatcherWithOrgGeogebraCommonKernelConstruction:", "newAlgoDispatcher", "Lorg.geogebra.common.kernel.algos.AlgoDispatcher;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parentKernel_", NULL, 0x2, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "macroCons_", NULL, 0x2, "Lorg.geogebra.common.kernel.MacroConstruction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelMacroKernel = { 2, "MacroKernel", "org.geogebra.common.kernel", NULL, 0x1, 26, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelMacroKernel;
}

@end

void OrgGeogebraCommonKernelMacroKernel_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelMacroKernel *self, OrgGeogebraCommonKernelKernel *parentKernel) {
  OrgGeogebraCommonKernelKernel_init(self);
  OrgGeogebraCommonKernelMacroKernel_set_parentKernel_(self, parentKernel);
  OrgGeogebraCommonKernelKernel_set_app_(self, [((OrgGeogebraCommonKernelKernel *) nil_chk(parentKernel)) getApplication]);
  [self setUndoActiveWithBoolean:NO];
  [self setAllowVisibilitySideEffectsWithBoolean:NO];
  OrgGeogebraCommonKernelMacroKernel_setAndConsume_macroCons_(self, new_OrgGeogebraCommonKernelMacroConstruction_initWithOrgGeogebraCommonKernelMacroKernel_(self));
  OrgGeogebraCommonKernelKernel_set_cons_(self, self->macroCons_);
  [self setManager3DWithOrgGeogebraCommonKernelManager3DInterface:[((OrgGeogebraCommonKernelKernel *) nil_chk([self getParentKernel])) newManager3DWithOrgGeogebraCommonKernelKernel:self]];
}

OrgGeogebraCommonKernelMacroKernel *new_OrgGeogebraCommonKernelMacroKernel_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *parentKernel) {
  OrgGeogebraCommonKernelMacroKernel *self = [OrgGeogebraCommonKernelMacroKernel alloc];
  OrgGeogebraCommonKernelMacroKernel_initWithOrgGeogebraCommonKernelKernel_(self, parentKernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelMacroKernel)
