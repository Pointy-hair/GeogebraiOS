//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoTransformation.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/algos/AlgoClosestPoint.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoTransformation.h"
#include "org/geogebra/common/kernel/geos/GeoConicPart.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoPoly.h"
#include "org/geogebra/common/kernel/geos/GeoRay.h"
#include "org/geogebra/common/kernel/geos/GeoSegment.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelAlgosAlgoTransformation () {
 @public
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint *pt_;
  OrgGeogebraCommonKernelGeosGeoPoint *transformedPoint_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoTransformation, pt_, OrgGeogebraCommonKernelAlgosAlgoClosestPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoTransformation, transformedPoint_, OrgGeogebraCommonKernelGeosGeoPoint *)

@implementation OrgGeogebraCommonKernelAlgosAlgoTransformation

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonKernelAlgosAlgoTransformation_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResult {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)transformListWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)ageo2
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)bgeo2 {
  for (jint i = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(bgeo2)) size] - 1; i >= [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(ageo2)) size]; i--) [bgeo2 removeWithInt:i];
  for (jint i = 0; i < [ageo2 size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *trans = nil;
    if (i < [bgeo2 size]) {
      [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:[ageo2 getWithInt:i] withOrgGeogebraCommonKernelGeosGeoElement:[bgeo2 getWithInt:i]];
      [self compute];
    }
    else {
      trans = [self getResultTemplateWithOrgGeogebraCommonKernelGeosGeoElement:[ageo2 getWithInt:i]];
      [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:[ageo2 getWithInt:i] withOrgGeogebraCommonKernelGeosGeoElement:trans];
      [self compute];
      [bgeo2 addWithOrgGeogebraCommonKernelGeosGeoElement:trans];
    }
  }
  [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:ageo2 withOrgGeogebraCommonKernelGeosGeoElement:bgeo2];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResultTemplateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if ([OrgGeogebraCommonKernelGeosGeoPoly_class_() isInstance:geo] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLimitedPath]) return [self copyInternalWithOrgGeogebraCommonKernelConstruction:cons_ withOrgGeogebraCommonKernelGeosGeoElement:geo];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoList]) return new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons_);
  return [self copy__WithOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__WithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) copy__];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copyInternalWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                     withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) copyInternalWithOrgGeogebraCommonKernelConstruction:cons];
}

- (void)transformLimitedPathWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b {
  if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoRay class]]) {
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelGeosGeoRay *) nil_chk(((OrgGeogebraCommonKernelGeosGeoRay *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoRay class])))) getStartPoint] withOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelGeosGeoRay *) nil_chk(((OrgGeogebraCommonKernelGeosGeoRay *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoRay class])))) getStartPoint]];
    [self compute];
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b];
  }
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]]) {
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelGeosGeoSegment *) nil_chk(((OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoSegment class])))) getStartPoint] withOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelGeosGeoSegment *) nil_chk(((OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoSegment class])))) getStartPoint]];
    [self compute];
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelGeosGeoSegment *) nil_chk(((OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoSegment class])))) getEndPoint] withOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelGeosGeoSegment *) nil_chk(((OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoSegment class])))) getEndPoint]];
    [self compute];
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b];
  }
  if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConicPart class]]) {
    jdouble p = [((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConicPart class])))) getParameterStart];
    jdouble q = [((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConicPart class])))) getParameterEnd];
    [((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoConicPart class])))) setParametersWithDouble:p withDouble:q withBoolean:[self swapOrientationWithOrgGeogebraCommonKernelGeosGeoConicPart:(OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConicPart class])]];
  }
}

- (jboolean)swapOrientationWithOrgGeogebraCommonKernelGeosGeoConicPart:(OrgGeogebraCommonKernelGeosGeoConicPart *)p {
  return p == nil || [p positiveOrientation];
}

- (void)transformLimitedConicWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                             withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b {
  OrgGeogebraCommonKernelGeosGeoConicPart *arc = (OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoConicPart class]);
  if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConicPart class]]) {
    OrgGeogebraCommonKernelGeosGeoConicPart *source = (OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConicPart class]);
    [((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(arc)) setParametersWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_PI_2 withBoolean:YES];
    if (pt_ == nil) {
      transformedPoint_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_);
      pt_ = new_OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(cons_, arc, transformedPoint_);
      [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:pt_];
    }
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(transformedPoint_)) removePath];
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(source)) getPointParamWithDouble:0] withOrgGeogebraCommonKernelGeosGeoElement:transformedPoint_];
    [self compute];
    [transformedPoint_ updateCascade];
    jdouble d = [((OrgGeogebraCommonKernelPathParameter *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoClosestPoint *) nil_chk(pt_)) getP])) getPathParameter])) getT];
    [transformedPoint_ removePath];
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:[source getPointParamWithDouble:1] withOrgGeogebraCommonKernelGeosGeoElement:transformedPoint_];
    [self compute];
    [transformedPoint_ updateCascade];
    jdouble e = [((OrgGeogebraCommonKernelPathParameter *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([pt_ getP])) getPathParameter])) getT];
    [arc setParametersWithDouble:d * OrgGeogebraCommonKernelKernel_PI_2 withDouble:e * OrgGeogebraCommonKernelKernel_PI_2 withBoolean:[self swapOrientationWithOrgGeogebraCommonKernelGeosGeoConicPart:source]];
    [self setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b];
  }
}

- (jdouble)getAreaScaleFactor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoTransformation", NULL, 0x1, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x401, NULL, NULL },
    { "setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "setTransformedObject", "V", 0x404, NULL, NULL },
    { "transformListWithOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:", "transformList", "V", 0x4, NULL, NULL },
    { "getResultTemplateWithOrgGeogebraCommonKernelGeosGeoElement:", "getResultTemplate", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "copy__WithOrgGeogebraCommonKernelGeosGeoElement:", "copy", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "copyInternalWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoElement:", "copyInternal", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "transformLimitedPathWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "transformLimitedPath", "V", 0x4, NULL, NULL },
    { "swapOrientationWithOrgGeogebraCommonKernelGeosGeoConicPart:", "swapOrientation", "Z", 0x1, NULL, NULL },
    { "transformLimitedConicWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "transformLimitedConic", "V", 0x4, NULL, NULL },
    { "getAreaScaleFactor", NULL, "D", 0x401, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pt_", NULL, 0x2, "Lorg.geogebra.common.kernel.algos.AlgoClosestPoint;", NULL, NULL,  },
    { "transformedPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoTransformation = { 2, "AlgoTransformation", "org.geogebra.common.kernel.algos", NULL, 0x401, 11, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoTransformation;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoTransformation_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoTransformation *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, c);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoTransformation)
