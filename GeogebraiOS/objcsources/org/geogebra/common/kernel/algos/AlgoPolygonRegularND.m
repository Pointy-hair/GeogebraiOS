//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoPolygonRegularND.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/LocusEquation.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoJoinPointsSegmentInterface.h"
#include "org/geogebra/common/kernel/algos/AlgoPolygonRegularND.h"
#include "org/geogebra/common/kernel/algos/EquationElementInterface.h"
#include "org/geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND () {
 @public
  jboolean labelsNeedIniting_;
  jdouble alpha_;
  jint n_;
}

- (void)updateOutputWithInt:(jint)n;

- (void)removePointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)oldPoint;

@end

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoPolygon *OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_computeWithInt_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self, jint nd);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_updateOutputWithInt_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self, jint n);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_removePointWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self, OrgGeogebraCommonKernelGeosGeoElement *oldPoint);

@interface OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *this$0_;
}

- (OrgGeogebraCommonKernelGeosGeoPolygon *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1, this$0_, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 *self, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 *new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1)

@interface OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *this$0_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2, this$0_, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 *self, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 *new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2)

@interface OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *this$0_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3, this$0_, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 *self, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 *new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3)

@implementation OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A1
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B1
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)num
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)direction {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, c, labels, A1, B1, num, direction);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoPolygon *)newGeoPolygonWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)newGeoPointWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setDirectionWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)direction {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Polygon();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_REGULAR_POLYGON;
}

- (OrgGeogebraCommonKernelGeosGeoPolygon *)getPoly {
  return OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(self);
}

- (void)compute {
  jdouble nd = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(num_)) getDouble];
  if (JavaLangDouble_isNaNWithDouble_(nd)) nd = 2;
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_computeWithInt_(self, (jint) JavaLangMath_roundWithDouble_(nd));
}

- (void)setCenterPointWithInt:(jint)n
                   withDouble:(jdouble)beta {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)rotatePointsWithInt:(jint)n
                 withDouble:(jdouble)alpha {
  for (jint k = 0; k < n - 2; k++) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) getElementWithInt:k])) setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class])];
    [((OrgGeogebraCommonKernelArithmeticMyDouble *) nil_chk(rotAngle_)) setWithDouble:(k + 2) * alpha];
    [self rotateWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([outputPoints_ getElementWithInt:k], @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND))];
  }
}

- (void)rotateWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)checkUnDefinedWithInt:(jint)n {
  if (n < 3 || ![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) isDefined] || ![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(self))) setUndefined];
    numOld_ = n;
    return YES;
  }
  return NO;
}

- (void)computeWithInt:(jint)nd {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_computeWithInt_(self, nd);
}

- (jint)getCurrentPointsLength {
  return numOld_;
}

- (void)updateOutputWithInt:(jint)n {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_updateOutputWithInt_(self, n);
}

- (void)removePointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)oldPoint {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_removePointWithOrgGeogebraCommonKernelGeosGeoElement_(self, oldPoint);
}

- (void)removeOutputExceptWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)keepGeo {
  for (jint i = 0; i < [super getOutputLength]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [super getOutputWithInt:i];
    if (geo != keepGeo) {
      if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint]) {
        OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_removePointWithOrgGeogebraCommonKernelGeosGeoElement_(self, geo);
      }
      else {
        [geo doRemove];
      }
    }
  }
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return OrgGeogebraCommonKernelLocusEquation_eqnPolygonRegularWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

- (void)calcArea {
  if ([A_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]] && [B_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]] && [centerPoint_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) {
    jdouble area = OrgGeogebraCommonKernelGeosGeoPoint_detWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B_, [OrgGeogebraCommonKernelGeosGeoPoint class]));
    area += OrgGeogebraCommonKernelGeosGeoPoint_detWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B_, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->centerPoint_, [OrgGeogebraCommonKernelGeosGeoPoint class]));
    area += OrgGeogebraCommonKernelGeosGeoPoint_detWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->centerPoint_, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoPoint class]));
    area = area * self->n_ / 2;
    [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(self))) setAreaWithDouble:area];
    return;
  }
  jdouble radius = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) distanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:centerPoint_];
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(self))) setAreaWithDouble:n_ * radius * radius * JavaLangMath_sinWithDouble_(alpha_) / 2.0];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(num_);
  RELEASE_(outputPolygon_);
  RELEASE_(outputPoints_);
  RELEASE_(outputSegments_);
  RELEASE_(centerPoint_);
  RELEASE_(rotAngle_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoPolygonRegularND", NULL, 0x1, NULL, NULL },
    { "newGeoPolygonWithOrgGeogebraCommonKernelConstruction:", "newGeoPolygon", "Lorg.geogebra.common.kernel.geos.GeoPolygon;", 0x404, NULL, NULL },
    { "newGeoPointWithOrgGeogebraCommonKernelConstruction:", "newGeoPoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x404, NULL, NULL },
    { "setDirectionWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "setDirection", "V", 0x404, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "getPoly", NULL, "Lorg.geogebra.common.kernel.geos.GeoPolygon;", 0x11, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setCenterPointWithInt:withDouble:", "setCenterPoint", "V", 0x404, NULL, NULL },
    { "rotatePointsWithInt:withDouble:", "rotatePoints", "V", 0x4, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotate", "V", 0x404, NULL, NULL },
    { "checkUnDefinedWithInt:", "checkUnDefined", "Z", 0x4, NULL, NULL },
    { "computeWithInt:", "compute", "V", 0x11, NULL, NULL },
    { "getCurrentPointsLength", NULL, "I", 0x1, NULL, NULL },
    { "updateOutputWithInt:", "updateOutput", "V", 0x2, NULL, NULL },
    { "removePointWithOrgGeogebraCommonKernelGeosGeoElement:", "removePoint", "V", 0x2, NULL, NULL },
    { "removeOutputExceptWithOrgGeogebraCommonKernelGeosGeoElement:", "removeOutputExcept", "V", 0x1, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lorg.geogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
    { "calcArea", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x14, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "B_", NULL, 0x14, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "num_", NULL, 0x4, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "numOld_", NULL, 0x4, "I", NULL, NULL,  },
    { "outputPolygon_", NULL, 0x4, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/kernel/geos/GeoPolygon;>;",  },
    { "outputPoints_", NULL, 0x4, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
    { "outputSegments_", NULL, 0x4, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
    { "centerPoint_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "rotAngle_", NULL, 0x4, "Lorg.geogebra.common.kernel.arithmetic.MyDouble;", NULL, NULL,  },
    { "labelPointsAndSegments_", NULL, 0x4, "Z", NULL, NULL,  },
    { "showNewSegmentsLabels_", NULL, 0x0, "Z", NULL, NULL,  },
    { "showNewPointsLabels_", NULL, 0x0, "Z", NULL, NULL,  },
    { "labelsNeedIniting_", NULL, 0x2, "Z", NULL, NULL,  },
    { "alpha_", NULL, 0x2, "D", NULL, NULL,  },
    { "n_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND = { 2, "AlgoPolygonRegularND", "org.geogebra.common.kernel.algos", NULL, 0x401, 20, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B1, id<OrgGeogebraCommonKernelArithmeticNumberValue> num, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> direction) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->numOld_ = 2;
  self->labelsNeedIniting_ = YES;
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_set_A_(self, A1);
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_set_B_(self, B1);
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_set_num_(self, num);
  [self setDirectionWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:direction];
  jint labelsLength = labels == nil ? 0 : labels->size_;
  self->labelPointsAndSegments_ = ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->A_)) isLabelSet] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->B_)) isLabelSet] || labelsLength > 1);
  self->showNewSegmentsLabels_ = NO;
  self->showNewPointsLabels_ = NO;
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_set_centerPoint_(self, (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([self newGeoPointWithOrgGeogebraCommonKernelConstruction:c], @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)));
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_setAndConsume_rotAngle_(self, new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_(self->kernel_));
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_setAndConsume_outputPolygon_(self, new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self) autorelease]));
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_setAndConsume_outputSegments_(self, new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self) autorelease]));
  if (!self->labelPointsAndSegments_) [self->outputSegments_ removeFromHandler];
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_setAndConsume_outputPoints_(self, new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self) autorelease]));
  if (!self->labelPointsAndSegments_) [self->outputPoints_ removeFromHandler];
  [self->outputPolygon_ adjustOutputSizeWithInt:1];
  [self->outputSegments_ augmentOutputSizeWithInt:2 withBoolean:NO];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputSegments_ getElementWithInt:0])) setAuxiliaryObjectWithBoolean:NO];
  [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) check_protocol_cast([self->outputSegments_ getElementWithInt:1], @protocol(OrgGeogebraCommonKernelKernelNDGeoSegmentND))))) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->B_ withOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_];
  [self setInputOutput];
  OrgGeogebraCommonKernelGeosGeoPolygon *poly = OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(self);
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(poly)) setNotFixedPointsLengthWithBoolean:YES];
  if (labelsLength > 1) {
    OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_computeWithInt_(self, (labelsLength + 1) / 2);
    [poly setLabelWithNSString:IOSObjectArray_Get(nil_chk(labels), 0)];
    jint d = 1;
    for (jint i = 0; i < [self->outputSegments_ size]; i++) [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputSegments_ getElementWithInt:i])) setLabelWithNSString:IOSObjectArray_Get(labels, d + i)];
    d += [self->outputSegments_ size];
    for (jint i = 0; i < [self->outputPoints_ size]; i++) [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:i])) setLabelWithNSString:IOSObjectArray_Get(labels, d + i)];
  }
  else if (labelsLength == 1) {
    [poly setLabelWithNSString:IOSObjectArray_Get(nil_chk(labels), 0)];
  }
  else {
    [poly setLabelWithNSString:nil];
  }
  self->labelsNeedIniting_ = NO;
  [self update];
}

OrgGeogebraCommonKernelGeosGeoPolygon *OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self) {
  return [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygon_)) getElementWithInt:0];
}

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_computeWithInt_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self, jint nd) {
  OrgGeogebraCommonKernelGeosGeoPolygon *poly = OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(self);
  self->n_ = JavaLangMath_maxWithInt_withInt_(2, nd);
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_updateOutputWithInt_(self, self->n_);
  if ([self checkUnDefinedWithInt:self->n_]) {
    return;
  }
  self->alpha_ = OrgGeogebraCommonKernelKernel_PI_2 / self->n_;
  jdouble beta = (JavaLangMath_PI - self->alpha_) / 2;
  [self setCenterPointWithInt:self->n_ withDouble:beta];
  [self rotatePointsWithInt:self->n_ withDouble:self->alpha_];
  IOSObjectArray *points = [IOSObjectArray arrayWithLength:self->n_ type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()];
  IOSObjectArray_Set(points, 0, self->A_);
  IOSObjectArray_Set(points, 1, self->B_);
  for (jint i = 2; i < self->n_; i++) IOSObjectArray_Set(points, i, (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) getElementWithInt:i - 2], @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)));
  for (jint i = self->numOld_ - 1; i < self->n_; i++) {
    [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) check_protocol_cast([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) getElementWithInt:i], @protocol(OrgGeogebraCommonKernelKernelNDGeoSegmentND))))) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points, i) withOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points, (i + 1) % self->n_)];
  }
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(poly)) setPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:points withOrgGeogebraCommonKernelMatrixCoordSys:nil withBoolean:NO];
  IOSObjectArray *segments = [IOSObjectArray arrayWithLength:self->n_ type:OrgGeogebraCommonKernelKernelNDGeoSegmentND_class_()];
  for (jint i = 0; i < self->n_; i++) {
    IOSObjectArray_Set(segments, i, (id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) check_protocol_cast([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) getElementWithInt:i], @protocol(OrgGeogebraCommonKernelKernelNDGeoSegmentND)));
  }
  [poly setSegmentsWithOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:segments];
  [self calcArea];
  [poly updateRegionCSWithFirstPoints];
  self->numOld_ = self->n_;
}

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_updateOutputWithInt_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self, jint n) {
  jint nOld = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) size] + 2;
  if (nOld == n) return;
  if (n > nOld) {
    self->showNewPointsLabels_ = (self->labelPointsAndSegments_ && (([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->A_)) isEuclidianVisible] && [self->A_ isLabelVisible]) || ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->B_)) isEuclidianVisible] && [self->B_ isLabelVisible])));
    [self->outputPoints_ augmentOutputSizeWithInt:n - nOld withBoolean:NO];
    if (self->labelPointsAndSegments_ && !self->labelsNeedIniting_) [self->outputPoints_ updateLabels];
    self->showNewSegmentsLabels_ = NO;
    for (jint i = 0; i < [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) size]; i++) self->showNewSegmentsLabels_ = (self->showNewSegmentsLabels_ || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputSegments_ getElementWithInt:i])) isLabelVisible]);
    [self->outputSegments_ augmentOutputSizeWithInt:n - nOld withBoolean:NO];
    if (self->labelPointsAndSegments_ && !self->labelsNeedIniting_) [self->outputSegments_ updateLabels];
  }
  else {
    for (jint i = n; i < nOld; i++) {
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:i - 2])) setUndefined];
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) getElementWithInt:i])) setUndefined];
    }
    if (n > 2) [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) check_protocol_cast([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) getElementWithInt:n - 1], @protocol(OrgGeogebraCommonKernelKernelNDGeoSegmentND))))) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([self->outputPoints_ getElementWithInt:n - 3], @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_];
    else [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) check_protocol_cast([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) getElementWithInt:n - 1], @protocol(OrgGeogebraCommonKernelKernelNDGeoSegmentND))))) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->B_ withOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_];
  }
}

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_removePointWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *self, OrgGeogebraCommonKernelGeosGeoElement *oldPoint) {
  JavaUtilArrayList *algoList = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(oldPoint)) getAlgorithmList];
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(algoList)) size]; k++) {
    OrgGeogebraCommonKernelAlgosAlgoElement *algo = [algoList getWithInt:k];
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(self->input_))->size_; j++) [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(self->input_, j))) removeFromUpdateSetsWithOrgGeogebraCommonKernelAlgosAlgoElement:algo];
  }
  [oldPoint setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:nil];
  OrgGeogebraCommonKernelGeosGeoPolygon *poly = OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_getPoly(self);
  for (jint k = 0; k < [algoList size]; k++) {
    OrgGeogebraCommonKernelAlgosAlgoElement *algo = [algoList getWithInt:k];
    if ([OrgGeogebraCommonKernelAlgosAlgoJoinPointsSegmentInterface_class_() isInstance:algo] && [((id<OrgGeogebraCommonKernelAlgosAlgoJoinPointsSegmentInterface>) nil_chk(((id<OrgGeogebraCommonKernelAlgosAlgoJoinPointsSegmentInterface>) check_protocol_cast(algo, @protocol(OrgGeogebraCommonKernelAlgosAlgoJoinPointsSegmentInterface))))) getPoly] == poly) {
      continue;
    }
    [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) remove];
  }
  [algoList clear];
  [oldPoint doRemove];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND)

@implementation OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1

- (OrgGeogebraCommonKernelGeosGeoPolygon *)newElement {
  OrgGeogebraCommonKernelGeosGeoPolygon *p = [this$0_ newGeoPolygonWithOrgGeogebraCommonKernelConstruction:this$0_->cons_];
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(p)) setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:this$0_];
  return p;
}

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)outer$ {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoPolygon;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.algos.AlgoPolygonRegularND;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND", "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 = { 2, "", "org.geogebra.common.kernel.algos", "AlgoPolygonRegularND", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/kernel/geos/GeoPolygon;>;" };
  return &_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 *self, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 *new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 *self = [OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1 alloc];
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$1)

@implementation OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2

- (OrgGeogebraCommonKernelGeosGeoElement *)newElement {
  OrgGeogebraCommonKernelGeosGeoElement *segment = (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(this$0_->outputPolygon_)) getElementWithInt:0])) createSegmentWithOrgGeogebraCommonKernelKernelNDGeoPointND:this$0_->A_ withOrgGeogebraCommonKernelKernelNDGeoPointND:this$0_->B_ withBoolean:YES], [OrgGeogebraCommonKernelGeosGeoElement class]);
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(segment)) setAuxiliaryObjectWithBoolean:YES];
  jboolean segmentsVisible = NO;
  jint size = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(this$0_->outputSegments_)) size];
  if (size > 0) {
    for (jint i = 0; i < size && !segmentsVisible; i++) {
      segmentsVisible = (segmentsVisible || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([this$0_->outputSegments_ getElementWithInt:i])) isEuclidianVisible]);
    }
  }
  else {
    segmentsVisible = YES;
  }
  [segment setEuclidianVisibleWithBoolean:segmentsVisible];
  [segment setLabelVisibleWithBoolean:this$0_->showNewSegmentsLabels_];
  [segment setViewFlagsWithJavaUtilList:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->A_, [OrgGeogebraCommonKernelGeosGeoElement class])))) getViewSet]];
  [segment setVisibleInView3DWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->A_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  [segment setVisibleInViewForPlaneWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->A_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  return segment;
}

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)outer$ {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.algos.AlgoPolygonRegularND;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND", "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 = { 2, "", "org.geogebra.common.kernel.algos", "AlgoPolygonRegularND", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/kernel/geos/GeoElement;>;" };
  return &_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 *self, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 *new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 *self = [OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2 alloc];
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$2)

@implementation OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3

- (OrgGeogebraCommonKernelGeosGeoElement *)newElement {
  OrgGeogebraCommonKernelGeosGeoElement *newPoint = [this$0_ newGeoPointWithOrgGeogebraCommonKernelConstruction:this$0_->cons_];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(newPoint)) setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:this$0_];
  [newPoint setAuxiliaryObjectWithBoolean:YES];
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(newPoint, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND))) setPointSizeWithInt:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(this$0_->A_)) getPointSize]];
  [newPoint setEuclidianVisibleWithBoolean:[this$0_->A_ isEuclidianVisible] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(this$0_->B_)) isEuclidianVisible]];
  [newPoint setAuxiliaryObjectWithBoolean:YES];
  [newPoint setLabelVisibleWithBoolean:this$0_->showNewPointsLabels_];
  [newPoint setViewFlagsWithJavaUtilList:[((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->A_, [OrgGeogebraCommonKernelGeosGeoElement class])) getViewSet]];
  [newPoint setVisibleInView3DWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->A_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  [newPoint setVisibleInViewForPlaneWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->A_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  OrgGeogebraCommonKernelGeosGeoBoolean *conditionToShow = [((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->A_, [OrgGeogebraCommonKernelGeosGeoElement class])) getShowObjectCondition];
  if (conditionToShow == nil) conditionToShow = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(this$0_->B_, [OrgGeogebraCommonKernelGeosGeoElement class])))) getShowObjectCondition];
  if (conditionToShow != nil) {
    @try {
      [newPoint setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:conditionToShow];
    }
    @catch (JavaLangException *e) {
    }
  }
  return newPoint;
}

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *)outer$ {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.algos.AlgoPolygonRegularND;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND", "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 = { 2, "", "org.geogebra.common.kernel.algos", "AlgoPolygonRegularND", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/kernel/geos/GeoElement;>;" };
  return &_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 *self, OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 *new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 *self = [OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3 alloc];
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3_initWithOrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_$3)
