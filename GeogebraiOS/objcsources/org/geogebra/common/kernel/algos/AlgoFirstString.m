//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoFirstString.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoFirstString.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"

@implementation OrgGeogebraCommonKernelAlgosAlgoFirstString

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)inputText
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n {
  OrgGeogebraCommonKernelAlgosAlgoFirstString_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, inputText, n);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_First();
}

- (void)setInputOutput {
  if (n_ != nil) {
    input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, inputText_);
    (void) IOSObjectArray_Set(input_, 1, n_);
  }
  else {
    input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, inputText_);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:outputText_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoText *)getResult {
  return outputText_;
}

- (void)compute {
  NSString *str = [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(inputText_)) getTextString];
  if (str == nil) {
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(outputText_)) setUndefined];
    return;
  }
  size_ = ((jint) [((NSString *) nil_chk(str)) length]);
  jint outsize = n_ == nil ? 1 : J2ObjCFpToInt([n_ getDouble]);
  if (![inputText_ isDefined] || size_ == 0 || outsize < 0 || outsize > size_) {
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(outputText_)) setUndefined];
    return;
  }
  if (outsize == 0) [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(outputText_)) setTextStringWithNSString:@""];
  else [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(outputText_)) setTextStringWithNSString:[str substring:0 endIndex:outsize]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoFirstString", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputText_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "n_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "outputText_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "size_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoFirstString = { 2, "AlgoFirstString", "org.geogebra.common.kernel.algos", NULL, 0x1, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoFirstString;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoFirstString_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelAlgosAlgoFirstString *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *inputText, OrgGeogebraCommonKernelGeosGeoNumeric *n) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->inputText_ = inputText;
  self->n_ = n;
  self->outputText_ = new_OrgGeogebraCommonKernelGeosGeoText_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self->outputText_ setIsTextCommandWithBoolean:YES];
  [self setInputOutput];
  [self compute];
  [self->outputText_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoFirstString *new_OrgGeogebraCommonKernelAlgosAlgoFirstString_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *inputText, OrgGeogebraCommonKernelGeosGeoNumeric *n) {
  OrgGeogebraCommonKernelAlgosAlgoFirstString *self = [OrgGeogebraCommonKernelAlgosAlgoFirstString alloc];
  OrgGeogebraCommonKernelAlgosAlgoFirstString_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, inputText, n);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoFirstString)
