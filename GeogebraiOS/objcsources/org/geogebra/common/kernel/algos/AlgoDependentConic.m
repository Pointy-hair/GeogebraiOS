//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoDependentConic.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoDependentConic.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/Algos.h"
#include "org/geogebra/common/kernel/arithmetic/Equation.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Inspecting.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/arithmetic/Polynomial.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"

@interface OrgGeogebraCommonKernelAlgosAlgoDependentConic () {
 @public
  OrgGeogebraCommonKernelArithmeticEquation *equation_;
  IOSObjectArray *ev_;
  OrgGeogebraCommonKernelGeosGeoConic *conic_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDependentConic, equation_, OrgGeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDependentConic, ev_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDependentConic, conic_, OrgGeogebraCommonKernelGeosGeoConic *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoDependentConic_compute(OrgGeogebraCommonKernelAlgosAlgoDependentConic *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoDependentConic

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ {
  OrgGeogebraCommonKernelAlgosAlgoDependentConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return OrgGeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  input_ = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) getGeoElementVariables];
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:conic_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoConic *)getConic {
  return conic_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoDependentConic_compute(self);
}

- (jdouble)evaluateWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P {
  jdouble mat0 = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(ev_), 0))) evaluateDouble];
  jdouble mat1 = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(ev_, 2))) evaluateDouble];
  jdouble mat2 = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(ev_, 5))) evaluateDouble];
  jdouble mat3 = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(ev_, 1))) evaluateDouble] / 2.0;
  jdouble mat4 = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(ev_, 3))) evaluateDouble] / 2.0;
  jdouble mat5 = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(ev_, 4))) evaluateDouble] / 2.0;
  return ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(P))->x_ * (mat0 * P->x_ + mat3 * P->y_ + mat4 * P->z_) + P->y_ * (mat3 * P->x_ + mat1 * P->y_ + mat5 * P->z_) + P->z_ * (mat4 * P->x_ + mat5 * P->y_ + mat2 * P->z_);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticEquation:", "AlgoDependentConic", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getConic", NULL, "Lorg.geogebra.common.kernel.geos.GeoConic;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "evaluateWithOrgGeogebraCommonKernelGeosGeoPoint:", "evaluate", "D", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "equation_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "ev_", NULL, 0x2, "[Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", NULL, NULL,  },
    { "conic_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoDependentConic = { 2, "AlgoDependentConic", "org.geogebra.common.kernel.algos", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoDependentConic;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoDependentConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelAlgosAlgoDependentConic *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons, NO);
  self->ev_ = [IOSObjectArray newArrayWithLength:6 type:OrgGeogebraCommonKernelArithmeticExpressionValue_class_()];
  self->equation_ = equ;
  OrgGeogebraCommonKernelArithmeticPolynomial *lhs = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equ)) getNormalForm];
  (void) IOSObjectArray_Set(self->ev_, 0, [((OrgGeogebraCommonKernelArithmeticPolynomial *) nil_chk(lhs)) getCoefficientWithNSString:@"xx"]);
  (void) IOSObjectArray_Set(self->ev_, 1, [lhs getCoefficientWithNSString:@"xy"]);
  (void) IOSObjectArray_Set(self->ev_, 2, [lhs getCoefficientWithNSString:@"yy"]);
  (void) IOSObjectArray_Set(self->ev_, 3, [lhs getCoefficientWithNSString:@"x"]);
  (void) IOSObjectArray_Set(self->ev_, 4, [lhs getCoefficientWithNSString:@"y"]);
  (void) IOSObjectArray_Set(self->ev_, 5, [lhs getConstantCoefficient]);
  for (jint i = 0; i < 6; i++) {
    if (![((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) inspectWithOrgGeogebraCommonKernelArithmeticInspecting:OrgGeogebraCommonKernelArithmeticInspecting_get_dynamicGeosFinder_()]) {
      (void) IOSObjectArray_Set(self->ev_, i, [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
    }
    id<OrgGeogebraCommonKernelArithmeticExpressionValue> eval = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(eval, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble];
  }
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) addToConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self withBoolean:NO];
  self->conic_ = new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoDependentConic_compute(self);
  [self->conic_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoDependentConic *new_OrgGeogebraCommonKernelAlgosAlgoDependentConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ) {
  OrgGeogebraCommonKernelAlgosAlgoDependentConic *self = [OrgGeogebraCommonKernelAlgosAlgoDependentConic alloc];
  OrgGeogebraCommonKernelAlgosAlgoDependentConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoDependentConic_compute(OrgGeogebraCommonKernelAlgosAlgoDependentConic *self) {
  @try {
    [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->conic_)) setCoeffsWithDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(self->ev_), 0))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 1))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 2))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 3))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 4))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 5))) evaluateDouble]];
  }
  @catch (JavaLangThrowable *e) {
    [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->conic_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoDependentConic)
