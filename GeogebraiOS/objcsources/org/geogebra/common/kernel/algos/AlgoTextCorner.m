//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoTextCorner.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoTextCorner.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"

@interface OrgGeogebraCommonKernelAlgosAlgoTextCorner () {
 @public
  OrgGeogebraCommonKernelGeosGeoText *txt_;
  OrgGeogebraCommonKernelGeosGeoPoint *corner_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> number_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoTextCorner, txt_, OrgGeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoTextCorner, corner_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoTextCorner, number_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoTextCorner_compute(OrgGeogebraCommonKernelAlgosAlgoTextCorner *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoTextCorner

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)txt
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)number {
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, txt, number);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Corner();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, txt_);
  IOSObjectArray_Set(input_, 1, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(number_)) toGeoElement]);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:corner_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getCorner {
  return corner_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_compute(self);
}

- (jboolean)euclidianViewUpdate {
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) notifyUpdateWithOrgGeogebraCommonKernelGeosGeoElement:txt_];
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_compute(self);
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(corner_)) update];
  return YES;
}

- (void)dealloc {
  RELEASE_(txt_);
  RELEASE_(corner_);
  RELEASE_(number_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoTextCorner", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCorner", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "txt_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "corner_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "number_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoTextCorner = { 2, "AlgoTextCorner", "org.geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoTextCorner;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoTextCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoTextCorner *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *txt, id<OrgGeogebraCommonKernelArithmeticNumberValue> number) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_set_txt_(self, txt);
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_set_number_(self, number);
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(txt)) setNeedsUpdatedBoundingBoxWithBoolean:YES];
  [txt update];
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_setAndConsume_corner_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_compute(self);
  [self->corner_ setLabelWithNSString:label];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithOrgGeogebraCommonKernelEuclidianViewCE:self];
}

OrgGeogebraCommonKernelAlgosAlgoTextCorner *new_OrgGeogebraCommonKernelAlgosAlgoTextCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *txt, id<OrgGeogebraCommonKernelArithmeticNumberValue> number) {
  OrgGeogebraCommonKernelAlgosAlgoTextCorner *self = [OrgGeogebraCommonKernelAlgosAlgoTextCorner alloc];
  OrgGeogebraCommonKernelAlgosAlgoTextCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, txt, number);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoTextCorner_compute(OrgGeogebraCommonKernelAlgosAlgoTextCorner *self) {
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->txt_)) calculateCornerPointWithOrgGeogebraCommonKernelGeosGeoPoint:self->corner_ withInt:J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->number_)) getDouble])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoTextCorner)
