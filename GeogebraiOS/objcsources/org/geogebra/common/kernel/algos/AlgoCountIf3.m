//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoCountIf3.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoCountIf3.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgorithmSet.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/main/MyError.h"

@interface OrgGeogebraCommonKernelAlgosAlgoCountIf3 () {
 @public
  OrgGeogebraCommonKernelGeosGeoList *inputList_;
  OrgGeogebraCommonKernelGeosGeoNumeric *result_;
  OrgGeogebraCommonKernelGeosGeoBoolean *bool__;
  OrgGeogebraCommonKernelGeosGeoElement *var_;
  jint size_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoCountIf3, inputList_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoCountIf3, result_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoCountIf3, bool__, OrgGeogebraCommonKernelGeosGeoBoolean *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoCountIf3, var_, OrgGeogebraCommonKernelGeosGeoElement *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoCountIf3_compute(OrgGeogebraCommonKernelAlgosAlgoCountIf3 *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoCountIf3

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)bool_
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)var
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)inputList {
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, bool_, var, inputList);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CountIf();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, bool__);
  IOSObjectArray_Set(input_, 1, var_);
  IOSObjectArray_Set(input_, 2, inputList_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:result_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return result_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_compute(self);
}

- (void)dealloc {
  RELEASE_(inputList_);
  RELEASE_(result_);
  RELEASE_(bool__);
  RELEASE_(var_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoCountIf3", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputList_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "result_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "bool__", "bool", 0x2, "Lorg.geogebra.common.kernel.geos.GeoBoolean;", NULL, NULL,  },
    { "var_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "size_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoCountIf3 = { 2, "AlgoCountIf3", "org.geogebra.common.kernel.algos", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoCountIf3;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoCountIf3_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelAlgosAlgoCountIf3 *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoBoolean *bool_, OrgGeogebraCommonKernelGeosGeoElement *var, OrgGeogebraCommonKernelGeosGeoList *inputList) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_set_inputList_(self, inputList);
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_set_var_(self, var);
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_set_bool__(self, bool_);
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_setAndConsume_result_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_compute(self);
  [self->result_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoCountIf3 *new_OrgGeogebraCommonKernelAlgosAlgoCountIf3_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoBoolean *bool_, OrgGeogebraCommonKernelGeosGeoElement *var, OrgGeogebraCommonKernelGeosGeoList *inputList) {
  OrgGeogebraCommonKernelAlgosAlgoCountIf3 *self = [OrgGeogebraCommonKernelAlgosAlgoCountIf3 alloc];
  OrgGeogebraCommonKernelAlgosAlgoCountIf3_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, bool_, var, inputList);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoCountIf3_compute(OrgGeogebraCommonKernelAlgosAlgoCountIf3 *self) {
  self->size_ = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->inputList_)) size];
  if (![self->inputList_ isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
    return;
  }
  jint count = 0;
  if (self->size_ > 0) {
    @try {
      for (jint i = 0; i < self->size_; i++) {
        OrgGeogebraCommonKernelGeosGeoElement *geo = [self->inputList_ getWithInt:i];
        [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->var_)) setWithOrgGeogebraCommonKernelGeosGeoElement:geo];
        [self setStopUpdateCascadeWithBoolean:YES];
        [((OrgGeogebraCommonKernelAlgosAlgorithmSet *) nil_chk([self->var_ getAlgoUpdateSet])) updateAllUntilWithOrgGeogebraCommonKernelAlgosAlgoElement:[((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->bool__)) getParentAlgorithm]];
        if ([self->bool__ getBoolean]) {
          count++;
        }
        [self setStopUpdateCascadeWithBoolean:NO];
      }
    }
    @catch (OrgGeogebraCommonMainMyError *e) {
      [((OrgGeogebraCommonMainMyError *) nil_chk(e)) printStackTrace];
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
  }
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:count];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoCountIf3)
