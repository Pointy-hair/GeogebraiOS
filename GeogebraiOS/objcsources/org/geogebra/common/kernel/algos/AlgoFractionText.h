//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoFractionText.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoFractionText_H_
#define _OrgGeogebraCommonKernelAlgosAlgoFractionText_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"

@class IOSDoubleArray;
@class JavaLangStringBuilder;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoText;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol OrgGeogebraCommonKernelGeosGeoNumberValue;

@interface OrgGeogebraCommonKernelAlgosAlgoFractionText : OrgGeogebraCommonKernelAlgosAlgoElement

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)num;

+ (void)appendFormulaWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                               withDoubleArray:(IOSDoubleArray *)frac
     withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl
             withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (void)compute;

+ (IOSDoubleArray *)DecimalToFractionWithDouble:(jdouble)decimal
                                     withDouble:(jdouble)AccuracyFactor;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (OrgGeogebraCommonKernelGeosGeoText *)getResult;

- (jboolean)isLaTeXTextCommand;

#pragma mark Protected

- (void)setInputOutput;

#pragma mark Package-Private

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)num;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoFractionText)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoFractionText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumberValue_(OrgGeogebraCommonKernelAlgosAlgoFractionText *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoFractionText *new_OrgGeogebraCommonKernelAlgosAlgoFractionText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoFractionText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumberValue_(OrgGeogebraCommonKernelAlgosAlgoFractionText *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoFractionText *new_OrgGeogebraCommonKernelAlgosAlgoFractionText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumberValue_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IOSDoubleArray *OrgGeogebraCommonKernelAlgosAlgoFractionText_DecimalToFractionWithDouble_withDouble_(jdouble decimal, jdouble AccuracyFactor);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoFractionText_appendFormulaWithJavaLangStringBuilder_withDoubleArray_withOrgGeogebraCommonKernelStringTemplate_withOrgGeogebraCommonKernelKernel_(JavaLangStringBuilder *sb, IOSDoubleArray *frac, OrgGeogebraCommonKernelStringTemplate *tpl, OrgGeogebraCommonKernelKernel *kernel);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoFractionText)

#endif // _OrgGeogebraCommonKernelAlgosAlgoFractionText_H_
