//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoAnglePoints.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoAnglePoints.h"
#include "org/geogebra/common/kernel/algos/AlgoAnglePointsND.h"
#include "org/geogebra/common/kernel/algos/AlgoAnglePolygon.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonKernelAlgosAlgoAnglePoints

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, B, C);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, A, B, C, orientation);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
           withOrgGeogebraCommonKernelAlgosAlgoAnglePolygon:(OrgGeogebraCommonKernelAlgosAlgoAnglePolygon *)algoAnglePoly
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelAlgosAlgoAnglePolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, algoAnglePoly, A, B, C);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, A, B, C, orientation);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, A, B, C);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgoAnglePoints *)copy__ {
  return [new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(An_)) copy__], [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(Bn_)) copy__], [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(Cn_)) copy__]) autorelease];
}

- (void)compute {
  OrgGeogebraCommonKernelGeosGeoPoint *A = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(An_, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  OrgGeogebraCommonKernelGeosGeoPoint *B = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(Bn_, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  OrgGeogebraCommonKernelGeosGeoPoint *C = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(Cn_, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  if (![((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A)) isFinite] || ![((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(B)) isFinite] || ![((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(C)) isFinite]) {
    [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(angle_)) setUndefined];
    return;
  }
  bx_ = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(B))->inhomX_;
  by_ = B->inhomY_;
  vx_ = A->inhomX_ - bx_;
  vy_ = A->inhomY_ - by_;
  wx_ = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(C))->inhomX_ - bx_;
  wy_ = C->inhomY_ - by_;
  if ((OrgGeogebraCommonKernelKernel_isZeroWithDouble_(vx_) && OrgGeogebraCommonKernelKernel_isZeroWithDouble_(vy_)) || (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(wx_) && OrgGeogebraCommonKernelKernel_isZeroWithDouble_(wy_))) {
    [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(angle_)) setUndefined];
    return;
  }
  jdouble det = vx_ * wy_ - vy_ * wx_;
  jdouble prod = vx_ * wx_ + vy_ * wy_;
  jdouble value = JavaLangMath_atan2WithDouble_withDouble_(det, prod);
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(angle_)) setValueWithDouble:value];
}

- (jint)getInputLengthForXML {
  return [self getInputLengthForXMLMayNeedXOYPlane];
}

- (jint)getInputLengthForCommandDescription {
  return [self getInputLengthForCommandDescriptionMayNeedXOYPlane];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getInputWithInt:(jint)i {
  return [self getInputMaybeXOYPlaneWithInt:i];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAnglePoints", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAnglePoints", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelAlgosAlgoAnglePolygon:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAnglePoints", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAnglePoints", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAnglePoints", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoAnglePoints", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAnglePoints", NULL, 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.algos.AlgoAnglePoints;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getInputLengthForXML", NULL, "I", 0x4, NULL, NULL },
    { "getInputLengthForCommandDescription", NULL, "I", 0x4, NULL, NULL },
    { "getInputWithInt:", "getInput", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoAnglePoints = { 2, "AlgoAnglePoints", "org.geogebra.common.kernel.algos", NULL, 0x1, 12, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoAnglePoints;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, A, B, C, nil);
}

OrgGeogebraCommonKernelAlgosAlgoAnglePoints *new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self = [OrgGeogebraCommonKernelAlgosAlgoAnglePoints alloc];
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, B, C);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, A, B, C, orientation);
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(self->angle_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoAnglePoints *new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self = [OrgGeogebraCommonKernelAlgosAlgoAnglePoints alloc];
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, A, B, C, orientation);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelAlgosAlgoAnglePolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelAlgosAlgoAnglePolygon *algoAnglePoly, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, A, B, C, nil);
  OrgGeogebraCommonKernelAlgosAlgoAnglePointsND_set_algoAnglePoly_(self, algoAnglePoly);
}

OrgGeogebraCommonKernelAlgosAlgoAnglePoints *new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelAlgosAlgoAnglePolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelAlgosAlgoAnglePolygon *algoAnglePoly, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self = [OrgGeogebraCommonKernelAlgosAlgoAnglePoints alloc];
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelAlgosAlgoAnglePolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, algoAnglePoly, A, B, C);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, A, B, C, nil);
}

OrgGeogebraCommonKernelAlgosAlgoAnglePoints *new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self = [OrgGeogebraCommonKernelAlgosAlgoAnglePoints alloc];
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePointsND_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  [self setInputWithOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  [self setInputOutput];
  [self compute];
}

OrgGeogebraCommonKernelAlgosAlgoAnglePoints *new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self = [OrgGeogebraCommonKernelAlgosAlgoAnglePoints alloc];
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, A, B, C, orientation);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self, OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePointsND_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
}

OrgGeogebraCommonKernelAlgosAlgoAnglePoints *new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self = [OrgGeogebraCommonKernelAlgosAlgoAnglePoints alloc];
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePointsND_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, ((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A)) toGeoElement]))->cons_, NO);
  OrgGeogebraCommonKernelAlgosAlgoAnglePointsND_set_An_(self, A);
  OrgGeogebraCommonKernelAlgosAlgoAnglePointsND_set_Bn_(self, B);
  OrgGeogebraCommonKernelAlgosAlgoAnglePointsND_set_Cn_(self, C);
}

OrgGeogebraCommonKernelAlgosAlgoAnglePoints *new_OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C) {
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints *self = [OrgGeogebraCommonKernelAlgosAlgoAnglePoints alloc];
  OrgGeogebraCommonKernelAlgosAlgoAnglePoints_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, A, B, C);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoAnglePoints)
