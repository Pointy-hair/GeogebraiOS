//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoSphereNDPointRadius.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_H_
#define _OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"

@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelKernelNDGeoQuadricND;
@protocol OrgGeogebraCommonKernelArithmeticNumberValue;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;
@protocol OrgGeogebraCommonKernelKernelNDGeoSegmentND;

#define OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_TYPE_RADIUS 0
#define OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_TYPE_SEGMENT 1

@interface OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius : OrgGeogebraCommonKernelAlgosAlgoElement

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r;

- (void)compute;

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getCenter;

- (OrgGeogebraCommonKernelGeosGeoElement *)getRadiusGeo;

- (OrgGeogebraCommonKernelKernelNDGeoQuadricND *)getSphereND;

- (void)setRadiusWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)newRadius;

#pragma mark Protected

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
            withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)rgeo;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
            withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment
                                                withBoolean:(jboolean)dummy;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r;

- (OrgGeogebraCommonKernelKernelNDGeoQuadricND *)createSphereNDWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons;

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getM;

- (OrgGeogebraCommonKernelGeosGeoElement *)getRGeo;

- (jint)getType;

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius, TYPE_RADIUS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius, TYPE_SEGMENT, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelArithmeticNumberValue> r);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segment, jboolean dummy);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelArithmeticNumberValue> r);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> rgeo);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius)

#endif // _OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_H_
