//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoPointOnPath.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/math/BigInteger.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/LocusEquation.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/PathNormalizer.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoPointOnPath.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/algos/EquationElementInterface.h"
#include "org/geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "org/geogebra/common/kernel/algos/SymbolicParameters.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersAlgo.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoSegment.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/prover/NoSymbolicParametersException.h"
#include "org/geogebra/common/kernel/prover/polynomial/Polynomial.h"
#include "org/geogebra/common/kernel/prover/polynomial/Variable.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelAlgosAlgoPointOnPath () {
 @public
  id<OrgGeogebraCommonKernelPath> path_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> param_;
  IOSObjectArray *polynomials_;
  IOSObjectArray *botanaPolynomials_;
  OrgGeogebraCommonKernelProverPolynomialVariable *variable_;
  IOSObjectArray *botanaVars_;
}

- (void)addIncidence;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPointOnPath, path_, id<OrgGeogebraCommonKernelPath>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPointOnPath, param_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPointOnPath, polynomials_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPointOnPath, botanaPolynomials_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPointOnPath, variable_, OrgGeogebraCommonKernelProverPolynomialVariable *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPointOnPath, botanaVars_, IOSObjectArray *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_addIncidence(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_compute(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoPointOnPath

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(self, cons, label, path, x, y);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y
                                                 withDouble:(jdouble)z {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_(self, cons, label, path, x, y, z);
  return self;
}

- (void)addIncidence {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_addIncidence(self);
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)param {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, path, x, y, param);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y
                                                 withDouble:(jdouble)z
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)param {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, path, x, y, z, param);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)param {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, path, x, y, param);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y
                                                 withDouble:(jdouble)z
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)param {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, path, x, y, z, param);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(self, cons, path, x, y);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y
                                                 withDouble:(jdouble)z
                                                withBoolean:(jboolean)addIncidence {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withBoolean_(self, cons, path, x, y, z, addIncidence);
  return self;
}

- (void)createPointWithOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                        withDouble:(jdouble)x
                                        withDouble:(jdouble)y
                                        withDouble:(jdouble)z {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_P_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_));
  [P_ setPathWithOrgGeogebraCommonKernelPath:path];
  [P_ setCoordsWithDouble:x withDouble:y withDouble:1.0];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Point();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_POINT;
}

- (void)setInputOutput {
  if (param_ == nil) {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelPath>) nil_chk(path_)) toGeoElement]);
  }
  else {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelPath>) nil_chk(path_)) toGeoElement]);
    IOSObjectArray_Set(input_, 1, [param_ toGeoElement]);
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  [self setDependencies];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getP {
  return P_;
}

- (id<OrgGeogebraCommonKernelPath>)getPath {
  return path_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"PointOnA" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 0))) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (jboolean)isChangeable {
  return param_ == nil;
}

- (OrgGeogebraCommonKernelAlgosSymbolicParameters *)getSymbolicParameters {
  return [new_OrgGeogebraCommonKernelAlgosSymbolicParameters_initWithOrgGeogebraCommonKernelAlgosSymbolicParametersAlgo_(self) autorelease];
}

- (void)getFreeVariablesWithJavaUtilHashSet:(JavaUtilHashSet *)variables {
  if ([IOSObjectArray_Get(nil_chk(input_), 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]]) {
    @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
  }
  if ([IOSObjectArray_Get(input_, 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) {
    [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) check_protocol_cast(IOSObjectArray_Get(input_, 0), @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo))))) getFreeVariablesWithJavaUtilHashSet:variables];
    if (variable_ == nil) {
      OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_variable_(self, new_OrgGeogebraCommonKernelProverPolynomialVariable_initWithOrgGeogebraCommonKernelGeosGeoElement_((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class])));
    }
    [((JavaUtilHashSet *) nil_chk(variables)) addWithId:variable_];
    return;
  }
  @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSIntArray *)getDegrees {
  if ([IOSObjectArray_Get(nil_chk(input_), 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]]) {
    @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
  }
  if ([IOSObjectArray_Get(input_, 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) {
    IOSIntArray *degreesLine = [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) check_protocol_cast(IOSObjectArray_Get(input_, 0), @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo))))) getDegrees];
    IOSIntArray *result = [IOSIntArray arrayWithLength:3];
    *IOSIntArray_GetRef(result, 0) = IOSIntArray_Get(nil_chk(degreesLine), 2) + 1;
    *IOSIntArray_GetRef(result, 1) = IOSIntArray_Get(degreesLine, 2) + 1;
    *IOSIntArray_GetRef(result, 2) = JavaLangMath_maxWithInt_withInt_(IOSIntArray_Get(degreesLine, 0) + 1, IOSIntArray_Get(degreesLine, 1) + 1);
    return result;
  }
  @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSObjectArray *)getExactCoordinatesWithJavaUtilHashMap:(JavaUtilHashMap *)values {
  if ([IOSObjectArray_Get(nil_chk(input_), 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]]) {
    @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
  }
  if ([IOSObjectArray_Get(input_, 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]] && variable_ != nil) {
    IOSObjectArray *exactCoordinates = [IOSObjectArray arrayWithLength:3 type:JavaMathBigInteger_class_()];
    IOSObjectArray *line = [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) check_protocol_cast(IOSObjectArray_Get(input_, 0), @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo))))) getExactCoordinatesWithJavaUtilHashMap:values];
    IOSObjectArray_Set(exactCoordinates, 0, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(nil_chk(line), 2))) multiplyWithJavaMathBigInteger:[((JavaUtilHashMap *) nil_chk(values)) getWithId:variable_]]);
    IOSObjectArray_Set(exactCoordinates, 1, [((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(line, 2))) multiplyWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(JavaMathBigInteger_get_ONE_())) subtractWithJavaMathBigInteger:[values getWithId:variable_]]]);
    IOSObjectArray_Set(exactCoordinates, 2, [((JavaMathBigInteger *) nil_chk([((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(line, 0))) multiplyWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk([values getWithId:variable_])) negate]])) addWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(IOSObjectArray_Get(line, 1))) multiplyWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk([values getWithId:variable_])) subtractWithJavaMathBigInteger:JavaMathBigInteger_get_ONE_()]]]);
    return exactCoordinates;
  }
  return nil;
}

- (IOSObjectArray *)getPolynomials {
  if (polynomials_ != nil) {
    return polynomials_;
  }
  if ([IOSObjectArray_Get(nil_chk(input_), 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]]) {
    @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
  }
  if ([path_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) {
    if (variable_ == nil) {
      OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_variable_(self, new_OrgGeogebraCommonKernelProverPolynomialVariable_initWithOrgGeogebraCommonKernelGeosGeoElement_((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class])));
    }
    OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_polynomials_(self, [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelProverPolynomialPolynomial_class_()]);
    IOSObjectArray *line = [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) check_protocol_cast(IOSObjectArray_Get(input_, 0), @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo))))) getPolynomials];
    IOSObjectArray_Set(polynomials_, 0, [((OrgGeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(nil_chk(line), 2))) multiplyWithOrgGeogebraCommonKernelProverPolynomialPolynomial:[new_OrgGeogebraCommonKernelProverPolynomialPolynomial_initWithOrgGeogebraCommonKernelProverPolynomialVariable_(variable_) autorelease]]);
    IOSObjectArray_Set(polynomials_, 1, [((OrgGeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(line, 2))) multiplyWithOrgGeogebraCommonKernelProverPolynomialPolynomial:[([new_OrgGeogebraCommonKernelProverPolynomialPolynomial_initWithInt_(1) autorelease]) subtractWithOrgGeogebraCommonKernelProverPolynomialPolynomial:[new_OrgGeogebraCommonKernelProverPolynomialPolynomial_initWithOrgGeogebraCommonKernelProverPolynomialVariable_(variable_) autorelease]]]);
    IOSObjectArray_Set(polynomials_, 2, [((OrgGeogebraCommonKernelProverPolynomialPolynomial *) nil_chk([((OrgGeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(line, 0))) multiplyWithOrgGeogebraCommonKernelProverPolynomialPolynomial:[([new_OrgGeogebraCommonKernelProverPolynomialPolynomial_initWithOrgGeogebraCommonKernelProverPolynomialVariable_(variable_) autorelease]) negate]])) addWithOrgGeogebraCommonKernelProverPolynomialPolynomial:[((OrgGeogebraCommonKernelProverPolynomialPolynomial *) nil_chk(IOSObjectArray_Get(line, 1))) multiplyWithOrgGeogebraCommonKernelProverPolynomialPolynomial:[([new_OrgGeogebraCommonKernelProverPolynomialPolynomial_initWithOrgGeogebraCommonKernelProverPolynomialVariable_(variable_) autorelease]) subtractWithOrgGeogebraCommonKernelProverPolynomialPolynomial:[new_OrgGeogebraCommonKernelProverPolynomialPolynomial_initWithInt_(1) autorelease]]]]);
    return polynomials_;
  }
  @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSObjectArray *)getBotanaPolynomialsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (botanaPolynomials_ != nil) {
    return botanaPolynomials_;
  }
  if (IOSObjectArray_Get(nil_chk(input_), 0) != nil && [IOSObjectArray_Get(input_, 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) {
    if (botanaVars_ == nil) {
      OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_botanaVars_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelProverPolynomialVariable_class_()]);
      IOSObjectArray_SetAndConsume(botanaVars_, 0, new_OrgGeogebraCommonKernelProverPolynomialVariable_initWithBoolean_(YES));
      IOSObjectArray_SetAndConsume(botanaVars_, 1, new_OrgGeogebraCommonKernelProverPolynomialVariable_init());
    }
    IOSObjectArray *fv = [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo>) check_protocol_cast(IOSObjectArray_Get(input_, 0), @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo))))) getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(input_, 0)];
    OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_botanaPolynomials_(self, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelProverPolynomialPolynomial_class_()]);
    IOSObjectArray_Set(botanaPolynomials_, 0, OrgGeogebraCommonKernelProverPolynomialPolynomial_collinearWithOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(nil_chk(fv), 0), IOSObjectArray_Get(fv, 1), IOSObjectArray_Get(fv, 2), IOSObjectArray_Get(fv, 3), IOSObjectArray_Get(nil_chk(botanaVars_), 0), IOSObjectArray_Get(botanaVars_, 1)));
    return botanaPolynomials_;
  }
  if (IOSObjectArray_Get(input_, 0) != nil && [IOSObjectArray_Get(input_, 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConic class]]) {
    if ([((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(IOSObjectArray_Get(input_, 0), [OrgGeogebraCommonKernelGeosGeoConic class])))) isCircle]) {
      if (botanaVars_ == nil) {
        OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_botanaVars_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelProverPolynomialVariable_class_()]);
        IOSObjectArray_SetAndConsume(botanaVars_, 0, new_OrgGeogebraCommonKernelProverPolynomialVariable_initWithBoolean_(YES));
        IOSObjectArray_SetAndConsume(botanaVars_, 1, new_OrgGeogebraCommonKernelProverPolynomialVariable_init());
      }
      IOSObjectArray *fv = [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo>) check_protocol_cast(IOSObjectArray_Get(input_, 0), @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo))))) getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(input_, 0)];
      OrgGeogebraCommonKernelAlgosAlgoPointOnPath_setAndConsume_botanaPolynomials_(self, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelProverPolynomialPolynomial_class_()]);
      IOSObjectArray_Set(botanaPolynomials_, 0, OrgGeogebraCommonKernelProverPolynomialPolynomial_equidistantWithOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_withOrgGeogebraCommonKernelProverPolynomialVariable_(IOSObjectArray_Get(nil_chk(fv), 2), IOSObjectArray_Get(fv, 3), IOSObjectArray_Get(fv, 0), IOSObjectArray_Get(fv, 1), IOSObjectArray_Get(nil_chk(botanaVars_), 0), IOSObjectArray_Get(botanaVars_, 1)));
      return botanaPolynomials_;
    }
  }
  @throw [new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init() autorelease];
}

- (IOSObjectArray *)getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return botanaVars_;
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return OrgGeogebraCommonKernelLocusEquation_eqnPointOnPathWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

- (void)dealloc {
  RELEASE_(path_);
  RELEASE_(P_);
  RELEASE_(param_);
  RELEASE_(polynomials_);
  RELEASE_(botanaPolynomials_);
  RELEASE_(variable_);
  RELEASE_(botanaVars_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelPath:withDouble:withDouble:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withDouble:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "addIncidence", NULL, "V", 0x2, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withDouble:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withDouble:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelPath:withDouble:withDouble:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withDouble:withBoolean:", "AlgoPointOnPath", NULL, 0x1, NULL, NULL },
    { "createPointWithOrgGeogebraCommonKernelPath:withDouble:withDouble:withDouble:", "createPoint", "V", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getP", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getPath", NULL, "Lorg.geogebra.common.kernel.Path;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "isChangeable", NULL, "Z", 0x1, NULL, NULL },
    { "getSymbolicParameters", NULL, "Lorg.geogebra.common.kernel.algos.SymbolicParameters;", 0x1, NULL, NULL },
    { "getFreeVariablesWithJavaUtilHashSet:", "getFreeVariables", "V", 0x1, "Lorg.geogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getDegrees", NULL, "[I", 0x1, "Lorg.geogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getExactCoordinatesWithJavaUtilHashMap:", "getExactCoordinates", "[Ljava.math.BigInteger;", 0x1, "Lorg.geogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getPolynomials", NULL, "[Lorg.geogebra.common.kernel.prover.polynomial.Polynomial;", 0x1, "Lorg.geogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getBotanaPolynomialsWithOrgGeogebraCommonKernelGeosGeoElement:", "getBotanaPolynomials", "[Lorg.geogebra.common.kernel.prover.polynomial.Polynomial;", 0x1, "Lorg.geogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:", "getBotanaVars", "[Lorg.geogebra.common.kernel.prover.polynomial.Variable;", 0x1, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lorg.geogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "path_", NULL, 0x2, "Lorg.geogebra.common.kernel.Path;", NULL, NULL,  },
    { "P_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "param_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "polynomials_", NULL, 0x2, "[Lorg.geogebra.common.kernel.prover.polynomial.Polynomial;", NULL, NULL,  },
    { "botanaPolynomials_", NULL, 0x2, "[Lorg.geogebra.common.kernel.prover.polynomial.Polynomial;", NULL, NULL,  },
    { "variable_", NULL, 0x2, "Lorg.geogebra.common.kernel.prover.polynomial.Variable;", NULL, NULL,  },
    { "botanaVars_", NULL, 0x2, "[Lorg.geogebra.common.kernel.prover.polynomial.Variable;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPointOnPath = { 2, "AlgoPointOnPath", "org.geogebra.common.kernel.algos", NULL, 0x1, 27, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoPointOnPath;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_(self, cons, label, path, x, y, 0);
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(self, cons, label, path, x, y);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withBoolean_(self, cons, path, x, y, z, YES);
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_(self, cons, label, path, x, y, z);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_addIncidence(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self) {
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(self->path_, [OrgGeogebraCommonKernelGeosGeoElement class]) withBoolean:NO];
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, path, x, y, 0, param);
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, path, x, y, param);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, path, x, y, z, param);
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, path, x, y, z, param);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, path, x, y, 0, param);
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, path, x, y, param);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_set_path_(self, path);
  [self createPointWithOrgGeogebraCommonKernelPath:path withDouble:x withDouble:y withDouble:z];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_set_param_(self, param);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_compute(self);
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_addIncidence(self);
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z, id<OrgGeogebraCommonKernelArithmeticNumberValue> param) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, path, x, y, z, param);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withBoolean_(self, cons, path, x, y, 0, YES);
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_(self, cons, path, x, y);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z, jboolean addIncidence) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons, addIncidence);
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_set_path_(self, path);
  [self createPointWithOrgGeogebraCommonKernelPath:path withDouble:x withDouble:y withDouble:z];
  [self setInputOutput];
  if (addIncidence) {
    OrgGeogebraCommonKernelAlgosAlgoPointOnPath_addIncidence(self);
  }
  else {
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) setEuclidianVisibleWithBoolean:NO];
  }
}

OrgGeogebraCommonKernelAlgosAlgoPointOnPath *new_OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withBoolean_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, jdouble x, jdouble y, jdouble z, jboolean addIncidence) {
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self = [OrgGeogebraCommonKernelAlgosAlgoPointOnPath alloc];
  OrgGeogebraCommonKernelAlgosAlgoPointOnPath_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withDouble_withDouble_withDouble_withBoolean_(self, cons, path, x, y, z, addIncidence);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPointOnPath_compute(OrgGeogebraCommonKernelAlgosAlgoPointOnPath *self) {
  if (self->param_ != nil) {
    OrgGeogebraCommonKernelPathParameter *pp = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) getPathParameter];
    [((OrgGeogebraCommonKernelPathParameter *) nil_chk(pp)) setTWithDouble:OrgGeogebraCommonKernelPathNormalizer_toParentPathParameterWithDouble_withDouble_withDouble_([self->param_ getDouble], [((id<OrgGeogebraCommonKernelPath>) nil_chk(self->path_)) getMinParameter], [self->path_ getMaxParameter])];
  }
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(self->input_), 0))) isDefined]) {
    [((id<OrgGeogebraCommonKernelPath>) nil_chk(self->path_)) pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->P_];
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) updateCoords];
  }
  else {
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPointOnPath)
