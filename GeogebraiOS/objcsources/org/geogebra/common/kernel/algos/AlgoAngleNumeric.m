//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoAngleNumeric.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoAngleNumeric.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"

@interface OrgGeogebraCommonKernelAlgosAlgoAngleNumeric () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *num_;
  OrgGeogebraCommonKernelGeosGeoAngle *angle_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAngleNumeric, num_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAngleNumeric, angle_, OrgGeogebraCommonKernelGeosGeoAngle *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_compute(OrgGeogebraCommonKernelAlgosAlgoAngleNumeric *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoAngleNumeric

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)num {
  OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, num);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Angle();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, num_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:angle_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)getAngle {
  return angle_;
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getNumber {
  return num_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoAngleNumeric", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getAngle", NULL, "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x1, NULL, NULL },
    { "getNumber", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "num_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "angle_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoAngle;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoAngleNumeric = { 2, "AlgoAngleNumeric", "org.geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoAngleNumeric;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelAlgosAlgoAngleNumeric *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *num) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->num_ = num;
  self->angle_ = new_OrgGeogebraCommonKernelGeosGeoAngle_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_compute(self);
  [self->angle_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoAngleNumeric *new_OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *num) {
  OrgGeogebraCommonKernelAlgosAlgoAngleNumeric *self = [OrgGeogebraCommonKernelAlgosAlgoAngleNumeric alloc];
  OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, num);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAngleNumeric_compute(OrgGeogebraCommonKernelAlgosAlgoAngleNumeric *self) {
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(self->angle_)) setValueWithDouble:((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_))->value_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoAngleNumeric)
