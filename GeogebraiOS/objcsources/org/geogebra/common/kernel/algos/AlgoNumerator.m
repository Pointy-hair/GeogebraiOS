//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoNumerator.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoNumerator.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionalNVar.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionNVar.h"

@interface OrgGeogebraCommonKernelAlgosAlgoNumerator () {
 @public
  id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f_;
  OrgGeogebraCommonKernelGeosGeoElement *g_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoNumerator, f_, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoNumerator, g_, OrgGeogebraCommonKernelGeosGeoElement *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoNumerator_compute(OrgGeogebraCommonKernelAlgosAlgoNumerator *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoNumerator

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
        withOrgGeogebraCommonKernelArithmeticFunctionalNVar:(id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>)f {
  OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(self, cons, label, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
        withOrgGeogebraCommonKernelArithmeticFunctionalNVar:(id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>)f {
  OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(self, cons, f);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Numerator();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(f_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:g_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResult {
  return g_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoNumerator_compute(self);
}

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getPartWithOrgGeogebraCommonKernelArithmeticExpressionValueArray:(IOSObjectArray *)node {
  return IOSObjectArray_Get(nil_chk(node), 0);
}

- (void)dealloc {
  RELEASE_(f_);
  RELEASE_(g_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticFunctionalNVar:", "AlgoNumerator", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticFunctionalNVar:", "AlgoNumerator", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getPartWithOrgGeogebraCommonKernelArithmeticExpressionValueArray:", "getPart", "Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoNumerator = { 2, "AlgoNumerator", "org.geogebra.common.kernel.algos", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoNumerator;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(OrgGeogebraCommonKernelAlgosAlgoNumerator *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f) {
  OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(self, cons, f);
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->g_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoNumerator *new_OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f) {
  OrgGeogebraCommonKernelAlgosAlgoNumerator *self = [OrgGeogebraCommonKernelAlgosAlgoNumerator alloc];
  OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(self, cons, label, f);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(OrgGeogebraCommonKernelAlgosAlgoNumerator *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoNumerator_set_f_(self, f);
  if ([f isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
    OrgGeogebraCommonKernelAlgosAlgoNumerator_setAndConsume_g_(self, new_OrgGeogebraCommonKernelGeosGeoFunction_initWithOrgGeogebraCommonKernelConstruction_(cons));
  }
  else {
    OrgGeogebraCommonKernelAlgosAlgoNumerator_setAndConsume_g_(self, new_OrgGeogebraCommonKernelGeosGeoFunctionNVar_initWithOrgGeogebraCommonKernelConstruction_(cons));
  }
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoNumerator_compute(self);
}

OrgGeogebraCommonKernelAlgosAlgoNumerator *new_OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticFunctionalNVar> f) {
  OrgGeogebraCommonKernelAlgosAlgoNumerator *self = [OrgGeogebraCommonKernelAlgosAlgoNumerator alloc];
  OrgGeogebraCommonKernelAlgosAlgoNumerator_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionalNVar_(self, cons, f);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoNumerator_compute(OrgGeogebraCommonKernelAlgosAlgoNumerator *self) {
  if (![((id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(self->f_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->g_)) setUndefined];
    return;
  }
  IOSObjectArray *numDen = [IOSObjectArray arrayWithLength:2 type:OrgGeogebraCommonKernelArithmeticExpressionValue_class_()];
  [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([self->f_ getFunctionExpression])) deepCopyWithOrgGeogebraCommonKernelKernel:self->kernel_])) wrap])) getFractionWithOrgGeogebraCommonKernelArithmeticExpressionValueArray:numDen withBoolean:NO];
  ;
  if (IOSObjectArray_Get(numDen, 1) == nil) {
    IOSObjectArray_SetAndConsume(numDen, 1, new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, 1));
  }
  id<OrgGeogebraCommonKernelArithmeticExpressionValue> ev = [self getPartWithOrgGeogebraCommonKernelArithmeticExpressionValueArray:numDen];
  if ([((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(ev)) isExpressionNode]) {
    if ([self->f_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
      OrgGeogebraCommonKernelArithmeticFunction *fun = [new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_((OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast(ev, [OrgGeogebraCommonKernelArithmeticExpressionNode class]), IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelArithmeticFunctionNVar *) nil_chk([self->f_ getFunction])) getFunctionVariables]), 0)) autorelease];
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:fun];
    }
    else {
      OrgGeogebraCommonKernelArithmeticFunctionNVar *fun = [new_OrgGeogebraCommonKernelArithmeticFunctionNVar_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariableArray_((OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast(ev, [OrgGeogebraCommonKernelArithmeticExpressionNode class]), [((OrgGeogebraCommonKernelArithmeticFunctionNVar *) nil_chk([self->f_ getFunction])) getFunctionVariables]) autorelease];
      [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(self->g_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunctionNVar:fun];
    }
  }
  else if ([ev isKindOfClass:[OrgGeogebraCommonKernelArithmeticFunctionVariable class]]) {
    if ([self->f_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
      OrgGeogebraCommonKernelArithmeticFunctionVariable *fv = [new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self->kernel_) autorelease];
      OrgGeogebraCommonKernelArithmeticExpressionNode *en = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, fv) autorelease];
      OrgGeogebraCommonKernelArithmeticFunction *tempFun = [new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_(en, fv) autorelease];
      [tempFun initFunction];
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:tempFun];
    }
    else {
      OrgGeogebraCommonKernelGeosGeoFunctionNVar *ff = ((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(self->f_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class]));
      OrgGeogebraCommonKernelArithmeticFunctionNVar *fun = [ff getFunction];
      IOSObjectArray *vars = [((OrgGeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(fun)) getFunctionVariables];
      OrgGeogebraCommonKernelArithmeticExpressionNode *en = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, ev) autorelease];
      OrgGeogebraCommonKernelArithmeticFunctionNVar *newFun = [new_OrgGeogebraCommonKernelArithmeticFunctionNVar_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariableArray_(en, vars) autorelease];
      [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(self->g_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunctionNVar:newFun];
    }
  }
  else if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:ev]) {
    if ([self->f_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
      OrgGeogebraCommonKernelArithmeticFunctionVariable *fv = [new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self->kernel_) autorelease];
      OrgGeogebraCommonKernelArithmeticExpressionNode *en = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(ev, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))) getDouble]) autorelease]) autorelease];
      OrgGeogebraCommonKernelArithmeticFunction *tempFun = [new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_(en, fv) autorelease];
      [tempFun initFunction];
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->g_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:tempFun];
    }
    else {
      OrgGeogebraCommonKernelGeosGeoFunctionNVar *ff = ((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(self->f_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class]));
      OrgGeogebraCommonKernelArithmeticFunctionNVar *fun = [ff getFunction];
      IOSObjectArray *vars = [((OrgGeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(fun)) getFunctionVariables];
      OrgGeogebraCommonKernelArithmeticExpressionNode *en = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, ev) autorelease];
      OrgGeogebraCommonKernelArithmeticFunctionNVar *newFun = [new_OrgGeogebraCommonKernelArithmeticFunctionNVar_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariableArray_(en, vars) autorelease];
      [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(self->g_, [OrgGeogebraCommonKernelGeosGeoFunctionNVar class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunctionNVar:newFun];
    }
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->g_)) setUndefined];
    return;
  }
  [((id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>) check_protocol_cast(self->g_, @protocol(OrgGeogebraCommonKernelArithmeticFunctionalNVar))))) setDefinedWithBoolean:YES];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoNumerator)
