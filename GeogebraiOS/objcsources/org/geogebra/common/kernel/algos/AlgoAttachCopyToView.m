//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoAttachCopyToView.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/MatrixTransformable.h"
#include "org/geogebra/common/kernel/algos/AlgoAttachCopyToView.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoTransformation.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoConicPart.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoPoly.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/settings/EuclidianSettings.h"
#include "org/geogebra/common/main/settings/Settings.h"
#include "org/geogebra/common/util/MyMath.h"

@interface OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView () {
 @public
  id<OrgGeogebraCommonKernelMatrixTransformable> out_;
  OrgGeogebraCommonKernelGeosGeoElement *inGeo_, *outGeo_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> viewID_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner1_, corner3_, screenCorner1_, screenCorner3_;
}

- (void)transformFunctionWithDouble:(jdouble)d
                         withDouble:(jdouble)e
                         withDouble:(jdouble)f
                         withDouble:(jdouble)g;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, out_, id<OrgGeogebraCommonKernelMatrixTransformable>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, inGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, outGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, viewID_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, corner1_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, corner3_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, screenCorner1_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView, screenCorner3_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self, jdouble d, jdouble e, jdouble f, jdouble g);

@implementation OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)inArg
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)viewID
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)corner1
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)corner3
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)screenCorner1
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)screenCorner3 {
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)inArg
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)viewID
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)corner1
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)corner3
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)screenCorner1
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)screenCorner3 {
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_AttachCopyToView();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:6 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, inGeo_);
  (void) IOSObjectArray_Set(input_, 1, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(viewID_)) toGeoElement]);
  (void) IOSObjectArray_Set(input_, 2, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner1_)) toGeoElement]);
  (void) IOSObjectArray_Set(input_, 3, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner3_)) toGeoElement]);
  (void) IOSObjectArray_Set(input_, 4, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(screenCorner1_)) toGeoElement]);
  (void) IOSObjectArray_Set(input_, 5, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(screenCorner3_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:outGeo_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResult {
  return outGeo_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(self);
}

- (void)transformFunctionWithDouble:(jdouble)d
                         withDouble:(jdouble)e
                         withDouble:(jdouble)f
                         withDouble:(jdouble)g {
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(self, d, e, f, g);
}

- (void)setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g2 {
  inGeo_ = g;
  outGeo_ = g2;
  if (!([out_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoList class]]) && ([OrgGeogebraCommonKernelMatrixTransformable_class_() isInstance:outGeo_])) {
    out_ = (id<OrgGeogebraCommonKernelMatrixTransformable>) check_protocol_cast(outGeo_, @protocol(OrgGeogebraCommonKernelMatrixTransformable));
  }
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResultTemplateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if ([geo isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
    return new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(cons_);
  }
  return [super getResultTemplateWithOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)transformLimitedPathWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b {
  if (!([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConicPart class]])) {
    [super transformLimitedPathWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b];
  }
  else {
    [super transformLimitedConicWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b];
  }
}

- (void)setEVWithInt:(jint)viewID2 {
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 1))) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  viewID_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(cons_, viewID2);
  (void) IOSObjectArray_Set(input_, 1, [viewID_ toGeoElement]);
}

- (jdouble)getAreaScaleFactor {
  return 1;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAttachCopyToView", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoAttachCopyToView", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "transformFunctionWithDouble:withDouble:withDouble:withDouble:", "transformFunction", "V", 0x2, NULL, NULL },
    { "setTransformedObjectWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "setTransformedObject", "V", 0x4, NULL, NULL },
    { "getResultTemplateWithOrgGeogebraCommonKernelGeosGeoElement:", "getResultTemplate", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "transformLimitedPathWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "transformLimitedPath", "V", 0x4, NULL, NULL },
    { "setEVWithInt:", "setEV", "V", 0x1, NULL, NULL },
    { "getAreaScaleFactor", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "out_", NULL, 0x2, "Lorg.geogebra.common.kernel.MatrixTransformable;", NULL, NULL,  },
    { "inGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "outGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "viewID_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "corner1_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "corner3_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "screenCorner1_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "screenCorner3_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView = { 2, "AlgoAttachCopyToView", "org.geogebra.common.kernel.algos", NULL, 0x1, 12, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *inArg, id<OrgGeogebraCommonKernelArithmeticNumberValue> viewID, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner3, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  (void) OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *new_OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *inArg, id<OrgGeogebraCommonKernelArithmeticNumberValue> viewID, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner3, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self = [OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView alloc];
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoElement *inArg, id<OrgGeogebraCommonKernelArithmeticNumberValue> viewID, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner3, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  (void) OrgGeogebraCommonKernelAlgosAlgoTransformation_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->viewID_ = viewID;
  self->corner1_ = corner1;
  self->corner3_ = corner3;
  self->screenCorner1_ = screenCorner1;
  self->screenCorner3_ = screenCorner3;
  self->inGeo_ = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(inArg)) toGeoElement];
  if (([OrgGeogebraCommonKernelGeosGeoPoly_class_() isInstance:self->inGeo_]) || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->inGeo_)) isLimitedPath]) {
    self->outGeo_ = [inArg copyInternalWithOrgGeogebraCommonKernelConstruction:cons];
    self->out_ = (id<OrgGeogebraCommonKernelMatrixTransformable>) check_protocol_cast(self->outGeo_, @protocol(OrgGeogebraCommonKernelMatrixTransformable));
  }
  else if ([self->inGeo_ isGeoList]) {
    self->outGeo_ = new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons);
  }
  else if ([self->inGeo_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
    self->outGeo_ = [self->inGeo_ copy__];
  }
  else {
    self->out_ = (id<OrgGeogebraCommonKernelMatrixTransformable>) check_protocol_cast([self->inGeo_ copy__], @protocol(OrgGeogebraCommonKernelMatrixTransformable));
    self->outGeo_ = [((id<OrgGeogebraCommonKernelMatrixTransformable>) nil_chk(self->out_)) toGeoElement];
  }
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(self);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithOrgGeogebraCommonKernelEuclidianViewCE:self];
}

OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *new_OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoElement *inArg, id<OrgGeogebraCommonKernelArithmeticNumberValue> viewID, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> corner3, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> screenCorner3) {
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self = [OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView alloc];
  OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, inArg, viewID, corner1, corner3, screenCorner1, screenCorner3);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_compute(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self) {
  jint view = J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->viewID_)) getDouble]);
  OrgGeogebraCommonMainSettingsEuclidianSettings *ev = nil;
  if (view == 1 || view == 2) {
    ev = [((OrgGeogebraCommonMainSettingsSettings *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication])) getSettings])) getEuclidianWithInt:view];
  }
  if (ev == nil && view != 0) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) setUndefined];
    return;
  }
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->inGeo_)) isGeoList]) {
    [self transformListWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(self->inGeo_, [OrgGeogebraCommonKernelGeosGeoList class]) withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(self->outGeo_, [OrgGeogebraCommonKernelGeosGeoList class])];
    return;
  }
  if ([self->inGeo_ isGeoFunction]) {
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) setWithOrgGeogebraCommonKernelGeosGeoElement:self->inGeo_];
  }
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->outGeo_)) isDefined]) {
    return;
  }
  if (view == 0) return;
  OrgGeogebraCommonKernelGeosGeoPoint *c1 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->corner1_, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  OrgGeogebraCommonKernelGeosGeoPoint *c3 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->corner3_, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  OrgGeogebraCommonKernelGeosGeoPoint *c5 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->screenCorner1_, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  OrgGeogebraCommonKernelGeosGeoPoint *c7 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->screenCorner3_, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  jdouble c1x = [((OrgGeogebraCommonMainSettingsEuclidianSettings *) nil_chk(ev)) toRealWorldCoordXWithDouble:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(c5)) getX] / [c5 getZ]];
  jdouble c1y = [ev toRealWorldCoordYWithDouble:[c5 getY] / [c5 getZ]];
  jdouble c3x = [ev toRealWorldCoordXWithDouble:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(c7)) getX] / [c7 getZ]];
  jdouble c3y = [ev toRealWorldCoordYWithDouble:[c7 getY] / [c7 getZ]];
  IOSObjectArray *m1 = OrgGeogebraCommonUtilMyMath_adjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(c1)) getX] / [c1 getZ], [c1 getY] / [c1 getZ], 1, [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(c3)) getX] / [c3 getZ], [c3 getY] / [c3 getZ], 1, [c1 getX] / [c1 getZ], [c3 getY] / [c3 getZ], 1);
  IOSObjectArray *m2 = [IOSObjectArray newArrayWithObjects:(id[]){ [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ c1x, c3x, c1x } count:3], [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ c1y, c3y, c3y } count:3], [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 1, 1, 1 } count:3] } count:3 type:IOSClass_doubleArray(1)];
  IOSObjectArray *m = OrgGeogebraCommonUtilMyMath_multiplyWithDoubleArray2_withDoubleArray2_(m2, m1);
  if (!([self->inGeo_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]])) {
    [((id<OrgGeogebraCommonKernelMatrixTransformable>) nil_chk(self->out_)) matrixTransformWithDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m), 0)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 0)), 1) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 0)), 2) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 1) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 2) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 0) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 1) withDouble:IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2)];
    [self->outGeo_ updateCascade];
  }
  else {
    OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(self, IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m), 0)), 0) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 0)), 2) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 1) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 1)), 2) / IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m, 2)), 2));
  }
}

void OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView_transformFunctionWithDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *self, jdouble d, jdouble e, jdouble f, jdouble g) {
  OrgGeogebraCommonKernelArithmeticFunction *fun = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->inGeo_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) getFunction];
  OrgGeogebraCommonKernelArithmeticExpressionNode *expr = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(fun)) getExpression])) getCopyWithOrgGeogebraCommonKernelKernel:self->kernel_];
  expr = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(expr)) replaceWithOrgGeogebraCommonKernelArithmeticExpressionValue:[fun getFunctionVariable] withOrgGeogebraCommonKernelArithmeticExpressionValue:[((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, [fun getFunctionVariable]) multiplyWithDouble:1 / d])) plusWithDouble:-e / d]])) wrap];
  OrgGeogebraCommonKernelArithmeticFunction *fun2 = new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(expr)) multiplyWithDouble:f])) plusWithDouble:g], [fun getFunctionVariable]);
  [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->outGeo_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:fun2];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView)
