//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoIntervalAbstract.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoIntervalAbstract.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoInterval.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"

@implementation OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                 withOrgGeogebraCommonKernelGeosGeoInterval:(OrgGeogebraCommonKernelGeosGeoInterval *)interval {
  OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoInterval_(self, cons, label, interval);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                 withOrgGeogebraCommonKernelGeosGeoInterval:(OrgGeogebraCommonKernelGeosGeoInterval *)interval {
  OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoInterval_(self, cons, interval);
  return self;
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, interval_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:result_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return result_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoInterval:", "AlgoIntervalAbstract", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoInterval:", "AlgoIntervalAbstract", NULL, 0x0, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "interval_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoInterval;", NULL, NULL,  },
    { "result_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract = { 2, "AlgoIntervalAbstract", "org.geogebra.common.kernel.algos", NULL, 0x401, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoInterval_(OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoInterval *interval) {
  (void) OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoInterval_(self, cons, interval);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoInterval_(OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoInterval *interval) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->interval_ = interval;
  self->result_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  [self compute];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoIntervalAbstract)
