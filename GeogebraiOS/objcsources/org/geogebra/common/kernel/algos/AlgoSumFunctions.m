//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoSumFunctions.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoSumFunctions.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionable.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"

@interface OrgGeogebraCommonKernelAlgosAlgoSumFunctions () {
 @public
  OrgGeogebraCommonKernelGeosGeoList *geoList_;
  OrgGeogebraCommonKernelGeosGeoNumeric *truncate_;
  OrgGeogebraCommonKernelGeosGeoFunction *resultFun_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoSumFunctions, geoList_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoSumFunctions, truncate_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoSumFunctions, resultFun_, OrgGeogebraCommonKernelGeosGeoFunction *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoSumFunctions_compute(OrgGeogebraCommonKernelAlgosAlgoSumFunctions *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoSumFunctions

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Sum();
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList {
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)truncate {
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, truncate);
  return self;
}

- (void)setInputOutput {
  if (truncate_ == nil) {
    input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, geoList_);
  }
  else {
    input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, geoList_);
    (void) IOSObjectArray_Set(input_, 1, truncate_);
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:resultFun_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResult {
  return resultFun_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoSumFunctions", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoSumFunctions", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoList_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "truncate_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "resultFun_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoSumFunctions = { 2, "AlgoSumFunctions", "org.geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoSumFunctions;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelAlgosAlgoSumFunctions *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList) {
  (void) OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, nil);
}

OrgGeogebraCommonKernelAlgosAlgoSumFunctions *new_OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList) {
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions *self = [OrgGeogebraCommonKernelAlgosAlgoSumFunctions alloc];
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelAlgosAlgoSumFunctions *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList, OrgGeogebraCommonKernelGeosGeoNumeric *truncate) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->geoList_ = geoList;
  self->truncate_ = truncate;
  self->resultFun_ = new_OrgGeogebraCommonKernelGeosGeoFunction_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions_compute(self);
  [self->resultFun_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoSumFunctions *new_OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList, OrgGeogebraCommonKernelGeosGeoNumeric *truncate) {
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions *self = [OrgGeogebraCommonKernelAlgosAlgoSumFunctions alloc];
  OrgGeogebraCommonKernelAlgosAlgoSumFunctions_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, truncate);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoSumFunctions_compute(OrgGeogebraCommonKernelAlgosAlgoSumFunctions *self) {
  jint n = self->truncate_ == nil ? [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) size] : J2ObjCFpToInt([self->truncate_ getDouble]);
  if (n == 0 || n > [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) size]) {
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->resultFun_)) setUndefined];
    return;
  }
  else if (n == 1) {
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->geoList_ getWithInt:0])) isGeoFunctionable]) {
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->resultFun_)) setUndefined];
      return;
    }
    OrgGeogebraCommonKernelGeosGeoFunction *fun1 = [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast([self->geoList_ getWithInt:0], @protocol(OrgGeogebraCommonKernelGeosGeoFunctionable))))) getGeoFunction];
    OrgGeogebraCommonKernelArithmeticFunctionVariable *x1 = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(fun1)) getFunction])) getFunctionVariable];
    OrgGeogebraCommonKernelArithmeticFunctionVariable *x = new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self->kernel_);
    OrgGeogebraCommonKernelArithmeticExpressionNode *left = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([fun1 getFunctionExpression])) getCopyWithOrgGeogebraCommonKernelKernel:[fun1 getKernel]];
    OrgGeogebraCommonKernelArithmeticFunction *f = new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_([((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(left)) replaceWithOrgGeogebraCommonKernelArithmeticExpressionValue:x1 withOrgGeogebraCommonKernelArithmeticExpressionValue:x])) wrap], x);
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->resultFun_)) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:f];
    [self->resultFun_ setDefinedWithBoolean:YES];
    return;
  }
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) getWithInt:0])) isGeoFunctionable] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->geoList_ getWithInt:1])) isGeoFunctionable]) {
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->resultFun_)) setUndefined];
    return;
  }
  self->resultFun_ = OrgGeogebraCommonKernelGeosGeoFunction_addWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_(self->resultFun_, [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast([self->geoList_ getWithInt:0], @protocol(OrgGeogebraCommonKernelGeosGeoFunctionable))))) getGeoFunction], [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast([self->geoList_ getWithInt:1], @protocol(OrgGeogebraCommonKernelGeosGeoFunctionable))))) getGeoFunction]);
  if (n == 2) return;
  for (jint i = 2; i < n; i++) {
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->geoList_ getWithInt:i])) isGeoFunctionable]) {
      [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->resultFun_)) setUndefined];
      return;
    }
    self->resultFun_ = OrgGeogebraCommonKernelGeosGeoFunction_addWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_(self->resultFun_, self->resultFun_, [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast([self->geoList_ getWithInt:i], @protocol(OrgGeogebraCommonKernelGeosGeoFunctionable))))) getGeoFunction]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoSumFunctions)
