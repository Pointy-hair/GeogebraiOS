//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoGeoPointsFunction.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/Arrays.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoGeoPointsFunction.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"

@interface OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction () {
 @public
  IOSObjectArray *labels_;
  jboolean initLabels_;
}

- (void)removePointWithInt:(jint)pos;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction, labels_, IOSObjectArray *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_removePointWithInt_(OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction *self, jint pos);

@implementation OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
                                                withBoolean:(jboolean)setLabels
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withBoolean_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, labels, setLabels, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, f);
  return self;
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels {
  self->labels_ = labels;
  setLabels__ = YES;
  if (labels != nil) [self initPointsWithInt:labels->size_];
  [self update];
}

- (IOSObjectArray *)getPoints {
  return points_;
}

- (void)showOneRootInAlgebraView {
  if (![((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(points_), 0))) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, 0))) setCoordsWithDouble:0 withDouble:0 withDouble:1];
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, 0))) update];
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, 0))) setUndefined];
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, 0))) update];
  }
}

+ (void)removeDuplicatesWithDoubleArray:(IOSDoubleArray *)tab {
  OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_removeDuplicatesWithDoubleArray_(tab);
}

- (void)setPointsWithDoubleArray:(IOSDoubleArray *)curXValues
                         withInt:(jint)number {
  [self initPointsWithInt:number];
  for (jint i = 0; i < number; i++) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(points_), i))) setCoordsWithDouble:IOSDoubleArray_Get(nil_chk(curXValues), i) withDouble:[self yAtWithDouble:IOSDoubleArray_Get(curXValues, i)] withDouble:1.0];
  }
  for (jint i = number; i < ((IOSObjectArray *) nil_chk(points_))->size_; i++) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, i))) setUndefined];
  }
  if (setLabels__) [self updateLabelsWithInt:number];
  [self noUndefinedPointsInAlgebraViewWithOrgGeogebraCommonKernelGeosGeoPointArray:points_];
}

- (jdouble)yAtWithDouble:(jdouble)d {
  return [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(f_)) evaluateWithDouble:d];
}

- (void)updateLabelsWithInt:(jint)number {
  if (initLabels_) {
    OrgGeogebraCommonKernelGeosGeoElement_setLabelsWithNSStringArray_withOrgGeogebraCommonKernelGeosGeoElementArray_(labels_, points_);
    initLabels_ = NO;
  }
  else {
    for (jint i = 0; i < number; i++) {
      if (![((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(points_), i))) isLabelSet]) {
        NSString *newLabel = (labels_ != nil && i < labels_->size_) ? IOSObjectArray_Get(labels_, i) : nil;
        [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, i))) setLabelWithNSString:newLabel];
      }
    }
  }
  for (jint i = number; i < ((IOSObjectArray *) nil_chk(points_))->size_; i++) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, i))) setUndefined];
  }
}

- (void)noUndefinedPointsInAlgebraViewWithOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)gpts {
  for (jint i = 1; i < ((IOSObjectArray *) nil_chk(gpts))->size_; i++) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(gpts, i))) showUndefinedInAlgebraViewWithBoolean:NO];
  }
}

- (void)removeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)output {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(points_))->size_; i++) {
    if (IOSObjectArray_Get(points_, i) == output && ![((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points_, i))) isDefined]) {
      OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_removePointWithInt_(self, i);
      return;
    }
  }
  [super remove];
}

- (void)initPointsWithInt:(jint)number {
  if (((IOSObjectArray *) nil_chk(points_))->size_ < number) {
    IOSObjectArray *temp = [IOSObjectArray newArrayWithLength:number type:OrgGeogebraCommonKernelGeosGeoPoint_class_()];
    for (jint i = 0; i < points_->size_; i++) {
      (void) IOSObjectArray_Set(temp, i, IOSObjectArray_Get(points_, i));
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(temp, i))) setCoordsWithDouble:0 withDouble:0 withDouble:1];
    }
    for (jint i = points_->size_; i < temp->size_; i++) {
      (void) IOSObjectArray_Set(temp, i, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_));
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(temp, i))) setCoordsWithDouble:0 withDouble:0 withDouble:1];
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(temp, i))) setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
    }
    points_ = temp;
    [super setOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:points_];
  }
}

- (void)removePointWithInt:(jint)pos {
  OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_removePointWithInt_(self, pos);
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withBoolean:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoGeoPointsFunction", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoGeoPointsFunction", NULL, 0x1, NULL, NULL },
    { "setLabelsWithNSStringArray:", "setLabels", "V", 0x1, NULL, NULL },
    { "getPoints", NULL, "[Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "showOneRootInAlgebraView", NULL, "V", 0x14, NULL, NULL },
    { "removeDuplicatesWithDoubleArray:", "removeDuplicates", "V", 0x1c, NULL, NULL },
    { "setPointsWithDoubleArray:withInt:", "setPoints", "V", 0x14, NULL, NULL },
    { "yAtWithDouble:", "yAt", "D", 0x4, NULL, NULL },
    { "updateLabelsWithInt:", "updateLabels", "V", 0x4, NULL, NULL },
    { "noUndefinedPointsInAlgebraViewWithOrgGeogebraCommonKernelGeosGeoPointArray:", "noUndefinedPointsInAlgebraView", "V", 0x4, NULL, NULL },
    { "removeWithOrgGeogebraCommonKernelGeosGeoElement:", "remove", "V", 0x1, NULL, NULL },
    { "initPointsWithInt:", "initPoints", "V", 0x4, NULL, NULL },
    { "removePointWithInt:", "removePoint", "V", 0x2, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoGeoPointsFunction", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "points_", NULL, 0x4, "[Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "labels_", NULL, 0x2, "[Ljava.lang.String;", NULL, NULL,  },
    { "initLabels_", NULL, 0x2, "Z", NULL, NULL,  },
    { "setLabels__", "setLabels", 0x4, "Z", NULL, NULL,  },
    { "numberOfXValues_", NULL, 0x0, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction = { 2, "AlgoGeoPointsFunction", "org.geogebra.common.kernel.algos", NULL, 0x401, 14, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withBoolean_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, jboolean setLabels, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->setLabels__ = NO;
  self->labels_ = labels;
  self->setLabels__ = setLabels;
  self->f_ = f;
  jint number = labels == nil ? 1 : JavaLangMath_maxWithInt_withInt_(1, labels->size_);
  self->points_ = [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonKernelGeosGeoPoint_class_()];
  [self initPointsWithInt:number];
  self->initLabels_ = YES;
}

void OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->setLabels__ = NO;
  self->f_ = f;
  jint number = 1;
  self->points_ = [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonKernelGeosGeoPoint_class_()];
  [self initPointsWithInt:number];
}

void OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_removeDuplicatesWithDoubleArray_(IOSDoubleArray *tab) {
  OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_initialize();
  JavaUtilArrays_sortWithDoubleArray_(tab);
  jint maxIndex = 0;
  jdouble max = IOSDoubleArray_Get(nil_chk(tab), 0);
  for (jint i = 1; i < tab->size_; i++) {
    if ((IOSDoubleArray_Get(tab, i) - max) > OrgGeogebraCommonKernelKernel_MIN_PRECISION) {
      max = IOSDoubleArray_Get(tab, i);
      maxIndex++;
      *IOSDoubleArray_GetRef(tab, maxIndex) = max;
    }
  }
}

void OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_removePointWithInt_(OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction *self, jint pos) {
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(self->points_), pos))) doRemove];
  IOSObjectArray *temp = [IOSObjectArray newArrayWithLength:self->points_->size_ - 1 type:OrgGeogebraCommonKernelGeosGeoPoint_class_()];
  jint i;
  for (i = 0; i < pos; i++) (void) IOSObjectArray_Set(temp, i, IOSObjectArray_Get(self->points_, i));
  for (i = pos + 1; i < self->points_->size_; i++) (void) IOSObjectArray_Set(temp, i - 1, IOSObjectArray_Get(self->points_, i));
  self->points_ = temp;
}

void OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction *self, OrgGeogebraCommonKernelConstruction *cons) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->setLabels__ = NO;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoGeoPointsFunction)
