//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoRootsPolynomialInterval.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval_H_
#define _OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoRootsPolynomial.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoFunction;

@interface OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval : OrgGeogebraCommonKernelAlgosAlgoRootsPolynomial

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f;

- (void)compute;

#pragma mark Protected

- (void)computeRoots;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoFunction *f);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval *new_OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoFunction *f) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval)

#endif // _OrgGeogebraCommonKernelAlgosAlgoRootsPolynomialInterval_H_
