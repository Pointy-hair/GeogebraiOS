//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoDrawingPadCorner.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/EuclidianViewInterfaceSlim.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoDrawingPadCorner.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/App.h"

@implementation OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)number
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)evNum
                                                 withDouble:(jdouble)absCorner {
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(self, cons, label, number, evNum, absCorner);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)number
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)evNum {
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, number, evNum);
  return self;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return [new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Corner();
}

- (void)setInputOutput {
  if (evNum_ == nil) {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(number_)) toGeoElement]);
  }
  else {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, [evNum_ toGeoElement]);
    IOSObjectArray_Set(input_, 1, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(number_)) toGeoElement]);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(corner_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  [self setDependencies];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getCorner {
  return corner_;
}

- (void)compute {
  id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim> ev;
  OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) getApplication];
  if (evNum_ == nil || [evNum_ getDouble] == 1.0) ev = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getEuclidianView1];
  else {
    if (![((OrgGeogebraCommonMainApp *) nil_chk(app)) hasEuclidianView2WithInt:1]) {
      [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setUndefined];
      return;
    }
    ev = [app getEuclidianView2WithInt:1];
  }
  jdouble xmax = [ev toRealWorldCoordXWithDouble:(jdouble) ([((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim>) nil_chk(ev)) getWidth]) + 1];
  jdouble ymin = [ev toRealWorldCoordYWithDouble:(jdouble) ([ev getHeight]) + 1];
  jdouble zeroX = [ev toRealWorldCoordXWithDouble:-1];
  jdouble zeroY = [ev toRealWorldCoordYWithDouble:0 - 1];
  switch (J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(number_)) getDouble])) {
    case 1:
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:zeroX withDouble:ymin withDouble:1.0];
    break;
    case 2:
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:xmax withDouble:ymin withDouble:1.0];
    break;
    case 3:
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:xmax withDouble:zeroY withDouble:1.0];
    break;
    case 4:
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:zeroX withDouble:zeroY withDouble:1.0];
    break;
    case 5:
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[ev getWidth] withDouble:[ev getHeight] withDouble:1.0];
    break;
    case 6:
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((OrgGeogebraCommonMainApp *) nil_chk(app)) getWidth] withDouble:[app getHeight] withDouble:1.0];
    break;
    default:
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setUndefined];
    break;
  }
}

- (jboolean)euclidianViewUpdate {
  [self compute];
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) updateCascade];
  return NO;
}

- (void)dealloc {
  RELEASE_(corner_);
  RELEASE_(number_);
  RELEASE_(evNum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withDouble:", "AlgoDrawingPadCorner", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoDrawingPadCorner", NULL, 0x1, NULL, NULL },
    { "newGeoPointWithOrgGeogebraCommonKernelConstruction:", "newGeoPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCorner", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "corner_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "number_", NULL, 0x4, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "evNum_", NULL, 0x4, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner = { 2, "AlgoDrawingPadCorner", "org.geogebra.common.kernel.algos", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> number, id<OrgGeogebraCommonKernelArithmeticNumberValue> evNum, jdouble absCorner) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_set_number_(self, number);
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_set_evNum_(self, evNum);
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_set_corner_(self, [self newGeoPointWithOrgGeogebraCommonKernelConstruction:cons]);
  [self setInputOutput];
  [self compute];
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->corner_)) setEuclidianVisibleWithBoolean:NO];
  [self->corner_ setLabelWithNSString:label];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithOrgGeogebraCommonKernelEuclidianViewCE:self];
  if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(number)) getDouble], absCorner)) {
    [cons registerCorner5WithOrgGeogebraCommonKernelEuclidianViewCE:self];
  }
}

OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner *new_OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> number, id<OrgGeogebraCommonKernelArithmeticNumberValue> evNum, jdouble absCorner) {
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner *self = [OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner alloc];
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(self, cons, label, number, evNum, absCorner);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> number, id<OrgGeogebraCommonKernelArithmeticNumberValue> evNum) {
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(self, cons, label, number, evNum, 5);
}

OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner *new_OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> number, id<OrgGeogebraCommonKernelArithmeticNumberValue> evNum) {
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner *self = [OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner alloc];
  OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, number, evNum);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner)
