//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoExtremumPolynomialInterval.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoExtremumPolynomial.h"
#include "org/geogebra/common/kernel/algos/AlgoExtremumPolynomialInterval.h"
#include "org/geogebra/common/kernel/algos/AlgoRootsPolynomial.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"

@interface OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval () {
 @public
  OrgGeogebraCommonKernelArithmeticFunction *interval_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval, interval_, OrgGeogebraCommonKernelArithmeticFunction *)

@implementation OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, labels, f);
  return self;
}

- (void)compute {
  if ([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(f_)) isDefined]) {
    if (yValFunction_ == nil) {
      OrgGeogebraCommonKernelArithmeticFunctionVariable *fVar = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([f_ getFunction])) getFunctionVariable];
      OrgGeogebraCommonKernelAlgosAlgoRootsPolynomial_setAndConsume_yValFunction_(self, new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_((OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([f_ getFunctionExpression])) getRight], [OrgGeogebraCommonKernelArithmeticExpressionNode class]), fVar));
      OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval_setAndConsume_interval_(self, new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_((OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([f_ getFunctionExpression])) getLeft], [OrgGeogebraCommonKernelArithmeticExpressionNode class]), fVar));
    }
    [self calcRootsWithOrgGeogebraCommonKernelArithmeticFunction:yValFunction_ withInt:1];
  }
  else {
    curRealRoots_ = 0;
  }
  [self setRootPointsWithDoubleArray:curRoots_ withInt:curRealRoots_];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(rootPoints_))->size_; i++) {
    jdouble xCoord = [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(rootPoints_, i))) getInhomX];
    if (![((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(interval_)) evaluateBooleanWithDouble:xCoord]) {
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(rootPoints_, i))) setUndefined];
    }
  }
}

- (void)dealloc {
  RELEASE_(interval_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoExtremumPolynomialInterval", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "interval_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Function;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval = { 2, "AlgoExtremumPolynomialInterval", "org.geogebra.common.kernel.algos", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomial_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, labels, f);
}

OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval *new_OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval *self = [OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval alloc];
  OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, labels, f);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoExtremumPolynomialInterval)
