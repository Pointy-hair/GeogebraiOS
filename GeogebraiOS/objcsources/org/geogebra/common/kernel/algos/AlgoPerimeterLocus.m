//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoPerimeterLocus.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoPerimeterLocus.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLocus.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"

@interface OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus () {
 @public
  OrgGeogebraCommonKernelGeosGeoLocus *locus_;
  OrgGeogebraCommonKernelGeosGeoNumeric *circum_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus, locus_, OrgGeogebraCommonKernelGeosGeoLocus *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus, circum_, OrgGeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_compute(OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoLocus:(OrgGeogebraCommonKernelGeosGeoLocus *)locus {
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoLocus_(self, cons, label, locus);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoLocus:(OrgGeogebraCommonKernelGeosGeoLocus *)locus {
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLocus_(self, cons, locus);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Perimeter();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, locus_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:circum_];
  [self setDependencies];
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_compute(self);
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return circum_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoLocus:", "AlgoPerimeterLocus", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoLocus:", "AlgoPerimeterLocus", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "locus_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoLocus;", NULL, NULL,  },
    { "circum_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus = { 2, "AlgoPerimeterLocus", "org.geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoLocus_(OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoLocus *locus) {
  (void) OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLocus_(self, cons, locus);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->circum_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *new_OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoLocus_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoLocus *locus) {
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *self = [OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus alloc];
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoLocus_(self, cons, label, locus);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLocus_(OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoLocus *locus) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->locus_ = locus;
  self->circum_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_compute(self);
}

OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *new_OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLocus_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoLocus *locus) {
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *self = [OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus alloc];
  OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLocus_(self, cons, locus);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus_compute(OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus *self) {
  if (![((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(self->locus_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->circum_)) setUndefined];
    return;
  }
  JavaUtilArrayList *points = [self->locus_ getPoints];
  if ([((JavaUtilArrayList *) nil_chk(points)) size] < 2) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->circum_)) setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMyPoint *lastPoint = [points getWithInt:0];
  jdouble length = 0;
  for (jint i = 1; i < [points size]; i++) {
    OrgGeogebraCommonKernelMyPoint *pt = [points getWithInt:i];
    length = length + [((OrgGeogebraCommonKernelMyPoint *) nil_chk(pt)) distanceWithOrgGeogebraCommonKernelMyPoint:lastPoint];
    lastPoint = pt;
  }
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->circum_)) setValueWithDouble:length];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPerimeterLocus)
