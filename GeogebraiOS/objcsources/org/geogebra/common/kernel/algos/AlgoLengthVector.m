//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoLengthVector.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoLengthVector.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoVec3D.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/util/MyMath.h"

@interface OrgGeogebraCommonKernelAlgosAlgoLengthVector () {
 @public
  OrgGeogebraCommonKernelGeosGeoVec3D *v_;
  OrgGeogebraCommonKernelGeosGeoNumeric *num_;
  IOSDoubleArray *coords_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoLengthVector, v_, OrgGeogebraCommonKernelGeosGeoVec3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoLengthVector, num_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoLengthVector, coords_, IOSDoubleArray *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoLengthVector_compute(OrgGeogebraCommonKernelAlgosAlgoLengthVector *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoLengthVector

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoVec3D *)v {
  OrgGeogebraCommonKernelAlgosAlgoLengthVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVec3D_(self, cons, label, v);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Length();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, v_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:num_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getLength {
  return num_;
}

- (OrgGeogebraCommonKernelGeosGeoVec3D *)getv {
  return v_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoLengthVector_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"LengthOfA" withNSString:[((OrgGeogebraCommonKernelGeosGeoVec3D *) nil_chk(v_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoVec3D:", "AlgoLengthVector", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getLength", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getv", NULL, "Lorg.geogebra.common.kernel.geos.GeoVec3D;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "v_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoVec3D;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "coords_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoLengthVector = { 2, "AlgoLengthVector", "org.geogebra.common.kernel.algos", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoLengthVector;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoLengthVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVec3D_(OrgGeogebraCommonKernelAlgosAlgoLengthVector *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoVec3D *v) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->coords_ = [IOSDoubleArray newArrayWithLength:2];
  self->v_ = v;
  self->num_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoLengthVector_compute(self);
  [self->num_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoLengthVector *new_OrgGeogebraCommonKernelAlgosAlgoLengthVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVec3D_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoVec3D *v) {
  OrgGeogebraCommonKernelAlgosAlgoLengthVector *self = [OrgGeogebraCommonKernelAlgosAlgoLengthVector alloc];
  OrgGeogebraCommonKernelAlgosAlgoLengthVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVec3D_(self, cons, label, v);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoLengthVector_compute(OrgGeogebraCommonKernelAlgosAlgoLengthVector *self) {
  [((OrgGeogebraCommonKernelGeosGeoVec3D *) nil_chk(self->v_)) getInhomCoordsWithDoubleArray:self->coords_];
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setValueWithDouble:OrgGeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(self->coords_), 0), IOSDoubleArray_Get(self->coords_, 1))];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoLengthVector)
