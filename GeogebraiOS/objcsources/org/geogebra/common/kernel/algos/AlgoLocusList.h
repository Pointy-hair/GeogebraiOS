//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoLocusList.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoLocusList_H_
#define _OrgGeogebraCommonKernelAlgosAlgoLocusList_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"

@class JavaUtilArrayList;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoLocus;
@class OrgGeogebraCommonKernelGeosGeoPoint;

@interface OrgGeogebraCommonKernelAlgosAlgoLocusList : OrgGeogebraCommonKernelAlgosAlgoElement {
 @public
  JavaUtilArrayList *arrLocus_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)Q
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P
                                                    withInt:(jint)try_steps;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)Q
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P;

- (void)compute;

- (jboolean)euclidianViewUpdate;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (OrgGeogebraCommonKernelGeosGeoLocus *)getLocus;

- (OrgGeogebraCommonKernelGeosGeoPoint *)getLocusPoint;

- (JavaUtilArrayList *)getMoveableInputPoints;

- (OrgGeogebraCommonKernelGeosGeoPoint *)getMovingPoint;

- (OrgGeogebraCommonKernelGeosGeoPoint *)getQ;

- (jint)getRelatedModeID;

#pragma mark Protected

- (void)setInputOutput;

#pragma mark Package-Private

- (void)updateScreenBorders;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoLocusList)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoLocusList, arrLocus_, JavaUtilArrayList *)

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelAlgosAlgoLocusList_MIN_STEPS_REALLY_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoLocusList, MIN_STEPS_REALLY_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelAlgosAlgoLocusList, MIN_STEPS_REALLY_, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoLocusList_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelAlgosAlgoLocusList *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *Q, OrgGeogebraCommonKernelGeosGeoPoint *P, jint try_steps);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoLocusList *new_OrgGeogebraCommonKernelAlgosAlgoLocusList_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *Q, OrgGeogebraCommonKernelGeosGeoPoint *P, jint try_steps) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoLocusList_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelAlgosAlgoLocusList *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *Q, OrgGeogebraCommonKernelGeosGeoPoint *P);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoLocusList *new_OrgGeogebraCommonKernelAlgosAlgoLocusList_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *Q, OrgGeogebraCommonKernelGeosGeoPoint *P) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoLocusList)

#endif // _OrgGeogebraCommonKernelAlgosAlgoLocusList_H_
