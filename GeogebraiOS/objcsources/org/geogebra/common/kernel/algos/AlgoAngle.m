//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoAngle.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/euclidian/draw/DrawAngle.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoAngle.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonKernelAlgosAlgoAngle

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (void)initCoords {
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                withBoolean:(jboolean)addToConstructionList {
  OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, c, addToConstructionList);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelGeosGeoAngle *ret = new_OrgGeogebraCommonKernelGeosGeoAngle_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [ret setDrawableWithBoolean:YES];
  return ret;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Angle();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ANGLE;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVn {
  return OrgGeogebraCommonKernelMatrixCoords_get_VZ_();
}

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
withOrgGeogebraCommonEuclidianDrawDrawAngle:(OrgGeogebraCommonEuclidianDrawDrawAngle *)drawable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (jboolean)centerIsNotDrawableWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)vertex {
  return OrgGeogebraCommonKernelAlgosAlgoAngle_centerIsNotDrawableWithOrgGeogebraCommonKernelKernelNDGeoPointND_(vertex);
}

+ (void)checkOrientationWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vn
              withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                        withOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)a {
  OrgGeogebraCommonKernelAlgosAlgoAngle_checkOrientationWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withOrgGeogebraCommonKernelGeosGeoAngle_(vn, orientation, a);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoAngle", NULL, 0x1, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withBoolean:", "AlgoAngle", NULL, 0x4, NULL, NULL },
    { "newGeoAngleWithOrgGeogebraCommonKernelConstruction:", "newGeoAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x11, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x11, NULL, NULL },
    { "getVn", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "updateDrawInfoWithDoubleArray:withDoubleArray:withOrgGeogebraCommonEuclidianDrawDrawAngle:", "updateDrawInfo", "Z", 0x401, NULL, NULL },
    { "getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x401, NULL, NULL },
    { "centerIsNotDrawableWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "centerIsNotDrawable", "Z", 0x1c, NULL, NULL },
    { "checkOrientationWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:withOrgGeogebraCommonKernelGeosGeoAngle:", "checkOrientation", "V", 0x1c, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoAngle = { 2, "AlgoAngle", "org.geogebra.common.kernel.algos", NULL, 0x401, 11, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoAngle;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoAngle *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  [self initCoords];
}

void OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoAngle *self, OrgGeogebraCommonKernelConstruction *c, jboolean addToConstructionList) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, c, addToConstructionList);
}

jboolean OrgGeogebraCommonKernelAlgosAlgoAngle_centerIsNotDrawableWithOrgGeogebraCommonKernelKernelNDGeoPointND_(id<OrgGeogebraCommonKernelKernelNDGeoPointND> vertex) {
  OrgGeogebraCommonKernelAlgosAlgoAngle_initialize();
  return vertex == nil || ![vertex isDefined] || [vertex isInfinite];
}

void OrgGeogebraCommonKernelAlgosAlgoAngle_checkOrientationWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withOrgGeogebraCommonKernelGeosGeoAngle_(OrgGeogebraCommonKernelMatrixCoords *vn, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, OrgGeogebraCommonKernelGeosGeoAngle *a) {
  OrgGeogebraCommonKernelAlgosAlgoAngle_initialize();
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation)) getDirectionInD3]] < 0) {
    jdouble v = 2 * JavaLangMath_PI - [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(a)) getValue];
    [a setValueWithDouble:v];
    if (v > JavaLangMath_PI) {
      [vn mulInside3WithDouble:-1];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoAngle)
