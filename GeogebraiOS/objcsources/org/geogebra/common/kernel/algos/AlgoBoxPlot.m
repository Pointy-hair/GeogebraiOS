//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoBoxPlot.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoBoxPlot.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoMedian.h"
#include "org/geogebra/common/kernel/algos/AlgoQ1.h"
#include "org/geogebra/common/kernel/algos/AlgoQ3.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/util/Cloner.h"

#define OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_QUARTILES 0
#define OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_RAW 1
#define OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_FREQUENCY 2

@interface OrgGeogebraCommonKernelAlgosAlgoBoxPlot () {
 @public
  jint type_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> a_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> b_;
  OrgGeogebraCommonKernelGeosGeoElement *ageo_;
  OrgGeogebraCommonKernelGeosGeoElement *bgeo_;
  OrgGeogebraCommonKernelGeosGeoElement *minGeo_;
  OrgGeogebraCommonKernelGeosGeoElement *Q1geo_;
  OrgGeogebraCommonKernelGeosGeoElement *medianGeo_;
  OrgGeogebraCommonKernelGeosGeoElement *Q3geo_;
  OrgGeogebraCommonKernelGeosGeoElement *maxGeo_;
  OrgGeogebraCommonKernelGeosGeoNumeric *sum_;
  OrgGeogebraCommonKernelGeosGeoBoolean *useOutliersGeo_;
  OrgGeogebraCommonKernelGeosGeoList *list1_;
  OrgGeogebraCommonKernelGeosGeoList *freqList_;
  JavaUtilArrayList *tempList_;
  jint N_;
  IOSDoubleArray *yval_;
  IOSDoubleArray *leftBorder_;
  JavaUtilArrayList *outliers_;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                            withDoubleArray:(IOSDoubleArray *)list1
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b;

- (void)calcBoxPlot;

- (void)addOutlierWithDouble:(jdouble)x;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, a_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, b_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, ageo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, bgeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, minGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, Q1geo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, medianGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, Q3geo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, maxGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, sum_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, useOutliersGeo_, OrgGeogebraCommonKernelGeosGeoBoolean *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, list1_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, freqList_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, tempList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, yval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, leftBorder_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, outliers_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, TYPE_QUARTILES, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, TYPE_RAW, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoBoxPlot, TYPE_FREQUENCY, jint)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, OrgGeogebraCommonKernelConstruction *cons, IOSDoubleArray *list1, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoBoxPlot *new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, IOSDoubleArray *list1, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_calcBoxPlot(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_addOutlierWithDouble_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, jdouble x);

@implementation OrgGeogebraCommonKernelAlgosAlgoBoxPlot

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)min
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)Q1
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)median
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)Q3
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)max {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, a, b, min, Q1, median, Q3, max);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)useOutliers {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, a, b, list1, useOutliers);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)freqList
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)useOutliers {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, a, b, list1, freqList, useOutliers);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)freqList
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)useOutliers {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, a, b, list1, freqList, useOutliers);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)useOutliers {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, a, b, list1, useOutliers);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                            withDoubleArray:(IOSDoubleArray *)list1
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, list1, a, b);
  return self;
}

- (id<OrgGeogebraCommonKernelArithmeticNumberValue>)getB {
  return b_;
}

- (id<OrgGeogebraCommonKernelArithmeticNumberValue>)getA {
  return a_;
}

- (OrgGeogebraCommonKernelGeosGeoList *)getList1 {
  return list1_;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_BoxPlot();
}

- (OrgGeogebraCommonKernelAlgosAlgoBoxPlot *)copy__ {
  return [new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(cons_, OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(leftBorder_), (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a_)) deepCopyWithOrgGeogebraCommonKernelKernel:kernel_], @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)), (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b_)) deepCopyWithOrgGeogebraCommonKernelKernel:kernel_], @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))) autorelease];
}

- (void)compute {
  jboolean useOutliers = NO;
  if (useOutliersGeo_ != nil && [useOutliersGeo_ getBoolean]) {
    useOutliers = YES;
  }
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_outliers_(self, nil);
  if (tempList_ == nil) {
    OrgGeogebraCommonKernelAlgosAlgoBoxPlot_setAndConsume_tempList_(self, new_JavaUtilArrayList_init());
  }
  [((JavaUtilArrayList *) nil_chk(tempList_)) clear];
  if (type_ == OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_FREQUENCY) {
    if ([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(list1_)) size] == 0 || [list1_ size] != [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(freqList_)) size]) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(sum_)) setUndefined];
      return;
    }
  }
  if (type_ == OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_RAW || type_ == OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_FREQUENCY) {
    OrgGeogebraCommonKernelAlgosAlgoQ1 *Q1Algo;
    OrgGeogebraCommonKernelAlgosAlgoQ3 *Q3Algo;
    OrgGeogebraCommonKernelAlgosAlgoMedian *medianAlgo;
    if (type_ == OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_RAW) {
      Q1Algo = [new_OrgGeogebraCommonKernelAlgosAlgoQ1_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(cons_, list1_) autorelease];
      medianAlgo = [new_OrgGeogebraCommonKernelAlgosAlgoMedian_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(cons_, list1_) autorelease];
      Q3Algo = [new_OrgGeogebraCommonKernelAlgosAlgoQ3_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(cons_, list1_) autorelease];
    }
    else {
      Q1Algo = [new_OrgGeogebraCommonKernelAlgosAlgoQ1_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(cons_, list1_, freqList_) autorelease];
      medianAlgo = [new_OrgGeogebraCommonKernelAlgosAlgoMedian_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(cons_, list1_, freqList_) autorelease];
      Q3Algo = [new_OrgGeogebraCommonKernelAlgosAlgoQ3_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(cons_, list1_, freqList_) autorelease];
    }
    [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:Q1Algo];
    [cons_ removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:Q3Algo];
    [cons_ removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:medianAlgo];
    jdouble median = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoMedian *) nil_chk(medianAlgo)) getMedian])) getDouble];
    jdouble Q1 = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoQ1 *) nil_chk(Q1Algo)) getQ1])) getDouble];
    jdouble Q3 = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoQ3 *) nil_chk(Q3Algo)) getQ3])) getDouble];
    jdouble min = JavaLangDouble_MAX_VALUE;
    jdouble max = -JavaLangDouble_MAX_VALUE;
    for (jint i = 0; i < [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(list1_)) size]; i++) {
      jdouble x = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([list1_ getWithInt:i])) evaluateDouble];
      if (type_ == OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_FREQUENCY && [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(freqList_)) getWithInt:i], [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble] <= 0) {
        continue;
      }
      jboolean updateMaxMin = YES;
      if (useOutliers) {
        if (x > Q3 + 1.5 * (Q3 - Q1)) {
          OrgGeogebraCommonKernelAlgosAlgoBoxPlot_addOutlierWithDouble_(self, x);
          updateMaxMin = NO;
        }
        if (x < Q1 - 1.5 * (Q3 - Q1)) {
          OrgGeogebraCommonKernelAlgosAlgoBoxPlot_addOutlierWithDouble_(self, x);
          updateMaxMin = NO;
        }
      }
      if (updateMaxMin) {
        if (x < min) {
          min = x;
        }
        if (x > max) {
          max = x;
        }
      }
    }
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_(min)];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_(Q1)];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_(median)];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_(Q3)];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_(max)];
    N_ = 5;
    OrgGeogebraCommonKernelAlgosAlgoBoxPlot_calcBoxPlot(self);
  }
  else {
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(minGeo_)) evaluateDouble])];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(Q1geo_)) evaluateDouble])];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(medianGeo_)) evaluateDouble])];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(Q3geo_)) evaluateDouble])];
    [tempList_ addWithId:JavaLangDouble_valueOfWithDouble_([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(maxGeo_)) evaluateDouble])];
    N_ = 5;
    OrgGeogebraCommonKernelAlgosAlgoBoxPlot_calcBoxPlot(self);
  }
}

- (void)calcBoxPlot {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_calcBoxPlot(self);
}

- (void)setInputOutput {
  switch (type_) {
    case OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_QUARTILES:
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:7 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, ageo_);
    IOSObjectArray_Set(input_, 1, bgeo_);
    IOSObjectArray_Set(input_, 2, minGeo_);
    IOSObjectArray_Set(input_, 3, Q1geo_);
    IOSObjectArray_Set(input_, 4, medianGeo_);
    IOSObjectArray_Set(input_, 5, Q3geo_);
    IOSObjectArray_Set(input_, 6, maxGeo_);
    break;
    case OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_RAW:
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 + (useOutliersGeo_ == nil ? 0 : 1) type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, ageo_);
    IOSObjectArray_Set(input_, 1, bgeo_);
    IOSObjectArray_Set(input_, 2, list1_);
    if (useOutliersGeo_ != nil) {
      IOSObjectArray_Set(input_, 3, useOutliersGeo_);
    }
    break;
    case OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_FREQUENCY:
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:4 + (useOutliersGeo_ == nil ? 0 : 1) type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, ageo_);
    IOSObjectArray_Set(input_, 1, bgeo_);
    IOSObjectArray_Set(input_, 2, list1_);
    IOSObjectArray_Set(input_, 3, freqList_);
    if (useOutliersGeo_ != nil) {
      IOSObjectArray_Set(input_, 4, useOutliersGeo_);
    }
    break;
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:sum_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getSum {
  return sum_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getMinGeo {
  return minGeo_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getMaxGeo {
  return maxGeo_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getQ1geo {
  return Q1geo_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getQ3geo {
  return Q3geo_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getMedianGeo {
  return medianGeo_;
}

- (IOSDoubleArray *)getLeftBorders {
  return leftBorder_;
}

- (JavaUtilArrayList *)getOutliers {
  return outliers_;
}

- (void)addOutlierWithDouble:(jdouble)x {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_addOutlierWithDouble_(self, x);
}

- (void)dealloc {
  RELEASE_(a_);
  RELEASE_(b_);
  RELEASE_(ageo_);
  RELEASE_(bgeo_);
  RELEASE_(minGeo_);
  RELEASE_(Q1geo_);
  RELEASE_(medianGeo_);
  RELEASE_(Q3geo_);
  RELEASE_(maxGeo_);
  RELEASE_(sum_);
  RELEASE_(useOutliersGeo_);
  RELEASE_(list1_);
  RELEASE_(freqList_);
  RELEASE_(tempList_);
  RELEASE_(yval_);
  RELEASE_(leftBorder_);
  RELEASE_(outliers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoBoxPlot", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoBoolean:", "AlgoBoxPlot", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoBoolean:", "AlgoBoxPlot", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoBoolean:", "AlgoBoxPlot", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoBoolean:", "AlgoBoxPlot", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withDoubleArray:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoBoxPlot", NULL, 0x2, NULL, NULL },
    { "getB", NULL, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "getA", NULL, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "getList1", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.algos.AlgoBoxPlot;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "calcBoxPlot", NULL, "V", 0x2, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getSum", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getMinGeo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getMaxGeo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getQ1geo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getQ3geo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getMedianGeo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getLeftBorders", NULL, "[D", 0x1, NULL, NULL },
    { "getOutliers", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "addOutlierWithDouble:", "addOutlier", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_QUARTILES_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_QUARTILES },
    { "TYPE_RAW_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_RAW },
    { "TYPE_FREQUENCY_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_FREQUENCY },
    { "type_", NULL, 0x2, "I", NULL, NULL,  },
    { "a_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "b_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "ageo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "bgeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "minGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "Q1geo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "medianGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "Q3geo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "maxGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "sum_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "useOutliersGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoBoolean;", NULL, NULL,  },
    { "list1_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "freqList_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "tempList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Double;>;",  },
    { "N_", NULL, 0x2, "I", NULL, NULL,  },
    { "yval_", NULL, 0x2, "[D", NULL, NULL,  },
    { "leftBorder_", NULL, 0x2, "[D", NULL, NULL,  },
    { "outliers_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Double;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoBoxPlot = { 2, "AlgoBoxPlot", "org.geogebra.common.kernel.algos", NULL, 0x1, 23, methods, 22, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoBoxPlot;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, id<OrgGeogebraCommonKernelArithmeticNumberValue> min, id<OrgGeogebraCommonKernelArithmeticNumberValue> Q1, id<OrgGeogebraCommonKernelArithmeticNumberValue> median, id<OrgGeogebraCommonKernelArithmeticNumberValue> Q3, id<OrgGeogebraCommonKernelArithmeticNumberValue> max) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->type_ = OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_QUARTILES;
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_ageo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_bgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_minGeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(min)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_Q1geo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(Q1)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_medianGeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(median)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_Q3geo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(Q3)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_maxGeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(max)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  [self compute];
  [self->sum_ setDrawableWithBoolean:YES];
  [self->sum_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoBoxPlot *new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, id<OrgGeogebraCommonKernelArithmeticNumberValue> min, id<OrgGeogebraCommonKernelArithmeticNumberValue> Q1, id<OrgGeogebraCommonKernelArithmeticNumberValue> median, id<OrgGeogebraCommonKernelArithmeticNumberValue> Q3, id<OrgGeogebraCommonKernelArithmeticNumberValue> max) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self = [OrgGeogebraCommonKernelAlgosAlgoBoxPlot alloc];
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, a, b, min, Q1, median, Q3, max);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, a, b, list1, useOutliers);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoBoxPlot *new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self = [OrgGeogebraCommonKernelAlgosAlgoBoxPlot alloc];
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, a, b, list1, useOutliers);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *freqList, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, a, b, list1, freqList, useOutliers);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoBoxPlot *new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *freqList, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self = [OrgGeogebraCommonKernelAlgosAlgoBoxPlot alloc];
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, a, b, list1, freqList, useOutliers);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *freqList, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->type_ = OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_FREQUENCY;
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_ageo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_bgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_freqList_(self, freqList);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_useOutliersGeo_(self, useOutliers);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  [self compute];
  [self->sum_ setDrawableWithBoolean:YES];
}

OrgGeogebraCommonKernelAlgosAlgoBoxPlot *new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *freqList, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self = [OrgGeogebraCommonKernelAlgosAlgoBoxPlot alloc];
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, a, b, list1, freqList, useOutliers);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->type_ = OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_RAW;
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_ageo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_bgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_useOutliersGeo_(self, useOutliers);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  [self compute];
  [self->sum_ setDrawableWithBoolean:YES];
}

OrgGeogebraCommonKernelAlgosAlgoBoxPlot *new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoBoolean *useOutliers) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self = [OrgGeogebraCommonKernelAlgosAlgoBoxPlot alloc];
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, cons, a, b, list1, useOutliers);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, OrgGeogebraCommonKernelConstruction *cons, IOSDoubleArray *list1, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons, NO);
  self->type_ = OrgGeogebraCommonKernelAlgosAlgoBoxPlot_TYPE_RAW;
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_set_leftBorder_(self, list1);
}

OrgGeogebraCommonKernelAlgosAlgoBoxPlot *new_OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, IOSDoubleArray *list1, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b) {
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self = [OrgGeogebraCommonKernelAlgosAlgoBoxPlot alloc];
  OrgGeogebraCommonKernelAlgosAlgoBoxPlot_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, list1, a, b);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_calcBoxPlot(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self) {
  if (self->yval_ == nil || self->yval_->size_ < self->N_) {
    OrgGeogebraCommonKernelAlgosAlgoBoxPlot_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
    OrgGeogebraCommonKernelAlgosAlgoBoxPlot_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
  }
  for (jint i = 0; i < self->N_; i++) {
    jdouble x = [((JavaLangDouble *) nil_chk([((JavaUtilArrayList *) nil_chk(self->tempList_)) getWithInt:i])) doubleValue];
    if (!JavaLangDouble_isNaNWithDouble_(x)) *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = x;
    else {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
      return;
    }
    *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = 1.0;
  }
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:IOSDoubleArray_Get(nil_chk(self->leftBorder_), 2)];
}

void OrgGeogebraCommonKernelAlgosAlgoBoxPlot_addOutlierWithDouble_(OrgGeogebraCommonKernelAlgosAlgoBoxPlot *self, jdouble x) {
  if (self->outliers_ == nil) {
    OrgGeogebraCommonKernelAlgosAlgoBoxPlot_setAndConsume_outliers_(self, new_JavaUtilArrayList_init());
  }
  [((JavaUtilArrayList *) nil_chk(self->outliers_)) addWithId:JavaLangDouble_valueOfWithDouble_(x)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoBoxPlot)
