//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoImageCorner.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoImageCorner.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoImage.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"

@interface OrgGeogebraCommonKernelAlgosAlgoImageCorner () {
 @public
  OrgGeogebraCommonKernelGeosGeoImage *img_;
  OrgGeogebraCommonKernelGeosGeoPoint *corner_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> number_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoImageCorner, img_, OrgGeogebraCommonKernelGeosGeoImage *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoImageCorner, corner_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoImageCorner, number_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoImageCorner_compute(OrgGeogebraCommonKernelAlgosAlgoImageCorner *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoImageCorner

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoImage:(OrgGeogebraCommonKernelGeosGeoImage *)img
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)number {
  OrgGeogebraCommonKernelAlgosAlgoImageCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoImage_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, img, number);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Corner();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, img_);
  (void) IOSObjectArray_Set(input_, 1, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(number_)) toGeoElement]);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:corner_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getCorner {
  return corner_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoImageCorner_compute(self);
}

- (jboolean)euclidianViewUpdate {
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) notifyUpdateWithOrgGeogebraCommonKernelGeosGeoElement:img_];
  OrgGeogebraCommonKernelAlgosAlgoImageCorner_compute(self);
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(corner_)) update];
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoImage:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoImageCorner", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCorner", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "img_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoImage;", NULL, NULL,  },
    { "corner_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "number_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoImageCorner = { 2, "AlgoImageCorner", "org.geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoImageCorner;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoImageCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoImage_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoImageCorner *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoImage *img, id<OrgGeogebraCommonKernelArithmeticNumberValue> number) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->img_ = img;
  self->number_ = number;
  self->corner_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoImageCorner_compute(self);
  [self->corner_ setLabelWithNSString:label];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithOrgGeogebraCommonKernelEuclidianViewCE:self];
}

OrgGeogebraCommonKernelAlgosAlgoImageCorner *new_OrgGeogebraCommonKernelAlgosAlgoImageCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoImage_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoImage *img, id<OrgGeogebraCommonKernelArithmeticNumberValue> number) {
  OrgGeogebraCommonKernelAlgosAlgoImageCorner *self = [OrgGeogebraCommonKernelAlgosAlgoImageCorner alloc];
  OrgGeogebraCommonKernelAlgosAlgoImageCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoImage_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, img, number);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoImageCorner_compute(OrgGeogebraCommonKernelAlgosAlgoImageCorner *self) {
  [((OrgGeogebraCommonKernelGeosGeoImage *) nil_chk(self->img_)) calculateCornerPointWithOrgGeogebraCommonKernelGeosGeoPoint:self->corner_ withInt:J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->number_)) getDouble])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoImageCorner)
