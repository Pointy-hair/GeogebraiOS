//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoAreaConic.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoAreaConic.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicPartND.h"

@interface OrgGeogebraCommonKernelAlgosAlgoAreaConic () {
 @public
  OrgGeogebraCommonKernelKernelNDGeoConicND *conic_;
  OrgGeogebraCommonKernelGeosGeoNumeric *area_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAreaConic, conic_, OrgGeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoAreaConic, area_, OrgGeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoAreaConic_compute(OrgGeogebraCommonKernelAlgosAlgoAreaConic *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoAreaConic

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  OrgGeogebraCommonKernelAlgosAlgoAreaConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, c);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Area();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_AREA;
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, conic_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:area_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getArea {
  return area_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoAreaConic_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "AlgoAreaConic", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getArea", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "conic_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
    { "area_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoAreaConic = { 2, "AlgoAreaConic", "org.geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoAreaConic;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoAreaConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelAlgosAlgoAreaConic *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelKernelNDGeoConicND *c) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->conic_ = c;
  self->area_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoAreaConic_compute(self);
  [self->area_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoAreaConic *new_OrgGeogebraCommonKernelAlgosAlgoAreaConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelKernelNDGeoConicND *c) {
  OrgGeogebraCommonKernelAlgosAlgoAreaConic *self = [OrgGeogebraCommonKernelAlgosAlgoAreaConic alloc];
  OrgGeogebraCommonKernelAlgosAlgoAreaConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, c);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoAreaConic_compute(OrgGeogebraCommonKernelAlgosAlgoAreaConic *self) {
  if (![((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conic_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->area_)) setUndefined];
    return;
  }
  if ([self->conic_ isGeoConicPart]) {
    id<OrgGeogebraCommonKernelKernelNDGeoConicPartND> conicPart = (id<OrgGeogebraCommonKernelKernelNDGeoConicPartND>) check_protocol_cast(self->conic_, @protocol(OrgGeogebraCommonKernelKernelNDGeoConicPartND));
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->area_)) setValueWithDouble:[conicPart getArea]];
    return;
  }
  jint type = [self->conic_ getType];
  {
    jdouble r;
    jdouble a;
    jdouble b;
    switch (type) {
      case OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_CIRCLE:
      r = [self->conic_ getHalfAxisWithInt:0];
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->area_)) setValueWithDouble:r * r * JavaLangMath_PI];
      break;
      case OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_ELLIPSE:
      a = [self->conic_ getHalfAxisWithInt:0];
      b = [self->conic_ getHalfAxisWithInt:1];
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->area_)) setValueWithDouble:a * b * JavaLangMath_PI];
      break;
      default:
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->area_)) setUndefined];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoAreaConic)
