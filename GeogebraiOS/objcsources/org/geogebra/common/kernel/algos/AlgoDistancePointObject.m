//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoDistancePointObject.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/EquationSolver.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoClosestPoint.h"
#include "org/geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "org/geogebra/common/kernel/algos/AlgoDistancePointObject.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoRoots.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/PolyFunction.h"
#include "org/geogebra/common/kernel/arithmetic/Traversing.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/plugin/Operation.h"
#include "org/geogebra/common/util/MyMath.h"

#define OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_START 30.0
#define OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_GROWTH 2.0
#define OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_MAX_INTERVAL 10000.0

@interface OrgGeogebraCommonKernelAlgosAlgoDistancePointObject () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> P_;
  OrgGeogebraCommonKernelGeosGeoElement *g_;
  OrgGeogebraCommonKernelGeosGeoNumeric *dist_;
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint *closePt_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject, P_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject, g_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject, dist_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject, closePt_, OrgGeogebraCommonKernelAlgosAlgoClosestPoint *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject, INTERVAL_START, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject, INTERVAL_GROWTH, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject, MAX_INTERVAL, jdouble)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_compute(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoDistancePointObject

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g {
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, P, g);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Distance();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_DISTANCE;
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, g_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:dist_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getDistance {
  return dist_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getP {
  return P_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getg {
  return g_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"DistanceOfAandB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(g_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (jdouble)getClosestFunctionValueToPointWithOrgGeogebraCommonKernelArithmeticFunction:(OrgGeogebraCommonKernelArithmeticFunction *)function
                                                                            withDouble:(jdouble)x
                                                                            withDouble:(jdouble)y {
  return OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_getClosestFunctionValueToPointWithOrgGeogebraCommonKernelArithmeticFunction_withDouble_withDouble_(function, x, y);
}

- (void)dealloc {
  RELEASE_(P_);
  RELEASE_(g_);
  RELEASE_(dist_);
  RELEASE_(closePt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoDistancePointObject", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getDistance", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getP", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x0, NULL, NULL },
    { "getg", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getClosestFunctionValueToPointWithOrgGeogebraCommonKernelArithmeticFunction:withDouble:withDouble:", "getClosestFunctionValueToPoint", "D", 0x19, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "P_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "dist_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "closePt_", NULL, 0x2, "Lorg.geogebra.common.kernel.algos.AlgoClosestPoint;", NULL, NULL,  },
    { "INTERVAL_START_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_START },
    { "INTERVAL_GROWTH_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_GROWTH },
    { "MAX_INTERVAL_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_MAX_INTERVAL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoDistancePointObject = { 2, "AlgoDistancePointObject", "org.geogebra.common.kernel.algos", NULL, 0x1, 10, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoDistancePointObject;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, OrgGeogebraCommonKernelGeosGeoElement *g) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_set_P_(self, P);
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_set_g_(self, g);
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_setAndConsume_dist_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_set_closePt_(self, [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([self getKernel])) getAlgoDispatcher])) getNewAlgoClosestPointWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>) check_protocol_cast(g, @protocol(OrgGeogebraCommonKernelPath)) withOrgGeogebraCommonKernelKernelNDGeoPointND:P]);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->closePt_];
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_compute(self);
  [self->dist_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoDistancePointObject *new_OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, OrgGeogebraCommonKernelGeosGeoElement *g) {
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject *self = [OrgGeogebraCommonKernelAlgosAlgoDistancePointObject alloc];
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, P, g);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_compute(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject *self) {
  if (self->closePt_ != nil) [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->dist_)) setValueWithDouble:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self->closePt_ getP])) distanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->P_]];
  else [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->dist_)) setValueWithDouble:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->g_)) distanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->P_]];
}

jdouble OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_getClosestFunctionValueToPointWithOrgGeogebraCommonKernelArithmeticFunction_withDouble_withDouble_(OrgGeogebraCommonKernelArithmeticFunction *function, jdouble x, jdouble y) {
  OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_initialize();
  OrgGeogebraCommonKernelKernel *kernel = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(function)) getKernel];
  OrgGeogebraCommonKernelArithmeticPolyFunction *polyFunction = [function expandToPolyFunctionWithOrgGeogebraCommonKernelArithmeticExpressionValue:[function getExpression] withBoolean:NO withBoolean:YES];
  if (polyFunction != nil) {
    OrgGeogebraCommonKernelArithmeticPolyFunction *polyDervi = [polyFunction getDerivative];
    IOSDoubleArray *funCoeffs = [polyFunction getCoeffs];
    IOSDoubleArray *derivCoeffs = [((OrgGeogebraCommonKernelArithmeticPolyFunction *) nil_chk(polyDervi)) getCoeffs];
    jint n = ((IOSDoubleArray *) nil_chk(funCoeffs))->size_ - 1;
    jint m = ((IOSDoubleArray *) nil_chk(derivCoeffs))->size_ - 1;
    IOSDoubleArray *eq = [IOSDoubleArray arrayWithLength:(m + n < 1) ? 2 : m + n + 1];
    for (jint i = 0; i < eq->size_; i++) {
      for (jint j = JavaLangMath_maxWithInt_withInt_(0, i - m); j <= JavaLangMath_minWithInt_withInt_(i, n); j++) {
        *IOSDoubleArray_GetRef(eq, i) += 2 * IOSDoubleArray_Get(funCoeffs, j) * IOSDoubleArray_Get(derivCoeffs, i - j);
      }
    }
    for (jint i = 0; i <= m; i++) {
      *IOSDoubleArray_GetRef(eq, i) += (-2) * y * IOSDoubleArray_Get(derivCoeffs, i);
    }
    *IOSDoubleArray_GetRef(eq, 1) += 2;
    *IOSDoubleArray_GetRef(eq, 0) -= 2 * x;
    OrgGeogebraCommonKernelEquationSolver *solver = [new_OrgGeogebraCommonKernelEquationSolver_initWithOrgGeogebraCommonKernelKernel_(kernel) autorelease];
    jint nrOfRoots = [solver polynomialRootsWithDoubleArray:eq withBoolean:NO];
    if (nrOfRoots == 0) {
      return JavaLangDouble_NaN;
    }
    jint k = 0;
    jdouble min = OrgGeogebraCommonUtilMyMath_distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDouble_(polyFunction, x, y, IOSDoubleArray_Get(eq, 0));
    for (jint i = 1; i < nrOfRoots; i++) {
      jdouble val = OrgGeogebraCommonUtilMyMath_distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDouble_(polyFunction, x, y, IOSDoubleArray_Get(eq, i));
      if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(min, val)) {
        min = val;
        k = i;
      }
    }
    return IOSDoubleArray_Get(eq, k);
  }
  OrgGeogebraCommonKernelArithmeticFunctionVariable *fVar = [function getFunctionVariable];
  OrgGeogebraCommonKernelArithmeticFunction *deriv = [function getDerivativeWithInt:1 withBoolean:YES];
  [deriv traverseWithOrgGeogebraCommonKernelArithmeticTraversing:OrgGeogebraCommonKernelArithmeticTraversing_Replacer_getReplacerWithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(deriv)) getFunctionVariable], fVar)];
  OrgGeogebraCommonKernelArithmeticExpressionNode *expr = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel, fVar, OrgGeogebraCommonPluginOperationEnum_get_MINUS(), [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel, x) autorelease]) autorelease];
  expr = [expr multiplyWithDouble:2];
  OrgGeogebraCommonKernelArithmeticExpressionNode *expr2 = [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel, [function getExpression], OrgGeogebraCommonPluginOperationEnum_get_MINUS(), [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel, y) autorelease]) autorelease];
  expr2 = [expr2 multiplyRWithOrgGeogebraCommonKernelArithmeticExpressionValue:[deriv getExpression]];
  expr2 = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(expr2)) multiplyWithDouble:2];
  expr = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(expr)) plusWithOrgGeogebraCommonKernelArithmeticExpressionValue:expr2];
  OrgGeogebraCommonKernelArithmeticFunction *func = [new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_(expr, fVar) autorelease];
  OrgGeogebraCommonKernelGeosGeoFunction *geoFunc = [new_OrgGeogebraCommonKernelGeosGeoFunction_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunction_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getConstruction], func) autorelease];
  IOSDoubleArray *roots;
  jdouble left = OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_START;
  jdouble right = OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_START;
  while ((roots = OrgGeogebraCommonKernelAlgosAlgoRoots_findRootsWithOrgGeogebraCommonKernelGeosGeoFunction_withDouble_withDouble_withInt_(geoFunc, x - left, y + right, J2ObjCFpToInt(((left + right) * 10)))) == nil && OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_MAX_INTERVAL, left)) {
    left *= OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_GROWTH;
    right *= OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_INTERVAL_GROWTH;
  }
  if (roots == nil || roots->size_ == 0) {
    return JavaLangDouble_NaN;
  }
  jint k = 0;
  jdouble min = OrgGeogebraCommonUtilMyMath_distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDouble_(function, x, y, IOSDoubleArray_Get(nil_chk(roots), 0));
  for (jint i = 1; i < roots->size_; i++) {
    jdouble val = OrgGeogebraCommonUtilMyMath_distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDouble_(function, x, y, IOSDoubleArray_Get(roots, i));
    if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(min, val)) {
      min = val;
      k = i;
    }
  }
  return IOSDoubleArray_Get(roots, k);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoDistancePointObject)
