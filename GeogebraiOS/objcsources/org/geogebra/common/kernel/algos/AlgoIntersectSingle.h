//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoIntersectSingle.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_H_
#define _OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/RestrictionAlgoForLocusEquation.h"
#include "org/geogebra/common/kernel/algos/AlgoIntersect.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoPoint;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol OrgGeogebraCommonKernelAlgosEquationElementInterface;
@protocol OrgGeogebraCommonKernelAlgosEquationScopeInterface;
@protocol OrgGeogebraCommonKernelGeosGeoNumberValue;

@interface OrgGeogebraCommonKernelAlgosAlgoIntersectSingle : OrgGeogebraCommonKernelAlgosAlgoIntersect < OrgGeogebraCommonKernelRestrictionAlgoForLocusEquation >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)label
withOrgGeogebraCommonKernelAlgosAlgoIntersect:(OrgGeogebraCommonKernelAlgosAlgoIntersect *)algo
withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)index;

- (instancetype)initWithNSString:(NSString *)label
withOrgGeogebraCommonKernelAlgosAlgoIntersect:(OrgGeogebraCommonKernelAlgosAlgoIntersect *)algo
withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)refPoint;

- (instancetype)initWithNSString:(NSString *)label
withOrgGeogebraCommonKernelAlgosAlgoIntersect:(OrgGeogebraCommonKernelAlgosAlgoIntersect *)algo
                         withInt:(jint)index;

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (void)compute;

- (OrgGeogebraCommonKernelAlgosAlgoIntersect *)getAlgo;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (IOSObjectArray *)getIntersectionPoints;

- (OrgGeogebraCommonKernelGeosGeoPoint *)getPoint;

- (jint)getRelatedModeID;

- (void)initForNearToRelationship OBJC_METHOD_FAMILY_NONE;

- (jboolean)isLocusEquable;

- (jboolean)isNearToAlgorithm;

- (void)remove;

- (void)setInputOutput;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (IOSObjectArray *)getLastDefinedIntersectionPoints;

- (jboolean)showUndefinedPointsInAlgebraView;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoIntersectSingle)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_initWithNSString_withOrgGeogebraCommonKernelAlgosAlgoIntersect_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelAlgosAlgoIntersectSingle *self, NSString *label, OrgGeogebraCommonKernelAlgosAlgoIntersect *algo, OrgGeogebraCommonKernelGeosGeoPoint *refPoint);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoIntersectSingle *new_OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_initWithNSString_withOrgGeogebraCommonKernelAlgosAlgoIntersect_withOrgGeogebraCommonKernelGeosGeoPoint_(NSString *label, OrgGeogebraCommonKernelAlgosAlgoIntersect *algo, OrgGeogebraCommonKernelGeosGeoPoint *refPoint) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_initWithNSString_withOrgGeogebraCommonKernelAlgosAlgoIntersect_withOrgGeogebraCommonKernelGeosGeoNumberValue_(OrgGeogebraCommonKernelAlgosAlgoIntersectSingle *self, NSString *label, OrgGeogebraCommonKernelAlgosAlgoIntersect *algo, id<OrgGeogebraCommonKernelGeosGeoNumberValue> index);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoIntersectSingle *new_OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_initWithNSString_withOrgGeogebraCommonKernelAlgosAlgoIntersect_withOrgGeogebraCommonKernelGeosGeoNumberValue_(NSString *label, OrgGeogebraCommonKernelAlgosAlgoIntersect *algo, id<OrgGeogebraCommonKernelGeosGeoNumberValue> index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_initWithNSString_withOrgGeogebraCommonKernelAlgosAlgoIntersect_withInt_(OrgGeogebraCommonKernelAlgosAlgoIntersectSingle *self, NSString *label, OrgGeogebraCommonKernelAlgosAlgoIntersect *algo, jint index);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoIntersectSingle *new_OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_initWithNSString_withOrgGeogebraCommonKernelAlgosAlgoIntersect_withInt_(NSString *label, OrgGeogebraCommonKernelAlgosAlgoIntersect *algo, jint index) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoIntersectSingle)

#endif // _OrgGeogebraCommonKernelAlgosAlgoIntersectSingle_H_
