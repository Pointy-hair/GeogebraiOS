//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoSphereNDTwoPoints.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoSphereNDTwoPoints.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricND.h"

@interface OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> M_, P_;
  OrgGeogebraCommonKernelKernelNDGeoQuadricND *sphereND_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints, M_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints, P_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints, sphereND_, OrgGeogebraCommonKernelKernelNDGeoQuadricND *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_compute(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, M, P);
  return self;
}

- (OrgGeogebraCommonKernelKernelNDGeoQuadricND *)createSphereNDWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, M, P);
  return self;
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(M_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:sphereND_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelKernelNDGeoQuadricND *)getSphereND {
  return sphereND_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getCenter {
  return [self getM];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getM {
  return M_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getExternalPoint {
  return [self getP];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getP {
  return P_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_compute(self);
}

- (void)dealloc {
  RELEASE_(M_);
  RELEASE_(P_);
  RELEASE_(sphereND_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoSphereNDTwoPoints", NULL, 0x1, NULL, NULL },
    { "createSphereNDWithOrgGeogebraCommonKernelConstruction:", "createSphereND", "Lorg.geogebra.common.kernel.kernelND.GeoQuadricND;", 0x404, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoSphereNDTwoPoints", NULL, 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getSphereND", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoQuadricND;", 0x1, NULL, NULL },
    { "getCenter", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getM", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getExternalPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getP", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "M_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "sphereND_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoQuadricND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints = { 2, "AlgoSphereNDTwoPoints", "org.geogebra.common.kernel.algos", NULL, 0x401, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_set_M_(self, M);
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_set_P_(self, P);
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_set_sphereND_(self, [self createSphereNDWithOrgGeogebraCommonKernelConstruction:cons]);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_compute(self);
}

void OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P) {
  OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, M, P);
  [((OrgGeogebraCommonKernelKernelNDGeoQuadricND *) nil_chk(self->sphereND_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_compute(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints *self) {
  [((OrgGeogebraCommonKernelKernelNDGeoQuadricND *) nil_chk(self->sphereND_)) setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->M_ withOrgGeogebraCommonKernelKernelNDGeoPointND:self->P_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoSphereNDTwoPoints)
