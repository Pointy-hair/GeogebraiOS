//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoDefined.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoDefined.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoVectorND.h"

@interface OrgGeogebraCommonKernelAlgosAlgoDefined () {
 @public
  OrgGeogebraCommonKernelGeosGeoElement *inputGeo_;
  OrgGeogebraCommonKernelGeosGeoBoolean *outputBoolean_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDefined, inputGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoDefined, outputBoolean_, OrgGeogebraCommonKernelGeosGeoBoolean *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoDefined_compute(OrgGeogebraCommonKernelAlgosAlgoDefined *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoDefined

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)inputGeo {
  OrgGeogebraCommonKernelAlgosAlgoDefined_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, inputGeo);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Defined();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, inputGeo_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:outputBoolean_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoBoolean *)getResult {
  return outputBoolean_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoDefined_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoDefined", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoBoolean;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "outputBoolean_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoBoolean;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoDefined = { 2, "AlgoDefined", "org.geogebra.common.kernel.algos", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoDefined;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoDefined_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelAlgosAlgoDefined *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *inputGeo) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->inputGeo_ = inputGeo;
  self->outputBoolean_ = new_OrgGeogebraCommonKernelGeosGeoBoolean_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoDefined_compute(self);
  [self->outputBoolean_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoDefined *new_OrgGeogebraCommonKernelAlgosAlgoDefined_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *inputGeo) {
  OrgGeogebraCommonKernelAlgosAlgoDefined *self = [OrgGeogebraCommonKernelAlgosAlgoDefined alloc];
  OrgGeogebraCommonKernelAlgosAlgoDefined_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, inputGeo);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoDefined_compute(OrgGeogebraCommonKernelAlgosAlgoDefined *self) {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->inputGeo_)) isGeoPoint]) {
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> p = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(self->inputGeo_, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->outputBoolean_)) setValueWithBoolean:[self->inputGeo_ isDefined] && ![p isInfinite]];
    return;
  }
  else if ([self->inputGeo_ isGeoVector]) {
    id<OrgGeogebraCommonKernelKernelNDGeoVectorND> v = (id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) check_protocol_cast(self->inputGeo_, @protocol(OrgGeogebraCommonKernelKernelNDGeoVectorND));
    [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->outputBoolean_)) setValueWithBoolean:[self->inputGeo_ isDefined] && ![v isInfinite]];
    return;
  }
  else if ([self->inputGeo_ isGeoFunction]) {
    if ([((NSString *) nil_chk([self->inputGeo_ toValueStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()])) isEqual:@"?"]) {
      [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->outputBoolean_)) setValueWithBoolean:NO];
      return;
    }
  }
  [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->outputBoolean_)) setValueWithBoolean:[self->inputGeo_ isDefined]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoDefined)
