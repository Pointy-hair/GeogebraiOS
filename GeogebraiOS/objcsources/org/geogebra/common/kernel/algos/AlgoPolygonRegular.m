//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoPolygonRegular.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoPolygonRegular.h"
#include "org/geogebra/common/kernel/algos/AlgoPolygonRegularND.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelAlgosAlgoPolygonRegular () {
 @public
  OrgGeogebraCommonKernelMatrixCoords *centerPointCoords_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoPolygonRegular, centerPointCoords_, OrgGeogebraCommonKernelMatrixCoords *)

@implementation OrgGeogebraCommonKernelAlgosAlgoPolygonRegular

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A1
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B1
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)num {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegular_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, A1, B1, num);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoPolygon *)newGeoPolygonWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return new_OrgGeogebraCommonKernelGeosGeoPolygon_initWithOrgGeogebraCommonKernelConstruction_(cons);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)newGeoPointWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelGeosGeoPoint *newPoint = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [newPoint setCoordsWithDouble:0 withDouble:0 withDouble:1];
  return newPoint;
}

- (void)setCenterPointWithInt:(jint)n
                   withDouble:(jdouble)beta {
  jdouble xA = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomX_;
  jdouble yA = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomY_;
  jdouble xB = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B_, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomX_;
  jdouble yB = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B_, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomY_;
  jdouble mx = (xA + xB) / 2;
  jdouble my = (yA + yB) / 2;
  jdouble nx = yA - yB;
  jdouble ny = xB - xA;
  jdouble tanBetaHalf = JavaLangMath_tanWithDouble_(beta) / 2;
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(centerPoint_)) setCoordsWithDouble:mx + tanBetaHalf * nx withDouble:my + tanBetaHalf * ny withDouble:1.0];
  centerPointCoords_ = [centerPoint_ getInhomCoords];
}

- (void)rotateWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:rotAngle_ withOrgGeogebraCommonKernelMatrixCoords:centerPointCoords_];
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(B_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 2, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(num_)) toGeoElement]);
  for (jint i = 0; i < input_->size_; i++) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(input_, i))) addAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  }
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) addToAlgorithmListWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk([self getPoly])) setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
}

- (void)setDirectionWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)direction {
}

- (void)calcCentroidWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p {
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(p)) setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(centerPoint_, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoPolygonRegular", NULL, 0x1, NULL, NULL },
    { "newGeoPolygonWithOrgGeogebraCommonKernelConstruction:", "newGeoPolygon", "Lorg.geogebra.common.kernel.geos.GeoPolygon;", 0x4, NULL, NULL },
    { "newGeoPointWithOrgGeogebraCommonKernelConstruction:", "newGeoPoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "setCenterPointWithInt:withDouble:", "setCenterPoint", "V", 0x4, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotate", "V", 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "setDirectionWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "setDirection", "V", 0x14, NULL, NULL },
    { "calcCentroidWithOrgGeogebraCommonKernelGeosGeoPoint:", "calcCentroid", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "centerPointCoords_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPolygonRegular = { 2, "AlgoPolygonRegular", "org.geogebra.common.kernel.algos", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoPolygonRegular;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPolygonRegular_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoPolygonRegular *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B1, id<OrgGeogebraCommonKernelArithmeticNumberValue> num) {
  (void) OrgGeogebraCommonKernelAlgosAlgoPolygonRegularND_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, c, labels, A1, B1, num, nil);
}

OrgGeogebraCommonKernelAlgosAlgoPolygonRegular *new_OrgGeogebraCommonKernelAlgosAlgoPolygonRegular_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B1, id<OrgGeogebraCommonKernelArithmeticNumberValue> num) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegular *self = [OrgGeogebraCommonKernelAlgosAlgoPolygonRegular alloc];
  OrgGeogebraCommonKernelAlgosAlgoPolygonRegular_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, A1, B1, num);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPolygonRegular)
