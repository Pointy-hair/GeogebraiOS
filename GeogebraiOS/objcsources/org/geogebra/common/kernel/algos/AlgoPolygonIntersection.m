//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoPolygonIntersection.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoPolygonIntersection.h"
#include "org/geogebra/common/kernel/algos/AlgoPolygonOperation.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"

@implementation OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
                  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)inPoly0
                  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)inPoly1 {
  OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, inPoly0, inPoly1);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_IntersectPath();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelGeosGeoPolygon:", "AlgoPolygonIntersection", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection = { 2, "AlgoPolygonIntersection", "org.geogebra.common.kernel.algos", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *inPoly0, OrgGeogebraCommonKernelGeosGeoPolygon *inPoly1) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonOperation_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelAlgosAlgoPolygonOperation_PolyOperationEnum_(self, cons, labels, inPoly0, inPoly1, OrgGeogebraCommonKernelAlgosAlgoPolygonOperation_PolyOperationEnum_get_INTERSECTION());
}

OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection *new_OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *inPoly0, OrgGeogebraCommonKernelGeosGeoPolygon *inPoly1) {
  OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection *self = [OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection alloc];
  OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, inPoly0, inPoly1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoPolygonIntersection)
