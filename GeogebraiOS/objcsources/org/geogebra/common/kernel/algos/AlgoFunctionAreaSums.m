//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoFunctionAreaSums.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "org/apache/commons/math/distribution/BinomialDistributionImpl.h"
#include "org/apache/commons/math/distribution/HypergeometricDistributionImpl.h"
#include "org/apache/commons/math/distribution/IntegerDistribution.h"
#include "org/apache/commons/math/distribution/PascalDistributionImpl.h"
#include "org/apache/commons/math/distribution/PoissonDistributionImpl.h"
#include "org/apache/commons/math/distribution/ZipfDistributionImpl.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoFunctionAreaSums.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/optimization/ExtremumFinder.h"
#include "org/geogebra/common/kernel/optimization/NegativeRealRootFunction.h"
#include "org/geogebra/common/kernel/roots/RealRootFunction.h"
#include "org/geogebra/common/main/App.h"

#pragma clang diagnostic ignored "-Wprotocol"

#define OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES 10000
#define OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SAMPLE_PIXELS 5
#define OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_TOLERANCE 1.0E-7

@interface OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums () {
 @public
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *type_;
  OrgGeogebraCommonKernelGeosGeoFunction *f_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> a_, b_, n_, width_, density_, p1_, p2_, p3_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> d_;
  OrgGeogebraCommonKernelGeosGeoList *list1_, *list2_, *list3_;
  OrgGeogebraCommonKernelGeosGeoElement *ageo_, *bgeo_, *ngeo_, *dgeo_, *widthGeo_, *densityGeo_, *useDensityGeo_, *isCumulative_, *p1geo_, *p2geo_, *p3geo_;
  OrgGeogebraCommonKernelGeosGeoNumeric *sum_;
  jint N_;
  jdouble STEP_;
  IOSDoubleArray *yval_;
  IOSDoubleArray *leftBorder_;
  OrgGeogebraCommonKernelOptimizationExtremumFinder *extrFinder_;
  jdouble freqMax_;
  jboolean histogramRight_;
}

- (void)computeWithBoolean:(jboolean)onlyZoom;

- (jboolean)functionDefinedWithDouble:(jdouble)ad
                           withDouble:(jdouble)bd;

- (jboolean)prepareDistributionLists;

- (void)loadDistributionListsWithInt:(jint)first
                             withInt:(jint)last
withOrgApacheCommonsMathDistributionIntegerDistribution:(id<OrgApacheCommonsMathDistributionIntegerDistribution>)dist;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, type_, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, f_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, a_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, b_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, n_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, width_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, density_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, p1_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, p2_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, p3_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, d_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, list1_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, list2_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, list3_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, ageo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, bgeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, ngeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, dgeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, widthGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, densityGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, useDensityGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, isCumulative_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, p1geo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, p2geo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, p3geo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, sum_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, yval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, leftBorder_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, extrFinder_, OrgGeogebraCommonKernelOptimizationExtremumFinder *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, MAX_RECTANGLES, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, SAMPLE_PIXELS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums, TOLERANCE, jdouble)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_computeWithBoolean_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, jboolean onlyZoom);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_functionDefinedWithDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, jdouble ad, jdouble bd);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_prepareDistributionLists(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_loadDistributionListsWithInt_withInt_withOrgApacheCommonsMathDistributionIntegerDistribution_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, jint first, jint last, id<OrgApacheCommonsMathDistributionIntegerDistribution> dist);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums

- (id<OrgGeogebraCommonKernelArithmeticNumberValue>)getP1 {
  return p1_;
}

- (id<OrgGeogebraCommonKernelArithmeticNumberValue>)getP2 {
  return p2_;
}

- (id<OrgGeogebraCommonKernelArithmeticNumberValue>)getP3 {
  return p3_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getDensityGeo {
  return densityGeo_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getUseDensityGeo {
  return useDensityGeo_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getIsCumulative {
  return isCumulative_;
}

- (jdouble)getFreqMax {
  freqMax_ = 0.0;
  for (jint k = 0; k < ((IOSDoubleArray *) nil_chk(yval_))->size_; ++k) {
    freqMax_ = JavaLangMath_maxWithDouble_withDouble_(IOSDoubleArray_Get(yval_, k), freqMax_);
  }
  return freqMax_;
}

- (IOSDoubleArray *)getYValue {
  return yval_;
}

- (IOSDoubleArray *)getLeftBorder {
  return leftBorder_;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)n
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)d
withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)type {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_(self, cons, label, f, a, b, n, d, type);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f
              withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
              withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
              withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)n
              withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)d {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, f, a, b, n, d);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)n
withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)type {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_(self, cons, label, f, a, b, n, type);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)a
                 withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
                 withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)n
 withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)type
                                                  withDoubleArray:(IOSDoubleArray *)vals
                                                  withDoubleArray:(IOSDoubleArray *)borders
                          withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1 {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_withDoubleArray_withDoubleArray_withOrgGeogebraCommonKernelConstruction_(self, a, b, n, type, vals, borders, cons1);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1 {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, a, b, list1);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)a
                    withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)b
                                                  withDoubleArray:(IOSDoubleArray *)vals
                                                  withDoubleArray:(IOSDoubleArray *)borders
                                                          withInt:(jint)N
                          withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1 {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoNumberValue_withDoubleArray_withDoubleArray_withInt_withOrgGeogebraCommonKernelConstruction_(self, a, b, vals, borders, N, cons1);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2 {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, list1, list2);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2 {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, list1, list2);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                withBoolean:(jboolean)dummy
                                            withDoubleArray:(IOSDoubleArray *)vals
                                            withDoubleArray:(IOSDoubleArray *)borders
                                                    withInt:(jint)N {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withBoolean_withDoubleArray_withDoubleArray_withInt_(self, cons, dummy, vals, borders, N);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)width {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, list1, list2, width);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)width {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, list1, list2, width);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)width
                                                  withDoubleArray:(IOSDoubleArray *)vals
                                                  withDoubleArray:(IOSDoubleArray *)borders
                                                          withInt:(jint)N
                          withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1 {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumberValue_withDoubleArray_withDoubleArray_withInt_withOrgGeogebraCommonKernelConstruction_(self, width, vals, borders, N, cons1);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, list1, n);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, list1, n);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n
                                              withDoubleArray:(IOSDoubleArray *)vals
                                              withDoubleArray:(IOSDoubleArray *)borders
                                                      withInt:(jint)N {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(self, n, vals, borders, N);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2
                                                withBoolean:(jboolean)right {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, label, list1, list2, right);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2
                                                withBoolean:(jboolean)right {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, list1, list2, right);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                            withDoubleArray:(IOSDoubleArray *)vals
                                            withDoubleArray:(IOSDoubleArray *)borders
                                                    withInt:(jint)N {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(self, cons, vals, borders, N);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)isCumulative
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list3
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)useDensity
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)density
                                                withBoolean:(jboolean)right {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, label, isCumulative, list1, list2, list3, useDensity, density, right);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)isCumulative
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list2
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list3
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)useDensity
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)density
                                                withBoolean:(jboolean)right {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, isCumulative, list1, list2, list3, useDensity, density, right);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)isCumulative
                    withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)useDensity
                    withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)density
                                              withDoubleArray:(IOSDoubleArray *)vals
                                              withDoubleArray:(IOSDoubleArray *)borders
                                                      withInt:(jint)N {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(self, isCumulative, useDensity, density, vals, borders, N);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)p1
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)p2
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)p3
                  withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)isCumulative
withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)type {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_(self, cons, label, p1, p2, p3, isCumulative, type);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)p1
                    withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)p2
                    withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)p3
                           withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)isCumulative
    withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)type
                    withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
                    withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
                                                     withDoubleArray:(IOSDoubleArray *)vals
                                                     withDoubleArray:(IOSDoubleArray *)borders
                                                             withInt:(jint)N {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDoubleArray_withDoubleArray_withInt_(self, p1, p2, p3, isCumulative, type, a, b, vals, borders, N);
  return self;
}

- (jboolean)isRight {
  return histogramRight_;
}

- (jboolean)euclidianViewUpdate {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_computeWithBoolean_(self, YES);
  return NO;
}

- (void)setInputOutput {
  {
    JavaUtilArrayList *tempList;
    JavaUtilArrayList *inputList;
    switch ([type_ ordinal]) {
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_UPPERSUM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_LOWERSUM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_TRAPEZOIDALSUM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_LEFTSUM:
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      IOSObjectArray_Set(input_, 0, f_);
      IOSObjectArray_Set(input_, 1, ageo_);
      IOSObjectArray_Set(input_, 2, bgeo_);
      IOSObjectArray_Set(input_, 3, ngeo_);
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_RECTANGLESUM:
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:5 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      IOSObjectArray_Set(input_, 0, f_);
      IOSObjectArray_Set(input_, 1, ageo_);
      IOSObjectArray_Set(input_, 2, bgeo_);
      IOSObjectArray_Set(input_, 3, ngeo_);
      IOSObjectArray_Set(input_, 4, dgeo_);
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART:
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      IOSObjectArray_Set(input_, 0, ageo_);
      IOSObjectArray_Set(input_, 1, bgeo_);
      IOSObjectArray_Set(input_, 2, list1_);
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_FREQUENCY_TABLE:
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      IOSObjectArray_Set(input_, 0, list1_);
      IOSObjectArray_Set(input_, 1, list2_);
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_FREQUENCY_TABLE_WIDTH:
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      IOSObjectArray_Set(input_, 0, list1_);
      IOSObjectArray_Set(input_, 1, list2_);
      IOSObjectArray_Set(input_, 2, widthGeo_);
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_RAWDATA:
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      IOSObjectArray_Set(input_, 0, list1_);
      IOSObjectArray_Set(input_, 1, ngeo_);
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_HISTOGRAM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_HISTOGRAM_DENSITY:
      tempList = [new_JavaUtilArrayList_init() autorelease];
      if (isCumulative_ != nil) {
        [tempList addWithId:isCumulative_];
      }
      [tempList addWithId:list1_];
      [tempList addWithId:list2_];
      if (list3_ != nil) {
        [tempList addWithId:list3_];
      }
      if (useDensityGeo_ != nil) {
        [tempList addWithId:useDensityGeo_];
      }
      if (densityGeo_ != nil) {
        [tempList addWithId:densityGeo_];
      }
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:[tempList size] type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      OrgGeogebraCommonKernelAlgosAlgoElement_set_input_(self, [tempList toArrayWithNSObjectArray:input_]);
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_BERNOULLI:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_BINOMIAL:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_PASCAL:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_HYPERGEOMETRIC:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_POISSON:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_ZIPF:
      inputList = [new_JavaUtilArrayList_init() autorelease];
      [inputList addWithId:p1geo_];
      if (p2geo_ != nil) [inputList addWithId:p2geo_];
      if (p3geo_ != nil) [inputList addWithId:p3geo_];
      if (isCumulative_ != nil) [inputList addWithId:isCumulative_];
      OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:[inputList size] type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
      OrgGeogebraCommonKernelAlgosAlgoElement_set_input_(self, [inputList toArrayWithNSObjectArray:input_]);
      break;
    }
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:sum_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoFunction *)getF {
  return f_;
}

- (jint)getIntervals {
  return N_;
}

- (jdouble)getStep {
  return STEP_;
}

- (IOSDoubleArray *)getValues {
  return yval_;
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getSum {
  return sum_;
}

- (id<OrgGeogebraCommonKernelArithmeticNumberValue>)getA {
  return a_ == nil ? [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, JavaLangDouble_NaN) autorelease] : ((id) a_);
}

- (id<OrgGeogebraCommonKernelArithmeticNumberValue>)getB {
  return b_ == nil ? [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, JavaLangDouble_NaN) autorelease] : ((id) b_);
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getN {
  return (OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(ngeo_, [OrgGeogebraCommonKernelGeosGeoNumeric class]);
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getD {
  return (OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(dgeo_, [OrgGeogebraCommonKernelGeosGeoNumeric class]);
}

- (OrgGeogebraCommonKernelGeosGeoList *)getList1 {
  return list1_;
}

- (OrgGeogebraCommonKernelGeosGeoList *)getList2 {
  return list2_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
}

- (void)computeWithBoolean:(jboolean)onlyZoom {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_computeWithBoolean_(self, onlyZoom);
}

- (jboolean)functionDefinedWithDouble:(jdouble)ad
                           withDouble:(jdouble)bd {
  return OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_functionDefinedWithDouble_withDouble_(self, ad, bd);
}

- (jboolean)useTrapeziums {
  switch ([type_ ordinal]) {
    case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_TRAPEZOIDALSUM:
    return YES;
    default:
    return NO;
  }
}

- (jboolean)isHistogram {
  switch ([type_ ordinal]) {
    case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_HISTOGRAM:
    case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_HISTOGRAM_DENSITY:
    return YES;
    default:
    return NO;
  }
}

- (OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)getType {
  return type_;
}

- (jboolean)prepareDistributionLists {
  return OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_prepareDistributionLists(self);
}

- (void)loadDistributionListsWithInt:(jint)first
                             withInt:(jint)last
withOrgApacheCommonsMathDistributionIntegerDistribution:(id<OrgApacheCommonsMathDistributionIntegerDistribution>)dist {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_loadDistributionListsWithInt_withInt_withOrgApacheCommonsMathDistributionIntegerDistribution_(self, first, last, dist);
}

- (void)update {
  if ([self doStopUpdateCascade]) {
    return;
  }
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  for (jint i = 0; i < [self getOutputLength]; i++) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getOutputWithInt:i])) update];
  }
}

- (void)dealloc {
  RELEASE_(type_);
  RELEASE_(f_);
  RELEASE_(a_);
  RELEASE_(b_);
  RELEASE_(n_);
  RELEASE_(width_);
  RELEASE_(density_);
  RELEASE_(p1_);
  RELEASE_(p2_);
  RELEASE_(p3_);
  RELEASE_(d_);
  RELEASE_(list1_);
  RELEASE_(list2_);
  RELEASE_(list3_);
  RELEASE_(ageo_);
  RELEASE_(bgeo_);
  RELEASE_(ngeo_);
  RELEASE_(dgeo_);
  RELEASE_(widthGeo_);
  RELEASE_(densityGeo_);
  RELEASE_(useDensityGeo_);
  RELEASE_(isCumulative_);
  RELEASE_(p1geo_);
  RELEASE_(p2geo_);
  RELEASE_(p3geo_);
  RELEASE_(sum_);
  RELEASE_(yval_);
  RELEASE_(leftBorder_);
  RELEASE_(extrFinder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getP1", NULL, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "getP2", NULL, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "getP3", NULL, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "getDensityGeo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getUseDensityGeo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getIsCumulative", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getFreqMax", NULL, "D", 0x1, NULL, NULL },
    { "getYValue", NULL, "[D", 0x1, NULL, NULL },
    { "getLeftBorder", NULL, "[D", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoFunction:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoFunction:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoFunction:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:withDoubleArray:withDoubleArray:withOrgGeogebraCommonKernelConstruction:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelGeosGeoNumberValue:withDoubleArray:withDoubleArray:withInt:withOrgGeogebraCommonKernelConstruction:", "AlgoFunctionAreaSums", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withBoolean:withDoubleArray:withDoubleArray:withInt:", "AlgoFunctionAreaSums", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoNumberValue:withDoubleArray:withDoubleArray:withInt:withOrgGeogebraCommonKernelConstruction:", "AlgoFunctionAreaSums", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoNumeric:withDoubleArray:withDoubleArray:withInt:", "AlgoFunctionAreaSums", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withBoolean:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withBoolean:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withDoubleArray:withDoubleArray:withInt:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelGeosGeoNumeric:withBoolean:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelGeosGeoNumeric:withBoolean:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelGeosGeoNumeric:withDoubleArray:withDoubleArray:withInt:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:", "AlgoFunctionAreaSums", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoBoolean:withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withDoubleArray:withDoubleArray:withInt:", "AlgoFunctionAreaSums", NULL, 0x4, NULL, NULL },
    { "isRight", NULL, "Z", 0x1, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x11, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getF", NULL, "Lorg.geogebra.common.kernel.geos.GeoFunction;", 0x1, NULL, NULL },
    { "getIntervals", NULL, "I", 0x1, NULL, NULL },
    { "getStep", NULL, "D", 0x1, NULL, NULL },
    { "getValues", NULL, "[D", 0x1, NULL, NULL },
    { "getSum", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getA", NULL, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "getB", NULL, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "getN", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getD", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getList1", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "getList2", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "computeWithBoolean:", "compute", "V", 0x2, NULL, NULL },
    { "functionDefinedWithDouble:withDouble:", "functionDefined", "Z", 0x2, NULL, NULL },
    { "useTrapeziums", NULL, "Z", 0x1, NULL, NULL },
    { "isHistogram", NULL, "Z", 0x1, NULL, NULL },
    { "getType", NULL, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", 0x1, NULL, NULL },
    { "prepareDistributionLists", NULL, "Z", 0x2, NULL, NULL },
    { "loadDistributionListsWithInt:withInt:withOrgApacheCommonsMathDistributionIntegerDistribution:", "loadDistributionLists", "V", 0x2, "Ljava.lang.Exception;", NULL },
    { "update", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_RECTANGLES_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES },
    { "CHECKPOINTS_", NULL, 0x0, "D", NULL, NULL,  },
    { "SAMPLE_PIXELS_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SAMPLE_PIXELS },
    { "type_", NULL, 0x2, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", NULL, NULL,  },
    { "TOLERANCE_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_TOLERANCE },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "a_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "b_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "width_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "density_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "p1_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "p2_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "p3_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "d_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "list1_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "list2_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "list3_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "ageo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "bgeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "ngeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "dgeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "widthGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "densityGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "useDensityGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "isCumulative_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "p1geo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "p2geo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "p3geo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "sum_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "N_", NULL, 0x2, "I", NULL, NULL,  },
    { "STEP_", NULL, 0x2, "D", NULL, NULL,  },
    { "yval_", NULL, 0x2, "[D", NULL, NULL,  },
    { "leftBorder_", NULL, 0x2, "[D", NULL, NULL,  },
    { "extrFinder_", NULL, 0x2, "Lorg.geogebra.common.kernel.optimization.ExtremumFinder;", NULL, NULL,  },
    { "freqMax_", NULL, 0x2, "D", NULL, NULL,  },
    { "histogramRight_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums = { 2, "AlgoFunctionAreaSums", "org.geogebra.common.kernel.algos", NULL, 0x401, 55, methods, 37, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoFunction *f, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, id<OrgGeogebraCommonKernelArithmeticNumberValue> n, id<OrgGeogebraCommonKernelArithmeticNumberValue> d, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *type) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, type);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_f_(self, f);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_n_(self, n);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_d_(self, d);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ageo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_bgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ngeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(n)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_dgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(d)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
  [self->sum_ setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelGeosGeoFunction *f, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, id<OrgGeogebraCommonKernelArithmeticNumberValue> n, id<OrgGeogebraCommonKernelArithmeticNumberValue> d) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, ((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(f))->cons_, NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_f_(self, f);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_n_(self, n);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_d_(self, d);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ageo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_bgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ngeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(n)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_dgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(d)) toGeoElement]);
  self->N_ = (jint) JavaLangMath_roundWithDouble_([n getDouble]);
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoFunction *f, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, id<OrgGeogebraCommonKernelArithmeticNumberValue> n, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *type) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, type);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_extrFinder_(self, [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) getExtremumFinder]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_f_(self, f);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_n_(self, n);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ageo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_bgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ngeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(n)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
  [self->sum_ setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_withDoubleArray_withDoubleArray_withOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, id<OrgGeogebraCommonKernelGeosGeoNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, id<OrgGeogebraCommonKernelArithmeticNumberValue> n, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *type, IOSDoubleArray *vals, IOSDoubleArray *borders, OrgGeogebraCommonKernelConstruction *cons1) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons1, NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, type);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_n_(self, n);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  self->N_ = (jint) JavaLangMath_roundWithDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(n)) getDouble]);
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelGeosGeoList *list1) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ageo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_bgeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
  [self->sum_ setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelGeosGeoNumberValue_withDoubleArray_withDoubleArray_withInt_withOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, id<OrgGeogebraCommonKernelGeosGeoNumberValue> a, id<OrgGeogebraCommonKernelGeosGeoNumberValue> b, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N, OrgGeogebraCommonKernelConstruction *cons1) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons1, NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  self->N_ = N;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, list1, list2);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_FREQUENCY_TABLE());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list2_(self, list2);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withBoolean_withDoubleArray_withDoubleArray_withInt_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, jboolean dummy, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons, NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_FREQUENCY_TABLE());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  self->N_ = N;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2, id<OrgGeogebraCommonKernelArithmeticNumberValue> width) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, list1, list2, width);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2, id<OrgGeogebraCommonKernelArithmeticNumberValue> width) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_FREQUENCY_TABLE_WIDTH());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list2_(self, list2);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_width_(self, width);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_widthGeo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(width)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumberValue_withDoubleArray_withDoubleArray_withInt_withOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, id<OrgGeogebraCommonKernelGeosGeoNumberValue> width, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N, OrgGeogebraCommonKernelConstruction *cons1) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons1, NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_FREQUENCY_TABLE_WIDTH());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_width_(self, width);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_widthGeo_(self, [((id<OrgGeogebraCommonKernelGeosGeoNumberValue>) nil_chk(width)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  self->N_ = N;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoNumeric *n) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_RAWDATA());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_n_(self, n);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ngeo_(self, [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(n)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
  [self->sum_ setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoNumeric *n) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_RAWDATA());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_n_(self, n);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_ngeo_(self, [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(n)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelGeosGeoNumeric *n, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(n)) getKernel])) getConstruction], NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_RAWDATA());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_n_(self, n);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  self->N_ = N;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2, jboolean right) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, list1, list2, right);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2, jboolean right) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_HISTOGRAM());
  self->histogramRight_ = right;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list2_(self, list2);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons, NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_HISTOGRAM());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
  self->N_ = N;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoBoolean *isCumulative, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2, OrgGeogebraCommonKernelGeosGeoList *list3, OrgGeogebraCommonKernelGeosGeoBoolean *useDensity, OrgGeogebraCommonKernelGeosGeoNumeric *density, jboolean right) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, isCumulative, list1, list2, list3, useDensity, density, right);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoBoolean *isCumulative, OrgGeogebraCommonKernelGeosGeoList *list1, OrgGeogebraCommonKernelGeosGeoList *list2, OrgGeogebraCommonKernelGeosGeoList *list3, OrgGeogebraCommonKernelGeosGeoBoolean *useDensity, OrgGeogebraCommonKernelGeosGeoNumeric *density, jboolean right) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  self->histogramRight_ = right;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_HISTOGRAM_DENSITY());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_isCumulative_(self, isCumulative);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list1_(self, list1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list2_(self, list2);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_list3_(self, list3);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_density_(self, density);
  if (density != nil) OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_densityGeo_(self, [density toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_useDensityGeo_(self, useDensity);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelGeosGeoBoolean *isCumulative, OrgGeogebraCommonKernelGeosGeoBoolean *useDensity, OrgGeogebraCommonKernelGeosGeoNumeric *density, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(useDensity)) getConstruction], NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_HISTOGRAM_DENSITY());
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_isCumulative_(self, isCumulative);
  self->N_ = N;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_density_(self, density);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_useDensityGeo_(self, useDensity);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> p1, id<OrgGeogebraCommonKernelArithmeticNumberValue> p2, id<OrgGeogebraCommonKernelArithmeticNumberValue> p3, OrgGeogebraCommonKernelGeosGeoBoolean *isCumulative, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *type) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, type);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p1_(self, p1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p2_(self, p2);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p3_(self, p3);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p1geo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(p1)) toGeoElement]);
  if (p2 != nil) OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p2geo_(self, [p2 toGeoElement]);
  if (p3 != nil) OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p3geo_(self, [p3 toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_isCumulative_(self, isCumulative);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(self);
  [self->sum_ setDrawableWithBoolean:YES];
  [self->sum_ setLabelWithNSString:label];
  if (self->yval_ == nil) {
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:0]);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:0]);
  }
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoBoolean_withOrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDoubleArray_withDoubleArray_withInt_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> p1, id<OrgGeogebraCommonKernelArithmeticNumberValue> p2, id<OrgGeogebraCommonKernelArithmeticNumberValue> p3, OrgGeogebraCommonKernelGeosGeoBoolean *isCumulative, OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *type, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(isCumulative)) getConstruction], NO);
  self->CHECKPOINTS_ = 100;
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_type_(self, type);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p1_(self, p1);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p2_(self, p2);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p3_(self, p3);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p1geo_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(p1)) toGeoElement]);
  if (p2 != nil) OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p2geo_(self, [p2 toGeoElement]);
  if (p3 != nil) OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_p3geo_(self, [p3 toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_isCumulative_(self, isCumulative);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, a);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, b);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_yval_(self, vals);
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_leftBorder_(self, borders);
  self->N_ = N;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_compute(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_computeWithBoolean_(self, NO);
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_computeWithBoolean_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, jboolean onlyZoom) {
  OrgGeogebraCommonKernelGeosGeoElement *geo, *geo2;
  jboolean isDefined = YES;
  if (self->sum_ == nil) {
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_sum_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(self->cons_));
  }
  {
    id<OrgGeogebraCommonKernelRootsRealRootFunction> fun;
    jdouble ad;
    jdouble bd;
    jdouble ints;
    id<OrgGeogebraCommonKernelRootsRealRootFunction> fmin;
    jdouble totalArea;
    jdouble left, right, min;
    jdouble visibleMin;
    jdouble visibleMax;
    jdouble noOfSamples;
    jdouble subStep;
    jboolean doSubSamples;
    jboolean positiveStep;
    jint upperBound;
    jdouble mini;
    jdouble maxi;
    jint minIndex, maxIndex;
    jdouble step;
    jint rawDataSize;
    jdouble totalWidth;
    jdouble noOfBars;
    jdouble gap;
    jdouble datum, valueFrequency;
    jdouble start;
    jdouble end;
    jdouble area;
    jdouble p;
    jboolean cumulative;
    jint NN;
    jdouble colWidth;
    jboolean useFrequency;
    jdouble densityFactor;
    switch ([self->type_ ordinal]) {
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_LOWERSUM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_UPPERSUM:
      if (self->f_ == nil || !([self->f_ isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->ageo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->bgeo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->ngeo_)) isDefined])) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      fun = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) getRealRootFunctionY];
      ad = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->a_)) getDouble];
      bd = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->b_)) getDouble];
      if (!onlyZoom) {
        isDefined = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_functionDefinedWithDouble_withDouble_(self, ad, bd);
      }
      else {
        isDefined = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) isDefined];
      }
      ints = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->n_)) getDouble];
      if (ints < 1) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      else if (ints > OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES) {
        self->N_ = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES;
      }
      else {
        self->N_ = (jint) JavaLangMath_roundWithDouble_(ints);
      }
      self->STEP_ = (bd - ad) / self->N_;
      if (self->yval_ == nil || self->yval_->size_ < self->N_) {
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
      }
      fmin = fun;
      if (self->type_ == OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_UPPERSUM()) fmin = [new_OrgGeogebraCommonKernelOptimizationNegativeRealRootFunction_initWithOrgGeogebraCommonKernelRootsRealRootFunction_(fun) autorelease];
      totalArea = 0;
      visibleMin = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(ad, bd), [((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getViewsXMinWithOrgGeogebraCommonKernelGeosGeoElement:self->sum_]);
      visibleMax = JavaLangMath_minWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(ad, bd), [self->kernel_ getViewsXMaxWithOrgGeogebraCommonKernelGeosGeoElement:self->sum_]);
      noOfSamples = [((OrgGeogebraCommonMainApp *) nil_chk([self->kernel_ getApplication])) countPixelsWithDouble:visibleMin withDouble:visibleMax] / OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SAMPLE_PIXELS;
      subStep = JavaLangMath_absWithDouble_(visibleMax - visibleMin) / noOfSamples;
      doSubSamples = (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_(subStep) && JavaLangMath_absWithDouble_(self->STEP_) > subStep);
      positiveStep = (self->STEP_ >= 0);
      for (jint i = 0; i < self->N_; i++) {
        *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = ad + i * self->STEP_;
        if (positiveStep) {
          left = IOSDoubleArray_Get(self->leftBorder_, i);
          right = IOSDoubleArray_Get(self->leftBorder_, i) + self->STEP_;
        }
        else {
          left = IOSDoubleArray_Get(self->leftBorder_, i) + self->STEP_;
          right = IOSDoubleArray_Get(self->leftBorder_, i);
        }
        min = JavaLangDouble_POSITIVE_INFINITY;
        if (doSubSamples && ((self->STEP_ > 0 ? left : right) < visibleMax && (self->STEP_ > 0 ? right : left) > visibleMin)) {
          jdouble y, minSample = left;
          for (jdouble x = left; x < right; x += subStep) {
            y = [((id<OrgGeogebraCommonKernelRootsRealRootFunction>) nil_chk(fmin)) evaluateWithDouble:x];
            if (y < min) {
              min = y;
              minSample = x;
            }
          }
          y = [((id<OrgGeogebraCommonKernelRootsRealRootFunction>) nil_chk(fmin)) evaluateWithDouble:right];
          if (y < min) minSample = right;
          left = JavaLangMath_maxWithDouble_withDouble_(left, minSample - subStep);
          right = JavaLangMath_minWithDouble_withDouble_(right, minSample + subStep);
        }
        jdouble x = [((OrgGeogebraCommonKernelOptimizationExtremumFinder *) nil_chk(self->extrFinder_)) findMinimumWithDouble:left withDouble:right withOrgGeogebraCommonKernelRootsRealRootFunction:fmin withDouble:OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_TOLERANCE];
        jdouble y = [((id<OrgGeogebraCommonKernelRootsRealRootFunction>) nil_chk(fmin)) evaluateWithDouble:x];
        if (y > min) y = min;
        if (self->type_ == OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_UPPERSUM()) y = -y;
        *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = y;
        totalArea += y;
      }
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:totalArea * self->STEP_];
      if (!isDefined) [self->sum_ setUndefined];
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_TRAPEZOIDALSUM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_RECTANGLESUM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_LEFTSUM:
      if (self->f_ == nil || !([self->f_ isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->ageo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->bgeo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->ngeo_)) isDefined])) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      if ((self->type_ == OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_RECTANGLESUM()) && (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->dgeo_)) isDefined])) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
      }
      fun = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) getRealRootFunctionY];
      ad = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->a_)) getDouble];
      bd = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->b_)) getDouble];
      if (!onlyZoom) {
        isDefined = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_functionDefinedWithDouble_withDouble_(self, ad, bd);
      }
      else {
        isDefined = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) isDefined];
      }
      ints = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->n_)) getDouble];
      if (ints < 1) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      else if (ints > OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES) {
        self->N_ = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES;
      }
      else {
        self->N_ = (jint) JavaLangMath_roundWithDouble_(ints);
      }
      self->STEP_ = (bd - ad) / self->N_;
      if (self->yval_ == nil || self->yval_->size_ < self->N_ + 1) {
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_ + 1]);
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_ + 1]);
      }
      totalArea = 0;
      upperBound = self->type_ == OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_TRAPEZOIDALSUM() ? self->N_ + 1 : self->N_;
      for (jint i = 0; i < upperBound; i++) {
        *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = ad + i * self->STEP_;
        if (self->type_ == OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_RECTANGLESUM()) {
          jdouble dd = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->d_)) getDouble];
          if ((0.0 <= dd) && (dd <= 1.0)) {
            *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = [((id<OrgGeogebraCommonKernelRootsRealRootFunction>) nil_chk(fun)) evaluateWithDouble:IOSDoubleArray_Get(self->leftBorder_, i) + dd * self->STEP_];
          }
          else {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
        }
        else {
          *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = [((id<OrgGeogebraCommonKernelRootsRealRootFunction>) nil_chk(fun)) evaluateWithDouble:IOSDoubleArray_Get(self->leftBorder_, i)];
        }
        totalArea += IOSDoubleArray_Get(nil_chk(self->yval_), i);
      }
      if (self->type_ == OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_TRAPEZOIDALSUM()) {
        totalArea -= (IOSDoubleArray_Get(nil_chk(self->yval_), 0) + IOSDoubleArray_Get(self->yval_, self->N_)) / 2;
      }
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:totalArea * self->STEP_];
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART:
      if (!([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->ageo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->bgeo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list1_)) isDefined])) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      self->N_ = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list1_)) size];
      ad = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->a_)) getDouble];
      bd = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->b_)) getDouble];
      ints = [self->list1_ size];
      if (ints < 1) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      else if (ints > OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES) {
        self->N_ = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_MAX_RECTANGLES;
      }
      else {
        self->N_ = (jint) JavaLangMath_roundWithDouble_(ints);
      }
      self->STEP_ = (bd - ad) / self->N_;
      if (self->yval_ == nil || self->yval_->size_ < self->N_) {
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
      }
      totalArea = 0;
      for (jint i = 0; i < self->N_; i++) {
        *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = ad + i * self->STEP_;
        geo = [self->list1_ getWithInt:i];
        if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoNumeric]) *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) getDouble];
        else *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = 0;
        totalArea += IOSDoubleArray_Get(nil_chk(self->yval_), i);
      }
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:totalArea * self->STEP_];
      if (!isDefined) {
        [self->sum_ setUndefined];
      }
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_RAWDATA:
      if (![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list1_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->ngeo_)) isDefined]) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      mini = JavaLangDouble_POSITIVE_INFINITY;
      maxi = JavaLangDouble_NEGATIVE_INFINITY;
      minIndex = -1;
      maxIndex = -1;
      step = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->n_)) getDouble];
      rawDataSize = [self->list1_ size];
      if (step < 0 || OrgGeogebraCommonKernelKernel_isZeroWithDouble_(step) || rawDataSize < 2) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      for (jint i = 0; i < rawDataSize; i++) {
        geo = [self->list1_ getWithInt:i];
        if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoNumeric]) {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
          return;
        }
        jdouble val = [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) getDouble];
        if (val > maxi) {
          maxi = val;
          maxIndex = i;
        }
        if (val < mini) {
          mini = val;
          minIndex = i;
        }
      }
      if (maxi == mini || maxIndex == -1 || minIndex == -1) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      totalWidth = maxi - mini;
      noOfBars = totalWidth / [self->n_ getDouble];
      gap = 0;
      {
        self->N_ = J2ObjCFpToInt(noOfBars) + 2;
        gap = ((self->N_ - 1) * step - totalWidth) / 2.0;
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, ([new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, mini - gap) autorelease]));
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, ([new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, maxi + gap) autorelease]));
      }
      if (self->yval_ == nil || self->yval_->size_ < self->N_) {
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
      }
      for (jint i = 0; i < self->N_; i++) {
        *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = mini - gap + step * i;
      }
      for (jint i = 0; i < self->N_; i++) *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = 0;
      valueFrequency = 1;
      for (jint i = 0; i < [self->list1_ size]; i++) {
        geo = [self->list1_ getWithInt:i];
        if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoNumeric]) datum = [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) getDouble];
        else {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
          return;
        }
        jdouble oldMaxBorder = IOSDoubleArray_Get(nil_chk(self->leftBorder_), self->N_ - 1);
        *IOSDoubleArray_GetRef(self->leftBorder_, self->N_ - 1) += JavaLangMath_absWithDouble_(IOSDoubleArray_Get(self->leftBorder_, self->N_ - 1) / 100000000);
        for (jint j = 1; j < self->N_; j++) {
          if (datum < IOSDoubleArray_Get(self->leftBorder_, j)) {
            (*IOSDoubleArray_GetRef(nil_chk(self->yval_), j - 1))++;
            break;
          }
        }
        *IOSDoubleArray_GetRef(self->leftBorder_, self->N_ - 1) = oldMaxBorder;
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:[self->list1_ size] * step];
      }
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_FREQUENCY_TABLE:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_BINOMIAL:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_POISSON:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_HYPERGEOMETRIC:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_PASCAL:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_ZIPF:
      if (self->type_ != OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_FREQUENCY_TABLE()) {
        if (!OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_prepareDistributionLists(self)) {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
          return;
        }
      }
      if (![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list1_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list2_)) isDefined]) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      self->N_ = [self->list1_ size] + 1;
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
      if (self->N_ == 2) {
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:2]);
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:2]);
        *IOSDoubleArray_GetRef(self->yval_, 0) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list2_)) getWithInt:0]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
        *IOSDoubleArray_GetRef(self->leftBorder_, 0) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list1_ getWithInt:0]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble] - 0.5;
        *IOSDoubleArray_GetRef(self->leftBorder_, 1) = IOSDoubleArray_Get(self->leftBorder_, 0) + 1;
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_ageo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(self->leftBorder_, 0)));
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_bgeo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(self->leftBorder_, 1)));
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->ageo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->bgeo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:IOSDoubleArray_Get(self->yval_, 0)];
        return;
      }
      if ([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list2_)) size] + 1 != self->N_ || self->N_ < 3) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      start = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list1_ getWithInt:0]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
      end = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list1_ getWithInt:self->N_ - 2]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
      step = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list1_ getWithInt:1]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble] - start;
      if (!OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(end - start, step * (self->N_ - 2)) || step <= 0) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_ageo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, start - step / 2));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_bgeo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, end + step / 2));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->ageo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->bgeo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
      for (jint i = 0; i < self->N_; i++) {
        *IOSDoubleArray_GetRef(self->leftBorder_, i) = start - step / 2 + step * i;
      }
      area = 0;
      for (jint i = 0; i < self->N_ - 1; i++) {
        geo = [self->list2_ getWithInt:i];
        if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoNumeric]) {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
          return;
        }
        *IOSDoubleArray_GetRef(self->yval_, i) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list2_ getWithInt:i]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
        area += IOSDoubleArray_Get(self->yval_, i) * step;
      }
      if (self->type_ == OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_BARCHART_FREQUENCY_TABLE()) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:area];
      }
      else {
        if (self->isCumulative_ != nil && [((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast(self->isCumulative_, [OrgGeogebraCommonKernelGeosGeoBoolean class])) getBoolean]) {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:JavaLangDouble_POSITIVE_INFINITY];
        }
        else [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:1.0];
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) updateCascade];
      }
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_BERNOULLI:
      p = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p1_)) getDouble];
      if (p < 0 || p > 1) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      self->N_ = 3;
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:3]);
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:3]);
      cumulative = [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast(self->isCumulative_, [OrgGeogebraCommonKernelGeosGeoBoolean class])))) getBoolean];
      *IOSDoubleArray_GetRef(self->yval_, 0) = 1 - p;
      *IOSDoubleArray_GetRef(self->yval_, 1) = cumulative ? 1 : p;
      *IOSDoubleArray_GetRef(self->leftBorder_, 0) = -0.5;
      *IOSDoubleArray_GetRef(self->leftBorder_, 1) = 0.5;
      *IOSDoubleArray_GetRef(self->leftBorder_, 2) = 1.5;
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_ageo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(self->leftBorder_, 0)));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_bgeo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(self->leftBorder_, 1)));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->ageo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->bgeo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
      if (self->isCumulative_ != nil && [((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast(self->isCumulative_, [OrgGeogebraCommonKernelGeosGeoBoolean class])) getBoolean]) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:JavaLangDouble_POSITIVE_INFINITY];
      }
      else {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:1.0];
      }
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) updateCascade];
      return;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_FREQUENCY_TABLE_WIDTH:
      if (![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list1_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list2_)) isDefined]) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      self->N_ = [self->list1_ size] + 1;
      NN = 2 * self->N_ - 1;
      if ([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list2_)) size] + 1 != self->N_ || self->N_ < 2) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      start = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list1_ getWithInt:0]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
      end = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list1_ getWithInt:self->N_ - 2]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
      if (self->N_ == 2) {
        step = 1;
      }
      else {
        step = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list1_ getWithInt:1]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble] - start;
      }
      colWidth = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->width_)) getDouble];
      if (!OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(end - start, step * (self->N_ - 2)) || step <= 0) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_ageo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, start - colWidth / 2));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_bgeo_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, end + colWidth / 2));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->ageo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
      OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(self->bgeo_, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
      if (self->yval_ == nil || self->yval_->size_ < NN - 1) {
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:NN - 1]);
        OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:NN - 1]);
      }
      for (jint i = 0; i < NN - 1; i += 2) {
        *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = start + step * (i / 2.0) - colWidth / 2.0;
        *IOSDoubleArray_GetRef(self->leftBorder_, i + 1) = start + step * (i / 2.0) + colWidth / 2.0;
      }
      area = 0;
      for (jint i = 0; i < NN - 1; i++) {
        if (i % 2 == 1) {
          *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = 0;
        }
        else {
          geo = [self->list2_ getWithInt:i / 2];
          if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoNumeric]) {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
          *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(([self->list2_ getWithInt:i / 2]), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
          area += IOSDoubleArray_Get(self->yval_, i) * colWidth;
        }
      }
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:area];
      self->N_ = NN - 1;
      break;
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_HISTOGRAM:
      case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_HISTOGRAM_DENSITY:
      if (![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list1_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list2_)) isDefined]) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      self->N_ = [self->list1_ size];
      if (self->N_ < 2) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      useFrequency = (self->list3_ != nil);
      if (useFrequency && ![((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list3_)) isDefined]) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
        return;
      }
      if (self->useDensityGeo_ == nil) {
        densityFactor = 1;
      }
      else if (![((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast(self->useDensityGeo_, [OrgGeogebraCommonKernelGeosGeoBoolean class])) getBoolean]) {
        densityFactor = -1;
      }
      else {
        densityFactor = (self->density_ != nil) ? [self->density_ getDouble] : 1;
        if (densityFactor <= 0 && densityFactor != -1) {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
          return;
        }
      }
      if (self->N_ - 1 != [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list2_)) size] || self->useDensityGeo_ != nil || self->isCumulative_ != nil) {
        if (self->yval_ == nil || self->yval_->size_ < self->N_) {
          OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
          OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
        }
        for (jint i = 0; i < self->N_ - 1; i++) {
          geo = [self->list1_ getWithInt:i];
          if (i == 0) {
            if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
            else {
              [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
              return;
            }
          }
          if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoNumeric]) *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) getDouble];
          else {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
        }
        geo = [self->list1_ getWithInt:self->N_ - 1];
        if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
          OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
        }
        else {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
          return;
        }
        *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), self->N_ - 1) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
        for (jint i = 0; i < self->N_; i++) *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = 0;
        valueFrequency = 1;
        for (jint i = 0; i < [self->list2_ size]; i++) {
          geo = [self->list2_ getWithInt:i];
          if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoNumeric]) datum = [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) getDouble];
          else {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
          if (useFrequency) {
            geo2 = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->list3_)) getWithInt:i];
            if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo2)) isGeoNumeric]) valueFrequency = [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo2, [OrgGeogebraCommonKernelGeosGeoNumeric class])) getDouble];
            else {
              [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
              return;
            }
          }
          if (valueFrequency < 0) {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
          if (datum < IOSDoubleArray_Get(self->leftBorder_, 0) || datum > IOSDoubleArray_Get(self->leftBorder_, self->N_ - 1)) {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
          if (!self->histogramRight_) {
            jdouble oldMaxBorder = IOSDoubleArray_Get(self->leftBorder_, self->N_ - 1);
            *IOSDoubleArray_GetRef(self->leftBorder_, self->N_ - 1) += JavaLangMath_absWithDouble_(IOSDoubleArray_Get(self->leftBorder_, self->N_ - 1) / 100000000);
            for (jint j = 1; j < self->N_; j++) {
              if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(IOSDoubleArray_Get(self->leftBorder_, j), datum)) {
                *IOSDoubleArray_GetRef(nil_chk(self->yval_), j - 1) += valueFrequency;
                break;
              }
            }
            *IOSDoubleArray_GetRef(self->leftBorder_, self->N_ - 1) = oldMaxBorder;
          }
          else {
            jdouble oldMinBorder = IOSDoubleArray_Get(self->leftBorder_, 0);
            *IOSDoubleArray_GetRef(self->leftBorder_, 0) += JavaLangMath_absWithDouble_(IOSDoubleArray_Get(self->leftBorder_, 0) / 100000000);
            for (jint j = 1; j < self->N_; j++) {
              if (OrgGeogebraCommonKernelKernel_isGreaterEqualWithDouble_withDouble_(IOSDoubleArray_Get(self->leftBorder_, j), datum)) {
                *IOSDoubleArray_GetRef(nil_chk(self->yval_), j - 1) += valueFrequency;
                break;
              }
            }
            *IOSDoubleArray_GetRef(self->leftBorder_, 0) = oldMinBorder;
          }
        }
      }
      else {
        densityFactor = -1;
        if (self->yval_ == nil || self->yval_->size_ < self->N_) {
          OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_yval_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
          OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_leftBorder_(self, [IOSDoubleArray newArrayWithLength:self->N_]);
        }
        for (jint i = 0; i < self->N_ - 1; i++) {
          geo = [self->list1_ getWithInt:i];
          if (i == 0) {
            if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_a_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
            else {
              [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
              return;
            }
          }
          if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), i) = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble];
          else {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
          geo = [self->list2_ getWithInt:i];
          if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
            *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble];
          }
          else {
            [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
            return;
          }
        }
        geo = [self->list1_ getWithInt:self->N_ - 1];
        if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
          OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_set_b_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
        }
        else {
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setUndefined];
          return;
        }
        *IOSDoubleArray_GetRef(nil_chk(self->leftBorder_), self->N_ - 1) = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
      }
      if (self->isCumulative_ != nil && [((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast(self->isCumulative_, [OrgGeogebraCommonKernelGeosGeoBoolean class])) getBoolean]) {
        for (jint i = 1; i < self->N_; i++) {
          *IOSDoubleArray_GetRef(nil_chk(self->yval_), i) += IOSDoubleArray_Get(self->yval_, i - 1);
        }
      }
      if (densityFactor != -1) {
        for (jint i = 1; i < self->N_; i++) {
          *IOSDoubleArray_GetRef(nil_chk(self->yval_), i - 1) = densityFactor * IOSDoubleArray_Get(self->yval_, i - 1) / (IOSDoubleArray_Get(nil_chk(self->leftBorder_), i) - IOSDoubleArray_Get(self->leftBorder_, i - 1));
        }
      }
      totalArea = 0;
      for (jint i = 1; i < self->N_; i++) {
        totalArea += (IOSDoubleArray_Get(nil_chk(self->leftBorder_), i) - IOSDoubleArray_Get(self->leftBorder_, i - 1)) * IOSDoubleArray_Get(nil_chk(self->yval_), i - 1);
      }
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->sum_)) setValueWithDouble:totalArea];
      break;
    }
  }
}

jboolean OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_functionDefinedWithDouble_withDouble_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, jdouble ad, jdouble bd) {
  jdouble interval = (bd - ad) / self->CHECKPOINTS_;
  for (jdouble temp = ad; (interval > 0 && temp < bd) || (interval < 0 && temp > bd); temp += interval) {
    jdouble val = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) evaluateWithDouble:temp];
    if (JavaLangDouble_isNaNWithDouble_(val) || JavaLangDouble_isInfiniteWithDouble_(val)) {
      return NO;
    }
  }
  jdouble val = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) evaluateWithDouble:bd];
  if (JavaLangDouble_isNaNWithDouble_(val) || JavaLangDouble_isInfiniteWithDouble_(val)) return NO;
  return YES;
}

jboolean OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_prepareDistributionLists(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self) {
  id<OrgApacheCommonsMathDistributionIntegerDistribution> dist = nil;
  jint first = 0, last = 0;
  @try {
    {
      jint n;
      jdouble p;
      jdouble lambda;
      jint pop;
      jint successes;
      jint sample;
      switch ([self->type_ ordinal]) {
        case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_BINOMIAL:
        if (!([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p1geo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p2geo_)) isDefined])) return NO;
        n = (jint) JavaLangMath_roundWithDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p1_)) getDouble]);
        p = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p2_)) getDouble];
        dist = [new_OrgApacheCommonsMathDistributionBinomialDistributionImpl_initWithInt_withDouble_(n, p) autorelease];
        first = 0;
        last = n;
        break;
        case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_PASCAL:
        if (!([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p1geo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p2geo_)) isDefined])) return NO;
        n = (jint) JavaLangMath_roundWithDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p1_)) getDouble]);
        p = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p2_)) getDouble];
        dist = [new_OrgApacheCommonsMathDistributionPascalDistributionImpl_initWithInt_withDouble_(n, p) autorelease];
        first = 0;
        last = J2ObjCFpToInt(JavaLangMath_maxWithDouble_withDouble_(1, [((OrgGeogebraCommonKernelKernel *) nil_chk((self->kernel_))) getXmax] + 1));
        break;
        case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_ZIPF:
        if (!([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p1geo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p2geo_)) isDefined])) return NO;
        n = (jint) JavaLangMath_roundWithDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p1_)) getDouble]);
        p = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p2_)) getDouble];
        dist = [new_OrgApacheCommonsMathDistributionZipfDistributionImpl_initWithInt_withDouble_(n, p) autorelease];
        first = 0;
        last = n;
        break;
        case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_POISSON:
        if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p1geo_)) isDefined]) return NO;
        lambda = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p1_)) getDouble];
        dist = [new_OrgApacheCommonsMathDistributionPoissonDistributionImpl_initWithDouble_(lambda) autorelease];
        first = 0;
        last = J2ObjCFpToInt(JavaLangMath_maxWithDouble_withDouble_(1, [((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getXmax] + 1));
        break;
        case OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumType_BARCHART_HYPERGEOMETRIC:
        if (!([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p1geo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p2geo_)) isDefined] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->p3geo_)) isDefined])) return NO;
        pop = J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p1_)) getDouble]);
        successes = J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p2_)) getDouble]);
        sample = J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->p3_)) getDouble]);
        dist = [new_OrgApacheCommonsMathDistributionHypergeometricDistributionImpl_initWithInt_withInt_withInt_(pop, successes, sample) autorelease];
        first = JavaLangMath_maxWithInt_withInt_(0, successes + sample - pop);
        last = JavaLangMath_minWithInt_withInt_(successes, sample);
        break;
      }
    }
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_loadDistributionListsWithInt_withInt_withOrgApacheCommonsMathDistributionIntegerDistribution_(self, first, last, dist);
  }
  @catch (JavaLangException *e) {
    OrgGeogebraCommonMainApp_debugWithNSString_([((JavaLangException *) nil_chk(e)) getMessage]);
    return NO;
  }
  return YES;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_loadDistributionListsWithInt_withInt_withOrgApacheCommonsMathDistributionIntegerDistribution_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums *self, jint first, jint last, id<OrgApacheCommonsMathDistributionIntegerDistribution> dist) {
  jboolean oldSuppress = [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) isSuppressLabelsActive];
  [self->cons_ setSuppressLabelCreationWithBoolean:YES];
  if (self->list1_ != nil) [self->list1_ remove];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_list1_(self, new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(self->cons_));
  if (self->list2_ != nil) [self->list2_ remove];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_setAndConsume_list2_(self, new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(self->cons_));
  jdouble prob;
  jdouble cumProb = 0;
  for (jint i = first; i <= last; i++) {
    [self->list1_ addWithOrgGeogebraCommonKernelGeosGeoElement:[new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, i) autorelease]];
    prob = [((id<OrgApacheCommonsMathDistributionIntegerDistribution>) nil_chk(dist)) probabilityWithInt:i];
    cumProb += prob;
    if (self->isCumulative_ != nil && [((OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast(self->isCumulative_, [OrgGeogebraCommonKernelGeosGeoBoolean class])) getBoolean]) [self->list2_ addWithOrgGeogebraCommonKernelGeosGeoElement:[new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, cumProb) autorelease]];
    else [self->list2_ addWithOrgGeogebraCommonKernelGeosGeoElement:[new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, prob) autorelease]];
  }
  [self->cons_ setSuppressLabelCreationWithBoolean:oldSuppress];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum)

OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_values_[17];

@implementation OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_values() {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_values_ count:17 type:OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_values();
}

+ (OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initialize();
  for (int i = 0; i < 17; i++) {
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *e = OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum class]) {
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_UPPERSUM = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"UPPERSUM", 0);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_LOWERSUM = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"LOWERSUM", 1);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_LEFTSUM = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"LEFTSUM", 2);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_RECTANGLESUM = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"RECTANGLESUM", 3);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_TRAPEZOIDALSUM = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"TRAPEZOIDALSUM", 4);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART", 5);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_RAWDATA = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_RAWDATA", 6);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_FREQUENCY_TABLE = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_FREQUENCY_TABLE", 7);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_FREQUENCY_TABLE_WIDTH = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_FREQUENCY_TABLE_WIDTH", 8);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_HISTOGRAM = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"HISTOGRAM", 9);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_HISTOGRAM_DENSITY = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"HISTOGRAM_DENSITY", 10);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_BINOMIAL = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_BINOMIAL", 11);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_PASCAL = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_PASCAL", 12);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_POISSON = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_POISSON", 13);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_HYPERGEOMETRIC = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_HYPERGEOMETRIC", 14);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_BERNOULLI = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_BERNOULLI", 15);
    OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_ZIPF = new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(@"BARCHART_ZIPF", 16);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "UPPERSUM", "UPPERSUM", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_UPPERSUM, NULL,  },
    { "LOWERSUM", "LOWERSUM", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_LOWERSUM, NULL,  },
    { "LEFTSUM", "LEFTSUM", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_LEFTSUM, NULL,  },
    { "RECTANGLESUM", "RECTANGLESUM", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_RECTANGLESUM, NULL,  },
    { "TRAPEZOIDALSUM", "TRAPEZOIDALSUM", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_TRAPEZOIDALSUM, NULL,  },
    { "BARCHART", "BARCHART", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART, NULL,  },
    { "BARCHART_RAWDATA", "BARCHART_RAWDATA", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_RAWDATA, NULL,  },
    { "BARCHART_FREQUENCY_TABLE", "BARCHART_FREQUENCY_TABLE", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_FREQUENCY_TABLE, NULL,  },
    { "BARCHART_FREQUENCY_TABLE_WIDTH", "BARCHART_FREQUENCY_TABLE_WIDTH", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_FREQUENCY_TABLE_WIDTH, NULL,  },
    { "HISTOGRAM", "HISTOGRAM", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_HISTOGRAM, NULL,  },
    { "HISTOGRAM_DENSITY", "HISTOGRAM_DENSITY", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_HISTOGRAM_DENSITY, NULL,  },
    { "BARCHART_BINOMIAL", "BARCHART_BINOMIAL", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_BINOMIAL, NULL,  },
    { "BARCHART_PASCAL", "BARCHART_PASCAL", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_PASCAL, NULL,  },
    { "BARCHART_POISSON", "BARCHART_POISSON", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_POISSON, NULL,  },
    { "BARCHART_HYPERGEOMETRIC", "BARCHART_HYPERGEOMETRIC", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_HYPERGEOMETRIC, NULL,  },
    { "BARCHART_BERNOULLI", "BARCHART_BERNOULLI", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_BERNOULLI, NULL,  },
    { "BARCHART_ZIPF", "BARCHART_ZIPF", 0x4019, "Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;", &OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_BARCHART_ZIPF, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.algos.AlgoFunctionAreaSums$SumType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum = { 2, "SumType", "org.geogebra.common.kernel.algos", "AlgoFunctionAreaSums", 0x4019, 0, NULL, 17, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/algos/AlgoFunctionAreaSums$SumType;>;" };
  return &_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *new_OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum *self = [OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum alloc];
  OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum)
