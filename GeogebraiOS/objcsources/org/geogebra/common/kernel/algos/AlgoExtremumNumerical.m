//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoExtremumNumerical.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoExtremumNumerical.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionable.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"

@interface OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical () {
 @public
  id<OrgGeogebraCommonKernelGeosGeoFunctionable> function_;
  OrgGeogebraCommonKernelGeosGeoFunction *f_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> left_;
  OrgGeogebraCommonKernelGeosGeoElement *geoleft_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> right_;
  OrgGeogebraCommonKernelGeosGeoElement *georight_;
  OrgGeogebraCommonKernelGeosGeoPoint *E_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, function_, id<OrgGeogebraCommonKernelGeosGeoFunctionable>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, f_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, left_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, geoleft_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, right_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, georight_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, E_, OrgGeogebraCommonKernelGeosGeoPoint *)

static jdouble OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_xres_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, xres_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical, xres_, jdouble)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_compute(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
             withOrgGeogebraCommonKernelGeosGeoFunctionable:(id<OrgGeogebraCommonKernelGeosGeoFunctionable>)function
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)left
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)right {
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, function, left, right);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Extremum();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(function_)) toGeoElement]);
  IOSObjectArray_Set(input_, 1, geoleft_);
  IOSObjectArray_Set(input_, 2, georight_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:E_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getNumericalExtremum {
  return E_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_compute(self);
}

+ (jdouble)getX {
  return OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_getX();
}

- (void)dealloc {
  RELEASE_(function_);
  RELEASE_(f_);
  RELEASE_(left_);
  RELEASE_(geoleft_);
  RELEASE_(right_);
  RELEASE_(georight_);
  RELEASE_(E_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoFunctionable:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoExtremumNumerical", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getNumericalExtremum", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getX", NULL, "D", 0x19, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "function_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionable;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "left_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "geoleft_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "right_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "georight_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "E_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "xres_", NULL, 0xa, "D", &OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_xres_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical = { 2, "AlgoExtremumNumerical", "org.geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoFunctionable> function, id<OrgGeogebraCommonKernelArithmeticNumberValue> left, id<OrgGeogebraCommonKernelArithmeticNumberValue> right) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_set_function_(self, function);
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_set_f_(self, [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(function)) getGeoFunction]);
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_set_left_(self, left);
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_set_geoleft_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(left)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_set_right_(self, right);
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_set_georight_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(right)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_setAndConsume_E_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self->E_ setCoordsWithDouble:0.0 withDouble:0.0 withDouble:1.0];
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_compute(self);
  [self->E_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical *new_OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoFunctionable> function, id<OrgGeogebraCommonKernelArithmeticNumberValue> left, id<OrgGeogebraCommonKernelArithmeticNumberValue> right) {
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical *self = [OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical alloc];
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, function, left, right);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_compute(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical *self) {
  jint MAXITERATIONS = 100;
  jint DIVIDER = 4;
  jboolean isgoingup = YES;
  jdouble l = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->left_)) getDouble];
  jdouble r = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->right_)) getDouble];
  jdouble epsilon = JavaLangMath_absWithDouble_((r - l)) / 1.0E15;
  jdouble diff = epsilon * 2.0;
  jboolean didslice = NO;
  jdouble newleft, newright;
  jint iterations = 0;
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(self->function_)) toGeoElement])) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geoleft_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->georight_)) isDefined] || ([self->right_ getDouble] <= [self->left_ getDouble])) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->E_)) setUndefined];
    return;
  }
  jdouble max = (l + r) / 2;
  if ([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) evaluateWithDouble:l] < [self->f_ evaluateWithDouble:l + JavaLangMath_absWithDouble_((max - l) / 1E12)]) {
    isgoingup = YES;
  }
  else {
    isgoingup = NO;
  }
  while ((diff > epsilon) && (iterations < MAXITERATIONS)) {
    iterations++;
    didslice = NO;
    if (isgoingup) {
      newleft = max - (max - l) / DIVIDER;
      if ([self->f_ evaluateWithDouble:newleft] < [self->f_ evaluateWithDouble:l]) {
        r = newleft;
        didslice = YES;
      }
      if ([self->f_ evaluateWithDouble:newleft] > [self->f_ evaluateWithDouble:max]) {
        r = max;
        didslice = YES;
      }
      newright = max + (r - max) / DIVIDER;
      if ([self->f_ evaluateWithDouble:newright] < [self->f_ evaluateWithDouble:r]) {
        l = newright;
        didslice = YES;
      }
      if ([self->f_ evaluateWithDouble:newright] > [self->f_ evaluateWithDouble:max]) {
        l = max;
        didslice = YES;
      }
    }
    else {
      newleft = max - (max - l) / DIVIDER;
      if ([self->f_ evaluateWithDouble:newleft] > [self->f_ evaluateWithDouble:l]) {
        r = newleft;
        didslice = YES;
      }
      if ([self->f_ evaluateWithDouble:newleft] < [self->f_ evaluateWithDouble:max]) {
        r = max;
        didslice = YES;
      }
      newright = max + (r - max) / DIVIDER;
      if ([self->f_ evaluateWithDouble:newright] > [self->f_ evaluateWithDouble:r]) {
        l = newright;
        didslice = YES;
      }
      if ([self->f_ evaluateWithDouble:newright] < [self->f_ evaluateWithDouble:max]) {
        l = max;
        didslice = YES;
      }
    }
    if (!didslice) {
      l = newleft;
      r = newright;
    }
    max = (l + r) / 2;
    diff = JavaLangMath_absWithDouble_(r - l);
  }
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_xres_ = max;
  jdouble y = [self->f_ evaluateWithDouble:max];
  jdouble ld = [self->left_ getDouble];
  jdouble rd = [self->right_ getDouble];
  jdouble fl = [self->f_ evaluateWithDouble:ld];
  jdouble fr = [self->f_ evaluateWithDouble:rd];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->E_)) setCoordsWithDouble:max withDouble:y withDouble:1.0];
  if (JavaLangDouble_isNaNWithDouble_(y)) {
    [self->E_ setUndefined];
  }
  if (max <= (ld)) {
    [self->E_ setUndefined];
  }
  if ((rd) <= max) {
    [self->E_ setUndefined];
  }
  if (isgoingup) {
    if ((y < fl) || (y < fr)) {
      [self->E_ setUndefined];
    }
  }
  else {
    if ((y > fl) || (y > fr)) {
      [self->E_ setUndefined];
    }
  }
}

jdouble OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_getX() {
  OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_initialize();
  return OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical_xres_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoExtremumNumerical)
