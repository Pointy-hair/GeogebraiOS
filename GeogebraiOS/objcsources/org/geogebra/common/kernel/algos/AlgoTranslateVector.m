//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoTranslateVector.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/CircularDefinitionException.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoTranslateVector.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoVec3D.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoVectorND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelAlgosAlgoTranslateVector () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> A_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoTranslateVector, A_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)

@implementation OrgGeogebraCommonKernelAlgosAlgoTranslateVector

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                   withOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *)v
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A {
  OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
             withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A {
  OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
  return self;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)newGeoVectorWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return new_OrgGeogebraCommonKernelGeosGeoVector_initWithOrgGeogebraCommonKernelConstruction_(cons);
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Translate();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_TRANSLATE_BY_VECTOR;
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(v_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(w_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  [self setDependencies];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPoint {
  return A_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)getVector {
  return v_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)getTranslatedVector {
  return w_;
}

- (void)compute {
  [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(((OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(w_, [OrgGeogebraCommonKernelGeosGeoVector class])))) setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoVec3D *) check_class_cast(v_, [OrgGeogebraCommonKernelGeosGeoVec3D class])];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"TranslationOfAtoB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(v_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoVector:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoTranslateVector", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoTranslateVector", NULL, 0x4, NULL, NULL },
    { "newGeoVectorWithOrgGeogebraCommonKernelConstruction:", "newGeoVector", "Lorg.geogebra.common.kernel.kernelND.GeoVectorND;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x0, NULL, NULL },
    { "getVector", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoVectorND;", 0x0, NULL, NULL },
    { "getTranslatedVector", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoVectorND;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "v_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoVectorND;", NULL, NULL,  },
    { "w_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoVectorND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoTranslateVector = { 2, "AlgoTranslateVector", "org.geogebra.common.kernel.algos", NULL, 0x1, 11, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoTranslateVector;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoTranslateVector *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoVector *v, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A) {
  (void) OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
}

OrgGeogebraCommonKernelAlgosAlgoTranslateVector *new_OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoVector *v, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A) {
  OrgGeogebraCommonKernelAlgosAlgoTranslateVector *self = [OrgGeogebraCommonKernelAlgosAlgoTranslateVector alloc];
  OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoTranslateVector *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> v, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->A_ = A;
  self->v_ = v;
  self->w_ = [self newGeoVectorWithOrgGeogebraCommonKernelConstruction:cons];
  @try {
    [((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(self->w_)) setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:A];
  }
  @catch (OrgGeogebraCommonKernelCircularDefinitionException *e) {
  }
  [self setInputOutput];
  [self compute];
  [((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(self->w_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoTranslateVector *new_OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> v, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A) {
  OrgGeogebraCommonKernelAlgosAlgoTranslateVector *self = [OrgGeogebraCommonKernelAlgosAlgoTranslateVector alloc];
  OrgGeogebraCommonKernelAlgosAlgoTranslateVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoTranslateVector)
