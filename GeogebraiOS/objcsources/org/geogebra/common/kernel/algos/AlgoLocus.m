//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoLocus.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/awt/GRectangle2D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/algos/AlgoLocus.h"
#include "org/geogebra/common/kernel/algos/AlgoLocusND.h"
#include "org/geogebra/common/kernel/geos/GeoLocus.h"
#include "org/geogebra/common/kernel/geos/GeoLocusND.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelAlgosAlgoLocus ()

- (void)insertPointWithDouble:(jdouble)x
                   withDouble:(jdouble)y
                  withBoolean:(jboolean)lineTo;

- (jboolean)isFarAwayWithDouble:(jdouble)x
                     withDouble:(jdouble)y
                        withInt:(jint)i;

@end

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoLocus_insertPointWithDouble_withDouble_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoLocus *self, jdouble x, jdouble y, jboolean lineTo);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAlgosAlgoLocus_isFarAwayWithDouble_withDouble_withInt_(OrgGeogebraCommonKernelAlgosAlgoLocus *self, jdouble x, jdouble y, jint i);

@implementation OrgGeogebraCommonKernelAlgosAlgoLocus

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)Q
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                    withInt:(jint)min_steps
                                                withBoolean:(jboolean)registerCE {
  OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_withBoolean_(self, cons, Q, P, min_steps, registerCE);
  return self;
}

- (void)createStartPosWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelAlgosAlgoLocusND_setAndConsume_QstartPos_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAlgosAlgoLocusND_setAndConsume_PstartPos_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
}

- (OrgGeogebraCommonKernelGeosGeoLocus *)newGeoLocusWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return [new_OrgGeogebraCommonKernelGeosGeoLocus_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)Q
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, Q, P);
  return self;
}

- (jboolean)isFarAwayWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                                                           withInt:(jint)i {
  return OrgGeogebraCommonKernelAlgosAlgoLocus_isFarAwayWithDouble_withDouble_withInt_(self, ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomX_, ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomY_, i);
}

- (jboolean)distanceOKWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                               withOrgGeogebraCommonAwtGRectangle2D:(id<OrgGeogebraCommonAwtGRectangle2D>)rectangle {
  OrgGeogebraCommonKernelGeosGeoPoint *Q = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  jdouble minX = lastX_;
  jdouble minY = lastY_;
  jdouble lengthX = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(Q))->inhomX_ - lastX_;
  jdouble lengthY = Q->inhomY_ - lastY_;
  if (Q->inhomX_ < minX) minX = Q->inhomX_;
  if (Q->inhomY_ < minY) minY = Q->inhomY_;
  if (lengthX < 0) lengthX = -lengthX;
  if (lengthY < 0) lengthY = -lengthY;
  return ![((id<OrgGeogebraCommonAwtGRectangle2D>) nil_chk(rectangle)) intersectsWithDouble:minX withDouble:minY withDouble:lengthX withDouble:lengthY];
}

- (jboolean)distanceSmallWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                                                           withBoolean:(jboolean)orInsteadOfAnd {
  OrgGeogebraCommonKernelGeosGeoPoint *Q = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]);
  IOSBooleanArray *distSmall = [IOSBooleanArray arrayWithLength:3];
  for (jint i = 0; i < distSmall->size_; i++) {
    *IOSBooleanArray_GetRef(distSmall, i) = (JavaLangMath_absWithDouble_(((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(Q))->inhomX_ - lastX_) < IOSDoubleArray_Get(nil_chk(maxXdist_), i) && JavaLangMath_absWithDouble_(Q->inhomY_ - lastY_) < IOSDoubleArray_Get(nil_chk(maxYdist_), i));
  }
  if (orInsteadOfAnd) {
    for (jint i = 0; i < distSmall->size_; i++) {
      if (IOSBooleanArray_Get(distSmall, i) && IOSBooleanArray_Get(nil_chk(visibleEV_), i)) {
        return YES;
      }
    }
    return NO;
  }
  for (jint i = 0; i < distSmall->size_; i++) {
    if (!IOSBooleanArray_Get(distSmall, i) && IOSBooleanArray_Get(nil_chk(visibleEV_), i)) {
      return NO;
    }
  }
  return YES;
}

- (void)insertPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                                                     withBoolean:(jboolean)lineTo {
  OrgGeogebraCommonKernelAlgosAlgoLocus_insertPointWithDouble_withDouble_withBoolean_(self, ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomX_, ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomY_, lineTo);
}

- (void)insertPointWithDouble:(jdouble)x
                   withDouble:(jdouble)y
                  withBoolean:(jboolean)lineTo {
  OrgGeogebraCommonKernelAlgosAlgoLocus_insertPointWithDouble_withDouble_withBoolean_(self, x, y, lineTo);
}

- (jboolean)isFarAwayWithDouble:(jdouble)x
                     withDouble:(jdouble)y
                        withInt:(jint)i {
  return OrgGeogebraCommonKernelAlgosAlgoLocus_isFarAwayWithDouble_withDouble_withInt_(self, x, y, i);
}

- (jboolean)differentFromLastWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  return ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomX_ != lastX_ || ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomY_ != lastY_;
}

- (jboolean)areEqualWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2 {
  return [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoPoint class])))) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoPoint class])) withDouble:OrgGeogebraCommonKernelKernel_MIN_PRECISION];
}

- (IOSObjectArray *)createQCopyCache {
  return [IOSObjectArray arrayWithLength:((IOSDoubleArray *) nil_chk(paramCache_))->size_ type:OrgGeogebraCommonKernelMyPoint_class_()];
}

- (void)setQCopyCacheWithOrgGeogebraCommonKernelMyPoint:(OrgGeogebraCommonKernelMyPoint *)copy_
          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  [((OrgGeogebraCommonKernelMyPoint *) nil_chk(copy_)) setXWithDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomX_];
  [copy_ setYWithDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]))))->inhomY_];
}

- (OrgGeogebraCommonKernelMyPoint *)newCache {
  return [new_OrgGeogebraCommonKernelMyPoint_init() autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:withBoolean:", "AlgoLocus", NULL, 0x1, NULL, NULL },
    { "createStartPosWithOrgGeogebraCommonKernelConstruction:", "createStartPos", "V", 0x4, NULL, NULL },
    { "newGeoLocusWithOrgGeogebraCommonKernelConstruction:", "newGeoLocus", "Lorg.geogebra.common.kernel.geos.GeoLocus;", 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoLocus", NULL, 0x1, NULL, NULL },
    { "isFarAwayWithOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "isFarAway", "Z", 0x4, NULL, NULL },
    { "distanceOKWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonAwtGRectangle2D:", "distanceOK", "Z", 0x4, NULL, NULL },
    { "distanceSmallWithOrgGeogebraCommonKernelKernelNDGeoPointND:withBoolean:", "distanceSmall", "Z", 0x4, NULL, NULL },
    { "insertPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:withBoolean:", "insertPoint", "V", 0x4, NULL, NULL },
    { "insertPointWithDouble:withDouble:withBoolean:", "insertPoint", "V", 0x2, NULL, NULL },
    { "isFarAwayWithDouble:withDouble:withInt:", "isFarAway", "Z", 0x2, NULL, NULL },
    { "differentFromLastWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "differentFromLast", "Z", 0x4, NULL, NULL },
    { "areEqualWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "areEqual", "Z", 0x4, NULL, NULL },
    { "createQCopyCache", NULL, "[Lorg.geogebra.common.kernel.MyPoint;", 0x4, NULL, NULL },
    { "setQCopyCacheWithOrgGeogebraCommonKernelMyPoint:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "setQCopyCache", "V", 0x4, NULL, NULL },
    { "newCache", NULL, "Lorg.geogebra.common.kernel.MyPoint;", 0x4, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.MyPoint;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoLocus = { 2, "AlgoLocus", "org.geogebra.common.kernel.algos", NULL, 0x1, 15, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lorg/geogebra/common/kernel/algos/AlgoLocusND<Lorg/geogebra/common/kernel/MyPoint;>;" };
  return &_OrgGeogebraCommonKernelAlgosAlgoLocus;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoLocus *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> Q, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, jint min_steps, jboolean registerCE) {
  OrgGeogebraCommonKernelAlgosAlgoLocusND_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_withBoolean_(self, cons, Q, P, min_steps, registerCE);
}

OrgGeogebraCommonKernelAlgosAlgoLocus *new_OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_withBoolean_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> Q, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, jint min_steps, jboolean registerCE) {
  OrgGeogebraCommonKernelAlgosAlgoLocus *self = [OrgGeogebraCommonKernelAlgosAlgoLocus alloc];
  OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_withBoolean_(self, cons, Q, P, min_steps, registerCE);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoLocus *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> Q, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P) {
  OrgGeogebraCommonKernelAlgosAlgoLocusND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, Q, P);
}

OrgGeogebraCommonKernelAlgosAlgoLocus *new_OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> Q, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P) {
  OrgGeogebraCommonKernelAlgosAlgoLocus *self = [OrgGeogebraCommonKernelAlgosAlgoLocus alloc];
  OrgGeogebraCommonKernelAlgosAlgoLocus_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, Q, P);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoLocus_insertPointWithDouble_withDouble_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoLocus *self, jdouble x, jdouble y, jboolean lineTo) {
  self->pointCount_++;
  [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(((OrgGeogebraCommonKernelGeosGeoLocus *) check_class_cast(self->locus_, [OrgGeogebraCommonKernelGeosGeoLocus class])))) insertPointWithDouble:x withDouble:y withBoolean:lineTo];
  self->lastX_ = x;
  self->lastY_ = y;
  for (jint i = 0; i < ((IOSBooleanArray *) nil_chk(self->lastFarAway_))->size_; i++) {
    *IOSBooleanArray_GetRef(self->lastFarAway_, i) = OrgGeogebraCommonKernelAlgosAlgoLocus_isFarAwayWithDouble_withDouble_withInt_(self, self->lastX_, self->lastY_, i);
  }
}

jboolean OrgGeogebraCommonKernelAlgosAlgoLocus_isFarAwayWithDouble_withDouble_withInt_(OrgGeogebraCommonKernelAlgosAlgoLocus *self, jdouble x, jdouble y, jint i) {
  jboolean farAway = (x > IOSDoubleArray_Get(nil_chk(self->farXmax_), i) || x < IOSDoubleArray_Get(nil_chk(self->farXmin_), i) || y > IOSDoubleArray_Get(nil_chk(self->farYmax_), i) || y < IOSDoubleArray_Get(nil_chk(self->farYmin_), i));
  return farAway;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoLocus)
