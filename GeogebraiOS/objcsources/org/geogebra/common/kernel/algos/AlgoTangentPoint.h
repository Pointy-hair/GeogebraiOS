//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/algos/AlgoTangentPoint.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoTangentPoint_H_
#define _OrgGeogebraCommonKernelAlgosAlgoTangentPoint_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoTangentPointND.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoConic;
@class OrgGeogebraCommonKernelGeosGeoPoint;
@class OrgGeogebraCommonKernelKernelNDAlgoIntersectND;
@class OrgGeogebraCommonKernelKernelNDGeoConicND;
@protocol OrgGeogebraCommonKernelKernelNDGeoLineND;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;

@interface OrgGeogebraCommonKernelAlgosAlgoTangentPoint : OrgGeogebraCommonKernelAlgosAlgoTangentPointND

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
              withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c;

- (OrgGeogebraCommonKernelGeosGeoConic *)getConic;

- (OrgGeogebraCommonKernelGeosGeoPoint *)getPoint;

- (void)initForNearToRelationship OBJC_METHOD_FAMILY_NONE;

+ (void)initForNearToRelationshipWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)tangentPoints
                                       withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)tangent
                                 withOrgGeogebraCommonKernelKernelNDAlgoIntersectND:(OrgGeogebraCommonKernelKernelNDAlgoIntersectND *)algoIntersect OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (jboolean)isIntersectionPointIncident;

- (void)setPolar;

- (void)setTangentFromPolarWithInt:(jint)i;

- (void)setTangents;

- (void)updatePolarLine;

- (void)updateTangents;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoTangentPoint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoTangentPoint_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelAlgosAlgoTangentPoint *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, OrgGeogebraCommonKernelKernelNDGeoConicND *c);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoTangentPoint *new_OrgGeogebraCommonKernelAlgosAlgoTangentPoint_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, OrgGeogebraCommonKernelKernelNDGeoConicND *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoTangentPoint_initForNearToRelationshipWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDAlgoIntersectND_(IOSObjectArray *tangentPoints, id<OrgGeogebraCommonKernelKernelNDGeoLineND> tangent, OrgGeogebraCommonKernelKernelNDAlgoIntersectND *algoIntersect);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoTangentPoint)

#endif // _OrgGeogebraCommonKernelAlgosAlgoTangentPoint_H_
