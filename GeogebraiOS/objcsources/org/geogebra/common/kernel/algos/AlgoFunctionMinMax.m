//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/algos/AlgoFunctionMinMax.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoFunctionMinMax.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionable.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/optimization/ExtremumFinder.h"
#include "org/geogebra/common/kernel/roots/RealRootFunction.h"

@interface OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax () {
 @public
  id<OrgGeogebraCommonKernelGeosGeoFunctionable> function_;
  OrgGeogebraCommonKernelGeosGeoFunction *f_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> left_;
  OrgGeogebraCommonKernelGeosGeoElement *geoleft_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> right_;
  OrgGeogebraCommonKernelGeosGeoElement *georight_;
  OrgGeogebraCommonKernelGeosGeoPoint *E_;
  OrgGeogebraCommonKernelOptimizationExtremumFinder *extrFinder_;
  jboolean isMin_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, function_, id<OrgGeogebraCommonKernelGeosGeoFunctionable>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, f_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, left_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, geoleft_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, right_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, georight_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, E_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax, extrFinder_, OrgGeogebraCommonKernelOptimizationExtremumFinder *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_compute(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
             withOrgGeogebraCommonKernelGeosGeoFunctionable:(id<OrgGeogebraCommonKernelGeosGeoFunctionable>)function
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)left
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)right
                                                withBoolean:(jboolean)isMin {
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, label, function, left, right, isMin);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return self->isMin_ ? OrgGeogebraCommonKernelCommandsCommandsEnum_get_Min() : OrgGeogebraCommonKernelCommandsCommandsEnum_get_Max();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(function_)) toGeoElement]);
  IOSObjectArray_Set(input_, 1, geoleft_);
  IOSObjectArray_Set(input_, 2, georight_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:E_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getPoint {
  return E_;
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_compute(self);
}

- (void)dealloc {
  RELEASE_(function_);
  RELEASE_(f_);
  RELEASE_(left_);
  RELEASE_(geoleft_);
  RELEASE_(right_);
  RELEASE_(georight_);
  RELEASE_(E_);
  RELEASE_(extrFinder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoFunctionable:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:withBoolean:", "AlgoFunctionMinMax", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "function_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionable;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "left_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "geoleft_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "right_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "georight_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "E_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "extrFinder_", NULL, 0x2, "Lorg.geogebra.common.kernel.optimization.ExtremumFinder;", NULL, NULL,  },
    { "isMin_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax = { 2, "AlgoFunctionMinMax", "org.geogebra.common.kernel.algos", NULL, 0x1, 5, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoFunctionable> function, id<OrgGeogebraCommonKernelArithmeticNumberValue> left, id<OrgGeogebraCommonKernelArithmeticNumberValue> right, jboolean isMin) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_set_extrFinder_(self, nil);
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_set_function_(self, function);
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_set_f_(self, [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(function)) getGeoFunction]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_set_left_(self, left);
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_set_geoleft_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(left)) toGeoElement]);
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_set_right_(self, right);
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_set_georight_(self, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(right)) toGeoElement]);
  self->isMin_ = isMin;
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_setAndConsume_E_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self->E_ setCoordsWithDouble:0.0 withDouble:0.0 withDouble:1.0];
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_compute(self);
  [self->E_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax *new_OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoFunctionable> function, id<OrgGeogebraCommonKernelArithmeticNumberValue> left, id<OrgGeogebraCommonKernelArithmeticNumberValue> right, jboolean isMin) {
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax *self = [OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax alloc];
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoFunctionable_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, label, function, left, right, isMin);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_compute(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax *self) {
  jdouble l = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->left_)) getDouble];
  jdouble r = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->right_)) getDouble];
  jdouble min = 0.0;
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) nil_chk(self->function_)) toGeoElement])) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geoleft_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->georight_)) isDefined] || ([self->right_ getDouble] <= [self->left_ getDouble])) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->E_)) setUndefined];
    return;
  }
  OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax_setAndConsume_extrFinder_(self, new_OrgGeogebraCommonKernelOptimizationExtremumFinder_init());
  id<OrgGeogebraCommonKernelRootsRealRootFunction> fun = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) getRealRootFunctionY];
  min = self->isMin_ ? [self->extrFinder_ findMinimumWithDouble:l withDouble:r withOrgGeogebraCommonKernelRootsRealRootFunction:fun withDouble:5.0E-8] : [self->extrFinder_ findMaximumWithDouble:l withDouble:r withOrgGeogebraCommonKernelRootsRealRootFunction:fun withDouble:5.0E-8];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->E_)) setCoordsWithDouble:min withDouble:[self->f_ evaluateWithDouble:min] withDouble:1.0];
  [self->E_ updateRepaint];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoFunctionMinMax)
