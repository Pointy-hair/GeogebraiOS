//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoIntersectConics.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoIntersectConics_H_
#define _OrgGeogebraCommonKernelAlgosAlgoIntersectConics_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/RestrictionAlgoForLocusEquation.h"
#include "org/geogebra/common/kernel/algos/AlgoIntersect.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"

@class IOSBooleanArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoConic;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelPointPairList;
@protocol OrgGeogebraCommonKernelAlgosEquationElementInterface;
@protocol OrgGeogebraCommonKernelAlgosEquationScopeInterface;

#define OrgGeogebraCommonKernelAlgosAlgoIntersectConics_DIST_MEMORY_SIZE 8

@interface OrgGeogebraCommonKernelAlgosAlgoIntersectConics : OrgGeogebraCommonKernelAlgosAlgoIntersect < OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo, OrgGeogebraCommonKernelRestrictionAlgoForLocusEquation > {
 @public
  JavaUtilArrayList *preexistPoints_;
  JavaUtilArrayList *newPoints_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)A
                    withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)B;

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (void)compute;

+ (void)distanceTableWithOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)D
                                                     withIntArray:(IOSIntArray *)age
                     withOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)Q
                                                 withDoubleArray2:(IOSObjectArray *)table;

- (OrgGeogebraCommonKernelGeosGeoConic *)getA;

- (OrgGeogebraCommonKernelGeosGeoConic *)getB;

- (IOSObjectArray *)getBotanaPolynomialsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (IOSObjectArray *)getIntersectionPoints;

- (jint)getRelatedModeID;

- (void)initForNearToRelationship OBJC_METHOD_FAMILY_NONE;

- (void)intersectConicsWithOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)conic1
                       withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)conic2
                  withOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)points;

- (jboolean)isLocusEquable;

- (jboolean)isNearToAlgorithm;

- (void)setInputOutput;

#pragma mark Protected

- (IOSObjectArray *)getLastDefinedIntersectionPoints;

#pragma mark Package-Private

+ (void)setNearToWithOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)P
                                             withBooleanArray:(IOSBooleanArray *)isPalive
                 withOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)Q
                                             withBooleanArray:(IOSBooleanArray *)isQonPath
                                             withDoubleArray2:(IOSObjectArray *)distTable
                     withOrgGeogebraCommonKernelPointPairList:(OrgGeogebraCommonKernelPointPairList *)pointList
                                                 withIntArray:(IOSIntArray *)permutation;

+ (void)setNearToWithOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)P
                                             withBooleanArray:(IOSBooleanArray *)isPalive
                 withOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)Q
                                             withBooleanArray:(IOSBooleanArray *)isQonPath
                                             withDoubleArray2:(IOSObjectArray *)distTable
                     withOrgGeogebraCommonKernelPointPairList:(OrgGeogebraCommonKernelPointPairList *)pointList
                                                 withIntArray:(IOSIntArray *)permutation
                                                  withBoolean:(jboolean)needStrict
                                                   withDouble:(jdouble)eps;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoIntersectConics)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectConics, preexistPoints_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectConics, newPoints_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectConics, DIST_MEMORY_SIZE, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectConics_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAlgosAlgoIntersectConics *self, OrgGeogebraCommonKernelConstruction *cons);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoIntersectConics *new_OrgGeogebraCommonKernelAlgosAlgoIntersectConics_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *cons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectConics_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoConic_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelAlgosAlgoIntersectConics *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoConic *A, OrgGeogebraCommonKernelGeosGeoConic *B);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoIntersectConics *new_OrgGeogebraCommonKernelAlgosAlgoIntersectConics_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoConic_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoConic *A, OrgGeogebraCommonKernelGeosGeoConic *B) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectConics_distanceTableWithOrgGeogebraCommonKernelGeosGeoPointArray_withIntArray_withOrgGeogebraCommonKernelGeosGeoPointArray_withDoubleArray2_(IOSObjectArray *D, IOSIntArray *age, IOSObjectArray *Q, IOSObjectArray *table);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectConics_setNearToWithOrgGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withOrgGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withDoubleArray2_withOrgGeogebraCommonKernelPointPairList_withIntArray_withBoolean_withDouble_(IOSObjectArray *P, IOSBooleanArray *isPalive, IOSObjectArray *Q, IOSBooleanArray *isQonPath, IOSObjectArray *distTable, OrgGeogebraCommonKernelPointPairList *pointList, IOSIntArray *permutation, jboolean needStrict, jdouble eps);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectConics_setNearToWithOrgGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withOrgGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withDoubleArray2_withOrgGeogebraCommonKernelPointPairList_withIntArray_(IOSObjectArray *P, IOSBooleanArray *isPalive, IOSObjectArray *Q, IOSBooleanArray *isQonPath, IOSObjectArray *distTable, OrgGeogebraCommonKernelPointPairList *pointList, IOSIntArray *permutation);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoIntersectConics)

#endif // _OrgGeogebraCommonKernelAlgosAlgoIntersectConics_H_
