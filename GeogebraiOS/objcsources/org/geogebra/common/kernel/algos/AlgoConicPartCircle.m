//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoConicPartCircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/LocusEquation.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/algos/AlgoCircleTwoPoints.h"
#include "org/geogebra/common/kernel/algos/AlgoConicPart.h"
#include "org/geogebra/common/kernel/algos/AlgoConicPartCircle.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/EquationElementInterface.h"
#include "org/geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoConicPart.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicPartND.h"

@interface OrgGeogebraCommonKernelAlgosAlgoConicPartCircle () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *center_, *startPoint_, *endPoint_;
  OrgGeogebraCommonKernelGeosGeoPoint *P_, *Q_;
}

- (void)setIncidence;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle, center_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle, startPoint_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle, endPoint_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle, P_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle, Q_, OrgGeogebraCommonKernelGeosGeoPoint *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_compute(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoConicPartCircle

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)center
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)startPoint
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)endPoint
                                                    withInt:(jint)type {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)center
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)startPoint
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)endPoint
                                                    withInt:(jint)type {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, center, startPoint, endPoint, type);
  return self;
}

- (void)setIncidence {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(self);
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getStartPoint {
  return startPoint_;
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getEndPoint {
  return endPoint_;
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getCenter {
  return center_;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch (type_) {
    case OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CircleArc();
    default:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CircleSector();
  }
}

- (jint)getRelatedModeID {
  switch (type_) {
    case OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_ARC_THREE_POINTS;
    default:
    return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_SECTOR_THREE_POINTS;
  }
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, center_);
  (void) IOSObjectArray_Set(input_, 1, startPoint_);
  (void) IOSObjectArray_Set(input_, 2, endPoint_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:conicPart_];
  [self setDependencies];
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_compute(self);
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return OrgGeogebraCommonKernelLocusEquation_eqnCircleArcWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

- (OrgGeogebraCommonKernelGeosGeoConicPart *)getConicPart {
  return (OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast([super getConicPart], [OrgGeogebraCommonKernelGeosGeoConicPart class]);
}

- (jint)getInputLengthForXML {
  return [self getInputLengthForXMLMayNeedXOYPlane];
}

- (jint)getInputLengthForCommandDescription {
  return [self getInputLengthForCommandDescriptionMayNeedXOYPlane];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getInputWithInt:(jint)i {
  return [self getInputMaybeXOYPlaneWithInt:i];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoConicPartCircle", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoConicPartCircle", NULL, 0x1, NULL, NULL },
    { "setIncidence", NULL, "V", 0x2, NULL, NULL },
    { "getStartPoint", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getEndPoint", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getCenter", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lorg.geogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
    { "getConicPart", NULL, "Lorg.geogebra.common.kernel.geos.GeoConicPart;", 0x1, NULL, NULL },
    { "getInputLengthForXML", NULL, "I", 0x4, NULL, NULL },
    { "getInputLengthForCommandDescription", NULL, "I", 0x4, NULL, NULL },
    { "getInputWithInt:", "getInput", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "center_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "startPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "endPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "Q_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoConicPartCircle = { 2, "AlgoConicPartCircle", "org.geogebra.common.kernel.algos", NULL, 0x1, 16, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoConicPartCircle;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *center, OrgGeogebraCommonKernelGeosGeoPoint *startPoint, OrgGeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  (void) OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, center, startPoint, endPoint, type);
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *new_OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *center, OrgGeogebraCommonKernelGeosGeoPoint *startPoint, OrgGeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self = [OrgGeogebraCommonKernelAlgosAlgoConicPartCircle alloc];
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *center, OrgGeogebraCommonKernelGeosGeoPoint *startPoint, OrgGeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  (void) OrgGeogebraCommonKernelAlgosAlgoConicPart_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, cons, type);
  self->center_ = center;
  self->startPoint_ = startPoint;
  self->endPoint_ = endPoint;
  OrgGeogebraCommonKernelAlgosAlgoCircleTwoPoints *algo = new_OrgGeogebraCommonKernelAlgosAlgoCircleTwoPoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(cons, center, startPoint);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:algo];
  self->conic_ = [algo getCircle];
  self->P_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons);
  self->Q_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons);
  self->conicPart_ = new_OrgGeogebraCommonKernelGeosGeoConicPart_initWithOrgGeogebraCommonKernelConstruction_withInt_(cons, type);
  [self->conicPart_ addPointOnConicWithOrgGeogebraCommonKernelKernelNDGeoPointND:startPoint];
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_compute(self);
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(self);
}

OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *new_OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *center, OrgGeogebraCommonKernelGeosGeoPoint *startPoint, OrgGeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self = [OrgGeogebraCommonKernelAlgosAlgoConicPartCircle alloc];
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, center, startPoint, endPoint, type);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self) {
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->startPoint_)) addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:self->conicPart_ withBoolean:NO];
}

void OrgGeogebraCommonKernelAlgosAlgoConicPartCircle_compute(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *self) {
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:self->startPoint_];
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conic_)) pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->P_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->Q_)) setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:self->endPoint_];
  [self->conic_ pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->Q_];
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setWithOrgGeogebraCommonKernelGeosGeoElement:self->conic_];
  [((id<OrgGeogebraCommonKernelKernelNDGeoConicPartND>) check_protocol_cast(self->conicPart_, @protocol(OrgGeogebraCommonKernelKernelNDGeoConicPartND))) setParametersWithDouble:((OrgGeogebraCommonKernelPathParameter *) nil_chk([self->P_ getPathParameter]))->t_ withDouble:((OrgGeogebraCommonKernelPathParameter *) nil_chk([self->Q_ getPathParameter]))->t_ withBoolean:YES];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoConicPartCircle)
