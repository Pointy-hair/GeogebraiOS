//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/algos/AlgoVertexPolygon.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoVertexPolygon.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoPoly.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelAlgosAlgoVertexPolygon () {
 @public
  id<OrgGeogebraCommonKernelArithmeticNumberValue> index_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> oneVertex_;
  OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPoints_;
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon, index_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon, oneVertex_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon, outputPoints_, OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self, IOSObjectArray *labels);

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_compute(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self);

@interface OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *this$0_;
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon:(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1, this$0_, OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *self, OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *new_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1)

@implementation OrgGeogebraCommonKernelAlgosAlgoVertexPolygon

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
                     withOrgGeogebraCommonKernelGeosGeoPoly:(id<OrgGeogebraCommonKernelGeosGeoPoly>)p {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPoly_(self, cons, labels, p);
  return self;
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(self, labels);
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoPoly:(id<OrgGeogebraCommonKernelGeosGeoPoly>)p
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)v {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, p, v);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoPoly:(id<OrgGeogebraCommonKernelGeosGeoPoly>)p {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_(self, cons, p);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoPoly:(id<OrgGeogebraCommonKernelGeosGeoPoly>)p
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)v {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, p, v);
  return self;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return [new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Vertex();
}

- (void)setInputOutput {
  if (index_ != nil) {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 1, [index_ toGeoElement]);
    [self setOutputLengthWithInt:1];
    [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(oneVertex_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  }
  else {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  }
  IOSObjectArray_Set(nil_chk(input_), 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [self setDependencies];
}

- (id<OrgGeogebraCommonKernelGeosGeoPoly>)getPolygon {
  return p_;
}

- (jint)getOutputLength {
  if (index_ != nil) return 1;
  return [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) size];
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_compute(self);
}

- (void)setPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                                                      withInt:(jint)i {
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) setWithOrgGeogebraCommonKernelKernelNDGeoPointND:[((id<OrgGeogebraCommonKernelGeosGeoPoly>) nil_chk(p_)) getPointWithInt:i]];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"VertexOfA" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p_, [OrgGeogebraCommonKernelGeosGeoElement class])))) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (IOSObjectArray *)getVertex {
  return [self getOutput];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getOutputWithInt:(jint)i {
  if (index_ != nil) return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(oneVertex_, [OrgGeogebraCommonKernelGeosGeoElement class]);
  return [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) getElementWithInt:i];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getOneVertex {
  return oneVertex_;
}

- (OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPoints {
  return [new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon_(self) autorelease]) autorelease];
}

- (void)dealloc {
  RELEASE_(p_);
  RELEASE_(index_);
  RELEASE_(oneVertex_);
  RELEASE_(outputPoints_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelGeosGeoPoly:", "AlgoVertexPolygon", NULL, 0x1, NULL, NULL },
    { "setLabelsWithNSStringArray:", "setLabels", "V", 0x2, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoly:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoVertexPolygon", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoPoly:", "AlgoVertexPolygon", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoPoly:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoVertexPolygon", NULL, 0x0, NULL, NULL },
    { "newGeoPointWithOrgGeogebraCommonKernelConstruction:", "newGeoPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x1, NULL, NULL },
    { "getPolygon", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoly;", 0x1, NULL, NULL },
    { "getOutputLength", NULL, "I", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "setPoint", "V", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getVertex", NULL, "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getOutputWithInt:", "getOutput", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getOneVertex", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "createOutputPoints", NULL, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoPoly;", NULL, NULL,  },
    { "index_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "oneVertex_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "outputPoints_", NULL, 0x2, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoVertexPolygon = { 2, "AlgoVertexPolygon", "org.geogebra.common.kernel.algos", NULL, 0x1, 17, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPoly_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<OrgGeogebraCommonKernelGeosGeoPoly> p) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_(self, cons, p);
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(self, labels);
  [self update];
}

OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *new_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPoly_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<OrgGeogebraCommonKernelGeosGeoPoly> p) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self = [OrgGeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPoly_(self, cons, labels, p);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self, IOSObjectArray *labels) {
  if (labels != nil && labels->size_ == 1 && IOSObjectArray_Get(labels, 0) != nil && ![((NSString *) nil_chk(IOSObjectArray_Get(labels, 0))) isEqual:@""]) {
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) setIndexLabelsWithNSString:IOSObjectArray_Get(labels, 0)];
  }
  else {
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) setLabelsWithNSStringArray:labels];
    [self->outputPoints_ setIndexLabelsWithNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:0])) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]];
  }
}

void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoPoly> p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, p, v);
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *new_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelGeosGeoPoly> p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self = [OrgGeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, p, v);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoPoly> p) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_set_p_(self, p);
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_set_outputPoints_(self, [self createOutputPoints]);
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) adjustOutputSizeWithInt:1];
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_compute(self);
}

OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *new_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoPoly> p) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self = [OrgGeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_(self, cons, p);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoPoly> p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_set_p_(self, p);
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_set_index_(self, v);
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_set_oneVertex_(self, [self newGeoPointWithOrgGeogebraCommonKernelConstruction:cons]);
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_compute(self);
}

OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *new_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelGeosGeoPoly> p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self = [OrgGeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoly_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, p, v);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_compute(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *self) {
  if (self->index_ != nil) {
    if (![((id<OrgGeogebraCommonKernelGeosGeoPoly>) nil_chk(self->p_)) isDefined]) {
      [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) setUndefined];
    }
    else {
      jint i = J2ObjCFpToInt(JavaLangMath_floorWithDouble_([self->index_ getDouble])) - 1;
      if (i >= ((IOSObjectArray *) nil_chk([self->p_ getPoints]))->size_ || i < 0) {
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) setUndefined];
      }
      else {
        [self setPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->oneVertex_ withInt:i];
      }
    }
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) update];
    return;
  }
  if (![((id<OrgGeogebraCommonKernelGeosGeoPoly>) nil_chk(self->p_)) isDefined]) {
    for (jint i = 0; i < [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) size]; i++) {
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:i])) setUndefined];
    }
    return;
  }
  jint length = ((IOSObjectArray *) nil_chk([self->p_ getPoints]))->size_;
  if (length > [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) size]) {
    [self->outputPoints_ adjustOutputSizeWithInt:length];
    [self refreshOutput];
  }
  for (jint i = 0; i < length; i++) {
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> point = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([self->outputPoints_ getElementWithInt:i], @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    [self setPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:point withInt:i];
  }
  for (jint i = length; i < [self->outputPoints_ size]; i++) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:i])) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon)

@implementation OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1

- (OrgGeogebraCommonKernelGeosGeoPoint *)newElement {
  OrgGeogebraCommonKernelGeosGeoPoint *pt = [new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  [pt setCoordsWithDouble:0 withDouble:0 withDouble:1];
  [pt setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:this$0_];
  return pt;
}

- (instancetype)initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon:(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *)outer$ {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.algos.AlgoVertexPolygon;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelAlgosAlgoVertexPolygon", "createOutputPoints" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 = { 2, "", "org.geogebra.common.kernel.algos", "AlgoVertexPolygon", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/kernel/geos/GeoElement;>;" };
  return &_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *self, OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *new_OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon_(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon *outer$) {
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *self = [OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1 alloc];
  OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithOrgGeogebraCommonKernelAlgosAlgoVertexPolygon_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoVertexPolygon_$1)
