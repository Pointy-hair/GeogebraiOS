//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoClosestPoint.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoClosestPoint.h"
#include "org/geogebra/common/kernel/algos/AlgoDistancePointObject.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelAlgosAlgoClosestPoint () {
 @public
  id<OrgGeogebraCommonKernelPath> path_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoClosestPoint, path_, id<OrgGeogebraCommonKernelPath>)

__attribute__((unused)) static void OrgGeogebraCommonKernelAlgosAlgoClosestPoint_compute(OrgGeogebraCommonKernelAlgosAlgoClosestPoint *self);

@implementation OrgGeogebraCommonKernelAlgosAlgoClosestPoint

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, path, point);
  return self;
}

- (void)createOutputPointWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                 withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path {
  P_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoPoint class])) setPathWithOrgGeogebraCommonKernelPath:path];
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, path, point);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ClosestPoint();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelPath>) nil_chk(path_)) toGeoElement]);
  (void) IOSObjectArray_Set(input_, 1, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  [self setDependencies];
}

- (void)addIncidence {
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoPoint class])))) addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(path_, [OrgGeogebraCommonKernelGeosGeoElement class]) withBoolean:NO];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getP {
  return P_;
}

- (void)setCoords {
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoPoint class])))) setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point_, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (void)compute {
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"PointOnAClosestToB" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 0))) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(input_, 1))) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (jboolean)isChangeable {
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelPath:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoClosestPoint", NULL, 0x1, NULL, NULL },
    { "createOutputPointWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelPath:", "createOutputPoint", "V", 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelPath:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoClosestPoint", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "addIncidence", NULL, "V", 0x4, NULL, NULL },
    { "getP", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "setCoords", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "isChangeable", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "path_", NULL, 0x2, "Lorg.geogebra.common.kernel.Path;", NULL, NULL,  },
    { "point_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "P_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAlgosAlgoClosestPoint = { 2, "AlgoClosestPoint", "org.geogebra.common.kernel.algos", NULL, 0x1, 11, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAlgosAlgoClosestPoint;
}

@end

void OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoClosestPoint *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->path_ = path;
  self->point_ = point;
  [self createOutputPointWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelPath:path];
  [self setInputOutput];
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint_compute(self);
  [self addIncidence];
}

OrgGeogebraCommonKernelAlgosAlgoClosestPoint *new_OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelPath> path, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint *self = [OrgGeogebraCommonKernelAlgosAlgoClosestPoint alloc];
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, path, point);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelAlgosAlgoClosestPoint *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  (void) OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, path, point);
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAlgosAlgoClosestPoint *new_OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelPath> path, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint *self = [OrgGeogebraCommonKernelAlgosAlgoClosestPoint alloc];
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelPath_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, path, point);
  return self;
}

void OrgGeogebraCommonKernelAlgosAlgoClosestPoint_compute(OrgGeogebraCommonKernelAlgosAlgoClosestPoint *self) {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(self->input_), 0))) isDefined] && [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->point_)) isDefined]) {
    if ([self->path_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) {
      OrgGeogebraCommonKernelArithmeticFunction *fun = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(((OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(self->path_, [OrgGeogebraCommonKernelGeosGeoFunction class])))) getFunction])) deepCopyWithOrgGeogebraCommonKernelKernel:self->kernel_];
      OrgGeogebraCommonKernelMatrixCoords *coords = [self->point_ getCoordsInD2];
      jdouble val = OrgGeogebraCommonKernelAlgosAlgoDistancePointObject_getClosestFunctionValueToPointWithOrgGeogebraCommonKernelArithmeticFunction_withDouble_withDouble_(fun, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX], [coords getY]);
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->P_, [OrgGeogebraCommonKernelGeosGeoPoint class])))) setCoordsWithDouble:val withDouble:[((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(fun)) evaluateWithDouble:val] withDouble:1.0];
    }
    else {
      [self setCoords];
      [((id<OrgGeogebraCommonKernelPath>) nil_chk(self->path_)) pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->P_];
    }
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) updateCoords];
  }
  else {
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAlgosAlgoClosestPoint)
