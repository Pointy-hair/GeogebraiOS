//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/algos/AlgoIntersectLineConic.java
//

#ifndef _OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_H_
#define _OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/RestrictionAlgoForLocusEquation.h"
#include "org/geogebra/common/kernel/algos/AlgoIntersect.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoConic;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoLine;
@class OrgGeogebraCommonKernelKernelNDGeoConicND;
@protocol OrgGeogebraCommonKernelAlgosEquationElementInterface;
@protocol OrgGeogebraCommonKernelAlgosEquationScopeInterface;

#define OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_PRODUCING_LINE 1
#define OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_ASYMPTOTIC_LINE 2
#define OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_MEETING_LINE 3
#define OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_TANGENT_LINE 4
#define OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_SECANT_LINE 5
#define OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_PASSING_LINE 6

@interface OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic : OrgGeogebraCommonKernelAlgosAlgoIntersect < OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo, OrgGeogebraCommonKernelRestrictionAlgoForLocusEquation > {
 @public
  OrgGeogebraCommonKernelGeosGeoLine *g_;
  OrgGeogebraCommonKernelGeosGeoConic *c_;
  IOSObjectArray *P_, *Q_;
  jint intersectionType_;
  jboolean possibleSpecialCase_;
  jint specialCasePointOnCircleIndex_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)g
                    withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)c;

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (void)compute;

- (IOSObjectArray *)getBotanaPolynomialsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (OrgGeogebraCommonKernelGeosGeoConic *)getConic;

- (IOSObjectArray *)getIntersectionPoints;

- (OrgGeogebraCommonKernelGeosGeoLine *)getLine;

- (jint)getRelatedModeID;

- (void)initForNearToRelationship OBJC_METHOD_FAMILY_NONE;

+ (jint)intersectLineConicWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)g
                   withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c
                    withOrgGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)sol
                                                      withDouble:(jdouble)eps;

- (jboolean)isLocusEquable;

- (jboolean)isNearToAlgorithm;

- (void)setInputOutput;

#pragma mark Protected

- (IOSObjectArray *)getLastDefinedIntersectionPoints;

- (void)initElements OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, g_, OrgGeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, c_, OrgGeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, P_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, Q_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, INTERSECTION_PRODUCING_LINE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, INTERSECTION_ASYMPTOTIC_LINE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, INTERSECTION_MEETING_LINE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, INTERSECTION_TANGENT_LINE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, INTERSECTION_SECANT_LINE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic, INTERSECTION_PASSING_LINE, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoLine *g, OrgGeogebraCommonKernelGeosGeoConic *c);

FOUNDATION_EXPORT OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic *new_OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoLine *g, OrgGeogebraCommonKernelGeosGeoConic *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_intersectLineConicWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelKernelNDGeoConicND_withOrgGeogebraCommonKernelGeosGeoPointArray_withDouble_(OrgGeogebraCommonKernelGeosGeoLine *g, OrgGeogebraCommonKernelKernelNDGeoConicND *c, IOSObjectArray *sol, jdouble eps);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic)

#endif // _OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_H_
