//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/implicit/AlgoDependentImplicitPoly.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/Algos.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/Equation.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionalNVar.h"
#include "org/geogebra/common/kernel/arithmetic/Inspecting.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/arithmetic/Polynomial.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/implicit/AlgoDependentImplicitPoly.h"
#include "org/geogebra/common/kernel/implicit/GeoImplicitPoly.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly () {
 @public
  OrgGeogebraCommonKernelArithmeticEquation *equation_;
  IOSObjectArray *coeff_;
  OrgGeogebraCommonKernelGeosGeoElement *geoElement_;
  id<JavaUtilSet> dependentFromFunctions_;
}

- (void)computeWithBoolean:(jboolean)first;

- (void)setLine;

- (void)setConic;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly, equation_, OrgGeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly, coeff_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly, geoElement_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly, dependentFromFunctions_, id<JavaUtilSet>)

__attribute__((unused)) static void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_computeWithBoolean_(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self, jboolean first);

__attribute__((unused)) static void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setLine(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setConic(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self);

@implementation OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ
                                                withBoolean:(jboolean)simplify {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(self, c, equ, simplify);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ
                                                withBoolean:(jboolean)simplify {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(self, c, label, equ, simplify);
  return self;
}

- (void)compute {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_computeWithBoolean_(self, NO);
}

- (void)replaceGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)newElem {
  NSString *label = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geoElement_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
  [geoElement_ doRemove];
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_set_geoElement_(self, newElem);
  [self setInputOutput];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geoElement_)) setLabelWithNSString:label];
}

- (OrgGeogebraCommonKernelArithmeticEquation *)getEquation {
  return equation_;
}

- (void)computeWithBoolean:(jboolean)first {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_computeWithBoolean_(self, first);
}

- (void)setLine {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setLine(self);
}

- (void)setConic {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setConic(self);
}

- (void)addAllFunctionalDescendentsWithOrgGeogebraCommonKernelAlgosAlgoElement:(OrgGeogebraCommonKernelAlgosAlgoElement *)algo
                                                               withJavaUtilSet:(id<JavaUtilSet>)set
                                                               withJavaUtilSet:(id<JavaUtilSet>)algos {
  IOSObjectArray *in = [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) getInput];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(in))->size_; i++) {
    OrgGeogebraCommonKernelAlgosAlgoElement *p = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(in, i))) getParentAlgorithm];
    if (p != nil && ![((id<JavaUtilSet>) nil_chk(algos)) containsWithId:p]) {
      [algos addWithId:p];
      [self addAllFunctionalDescendentsWithOrgGeogebraCommonKernelAlgosAlgoElement:p withJavaUtilSet:set withJavaUtilSet:algos];
    }
    if ([OrgGeogebraCommonKernelArithmeticFunctionalNVar_class_() isInstance:IOSObjectArray_Get(in, i)]) {
      [((id<JavaUtilSet>) nil_chk(set)) addWithId:[((id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>) check_protocol_cast(IOSObjectArray_Get(in, i), @protocol(OrgGeogebraCommonKernelArithmeticFunctionalNVar))))) getFunction]];
    }
  }
}

- (void)setInputOutput {
  if (input_ == nil) {
    OrgGeogebraCommonKernelAlgosAlgoElement_set_input_(self, [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) getGeoElementVariables]);
    OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setAndConsume_dependentFromFunctions_(self, new_JavaUtilHashSet_init());
    [self addAllFunctionalDescendentsWithOrgGeogebraCommonKernelAlgosAlgoElement:self withJavaUtilSet:dependentFromFunctions_ withJavaUtilSet:[new_JavaUtilTreeSet_init() autorelease]];
  }
  if ([self getOutputLength] == 0) [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:geoElement_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return OrgGeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeo {
  return geoElement_;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
}

- (NSString *)toExpStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return JreStrcat("$$$", [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geoElement_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl], @": ", [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl]);
}

- (void)dealloc {
  RELEASE_(equation_);
  RELEASE_(coeff_);
  RELEASE_(geoElement_);
  RELEASE_(dependentFromFunctions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticEquation:withBoolean:", "AlgoDependentImplicitPoly", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticEquation:withBoolean:", "AlgoDependentImplicitPoly", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "replaceGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:", "replaceGeoElement", "V", 0x4, NULL, NULL },
    { "getEquation", NULL, "Lorg.geogebra.common.kernel.arithmetic.Equation;", 0x1, NULL, NULL },
    { "computeWithBoolean:", "compute", "V", 0x2, NULL, NULL },
    { "setLine", NULL, "V", 0x2, NULL, NULL },
    { "setConic", NULL, "V", 0x2, NULL, NULL },
    { "addAllFunctionalDescendentsWithOrgGeogebraCommonKernelAlgosAlgoElement:withJavaUtilSet:withJavaUtilSet:", "addAllFunctionalDescendents", "V", 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "getGeo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "toExpStringWithOrgGeogebraCommonKernelStringTemplate:", "toExpString", "Ljava.lang.String;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "equation_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "coeff_", NULL, 0x2, "[[Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", NULL, NULL,  },
    { "geoElement_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "dependentFromFunctions_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/geogebra/common/kernel/arithmetic/FunctionNVar;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly = { 2, "AlgoDependentImplicitPoly", "org.geogebra.common.kernel.implicit", NULL, 0x1, 14, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly;
}

@end

void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self, OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelArithmeticEquation *equ, jboolean simplify) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, c, NO);
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_set_equation_(self, equ);
  OrgGeogebraCommonKernelArithmeticPolynomial *lhs = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equ)) getNormalForm];
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_set_coeff_(self, [((OrgGeogebraCommonKernelArithmeticPolynomial *) nil_chk(lhs)) getCoeff]);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->coeff_))->size_; i++) {
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, i)))->size_; j++) {
      if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, i)), j) != nil) {
        if (simplify && ![((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, i)), j))) inspectWithOrgGeogebraCommonKernelArithmeticInspecting:OrgGeogebraCommonKernelArithmeticInspecting_get_dynamicGeosFinder_()]) {
          IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(self->coeff_, i)), j, [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, i)), j))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
        }
        id<OrgGeogebraCommonKernelArithmeticExpressionValue> eval = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, i)), j))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
        [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(eval, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble];
      }
    }
  }
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(c)) addToConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self withBoolean:NO];
  if ([equ isForcedLine]) {
    OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setAndConsume_geoElement_(self, new_OrgGeogebraCommonKernelGeosGeoLine_initWithOrgGeogebraCommonKernelConstruction_(c));
  }
  else if ([equ isForcedConic]) {
    OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setAndConsume_geoElement_(self, new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(c));
  }
  else if ([equ isForcedImplicitPoly]) {
    OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setAndConsume_geoElement_(self, new_OrgGeogebraCommonKernelImplicitGeoImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_(c));
  }
  else {
    switch ([equ degree]) {
      case 1:
      OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setAndConsume_geoElement_(self, new_OrgGeogebraCommonKernelGeosGeoLine_initWithOrgGeogebraCommonKernelConstruction_(c));
      break;
      case 2:
      OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setAndConsume_geoElement_(self, new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(c));
      break;
      default:
      OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setAndConsume_geoElement_(self, new_OrgGeogebraCommonKernelImplicitGeoImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_(c));
    }
  }
  [self setInputOutput];
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_computeWithBoolean_(self, YES);
}

OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *new_OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelArithmeticEquation *equ, jboolean simplify) {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self = [OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly alloc];
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(self, c, equ, simplify);
  return self;
}

void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ, jboolean simplify) {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(self, c, equ, simplify);
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geoElement_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *new_OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ, jboolean simplify) {
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self = [OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly alloc];
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(self, c, label, equ, simplify);
  return self;
}

void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_computeWithBoolean_(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self, jboolean first) {
  if (!first) {
    if ([((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(self->equation_)) isFunctionDependent]) {
      id<JavaUtilSet> functions = [new_JavaUtilHashSet_init() autorelease];
      [self addAllFunctionalDescendentsWithOrgGeogebraCommonKernelAlgosAlgoElement:self withJavaUtilSet:functions withJavaUtilSet:[new_JavaUtilTreeSet_init() autorelease]];
      if (![functions isEqual:self->dependentFromFunctions_]) {
        [self->equation_ initEquation];
        OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_set_coeff_(self, [((OrgGeogebraCommonKernelArithmeticPolynomial *) nil_chk([self->equation_ getNormalForm])) getCoeff]);
        OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_set_dependentFromFunctions_(self, functions);
      }
    }
    else if ([self->equation_ hasVariableDegree]) {
      OrgGeogebraCommonMainApp_printStacktraceWithId_(@"");
      [self->equation_ initEquation];
      OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_set_coeff_(self, [((OrgGeogebraCommonKernelArithmeticPolynomial *) nil_chk([self->equation_ getNormalForm])) getCoeff]);
    }
    if (![self->equation_ isPolynomial]) {
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geoElement_)) setUndefined];
      return;
    }
  }
  jint degree = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(self->equation_)) isForcedImplicitPoly] ? 3 : ([self->equation_ isForcedConic] ? 2 : [self->equation_ degree]);
  switch (degree) {
    case 1:
    if ([self->geoElement_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) {
      OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setLine(self);
    }
    else {
      if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geoElement_)) hasChildren]) [self->geoElement_ setUndefined];
      else {
        [self replaceGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:[new_OrgGeogebraCommonKernelGeosGeoLine_initWithOrgGeogebraCommonKernelConstruction_([self getConstruction]) autorelease]];
        OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setLine(self);
      }
    }
    break;
    case 2:
    if ([self->geoElement_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConic class]]) {
      OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setConic(self);
    }
    else {
      if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geoElement_)) hasChildren]) [self->geoElement_ setUndefined];
      else {
        [self replaceGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:[new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_([self getConstruction]) autorelease]];
        OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setConic(self);
      }
    }
    break;
    default:
    if ([self->geoElement_ isKindOfClass:[OrgGeogebraCommonKernelImplicitGeoImplicitPoly class]]) {
      [((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) check_class_cast(self->geoElement_, [OrgGeogebraCommonKernelImplicitGeoImplicitPoly class])))) setDefined];
      [((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) check_class_cast(self->geoElement_, [OrgGeogebraCommonKernelImplicitGeoImplicitPoly class])))) setCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2:self->coeff_];
    }
    else {
      if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geoElement_)) hasChildren]) [self->geoElement_ setUndefined];
      else {
        [self replaceGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:[new_OrgGeogebraCommonKernelImplicitGeoImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_([self getConstruction]) autorelease]];
        [((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) check_class_cast(self->geoElement_, [OrgGeogebraCommonKernelImplicitGeoImplicitPoly class])) setDefined];
        [((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) check_class_cast(self->geoElement_, [OrgGeogebraCommonKernelImplicitGeoImplicitPoly class])) setCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2:self->coeff_];
      }
    }
  }
}

void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setLine(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self) {
  IOSObjectArray *expr = [IOSObjectArray arrayWithLength:3 type:OrgGeogebraCommonKernelArithmeticExpressionValue_class_()];
  IOSObjectArray_Set(expr, 2, IOSObjectArray_Set(expr, 1, IOSObjectArray_Set(expr, 0, nil)));
  if (((IOSObjectArray *) nil_chk(self->coeff_))->size_ > 0) {
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 0)))->size_ > 0) {
      IOSObjectArray_Set(expr, 2, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 0)), 0));
      if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 0)))->size_ > 1) {
        IOSObjectArray_Set(expr, 1, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 0)), 1));
      }
    }
    if (self->coeff_->size_ > 1) {
      if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 1)))->size_ > 0) {
        IOSObjectArray_Set(expr, 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 1)), 0));
      }
    }
  }
  IOSDoubleArray *dCoeff = [IOSDoubleArray arrayWithLength:expr->size_];
  for (jint i = 0; i < expr->size_; i++) {
    if (IOSObjectArray_Get(expr, i) != nil) {
      *IOSDoubleArray_GetRef(dCoeff, i) = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(expr, i))) evaluateDouble];
    }
    else {
      *IOSDoubleArray_GetRef(dCoeff, i) = 0;
    }
  }
  [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(((OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(self->geoElement_, [OrgGeogebraCommonKernelGeosGeoLine class])))) setCoordsWithDouble:IOSDoubleArray_Get(dCoeff, 0) withDouble:IOSDoubleArray_Get(dCoeff, 1) withDouble:IOSDoubleArray_Get(dCoeff, 2)];
}

void OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_setConic(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *self) {
  IOSObjectArray *expr = [IOSObjectArray arrayWithLength:6 type:OrgGeogebraCommonKernelArithmeticExpressionValue_class_()];
  for (jint i = 0; i < 6; i++) {
    IOSObjectArray_Set(expr, i, nil);
  }
  if (((IOSObjectArray *) nil_chk(self->coeff_))->size_ > 0) {
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 0)))->size_ > 0) {
      IOSObjectArray_Set(expr, 5, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 0)), 0));
      if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 0)))->size_ > 1) {
        IOSObjectArray_Set(expr, 4, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 0)), 1));
        if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 0)))->size_ > 2) {
          IOSObjectArray_Set(expr, 2, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 0)), 2));
        }
      }
    }
    if (self->coeff_->size_ > 1) {
      if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 1)))->size_ > 0) {
        IOSObjectArray_Set(expr, 3, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 1)), 0));
        if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 1)))->size_ > 1) {
          IOSObjectArray_Set(expr, 1, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 1)), 1));
        }
      }
      if (self->coeff_->size_ > 2) {
        if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(self->coeff_, 2)))->size_ > 0) {
          IOSObjectArray_Set(expr, 0, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->coeff_, 2)), 0));
        }
      }
    }
  }
  IOSDoubleArray *dCoeff = [IOSDoubleArray arrayWithLength:expr->size_];
  for (jint i = 0; i < expr->size_; i++) {
    if (IOSObjectArray_Get(expr, i) != nil) {
      *IOSDoubleArray_GetRef(dCoeff, i) = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(expr, i))) evaluateDouble];
    }
    else {
      *IOSDoubleArray_GetRef(dCoeff, i) = 0;
    }
  }
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(self->geoElement_, [OrgGeogebraCommonKernelGeosGeoConic class])))) setDefined];
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(self->geoElement_, [OrgGeogebraCommonKernelGeosGeoConic class])))) setCoeffsWithDoubleArray:dCoeff];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly)
