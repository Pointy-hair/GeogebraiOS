//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/implicit/PolynomialUtils.java
//

#ifndef _OrgGeogebraCommonKernelImplicitPolynomialUtils_H_
#define _OrgGeogebraCommonKernelImplicitPolynomialUtils_H_

#include "J2ObjC_header.h"

@class IOSDoubleArray;
@class IOSObjectArray;
@class OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction;
@class OrgGeogebraCommonKernelImplicitGeoImplicitPoly;
@class OrgGeogebraCommonKernelPolynomialBigPolynomial;

@interface OrgGeogebraCommonKernelImplicitPolynomialUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSObjectArray *)coeffMinDegWithDoubleArray2:(IOSObjectArray *)coeff;

+ (jdouble)evalWithDoubleArray:(IOSDoubleArray *)c
                    withDouble:(jdouble)x;

+ (jint)getDegreeWithOrgGeogebraCommonKernelPolynomialBigPolynomial:(OrgGeogebraCommonKernelPolynomialBigPolynomial *)poly;

+ (jint)getDegreeWithDoubleArray:(IOSDoubleArray *)c;

+ (jint)getDegreeWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)p;

+ (jdouble)getLeadingCoeffWithDoubleArray:(IOSDoubleArray *)c;

+ (jdouble)getLeadingCoeffWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)p;

+ (IOSDoubleArray *)polynomialDivisionWithDoubleArray:(IOSDoubleArray *)cp
                                      withDoubleArray:(IOSDoubleArray *)cd;

+ (OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)polynomialDivisionWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)p
                                                                                 withOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)d;

+ (jboolean)rootPolishingWithDoubleArray:(IOSDoubleArray *)pair
withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)p1
                         withDoubleArray:(IOSDoubleArray *)line;

+ (jboolean)rootPolishingWithDoubleArray:(IOSDoubleArray *)pair
withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)p1
withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)p2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelImplicitPolynomialUtils)

FOUNDATION_EXPORT IOSDoubleArray *OrgGeogebraCommonKernelImplicitPolynomialUtils_polynomialDivisionWithDoubleArray_withDoubleArray_(IOSDoubleArray *cp, IOSDoubleArray *cd);

FOUNDATION_EXPORT OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *OrgGeogebraCommonKernelImplicitPolynomialUtils_polynomialDivisionWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_withOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *p, OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *d);

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelImplicitPolynomialUtils_getDegreeWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *p);

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelImplicitPolynomialUtils_getDegreeWithDoubleArray_(IOSDoubleArray *c);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelImplicitPolynomialUtils_getLeadingCoeffWithDoubleArray_(IOSDoubleArray *c);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelImplicitPolynomialUtils_getLeadingCoeffWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *p);

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelImplicitPolynomialUtils_getDegreeWithOrgGeogebraCommonKernelPolynomialBigPolynomial_(OrgGeogebraCommonKernelPolynomialBigPolynomial *poly);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelImplicitPolynomialUtils_evalWithDoubleArray_withDouble_(IOSDoubleArray *c, jdouble x);

FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonKernelImplicitPolynomialUtils_coeffMinDegWithDoubleArray2_(IOSObjectArray *coeff);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonKernelImplicitPolynomialUtils_rootPolishingWithDoubleArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withDoubleArray_(IOSDoubleArray *pair, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p1, IOSDoubleArray *line);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonKernelImplicitPolynomialUtils_rootPolishingWithDoubleArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(IOSDoubleArray *pair, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p1, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p2);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelImplicitPolynomialUtils_init(OrgGeogebraCommonKernelImplicitPolynomialUtils *self);

FOUNDATION_EXPORT OrgGeogebraCommonKernelImplicitPolynomialUtils *new_OrgGeogebraCommonKernelImplicitPolynomialUtils_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelImplicitPolynomialUtils)

#endif // _OrgGeogebraCommonKernelImplicitPolynomialUtils_H_
