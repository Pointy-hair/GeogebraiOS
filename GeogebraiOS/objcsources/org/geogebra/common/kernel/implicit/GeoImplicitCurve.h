//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/implicit/GeoImplicitCurve.java
//

#ifndef _OrgGeogebraCommonKernelImplicitGeoImplicitCurve_H_
#define _OrgGeogebraCommonKernelImplicitGeoImplicitCurve_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/EuclidianViewCE.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/Traceable.h"

@class IOSDoubleArray;
@class JavaLangStringBuilder;
@class OrgGeogebraCommonKernelArithmeticEquation;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoLocus;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonPluginGeoClassEnum;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;
@protocol OrgGeogebraCommonKernelPathMover;

@interface OrgGeogebraCommonKernelImplicitGeoImplicitCurve : OrgGeogebraCommonKernelGeosGeoElement < OrgGeogebraCommonKernelEuclidianViewCE, OrgGeogebraCommonKernelGeosTraceable, OrgGeogebraCommonKernelPath >

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equation;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equation;

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (id<OrgGeogebraCommonKernelPathMover>)createPathMover;

- (jboolean)euclidianViewUpdate;

- (jdouble)evaluateImplicitCurveWithDouble:(jdouble)x
                                withDouble:(jdouble)y;

- (jdouble)evaluateImplicitCurveWithDoubleArray:(IOSDoubleArray *)values;

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (OrgGeogebraCommonKernelGeosGeoLocus *)getLocus;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (jboolean)getTrace;

- (void)getXMLWithBoolean:(jboolean)listeners
withJavaLangStringBuilder:(JavaLangStringBuilder *)sbxml;

- (jboolean)isClosedPath;

- (jboolean)isDefined;

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps;

- (jboolean)isTraceable;

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (jboolean)showInAlgebraView;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (void)updatePath;

- (void)updatePathWithDouble:(jdouble)rectX
                  withDouble:(jdouble)rectY
                  withDouble:(jdouble)rectW
                  withDouble:(jdouble)rectH
                  withDouble:(jdouble)xScale
                  withDouble:(jdouble)yScale;

#pragma mark Protected

- (void)polishPointOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (jboolean)showInEuclidianView;

#pragma mark Package-Private

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelImplicitGeoImplicitCurve)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT OrgGeogebraCommonKernelImplicitGeoImplicitCurve *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equation);

FOUNDATION_EXPORT OrgGeogebraCommonKernelImplicitGeoImplicitCurve *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelArithmeticEquation *equation);

FOUNDATION_EXPORT OrgGeogebraCommonKernelImplicitGeoImplicitCurve *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelArithmeticEquation *equation) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve)

#endif // _OrgGeogebraCommonKernelImplicitGeoImplicitCurve_H_
