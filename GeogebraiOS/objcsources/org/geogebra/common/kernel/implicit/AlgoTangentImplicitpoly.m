//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/implicit/AlgoTangentImplicitpoly.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoPointOnPath.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/implicit/AlgoImplicitPolyTangentCurve.h"
#include "org/geogebra/common/kernel/implicit/AlgoIntersectImplicitpolys.h"
#include "org/geogebra/common/kernel/implicit/AlgoTangentImplicitpoly.h"
#include "org/geogebra/common/kernel/implicit/GeoImplicitPoly.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly () {
 @public
  OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> R_;
  id<OrgGeogebraCommonKernelKernelNDGeoLineND> g_;
  IOSObjectArray *ip_;
  OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *tangents_;
  jboolean pointOnPath_;
  OrgGeogebraCommonKernelImplicitAlgoIntersectImplicitpolys *algoIntersect_;
  IOSObjectArray *labels_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly, p_, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly, R_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly, g_, id<OrgGeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly, ip_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly, tangents_, OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly, algoIntersect_, OrgGeogebraCommonKernelImplicitAlgoIntersectImplicitpolys *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly, labels_, IOSObjectArray *)

@interface OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *this$0_;
}

- (OrgGeogebraCommonKernelGeosGeoLine *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly:(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1, this$0_, OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *)

__attribute__((unused)) static void OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 *self, OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 *new_OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1)

@implementation OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
         withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)p {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(self, c, labels, p);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
         withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)p
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)R {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, labels, p, R);
  return self;
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 1, p_);
  if (g_ != nil) IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  else IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(R_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_setAndConsume_tangents_(self, new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_(self) autorelease]));
  [tangents_ setLabelsWithNSStringArray:labels_];
  [self setDependencies];
}

- (void)compute {
  if (R_ == nil) {
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(tangents_)) adjustOutputSizeWithInt:0];
    return;
  }
  if (![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(R_)) isDefined]) {
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(tangents_)) adjustOutputSizeWithInt:0];
    return;
  }
  if ([R_ isGeoElement3D] && !OrgGeogebraCommonKernelKernel_isZeroWithDouble_([R_ getInhomZ])) {
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(tangents_)) adjustOutputSizeWithInt:0];
    return;
  }
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(tangents_)) adjustOutputSizeWithInt:0];
  jint n = 0;
  if ([((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(p_)) isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:R_]) {
    [tangents_ adjustOutputSizeWithInt:n + 1];
    jdouble dfdx = [self->p_ evalDiffXPolyAtWithDouble:[R_ getInhomX] withDouble:[R_ getInhomY]];
    jdouble dfdy = [self->p_ evalDiffYPolyAtWithDouble:[R_ getInhomX] withDouble:[R_ getInhomY]];
    if (!OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(dfdx, 0, 1E-5) || !OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(dfdy, 0, 1E-5)) {
      [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk([tangents_ getElementWithInt:n])) setCoordsWithDouble:dfdx withDouble:dfdy withDouble:-dfdx * [R_ getInhomX] - dfdy * [R_ getInhomY]];
      n++;
    }
  }
  if (pointOnPath_) {
    return;
  }
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_set_ip_(self, [((OrgGeogebraCommonKernelImplicitAlgoIntersectImplicitpolys *) nil_chk(algoIntersect_)) getIntersectionPoints]);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(ip_))->size_; i++) {
    if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i)))->inhomX_, [R_ getInhomX], 1E-2) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i)))->inhomY_, [R_ getInhomY], 1E-2)) continue;
    if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(0, [self->p_ evalDiffXPolyAtWithDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i)))->inhomX_ withDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i)))->inhomY_], OrgGeogebraCommonKernelKernel_STANDARD_PRECISION_SQRT) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(0, [self->p_ evalDiffXPolyAtWithDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i)))->inhomX_ withDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i)))->inhomY_], OrgGeogebraCommonKernelKernel_STANDARD_PRECISION_SQRT)) continue;
    [tangents_ adjustOutputSizeWithInt:n + 1];
    [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk([tangents_ getElementWithInt:n])) setCoordsWithDouble:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i))) getY] - [self->R_ getInhomY] withDouble:[self->R_ getInhomX] - [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i))) getX] withDouble:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i))) getX] * [self->R_ getInhomY] - [self->R_ getInhomX] * [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i))) getY]];
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(ip_, i))) addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:[tangents_ getElementWithInt:n] withBoolean:NO];
    n++;
  }
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Tangent();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_TANGENTS;
}

- (IOSObjectArray *)getTangents {
  return [tangents_ getOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithLength:[((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(tangents_)) size] type:OrgGeogebraCommonKernelGeosGeoLine_class_()]];
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels {
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(tangents_)) setLabelsWithNSStringArray:labels];
  [self update];
}

- (IOSObjectArray *)getTangentPoints {
  return ip_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getTangentPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                   withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)line {
  if (geo == p_ && line == g_ && R_ != nil && pointOnPath_) {
    return R_;
  }
  return nil;
}

- (void)dealloc {
  RELEASE_(p_);
  RELEASE_(R_);
  RELEASE_(g_);
  RELEASE_(ip_);
  RELEASE_(tangents_);
  RELEASE_(algoIntersect_);
  RELEASE_(labels_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:", "AlgoTangentImplicitpoly", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoTangentImplicitpoly", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "getTangents", NULL, "[Lorg.geogebra.common.kernel.geos.GeoLine;", 0x1, NULL, NULL },
    { "setLabelsWithNSStringArray:", "setLabels", "V", 0x1, NULL, NULL },
    { "getTangentPoints", NULL, "[Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getTangentPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoLine:", "getTangentPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x2, "Lorg.geogebra.common.kernel.implicit.GeoImplicitPoly;", NULL, NULL,  },
    { "R_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "ip_", NULL, 0x2, "[Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "tangents_", NULL, 0x2, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/kernel/geos/GeoLine;>;",  },
    { "pointOnPath_", NULL, 0x2, "Z", NULL, NULL,  },
    { "algoIntersect_", NULL, 0x2, "Lorg.geogebra.common.kernel.implicit.AlgoIntersectImplicitpolys;", NULL, NULL,  },
    { "labels_", NULL, 0x2, "[Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly = { 2, "AlgoTangentImplicitpoly", "org.geogebra.common.kernel.implicit", NULL, 0x1, 10, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly;
}

@end

void OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_set_labels_(self, labels);
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_set_p_(self, p);
}

OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *new_OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p) {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *self = [OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly alloc];
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(self, c, labels, p);
  return self;
}

void OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p, id<OrgGeogebraCommonKernelKernelNDGeoPointND> R) {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(self, c, labels, p);
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_set_R_(self, R);
  self->pointOnPath_ = NO;
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(R)) getParentAlgorithm] != nil) {
    if ([[R getParentAlgorithm] isKindOfClass:[OrgGeogebraCommonKernelAlgosAlgoPointOnPath class]]) {
      OrgGeogebraCommonKernelAlgosAlgoPointOnPath *a = (OrgGeogebraCommonKernelAlgosAlgoPointOnPath *) check_class_cast([R getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoPointOnPath class]);
      if ([((OrgGeogebraCommonKernelAlgosAlgoPointOnPath *) nil_chk(a)) getPath] == p) {
        self->pointOnPath_ = YES;
      }
    }
  }
  if (!self->pointOnPath_) {
    OrgGeogebraCommonKernelImplicitAlgoImplicitPolyTangentCurve *algoTangentPoly = [new_OrgGeogebraCommonKernelImplicitAlgoImplicitPolyTangentCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelKernelNDGeoPointND_withNSString_withBoolean_withBoolean_(c, p, R, nil, NO, NO) autorelease];
    OrgGeogebraCommonKernelImplicitGeoImplicitPoly *tangentCurve = [algoTangentPoly getTangentCurve];
    OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_setAndConsume_algoIntersect_(self, new_OrgGeogebraCommonKernelImplicitAlgoIntersectImplicitpolys_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(self->cons_, p, tangentCurve));
    [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoIntersect_];
    OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_set_ip_(self, [self->algoIntersect_ getIntersectionPoints]);
  }
  [self setInputOutput];
}

OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *new_OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *p, id<OrgGeogebraCommonKernelKernelNDGeoPointND> R) {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *self = [OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly alloc];
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, labels, p, R);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly)

@implementation OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1

- (OrgGeogebraCommonKernelGeosGeoLine *)newElement {
  OrgGeogebraCommonKernelGeosGeoLine *g1 = [new_OrgGeogebraCommonKernelGeosGeoLine_initWithOrgGeogebraCommonKernelConstruction_([this$0_ getConstruction]) autorelease];
  [g1 setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:this$0_];
  return g1;
}

- (instancetype)initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly:(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *)outer$ {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoLine;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.implicit.AlgoTangentImplicitpoly;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly", "setInputOutput" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 = { 2, "", "org.geogebra.common.kernel.implicit", "AlgoTangentImplicitpoly", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/kernel/geos/GeoLine;>;" };
  return &_OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1;
}

@end

void OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 *self, OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *outer$) {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 *new_OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly *outer$) {
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 *self = [OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1 alloc];
  OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1_initWithOrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelImplicitAlgoTangentImplicitpoly_$1)
