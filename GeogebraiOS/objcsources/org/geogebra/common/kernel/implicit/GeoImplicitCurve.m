//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/implicit/GeoImplicitCurve.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/PathMover.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/Equation.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/Traversing.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLocus.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/implicit/GeoImplicitCurve.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/GeoClass.h"
#include "org/geogebra/common/plugin/Operation.h"
#include "org/geogebra/common/util/StringUtil.h"

@class OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum;

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_INVALID 5

@interface OrgGeogebraCommonKernelImplicitGeoImplicitCurve () {
 @public
  OrgGeogebraCommonKernelArithmeticFunctionNVar *expression_;
  OrgGeogebraCommonKernelGeosGeoLocus *locus_;
  jint gridWidth_;
  jint gridHeight_;
  OrgGeogebraCommonKernelArithmeticEquation *equation_;
  jboolean defined_;
  IOSDoubleArray *evalArray_;
  IOSObjectArray *grid_;
  jdouble rectX_;
  jdouble rectY_;
  jdouble rectW_;
  jdouble rectH_;
  jboolean trace_;
  IOSDoubleArray *eval_;
}

- (void)fromEquationWithOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equation;

- (IOSObjectArray *)getPointsForGridWithInt:(jint)i
                                    withInt:(jint)j;

- (jdouble)linWithDoubleArray:(IOSDoubleArray *)A
              withDoubleArray:(IOSDoubleArray *)B
                      withInt:(jint)i;

- (OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *)getGridTypeWithInt:(jint)i
                                                                                 withInt:(jint)j;

- (jint)mySignFunWithDouble:(jdouble)val;

- (jdouble)getRealWorldYWithInt:(jint)i;

- (jdouble)getRealWorldXWithInt:(jint)j;

- (IOSDoubleArray *)getRealWorldCoordinatesWithInt:(jint)i
                                           withInt:(jint)j;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve, expression_, OrgGeogebraCommonKernelArithmeticFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve, locus_, OrgGeogebraCommonKernelGeosGeoLocus *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve, equation_, OrgGeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve, evalArray_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve, grid_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve, eval_, IOSDoubleArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve, INVALID, jint)

__attribute__((unused)) static void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_fromEquationWithOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelArithmeticEquation *equation);

__attribute__((unused)) static IOSObjectArray *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getPointsForGridWithInt_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i, jint j);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, IOSDoubleArray *A, IOSDoubleArray *B, jint i);

__attribute__((unused)) static OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getGridTypeWithInt_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i, jint j);

__attribute__((unused)) static jint OrgGeogebraCommonKernelImplicitGeoImplicitCurve_mySignFunWithDouble_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jdouble val);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldYWithInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldXWithInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint j);

__attribute__((unused)) static IOSDoubleArray *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i, jint j);

typedef NS_ENUM(NSUInteger, OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum) {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0000 = 0,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1000 = 1,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0100 = 2,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0010 = 3,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0001 = 4,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1001 = 5,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1100 = 6,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1010 = 7,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0101 = 8,
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_TINVALID = 9,
};

@interface OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum : JavaLangEnum < NSCopying >

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values();

+ (OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum)

FOUNDATION_EXPORT OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[];

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0000 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0000]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T0000)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1000 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1000]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T1000)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0100 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0100]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T0100)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0010 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0010]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T0010)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0001 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0001]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T0001)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1001 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1001]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T1001)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1100 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1100]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T1100)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1010 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1010]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T1010)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0101 OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0101]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, T0101)

#define OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_TINVALID OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_TINVALID]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum, TINVALID)

__attribute__((unused)) static void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum)

@implementation OrgGeogebraCommonKernelImplicitGeoImplicitCurve

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equation {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, c, label, equation);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equation {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_(self, c, equation);
  return self;
}

- (void)fromEquationWithOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equation {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_fromEquationWithOrgGeogebraCommonKernelArithmeticEquation_(self, equation);
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return OrgGeogebraCommonPluginGeoClassEnum_get_IMPLICIT_CURVE();
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve *curve = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(cons_);
  [curve setWithOrgGeogebraCommonKernelGeosGeoElement:self];
  return curve;
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  id equationCopy = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(((OrgGeogebraCommonKernelImplicitGeoImplicitCurve *) nil_chk(((OrgGeogebraCommonKernelImplicitGeoImplicitCurve *) check_class_cast(geo, [OrgGeogebraCommonKernelImplicitGeoImplicitCurve class]))))->equation_)) deepCopyWithOrgGeogebraCommonKernelKernel:kernel_];
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_fromEquationWithOrgGeogebraCommonKernelArithmeticEquation_(self, (OrgGeogebraCommonKernelArithmeticEquation *) check_class_cast(equationCopy, [OrgGeogebraCommonKernelArithmeticEquation class]));
}

- (jboolean)isDefined {
  return defined_ && expression_ != nil;
}

- (void)setUndefined {
  defined_ = NO;
}

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toValueStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return JreStrcat("$$$", label_, @": ", [self toValueStringWithOrgGeogebraCommonKernelStringTemplate:tpl]);
}

- (jboolean)showInAlgebraView {
  return YES;
}

- (jboolean)showInEuclidianView {
  return YES;
}

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return NO;
}

- (jdouble)evaluateImplicitCurveWithDouble:(jdouble)x
                                withDouble:(jdouble)y {
  *IOSDoubleArray_GetRef(nil_chk(evalArray_), 0) = x;
  *IOSDoubleArray_GetRef(evalArray_, 1) = y;
  return [self evaluateImplicitCurveWithDoubleArray:evalArray_];
}

- (jdouble)evaluateImplicitCurveWithDoubleArray:(IOSDoubleArray *)values {
  return [((OrgGeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(expression_)) evaluateWithDoubleArray:values];
}

- (OrgGeogebraCommonKernelGeosGeoLocus *)getLocus {
  return locus_;
}

- (void)updatePath {
  IOSDoubleArray *viewBounds = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getViewBoundsForGeoWithOrgGeogebraCommonKernelGeosGeoElement:self];
  if (IOSDoubleArray_Get(nil_chk(viewBounds), 0) == JavaLangDouble_POSITIVE_INFINITY) {
    viewBounds = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ -10, 10, -10, 10, 10, 10 } count:6];
  }
  gridWidth_ = 60;
  gridHeight_ = 60;
  [self updatePathWithDouble:IOSDoubleArray_Get(viewBounds, 0) withDouble:IOSDoubleArray_Get(viewBounds, 3) withDouble:IOSDoubleArray_Get(viewBounds, 1) - IOSDoubleArray_Get(viewBounds, 0) withDouble:IOSDoubleArray_Get(viewBounds, 3) - IOSDoubleArray_Get(viewBounds, 2) withDouble:IOSDoubleArray_Get(viewBounds, 4) withDouble:IOSDoubleArray_Get(viewBounds, 5)];
}

- (void)updatePathWithDouble:(jdouble)rectX
                  withDouble:(jdouble)rectY
                  withDouble:(jdouble)rectW
                  withDouble:(jdouble)rectH
                  withDouble:(jdouble)xScale
                  withDouble:(jdouble)yScale {
  self->rectX_ = rectX;
  self->rectY_ = rectY;
  self->rectW_ = rectW * 1.1;
  self->rectH_ = rectH * 1.1;
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("DCDCDCD", rectX, 'x', rectY, ',', rectW, ',', rectH));
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("ICI", gridWidth_, 'x', gridHeight_));
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("$DCD", @"res", xScale, ' ', yScale));
  grid_ = [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ gridHeight_, gridWidth_ }];
  for (jint i = 0; i < gridHeight_; i++) {
    for (jint j = 0; j < gridWidth_; j++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(grid_, i)), j) = [self evaluateImplicitCurveWithDoubleArray:OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(self, i, j)];
    }
  }
  id<JavaUtilList> locusPoints = [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) getPoints];
  [((id<JavaUtilList>) nil_chk(locusPoints)) clear];
  jint i = 0;
  jint j = -1;
  while (YES) {
    if (j >= gridWidth_ - 2) {
      j = 0;
      i++;
    }
    else {
      j++;
    }
    if (i >= gridHeight_ - 2) {
      break;
    }
    IOSObjectArray *ps = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getPointsForGridWithInt_withInt_(self, i, j);
    if (ps != nil) {
      {
        IOSObjectArray *a__ = ps;
        OrgGeogebraCommonKernelMyPoint * const *b__ = a__->buffer_;
        OrgGeogebraCommonKernelMyPoint * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          OrgGeogebraCommonKernelMyPoint *p = *b__++;
          [locusPoints addWithId:p];
        }
      }
    }
  }
}

- (IOSObjectArray *)getPointsForGridWithInt:(jint)i
                                    withInt:(jint)j {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getPointsForGridWithInt_withInt_(self, i, j);
}

- (jdouble)linWithDoubleArray:(IOSDoubleArray *)A
              withDoubleArray:(IOSDoubleArray *)B
                      withInt:(jint)i {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, A, B, i);
}

- (OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *)getGridTypeWithInt:(jint)i
                                                                                 withInt:(jint)j {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getGridTypeWithInt_withInt_(self, i, j);
}

- (jint)mySignFunWithDouble:(jdouble)val {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_mySignFunWithDouble_(self, val);
}

- (jdouble)getRealWorldYWithInt:(jint)i {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldYWithInt_(self, i);
}

- (jdouble)getRealWorldXWithInt:(jint)j {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldXWithInt_(self, j);
}

- (IOSDoubleArray *)getRealWorldCoordinatesWithInt:(jint)i
                                           withInt:(jint)j {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(self, i, j);
}

- (jboolean)euclidianViewUpdate {
  if ([self isDefined]) {
    [self updatePath];
    return YES;
  }
  return NO;
}

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType {
  return OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum_get_ON_BOUNDARY();
}

- (jboolean)isTraceable {
  return YES;
}

- (void)setTraceWithBoolean:(jboolean)trace {
  self->trace_ = trace;
}

- (jboolean)getTrace {
  return trace_;
}

- (void)getXMLWithBoolean:(jboolean)listeners
withJavaLangStringBuilder:(JavaLangStringBuilder *)sbxml {
  if ([self isIndependent] && [self getDefaultGeoType] < 0) {
    (void) [((JavaLangStringBuilder *) nil_chk(sbxml)) appendWithNSString:@"<expression"];
    (void) [sbxml appendWithNSString:@" label =\""];
    (void) [sbxml appendWithNSString:label_];
    (void) [sbxml appendWithNSString:@"\" exp=\""];
    OrgGeogebraCommonUtilStringUtil_encodeXMLWithJavaLangStringBuilder_withNSString_(sbxml, [self toStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_xmlTemplate_()]);
    (void) [sbxml appendWithNSString:@"\"/>\n"];
  }
  [super getXMLWithBoolean:listeners withJavaLangStringBuilder:sbxml];
}

- (void)polishPointOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI {
}

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI {
  if ([((JavaUtilArrayList *) nil_chk([((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) getPoints])) size] > 0) {
    [locus_ pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI];
    [self polishPointOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI];
  }
}

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI {
  if (![((OrgGeogebraCommonKernelKernel *) nil_chk([self getKernel])) usePathAndRegionParametersWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI]) {
    [self pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI];
    return;
  }
  if ([((JavaUtilArrayList *) nil_chk([((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) getPoints])) size] > 0) {
    [locus_ pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI];
    [self polishPointOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI];
  }
}

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI {
  return [self isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION];
}

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps {
  if (![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(PI)) isDefined]) return NO;
  jdouble px, py, pz;
  if ([PI isGeoElement3D]) {
    OrgGeogebraCommonKernelMatrixCoords *coords = [PI getInhomCoordsInD3];
    if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getZ])) {
      return NO;
    }
    px = [coords getX];
    py = [coords getY];
  }
  else {
    OrgGeogebraCommonKernelGeosGeoPoint *P = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(PI, [OrgGeogebraCommonKernelGeosGeoPoint class]);
    px = P->x_;
    py = P->y_;
    pz = P->z_;
    if ([P isFinite]) {
      px /= pz;
      py /= pz;
    }
  }
  *IOSDoubleArray_GetRef(nil_chk(eval_), 0) = px;
  *IOSDoubleArray_GetRef(eval_, 1) = py;
  jdouble value = [((OrgGeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(self->expression_)) evaluateWithDoubleArray:eval_];
  return JavaLangMath_absWithDouble_(value) < OrgGeogebraCommonKernelKernel_MIN_PRECISION;
}

- (jdouble)getMinParameter {
  return [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) getMinParameter];
}

- (jdouble)getMaxParameter {
  return [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) getMaxParameter];
}

- (jboolean)isClosedPath {
  return [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) isClosedPath];
}

- (id<OrgGeogebraCommonKernelPathMover>)createPathMover {
  return [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) createPathMover];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoImplicitCurve", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticEquation:", "GeoImplicitCurve", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticEquation:", "GeoImplicitCurve", NULL, 0x1, NULL, NULL },
    { "fromEquationWithOrgGeogebraCommonKernelArithmeticEquation:", "fromEquation", "V", 0x2, NULL, NULL },
    { "getGeoClassType", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "isDefined", NULL, "Z", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x1, NULL, NULL },
    { "toValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "showInAlgebraView", NULL, "Z", 0x1, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x4, NULL, NULL },
    { "isEqualWithOrgGeogebraCommonKernelGeosGeoElement:", "isEqual", "Z", 0x1, NULL, NULL },
    { "evaluateImplicitCurveWithDouble:withDouble:", "evaluateImplicitCurve", "D", 0x1, NULL, NULL },
    { "evaluateImplicitCurveWithDoubleArray:", "evaluateImplicitCurve", "D", 0x1, NULL, NULL },
    { "getLocus", NULL, "Lorg.geogebra.common.kernel.geos.GeoLocus;", 0x1, NULL, NULL },
    { "updatePath", NULL, "V", 0x1, NULL, NULL },
    { "updatePathWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "updatePath", "V", 0x1, NULL, NULL },
    { "getPointsForGridWithInt:withInt:", "getPointsForGrid", "[Lorg.geogebra.common.kernel.MyPoint;", 0x2, NULL, NULL },
    { "linWithDoubleArray:withDoubleArray:withInt:", "lin", "D", 0x2, NULL, NULL },
    { "getGridTypeWithInt:withInt:", "getGridType", "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", 0x2, NULL, NULL },
    { "mySignFunWithDouble:", "mySignFun", "I", 0x2, NULL, NULL },
    { "getRealWorldYWithInt:", "getRealWorldY", "D", 0x2, NULL, NULL },
    { "getRealWorldXWithInt:", "getRealWorldX", "D", 0x2, NULL, NULL },
    { "getRealWorldCoordinatesWithInt:withInt:", "getRealWorldCoordinates", "[D", 0x2, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x1, NULL, NULL },
    { "getLastHitType", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement$HitType;", 0x11, NULL, NULL },
    { "isTraceable", NULL, "Z", 0x1, NULL, NULL },
    { "setTraceWithBoolean:", "setTrace", "V", 0x1, NULL, NULL },
    { "getTrace", NULL, "Z", 0x1, NULL, NULL },
    { "getXMLWithBoolean:withJavaLangStringBuilder:", "getXML", "V", 0x1, NULL, NULL },
    { "polishPointOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "polishPointOnPath", "V", 0x4, NULL, NULL },
    { "pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pointChanged", "V", 0x1, NULL, NULL },
    { "pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pathChanged", "V", 0x1, NULL, NULL },
    { "isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "isOnPath", "Z", 0x1, NULL, NULL },
    { "isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:withDouble:", "isOnPath", "Z", 0x1, NULL, NULL },
    { "getMinParameter", NULL, "D", 0x1, NULL, NULL },
    { "getMaxParameter", NULL, "D", 0x1, NULL, NULL },
    { "isClosedPath", NULL, "Z", 0x1, NULL, NULL },
    { "createPathMover", NULL, "Lorg.geogebra.common.kernel.PathMover;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "expression_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.FunctionNVar;", NULL, NULL,  },
    { "locus_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoLocus;", NULL, NULL,  },
    { "gridWidth_", NULL, 0x2, "I", NULL, NULL,  },
    { "gridHeight_", NULL, 0x2, "I", NULL, NULL,  },
    { "equation_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "defined_", NULL, 0x2, "Z", NULL, NULL,  },
    { "INVALID_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_INVALID },
    { "evalArray_", NULL, 0x2, "[D", NULL, NULL,  },
    { "grid_", NULL, 0x2, "[[D", NULL, NULL,  },
    { "rectX_", NULL, 0x2, "D", NULL, NULL,  },
    { "rectY_", NULL, 0x2, "D", NULL, NULL,  },
    { "rectW_", NULL, 0x2, "D", NULL, NULL,  },
    { "rectH_", NULL, 0x2, "D", NULL, NULL,  },
    { "trace_", NULL, 0x2, "Z", NULL, NULL,  },
    { "eval_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelImplicitGeoImplicitCurve = { 2, "GeoImplicitCurve", "org.geogebra.common.kernel.implicit", NULL, 0x1, 41, methods, 15, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelImplicitGeoImplicitCurve;
}

@end

void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonKernelGeosGeoElement_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->defined_ = YES;
  self->evalArray_ = [IOSDoubleArray newArrayWithLength:2];
  self->eval_ = [IOSDoubleArray newArrayWithLength:2];
  self->locus_ = new_OrgGeogebraCommonKernelGeosGeoLocus_initWithOrgGeogebraCommonKernelConstruction_(c);
  [self->locus_ setDefinedWithBoolean:YES];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->locus_];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(c)) registerEuclidianViewCEWithOrgGeogebraCommonKernelEuclidianViewCE:self];
}

OrgGeogebraCommonKernelImplicitGeoImplicitCurve *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self = [OrgGeogebraCommonKernelImplicitGeoImplicitCurve alloc];
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equation) {
  (void) OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_fromEquationWithOrgGeogebraCommonKernelArithmeticEquation_(self, equation);
  [self updatePath];
  [self setLabelWithNSString:label];
}

OrgGeogebraCommonKernelImplicitGeoImplicitCurve *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equation) {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self = [OrgGeogebraCommonKernelImplicitGeoImplicitCurve alloc];
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, c, label, equation);
  return self;
}

void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelArithmeticEquation *equation) {
  (void) OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_fromEquationWithOrgGeogebraCommonKernelArithmeticEquation_(self, equation);
  [self updatePath];
}

OrgGeogebraCommonKernelImplicitGeoImplicitCurve *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelArithmeticEquation *equation) {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self = [OrgGeogebraCommonKernelImplicitGeoImplicitCurve alloc];
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_(self, c, equation);
  return self;
}

void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_fromEquationWithOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, OrgGeogebraCommonKernelArithmeticEquation *equation) {
  self->equation_ = equation;
  OrgGeogebraCommonKernelArithmeticExpressionNode *leftHandSide = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation)) getLHS];
  OrgGeogebraCommonKernelArithmeticExpressionNode *rightHandSide = [equation getRHS];
  OrgGeogebraCommonKernelArithmeticExpressionNode *functionExpression = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, leftHandSide, OrgGeogebraCommonPluginOperationEnum_get_MINUS(), rightHandSide);
  OrgGeogebraCommonKernelArithmeticFunctionVariable *x = new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(self->kernel_, @"x");
  OrgGeogebraCommonKernelArithmeticFunctionVariable *y = new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(self->kernel_, @"y");
  OrgGeogebraCommonKernelArithmeticTraversing_VariableReplacer *repl = OrgGeogebraCommonKernelArithmeticTraversing_VariableReplacer_getReplacer();
  OrgGeogebraCommonKernelArithmeticTraversing_VariableReplacer_addVarsWithNSString_withOrgGeogebraCommonKernelArithmeticExpressionValue_(@"x", x);
  OrgGeogebraCommonKernelArithmeticTraversing_VariableReplacer_addVarsWithNSString_withOrgGeogebraCommonKernelArithmeticExpressionValue_(@"y", y);
  (void) [functionExpression traverseWithOrgGeogebraCommonKernelArithmeticTraversing:repl];
  self->expression_ = new_OrgGeogebraCommonKernelArithmeticFunctionNVar_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariableArray_(functionExpression, [IOSObjectArray newArrayWithObjects:(id[]){ x, y } count:2 type:OrgGeogebraCommonKernelArithmeticFunctionVariable_class_()]);
}

IOSObjectArray *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getPointsForGridWithInt_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i, jint j) {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *gridType = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getGridTypeWithInt_withInt_(self, i, j);
  OrgGeogebraCommonKernelMyPoint *P, *Q;
  jdouble qx, qy, px, py;
  IOSDoubleArray *A = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(self, i, j);
  IOSDoubleArray *B = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(self, i, j + 1);
  IOSDoubleArray *C = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(self, i + 1, j + 1);
  IOSDoubleArray *D = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(self, i + 1, j);
  switch ([gridType ordinal]) {
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1000:
    qx = IOSDoubleArray_Get(nil_chk(A), 0);
    py = IOSDoubleArray_Get(A, 1);
    qy = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, A, D, 1);
    px = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, A, B, 0);
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(px, py, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(qx, qy, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0100:
    qx = IOSDoubleArray_Get(nil_chk(B), 0);
    py = IOSDoubleArray_Get(B, 1);
    qy = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, C, B, 1);
    px = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, A, B, 0);
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(px, py, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(qx, qy, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0010:
    qx = IOSDoubleArray_Get(nil_chk(B), 0);
    py = IOSDoubleArray_Get(nil_chk(C), 1);
    qy = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, B, C, 1);
    px = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, C, D, 0);
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(px, py, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(qx, qy, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0001:
    qx = IOSDoubleArray_Get(nil_chk(A), 0);
    py = IOSDoubleArray_Get(nil_chk(C), 1);
    qy = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, A, D, 1);
    px = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, C, D, 0);
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(px, py, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(qx, qy, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1001:
    py = IOSDoubleArray_Get(nil_chk(C), 1);
    px = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, C, D, 0);
    qy = IOSDoubleArray_Get(nil_chk(A), 1);
    qx = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, A, B, 0);
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(px, py, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(qx, qy, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1100:
    qx = IOSDoubleArray_Get(nil_chk(A), 0);
    qy = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, A, D, 1);
    px = IOSDoubleArray_Get(nil_chk(B), 0);
    py = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(self, C, B, 1);
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(px, py, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(qx, qy, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T1010:
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(0, 0, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(0, 0, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0101:
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(0, 0, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(0, 0, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_TINVALID:
    P = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(0, 0, NO);
    Q = new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(0, 0, YES);
    return [IOSObjectArray newArrayWithObjects:(id[]){ P, Q } count:2 type:OrgGeogebraCommonKernelMyPoint_class_()];
    case OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnum_T0000:
    break;
  }
  return nil;
}

jdouble OrgGeogebraCommonKernelImplicitGeoImplicitCurve_linWithDoubleArray_withDoubleArray_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, IOSDoubleArray *A, IOSDoubleArray *B, jint i) {
  jdouble fB = [self evaluateImplicitCurveWithDoubleArray:B];
  jdouble fA = [self evaluateImplicitCurveWithDoubleArray:A];
  jdouble ratio = -fB / (fA - fB);
  if (ratio >= 0 && ratio <= 1) {
    return ratio * (IOSDoubleArray_Get(nil_chk(A), i) - IOSDoubleArray_Get(nil_chk(B), i)) + IOSDoubleArray_Get(B, i);
  }
  return (IOSDoubleArray_Get(nil_chk(A), i) + IOSDoubleArray_Get(nil_chk(B), i)) * 0.5;
}

OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getGridTypeWithInt_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i, jint j) {
  jdouble nw = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->grid_), i)), j);
  jdouble ne = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(self->grid_, i)), j + 1);
  jdouble sw = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(self->grid_, i + 1)), j);
  jdouble se = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(self->grid_, i + 1)), j + 1);
  jint snw = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_mySignFunWithDouble_(self, nw);
  jint sne = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_mySignFunWithDouble_(self, ne);
  jint ssw = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_mySignFunWithDouble_(self, sw);
  jint sse = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_mySignFunWithDouble_(self, se);
  jdouble sum = JavaLangMath_absWithInt_(snw + sne + ssw + sse);
  if (sum > OrgGeogebraCommonKernelImplicitGeoImplicitCurve_INVALID) {
    return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_TINVALID();
  }
  if (sum == 4) {
    return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T0000();
  }
  if (sum == 2) {
    if (snw != sne) {
      if (snw != ssw) {
        return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T1000();
      }
      return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T0100();
    }
    if (ssw != snw) {
      return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T0001();
    }
    return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T0010();
  }
  if (snw == ssw) {
    return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T1001();
  }
  if (snw == sne) {
    return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T1100();
  }
  if (snw > 0) {
    return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T1010();
  }
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_get_T0101();
}

jint OrgGeogebraCommonKernelImplicitGeoImplicitCurve_mySignFunWithDouble_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jdouble val) {
  if (JavaLangDouble_isNaNWithDouble_(val) || JavaLangDouble_isInfiniteWithDouble_(val)) {
    return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_INVALID;
  }
  if (val > 0) {
    return 1;
  }
  return -1;
}

jdouble OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldYWithInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i) {
  jdouble s = self->rectH_ / self->gridHeight_;
  return self->rectY_ - i * s;
}

jdouble OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldXWithInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint j) {
  jdouble s = self->rectW_ / self->gridWidth_;
  return self->rectX_ + j * s;
}

IOSDoubleArray *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldCoordinatesWithInt_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve *self, jint i, jint j) {
  jdouble x = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldXWithInt_(self, j);
  jdouble y = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_getRealWorldYWithInt_(self, i);
  return [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ x, y } count:2];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelImplicitGeoImplicitCurve)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum)

OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[10];

@implementation OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values() {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_ count:10 type:OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values();
}

+ (OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initialize();
  for (int i = 0; i < 10; i++) {
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *e = OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum class]) {
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0000 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T0000", 0);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1000 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T1000", 1);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0100 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T0100", 2);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0010 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T0010", 3);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0001 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T0001", 4);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1001 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T1001", 5);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1100 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T1100", 6);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1010 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T1010", 7);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0101 = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"T0101", 8);
    OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_TINVALID = new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(@"TINVALID", 9);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "T0000", "T0000", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0000, NULL,  },
    { "T1000", "T1000", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1000, NULL,  },
    { "T0100", "T0100", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0100, NULL,  },
    { "T0010", "T0010", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0010, NULL,  },
    { "T0001", "T0001", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0001, NULL,  },
    { "T1001", "T1001", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1001, NULL,  },
    { "T1100", "T1100", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1100, NULL,  },
    { "T1010", "T1010", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T1010, NULL,  },
    { "T0101", "T0101", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_T0101, NULL,  },
    { "TINVALID", "TINVALID", 0x4019, "Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;", &OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_TINVALID, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.implicit.GeoImplicitCurve$GridTypeEnum;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum = { 2, "GridTypeEnum", "org.geogebra.common.kernel.implicit", "GeoImplicitCurve", 0x401a, 0, NULL, 10, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/implicit/GeoImplicitCurve$GridTypeEnum;>;" };
  return &_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum;
}

@end

void OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *new_OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum *self = [OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum alloc];
  OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelImplicitGeoImplicitCurve_GridTypeEnumEnum)
