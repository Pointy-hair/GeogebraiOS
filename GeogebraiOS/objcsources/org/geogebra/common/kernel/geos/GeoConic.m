//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/geos/GeoConic.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoVec2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "org/geogebra/common/kernel/prover/NoSymbolicParametersException.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/GeoClass.h"
#include "org/geogebra/common/util/MyMath.h"

@interface OrgGeogebraCommonKernelGeosGeoConic () {
 @public
  OrgGeogebraCommonKernelMatrixCoordSys *coordSys_;
}

- (void)mirrorWithDouble:(jdouble)phi;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosGeoConic, coordSys_, OrgGeogebraCommonKernelMatrixCoordSys *)

__attribute__((unused)) static void OrgGeogebraCommonKernelGeosGeoConic_mirrorWithDouble_(OrgGeogebraCommonKernelGeosGeoConic *self, jdouble phi);

@implementation OrgGeogebraCommonKernelGeosGeoConic

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
                                            withDoubleArray:(IOSDoubleArray *)coeffs {
  OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDoubleArray_(self, c, label, coeffs);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)conic {
  OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelGeosGeoConic_(self, conic);
  return self;
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return OrgGeogebraCommonPluginGeoClassEnum_get_CONIC();
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ {
  return new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelGeosGeoConic_(self);
}

- (jdouble)getPhi {
  if (IOSDoubleArray_Get(nil_chk(matrix_), 3) == 0) {
    if (IOSDoubleArray_Get(matrix_, 0) < IOSDoubleArray_Get(matrix_, 1)) {
      return 0.0;
    }
    return 0.5 * JavaLangMath_PI;
  }
  if (IOSDoubleArray_Get(matrix_, 0) <= IOSDoubleArray_Get(matrix_, 1)) {
    return 0.25 * JavaLangMath_PI - 0.5 * JavaLangMath_atanWithDouble_((IOSDoubleArray_Get(matrix_, 0) - IOSDoubleArray_Get(matrix_, 1)) / (2 * IOSDoubleArray_Get(matrix_, 3)));
  }
  return 0.75 * JavaLangMath_PI - 0.5 * JavaLangMath_atanWithDouble_((IOSDoubleArray_Get(matrix_, 0) - IOSDoubleArray_Get(matrix_, 1)) / (2 * IOSDoubleArray_Get(matrix_, 3)));
}

- (JavaUtilArrayList *)getPointsOnConicWithInt:(jint)n {
  OrgGeogebraCommonKernelGeosGeoCurveCartesian *curve = new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(cons_);
  [self toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:curve];
  jdouble startInterval = -JavaLangMath_PI, endInterval = JavaLangMath_PI;
  if (self->type_ == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_HYPERBOLA) {
    startInterval = -JavaLangMath_PI / 2;
    endInterval = JavaLangMath_PI / 2;
  }
  if (self->type_ == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PARABOLA) {
    startInterval = -1;
    endInterval = 1;
  }
  return [curve getPointsOnCurveWithInt:n withDouble:startInterval withDouble:endInterval];
}

- (void)mirrorWithOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)mirror {
  if ([((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(mirror)) getType] == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_SINGLE_POINT) {
    [self setUndefined];
    return;
  }
  if ([mirror isCircle] && (type_ == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_SINGLE_POINT || type_ == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_CIRCLE)) {
    jdouble r1 = IOSDoubleArray_Get(nil_chk([mirror getHalfAxes]), 0);
    OrgGeogebraCommonKernelGeosGeoVec2D *midpoint1 = [mirror getTranslationVector];
    jdouble x1 = [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(midpoint1)) getX];
    jdouble y1 = [midpoint1 getY];
    jdouble r2 = IOSDoubleArray_Get(nil_chk([self getHalfAxes]), 0);
    OrgGeogebraCommonKernelGeosGeoVec2D *midpoint2 = [self getTranslationVector];
    jdouble x2 = [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(midpoint2)) getX];
    jdouble y2 = [midpoint2 getY];
    jdouble dist = JavaLangMath_sqrtWithDouble_((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(r2) && OrgGeogebraCommonKernelKernel_isZeroWithDouble_(dist)) {
      [self setUndefined];
      [self update];
      return;
    }
    if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(dist, r2)) {
      jdouble dx = x2 - x1;
      jdouble dy = y2 - y1;
      jdouble k = r1 * r1 / 2 / r2 / r2;
      jdouble x3 = x1 + k * dx;
      jdouble y3 = y1 + k * dy;
      *IOSDoubleArray_GetRef(nil_chk(matrix_), 4) = dx * 0.5;
      *IOSDoubleArray_GetRef(matrix_, 5) = dy * 0.5;
      *IOSDoubleArray_GetRef(matrix_, 2) = -dx * x3 - dy * y3;
      *IOSDoubleArray_GetRef(matrix_, 0) = 0;
      *IOSDoubleArray_GetRef(matrix_, 1) = 0;
      *IOSDoubleArray_GetRef(matrix_, 3) = 0;
      OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("DCDCD", IOSDoubleArray_Get(matrix_, 4), ',', IOSDoubleArray_Get(matrix_, 5), ',', IOSDoubleArray_Get(matrix_, 2)));
      [self classifyConicWithBoolean:YES];
      type_ = OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_LINE;
      return;
    }
    jdouble x = r1 * r1 / (dist - r2);
    jdouble y = r1 * r1 / (dist + r2);
    jdouble r3 = JavaLangMath_absWithDouble_(y - x) / 2.0;
    jdouble centerX, centerY;
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(dist)) {
      centerX = x1;
      centerY = y1;
    }
    else {
      centerX = x1 + (x2 - x1) * (JavaLangMath_minWithDouble_withDouble_(x, y) + r3) / dist;
      centerY = y1 + (y2 - y1) * (JavaLangMath_minWithDouble_withDouble_(x, y) + r3) / dist;
    }
    OrgGeogebraCommonKernelGeosGeoPoint *tmp = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_(cons_, nil, centerX, centerY, 1.0);
    [self setCircleMatrixWithOrgGeogebraCommonKernelGeosGeoPoint:tmp withDouble:r3];
    [tmp removeOrSetUndefinedIfHasFixedDescendent];
  }
  else if ([mirror isCircle] && ([self getType] == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_LINE || [self getType] == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PARALLEL_LINES)) {
    if ([mirror getType] == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_CIRCLE) {
      jdouble r = IOSDoubleArray_Get(nil_chk([mirror getHalfAxes]), 0);
      OrgGeogebraCommonKernelGeosGeoVec2D *midPoint = [mirror getTranslationVector];
      jdouble mx = [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(midPoint)) getX];
      jdouble my = [midPoint getY];
      jdouble lx = ((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk((IOSObjectArray_Get(nil_chk([self getLines]), 0))))->x_;
      jdouble ly = ((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk((IOSObjectArray_Get(nil_chk([self getLines]), 0))))->y_;
      jdouble lz = ((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk((IOSObjectArray_Get(nil_chk([self getLines]), 0))))->z_;
      jdouble perpY, perpX;
      if (lx == 0) {
        perpX = mx;
        perpY = -lz / ly;
      }
      else {
        perpY = -(lx * ly * mx - lx * lx * my + ly * lz) / (lx * lx + ly * ly);
        perpX = (-lz - ly * perpY) / lx;
      }
      jdouble dist2 = ((perpX - mx) * (perpX - mx) + (perpY - my) * (perpY - my));
      if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_(dist2)) {
        jdouble sf = r * r / dist2;
        OrgGeogebraCommonKernelGeosGeoPoint *m = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_);
        [m setCoordsWithDouble:mx + sf * (perpX - mx) / 2 withDouble:my + sf * (perpY - my) / 2 withDouble:1.0];
        [self setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:m withDouble:sf / 2 * JavaLangMath_sqrtWithDouble_(((perpX - mx) * (perpX - mx) + (perpY - my) * (perpY - my)))];
      }
      else type_ = OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_LINE;
    }
    else {
      [self setUndefined];
    }
  }
  [self setAffineTransform];
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q {
  jdouble qx = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Q)) getX];
  jdouble qy = [Q getY];
  *IOSDoubleArray_GetRef(nil_chk(matrix_), 2) = 4.0 * (qy * qy * IOSDoubleArray_Get(matrix_, 1) + qx * (qx * IOSDoubleArray_Get(matrix_, 0) + 2.0 * qy * IOSDoubleArray_Get(matrix_, 3) + IOSDoubleArray_Get(matrix_, 4)) + qy * IOSDoubleArray_Get(matrix_, 5)) + IOSDoubleArray_Get(matrix_, 2);
  *IOSDoubleArray_GetRef(matrix_, 4) = -2.0 * (qx * IOSDoubleArray_Get(matrix_, 0) + qy * IOSDoubleArray_Get(matrix_, 3)) - IOSDoubleArray_Get(matrix_, 4);
  *IOSDoubleArray_GetRef(matrix_, 5) = -2.0 * (qx * IOSDoubleArray_Get(matrix_, 3) + qy * IOSDoubleArray_Get(matrix_, 1)) - IOSDoubleArray_Get(matrix_, 5);
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(nil_chk(eigenvec_), 0))) multWithDouble:-1.0];
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(eigenvec_, 1))) multWithDouble:-1.0];
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(b_)) mirrorWithOrgGeogebraCommonKernelMatrixCoords:Q];
  [self setMidpointWithDoubleArray:[IOSDoubleArray newArrayWithDoubles:(jdouble[]){ [b_ getX], [b_ getY] } count:2]];
  [self setAffineTransform];
  [self updateDegenerates];
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g1 {
  OrgGeogebraCommonKernelGeosGeoLine *g = (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(g1, [OrgGeogebraCommonKernelGeosGeoLine class]);
  jdouble qx, qy;
  if (JavaLangMath_absWithDouble_([((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(g)) getX]) > JavaLangMath_absWithDouble_([g getY])) {
    qx = -[g getZ] / [g getX];
    qy = 0.0;
  }
  else {
    qx = 0.0;
    qy = -[g getZ] / [g getY];
  }
  [self doTranslateWithDouble:-qx withDouble:-qy];
  OrgGeogebraCommonKernelGeosGeoConic_mirrorWithDouble_(self, 2.0 * JavaLangMath_atan2WithDouble_withDouble_(-[g getX], [g getY]));
  [self doTranslateWithDouble:qx withDouble:qy];
  [self setAffineTransform];
  [self updateDegenerates];
}

- (void)mirrorWithDouble:(jdouble)phi {
  OrgGeogebraCommonKernelGeosGeoConic_mirrorWithDouble_(self, phi);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getEigenvec3DWithInt:(jint)i {
  OrgGeogebraCommonKernelMatrixCoords *ret = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  [ret setWithOrgGeogebraCommonKernelMatrixCoords:[self getEigenvecWithInt:i]];
  return ret;
}

- (jboolean)hasDrawable3D {
  return YES;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirection3DWithInt:(jint)i {
  return new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(nil_chk(lines_), i)))->y_, -((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(IOSObjectArray_Get(lines_, i)))->x_, 0, 0);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getOrigin3DWithInt:(jint)i {
  return new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(startPoints_), i)))->x_, ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(startPoints_, i)))->y_, 0, 1);
}

- (jboolean)isCasEvaluableObject {
  return YES;
}

- (jchar)getLabelDelimiter {
  return ':';
}

- (OrgGeogebraCommonKernelMatrixCoordSys *)getCoordSys {
  if (coordSys_ == nil) {
    coordSys_ = OrgGeogebraCommonKernelMatrixCoordSys_get_Identity3D_();
  }
  return coordSys_;
}

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22 {
  IOSObjectArray *adj = OrgGeogebraCommonUtilMyMath_adjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(a00, a01, a02, a10, a11, a12, a20, a21, a22);
  jdouble p00 = IOSDoubleArray_Get(nil_chk(matrix_), 0) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(adj), 0)), 0) + IOSDoubleArray_Get(matrix_, 3) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 1) + IOSDoubleArray_Get(matrix_, 4) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 2);
  jdouble p01 = IOSDoubleArray_Get(matrix_, 0) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 0) + IOSDoubleArray_Get(matrix_, 3) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 1) + IOSDoubleArray_Get(matrix_, 4) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 2);
  jdouble p02 = IOSDoubleArray_Get(matrix_, 0) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 0) + IOSDoubleArray_Get(matrix_, 3) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 1) + IOSDoubleArray_Get(matrix_, 4) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 2);
  jdouble p10 = IOSDoubleArray_Get(matrix_, 3) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 0) + IOSDoubleArray_Get(matrix_, 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 1) + IOSDoubleArray_Get(matrix_, 5) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 2);
  jdouble p11 = IOSDoubleArray_Get(matrix_, 3) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 0) + IOSDoubleArray_Get(matrix_, 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 1) + IOSDoubleArray_Get(matrix_, 5) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 2);
  jdouble p12 = IOSDoubleArray_Get(matrix_, 3) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 0) + IOSDoubleArray_Get(matrix_, 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 1) + IOSDoubleArray_Get(matrix_, 5) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 2);
  jdouble p20 = IOSDoubleArray_Get(matrix_, 4) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 0) + IOSDoubleArray_Get(matrix_, 5) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 1) + IOSDoubleArray_Get(matrix_, 2) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 2);
  jdouble p21 = IOSDoubleArray_Get(matrix_, 4) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 0) + IOSDoubleArray_Get(matrix_, 5) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 1) + IOSDoubleArray_Get(matrix_, 2) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 2);
  jdouble p22 = IOSDoubleArray_Get(matrix_, 4) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 0) + IOSDoubleArray_Get(matrix_, 5) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 1) + IOSDoubleArray_Get(matrix_, 2) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 2);
  *IOSDoubleArray_GetRef(matrix_, 0) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 0) * p00 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 1) * p10 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 2) * p20;
  *IOSDoubleArray_GetRef(matrix_, 3) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 0) * p01 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 1) * p11 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 2) * p21;
  *IOSDoubleArray_GetRef(matrix_, 4) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 0) * p02 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 1) * p12 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 0)), 2) * p22;
  *IOSDoubleArray_GetRef(matrix_, 1) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 0) * p01 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 1) * p11 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 2) * p21;
  *IOSDoubleArray_GetRef(matrix_, 5) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 0) * p02 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 1) * p12 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 1)), 2) * p22;
  *IOSDoubleArray_GetRef(matrix_, 2) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 0) * p02 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 1) * p12 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(adj, 2)), 2) * p22;
  [self classifyConicWithBoolean:NO];
}

- (jboolean)isFillable {
  return type_ != OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_LINE;
}

- (jboolean)isInverseFillable {
  return [self isFillable];
}

- (void)setCoeffsWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2:(IOSObjectArray *)coeff {
  *IOSDoubleArray_GetRef(nil_chk(matrix_), 0) = OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(coeff, 2, 0);
  *IOSDoubleArray_GetRef(matrix_, 1) = OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(coeff, 0, 2);
  *IOSDoubleArray_GetRef(matrix_, 2) = OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(coeff, 0, 0);
  *IOSDoubleArray_GetRef(matrix_, 3) = OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(coeff, 1, 1) / 2;
  *IOSDoubleArray_GetRef(matrix_, 4) = OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(coeff, 1, 0) / 2;
  *IOSDoubleArray_GetRef(matrix_, 5) = OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(coeff, 0, 1) / 2;
  [self classifyConicWithBoolean:NO];
  if (((IOSObjectArray *) nil_chk(coeff))->size_ <= 2 && ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(coeff, 0)))->size_ <= 2 && OrgGeogebraCommonKernelKernel_isZeroWithDouble_(OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(coeff, 1, 1))) {
    type_ = OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_LINE;
    OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("DCDCD", IOSDoubleArray_Get(matrix_, 4), ',', IOSDoubleArray_Get(matrix_, 5), ',', IOSDoubleArray_Get(matrix_, 2)));
  }
}

+ (jdouble)evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2:(IOSObjectArray *)ev
                                                                       withInt:(jint)i
                                                                       withInt:(jint)j {
  return OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(ev, i, j);
}

- (jdouble)getP {
  return p_;
}

- (void)fromLineWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)line {
  lines_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoLine_class_()];
  (void) IOSObjectArray_Set(lines_, 0, line);
  (void) IOSObjectArray_Set(lines_, 1, line);
  type_ = OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_LINE;
}

- (IOSObjectArray *)getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (algoParent_ != nil && [OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo_class_() isInstance:algoParent_]) {
    return [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo>) check_protocol_cast(algoParent_, @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo))) getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:self];
  }
  return nil;
}

- (IOSObjectArray *)getBotanaPolynomialsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (algoParent_ != nil && [OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo_class_() isInstance:algoParent_]) {
    return [((id<OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo>) check_protocol_cast(algoParent_, @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo))) getBotanaPolynomialsWithOrgGeogebraCommonKernelGeosGeoElement:self];
  }
  @throw new_OrgGeogebraCommonKernelProverNoSymbolicParametersException_init();
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirectionInD3 {
  return OrgGeogebraCommonKernelMatrixCoords_get_VZ_();
}

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)rval
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)S {
  jdouble r = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(rval)) getDouble];
  jdouble sx = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(S)) getX];
  jdouble sy = [S getY];
  jboolean oldOrientation = [self hasPositiveEigenvectorOrientation];
  [self doTranslateWithDouble:-sx withDouble:-sy];
  [self doDilateWithDouble:r];
  [self doTranslateWithDouble:sx withDouble:sy];
  [self classifyConic];
  [self setPositiveEigenvectorOrientationWithBoolean:oldOrientation];
}

- (jboolean)hasLineOpacity {
  return YES;
}

+ (void)setSinglePointWithOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)conic
                                                   withDouble:(jdouble)x
                                                   withDouble:(jdouble)y {
  OrgGeogebraCommonKernelGeosGeoConic_setSinglePointWithOrgGeogebraCommonKernelGeosGeoConic_withDouble_withDouble_(conic, x, y);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoConic", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withDoubleArray:", "GeoConic", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoConic:", "GeoConic", NULL, 0x1, NULL, NULL },
    { "getGeoClassType", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getPhi", NULL, "D", 0x0, NULL, NULL },
    { "getPointsOnConicWithInt:", "getPointsOnConic", "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelGeosGeoConic:", "mirror", "V", 0x11, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x11, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:", "mirror", "V", 0x11, NULL, NULL },
    { "mirrorWithDouble:", "mirror", "V", 0x12, NULL, NULL },
    { "getEigenvec3DWithInt:", "getEigenvec3D", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "hasDrawable3D", NULL, "Z", 0x1, NULL, NULL },
    { "getDirection3DWithInt:", "getDirection3D", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getOrigin3DWithInt:", "getOrigin3D", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "isCasEvaluableObject", NULL, "Z", 0x11, NULL, NULL },
    { "getLabelDelimiter", NULL, "C", 0x4, NULL, NULL },
    { "getCoordSys", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordSys;", 0x1, NULL, NULL },
    { "matrixTransformWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "matrixTransform", "V", 0x1, NULL, NULL },
    { "isFillable", NULL, "Z", 0x1, NULL, NULL },
    { "isInverseFillable", NULL, "Z", 0x1, NULL, NULL },
    { "setCoeffsWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2:", "setCoeffs", "V", 0x1, NULL, NULL },
    { "evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2:withInt:withInt:", "evalCoeff", "D", 0x9, NULL, NULL },
    { "getP", NULL, "D", 0x1, NULL, NULL },
    { "fromLineWithOrgGeogebraCommonKernelGeosGeoLine:", "fromLine", "V", 0x1, NULL, NULL },
    { "getBotanaVarsWithOrgGeogebraCommonKernelGeosGeoElement:", "getBotanaVars", "[Lorg.geogebra.common.kernel.prover.polynomial.Variable;", 0x1, NULL, NULL },
    { "getBotanaPolynomialsWithOrgGeogebraCommonKernelGeosGeoElement:", "getBotanaPolynomials", "[Lorg.geogebra.common.kernel.prover.polynomial.Polynomial;", 0x1, "Lorg.geogebra.common.kernel.prover.NoSymbolicParametersException;", NULL },
    { "getDirectionInD3", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:", "dilate", "V", 0x11, NULL, NULL },
    { "hasLineOpacity", NULL, "Z", 0x1, NULL, NULL },
    { "setSinglePointWithOrgGeogebraCommonKernelGeosGeoConic:withDouble:withDouble:", "setSinglePoint", "V", 0x19, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coordSys_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordSys;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelGeosGeoConic = { 2, "GeoConic", "org.geogebra.common.kernel.geos", NULL, 0x1, 31, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelGeosGeoConic;
}

@end

void OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoConic *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonKernelKernelNDGeoConicND_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, c, 2);
}

OrgGeogebraCommonKernelGeosGeoConic *new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonKernelGeosGeoConic *self = [OrgGeogebraCommonKernelGeosGeoConic alloc];
  OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

void OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDoubleArray_(OrgGeogebraCommonKernelGeosGeoConic *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, IOSDoubleArray *coeffs) {
  (void) OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  [self setCoeffsWithDoubleArray:coeffs];
  [self setLabelWithNSString:label];
}

OrgGeogebraCommonKernelGeosGeoConic *new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDoubleArray_(OrgGeogebraCommonKernelConstruction *c, NSString *label, IOSDoubleArray *coeffs) {
  OrgGeogebraCommonKernelGeosGeoConic *self = [OrgGeogebraCommonKernelGeosGeoConic alloc];
  OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDoubleArray_(self, c, label, coeffs);
  return self;
}

void OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelGeosGeoConic *self, OrgGeogebraCommonKernelGeosGeoConic *conic) {
  (void) OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(self, ((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(conic))->cons_);
  [self setWithOrgGeogebraCommonKernelGeosGeoElement:conic];
}

OrgGeogebraCommonKernelGeosGeoConic *new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelGeosGeoConic *conic) {
  OrgGeogebraCommonKernelGeosGeoConic *self = [OrgGeogebraCommonKernelGeosGeoConic alloc];
  OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelGeosGeoConic_(self, conic);
  return self;
}

void OrgGeogebraCommonKernelGeosGeoConic_mirrorWithDouble_(OrgGeogebraCommonKernelGeosGeoConic *self, jdouble phi) {
  jdouble sum = IOSDoubleArray_Get(nil_chk(self->matrix_), 0) + IOSDoubleArray_Get(self->matrix_, 1);
  jdouble diff = IOSDoubleArray_Get(self->matrix_, 0) - IOSDoubleArray_Get(self->matrix_, 1);
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble cos2 = (cos + sin) * (cos - sin);
  jdouble sin2 = 2.0 * cos * sin;
  jdouble tmp = diff * cos2 + 2.0 * IOSDoubleArray_Get(self->matrix_, 3) * sin2;
  jdouble A0 = (sum + tmp) / 2.0;
  jdouble A1 = (sum - tmp) / 2.0;
  jdouble A3 = -IOSDoubleArray_Get(self->matrix_, 3) * cos2 + diff * cos * sin;
  jdouble A4 = IOSDoubleArray_Get(self->matrix_, 4) * cos + IOSDoubleArray_Get(self->matrix_, 5) * sin;
  *IOSDoubleArray_GetRef(self->matrix_, 5) = -IOSDoubleArray_Get(self->matrix_, 5) * cos + IOSDoubleArray_Get(self->matrix_, 4) * sin;
  *IOSDoubleArray_GetRef(self->matrix_, 0) = A0;
  *IOSDoubleArray_GetRef(self->matrix_, 1) = A1;
  *IOSDoubleArray_GetRef(self->matrix_, 3) = A3;
  *IOSDoubleArray_GetRef(self->matrix_, 4) = A4;
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(nil_chk(self->eigenvec_), 0))) mirrorWithDouble:phi];
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 1))) mirrorWithDouble:phi];
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->b_)) mirrorWithDouble:phi];
  [self setMidpointWithDoubleArray:[IOSDoubleArray newArrayWithDoubles:(jdouble[]){ [self->b_ getX], [self->b_ getY] } count:2]];
}

jdouble OrgGeogebraCommonKernelGeosGeoConic_evalCoeffWithOrgGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(IOSObjectArray *ev, jint i, jint j) {
  OrgGeogebraCommonKernelGeosGeoConic_initialize();
  if (((IOSObjectArray *) nil_chk(ev))->size_ > i && ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(ev, i)))->size_ > j && IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(ev, i)), j) != nil) {
    return [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(ev, i)), j))) evaluateDouble];
  }
  return 0;
}

void OrgGeogebraCommonKernelGeosGeoConic_setSinglePointWithOrgGeogebraCommonKernelGeosGeoConic_withDouble_withDouble_(OrgGeogebraCommonKernelGeosGeoConic *conic, jdouble x, jdouble y) {
  OrgGeogebraCommonKernelGeosGeoConic_initialize();
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(conic)) setMidpointWithDouble:x withDouble:y];
  [conic singlePoint];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelGeosGeoConic)
