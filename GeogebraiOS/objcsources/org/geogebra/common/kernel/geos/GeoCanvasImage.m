//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/geos/GeoCanvasImage.java
//


#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/awt/GBasicStroke.h"
#include "org/geogebra/common/awt/GBufferedImage.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GGraphics2D.h"
#include "org/geogebra/common/awt/MyImage.h"
#include "org/geogebra/common/euclidian/EuclidianStatic.h"
#include "org/geogebra/common/factories/AwtFactory.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/geos/GeoCanvasImage.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoImage.h"
#include "org/geogebra/common/plugin/GeoClass.h"

@interface OrgGeogebraCommonKernelGeosGeoCanvasImage () {
 @public
  id<OrgGeogebraCommonAwtMyImage> bufferedImage_;
  id<OrgGeogebraCommonAwtGGraphics2D> g_;
}

- (id<OrgGeogebraCommonAwtGGraphics2D>)createImageWithOrgGeogebraCommonAwtGBasicStroke:(id<OrgGeogebraCommonAwtGBasicStroke>)objStroke
                                                        withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color
                                                        withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)bgColor1
                                                                             withFloat:(jfloat)backgroundTransparency
                                                                               withInt:(jint)xInt
                                                                               withInt:(jint)yInt;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosGeoCanvasImage, bufferedImage_, id<OrgGeogebraCommonAwtMyImage>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosGeoCanvasImage, g_, id<OrgGeogebraCommonAwtGGraphics2D>)

__attribute__((unused)) static id<OrgGeogebraCommonAwtGGraphics2D> OrgGeogebraCommonKernelGeosGeoCanvasImage_createImageWithOrgGeogebraCommonAwtGBasicStroke_withOrgGeogebraCommonAwtGColor_withOrgGeogebraCommonAwtGColor_withFloat_withInt_withInt_(OrgGeogebraCommonKernelGeosGeoCanvasImage *self, id<OrgGeogebraCommonAwtGBasicStroke> objStroke, OrgGeogebraCommonAwtGColor *color, OrgGeogebraCommonAwtGColor *bgColor1, jfloat backgroundTransparency, jint xInt, jint yInt);

@implementation OrgGeogebraCommonKernelGeosGeoCanvasImage

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label {
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, c, label);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                    withInt:(jint)width
                                                    withInt:(jint)height {
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withInt_withInt_(self, c, width, height);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoCanvasImage:(OrgGeogebraCommonKernelGeosGeoCanvasImage *)img {
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelGeosGeoCanvasImage_(self, img);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ {
  return new_OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelGeosGeoCanvasImage_(self);
}

- (jboolean)showInEuclidianView {
  return [self isDefined];
}

- (id<OrgGeogebraCommonAwtMyImage>)getFillImage {
  return bufferedImage_;
}

- (id<OrgGeogebraCommonAwtGGraphics2D>)getGraphics {
  return g_;
}

- (jint)getWidth {
  return pixelWidth_;
}

- (jint)getHeight {
  return pixelHeight_;
}

- (id<OrgGeogebraCommonAwtGGraphics2D>)createImageWithOrgGeogebraCommonAwtGBasicStroke:(id<OrgGeogebraCommonAwtGBasicStroke>)objStroke
                                                        withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color
                                                        withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)bgColor1
                                                                             withFloat:(jfloat)backgroundTransparency
                                                                               withInt:(jint)xInt
                                                                               withInt:(jint)yInt {
  return OrgGeogebraCommonKernelGeosGeoCanvasImage_createImageWithOrgGeogebraCommonAwtGBasicStroke_withOrgGeogebraCommonAwtGColor_withOrgGeogebraCommonAwtGColor_withFloat_withInt_withInt_(self, objStroke, color, bgColor1, backgroundTransparency, xInt, yInt);
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return OrgGeogebraCommonPluginGeoClassEnum_get_IMAGE();
}

- (jboolean)isGeoImage {
  return YES;
}

- (jboolean)isIndependent {
  return YES;
}

- (void)getXMLWithBoolean:(jboolean)getListenersToo
withJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoCanvasImage", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:", "GeoCanvasImage", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withInt:withInt:", "GeoCanvasImage", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoCanvasImage:", "GeoCanvasImage", NULL, 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x4, NULL, NULL },
    { "getFillImage", NULL, "Lorg.geogebra.common.awt.MyImage;", 0x1, NULL, NULL },
    { "getGraphics", NULL, "Lorg.geogebra.common.awt.GGraphics2D;", 0x1, NULL, NULL },
    { "getWidth", NULL, "I", 0x1, NULL, NULL },
    { "getHeight", NULL, "I", 0x1, NULL, NULL },
    { "createImageWithOrgGeogebraCommonAwtGBasicStroke:withOrgGeogebraCommonAwtGColor:withOrgGeogebraCommonAwtGColor:withFloat:withInt:withInt:", "createImage", "Lorg.geogebra.common.awt.GGraphics2D;", 0x2, NULL, NULL },
    { "getGeoClassType", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "isGeoImage", NULL, "Z", 0x1, NULL, NULL },
    { "isIndependent", NULL, "Z", 0x1, NULL, NULL },
    { "getXMLWithBoolean:withJavaLangStringBuilder:", "getXML", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bufferedImage_", NULL, 0x2, "Lorg.geogebra.common.awt.MyImage;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lorg.geogebra.common.awt.GGraphics2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelGeosGeoCanvasImage = { 2, "GeoCanvasImage", "org.geogebra.common.kernel.geos", NULL, 0x1, 15, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelGeosGeoCanvasImage;
}

@end

void OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoCanvasImage *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withInt_withInt_(self, c, 200, 100);
}

OrgGeogebraCommonKernelGeosGeoCanvasImage *new_OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonKernelGeosGeoCanvasImage *self = [OrgGeogebraCommonKernelGeosGeoCanvasImage alloc];
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

void OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelGeosGeoCanvasImage *self, OrgGeogebraCommonKernelConstruction *c, NSString *label) {
  (void) OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  [self setLabelWithNSString:label];
}

OrgGeogebraCommonKernelGeosGeoCanvasImage *new_OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelConstruction *c, NSString *label) {
  OrgGeogebraCommonKernelGeosGeoCanvasImage *self = [OrgGeogebraCommonKernelGeosGeoCanvasImage alloc];
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, c, label);
  return self;
}

void OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withInt_withInt_(OrgGeogebraCommonKernelGeosGeoCanvasImage *self, OrgGeogebraCommonKernelConstruction *c, jint width, jint height) {
  (void) OrgGeogebraCommonKernelGeosGeoImage_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->bufferedImage_ = nil;
  self->pixelWidth_ = width;
  self->pixelHeight_ = height;
  [self setBackgroundColorWithOrgGeogebraCommonAwtGColor:OrgGeogebraCommonAwtGColor_get_BLUE_()];
  id<OrgGeogebraCommonAwtGBasicStroke> objStroke = OrgGeogebraCommonEuclidianEuclidianStatic_getDefaultStroke();
  (void) OrgGeogebraCommonKernelGeosGeoCanvasImage_createImageWithOrgGeogebraCommonAwtGBasicStroke_withOrgGeogebraCommonAwtGColor_withOrgGeogebraCommonAwtGColor_withFloat_withInt_withInt_(self, objStroke, [self getAlgebraColor], [self getBackgroundColor], self->alphaValue_, self->pixelWidth_, self->pixelHeight_);
}

OrgGeogebraCommonKernelGeosGeoCanvasImage *new_OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withInt_withInt_(OrgGeogebraCommonKernelConstruction *c, jint width, jint height) {
  OrgGeogebraCommonKernelGeosGeoCanvasImage *self = [OrgGeogebraCommonKernelGeosGeoCanvasImage alloc];
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_withInt_withInt_(self, c, width, height);
  return self;
}

void OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelGeosGeoCanvasImage_(OrgGeogebraCommonKernelGeosGeoCanvasImage *self, OrgGeogebraCommonKernelGeosGeoCanvasImage *img) {
  (void) OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelConstruction_(self, ((OrgGeogebraCommonKernelGeosGeoCanvasImage *) nil_chk(img))->cons_);
  [self setWithOrgGeogebraCommonKernelGeosGeoElement:img];
}

OrgGeogebraCommonKernelGeosGeoCanvasImage *new_OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelGeosGeoCanvasImage_(OrgGeogebraCommonKernelGeosGeoCanvasImage *img) {
  OrgGeogebraCommonKernelGeosGeoCanvasImage *self = [OrgGeogebraCommonKernelGeosGeoCanvasImage alloc];
  OrgGeogebraCommonKernelGeosGeoCanvasImage_initWithOrgGeogebraCommonKernelGeosGeoCanvasImage_(self, img);
  return self;
}

id<OrgGeogebraCommonAwtGGraphics2D> OrgGeogebraCommonKernelGeosGeoCanvasImage_createImageWithOrgGeogebraCommonAwtGBasicStroke_withOrgGeogebraCommonAwtGColor_withOrgGeogebraCommonAwtGColor_withFloat_withInt_withInt_(OrgGeogebraCommonKernelGeosGeoCanvasImage *self, id<OrgGeogebraCommonAwtGBasicStroke> objStroke, OrgGeogebraCommonAwtGColor *color, OrgGeogebraCommonAwtGColor *bgColor1, jfloat backgroundTransparency, jint xInt, jint yInt) {
  self->bufferedImage_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newMyImageWithInt:xInt withInt:yInt withInt:OrgGeogebraCommonAwtGBufferedImage_TYPE_INT_ARGB];
  self->g_ = [((id<OrgGeogebraCommonAwtMyImage>) nil_chk(self->bufferedImage_)) createGraphics];
  [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(self->g_)) setTransparent];
  if (bgColor1 == nil) {
    [self->g_ setColorWithOrgGeogebraCommonAwtGColor:[OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newColorWithInt:255 withInt:255 withInt:255 withInt:J2ObjCFpToInt((backgroundTransparency * 255.0f))]];
  }
  else {
    [self->g_ setColorWithOrgGeogebraCommonAwtGColor:bgColor1];
  }
  [self->g_ fillRectWithInt:0 withInt:0 withInt:xInt withInt:yInt];
  [self->g_ setColorWithOrgGeogebraCommonAwtGColor:color];
  [self->g_ setStrokeWithOrgGeogebraCommonAwtGBasicStroke:objStroke];
  return self->g_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelGeosGeoCanvasImage)
