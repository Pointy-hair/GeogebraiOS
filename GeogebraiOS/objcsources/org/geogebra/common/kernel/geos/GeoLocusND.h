//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/geos/GeoLocusND.java
//

#ifndef _OrgGeogebraCommonKernelGeosGeoLocusND_H_
#define _OrgGeogebraCommonKernelGeosGeoLocusND_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/Traceable.h"

@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelMyPoint;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonPluginGeoClassEnum;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;
@protocol OrgGeogebraCommonKernelKernelNDGeoSegmentND;
@protocol OrgGeogebraCommonKernelPathMover;

#define OrgGeogebraCommonKernelGeosGeoLocusND_MAX_PATH_RUNS 10

@interface OrgGeogebraCommonKernelGeosGeoLocusND : OrgGeogebraCommonKernelGeosGeoElement < OrgGeogebraCommonKernelPath, OrgGeogebraCommonKernelGeosTraceable > {
 @public
  JavaUtilArrayList *myPointList_;
  jint closestPointIndex_;
  jdouble closestPointParameter_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c;

- (void)clearPoints;

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (id<OrgGeogebraCommonKernelPathMover>)createPathMover;

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (jint)getPointLength;

- (JavaUtilArrayList *)getPoints;

- (jboolean)getTrace;

- (jboolean)hasDrawable3D;

- (jboolean)isAuxiliaryObjectByDefault;

- (jboolean)isClosedPath;

- (jboolean)isDefined;

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isFillable;

- (jboolean)isGeoLocus;

- (jboolean)isInverseFillable;

- (jboolean)isLabelShowable;

- (jboolean)isLabelValueShowable;

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                       withDouble:(jdouble)eps;

- (jboolean)isPath;

- (jboolean)isTraceable;

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setDefinedWithBoolean:(jboolean)flag;

- (void)setPointsWithJavaUtilArrayList:(JavaUtilArrayList *)al;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (jboolean)showInAlgebraView;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (jdouble)changingPointDistanceWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment;

- (jdouble)getChangingPointParameterWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment;

- (OrgGeogebraCommonKernelMyPoint *)getClosestPoint;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (OrgGeogebraCommonKernelGeosGeoLocusND *)newGeoLocus OBJC_METHOD_FAMILY_NONE;

- (id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)newGeoSegment OBJC_METHOD_FAMILY_NONE;

- (void)setChangingPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P;

- (jboolean)showInEuclidianView;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelGeosGeoLocusND)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosGeoLocusND, myPointList_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoLocusND, MAX_PATH_RUNS, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoLocusND_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoLocusND *self, OrgGeogebraCommonKernelConstruction *c);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelGeosGeoLocusND)

#endif // _OrgGeogebraCommonKernelGeosGeoLocusND_H_
