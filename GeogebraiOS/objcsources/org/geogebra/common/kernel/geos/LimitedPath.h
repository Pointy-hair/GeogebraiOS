//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/geos/LimitedPath.java
//

#ifndef _OrgGeogebraCommonKernelGeosLimitedPath_H_
#define _OrgGeogebraCommonKernelGeosLimitedPath_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/Path.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelGeosGeoPoint;
@class OrgGeogebraCommonKernelTransform;

@protocol OrgGeogebraCommonKernelGeosLimitedPath < OrgGeogebraCommonKernelPath, NSObject, JavaObject >

- (jboolean)allowOutlyingIntersections;

- (void)setAllowOutlyingIntersectionsWithBoolean:(jboolean)flag;

- (jboolean)isIntersectionPointIncidentWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P
                                                                    withDouble:(jdouble)eps;

- (jboolean)keepsTypeOnGeometricTransform;

- (void)setKeepTypeOnGeometricTransformWithBoolean:(jboolean)flag;

- (IOSObjectArray *)createTransformedObjectWithOrgGeogebraCommonKernelTransform:(OrgGeogebraCommonKernelTransform *)t
                                                                   withNSString:(NSString *)label;

- (jboolean)isAllEndpointsLabelsSet;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelGeosLimitedPath)

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelGeosLimitedPath)

#endif // _OrgGeogebraCommonKernelGeosLimitedPath_H_
