//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/geos/GeoNumeric.java
//

#ifndef _OrgGeogebraCommonKernelGeosGeoNumeric_H_
#define _OrgGeogebraCommonKernelGeosGeoNumeric_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/geos/AbsoluteScreenLocateable.h"
#include "org/geogebra/common/kernel/geos/Animatable.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionable.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/HasExtendedAV.h"

@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class OrgGeogebraCommonKernelArithmeticFunctionVariable;
@class OrgGeogebraCommonKernelArithmeticMyDouble;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoFunction;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonPluginGeoClassEnum;
@protocol JavaUtilComparator;
@protocol JavaUtilList;
@protocol OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;
@protocol OrgGeogebraCommonKernelArithmeticNumberValue;

#define OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_THICKNESS 2
#define OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_THICKNESS 10

@interface OrgGeogebraCommonKernelGeosGeoNumeric : OrgGeogebraCommonKernelGeosGeoElement < OrgGeogebraCommonKernelGeosGeoNumberValue, OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable, OrgGeogebraCommonKernelGeosGeoFunctionable, OrgGeogebraCommonKernelGeosAnimatable, OrgGeogebraCommonKernelGeosHasExtendedAV > {
 @public
  jdouble value_;
  jboolean isDrawable__;
  jboolean hasAbsoluteScreenLocation_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                withBoolean:(jboolean)setDefaults;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                 withDouble:(jdouble)x;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
                                                 withDouble:(jdouble)x;

- (void)addEVSizeListenerWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim:(id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim>)ev;

- (void)addToSpreadsheetTraceListWithJavaUtilArrayList:(JavaUtilArrayList *)spreadsheetTraceList;

- (jboolean)canHaveClickScript;

- (OrgGeogebraCommonKernelGeosGeoNumeric *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)doAnimationStepWithDouble:(jdouble)frameRate;

- (void)doRemove;

- (jint)getAbsoluteScreenLocX;

- (jint)getAbsoluteScreenLocY;

- (jdouble)getAnimationSpeed;

- (jdouble)getAnimationStep;

+ (id<JavaUtilComparator>)getComparator;

- (jdouble)getDouble;

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (OrgGeogebraCommonKernelGeosGeoFunction *)getGeoFunction;

- (jdouble)getIntervalMax;

- (OrgGeogebraCommonKernelGeosGeoElement *)getIntervalMaxObject;

- (jdouble)getIntervalMin;

- (OrgGeogebraCommonKernelGeosGeoElement *)getIntervalMinObject;

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (NSString *)getLaTeXdescription;

- (jint)getMinimumLineThickness;

- (id<JavaUtilList>)getMinMaxListeners;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (jdouble)getRealWorldLocX;

- (jdouble)getRealWorldLocY;

- (jint)getRelatedModeID;

- (jdouble)getSliderWidth;

- (jdouble)getSliderX;

- (jdouble)getSliderY;

- (jint)getSlopeTriangleSize;

- (jdouble)getValue;

- (jboolean)hasLineOpacity;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)integralWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv
                                                                                    withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel0;

- (jboolean)isAbsoluteScreenLocActive;

- (jboolean)isAbsoluteScreenLocateable;

- (jboolean)isAnimatable;

- (jboolean)isCasEvaluableObject;

- (jboolean)isDefined;

- (jboolean)isDrawable;

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isFillable;

- (jboolean)isFinite;

- (jboolean)isFixable;

- (jboolean)isGeoFunctionable;

- (jboolean)isGeoNumeric;

- (jboolean)isInfinite;

- (jboolean)isIntervalMaxActive;

- (jboolean)isIntervalMinActive;

- (jboolean)isLaTeXDrawableGeo;

- (jboolean)isNumberValue;

- (jboolean)isPinnable;

- (jboolean)isRandom;

- (jboolean)isShowingExtendedAV;

- (jboolean)isSlider;

- (jboolean)isSliderFixed;

- (jboolean)isSliderHorizontal;

- (void)moveDependenciesWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)oldGeo;

- (void)registerMinMaxListenerWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)removeEVSizeListenerWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim:(id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim>)ev;

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setAbsoluteScreenLocWithInt:(jint)x
                            withInt:(jint)y;

- (void)setAbsoluteScreenLocWithInt:(jint)x
                            withInt:(jint)y
                        withBoolean:(jboolean)force;

- (void)setAbsoluteScreenLocActiveWithBoolean:(jboolean)flag;

- (void)setAllVisualPropertiesExceptEuclidianVisibleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                                  withBoolean:(jboolean)keepAdvanced;

- (void)setAnimatingWithBoolean:(jboolean)flag;

- (void)setDrawableWithBoolean:(jboolean)flag;

- (void)setDrawableWithBoolean:(jboolean)flag
                   withBoolean:(jboolean)visible;

- (void)setEuclidianVisibleWithBoolean:(jboolean)visible;

- (void)setIntervalMaxWithDouble:(jdouble)value;

- (void)setIntervalMaxWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)max;

- (void)setIntervalMinWithDouble:(jdouble)value;

- (void)setIntervalMinWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)min;

- (void)setRandomWithBoolean:(jboolean)random;

- (void)setRealWorldLocWithDouble:(jdouble)x
                       withDouble:(jdouble)y;

- (void)setShowExtendedAVWithBoolean:(jboolean)showExtendedAV;

- (void)setSliderFixedWithBoolean:(jboolean)isSliderFixed;

+ (OrgGeogebraCommonKernelGeosGeoNumeric *)setSliderFromDefaultWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)num
                                                                                             withBoolean:(jboolean)isAngle;

- (void)setSliderHorizontalWithBoolean:(jboolean)sliderHorizontal;

- (void)setSliderLocationWithDouble:(jdouble)x
                         withDouble:(jdouble)y
                        withBoolean:(jboolean)force;

- (void)setSliderWidthWithDouble:(jdouble)width;

- (void)setSlopeTriangleSizeWithInt:(jint)i;

- (void)setUndefined;

- (void)setValueWithDouble:(jdouble)x;

- (void)setValueWithDouble:(jdouble)x
               withBoolean:(jboolean)changeAnimationValue;

- (void)setVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setZero;

- (jboolean)showInAlgebraView;

- (jboolean)showInEuclidianView;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringMinimal;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringMinimal;

- (void)unregisterMinMaxListenerWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)update;

- (void)updateRandom;

- (void)updateRandomGeo;

- (void)updateRandomNoCascade;

#pragma mark Protected

- (void)getXMLsliderTagWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)isSliderable;

- (void)setLabelModeDefault;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelGeosGeoNumeric)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_THICKNESS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_THICKNESS, jint)

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_WIDTH_PIXEL_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_, jint)

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_WIDTH_PIXEL_ANGLE_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_ANGLE_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_ANGLE_, jint)

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_MIN_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MIN_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MIN_, jdouble)

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_MAX_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MAX_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MAX_, jdouble)

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_INCREMENT_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_INCREMENT_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_INCREMENT_, jdouble)

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_SPEED_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_SPEED_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_SPEED_, jdouble)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoNumeric *self, OrgGeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoNumeric *new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(OrgGeogebraCommonKernelGeosGeoNumeric *self, OrgGeogebraCommonKernelConstruction *c, jboolean setDefaults);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoNumeric *new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(OrgGeogebraCommonKernelConstruction *c, jboolean setDefaults) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_(OrgGeogebraCommonKernelGeosGeoNumeric *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, jdouble x);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoNumeric *new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_(OrgGeogebraCommonKernelConstruction *c, NSString *label, jdouble x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(OrgGeogebraCommonKernelGeosGeoNumeric *self, OrgGeogebraCommonKernelConstruction *c, jdouble x);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoNumeric *new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(OrgGeogebraCommonKernelConstruction *c, jdouble x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<JavaUtilComparator> OrgGeogebraCommonKernelGeosGeoNumeric_getComparator();

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoNumeric *OrgGeogebraCommonKernelGeosGeoNumeric_setSliderFromDefaultWithOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(OrgGeogebraCommonKernelGeosGeoNumeric *num, jboolean isAngle);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelGeosGeoNumeric)

#endif // _OrgGeogebraCommonKernelGeosGeoNumeric_H_
