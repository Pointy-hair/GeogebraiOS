//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/geos/GeoDummyVariable.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/geos/GeoCasCell.h"
#include "org/geogebra/common/kernel/geos/GeoDummyVariable.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"

@interface OrgGeogebraCommonKernelGeosGeoDummyVariable () {
 @public
  NSString *varName_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosGeoDummyVariable, varName_, NSString *)

@implementation OrgGeogebraCommonKernelGeosGeoDummyVariable

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)varName {
  OrgGeogebraCommonKernelGeosGeoDummyVariable_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, c, varName);
  return self;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonKernelStringTemplate *) nil_chk(tpl)) printVariableNameWithNSString:varName_];
}

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [self toStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
}

- (NSString *)getVarName {
  return varName_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getElementWithSameName {
  OrgGeogebraCommonKernelGeosGeoElement *ge = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) lookupCasCellLabelWithNSString:varName_];
  if (ge == nil) ge = [kernel_ lookupLabelWithNSString:varName_];
  return ge;
}

- (jboolean)hasCoords {
  OrgGeogebraCommonKernelGeosGeoElement *ge = [self getElementWithSameName];
  if (ge != nil && !([ge isKindOfClass:[OrgGeogebraCommonKernelGeosGeoDummyVariable class]])) return [ge hasCoords];
  return NO;
}

- (jboolean)evaluatesToNumberWithBoolean:(jboolean)def {
  return def;
}

- (void)dealloc {
  RELEASE_(varName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:", "GeoDummyVariable", NULL, 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getVarName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getElementWithSameName", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "hasCoords", NULL, "Z", 0x1, NULL, NULL },
    { "evaluatesToNumberWithBoolean:", "evaluatesToNumber", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "varName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelGeosGeoDummyVariable = { 2, "GeoDummyVariable", "org.geogebra.common.kernel.geos", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelGeosGeoDummyVariable;
}

@end

void OrgGeogebraCommonKernelGeosGeoDummyVariable_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelGeosGeoDummyVariable *self, OrgGeogebraCommonKernelConstruction *c, NSString *varName) {
  OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  OrgGeogebraCommonKernelGeosGeoDummyVariable_set_varName_(self, varName);
}

OrgGeogebraCommonKernelGeosGeoDummyVariable *new_OrgGeogebraCommonKernelGeosGeoDummyVariable_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelConstruction *c, NSString *varName) {
  OrgGeogebraCommonKernelGeosGeoDummyVariable *self = [OrgGeogebraCommonKernelGeosGeoDummyVariable alloc];
  OrgGeogebraCommonKernelGeosGeoDummyVariable_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, c, varName);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelGeosGeoDummyVariable)
