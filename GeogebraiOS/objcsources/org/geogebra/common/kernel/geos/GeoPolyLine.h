//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/geos/GeoPolyLine.java
//

#ifndef _OrgGeogebraCommonKernelGeosGeoPolyLine_H_
#define _OrgGeogebraCommonKernelGeosGeoPolyLine_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/MatrixTransformable.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/geos/Dilateable.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoPoly.h"
#include "org/geogebra/common/kernel/geos/Mirrorable.h"
#include "org/geogebra/common/kernel/geos/PointRotateable.h"
#include "org/geogebra/common/kernel/geos/Traceable.h"
#include "org/geogebra/common/kernel/geos/Transformable.h"
#include "org/geogebra/common/kernel/geos/Translateable.h"

@class IOSObjectArray;
@class JavaLangStringBuilder;
@class OrgGeogebraCommonKernelArithmeticMyDouble;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoCurveCartesian;
@class OrgGeogebraCommonKernelGeosGeoPoint;
@class OrgGeogebraCommonKernelMatrixCoords;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonPluginGeoClassEnum;
@protocol OrgGeogebraCommonKernelArithmeticNumberValue;
@protocol OrgGeogebraCommonKernelKernelNDGeoLineND;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;
@protocol OrgGeogebraCommonKernelPathMover;

#define OrgGeogebraCommonKernelGeosGeoPolyLine_POLYLINE_MAX_POINTS 500

@interface OrgGeogebraCommonKernelGeosGeoPolyLine : OrgGeogebraCommonKernelGeosGeoElement < OrgGeogebraCommonKernelGeosGeoNumberValue, OrgGeogebraCommonKernelPath, OrgGeogebraCommonKernelGeosTraceable, OrgGeogebraCommonKernelGeosTransformable, OrgGeogebraCommonKernelGeosMirrorable, OrgGeogebraCommonKernelMatrixTransformable, OrgGeogebraCommonKernelGeosPointRotateable, OrgGeogebraCommonKernelGeosTranslateable, OrgGeogebraCommonKernelGeosDilateable, OrgGeogebraCommonKernelGeosGeoPoly > {
 @public
  IOSObjectArray *points_;
  jdouble length_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
         withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
         withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points;

- (void)calcLength;

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (OrgGeogebraCommonKernelGeosGeoElement *)copyInternalWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1 OBJC_METHOD_FAMILY_NONE;

- (id<OrgGeogebraCommonKernelPathMover>)createPathMover;

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)S;

- (id<OrgGeogebraCommonKernelPath>)getBoundary;

- (jdouble)getDouble;

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (jdouble)getLength;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (jint)getNumPoints;

- (OrgGeogebraCommonKernelGeosGeoPoint *)getPointWithInt:(jint)i;

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPointNDWithInt:(jint)i;

- (IOSObjectArray *)getPoints;

- (IOSObjectArray *)getPointsND;

- (jboolean)getTrace;

- (jboolean)hasLineOpacity;

- (jboolean)isAllVertexLabelsSet;

- (jboolean)isClosedPath;

- (jboolean)isDefined;

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isFillable;

- (jboolean)isGeoPolygon;

- (jboolean)isGeoPolyLine;

- (jboolean)isNumberValue;

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps;

- (jboolean)isPath;

- (jboolean)isTraceable;

- (jboolean)isVertexCountFixed;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22;

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g;

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S;

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setDefined;

- (void)setPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (jboolean)showInAlgebraView;

- (void)toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)curve;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v;

#pragma mark Protected

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)showInEuclidianView;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelGeosGeoPolyLine)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosGeoPolyLine, points_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelGeosGeoPolyLine, POLYLINE_MAX_POINTS, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(OrgGeogebraCommonKernelGeosGeoPolyLine *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *points);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoPolyLine *new_OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *points) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoPolyLine *self, OrgGeogebraCommonKernelConstruction *cons);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoPolyLine *new_OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *cons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelGeosGeoPolyLine *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoPolyLine *new_OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelConstruction *cons, NSString *label) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(OrgGeogebraCommonKernelGeosGeoPolyLine *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *points);

FOUNDATION_EXPORT OrgGeogebraCommonKernelGeosGeoPolyLine *new_OrgGeogebraCommonKernelGeosGeoPolyLine_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *points) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelGeosGeoPolyLine)

#endif // _OrgGeogebraCommonKernelGeosGeoPolyLine_H_
