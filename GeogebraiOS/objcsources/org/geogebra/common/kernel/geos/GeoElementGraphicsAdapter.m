//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/geos/GeoElementGraphicsAdapter.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/awt/MyImage.h"
#include "org/geogebra/common/kernel/geos/GeoElementGraphicsAdapter.h"

@implementation OrgGeogebraCommonKernelGeosGeoElementGraphicsAdapter

- (id<OrgGeogebraCommonAwtMyImage>)getImageOnly {
  return image_;
}

- (void)setImageOnlyWithOrgGeogebraCommonAwtMyImage:(id<OrgGeogebraCommonAwtMyImage>)ba {
  image_ = ba;
}

- (void)setImageFileNameOnlyWithNSString:(NSString *)fn {
  imageFileName_ = fn;
}

- (NSString *)getImageFileName {
  return imageFileName_;
}

- (id<OrgGeogebraCommonAwtMyImage>)getFillImage {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setImageFileNameWithNSString:(NSString *)fileName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setFillImageWithNSString:(NSString *)filename {
  [self setImageFileNameOnlyWithNSString:filename];
  image_ = nil;
}

- (void)convertToSaveableFormat {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (instancetype)init {
  OrgGeogebraCommonKernelGeosGeoElementGraphicsAdapter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getImageOnly", NULL, "Lorg.geogebra.common.awt.MyImage;", 0x1, NULL, NULL },
    { "setImageOnlyWithOrgGeogebraCommonAwtMyImage:", "setImageOnly", "V", 0x1, NULL, NULL },
    { "setImageFileNameOnlyWithNSString:", "setImageFileNameOnly", "V", 0x1, NULL, NULL },
    { "getImageFileName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFillImage", NULL, "Lorg.geogebra.common.awt.MyImage;", 0x401, NULL, NULL },
    { "setImageFileNameWithNSString:", "setImageFileName", "V", 0x401, NULL, NULL },
    { "setFillImageWithNSString:", "setFillImage", "V", 0x1, NULL, NULL },
    { "convertToSaveableFormat", NULL, "V", 0x401, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "imageFileName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL,  },
    { "image_", NULL, 0x4, "Lorg.geogebra.common.awt.MyImage;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelGeosGeoElementGraphicsAdapter = { 2, "GeoElementGraphicsAdapter", "org.geogebra.common.kernel.geos", NULL, 0x401, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelGeosGeoElementGraphicsAdapter;
}

@end

void OrgGeogebraCommonKernelGeosGeoElementGraphicsAdapter_init(OrgGeogebraCommonKernelGeosGeoElementGraphicsAdapter *self) {
  (void) NSObject_init(self);
  self->imageFileName_ = @"";
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelGeosGeoElementGraphicsAdapter)
