//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/geos/ChangeableCoordParent.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/geos/ChangeableCoordParent.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/plugin/EuclidianStyleConstants.h"

@interface OrgGeogebraCommonKernelGeosChangeableCoordParent () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *changeableCoordNumber_;
  OrgGeogebraCommonKernelGeosGeoElement *changeableCoordDirector_;
  jdouble startValue_;
  OrgGeogebraCommonKernelMatrixCoords *direction_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosChangeableCoordParent, changeableCoordNumber_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosChangeableCoordParent, changeableCoordDirector_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelGeosChangeableCoordParent, direction_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoNumeric *OrgGeogebraCommonKernelGeosChangeableCoordParent_getNumber(OrgGeogebraCommonKernelGeosChangeableCoordParent *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelGeosChangeableCoordParent_getValue(OrgGeogebraCommonKernelGeosChangeableCoordParent *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelGeosChangeableCoordParent_getStartValue(OrgGeogebraCommonKernelGeosChangeableCoordParent *self);

@implementation OrgGeogebraCommonKernelGeosChangeableCoordParent

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)child
                    withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)number
                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)director {
  OrgGeogebraCommonKernelGeosChangeableCoordParent_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(self, child, number, director);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getNumber {
  return OrgGeogebraCommonKernelGeosChangeableCoordParent_getNumber(self);
}

- (jdouble)getValue {
  return OrgGeogebraCommonKernelGeosChangeableCoordParent_getValue(self);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getDirector {
  return changeableCoordDirector_;
}

- (void)record {
  startValue_ = OrgGeogebraCommonKernelGeosChangeableCoordParent_getValue(self);
  OrgGeogebraCommonKernelGeosChangeableCoordParent_set_direction_(self, [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(changeableCoordDirector_)) getMainDirection]);
}

- (jdouble)getStartValue {
  return OrgGeogebraCommonKernelGeosChangeableCoordParent_getStartValue(self);
}

- (jboolean)moveWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)rwTransVec
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)endPosition
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)viewDirection
                                  withJavaUtilArrayList:(JavaUtilArrayList *)updateGeos
                                  withJavaUtilArrayList:(JavaUtilArrayList *)tempMoveObjectList
            withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view {
  OrgGeogebraCommonKernelGeosGeoNumeric *var = OrgGeogebraCommonKernelGeosChangeableCoordParent_getNumber(self);
  if (var == nil) return NO;
  if (endPosition == nil) {
    [var setValueWithDouble:[((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(var)) getValue] + [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(rwTransVec)) getX] + [rwTransVec getY] + [rwTransVec getZ]];
    OrgGeogebraCommonKernelGeosGeoElement_addChangeableCoordParentNumberToUpdateListWithOrgGeogebraCommonKernelGeosGeoElement_withJavaUtilArrayList_withJavaUtilArrayList_(var, updateGeos, tempMoveObjectList);
    return YES;
  }
  OrgGeogebraCommonKernelMatrixCoords *direction2 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(direction_)) subWithOrgGeogebraCommonKernelMatrixCoords:[viewDirection mulWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(viewDirection)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction_]]];
  jdouble ld = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(direction2)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction2];
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(ld)) return NO;
  jdouble val = OrgGeogebraCommonKernelGeosChangeableCoordParent_getStartValue(self) + [direction2 dotproductWithOrgGeogebraCommonKernelMatrixCoords:rwTransVec] / ld;
  {
    jdouble g;
    jdouble valRound;
    switch ([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view)) getPointCapturingMode]) {
      case OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_CAPTURING_STICKY_POINTS:
      break;
      case OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_CAPTURING_AUTOMATIC:
      if (![view isGridOrAxesShown]) {
        break;
      }
      case OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_CAPTURING_ON:
      case OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_CAPTURING_ON_GRID:
      g = [view getGridDistancesWithInt:0];
      valRound = OrgGeogebraCommonKernelKernel_roundToScaleWithDouble_withDouble_(val, g);
      if ([view getPointCapturingMode] == OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_CAPTURING_ON_GRID || (JavaLangMath_absWithDouble_(valRound - val) < g * [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([view getEuclidianController])) getPointCapturingPercentage])) {
        val = valRound;
      }
      break;
    }
  }
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(var)) setValueWithDouble:val];
  OrgGeogebraCommonKernelGeosGeoElement_addChangeableCoordParentNumberToUpdateListWithOrgGeogebraCommonKernelGeosGeoElement_withJavaUtilArrayList_withJavaUtilArrayList_(var, updateGeos, tempMoveObjectList);
  return YES;
}

- (void)dealloc {
  RELEASE_(changeableCoordNumber_);
  RELEASE_(changeableCoordDirector_);
  RELEASE_(direction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoElement:", "ChangeableCoordParent", NULL, 0x1, NULL, NULL },
    { "getNumber", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x11, NULL, NULL },
    { "getValue", NULL, "D", 0x11, NULL, NULL },
    { "getDirector", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x11, NULL, NULL },
    { "record", NULL, "V", 0x11, NULL, NULL },
    { "getStartValue", NULL, "D", 0x11, NULL, NULL },
    { "moveWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withJavaUtilArrayList:withJavaUtilArrayList:withOrgGeogebraCommonEuclidianEuclidianView:", "move", "Z", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "changeableCoordNumber_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "changeableCoordDirector_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "startValue_", NULL, 0x2, "D", NULL, NULL,  },
    { "direction_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelGeosChangeableCoordParent = { 2, "ChangeableCoordParent", "org.geogebra.common.kernel.geos", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelGeosChangeableCoordParent;
}

@end

void OrgGeogebraCommonKernelGeosChangeableCoordParent_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosChangeableCoordParent *self, OrgGeogebraCommonKernelGeosGeoElement *child, OrgGeogebraCommonKernelGeosGeoNumeric *number, OrgGeogebraCommonKernelGeosGeoElement *director) {
  NSObject_init(self);
  OrgGeogebraCommonKernelGeosChangeableCoordParent_set_changeableCoordNumber_(self, nil);
  OrgGeogebraCommonKernelGeosChangeableCoordParent_set_changeableCoordDirector_(self, nil);
  OrgGeogebraCommonKernelGeosChangeableCoordParent_set_changeableCoordNumber_(self, number);
  OrgGeogebraCommonKernelGeosChangeableCoordParent_set_changeableCoordDirector_(self, director);
}

OrgGeogebraCommonKernelGeosChangeableCoordParent *new_OrgGeogebraCommonKernelGeosChangeableCoordParent_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *child, OrgGeogebraCommonKernelGeosGeoNumeric *number, OrgGeogebraCommonKernelGeosGeoElement *director) {
  OrgGeogebraCommonKernelGeosChangeableCoordParent *self = [OrgGeogebraCommonKernelGeosChangeableCoordParent alloc];
  OrgGeogebraCommonKernelGeosChangeableCoordParent_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(self, child, number, director);
  return self;
}

OrgGeogebraCommonKernelGeosGeoNumeric *OrgGeogebraCommonKernelGeosChangeableCoordParent_getNumber(OrgGeogebraCommonKernelGeosChangeableCoordParent *self) {
  return self->changeableCoordNumber_;
}

jdouble OrgGeogebraCommonKernelGeosChangeableCoordParent_getValue(OrgGeogebraCommonKernelGeosChangeableCoordParent *self) {
  return [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->changeableCoordNumber_)) getValue];
}

jdouble OrgGeogebraCommonKernelGeosChangeableCoordParent_getStartValue(OrgGeogebraCommonKernelGeosChangeableCoordParent *self) {
  return self->startValue_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelGeosChangeableCoordParent)
