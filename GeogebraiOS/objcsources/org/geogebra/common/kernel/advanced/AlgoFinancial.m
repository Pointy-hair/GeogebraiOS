//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/advanced/AlgoFinancial.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/advanced/AlgoFinancial.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoFinancial () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *geoRate_, *geoNper_, *geoPmt_, *geoPV_, *geoFV_, *geoPmtType_, *geoGuess_;
  OrgGeogebraCommonKernelGeosGeoNumeric *result_;
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *calcType_;
  jdouble rate_, nper_, pmt_, pv_, fv_, pmtType_, guess_;
}

- (jdouble)pmtFactor;

- (jboolean)computeRate;

- (jdouble)fWithDouble:(jdouble)x;

- (jdouble)dfWithDouble:(jdouble)x;

- (jboolean)computeRate2;

- (jboolean)setRate;

- (jboolean)setNper;

- (jboolean)setPmt;

- (jboolean)setPV;

- (jboolean)setFV;

- (jboolean)setPmtType;

- (jboolean)setGuess;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, geoRate_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, geoNper_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, geoPmt_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, geoPV_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, geoFV_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, geoPmtType_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, geoGuess_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, result_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFinancial, calcType_, OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoFinancial_compute(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelAdvancedAlgoFinancial_pmtFactor(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_computeRate(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelAdvancedAlgoFinancial_fWithDouble_(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self, jdouble x);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelAdvancedAlgoFinancial_dfWithDouble_(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self, jdouble x);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setRate(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setNper(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmt(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPV(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setFV(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setGuess(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonKernelAdvancedAlgoFinancial

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)rate
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)nper
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)pmt
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)pv
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)fv
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)pmtType
withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum:(OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *)calcType {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(self, cons, label, rate, nper, pmt, pv, fv, pmtType, calcType);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)rate
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)nper
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)pmt
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)pv
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)fv
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)pmtType
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)guess
withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum:(OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *)calcType {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(self, cons, label, rate, nper, pmt, pv, fv, pmtType, guess, calcType);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch ([calcType_ ordinal]) {
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_RATE:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Rate();
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_NPER:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Periods();
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_PMT:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Payment();
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_PV:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_PresentValue();
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_FV:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_FutureValue();
    default:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Rate();
  }
}

- (void)setInputOutput {
  JavaUtilArrayList *tempList = [new_JavaUtilArrayList_init() autorelease];
  if (geoRate_ != nil) {
    [tempList addWithId:geoRate_];
  }
  if (geoNper_ != nil) {
    [tempList addWithId:geoNper_];
  }
  if (geoPmt_ != nil) {
    [tempList addWithId:geoPmt_];
  }
  if (geoPV_ != nil) {
    [tempList addWithId:geoPV_];
  }
  if (geoFV_ != nil) {
    [tempList addWithId:geoFV_];
  }
  if (geoPmtType_ != nil) {
    [tempList addWithId:geoPmtType_];
  }
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:[tempList size] type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  OrgGeogebraCommonKernelAlgosAlgoElement_set_input_(self, [tempList toArrayWithNSObjectArray:input_]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:result_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return result_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_compute(self);
}

- (jdouble)pmtFactor {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_pmtFactor(self);
}

- (jboolean)computeRate {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_computeRate(self);
}

- (jdouble)fWithDouble:(jdouble)x {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_fWithDouble_(self, x);
}

- (jdouble)dfWithDouble:(jdouble)x {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_dfWithDouble_(self, x);
}

- (jboolean)computeRate2 {
  jdouble financialPrecision = 1.0e-08;
  jdouble maxIterations = 128;
  jdouble f = 0;
  jdouble i;
  jdouble y;
  jdouble y0;
  jdouble y1;
  jdouble x0;
  jdouble x1;
  rate_ = guess_;
  if (JavaLangMath_absWithDouble_(rate_) < financialPrecision) {
    y = pv_ * (1 + nper_ * rate_) + pmt_ * (1 + rate_ * pmtType_) * nper_ + fv_;
  }
  else {
    f = JavaLangMath_expWithDouble_(nper_ * JavaLangMath_logWithDouble_(1 + rate_));
    y = pv_ * f + pmt_ * (1 / rate_ + pmtType_) * (f - 1) + fv_;
  }
  y0 = pv_ + pmt_ * nper_ + fv_;
  y1 = pv_ * f + pmt_ * (1 / rate_ + pmtType_) * (f - 1) + fv_;
  i = 0.0;
  x0 = 0.0;
  x1 = rate_;
  while ((JavaLangMath_absWithDouble_(y0 - y1) > financialPrecision) && (i < maxIterations)) {
    rate_ = (y1 * x0 - y0 * x1) / (y1 - y0);
    x0 = x1;
    x1 = rate_;
    if (JavaLangMath_absWithDouble_(rate_) < financialPrecision) {
      y = pv_ * (1 + nper_ * rate_) + pmt_ * (1 + rate_ * pmtType_) * nper_ + fv_;
    }
    else {
      f = JavaLangMath_expWithDouble_(nper_ * JavaLangMath_logWithDouble_(1 + rate_));
      y = pv_ * f + pmt_ * (1 / rate_ + pmtType_) * (f - 1) + fv_;
    }
    y0 = y1;
    y1 = y;
    jdouble unseq$1 = i++;
    i = unseq$1;
  }
  return YES;
}

- (jboolean)setRate {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_setRate(self);
}

- (jboolean)setNper {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_setNper(self);
}

- (jboolean)setPmt {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmt(self);
}

- (jboolean)setPV {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPV(self);
}

- (jboolean)setFV {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_setFV(self);
}

- (jboolean)setPmtType {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(self);
}

- (jboolean)setGuess {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_setGuess(self);
}

- (void)dealloc {
  RELEASE_(geoRate_);
  RELEASE_(geoNper_);
  RELEASE_(geoPmt_);
  RELEASE_(geoPV_);
  RELEASE_(geoFV_);
  RELEASE_(geoPmtType_);
  RELEASE_(geoGuess_);
  RELEASE_(result_);
  RELEASE_(calcType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum:", "AlgoFinancial", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum:", "AlgoFinancial", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "pmtFactor", NULL, "D", 0x2, NULL, NULL },
    { "computeRate", NULL, "Z", 0x2, NULL, NULL },
    { "fWithDouble:", "f", "D", 0x2, NULL, NULL },
    { "dfWithDouble:", "df", "D", 0x2, NULL, NULL },
    { "computeRate2", NULL, "Z", 0x2, NULL, NULL },
    { "setRate", NULL, "Z", 0x2, NULL, NULL },
    { "setNper", NULL, "Z", 0x2, NULL, NULL },
    { "setPmt", NULL, "Z", 0x2, NULL, NULL },
    { "setPV", NULL, "Z", 0x2, NULL, NULL },
    { "setFV", NULL, "Z", 0x2, NULL, NULL },
    { "setPmtType", NULL, "Z", 0x2, NULL, NULL },
    { "setGuess", NULL, "Z", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoRate_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoNper_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoPmt_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoPV_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoFV_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoPmtType_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoGuess_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "result_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "calcType_", NULL, 0x2, "Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;", NULL, NULL,  },
    { "rate_", NULL, 0x2, "D", NULL, NULL,  },
    { "nper_", NULL, 0x2, "D", NULL, NULL,  },
    { "pmt_", NULL, 0x2, "D", NULL, NULL,  },
    { "pv_", NULL, 0x2, "D", NULL, NULL,  },
    { "fv_", NULL, 0x2, "D", NULL, NULL,  },
    { "pmtType_", NULL, 0x2, "D", NULL, NULL,  },
    { "guess_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoFinancial = { 2, "AlgoFinancial", "org.geogebra.common.kernel.advanced", NULL, 0x1, 18, methods, 16, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoFinancial;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *rate, OrgGeogebraCommonKernelGeosGeoNumeric *nper, OrgGeogebraCommonKernelGeosGeoNumeric *pmt, OrgGeogebraCommonKernelGeosGeoNumeric *pv, OrgGeogebraCommonKernelGeosGeoNumeric *fv, OrgGeogebraCommonKernelGeosGeoNumeric *pmtType, OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *calcType) {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(self, cons, label, rate, nper, pmt, pv, fv, pmtType, nil, calcType);
}

OrgGeogebraCommonKernelAdvancedAlgoFinancial *new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *rate, OrgGeogebraCommonKernelGeosGeoNumeric *nper, OrgGeogebraCommonKernelGeosGeoNumeric *pmt, OrgGeogebraCommonKernelGeosGeoNumeric *pv, OrgGeogebraCommonKernelGeosGeoNumeric *fv, OrgGeogebraCommonKernelGeosGeoNumeric *pmtType, OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *calcType) {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial *self = [OrgGeogebraCommonKernelAdvancedAlgoFinancial alloc];
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(self, cons, label, rate, nper, pmt, pv, fv, pmtType, calcType);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *rate, OrgGeogebraCommonKernelGeosGeoNumeric *nper, OrgGeogebraCommonKernelGeosGeoNumeric *pmt, OrgGeogebraCommonKernelGeosGeoNumeric *pv, OrgGeogebraCommonKernelGeosGeoNumeric *fv, OrgGeogebraCommonKernelGeosGeoNumeric *pmtType, OrgGeogebraCommonKernelGeosGeoNumeric *guess, OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *calcType) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_geoRate_(self, rate);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_geoNper_(self, nper);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_geoPmt_(self, pmt);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_geoPV_(self, pv);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_geoFV_(self, fv);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_geoPmtType_(self, pmtType);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_geoGuess_(self, guess);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_set_calcType_(self, calcType);
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_setAndConsume_result_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_compute(self);
  [self->result_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoFinancial *new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *rate, OrgGeogebraCommonKernelGeosGeoNumeric *nper, OrgGeogebraCommonKernelGeosGeoNumeric *pmt, OrgGeogebraCommonKernelGeosGeoNumeric *pv, OrgGeogebraCommonKernelGeosGeoNumeric *fv, OrgGeogebraCommonKernelGeosGeoNumeric *pmtType, OrgGeogebraCommonKernelGeosGeoNumeric *guess, OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *calcType) {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial *self = [OrgGeogebraCommonKernelAdvancedAlgoFinancial alloc];
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_(self, cons, label, rate, nper, pmt, pv, fv, pmtType, guess, calcType);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoFinancial_compute(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  switch ([self->calcType_ ordinal]) {
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_RATE:
    if (!(OrgGeogebraCommonKernelAdvancedAlgoFinancial_setNper(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmt(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setFV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setGuess(self))) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    if (OrgGeogebraCommonKernelAdvancedAlgoFinancial_computeRate(self)) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:self->rate_];
    }
    else {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
    }
    break;
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_NPER:
    if (!(OrgGeogebraCommonKernelAdvancedAlgoFinancial_setRate(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmt(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setFV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(self))) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    if (self->rate_ == 0) {
      self->nper_ = -(self->pv_ + self->fv_) / self->pmt_;
    }
    else {
      jdouble pmt2 = self->pmt_ * (1 + self->rate_ * self->pmtType_);
      self->nper_ = JavaLangMath_logWithDouble_((pmt2 - self->rate_ * self->fv_) / (pmt2 + self->rate_ * self->pv_)) / JavaLangMath_logWithDouble_(1 + self->rate_);
    }
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:self->nper_];
    break;
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_PMT:
    if (!(OrgGeogebraCommonKernelAdvancedAlgoFinancial_setRate(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setNper(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setFV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(self))) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    if (self->rate_ == 0) {
      self->pmt_ = -(self->pv_ + self->fv_) / self->nper_;
    }
    else {
      self->pmt_ = (-self->fv_ - self->pv_ * JavaLangMath_powWithDouble_withDouble_(1 + self->rate_, self->nper_)) / OrgGeogebraCommonKernelAdvancedAlgoFinancial_pmtFactor(self);
    }
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:self->pmt_];
    break;
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_PV:
    if (!(OrgGeogebraCommonKernelAdvancedAlgoFinancial_setRate(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setNper(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmt(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setFV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(self))) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    if (self->rate_ == 0) {
      self->pv_ = -self->pmt_ * self->nper_ - self->fv_;
    }
    else {
      self->pv_ = (-self->fv_ - self->pmt_ * OrgGeogebraCommonKernelAdvancedAlgoFinancial_pmtFactor(self)) / JavaLangMath_powWithDouble_withDouble_(1 + self->rate_, self->nper_);
    }
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:self->pv_];
    break;
    case OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationType_FV:
    if (!(OrgGeogebraCommonKernelAdvancedAlgoFinancial_setRate(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setNper(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmt(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPV(self) && OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(self))) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    if (self->rate_ == 0) {
      self->fv_ = -self->pmt_ * self->nper_ - self->pv_;
    }
    else {
      self->fv_ = -self->pmt_ * OrgGeogebraCommonKernelAdvancedAlgoFinancial_pmtFactor(self) - self->pv_ * JavaLangMath_powWithDouble_withDouble_(1 + self->rate_, self->nper_);
    }
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:self->fv_];
    break;
  }
}

jdouble OrgGeogebraCommonKernelAdvancedAlgoFinancial_pmtFactor(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  return (1 + self->rate_ * self->pmtType_) * (JavaLangMath_powWithDouble_withDouble_(1 + self->rate_, self->nper_) - 1) / (self->rate_);
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_computeRate(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  jint maxIterations = 20;
  jdouble y, yPrime;
  self->rate_ = self->guess_;
  for (jint i = 0; i < maxIterations; i++) {
    y = OrgGeogebraCommonKernelAdvancedAlgoFinancial_fWithDouble_(self, self->rate_);
    if (JavaLangMath_absWithDouble_(y) < OrgGeogebraCommonKernelKernel_STANDARD_PRECISION) {
      return YES;
    }
    yPrime = OrgGeogebraCommonKernelAdvancedAlgoFinancial_dfWithDouble_(self, self->rate_);
    if (JavaLangMath_absWithDouble_(yPrime) < OrgGeogebraCommonKernelKernel_MAX_DOUBLE_PRECISION) {
      return NO;
    }
    jdouble rate2 = self->rate_ - (y / OrgGeogebraCommonKernelAdvancedAlgoFinancial_dfWithDouble_(self, self->rate_));
    if (JavaLangMath_absWithDouble_(rate2 - self->rate_) < OrgGeogebraCommonKernelKernel_STANDARD_PRECISION) {
      self->rate_ = rate2;
      return YES;
    }
    self->rate_ = rate2;
  }
  return NO;
}

jdouble OrgGeogebraCommonKernelAdvancedAlgoFinancial_fWithDouble_(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self, jdouble x) {
  return self->pv_ * JavaLangMath_powWithDouble_withDouble_(1 + x, self->nper_) + self->pmt_ * (1 + self->pmtType_ * x) * (JavaLangMath_powWithDouble_withDouble_(1 + x, self->nper_) - 1) / x + self->fv_;
}

jdouble OrgGeogebraCommonKernelAdvancedAlgoFinancial_dfWithDouble_(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self, jdouble x) {
  jdouble a = self->pv_;
  jdouble n = self->nper_;
  jdouble b = self->pmt_;
  jdouble c = self->pmtType_;
  jdouble p = JavaLangMath_powWithDouble_withDouble_(1 + x, n);
  jdouble num = a * n * x * x * p + b * (c * n * x * x * p + n * x * p - x * p - p + x + 1);
  return num / (x * x * (x + 1));
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setRate(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  if (self->geoRate_ == nil || ![self->geoRate_ isDefined]) {
    return NO;
  }
  self->rate_ = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoRate_)) evaluateDouble];
  return !JavaLangDouble_isNaNWithDouble_(self->rate_);
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setNper(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  if (self->geoNper_ == nil || ![self->geoNper_ isDefined]) {
    return NO;
  }
  self->nper_ = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoNper_)) evaluateDouble];
  return !(self->nper_ <= 0 && JavaLangDouble_isNaNWithDouble_(self->nper_));
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmt(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  if (self->geoPmt_ == nil || ![self->geoPmt_ isDefined]) {
    return NO;
  }
  self->pmt_ = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoPmt_)) evaluateDouble];
  return !JavaLangDouble_isNaNWithDouble_(self->pmt_);
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPV(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  if (self->geoPV_ == nil) {
    if (self->calcType_ == OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_get_FV()) {
      self->pv_ = 0;
      return YES;
    }
    return NO;
  }
  if ([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoPV_)) isDefined]) {
    self->pv_ = [self->geoPV_ evaluateDouble];
    return !JavaLangDouble_isNaNWithDouble_(self->pv_);
  }
  return NO;
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setFV(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  if (self->geoFV_ == nil) {
    self->fv_ = 0;
    return YES;
  }
  if ([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoFV_)) isDefined]) {
    self->fv_ = [self->geoFV_ evaluateDouble];
    return !JavaLangDouble_isNaNWithDouble_(self->fv_);
  }
  return NO;
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setPmtType(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  if (self->geoPmtType_ == nil) {
    self->pmtType_ = 0;
    return YES;
  }
  if ([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoPmtType_)) isDefined]) {
    if ([self->geoPmtType_ getDouble] == 1 || [self->geoPmtType_ getDouble] == 0) {
      self->pmtType_ = [self->geoPmtType_ getDouble];
      return YES;
    }
  }
  return NO;
}

jboolean OrgGeogebraCommonKernelAdvancedAlgoFinancial_setGuess(OrgGeogebraCommonKernelAdvancedAlgoFinancial *self) {
  if (self->geoGuess_ == nil) {
    self->guess_ = 0.1;
    return YES;
  }
  if ([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoGuess_)) isDefined]) {
    self->guess_ = [self->geoGuess_ evaluateDouble];
    return !JavaLangDouble_isNaNWithDouble_(self->guess_);
  }
  return NO;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoFinancial)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum)

OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_values_[5];

@implementation OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_values() {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_values_ count:5 type:OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_values();
}

+ (OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initialize();
  for (int i = 0; i < 5; i++) {
    OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *e = OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum class]) {
    OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_RATE = new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(@"RATE", 0);
    OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_NPER = new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(@"NPER", 1);
    OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_PMT = new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(@"PMT", 2);
    OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_PV = new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(@"PV", 3);
    OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_FV = new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(@"FV", 4);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "RATE", "RATE", 0x4019, "Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;", &OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_RATE, NULL,  },
    { "NPER", "NPER", 0x4019, "Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;", &OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_NPER, NULL,  },
    { "PMT", "PMT", 0x4019, "Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;", &OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_PMT, NULL,  },
    { "PV", "PV", 0x4019, "Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;", &OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_PV, NULL,  },
    { "FV", "FV", 0x4019, "Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;", &OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_FV, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.advanced.AlgoFinancial$CalculationType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum = { 2, "CalculationType", "org.geogebra.common.kernel.advanced", "AlgoFinancial", 0x4019, 0, NULL, 5, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/advanced/AlgoFinancial$CalculationType;>;" };
  return &_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *new_OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum *self = [OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum alloc];
  OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoFinancial_CalculationTypeEnum)
