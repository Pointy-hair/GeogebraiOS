//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/AlgoVerticalText.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/kernel/CircularDefinitionException.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/advanced/AlgoRotateText.h"
#include "org/geogebra/common/kernel/advanced/AlgoVerticalText.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoVerticalText () {
 @public
  OrgGeogebraCommonKernelGeosGeoText *text_;
  OrgGeogebraCommonKernelGeosGeoText *args_;
  OrgGeogebraCommonKernelGeosGeoPoint *startPoint_, *startPointCopy_;
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoVerticalText, text_, OrgGeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoVerticalText, args_, OrgGeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoVerticalText, startPoint_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoVerticalText, startPointCopy_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoVerticalText, sb_, JavaLangStringBuilder *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoVerticalText_compute(OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoVerticalText

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)args {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_(self, cons, label, args);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)args {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_(self, cons, args);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)args
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(self, cons, label, args, p);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)args
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(self, cons, args, p);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_VerticalText();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, args_);
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(args_)) addTextDescendantWithOrgGeogebraCommonKernelGeosGeoText:text_];
  if (startPoint_ == nil) {
    input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, args_);
  }
  else {
    input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, args_);
    (void) IOSObjectArray_Set(input_, 1, startPoint_);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoText *)getResult {
  return text_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_compute(self);
}

- (jboolean)isLaTeXTextCommand {
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoText:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoText:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelGeosGeoPoint:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelGeosGeoPoint:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "isLaTeXTextCommand", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "text_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "args_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "startPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "startPointCopy_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoVerticalText = { 2, "AlgoVerticalText", "org.geogebra.common.kernel.advanced", NULL, 0x1, 9, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoVerticalText;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_(OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *args) {
  (void) OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(self, cons, args, nil);
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoVerticalText *new_OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *args) {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self = [OrgGeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_(self, cons, label, args);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_(OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoText *args) {
  (void) OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(self, cons, args, nil);
}

OrgGeogebraCommonKernelAdvancedAlgoVerticalText *new_OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoText *args) {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self = [OrgGeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_(self, cons, args);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *args, OrgGeogebraCommonKernelGeosGeoPoint *p) {
  (void) OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(self, cons, args, p);
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoVerticalText *new_OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *args, OrgGeogebraCommonKernelGeosGeoPoint *p) {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self = [OrgGeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(self, cons, label, args, p);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoText *args, OrgGeogebraCommonKernelGeosGeoPoint *p) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->sb_ = new_JavaLangStringBuilder_init();
  self->args_ = args;
  self->startPoint_ = p;
  self->text_ = new_OrgGeogebraCommonKernelGeosGeoText_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self->text_ setIsTextCommandWithBoolean:YES];
  if (self->startPoint_ != nil) {
    self->startPointCopy_ = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([self->startPoint_ copyInternalWithOrgGeogebraCommonKernelConstruction:cons], [OrgGeogebraCommonKernelGeosGeoPoint class]);
    @try {
      [self->text_ setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->startPointCopy_];
    }
    @catch (OrgGeogebraCommonKernelCircularDefinitionException *e) {
      [((OrgGeogebraCommonKernelCircularDefinitionException *) nil_chk(e)) printStackTrace];
    }
    [self->text_ setAlwaysFixedWithBoolean:YES];
  }
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoVerticalText *new_OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoText *args, OrgGeogebraCommonKernelGeosGeoPoint *p) {
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self = [OrgGeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  OrgGeogebraCommonKernelAdvancedAlgoVerticalText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoPoint_(self, cons, args, p);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoVerticalText_compute(OrgGeogebraCommonKernelAdvancedAlgoVerticalText *self) {
  if (![((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->args_)) isDefined] || (self->startPoint_ != nil && ![self->startPoint_ isDefined])) {
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setTextStringWithNSString:@""];
    return;
  }
  [((JavaLangStringBuilder *) nil_chk(self->sb_)) setLengthWithInt:0];
  OrgGeogebraCommonKernelAdvancedAlgoRotateText_appendRotatedTextWithJavaLangStringBuilder_withOrgGeogebraCommonKernelGeosGeoText_withDouble_(self->sb_, self->args_, 90);
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setTextStringWithNSString:[self->sb_ description]];
  [self->text_ setLaTeXWithBoolean:YES withBoolean:NO];
  if (self->startPointCopy_ != nil) {
    [self->startPointCopy_ setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:self->startPoint_];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoVerticalText)
