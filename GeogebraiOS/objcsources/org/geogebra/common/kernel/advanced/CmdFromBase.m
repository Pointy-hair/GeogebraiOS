//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/CmdFromBase.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/advanced/AlgoFromBase.h"
#include "org/geogebra/common/kernel/advanced/CmdFromBase.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/main/MyError.h"

@implementation OrgGeogebraCommonKernelAdvancedCmdFromBase

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonKernelAdvancedCmdFromBase_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  {
    jboolean oldMacroMode;
    IOSObjectArray *argE;
    IOSObjectArray *arg;
    NSString *str;
    OrgGeogebraCommonKernelAdvancedAlgoFromBase *fromBase;
    IOSObjectArray *ret;
    switch (n) {
      case 2:
      oldMacroMode = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) isSuppressLabelsActive];
      [cons_ setSuppressLabelCreationWithBoolean:YES];
      argE = [c getArguments];
      arg = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
      [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(IOSObjectArray_Get(nil_chk(argE), 1))) resolveVariables];
      (void) IOSObjectArray_Set(arg, 1, IOSObjectArray_Get(nil_chk([self resArgWithOrgGeogebraCommonKernelArithmeticExpressionNode:IOSObjectArray_Get(argE, 1)]), 0));
      if (!([OrgGeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(arg, 1)])) @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 1)];
      str = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(IOSObjectArray_Get(argE, 0))) toStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
      @try {
        [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(IOSObjectArray_Get(argE, 0))) resolveVariables];
        (void) IOSObjectArray_Set(arg, 0, IOSObjectArray_Get(nil_chk([self resArgWithOrgGeogebraCommonKernelArithmeticExpressionNode:IOSObjectArray_Get(argE, 0)]), 0));
      }
      @catch (JavaLangThrowable *t) {
      }
      if (!([IOSObjectArray_Get(arg, 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoText class]])) {
        (void) IOSObjectArray_Set(arg, 0, new_OrgGeogebraCommonKernelGeosGeoText_initWithOrgGeogebraCommonKernelConstruction_withNSString_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getConstruction], str));
      }
      [cons_ setSuppressLabelCreationWithBoolean:oldMacroMode];
      fromBase = new_OrgGeogebraCommonKernelAdvancedAlgoFromBase_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumberValue_(cons_, [c getLabel], (OrgGeogebraCommonKernelGeosGeoText *) check_class_cast(IOSObjectArray_Get(arg, 0), [OrgGeogebraCommonKernelGeosGeoText class]), (id<OrgGeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(OrgGeogebraCommonKernelGeosGeoNumberValue)));
      ret = [IOSObjectArray newArrayWithObjects:(id[]){ [fromBase getResult] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
      default:
      @throw [self argNumErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdFromBase", NULL, 0x1, NULL, NULL },
    { "processWithOrgGeogebraCommonKernelArithmeticCommand:", "process", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x11, "Lorg.geogebra.common.main.MyError;", NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedCmdFromBase = { 2, "CmdFromBase", "org.geogebra.common.kernel.advanced", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedCmdFromBase;
}

@end

void OrgGeogebraCommonKernelAdvancedCmdFromBase_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelAdvancedCmdFromBase *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) OrgGeogebraCommonKernelCommandsCommandProcessor_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonKernelAdvancedCmdFromBase *new_OrgGeogebraCommonKernelAdvancedCmdFromBase_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelAdvancedCmdFromBase *self = [OrgGeogebraCommonKernelAdvancedCmdFromBase alloc];
  OrgGeogebraCommonKernelAdvancedCmdFromBase_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedCmdFromBase)
