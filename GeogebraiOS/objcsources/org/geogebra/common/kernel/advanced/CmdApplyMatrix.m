//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/CmdApplyMatrix.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Transform.h"
#include "org/geogebra/common/kernel/advanced/CmdApplyMatrix.h"
#include "org/geogebra/common/kernel/advanced/TransformApplyMatrix.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/main/MyError.h"

@interface OrgGeogebraCommonKernelAdvancedCmdApplyMatrix ()

- (IOSObjectArray *)ApplyMatrixWithNSString:(NSString *)label
  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)Q
     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)matrix;

@end

__attribute__((unused)) static IOSObjectArray *OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_ApplyMatrixWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelAdvancedCmdApplyMatrix *self, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *Q, OrgGeogebraCommonKernelGeosGeoList *matrix);

@implementation OrgGeogebraCommonKernelAdvancedCmdApplyMatrix

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c {
  NSString *label = [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel];
  jint n = [c getArgumentNumber];
  IOSObjectArray *arg;
  IOSObjectArray *ret;
  switch (n) {
    case 2:
    arg = [self resArgsWithOrgGeogebraCommonKernelArithmeticCommand:c];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoList]) {
      if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isMatrixTransformable] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoFunction] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPolygon] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPolyLine] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList]) {
        ret = OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_ApplyMatrixWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(self, label, IOSObjectArray_Get(arg, 1), (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [OrgGeogebraCommonKernelGeosGeoList class]));
        return ret;
      }
      @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 1)];
    }
    @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    default:
    @throw [self argNumErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

- (IOSObjectArray *)ApplyMatrixWithNSString:(NSString *)label
  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)Q
     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)matrix {
  return OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_ApplyMatrixWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(self, label, Q, matrix);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdApplyMatrix", NULL, 0x1, NULL, NULL },
    { "processWithOrgGeogebraCommonKernelArithmeticCommand:", "process", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x11, "Lorg.geogebra.common.main.MyError;", NULL },
    { "ApplyMatrixWithNSString:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoList:", "ApplyMatrix", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x12, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedCmdApplyMatrix = { 2, "CmdApplyMatrix", "org.geogebra.common.kernel.advanced", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedCmdApplyMatrix;
}

@end

void OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelAdvancedCmdApplyMatrix *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) OrgGeogebraCommonKernelCommandsCommandProcessor_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonKernelAdvancedCmdApplyMatrix *new_OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelAdvancedCmdApplyMatrix *self = [OrgGeogebraCommonKernelAdvancedCmdApplyMatrix alloc];
  OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelAdvancedCmdApplyMatrix_ApplyMatrixWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelAdvancedCmdApplyMatrix *self, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *Q, OrgGeogebraCommonKernelGeosGeoList *matrix) {
  OrgGeogebraCommonKernelTransform *t = new_OrgGeogebraCommonKernelAdvancedTransformApplyMatrix_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(self->cons_, matrix);
  return [t transformWithOrgGeogebraCommonKernelGeosGeoElement:Q withNSString:label];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedCmdApplyMatrix)
