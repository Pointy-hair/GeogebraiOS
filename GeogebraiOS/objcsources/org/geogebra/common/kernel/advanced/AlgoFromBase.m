//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/AlgoFromBase.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/advanced/AlgoFromBase.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/util/StringUtil.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoFromBase () {
 @public
  id<OrgGeogebraCommonKernelGeosGeoNumberValue> base_;
  OrgGeogebraCommonKernelGeosGeoText *number_;
  OrgGeogebraCommonKernelGeosGeoNumeric *result_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFromBase, base_, id<OrgGeogebraCommonKernelGeosGeoNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFromBase, number_, OrgGeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoFromBase, result_, OrgGeogebraCommonKernelGeosGeoNumeric *)

@implementation OrgGeogebraCommonKernelAdvancedAlgoFromBase

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)number
              withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)base {
  OrgGeogebraCommonKernelAdvancedAlgoFromBase_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumberValue_(self, c, label, number, base);
  return self;
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithObjects:(id[]){ number_, [((id<OrgGeogebraCommonKernelGeosGeoNumberValue>) nil_chk(base_)) toGeoElement] } count:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:result_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return result_;
}

- (void)compute {
  if (![((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(number_)) isDefined] || ![((id<OrgGeogebraCommonKernelGeosGeoNumberValue>) nil_chk(base_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(result_)) setUndefined];
    return;
  }
  jint b = J2ObjCFpToInt([((id<OrgGeogebraCommonKernelGeosGeoNumberValue>) nil_chk(base_)) getDouble]);
  if (b < 2 || b > 36) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(result_)) setUndefined];
    return;
  }
  jdouble val = 0;
  NSString *in = [number_ getTextString];
  jint pos = [((NSString *) nil_chk(in)) indexOf:'.'];
  NSString *s = pos > -1 ? OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([in substring:0 endIndex:pos]) : OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_(in);
  for (jint i = 0; i < ((jint) [s length]); i++) {
    jint last = [s charAtWithInt:i] - (jint) 0x30;
    if (last > 9) last -= (jint) 0x30 - 9;
    if (last >= b || last < 0) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(result_)) setUndefined];
      return;
    }
    val = val * b + last;
  }
  if (pos > -1) {
    s = OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([in substring:pos + 1]);
    jdouble power = 1;
    for (jint i = 0; i < ((jint) [((NSString *) nil_chk(s)) length]); i++) {
      jint last = [s charAtWithInt:i] - (jint) 0x30;
      if (last > 9) last -= (jint) 0x30 - 9;
      if (last >= b || last < 0) {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(result_)) setUndefined];
        return;
      }
      power /= b;
      val += power * last;
    }
  }
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(result_)) setValueWithDouble:val];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_FromBase();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelGeosGeoNumberValue:", "AlgoFromBase", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "base_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumberValue;", NULL, NULL,  },
    { "number_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "result_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoFromBase = { 2, "AlgoFromBase", "org.geogebra.common.kernel.advanced", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoFromBase;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoFromBase_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumberValue_(OrgGeogebraCommonKernelAdvancedAlgoFromBase *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelGeosGeoText *number, id<OrgGeogebraCommonKernelGeosGeoNumberValue> base) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->base_ = base;
  self->number_ = number;
  self->result_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(self->cons_);
  [self setInputOutput];
  [self compute];
  [self->result_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoFromBase *new_OrgGeogebraCommonKernelAdvancedAlgoFromBase_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumberValue_(OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelGeosGeoText *number, id<OrgGeogebraCommonKernelGeosGeoNumberValue> base) {
  OrgGeogebraCommonKernelAdvancedAlgoFromBase *self = [OrgGeogebraCommonKernelAdvancedAlgoFromBase alloc];
  OrgGeogebraCommonKernelAdvancedAlgoFromBase_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelGeosGeoNumberValue_(self, c, label, number, base);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoFromBase)
