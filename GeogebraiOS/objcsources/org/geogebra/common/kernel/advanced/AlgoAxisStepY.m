//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/advanced/AlgoAxisStepY.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/advanced/AlgoAxisStepY.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/main/App.h"

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_compute(OrgGeogebraCommonKernelAdvancedAlgoAxisStepY *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoAxisStepY

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label {
  OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_AxisStepY();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:num_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return num_;
}

- (jboolean)euclidianViewUpdate {
  OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_compute(self);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(num_)) updateCascade];
  return NO;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_compute(self);
}

- (void)dealloc {
  RELEASE_(num_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:", "AlgoAxisStepY", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "num_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoAxisStepY = { 2, "AlgoAxisStepY", "org.geogebra.common.kernel.advanced", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoAxisStepY;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelAdvancedAlgoAxisStepY *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_setAndConsume_num_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_compute(self);
  [self->num_ setLabelWithNSString:label];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithOrgGeogebraCommonKernelEuclidianViewCE:self];
}

OrgGeogebraCommonKernelAdvancedAlgoAxisStepY *new_OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelConstruction *cons, NSString *label) {
  OrgGeogebraCommonKernelAdvancedAlgoAxisStepY *self = [OrgGeogebraCommonKernelAdvancedAlgoAxisStepY alloc];
  OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoAxisStepY_compute(OrgGeogebraCommonKernelAdvancedAlgoAxisStepY *self) {
  IOSDoubleArray *axisSteps = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication]))) getEuclidianView1])) getGridDistances];
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setValueWithDouble:IOSDoubleArray_Get(nil_chk(axisSteps), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoAxisStepY)
