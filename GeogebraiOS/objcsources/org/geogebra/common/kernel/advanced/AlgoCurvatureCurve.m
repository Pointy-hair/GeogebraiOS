//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/advanced/AlgoCurvatureCurve.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvatureCurve.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoCurveCartesianND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> A_;
  OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *f_;
  OrgGeogebraCommonKernelGeosGeoNumeric *K_;
  OrgGeogebraCommonKernelKernelNDGeoConicND *gc_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve, A_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve, f_, OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve, K_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve, gc_, OrgGeogebraCommonKernelKernelNDGeoConicND *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
     withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND:(OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
     withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND:(OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(self, cons, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)gc {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, cons, A, gc);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Curvature();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) toGeoElement]);
  if (gc_ != nil) {
    OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_setAndConsume_f_(self, new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(cons_));
    [gc_ toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast(f_, [OrgGeogebraCommonKernelGeosGeoCurveCartesian class])];
    IOSObjectArray_Set(input_, 1, gc_);
  }
  else IOSObjectArray_Set(input_, 1, f_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:K_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return K_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_compute(self);
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(f_);
  RELEASE_(K_);
  RELEASE_(gc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND:", "AlgoCurvatureCurve", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "AlgoCurvatureCurve", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND:", "AlgoCurvatureCurve", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "AlgoCurvatureCurve", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoCurveCartesianND;", NULL, NULL,  },
    { "K_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "gc_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve = { 2, "AlgoCurvatureCurve", "org.geogebra.common.kernel.advanced", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(self, cons, A, f);
  if (label != nil) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->K_)) setLabelWithNSString:label];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->K_)) setLabelWithNSString:@"k"];
  }
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(self, cons, label, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoConicND *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, cons, A, f);
  if (label != nil) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->K_)) setLabelWithNSString:label];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->K_)) setLabelWithNSString:@"k"];
  }
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoConicND *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *f) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_set_gc_(self, nil);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_set_f_(self, f);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_setAndConsume_K_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(self, cons, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoConicND *gc) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_set_gc_(self, nil);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_set_gc_(self, gc);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_setAndConsume_K_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelKernelNDGeoConicND *gc) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, cons, A, gc);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *self) {
  if (self->gc_ != nil) {
    OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_setAndConsume_f_(self, new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(self->cons_));
    [self->gc_ toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast(self->f_, [OrgGeogebraCommonKernelGeosGeoCurveCartesian class])];
  }
  if ([((OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *) nil_chk(self->f_)) isDefined]) {
    @try {
      jdouble t = [self->f_ getClosestParameterWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_ withDouble:[self->f_ getMinParameter]];
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->K_)) setValueWithDouble:[self->f_ evaluateCurvatureWithDouble:t]];
    }
    @catch (JavaLangException *ex) {
      [((JavaLangException *) nil_chk(ex)) printStackTrace];
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->K_)) setUndefined];
    }
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->K_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve)
