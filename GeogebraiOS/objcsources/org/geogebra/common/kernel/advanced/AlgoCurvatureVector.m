//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/advanced/AlgoCurvatureVector.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/CircularDefinitionException.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvatureVector.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/cas/AlgoDerivative.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *A_;
  OrgGeogebraCommonKernelGeosGeoFunction *f_, *f1_, *f2_;
  OrgGeogebraCommonKernelGeosGeoVector *v_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector, A_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector, f_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector, f1_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector, f2_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector, v_, OrgGeogebraCommonKernelGeosGeoVector *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CurvatureVector();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, A_);
  IOSObjectArray_Set(input_, 1, f_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:v_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoVector *)getVector {
  return v_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS_];
  [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(f_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS_];
  [A_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS2_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS2_];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(f_);
  RELEASE_(f1_);
  RELEASE_(f2_);
  RELEASE_(v_);
  RELEASE_(algoCAS_);
  RELEASE_(algoCAS2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoCurvatureVector", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoCurvatureVector", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getVector", NULL, "Lorg.geogebra.common.kernel.geos.GeoVector;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "f1_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "f2_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "algoCAS_", NULL, 0x0, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCAS2_", NULL, 0x0, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector = { 2, "AlgoCurvatureVector", "org.geogebra.common.kernel.advanced", NULL, 0x1, 7, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  if (label != nil) {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setLabelWithNSString:label];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setLabelWithNSString:@"c"];
  }
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, label, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_set_f_(self, f);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_setAndConsume_v_(self, new_OrgGeogebraCommonKernelGeosGeoVector_initWithOrgGeogebraCommonKernelConstruction_(cons));
  @try {
    [self->v_ setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:A];
  }
  @catch (OrgGeogebraCommonKernelCircularDefinitionException *e) {
  }
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_setAndConsume_algoCAS_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_(cons, f));
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCAS_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_set_f1_(self, (OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast([self->algoCAS_ getResult], [OrgGeogebraCommonKernelGeosGeoFunction class]));
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_setAndConsume_algoCAS2_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_(cons, self->f1_));
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCAS2_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_set_f2_(self, (OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast([self->algoCAS2_ getResult], [OrgGeogebraCommonKernelGeosGeoFunction class]));
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *self) {
  @try {
    jdouble f1eval = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f1_)) evaluateWithDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->A_))->inhomX_];
    jdouble f2eval = [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f2_)) evaluateWithDouble:self->A_->inhomX_];
    jdouble t = JavaLangMath_sqrtWithDouble_(1 + f1eval * f1eval);
    jdouble t4 = t * t * t * t;
    jdouble x = self->A_->inhomX_ - (f1eval * f2eval) / t4;
    jdouble y = self->A_->inhomY_ + f2eval / t4;
    ((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_))->x_ = x - self->A_->inhomX_;
    self->v_->y_ = y - self->A_->inhomY_;
    self->v_->z_ = 0.0;
  }
  @catch (JavaLangException *e) {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector)
