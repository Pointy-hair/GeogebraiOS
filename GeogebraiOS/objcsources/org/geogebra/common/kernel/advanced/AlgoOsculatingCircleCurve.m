//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/advanced/AlgoOsculatingCircleCurve.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvatureCurve.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvatureVectorCurve.h"
#include "org/geogebra/common/kernel/advanced/AlgoOsculatingCircleCurve.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *A_, *R_;
  OrgGeogebraCommonKernelGeosGeoCurveCartesian *f_;
  OrgGeogebraCommonKernelGeosGeoVector *v_;
  OrgGeogebraCommonKernelGeosGeoNumeric *curv_;
  OrgGeogebraCommonKernelGeosGeoConic *circle_;
  OrgGeogebraCommonKernelGeosGeoConic *gc_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve, A_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve, R_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve, f_, OrgGeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve, v_, OrgGeogebraCommonKernelGeosGeoVector *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve, curv_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve, circle_, OrgGeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve, gc_, OrgGeogebraCommonKernelGeosGeoConic *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_compute(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
           withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)f {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                    withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)geoConic {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(self, cons, label, A, geoConic);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_OsculatingCircle();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, A_);
  if (gc_ != nil) {
    IOSObjectArray_Set(input_, 1, gc_);
  }
  else {
    IOSObjectArray_Set(input_, 1, f_);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:circle_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoConic *)getCircle {
  return circle_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  [((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(f_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algo_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:cv_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algo_];
  [A_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:cv_];
  [((OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *) nil_chk(cv_)) remove];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(R_);
  RELEASE_(f_);
  RELEASE_(v_);
  RELEASE_(curv_);
  RELEASE_(circle_);
  RELEASE_(gc_);
  RELEASE_(algo_);
  RELEASE_(cv_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoCurveCartesian:", "AlgoOsculatingCircleCurve", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoConic:", "AlgoOsculatingCircleCurve", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCircle", NULL, "Lorg.geogebra.common.kernel.geos.GeoConic;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "R_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "curv_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "circle_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "gc_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "algo_", NULL, 0x0, "Lorg.geogebra.common.kernel.advanced.AlgoCurvatureCurve;", NULL, NULL,  },
    { "cv_", NULL, 0x0, "Lorg.geogebra.common.kernel.advanced.AlgoCurvatureVectorCurve;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve = { 2, "AlgoOsculatingCircleCurve", "org.geogebra.common.kernel.advanced", NULL, 0x1, 7, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoCurveCartesian *f) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_gc_(self, nil);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_f_(self, f);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_R_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_circle_(self, new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_algo_(self, new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(cons, A, f));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_cv_(self, new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(cons, A, f));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_curv_(self, [self->algo_ getResult]);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_v_(self, [self->cv_ getVector]);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algo_];
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->cv_];
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_compute(self);
  [self->circle_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *new_OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoCurveCartesian *f) {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoConic *geoConic) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_gc_(self, nil);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_f_(self, new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_gc_(self, geoConic);
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->gc_)) toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:self->f_];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_R_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_circle_(self, new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_algo_(self, new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_(cons, A, self->f_));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_cv_(self, new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(cons, A, self->f_));
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_curv_(self, [self->algo_ getResult]);
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_v_(self, [self->cv_ getVector]);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algo_];
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->cv_];
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_compute(self);
  [self->circle_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *new_OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoConic *geoConic) {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(self, cons, label, A, geoConic);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_compute(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve *self) {
  if (self->gc_ == nil && ![((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->f_)) isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_ withDouble:OrgGeogebraCommonKernelKernel_MIN_PRECISION]) {
    [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setUndefined];
    return;
  }
  if (self->gc_ != nil) {
    if (![self->gc_ isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_ withDouble:OrgGeogebraCommonKernelKernel_MIN_PRECISION]) {
      [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setUndefined];
      return;
    }
    OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_setAndConsume_f_(self, new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(self->cons_));
    [self->gc_ toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:self->f_];
    [((OrgGeogebraCommonKernelAdvancedAlgoCurvatureCurve *) nil_chk(self->algo_)) compute];
    [((OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *) nil_chk(self->cv_)) compute];
    OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_curv_(self, [self->algo_ getResult]);
    OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve_set_v_(self, [self->cv_ getVector]);
    OrgGeogebraCommonMainApp_debugWithNSString_([((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) toValueStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
    OrgGeogebraCommonMainApp_debugWithNSString_([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->curv_)) toValueStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
  }
  jdouble radius = 1 / JavaLangMath_absWithDouble_([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->curv_)) getValue]);
  jdouble r2 = radius * radius;
  jdouble x = r2 * ((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_))->x_;
  jdouble y = r2 * self->v_->y_;
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->R_)) setCoordsWithDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->A_))->inhomX_ + x withDouble:self->A_->inhomY_ + y withDouble:1.0];
  OrgGeogebraCommonMainApp_debugWithNSString_([self->R_ toValueStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
  OrgGeogebraCommonMainApp_debugWithNSString_([self->A_ toValueStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setCircleWithOrgGeogebraCommonKernelGeosGeoPoint:self->R_ withOrgGeogebraCommonKernelGeosGeoPoint:self->A_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircleCurve)
