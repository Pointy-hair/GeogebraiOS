//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/advanced/AlgoCurvatureVectorCurve.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/geogebra/common/kernel/CircularDefinitionException.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvatureVectorCurve.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/cas/AlgoDerivative.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *A_;
  OrgGeogebraCommonKernelGeosGeoCurveCartesian *f_, *f1_, *f2_;
  OrgGeogebraCommonKernelGeosGeoVector *v_;
  IOSDoubleArray *f1eval_;
  IOSDoubleArray *f2eval_;
  OrgGeogebraCommonKernelGeosGeoConic *gc_;
}

- (void)cas;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, A_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, f_, OrgGeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, f1_, OrgGeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, f2_, OrgGeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, v_, OrgGeogebraCommonKernelGeosGeoVector *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, f1eval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, f2eval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve, gc_, OrgGeogebraCommonKernelGeosGeoConic *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_cas(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
           withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
           withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, A, f);
  return self;
}

- (void)cas {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_cas(self);
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)a2
                    withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)geoConic {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(self, cons, label, a2, geoConic);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                    withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)geoConic {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(self, cons, A, geoConic);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CurvatureVector();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, A_);
  if (gc_ != nil) {
    IOSObjectArray_Set(input_, 1, gc_);
  }
  else {
    IOSObjectArray_Set(input_, 1, f_);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:v_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoVector *)getVector {
  return v_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS_];
  [((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(f_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS_];
  [A_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS2_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCAS2_];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(f_);
  RELEASE_(f1_);
  RELEASE_(f2_);
  RELEASE_(v_);
  RELEASE_(f1eval_);
  RELEASE_(f2eval_);
  RELEASE_(algoCAS_);
  RELEASE_(algoCAS2_);
  RELEASE_(gc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoCurveCartesian:", "AlgoCurvatureVectorCurve", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoCurveCartesian:", "AlgoCurvatureVectorCurve", NULL, 0x0, NULL, NULL },
    { "cas", NULL, "V", 0x2, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoConic:", "AlgoCurvatureVectorCurve", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoConic:", "AlgoCurvatureVectorCurve", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getVector", NULL, "Lorg.geogebra.common.kernel.geos.GeoVector;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "f1_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "f2_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "f1eval_", NULL, 0x2, "[D", NULL, NULL,  },
    { "f2eval_", NULL, 0x2, "[D", NULL, NULL,  },
    { "algoCAS_", NULL, 0x0, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCAS2_", NULL, 0x0, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "gc_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve = { 2, "AlgoCurvatureVectorCurve", "org.geogebra.common.kernel.advanced", NULL, 0x1, 10, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoCurveCartesian *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, A, f);
  if (label != nil) {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setLabelWithNSString:label];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setLabelWithNSString:@"cv"];
  }
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoCurveCartesian *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoCurveCartesian *f) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_f1eval_(self, [IOSDoubleArray newArrayWithLength:2]);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_f2eval_(self, [IOSDoubleArray newArrayWithLength:2]);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_set_f_(self, f);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_v_(self, new_OrgGeogebraCommonKernelGeosGeoVector_initWithOrgGeogebraCommonKernelConstruction_(cons));
  @try {
    [self->v_ setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:A];
  }
  @catch (OrgGeogebraCommonKernelCircularDefinitionException *e) {
  }
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_cas(self);
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoCurveCartesian *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_cas(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_algoCAS_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(self->cons_, self->f_, YES));
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCAS_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_set_f1_(self, (OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast([self->algoCAS_ getResult], [OrgGeogebraCommonKernelGeosGeoCurveCartesian class]));
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_algoCAS2_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(self->cons_, self->f1_, YES));
  [self->cons_ removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCAS2_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_set_f2_(self, (OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast([self->algoCAS2_ getResult], [OrgGeogebraCommonKernelGeosGeoCurveCartesian class]));
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *a2, OrgGeogebraCommonKernelGeosGeoConic *geoConic) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(self, cons, a2, geoConic);
  if (label != nil) {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setLabelWithNSString:label];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setLabelWithNSString:@"cv"];
  }
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *a2, OrgGeogebraCommonKernelGeosGeoConic *geoConic) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(self, cons, label, a2, geoConic);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoConic *geoConic) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_f1eval_(self, [IOSDoubleArray newArrayWithLength:2]);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_f2eval_(self, [IOSDoubleArray newArrayWithLength:2]);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_set_gc_(self, geoConic);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_f_(self, new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->gc_)) toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:self->f_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_v_(self, new_OrgGeogebraCommonKernelGeosGeoVector_initWithOrgGeogebraCommonKernelConstruction_(cons));
  @try {
    [self->v_ setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:A];
  }
  @catch (OrgGeogebraCommonKernelCircularDefinitionException *e) {
  }
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_cas(self);
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoConic *geoConic) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoConic_(self, cons, A, geoConic);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve *self) {
  @try {
    jdouble t2, t4, x, y, evals, tvalue;
    if (self->gc_ != nil) {
      OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_setAndConsume_f_(self, new_OrgGeogebraCommonKernelGeosGeoCurveCartesian_initWithOrgGeogebraCommonKernelConstruction_(self->cons_));
      [self->gc_ toGeoCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:self->f_];
      OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve_cas(self);
    }
    tvalue = [self->f_ getClosestParameterWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_ withDouble:[((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->f_)) getMinParameter]];
    [((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->f1_)) evaluateCurveWithDouble:tvalue withDoubleArray:self->f1eval_];
    [((OrgGeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->f2_)) evaluateCurveWithDouble:tvalue withDoubleArray:self->f2eval_];
    t2 = IOSDoubleArray_Get(nil_chk(self->f1eval_), 0) * IOSDoubleArray_Get(self->f1eval_, 0) + IOSDoubleArray_Get(self->f1eval_, 1) * IOSDoubleArray_Get(self->f1eval_, 1);
    t4 = t2 * t2;
    evals = IOSDoubleArray_Get(self->f1eval_, 0) * IOSDoubleArray_Get(nil_chk(self->f2eval_), 1) - IOSDoubleArray_Get(self->f2eval_, 0) * IOSDoubleArray_Get(self->f1eval_, 1);
    x = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->A_))->inhomX_ + ((evals / t4) * (-IOSDoubleArray_Get(self->f1eval_, 1)));
    y = self->A_->inhomY_ + ((evals / t4) * IOSDoubleArray_Get(self->f1eval_, 0));
    ((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_))->x_ = x - self->A_->inhomX_;
    self->v_->y_ = y - self->A_->inhomY_;
    self->v_->z_ = 0.0;
  }
  @catch (JavaLangException *e) {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve)
