//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/advanced/AlgoCurvatureSurface.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvatureSurface.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/cas/AlgoDerivative.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionNVar.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> A_;
  OrgGeogebraCommonKernelGeosGeoFunctionNVar *f_;
  OrgGeogebraCommonKernelGeosGeoFunctionNVar *fx_, *fxx_, *fy_, *fyy_, *fxy_;
  OrgGeogebraCommonKernelGeosGeoNumeric *n_;
  OrgGeogebraCommonKernelCasAlgoDerivative *algoCASfx_, *algoCASfxx_, *algoCASfy_, *algoCASfyy_, *algoCASfxy_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, A_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, f_, OrgGeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, fx_, OrgGeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, fxx_, OrgGeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, fy_, OrgGeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, fyy_, OrgGeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, fxy_, OrgGeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, n_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfx_, OrgGeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfxx_, OrgGeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfy_, OrgGeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfyy_, OrgGeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface, algoCASfxy_, OrgGeogebraCommonKernelCasAlgoDerivative *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
             withOrgGeogebraCommonKernelGeosGeoFunctionNVar:(OrgGeogebraCommonKernelGeosGeoFunctionNVar *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
             withOrgGeogebraCommonKernelGeosGeoFunctionNVar:(OrgGeogebraCommonKernelGeosGeoFunctionNVar *)f {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, A, f);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Curvature();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, f_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:n_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return n_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfx_];
  [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(f_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfx_];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfxx_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfxx_];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfy_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfy_];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfyy_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfyy_];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfxy_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algoCASfxy_];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(f_);
  RELEASE_(fx_);
  RELEASE_(fxx_);
  RELEASE_(fy_);
  RELEASE_(fyy_);
  RELEASE_(fxy_);
  RELEASE_(n_);
  RELEASE_(algoCASfx_);
  RELEASE_(algoCASfxx_);
  RELEASE_(algoCASfy_);
  RELEASE_(algoCASfyy_);
  RELEASE_(algoCASfxy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoFunctionNVar:", "AlgoCurvatureSurface", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoFunctionNVar:", "AlgoCurvatureSurface", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fx_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fxx_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fy_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fyy_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "fxy_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "algoCASfx_", NULL, 0x2, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfxx_", NULL, 0x2, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfy_", NULL, 0x2, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfyy_", NULL, 0x2, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "algoCASfxy_", NULL, 0x2, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface = { 2, "AlgoCurvatureSurface", "org.geogebra.common.kernel.advanced", NULL, 0x1, 7, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelGeosGeoFunctionNVar *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, A, f);
  if (label != nil) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_)) setLabelWithNSString:label];
  }
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelGeosGeoFunctionNVar *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, label, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelGeosGeoFunctionNVar *f) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_A_(self, A);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_f_(self, f);
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_n_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  IOSObjectArray *vars = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(f)) getFunctionVariables];
  if (((IOSObjectArray *) nil_chk(vars))->size_ != 2) {
    return;
  }
  OrgGeogebraCommonKernelGeosGeoNumeric *x = [new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  [x setLocalVariableLabelWithNSString:[((OrgGeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(vars, 0))) getSetVarString]];
  OrgGeogebraCommonKernelGeosGeoNumeric *y = [new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  [y setLocalVariableLabelWithNSString:[((OrgGeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(vars, 1))) getSetVarString]];
  OrgGeogebraCommonKernelArithmeticMyDouble *one = [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, 1) autorelease];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfx_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, f, x, one, NO));
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCASfx_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fx_(self, (OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfx_ getResult], [OrgGeogebraCommonKernelGeosGeoFunctionNVar class]));
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfxx_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, self->fx_, x, one, NO));
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCASfxx_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fxx_(self, (OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfxx_ getResult], [OrgGeogebraCommonKernelGeosGeoFunctionNVar class]));
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfy_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, f, y, one, NO));
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCASfy_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fy_(self, (OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfy_ getResult], [OrgGeogebraCommonKernelGeosGeoFunctionNVar class]));
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfyy_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, self->fy_, y, one, NO));
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCASfyy_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fyy_(self, (OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfyy_ getResult], [OrgGeogebraCommonKernelGeosGeoFunctionNVar class]));
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_setAndConsume_algoCASfxy_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelArithmeticNumberValue_withBoolean_(cons, self->fx_, y, one, NO));
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algoCASfxy_];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_set_fxy_(self, (OrgGeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([self->algoCASfxy_ getResult], [OrgGeogebraCommonKernelGeosGeoFunctionNVar class]));
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, OrgGeogebraCommonKernelGeosGeoFunctionNVar *f) {
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *self = [OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface alloc];
  OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface_compute(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface *self) {
  if (![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->A_)) isFinite] || self->fx_ == nil || self->fxx_ == nil || self->fy_ == nil || self->fyy_ == nil || self->fxy_ == nil) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_)) setUndefined];
    return;
  }
  jdouble x = [self->A_ getInhomX];
  jdouble y = [self->A_ getInhomY];
  IOSDoubleArray *xy = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ x, y } count:2];
  jdouble fxEval = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fx_)) evaluateWithDoubleArray:xy];
  jdouble fyEval = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fy_)) evaluateWithDoubleArray:xy];
  jdouble fxxEval = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fxx_)) evaluateWithDoubleArray:xy];
  jdouble fyyEval = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fyy_)) evaluateWithDoubleArray:xy];
  jdouble fxyEval = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->fxy_)) evaluateWithDoubleArray:xy];
  jdouble top = (fxxEval * fyyEval - fxyEval * fxyEval);
  jdouble bottomSqrt = 1 + fxEval * fxEval + fyEval * fyEval;
  jdouble k = top / (bottomSqrt * bottomSqrt);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_)) setValueWithDouble:k];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoCurvatureSurface)
