//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/AlgoConstructionStep.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/advanced/AlgoConstructionStep.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_compute(OrgGeogebraCommonKernelAdvancedAlgoConstructionStep *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoConstructionStep

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label {
  OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ConstructionStep();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:num_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return num_;
}

- (jboolean)wantsConstructionProtocolUpdate {
  return YES;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:", "AlgoConstructionStep", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "wantsConstructionProtocolUpdate", NULL, "Z", 0x11, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "num_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoConstructionStep = { 2, "AlgoConstructionStep", "org.geogebra.common.kernel.advanced", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoConstructionStep;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelAdvancedAlgoConstructionStep *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->num_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_compute(self);
  [self->num_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoConstructionStep *new_OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_initWithOrgGeogebraCommonKernelConstruction_withNSString_(OrgGeogebraCommonKernelConstruction *cons, NSString *label) {
  OrgGeogebraCommonKernelAdvancedAlgoConstructionStep *self = [OrgGeogebraCommonKernelAdvancedAlgoConstructionStep alloc];
  OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_initWithOrgGeogebraCommonKernelConstruction_withNSString_(self, cons, label);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoConstructionStep_compute(OrgGeogebraCommonKernelAdvancedAlgoConstructionStep *self) {
  jdouble step = [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) getStep];
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setValueWithDouble:step + 1];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoConstructionStep)
