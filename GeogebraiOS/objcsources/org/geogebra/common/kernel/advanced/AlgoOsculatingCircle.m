//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/AlgoOsculatingCircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvature.h"
#include "org/geogebra/common/kernel/advanced/AlgoCurvatureVector.h"
#include "org/geogebra/common/kernel/advanced/AlgoOsculatingCircle.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *A_, *R_;
  OrgGeogebraCommonKernelGeosGeoFunction *f_;
  OrgGeogebraCommonKernelGeosGeoVector *v_;
  OrgGeogebraCommonKernelGeosGeoNumeric *curv_;
  OrgGeogebraCommonKernelGeosGeoConic *circle_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle, A_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle, R_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle, f_, OrgGeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle, v_, OrgGeogebraCommonKernelGeosGeoVector *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle, curv_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle, circle_, OrgGeogebraCommonKernelGeosGeoConic *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, label, A, f);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                 withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)f {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_OsculatingCircle();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, A_);
  (void) IOSObjectArray_Set(input_, 1, f_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:circle_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoConic *)getCircle {
  return circle_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(f_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algo_];
  [f_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:cv_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A_)) removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algo_];
  [A_ removeAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:cv_];
  [((OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector *) nil_chk(cv_)) remove];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoOsculatingCircle", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoFunction:", "AlgoOsculatingCircle", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCircle", NULL, "Lorg.geogebra.common.kernel.geos.GeoConic;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "R_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "curv_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "circle_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "algo_", NULL, 0x0, "Lorg.geogebra.common.kernel.advanced.AlgoCurvature;", NULL, NULL,  },
    { "cv_", NULL, 0x0, "Lorg.geogebra.common.kernel.advanced.AlgoCurvatureVector;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle = { 2, "AlgoOsculatingCircle", "org.geogebra.common.kernel.advanced", NULL, 0x1, 7, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  (void) OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *new_OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *self = [OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle alloc];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, label, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->A_ = A;
  self->f_ = f;
  self->R_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons);
  self->circle_ = new_OrgGeogebraCommonKernelGeosGeoConic_initWithOrgGeogebraCommonKernelConstruction_(cons);
  self->algo_ = new_OrgGeogebraCommonKernelAdvancedAlgoCurvature_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoFunction_(cons, A, f);
  self->cv_ = new_OrgGeogebraCommonKernelAdvancedAlgoCurvatureVector_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(cons, A, f);
  self->curv_ = [self->algo_ getResult];
  self->v_ = [self->cv_ getVector];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->algo_];
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->cv_];
  [cons removeFromAlgorithmListWithOrgGeogebraCommonKernelAlgosAlgoElement:self->algo_];
  [cons removeFromAlgorithmListWithOrgGeogebraCommonKernelAlgosAlgoElement:self->cv_];
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(self);
}

OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *new_OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoFunction *f) {
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *self = [OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle alloc];
  OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoFunction_(self, cons, A, f);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle_compute(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle *self) {
  if (![((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->A_ withDouble:OrgGeogebraCommonKernelKernel_MIN_PRECISION]) {
    [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setUndefined];
    return;
  }
  jdouble radius = 1 / JavaLangMath_absWithDouble_([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->curv_)) getValue]);
  jdouble r2 = radius * radius;
  jdouble x = r2 * ((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_))->x_;
  jdouble y = r2 * self->v_->y_;
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->R_)) setCoordsWithDouble:((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->A_))->inhomX_ + x withDouble:self->A_->inhomY_ + y withDouble:1.0];
  [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(self->circle_)) setCircleWithOrgGeogebraCommonKernelGeosGeoPoint:self->R_ withOrgGeogebraCommonKernelGeosGeoPoint:self->A_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoOsculatingCircle)
