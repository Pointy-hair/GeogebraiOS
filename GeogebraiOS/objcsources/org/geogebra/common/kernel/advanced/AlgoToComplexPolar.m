//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/advanced/AlgoToComplexPolar.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/advanced/AlgoToComplexPolar.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/arithmetic/VectorValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar () {
 @public
  jint coordStyle_;
  OrgGeogebraCommonKernelGeosGeoPoint *inPoint_;
  OrgGeogebraCommonKernelGeosGeoVector *inVector_;
  OrgGeogebraCommonKernelGeosGeoPoint *outPoint_;
  OrgGeogebraCommonKernelGeosGeoList *inList_;
  OrgGeogebraCommonKernelGeosGeoVector *outVector_;
}

- (void)init__WithInt:(jint)coordStyle1
withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)outArg
         withNSString:(NSString *)label OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar, inPoint_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar, inVector_, OrgGeogebraCommonKernelGeosGeoVector *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar, outPoint_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar, inList_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar, outVector_, OrgGeogebraCommonKernelGeosGeoVector *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self, jint coordStyle1, OrgGeogebraCommonKernelGeosGeoElement *outArg, NSString *label);

@implementation OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)geoPoint
                                                    withInt:(jint)coordStyle {
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, geoPoint, coordStyle);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList
                                                    withInt:(jint)coordStyle {
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoList, coordStyle);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                   withOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *)geoVector
                                                    withInt:(jint)coordStyle {
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withInt_(self, cons, label, geoVector, coordStyle);
  return self;
}

- (void)init__WithInt:(jint)coordStyle1
withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)outArg
         withNSString:(NSString *)label {
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle1, outArg, label);
}

- (void)setInputOutput {
  if (inVector_ != nil) {
    [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:outVector_];
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithObjects:(id[]){ inVector_ } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  }
  else {
    [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:outPoint_];
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithObjects:(id[]){ inPoint_ == nil ? inList_ : inPoint_ } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  }
  [self setDependencies];
}

- (void)compute {
  if (inPoint_ != nil) {
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(outPoint_)) setWithOrgGeogebraCommonKernelGeosGeoElement:inPoint_];
    [outPoint_ setModeWithInt:coordStyle_];
    return;
  }
  if (inVector_ != nil) {
    [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(outVector_)) setWithOrgGeogebraCommonKernelGeosGeoElement:inVector_];
    [outVector_ setModeWithInt:coordStyle_];
    return;
  }
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(outPoint_)) setCoordsWithDouble:[((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(inList_)) getWithInt:0], @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([inList_ getWithInt:1], @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble] withDouble:1];
  [outPoint_ setModeWithInt:coordStyle_];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch (coordStyle_) {
    case OrgGeogebraCommonKernelKernel_COORD_COMPLEX:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ToComplex();
    case OrgGeogebraCommonKernelKernel_COORD_POLAR:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ToPolar();
    default:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ToPoint();
  }
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResult {
  return inVector_ == nil ? outPoint_ : outVector_;
}

- (void)dealloc {
  RELEASE_(inPoint_);
  RELEASE_(inVector_);
  RELEASE_(outPoint_);
  RELEASE_(inList_);
  RELEASE_(outVector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoToComplexPolar", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withInt:", "AlgoToComplexPolar", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoVector:withInt:", "AlgoToComplexPolar", NULL, 0x1, NULL, NULL },
    { "init__WithInt:withOrgGeogebraCommonKernelGeosGeoElement:withNSString:", "init", "V", 0x2, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coordStyle_", NULL, 0x2, "I", NULL, NULL,  },
    { "inPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "inVector_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "outPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "inList_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "outVector_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar = { 2, "AlgoToComplexPolar", "org.geogebra.common.kernel.advanced", NULL, 0x1, 8, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *geoPoint, jint coordStyle) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_set_inPoint_(self, geoPoint);
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_setAndConsume_outPoint_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle, self->outPoint_, label);
}

OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *new_OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *geoPoint, jint coordStyle) {
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self = [OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar alloc];
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, geoPoint, coordStyle);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withInt_(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList, jint coordStyle) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_set_inList_(self, geoList);
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_setAndConsume_outPoint_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle, self->outPoint_, label);
}

OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *new_OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList, jint coordStyle) {
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self = [OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar alloc];
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoList, coordStyle);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withInt_(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoVector *geoVector, jint coordStyle) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_set_inVector_(self, geoVector);
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_setAndConsume_outVector_(self, new_OrgGeogebraCommonKernelGeosGeoVector_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle, self->outVector_, label);
}

OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *new_OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoVector *geoVector, jint coordStyle) {
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self = [OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar alloc];
  OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoVector_withInt_(self, cons, label, geoVector, coordStyle);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar *self, jint coordStyle1, OrgGeogebraCommonKernelGeosGeoElement *outArg, NSString *label) {
  self->coordStyle_ = coordStyle1;
  [self setInputOutput];
  [self compute];
  [((id<OrgGeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(outArg, @protocol(OrgGeogebraCommonKernelArithmeticVectorValue))))) setModeWithInt:coordStyle1];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(outArg)) setLabelWithNSString:label];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoToComplexPolar)
