//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/AlgoTextElement.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/advanced/AlgoTextElement.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoTextElement () {
 @public
  OrgGeogebraCommonKernelGeosGeoText *text_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> num_;
  OrgGeogebraCommonKernelGeosGeoElement *numGeo_;
  OrgGeogebraCommonKernelGeosGeoText *textOut_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoTextElement, text_, OrgGeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoTextElement, num_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoTextElement, numGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoTextElement, textOut_, OrgGeogebraCommonKernelGeosGeoText *)

__attribute__((unused)) static void OrgGeogebraCommonKernelAdvancedAlgoTextElement_compute(OrgGeogebraCommonKernelAdvancedAlgoTextElement *self);

@implementation OrgGeogebraCommonKernelAdvancedAlgoTextElement

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)text
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)num {
  OrgGeogebraCommonKernelAdvancedAlgoTextElement_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, text, num);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Element();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, text_);
  (void) IOSObjectArray_Set(input_, 1, numGeo_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:textOut_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoText *)getText {
  return text_;
}

- (void)compute {
  OrgGeogebraCommonKernelAdvancedAlgoTextElement_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoTextElement", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getText", NULL, "Lorg.geogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "text_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "numGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "textOut_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoTextElement = { 2, "AlgoTextElement", "org.geogebra.common.kernel.advanced", NULL, 0x1, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoTextElement;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoTextElement_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelAdvancedAlgoTextElement *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *text, id<OrgGeogebraCommonKernelArithmeticNumberValue> num) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->num_ = nil;
  self->text_ = text;
  self->num_ = num;
  self->numGeo_ = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(num)) toGeoElement];
  self->textOut_ = new_OrgGeogebraCommonKernelGeosGeoText_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self->textOut_ setIsTextCommandWithBoolean:YES];
  [self setInputOutput];
  OrgGeogebraCommonKernelAdvancedAlgoTextElement_compute(self);
  [self->textOut_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoTextElement *new_OrgGeogebraCommonKernelAdvancedAlgoTextElement_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoText *text, id<OrgGeogebraCommonKernelArithmeticNumberValue> num) {
  OrgGeogebraCommonKernelAdvancedAlgoTextElement *self = [OrgGeogebraCommonKernelAdvancedAlgoTextElement alloc];
  OrgGeogebraCommonKernelAdvancedAlgoTextElement_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoText_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, text, num);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoTextElement_compute(OrgGeogebraCommonKernelAdvancedAlgoTextElement *self) {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->numGeo_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->textOut_)) setUndefined];
    return;
  }
  NSString *str = [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) getTextString];
  jint n = J2ObjCFpToInt([((OrgGeogebraCommonKernelArithmeticMyDouble *) nil_chk([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->num_)) getNumber])) getDouble]);
  if (n < 1 || n > ((jint) [((NSString *) nil_chk(str)) length])) {
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->textOut_)) setUndefined];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->textOut_)) setTextStringWithNSString:JreStrcat("C", [str charAtWithInt:n - 1])];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoTextElement)
