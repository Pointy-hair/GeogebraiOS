//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/advanced/AlgoScientificText.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/advanced/AlgoScientificText.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"

@interface OrgGeogebraCommonKernelAdvancedAlgoScientificText () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *num_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> precision_;
  OrgGeogebraCommonKernelGeosGeoText *text_;
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoScientificText, num_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoScientificText, precision_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoScientificText, text_, OrgGeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelAdvancedAlgoScientificText, sb_, JavaLangStringBuilder *)

@implementation OrgGeogebraCommonKernelAdvancedAlgoScientificText

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)num
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)precision {
  OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, num, precision);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)num
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)precision {
  OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, num, precision);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ScientificText();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:precision_ == nil ? 1 : 2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, num_);
  if (precision_ != nil) {
    (void) IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(precision_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoText *)getResult {
  return text_;
}

- (void)compute {
  jboolean rounding = precision_ != nil;
  if ([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(num_)) isDefined] && (precision_ == nil || [precision_ isDefined])) {
    [((JavaLangStringBuilder *) nil_chk(sb_)) setLengthWithInt:0];
    jdouble decimal = [num_ getDouble];
    jint prec = precision_ == nil ? 15 : J2ObjCFpToInt([precision_ getDouble]);
    if (prec < 1 || prec > 15) {
      [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text_)) setUndefined];
      return;
    }
    OrgGeogebraCommonKernelStringTemplate *stl = OrgGeogebraCommonKernelStringTemplate_printScientificWithOrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_withInt_withBoolean_(OrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_GEOGEBRA(), prec, NO);
    NSString *str = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:decimal withOrgGeogebraCommonKernelStringTemplate:stl];
    IOSObjectArray *strs = [((NSString *) nil_chk(str)) split:@"E"];
    if (((IOSObjectArray *) nil_chk(strs))->size_ != 2) {
      [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text_)) setUndefined];
      return;
    }
    (void) [sb_ appendWithNSString:IOSObjectArray_Get(strs, 0)];
    if (!rounding) {
      while ([sb_ charAtWithInt:[sb_ length] - 1] == '0') {
        [sb_ setLengthWithInt:[sb_ length] - 1];
      }
      if ([sb_ charAtWithInt:[sb_ length] - 1] == '.') {
        [sb_ setLengthWithInt:[sb_ length] - 1];
      }
    }
    jint l = [sb_ length];
    if ([sb_ charAtWithInt:l - 1] == '.') {
      [sb_ setLengthWithInt:l - 1];
    }
    (void) [sb_ appendWithNSString:@" \\times "];
    (void) [sb_ appendWithNSString:@"10"];
    (void) [sb_ appendWithNSString:@"^{"];
    (void) [sb_ appendWithNSString:IOSObjectArray_Get(strs, 1)];
    (void) [sb_ appendWithNSString:@"}"];
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text_)) setTextStringWithNSString:[sb_ description]];
    [text_ setLaTeXWithBoolean:YES withBoolean:NO];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text_)) setUndefined];
  }
}

- (jboolean)isLaTeXTextCommand {
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoScientificText", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoScientificText", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoScientificText", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "isLaTeXTextCommand", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "num_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "precision_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "text_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelAdvancedAlgoScientificText = { 2, "AlgoScientificText", "org.geogebra.common.kernel.advanced", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelAdvancedAlgoScientificText;
}

@end

void OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelAdvancedAlgoScientificText *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *num, OrgGeogebraCommonKernelGeosGeoNumeric *precision) {
  (void) OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, num, precision);
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelAdvancedAlgoScientificText *new_OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *num, OrgGeogebraCommonKernelGeosGeoNumeric *precision) {
  OrgGeogebraCommonKernelAdvancedAlgoScientificText *self = [OrgGeogebraCommonKernelAdvancedAlgoScientificText alloc];
  OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, num, precision);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelAdvancedAlgoScientificText *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoNumeric *num, OrgGeogebraCommonKernelGeosGeoNumeric *precision) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->sb_ = new_JavaLangStringBuilder_init();
  self->num_ = num;
  self->precision_ = precision;
  self->text_ = new_OrgGeogebraCommonKernelGeosGeoText_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self->text_ setIsTextCommandWithBoolean:YES];
  [self->text_ setLaTeXWithBoolean:YES withBoolean:NO];
  [self setInputOutput];
  [self compute];
}

OrgGeogebraCommonKernelAdvancedAlgoScientificText *new_OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoNumeric *num, OrgGeogebraCommonKernelGeosGeoNumeric *precision) {
  OrgGeogebraCommonKernelAdvancedAlgoScientificText *self = [OrgGeogebraCommonKernelAdvancedAlgoScientificText alloc];
  OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, num, precision);
  return self;
}

void OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelAdvancedAlgoScientificText *self, OrgGeogebraCommonKernelConstruction *cons) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->sb_ = new_JavaLangStringBuilder_init();
}

OrgGeogebraCommonKernelAdvancedAlgoScientificText *new_OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelAdvancedAlgoScientificText *self = [OrgGeogebraCommonKernelAdvancedAlgoScientificText alloc];
  OrgGeogebraCommonKernelAdvancedAlgoScientificText_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelAdvancedAlgoScientificText)
