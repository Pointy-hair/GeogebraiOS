//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/statistics/AlgoRandomPoisson.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/statistics/AlgoRandomPoisson.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/util/MyMath2.h"

@interface OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson ()

- (jint)randomPoissonWithDouble:(jdouble)lambda;

- (jint)randomPoissonTRSWithDouble:(jdouble)mu;

+ (jdouble)logOfKFactorialWithInt:(jint)k;

@end

static jdouble OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_halflog2pi_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson, halflog2pi_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson, halflog2pi_, jdouble)

static IOSDoubleArray *OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logtable_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson, logtable_, IOSDoubleArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson, logtable_, IOSDoubleArray *)

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_compute(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self);

__attribute__((unused)) static jint OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self, jdouble lambda);

__attribute__((unused)) static jint OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonTRSWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self, jdouble mu);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logOfKFactorialWithInt_(jint k);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson)

@implementation OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a {
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, a);
  return self;
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a_)) toGeoElement]);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:num_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return num_;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_RandomPoisson();
}

- (void)compute {
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_compute(self);
}

- (jint)randomPoissonWithDouble:(jdouble)lambda {
  return OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonWithDouble_(self, lambda);
}

- (jint)randomPoissonTRSWithDouble:(jdouble)mu {
  return OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonTRSWithDouble_(self, mu);
}

+ (jdouble)logOfKFactorialWithInt:(jint)k {
  return OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logOfKFactorialWithInt_(k);
}

- (void)setRandomValueWithDouble:(jdouble)d {
  d = JavaLangMath_roundWithDouble_(OrgGeogebraCommonKernelKernel_checkIntegerWithDouble_(d));
  if (d >= 0) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(num_)) setValueWithDouble:d];
    [num_ updateRepaint];
  }
}

- (void)dealloc {
  RELEASE_(a_);
  RELEASE_(num_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson class]) {
    OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_halflog2pi_ = 0.5 * JavaLangMath_logWithDouble_(2 * JavaLangMath_PI);
    JreStrongAssignAndConsume(&OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logtable_, nil, [IOSDoubleArray newArrayWithLength:10]);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoRandomPoisson", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "randomPoissonWithDouble:", "randomPoisson", "I", 0x2, NULL, NULL },
    { "randomPoissonTRSWithDouble:", "randomPoissonTRS", "I", 0x2, NULL, NULL },
    { "logOfKFactorialWithInt:", "logOfKFactorial", "D", 0xa, NULL, NULL },
    { "setRandomValueWithDouble:", "setRandomValue", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "a_", NULL, 0x4, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "num_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "halflog2pi_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_halflog2pi_, NULL,  },
    { "logtable_", NULL, 0xa, "[D", &OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logtable_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson = { 2, "AlgoRandomPoisson", "org.geogebra.common.kernel.statistics", NULL, 0x1, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson;
}

@end

void OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_set_a_(self, a);
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_setAndConsume_num_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) addRandomGeoWithOrgGeogebraCommonKernelGeosGeoElement:self->num_];
  [self setInputOutput];
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_compute(self);
  [self->num_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *new_OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> a) {
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self = [OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson alloc];
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, a);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_compute(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self) {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(self->input_), 0))) isDefined]) {
    jdouble lambda = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->a_)) getDouble];
    if (lambda > 0) [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setValueWithDouble:OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonTRSWithDouble_(self, lambda)];
    else [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setUndefined];
  }
  else [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_)) setUndefined];
}

jint OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self, jdouble lambda) {
  jdouble L = JavaLangMath_expWithDouble_(-lambda);
  jdouble p = 1;
  jint k = 0;
  do {
    k++;
    p *= [((OrgGeogebraCommonMainApp *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication])) getRandomNumber];
  }
  while (p >= L);
  return k - 1;
}

jint OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonTRSWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson *self, jdouble mu) {
  if (mu < 10) return OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_randomPoissonWithDouble_(self, mu);
  jdouble b = 0.931 + +2.53 * JavaLangMath_sqrtWithDouble_(mu);
  jdouble a = -0.059 + 0.02438 * b;
  jdouble v_r = 0.9277 - 3.6224 / (b - 2);
  jdouble us = 0;
  jdouble v = 1;
  while (YES) {
    jint k = -1;
    while (k < 0 || (us < 0.013 && v > us)) {
      jdouble u = [((OrgGeogebraCommonMainApp *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getApplication])) getRandomNumber] - 0.5;
      v = [((OrgGeogebraCommonMainApp *) nil_chk([self->kernel_ getApplication])) getRandomNumber];
      us = 0.5 - JavaLangMath_absWithDouble_(u);
      k = J2ObjCFpToInt(JavaLangMath_floorWithDouble_((2 * a / us + b) * u + mu + 0.43));
      if (us >= 0.07 && v < v_r) return k;
    }
    jdouble alpha = 1.1239 + 1.1328 / (b - 3.4);
    jdouble lnmu = JavaLangMath_logWithDouble_(mu);
    v = v * alpha / (a / (us * us) + b);
    if (JavaLangMath_logWithDouble_(v * alpha / (a / us / us + b)) <= -mu + k * lnmu - OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logOfKFactorialWithInt_(k)) return k;
  }
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logOfKFactorialWithInt_(jint k) {
  OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_initialize();
  if (k < 10) {
    if (IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logtable_), k) == 0) *IOSDoubleArray_GetRef(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logtable_, k) = JavaLangMath_logWithDouble_(OrgGeogebraCommonUtilMyMath2_factorialWithDouble_(k));
    return IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_logtable_, k);
  }
  return OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson_halflog2pi_ + (k + 0.5) * JavaLangMath_logWithDouble_(k + 1) - (k + 1) + (1 / 12.0 - (1 / 360.0 - 1 / 1260.0 / (k + 1) / (k + 1)) / (k + 1) / (k + 1)) / (k + 1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelStatisticsAlgoRandomPoisson)
