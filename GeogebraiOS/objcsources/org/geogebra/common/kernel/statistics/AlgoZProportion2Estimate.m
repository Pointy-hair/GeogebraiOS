//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/statistics/AlgoZProportion2Estimate.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "org/apache/commons/math/distribution/NormalDistributionImpl.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/statistics/AlgoZProportion2Estimate.h"

@interface OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *proportion_, *n_, *proportion2_, *n_2_, *level_;
  OrgGeogebraCommonKernelGeosGeoList *result_;
  jdouble se_;
  jdouble me_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate, proportion_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate, n_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate, proportion2_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate, n_2_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate, level_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate, result_, OrgGeogebraCommonKernelGeosGeoList *)

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_compute(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *self);

@implementation OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)proportion
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)proportion2
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n_2
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)level {
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, proportion, n, proportion2, n_2, level);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)proportion
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)proportion2
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n_2
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)level {
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, proportion, n, proportion2, n_2, level);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ZProportion2Estimate();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:5 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, proportion_);
  (void) IOSObjectArray_Set(input_, 1, n_);
  (void) IOSObjectArray_Set(input_, 2, proportion2_);
  (void) IOSObjectArray_Set(input_, 3, n_2_);
  (void) IOSObjectArray_Set(input_, 4, level_);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:result_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoList *)getResult {
  return result_;
}

- (jdouble)getME {
  return me_;
}

- (jdouble)getSE {
  return se_;
}

- (void)compute {
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoZProportion2Estimate", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoZProportion2Estimate", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "getME", NULL, "D", 0x1, NULL, NULL },
    { "getSE", NULL, "D", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "proportion_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "proportion2_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "n_2_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "level_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "result_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "se_", NULL, 0x2, "D", NULL, NULL,  },
    { "me_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate = { 2, "AlgoZProportion2Estimate", "org.geogebra.common.kernel.statistics", NULL, 0x1, 8, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate;
}

@end

void OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *proportion, OrgGeogebraCommonKernelGeosGeoNumeric *n, OrgGeogebraCommonKernelGeosGeoNumeric *proportion2, OrgGeogebraCommonKernelGeosGeoNumeric *n_2, OrgGeogebraCommonKernelGeosGeoNumeric *level) {
  (void) OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, proportion, n, proportion2, n_2, level);
  [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *new_OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *proportion, OrgGeogebraCommonKernelGeosGeoNumeric *n, OrgGeogebraCommonKernelGeosGeoNumeric *proportion2, OrgGeogebraCommonKernelGeosGeoNumeric *n_2, OrgGeogebraCommonKernelGeosGeoNumeric *level) {
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *self = [OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate alloc];
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, proportion, n, proportion2, n_2, level);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoNumeric *proportion, OrgGeogebraCommonKernelGeosGeoNumeric *n, OrgGeogebraCommonKernelGeosGeoNumeric *proportion2, OrgGeogebraCommonKernelGeosGeoNumeric *n_2, OrgGeogebraCommonKernelGeosGeoNumeric *level) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->proportion_ = proportion;
  self->n_ = n;
  self->proportion2_ = proportion2;
  self->n_2_ = n_2;
  self->level_ = level;
  self->result_ = new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_compute(self);
}

OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *new_OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoNumeric *proportion, OrgGeogebraCommonKernelGeosGeoNumeric *n, OrgGeogebraCommonKernelGeosGeoNumeric *proportion2, OrgGeogebraCommonKernelGeosGeoNumeric *n_2, OrgGeogebraCommonKernelGeosGeoNumeric *level) {
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *self = [OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate alloc];
  OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, proportion, n, proportion2, n_2, level);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate_compute(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate *self) {
  jdouble n1 = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_)) getDouble];
  jdouble phat1 = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->proportion_)) getDouble];
  jdouble n2 = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->n_2_)) getDouble];
  jdouble phat2 = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->proportion2_)) getDouble];
  jdouble cLevel = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->level_)) getDouble];
  OrgApacheCommonsMathDistributionNormalDistributionImpl *normalDist = new_OrgApacheCommonsMathDistributionNormalDistributionImpl_initWithDouble_withDouble_(0, 1);
  jdouble critZ = 0;
  @try {
    critZ = [normalDist inverseCumulativeProbabilityWithDouble:(1 - cLevel) / 2];
  }
  @catch (JavaLangException *e) {
    [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) setUndefined];
    return;
  }
  jdouble stat = phat1 - phat2;
  self->se_ = JavaLangMath_sqrtWithDouble_(phat1 * (1 - phat1) / n1 + phat2 * (1 - phat2) / n2);
  jdouble z = JavaLangMath_absWithDouble_(critZ);
  self->me_ = z * self->se_;
  [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) clear];
  [self->result_ addWithOrgGeogebraCommonKernelGeosGeoElement:new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, stat - self->me_)];
  [self->result_ addWithOrgGeogebraCommonKernelGeosGeoElement:new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, stat + self->me_)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelStatisticsAlgoZProportion2Estimate)
