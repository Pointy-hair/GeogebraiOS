//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/statistics/AlgoFitLogistic.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/statistics/AlgoFitLogistic.h"
#include "org/geogebra/common/kernel/statistics/RegressionMath.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/Operation.h"

#define OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_LMFACTORDIV 3.0
#define OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_LMFACTORMULT 2.0
#define OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_MAXITERATIONS 200
#define OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONFIND 1.0E-6
#define OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONREG 1.0E-14
#define OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSSING 1.0E-20

@interface OrgGeogebraCommonKernelStatisticsAlgoFitLogistic () {
 @public
  OrgGeogebraCommonKernelGeosGeoList *geolist_;
  OrgGeogebraCommonKernelGeosGeoFunction *geofunction_;
}

+ (void)doReg;

+ (void)findParameters;

+ (void)Logistic_Reg;

+ (jdouble)fWithDouble:(jdouble)x
            withDouble:(jdouble)a1
            withDouble:(jdouble)b1
            withDouble:(jdouble)c1;

+ (jdouble)fWithDouble:(jdouble)x
            withDouble:(jdouble)k;

+ (jdouble)df_cWithDouble:(jdouble)x
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1;

+ (jdouble)df_aWithDouble:(jdouble)x
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1
               withDouble:(jdouble)c1;

+ (jdouble)df_bWithDouble:(jdouble)x
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1
               withDouble:(jdouble)c1;

+ (jdouble)betaWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1
               withDouble:(jdouble)c1;

+ (jdouble)betaWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)b1;

+ (jdouble)beta2WithDoubleArray:(IOSDoubleArray *)x
                withDoubleArray:(IOSDoubleArray *)y
                     withDouble:(jdouble)a1
                     withDouble:(jdouble)b1
                     withDouble:(jdouble)c1;

+ (jdouble)beta2WithDouble:(jdouble)k1;

+ (jdouble)cWithDouble:(jdouble)cx1
            withDouble:(jdouble)cy1
            withDouble:(jdouble)cx2
            withDouble:(jdouble)cy2
            withDouble:(jdouble)cb;

+ (jdouble)aWithDouble:(jdouble)ax1
            withDouble:(jdouble)ay1
            withDouble:(jdouble)ax2
            withDouble:(jdouble)ay2
            withDouble:(jdouble)ab;

- (void)getPoints;

+ (void)errorMsgWithNSString:(NSString *)s;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, geolist_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, geofunction_, OrgGeogebraCommonKernelGeosGeoFunction *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, LMFACTORDIV, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, LMFACTORMULT, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, MAXITERATIONS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, EPSILONFIND, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, EPSILONREG, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, EPSSING, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, a__, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, a__, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, b_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, b_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, c__, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, c__, jdouble)

static IOSDoubleArray *OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, xd_, IOSDoubleArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, xd_, IOSDoubleArray *)

static IOSDoubleArray *OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, yd_, IOSDoubleArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, yd_, IOSDoubleArray *)

static jint OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, size_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, size_, jint)

static jint OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_iterations_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, iterations_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, iterations_, jint)

static jboolean OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_ = NO;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, error_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, error_, jboolean)

static jboolean OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allplus_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, allplus_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, allplus_, jboolean)

static jboolean OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allneg_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, allneg_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, allneg_, jboolean)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x1_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, x1_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, x1_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, y1_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, y1_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x2_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, x2_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, x2_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, y2_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, y2_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ymult_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, ymult_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, ymult_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e1_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, e1_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, e1_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e2_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, e2_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, e2_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_emult_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, emult_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, emult_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ydiff_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, ydiff_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic, ydiff_, jdouble)

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_compute(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_doReg();

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_findParameters();

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_Logistic_Reg();

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1, jdouble c1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_(jdouble x, jdouble k);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_aWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1, jdouble c1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_bWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1, jdouble c1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble a1, jdouble b1, jdouble c1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble b1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_(IOSDoubleArray *x, IOSDoubleArray *y, jdouble a1, jdouble b1, jdouble c1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDouble_(jdouble k1);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_cWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cb);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_aWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble ax1, jdouble ay1, jdouble ax2, jdouble ay2, jdouble ab);

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_getPoints(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(NSString *s);

@implementation OrgGeogebraCommonKernelStatisticsAlgoFitLogistic

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geolist {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, geolist);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geolist {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, geolist);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_FitLogistic();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, geolist_);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:geofunction_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoFunction *)getFitLogistic {
  return geofunction_;
}

- (void)compute {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_compute(self);
}

+ (void)doReg {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_doReg();
}

+ (void)findParameters {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_findParameters();
}

+ (void)Logistic_Reg {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_Logistic_Reg();
}

+ (jdouble)fWithDouble:(jdouble)x
            withDouble:(jdouble)a1
            withDouble:(jdouble)b1
            withDouble:(jdouble)c1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_withDouble_withDouble_(x, a1, b1, c1);
}

+ (jdouble)fWithDouble:(jdouble)x
            withDouble:(jdouble)k {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_(x, k);
}

+ (jdouble)df_cWithDouble:(jdouble)x
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(x, a1, b1);
}

+ (jdouble)df_aWithDouble:(jdouble)x
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1
               withDouble:(jdouble)c1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_aWithDouble_withDouble_withDouble_withDouble_(x, a1, b1, c1);
}

+ (jdouble)df_bWithDouble:(jdouble)x
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1
               withDouble:(jdouble)c1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_bWithDouble_withDouble_withDouble_withDouble_(x, a1, b1, c1);
}

+ (jdouble)betaWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)a1
               withDouble:(jdouble)b1
               withDouble:(jdouble)c1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_withDouble_withDouble_(x, y, a1, b1, c1);
}

+ (jdouble)betaWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)b1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_(x, y, b1);
}

+ (jdouble)beta2WithDoubleArray:(IOSDoubleArray *)x
                withDoubleArray:(IOSDoubleArray *)y
                     withDouble:(jdouble)a1
                     withDouble:(jdouble)b1
                     withDouble:(jdouble)c1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_(x, y, a1, b1, c1);
}

+ (jdouble)beta2WithDouble:(jdouble)k1 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDouble_(k1);
}

+ (jdouble)cWithDouble:(jdouble)cx1
            withDouble:(jdouble)cy1
            withDouble:(jdouble)cx2
            withDouble:(jdouble)cy2
            withDouble:(jdouble)cb {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_cWithDouble_withDouble_withDouble_withDouble_withDouble_(cx1, cy1, cx2, cy2, cb);
}

+ (jdouble)aWithDouble:(jdouble)ax1
            withDouble:(jdouble)ay1
            withDouble:(jdouble)ax2
            withDouble:(jdouble)ay2
            withDouble:(jdouble)ab {
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_aWithDouble_withDouble_withDouble_withDouble_withDouble_(ax1, ay1, ax2, ay2, ab);
}

- (void)getPoints {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_getPoints(self);
}

+ (void)errorMsgWithNSString:(NSString *)s {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(s);
}

- (IOSDoubleArray *)getCoeffs {
  IOSDoubleArray *ret = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__ } count:3];
  return ret;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoFitLogistic", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoFitLogistic", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getFitLogistic", NULL, "Lorg.geogebra.common.kernel.geos.GeoFunction;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "doReg", NULL, "V", 0x1a, NULL, NULL },
    { "findParameters", NULL, "V", 0x1a, NULL, NULL },
    { "Logistic_Reg", NULL, "V", 0x1a, NULL, NULL },
    { "fWithDouble:withDouble:withDouble:withDouble:", "f", "D", 0x1a, NULL, NULL },
    { "fWithDouble:withDouble:", "f", "D", 0x1a, NULL, NULL },
    { "df_cWithDouble:withDouble:withDouble:", "df_c", "D", 0x1a, NULL, NULL },
    { "df_aWithDouble:withDouble:withDouble:withDouble:", "df_a", "D", 0x1a, NULL, NULL },
    { "df_bWithDouble:withDouble:withDouble:withDouble:", "df_b", "D", 0x1a, NULL, NULL },
    { "betaWithDouble:withDouble:withDouble:withDouble:withDouble:", "beta", "D", 0x1a, NULL, NULL },
    { "betaWithDouble:withDouble:withDouble:", "beta", "D", 0x1a, NULL, NULL },
    { "beta2WithDoubleArray:withDoubleArray:withDouble:withDouble:withDouble:", "beta2", "D", 0x1a, NULL, NULL },
    { "beta2WithDouble:", "beta2", "D", 0x1a, NULL, NULL },
    { "cWithDouble:withDouble:withDouble:withDouble:withDouble:", "c", "D", 0x1a, NULL, NULL },
    { "aWithDouble:withDouble:withDouble:withDouble:withDouble:", "a", "D", 0x1a, NULL, NULL },
    { "getPoints", NULL, "V", 0x12, NULL, NULL },
    { "errorMsgWithNSString:", "errorMsg", "V", 0x1a, NULL, NULL },
    { "getCoeffs", NULL, "[D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LMFACTORDIV_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_LMFACTORDIV },
    { "LMFACTORMULT_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_LMFACTORMULT },
    { "MAXITERATIONS_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_MAXITERATIONS },
    { "EPSILONFIND_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONFIND },
    { "EPSILONREG_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONREG },
    { "EPSSING_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSSING },
    { "a__", "a", 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, NULL,  },
    { "b_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, NULL,  },
    { "c__", "c", 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__, NULL,  },
    { "xd_", NULL, 0xa, "[D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_, NULL,  },
    { "yd_", NULL, 0xa, "[D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_, NULL,  },
    { "size_", NULL, 0xa, "I", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_, NULL,  },
    { "iterations_", NULL, 0xa, "I", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_iterations_, NULL,  },
    { "error_", NULL, 0xa, "Z", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_, NULL,  },
    { "allplus_", NULL, 0xa, "Z", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allplus_, NULL,  },
    { "allneg_", NULL, 0xa, "Z", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allneg_, NULL,  },
    { "geolist_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "geofunction_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "x1_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x1_, NULL,  },
    { "y1_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_, NULL,  },
    { "x2_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x2_, NULL,  },
    { "y2_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_, NULL,  },
    { "ymult_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ymult_, NULL,  },
    { "e1_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e1_, NULL,  },
    { "e2_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e2_, NULL,  },
    { "emult_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_emult_, NULL,  },
    { "ydiff_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ydiff_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelStatisticsAlgoFitLogistic = { 2, "AlgoFitLogistic", "org.geogebra.common.kernel.statistics", NULL, 0x11, 23, methods, 27, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelStatisticsAlgoFitLogistic;
}

@end

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  (void) OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, geolist);
  [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *new_OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self = [OrgGeogebraCommonKernelStatisticsAlgoFitLogistic alloc];
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, geolist);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->geolist_ = geolist;
  self->geofunction_ = new_OrgGeogebraCommonKernelGeosGeoFunction_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_compute(self);
}

OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *new_OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self = [OrgGeogebraCommonKernelStatisticsAlgoFitLogistic alloc];
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, geolist);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_compute(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_ = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geolist_)) size];
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_ = NO;
  if (![self->geolist_ isDefined] || (OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_ < 3)) {
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setUndefined];
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(@"List not properly defined or too small. (3 points needed, but the more points, the better result!)");
    return;
  }
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_getPoints(self);
  @try {
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_doReg();
  }
  @catch (JavaLangException *all) {
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_ = YES;
  }
  if (!OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_) {
    OrgGeogebraCommonKernelArithmeticMyDouble *A = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__);
    OrgGeogebraCommonKernelArithmeticMyDouble *B = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, -OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_);
    OrgGeogebraCommonKernelArithmeticMyDouble *C = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
    OrgGeogebraCommonKernelArithmeticMyDouble *ONE = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, 1.0);
    OrgGeogebraCommonKernelArithmeticFunctionVariable *X = new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self->kernel_);
    id<OrgGeogebraCommonKernelArithmeticExpressionValue> expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, B, OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), X);
    expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, expr, OrgGeogebraCommonPluginOperationEnum_get_EXP(), nil);
    expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, A, OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), expr);
    expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, ONE, OrgGeogebraCommonPluginOperationEnum_get_PLUS(), expr);
    OrgGeogebraCommonKernelArithmeticExpressionNode *node = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, C, OrgGeogebraCommonPluginOperationEnum_get_DIVIDE(), expr);
    OrgGeogebraCommonKernelArithmeticFunction *f = new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_(node, X);
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:f];
    [self->geofunction_ setDefinedWithBoolean:YES];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setUndefined];
    return;
  }
}

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_doReg() {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_findParameters();
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_Logistic_Reg();
}

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_findParameters() {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  jdouble err, err_old;
  jdouble lambda = 0.01;
  jint sign = 1;
  jdouble k = 0.001;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x1_ = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_), 0);
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_ = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_), 0);
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x2_ = IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_ - 1);
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_ = IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_ - 1);
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ymult_ = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_ * OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e1_ = JavaLangMath_expWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x1_);
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e2_ = JavaLangMath_expWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x2_);
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_emult_ = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e1_ * OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e2_;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ydiff_ = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_ - OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_;
  jboolean increasing;
  if (OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_ < OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_) {
    increasing = YES;
  }
  else {
    increasing = NO;
  }
  if (OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allplus_) {
    if (!increasing) {
      sign = -1;
      k = -k;
    }
  }
  else if (OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allneg_) {
    if (increasing) {
      sign = -1;
      k = -k;
    }
  }
  else {
    if (JavaLangMath_absWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_) < JavaLangMath_absWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_)) {
      sign = -1;
      k = -k;
    }
  }
  err_old = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDouble_(k);
  k = k + sign * lambda;
  err = err_old + 1;
  while (JavaLangMath_absWithDouble_(err - err_old) > OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONFIND) {
    err = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDouble_(k);
    if (err < err_old) {
      lambda = lambda * 5;
      err_old = err;
      err = err + 1;
    }
    else {
      k = k - sign * lambda;
      lambda = lambda / 5;
    }
    k += sign * lambda;
  }
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_ = k;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__ = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_aWithDouble_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x1_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x2_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_, k);
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__ = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_cWithDouble_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x1_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_x2_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_, k);
  if (JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__) || JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_) || JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__)) {
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_ = YES;
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(@"findParameters(): a,b or c undefined");
    return;
  }
}

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_Logistic_Reg() {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  jdouble lambda = 0.0;
  jdouble multfaktor = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_LMFACTORMULT;
  jdouble residual, old_residual = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
  jdouble da = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONREG, db = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONREG, dc = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONREG;
  jdouble b1, b2, b3;
  jdouble m11, m12, m13, m21, m22, m23, m31, m32, m33, n;
  jdouble x, y;
  jdouble dfa, dfb, dfc, beta, newa, newb, newc;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_iterations_ = 0;
  b1 = b2 = b3 = 0.0;
  m11 = m22 = m33 = 0.0;
  for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_; i++) {
    x = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_), i);
    y = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_), i);
    beta = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_withDouble_withDouble_(x, y, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
    dfa = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_aWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
    dfb = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_bWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
    dfc = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_);
    b1 += beta * dfa;
    b2 += beta * dfb;
    b3 += beta * dfc;
    m11 += dfa * dfa;
    m22 += dfb * dfb;
    m33 += dfc * dfc;
  }
  jdouble startfaktor = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(m11, m22), m33);
  lambda = startfaktor * 0.001;
  while (JavaLangMath_absWithDouble_(da) + JavaLangMath_absWithDouble_(db) + JavaLangMath_absWithDouble_(dc) > OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSILONREG) {
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_iterations_++;
    if ((OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_iterations_ > OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_MAXITERATIONS) || (OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_)) {
      OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(JreStrcat("$I$", @"More than ", OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_MAXITERATIONS, @" iterations. Solution is probably not usable."));
      break;
    }
    b1 = b2 = b3 = 0.0;
    m11 = m12 = m13 = m21 = m22 = m23 = m31 = m32 = m33 = 0.0;
    for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_; i++) {
      x = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_), i);
      y = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_), i);
      beta = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_withDouble_withDouble_(x, y, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
      dfa = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_aWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
      dfb = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_bWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__);
      dfc = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_);
      b1 += beta * dfa;
      b2 += beta * dfb;
      b3 += beta * dfc;
      m11 += dfa * dfa + lambda;
      m12 += dfa * dfb;
      m13 += dfa * dfc;
      m22 += dfb * dfb + lambda;
      m23 += dfb * dfc;
      m33 += dfc * dfc + lambda;
    }
    m21 = m12;
    m31 = m13;
    m32 = m23;
    n = OrgGeogebraCommonKernelStatisticsRegressionMath_det33WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(m11, m12, m13, m21, m22, m23, m31, m32, m33);
    if (JavaLangMath_absWithDouble_(n) < OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_EPSSING) {
      OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_ = YES;
      OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(@"Singular matrix...");
      da = db = dc = 0.0;
    }
    else {
      da = OrgGeogebraCommonKernelStatisticsRegressionMath_det33WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(b1, m12, m13, b2, m22, m23, b3, m32, m33) / n;
      db = OrgGeogebraCommonKernelStatisticsRegressionMath_det33WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(m11, b1, m13, m21, b2, m23, m31, b3, m33) / n;
      dc = OrgGeogebraCommonKernelStatisticsRegressionMath_det33WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(m11, m12, b1, m21, m22, b2, m31, m32, b3) / n;
      newa = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__ + da;
      newb = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_ + db;
      newc = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__ + dc;
      residual = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_, newa, newb, newc);
      if (residual < old_residual) {
        lambda = lambda / OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_LMFACTORDIV;
        old_residual = residual;
        multfaktor = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_LMFACTORMULT;
        OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__ = newa;
        OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_ = newb;
        OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__ = newc;
      }
      else {
        lambda = lambda * multfaktor;
        multfaktor *= 2;
      }
    }
  }
  if (JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_a__) || JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_b_) || JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_c__)) {
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_ = YES;
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(@"findParameters(): a,b or c undefined");
    return;
  }
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1, jdouble c1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(x, a1, b1) * c1;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_(jdouble x, jdouble k) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  jdouble e1k = JavaLangMath_powWithDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e1_, k), e2k = JavaLangMath_powWithDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_e2_, k);
  jdouble efrac = JavaLangMath_powWithDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_emult_ / JavaLangMath_expWithDouble_(x), k);
  return OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ymult_ * (e1k - e2k) / (OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y2_ * e1k - OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_y1_ * e2k + OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_ydiff_ * efrac);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  return (1.0 / (1.0 + a1 * JavaLangMath_expWithDouble_(-b1 * x)));
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_aWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1, jdouble c1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  jdouble df_c = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(x, a1, b1);
  return df_c * df_c * JavaLangMath_expWithDouble_(-b1 * x) * (-c1);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_bWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a1, jdouble b1, jdouble c1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  jdouble df_c = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_df_cWithDouble_withDouble_withDouble_(x, a1, b1);
  return df_c * df_c * JavaLangMath_expWithDouble_(-b1 * x) * x * a1 * c1;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble a1, jdouble b1, jdouble c1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  return y - OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_withDouble_withDouble_(x, a1, b1, c1);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble b1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  return y - OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_fWithDouble_withDouble_(x, b1);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_(IOSDoubleArray *x, IOSDoubleArray *y, jdouble a1, jdouble b1, jdouble c1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  jdouble sum = 0.0, beta;
  for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_; i++) {
    beta = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(x), i), IOSDoubleArray_Get(nil_chk(y), i), a1, b1, c1);
    sum += beta * beta;
  }
  return sum;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_beta2WithDouble_(jdouble k1) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  jdouble beta = 0.0, sum = 0.0;
  for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_; i++) {
    beta = OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_betaWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_), i), IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_), i), k1);
    sum += beta * beta;
  }
  return sum;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_cWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cb) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  return cy1 * cy2 * (JavaLangMath_expWithDouble_(cb * cx1) - JavaLangMath_expWithDouble_(cb * cx2)) / (cy2 * JavaLangMath_expWithDouble_(cb * cx1) - cy1 * JavaLangMath_expWithDouble_(cb * cx2));
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_aWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble ax1, jdouble ay1, jdouble ax2, jdouble ay2, jdouble ab) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  return JavaLangMath_expWithDouble_(ab * (ax1 + ax2)) * (ay1 - ay2) / (ay2 * JavaLangMath_expWithDouble_(ab * ax1) - ay1 * JavaLangMath_expWithDouble_(ab * ax2));
}

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_getPoints(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic *self) {
  IOSDoubleArray *xlist = nil, *ylist = nil;
  IOSDoubleArray *xy = [IOSDoubleArray newArrayWithLength:2];
  OrgGeogebraCommonKernelGeosGeoPoint *geoelement;
  JavaUtilTreeSet *sortedSet;
  sortedSet = new_JavaUtilTreeSet_initWithJavaUtilComparator_(OrgGeogebraCommonKernelGeosGeoPoint_getComparatorX());
  for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_; i++) {
    if ([[((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geolist_)) getWithInt:i] isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) {
      geoelement = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([self->geolist_ getWithInt:i], [OrgGeogebraCommonKernelGeosGeoPoint class]);
      [sortedSet addWithId:geoelement];
    }
    else {
      OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_ = YES;
    }
  }
  id<JavaUtilIterator> iter = [sortedSet iterator];
  jint i = 0;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allplus_ = YES;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allneg_ = YES;
  xlist = [IOSDoubleArray newArrayWithLength:OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_];
  ylist = [IOSDoubleArray newArrayWithLength:OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_size_];
  while ([((id<JavaUtilIterator>) nil_chk(iter)) hasNext]) {
    geoelement = [iter next];
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(geoelement)) getInhomCoordsWithDoubleArray:xy];
    *IOSDoubleArray_GetRef(xlist, i) = IOSDoubleArray_Get(xy, 0);
    *IOSDoubleArray_GetRef(ylist, i) = IOSDoubleArray_Get(xy, 1);
    if (IOSDoubleArray_Get(ylist, i) < 0) {
      OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allplus_ = NO;
    }
    if (IOSDoubleArray_Get(ylist, i) > 0) {
      OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_allneg_ = NO;
    }
    i++;
  }
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_xd_ = xlist;
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_yd_ = ylist;
  if (OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_error_) {
    OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(@"getPoints(): Wrong list format...");
  }
}

void OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_errorMsgWithNSString_(NSString *s) {
  OrgGeogebraCommonKernelStatisticsAlgoFitLogistic_initialize();
  OrgGeogebraCommonMainApp_debugWithNSString_(s);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelStatisticsAlgoFitLogistic)
