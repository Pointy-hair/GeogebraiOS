//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/statistics/AlgoTMeanEstimate.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/distribution/TDistributionImpl.h"
#include "org/apache/commons/math/stat/descriptive/SummaryStatistics.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/statistics/AlgoTMeanEstimate.h"

@interface OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate () {
 @public
  OrgGeogebraCommonKernelGeosGeoList *geoList_;
  OrgGeogebraCommonKernelGeosGeoNumeric *geoLevel_, *geoMean_, *geoSD_, *geoN_;
  OrgGeogebraCommonKernelGeosGeoList *result_;
  IOSDoubleArray *val_;
  jdouble level_, mean_, sd_, n_, me_;
  OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats_;
  OrgApacheCommonsMathDistributionTDistributionImpl *tDist_;
}

- (jdouble)getMarginOfErrorWithDouble:(jdouble)sd
                           withDouble:(jdouble)n
                           withDouble:(jdouble)confLevel;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, geoList_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, geoLevel_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, geoMean_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, geoSD_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, geoN_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, result_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, val_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, stats_, OrgApacheCommonsMathStatDescriptiveSummaryStatistics *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate, tDist_, OrgApacheCommonsMathDistributionTDistributionImpl *)

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_getMarginOfErrorWithDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self, jdouble sd, jdouble n, jdouble confLevel);

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_compute(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self);

@implementation OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoLevel {
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, geoLevel);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoMean
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoSD
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoN
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoLevel {
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoMean, geoSD, geoN, geoLevel);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoMean
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoSD
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoN
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geoLevel {
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, geoMean, geoSD, geoN, geoLevel);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_TMeanEstimate();
}

- (void)setInputOutput {
  if (geoList_ != nil) {
    input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, geoList_);
    (void) IOSObjectArray_Set(input_, 1, geoLevel_);
  }
  else {
    input_ = [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    (void) IOSObjectArray_Set(input_, 0, geoMean_);
    (void) IOSObjectArray_Set(input_, 1, geoSD_);
    (void) IOSObjectArray_Set(input_, 2, geoN_);
    (void) IOSObjectArray_Set(input_, 3, geoLevel_);
  }
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:result_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoList *)getResult {
  return result_;
}

- (jdouble)getME {
  return me_;
}

- (jdouble)getMarginOfErrorWithDouble:(jdouble)sd
                           withDouble:(jdouble)n
                           withDouble:(jdouble)confLevel {
  return OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_getMarginOfErrorWithDouble_withDouble_withDouble_(self, sd, n, confLevel);
}

- (void)compute {
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoTMeanEstimate", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoTMeanEstimate", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoTMeanEstimate", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "getME", NULL, "D", 0x1, NULL, NULL },
    { "getMarginOfErrorWithDouble:withDouble:withDouble:", "getMarginOfError", "D", 0x2, "Lorg.apache.commons.math.MathException;", NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoList_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "geoLevel_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoMean_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoSD_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "geoN_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "result_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "val_", NULL, 0x2, "[D", NULL, NULL,  },
    { "level_", NULL, 0x2, "D", NULL, NULL,  },
    { "mean_", NULL, 0x2, "D", NULL, NULL,  },
    { "sd_", NULL, 0x2, "D", NULL, NULL,  },
    { "n_", NULL, 0x2, "D", NULL, NULL,  },
    { "me_", NULL, 0x2, "D", NULL, NULL,  },
    { "stats_", NULL, 0x2, "Lorg.apache.commons.math.stat.descriptive.SummaryStatistics;", NULL, NULL,  },
    { "tDist_", NULL, 0x2, "Lorg.apache.commons.math.distribution.TDistributionImpl;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate = { 2, "AlgoTMeanEstimate", "org.geogebra.common.kernel.statistics", NULL, 0x1, 9, methods, 14, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate;
}

@end

void OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList, OrgGeogebraCommonKernelGeosGeoNumeric *geoLevel) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->geoList_ = geoList;
  self->geoLevel_ = geoLevel;
  self->geoMean_ = nil;
  self->geoSD_ = nil;
  self->geoN_ = nil;
  self->result_ = new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_compute(self);
  [self->result_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *new_OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoList, OrgGeogebraCommonKernelGeosGeoNumeric *geoLevel) {
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self = [OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate alloc];
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, geoLevel);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *geoMean, OrgGeogebraCommonKernelGeosGeoNumeric *geoSD, OrgGeogebraCommonKernelGeosGeoNumeric *geoN, OrgGeogebraCommonKernelGeosGeoNumeric *geoLevel) {
  (void) OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, geoMean, geoSD, geoN, geoLevel);
  [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *new_OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoNumeric *geoMean, OrgGeogebraCommonKernelGeosGeoNumeric *geoSD, OrgGeogebraCommonKernelGeosGeoNumeric *geoN, OrgGeogebraCommonKernelGeosGeoNumeric *geoLevel) {
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self = [OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate alloc];
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoMean, geoSD, geoN, geoLevel);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoNumeric *geoMean, OrgGeogebraCommonKernelGeosGeoNumeric *geoSD, OrgGeogebraCommonKernelGeosGeoNumeric *geoN, OrgGeogebraCommonKernelGeosGeoNumeric *geoLevel) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->geoList_ = nil;
  self->geoLevel_ = geoLevel;
  self->geoMean_ = geoMean;
  self->geoSD_ = geoSD;
  self->geoN_ = geoN;
  self->result_ = new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_compute(self);
}

OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *new_OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoNumeric *geoMean, OrgGeogebraCommonKernelGeosGeoNumeric *geoSD, OrgGeogebraCommonKernelGeosGeoNumeric *geoN, OrgGeogebraCommonKernelGeosGeoNumeric *geoLevel) {
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self = [OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate alloc];
  OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, geoMean, geoSD, geoN, geoLevel);
  return self;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_getMarginOfErrorWithDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self, jdouble sd, jdouble n, jdouble confLevel) {
  self->tDist_ = new_OrgApacheCommonsMathDistributionTDistributionImpl_initWithDouble_(n - 1);
  jdouble a = [self->tDist_ inverseCumulativeProbabilityWithDouble:(confLevel + 1.0) / 2];
  return a * sd / JavaLangMath_sqrtWithDouble_(n);
}

void OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_compute(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate *self) {
  @try {
    if (((IOSObjectArray *) nil_chk(self->input_))->size_ == 2) {
      jint size = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) size];
      if (![self->geoList_ isDefined] || size < 2) {
        [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) setUndefined];
        return;
      }
      self->val_ = [IOSDoubleArray newArrayWithLength:size];
      for (jint i = 0; i < size; i++) {
        OrgGeogebraCommonKernelGeosGeoElement *geo = [self->geoList_ getWithInt:i];
        if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
          id<OrgGeogebraCommonKernelArithmeticNumberValue> num = (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue));
          *IOSDoubleArray_GetRef(self->val_, i) = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(num)) getDouble];
        }
        else {
          [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) setUndefined];
          return;
        }
      }
      self->stats_ = new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init();
      for (jint i = 0; i < self->val_->size_; i++) {
        [self->stats_ addValueWithDouble:IOSDoubleArray_Get(self->val_, i)];
      }
      self->n_ = [self->stats_ getN];
      self->sd_ = [self->stats_ getStandardDeviation];
      self->mean_ = [self->stats_ getMean];
    }
    else {
      self->mean_ = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoMean_)) getDouble];
      self->sd_ = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoSD_)) getDouble];
      self->n_ = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoN_)) getDouble];
    }
    self->level_ = [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->geoLevel_)) getDouble];
    if (self->level_ < 0 || self->level_ > 1 || self->sd_ < 0 || self->n_ < 1) {
      [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) setUndefined];
      return;
    }
    self->me_ = OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate_getMarginOfErrorWithDouble_withDouble_withDouble_(self, self->sd_, self->n_, self->level_);
    [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->result_)) clear];
    jboolean oldSuppress = [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) isSuppressLabelsActive];
    [self->cons_ setSuppressLabelCreationWithBoolean:YES];
    [self->result_ addWithOrgGeogebraCommonKernelGeosGeoElement:new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, self->mean_ - self->me_)];
    [self->result_ addWithOrgGeogebraCommonKernelGeosGeoElement:new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(self->cons_, self->mean_ + self->me_)];
    [self->cons_ setSuppressLabelCreationWithBoolean:oldSuppress];
  }
  @catch (JavaLangIllegalArgumentException *e) {
    [((JavaLangIllegalArgumentException *) nil_chk(e)) printStackTrace];
  }
  @catch (OrgApacheCommonsMathMathException *e) {
    [((OrgApacheCommonsMathMathException *) nil_chk(e)) printStackTrace];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelStatisticsAlgoTMeanEstimate)
