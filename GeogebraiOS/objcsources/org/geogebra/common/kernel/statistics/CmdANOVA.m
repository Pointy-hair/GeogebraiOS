//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/statistics/CmdANOVA.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/statistics/AlgoANOVA.h"
#include "org/geogebra/common/kernel/statistics/CmdANOVA.h"
#include "org/geogebra/common/main/MyError.h"
#include "org/geogebra/common/plugin/GeoClass.h"

@interface OrgGeogebraCommonKernelStatisticsCmdANOVA ()

- (OrgGeogebraCommonKernelGeosGeoList *)ANOVATestWithNSString:(NSString *)label
                       withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)dataArrayList;

@end

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoList *OrgGeogebraCommonKernelStatisticsCmdANOVA_ANOVATestWithNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelStatisticsCmdANOVA *self, NSString *label, OrgGeogebraCommonKernelGeosGeoList *dataArrayList);

@implementation OrgGeogebraCommonKernelStatisticsCmdANOVA

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonKernelStatisticsCmdANOVA_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray arrayWithLength:n];
  IOSObjectArray *arg;
  arg = [self resArgsWithOrgGeogebraCommonKernelArithmeticCommand:c];
  {
    OrgGeogebraCommonKernelGeosGeoList *list;
    switch (n) {
      case 1:
      *IOSBooleanArray_GetRef(ok, 0) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoList]);
      if (IOSBooleanArray_Get(ok, 0)) {
        OrgGeogebraCommonKernelGeosGeoList *list = (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [OrgGeogebraCommonKernelGeosGeoList class]);
        if ([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(list)) size] == 0) @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
        if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([list getWithInt:0])) isGeoList]) {
          IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ OrgGeogebraCommonKernelStatisticsCmdANOVA_ANOVATestWithNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, [c getLabel], (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [OrgGeogebraCommonKernelGeosGeoList class])) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
          return ret;
        }
        @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
      }
      default:
      list = OrgGeogebraCommonKernelCommandsCommandProcessor_wrapInListWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelGeosGeoElementArray_withInt_withOrgGeogebraCommonPluginGeoClassEnum_(kernelA_, arg, ((IOSObjectArray *) nil_chk(arg))->size_, OrgGeogebraCommonPluginGeoClassEnum_get_LIST());
      if (list != nil) {
        IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ OrgGeogebraCommonKernelStatisticsCmdANOVA_ANOVATestWithNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, [c getLabel], list) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
        return ret;
      }
      for (jint i = 0; i <= n; i++) {
        if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, i))) isGeoList]) @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, i)];
      }
      @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    }
  }
}

- (OrgGeogebraCommonKernelGeosGeoList *)ANOVATestWithNSString:(NSString *)label
                       withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)dataArrayList {
  return OrgGeogebraCommonKernelStatisticsCmdANOVA_ANOVATestWithNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, label, dataArrayList);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdANOVA", NULL, 0x1, NULL, NULL },
    { "processWithOrgGeogebraCommonKernelArithmeticCommand:", "process", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, "Lorg.geogebra.common.main.MyError;", NULL },
    { "ANOVATestWithNSString:withOrgGeogebraCommonKernelGeosGeoList:", "ANOVATest", "Lorg.geogebra.common.kernel.geos.GeoList;", 0x12, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelStatisticsCmdANOVA = { 2, "CmdANOVA", "org.geogebra.common.kernel.statistics", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelStatisticsCmdANOVA;
}

@end

void OrgGeogebraCommonKernelStatisticsCmdANOVA_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelStatisticsCmdANOVA *self, OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelCommandsCommandProcessor_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonKernelStatisticsCmdANOVA *new_OrgGeogebraCommonKernelStatisticsCmdANOVA_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelStatisticsCmdANOVA *self = [OrgGeogebraCommonKernelStatisticsCmdANOVA alloc];
  OrgGeogebraCommonKernelStatisticsCmdANOVA_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

OrgGeogebraCommonKernelGeosGeoList *OrgGeogebraCommonKernelStatisticsCmdANOVA_ANOVATestWithNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelStatisticsCmdANOVA *self, NSString *label, OrgGeogebraCommonKernelGeosGeoList *dataArrayList) {
  OrgGeogebraCommonKernelStatisticsAlgoANOVA *algo = [new_OrgGeogebraCommonKernelStatisticsAlgoANOVA_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self->cons_, label, dataArrayList) autorelease];
  OrgGeogebraCommonKernelGeosGeoList *result = [algo getResult];
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelStatisticsCmdANOVA)
