//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/statistics/AlgoUsingUniqueAndFrequency.java
//

#ifndef _OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency_H_
#define _OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"

@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoList;
@class OrgGeogebraCommonKernelGeosGeoNumeric;
@class OrgGeogebraCommonKernelStatisticsAlgoFrequency;

@interface OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency : OrgGeogebraCommonKernelAlgosAlgoElement {
 @public
  OrgGeogebraCommonKernelStatisticsAlgoFrequency *algoFreq_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                withBoolean:(jboolean)addToConstructionList;

#pragma mark Protected

- (void)createHelperAlgosWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1;

- (void)createHelperAlgosWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)list1
                      withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)scale_;

- (void)removeHelperAlgos;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency, algoFreq_, OrgGeogebraCommonKernelStatisticsAlgoFrequency *)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency *self, OrgGeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency *self, OrgGeogebraCommonKernelConstruction *c, jboolean addToConstructionList);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency)

#endif // _OrgGeogebraCommonKernelStatisticsAlgoUsingUniqueAndFrequency_H_
