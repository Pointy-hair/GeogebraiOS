//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/statistics/AlgoStats2D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/statistics/AlgoStats2D.h"

@interface OrgGeogebraCommonKernelStatisticsAlgoStats2D () {
 @public
  OrgGeogebraCommonKernelGeosGeoList *geoListx_;
  OrgGeogebraCommonKernelGeosGeoList *geoListy_;
  jint mode_;
  jint stat_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoStats2D, geoListx_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoStats2D, geoListy_, OrgGeogebraCommonKernelGeosGeoList *)

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoStats2D_compute(OrgGeogebraCommonKernelStatisticsAlgoStats2D *self);

@implementation OrgGeogebraCommonKernelStatisticsAlgoStats2D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoListx
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoListy
                                                    withInt:(jint)stat {
  OrgGeogebraCommonKernelStatisticsAlgoStats2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoListx, geoListy, stat);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoListx
                                                    withInt:(jint)stat {
  OrgGeogebraCommonKernelStatisticsAlgoStats2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoListx, stat);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoListx
                                                    withInt:(jint)stat {
  OrgGeogebraCommonKernelStatisticsAlgoStats2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withInt_(self, cons, geoListx, stat);
  return self;
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, geoListx_);
  (void) IOSObjectArray_Set(input_, 1, geoListy_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:result_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoNumeric *)getResult {
  return result_;
}

- (void)compute {
  OrgGeogebraCommonKernelStatisticsAlgoStats2D_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:withInt:", "AlgoStats2D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withInt:", "AlgoStats2D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:withInt:", "AlgoStats2D", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoListx_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "geoListy_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "result_", NULL, 0x1, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "mode_", NULL, 0x2, "I", NULL, NULL,  },
    { "MODE_DOUBLELIST_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_MODE_DOUBLELIST },
    { "MODE_LISTOFPOINTS_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_MODE_LISTOFPOINTS },
    { "stat_", NULL, 0x2, "I", NULL, NULL,  },
    { "STATS_MEANX_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_MEANX },
    { "STATS_MEANY_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_MEANY },
    { "STATS_COVARIANCE_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_COVARIANCE },
    { "STATS_SIGMAXY_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SIGMAXY },
    { "STATS_SXX_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SXX },
    { "STATS_SYY_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SYY },
    { "STATS_SXY_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SXY },
    { "STATS_PMCC_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_PMCC },
    { "STATS_SIGMAXX_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SIGMAXX },
    { "STATS_SIGMAYY_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SIGMAYY },
    { "STATS_SAMPLESDX_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SAMPLESDX },
    { "STATS_SAMPLESDY_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SAMPLESDY },
    { "STATS_SDX_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SDX },
    { "STATS_SDY_", NULL, 0x18, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SDY },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelStatisticsAlgoStats2D = { 2, "AlgoStats2D", "org.geogebra.common.kernel.statistics", NULL, 0x401, 6, methods, 21, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelStatisticsAlgoStats2D;
}

@end

void OrgGeogebraCommonKernelStatisticsAlgoStats2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_withInt_(OrgGeogebraCommonKernelStatisticsAlgoStats2D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoListx, OrgGeogebraCommonKernelGeosGeoList *geoListy, jint stat) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->mode_ = OrgGeogebraCommonKernelStatisticsAlgoStats2D_MODE_DOUBLELIST;
  self->geoListx_ = geoListx;
  self->geoListy_ = geoListy;
  self->stat_ = stat;
  self->result_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelStatisticsAlgoStats2D_compute(self);
  [self->result_ setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelStatisticsAlgoStats2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withInt_(OrgGeogebraCommonKernelStatisticsAlgoStats2D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geoListx, jint stat) {
  (void) OrgGeogebraCommonKernelStatisticsAlgoStats2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withInt_(self, cons, geoListx, stat);
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonKernelStatisticsAlgoStats2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_withInt_(OrgGeogebraCommonKernelStatisticsAlgoStats2D *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *geoListx, jint stat) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->mode_ = OrgGeogebraCommonKernelStatisticsAlgoStats2D_MODE_LISTOFPOINTS;
  self->geoListx_ = geoListx;
  self->stat_ = stat;
  self->result_ = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons);
  self->input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(self->input_, 0, geoListx);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:self->result_];
  [self setDependencies];
  OrgGeogebraCommonKernelStatisticsAlgoStats2D_compute(self);
}

void OrgGeogebraCommonKernelStatisticsAlgoStats2D_compute(OrgGeogebraCommonKernelStatisticsAlgoStats2D *self) {
  jdouble sumx = 0;
  jdouble sumy = 0;
  jdouble sumxx = 0;
  jdouble sumxy = 0;
  jdouble sumyy = 0;
  jdouble valx, valy;
  jint sizex = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geoListx_)) size];
  jint sizey = sizex;
  if (self->mode_ == OrgGeogebraCommonKernelStatisticsAlgoStats2D_MODE_DOUBLELIST) {
    sizey = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geoListy_)) size];
    if (![self->geoListx_ isDefined] || ![self->geoListy_ isDefined] || sizex == 0 || sizex != sizey) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
      return;
    }
    for (jint i = 0; i < sizex; i++) {
      OrgGeogebraCommonKernelGeosGeoElement *geox = [self->geoListx_ getWithInt:i];
      OrgGeogebraCommonKernelGeosGeoElement *geoy = [self->geoListy_ getWithInt:i];
      if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geox] && [OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geoy]) {
        id<OrgGeogebraCommonKernelArithmeticNumberValue> numx = (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geox, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue));
        id<OrgGeogebraCommonKernelArithmeticNumberValue> numy = (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geoy, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue));
        valx = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(numx)) getDouble];
        valy = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(numy)) getDouble];
        sumx += valx;
        sumy += valy;
        sumxx += valx * valx;
        sumyy += valy * valy;
        sumxy += valx * valy;
      }
      else {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
        return;
      }
    }
  }
  else {
    for (jint i = 0; i < sizex; i++) {
      OrgGeogebraCommonKernelGeosGeoElement *geo = [self->geoListx_ getWithInt:i];
      if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint]) {
        jdouble x = [((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoPoint class])) getX];
        jdouble y = [((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoPoint class])) getY];
        jdouble z = [((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoPoint class])) getZ];
        valx = x / z;
        valy = y / z;
        sumx += valx;
        sumy += valy;
        sumxx += valx * valx;
        sumyy += valy * valy;
        sumxy += valx * valy;
      }
      else {
        [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setUndefined];
        return;
      }
    }
  }
  jdouble mux = sumx / sizex;
  jdouble muy = sumy / sizex;
  jdouble var;
  switch (self->stat_) {
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_MEANX:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:mux];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_MEANY:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:muy];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_COVARIANCE:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumxy / sizex - mux * muy];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SIGMAXY:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumxy];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SIGMAXX:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumxx];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SIGMAYY:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumyy];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SXX:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumxx - sumx * sumx / sizex];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SYY:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumyy - sumy * sumy / sizex];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SXY:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:sumxy - sumx * sumy / sizex];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_PMCC:
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:(sumxy * sizex - sumx * sumy) / JavaLangMath_sqrtWithDouble_((sumxx * sizex - sumx * sumx) * (sumyy * sizex - sumy * sumy))];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SAMPLESDX:
    var = (sumxx - sumx * sumx / sizex) / (sizex - 1);
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:JavaLangMath_sqrtWithDouble_(var)];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SAMPLESDY:
    var = (sumyy - sumy * sumy / sizey) / (sizey - 1);
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:JavaLangMath_sqrtWithDouble_(var)];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SDX:
    var = (sumxx - sumx * sumx / sizex) / sizex;
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:JavaLangMath_sqrtWithDouble_(var)];
    break;
    case OrgGeogebraCommonKernelStatisticsAlgoStats2D_STATS_SDY:
    var = (sumyy - sumy * sumy / sizey) / sizey;
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->result_)) setValueWithDouble:JavaLangMath_sqrtWithDouble_(var)];
    break;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelStatisticsAlgoStats2D)
