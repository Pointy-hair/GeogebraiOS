//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/statistics/AlgoFitSin.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/statistics/AlgoFitSin.h"
#include "org/geogebra/common/kernel/statistics/RegressionMath.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/Operation.h"

#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_NOISEKILLER 0.2
#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_LMFACTORDIV 3.0
#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_LMFACTORMULT 2.0
#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_MAXITERATIONS 200
#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSILON 1.0E-14
#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSSING 1.0E-20
#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_PI 3.141592653589793
#define OrgGeogebraCommonKernelStatisticsAlgoFitSin_TWO_PI 6.283185307179586

@interface OrgGeogebraCommonKernelStatisticsAlgoFitSin () {
 @public
  OrgGeogebraCommonKernelGeosGeoList *geolist_;
  OrgGeogebraCommonKernelGeosGeoFunction *geofunction_;
}

+ (jdouble)sinWithDouble:(jdouble)x
              withDouble:(jdouble)c
              withDouble:(jdouble)d;

+ (jdouble)cosWithDouble:(jdouble)x
              withDouble:(jdouble)c
              withDouble:(jdouble)d;

+ (jdouble)fWithDouble:(jdouble)x
            withDouble:(jdouble)a
            withDouble:(jdouble)b
            withDouble:(jdouble)c
            withDouble:(jdouble)d;

+ (jdouble)df_a;

+ (jdouble)df_bWithDouble:(jdouble)x
               withDouble:(jdouble)c
               withDouble:(jdouble)d;

+ (jdouble)df_cWithDouble:(jdouble)x
               withDouble:(jdouble)b
               withDouble:(jdouble)c
               withDouble:(jdouble)d;

+ (jdouble)df_dWithDouble:(jdouble)x
               withDouble:(jdouble)b
               withDouble:(jdouble)c
               withDouble:(jdouble)d;

+ (jdouble)betaWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)a
               withDouble:(jdouble)b
               withDouble:(jdouble)c
               withDouble:(jdouble)d;

+ (jdouble)betaWithDoubleArray:(IOSDoubleArray *)x
               withDoubleArray:(IOSDoubleArray *)y
                    withDouble:(jdouble)a
                    withDouble:(jdouble)b
                    withDouble:(jdouble)c
                    withDouble:(jdouble)d;

+ (jint)directionWithDouble:(jdouble)y1
                 withDouble:(jdouble)y2
                 withDouble:(jdouble)y3;

- (void)getPoints;

+ (jboolean)nearmaxminWithDouble:(jdouble)a
                      withDouble:(jdouble)b
                         withInt:(jint)state
                         withInt:(jint)current
                      withDouble:(jdouble)max
                      withDouble:(jdouble)min;

+ (void)errorMsgWithNSString:(NSString *)s;

+ (jint)findNumberOfHalfPeriodsWithInt:(jint)k
                               withInt:(jint)xmin
                               withInt:(jint)xmax;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, geolist_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, geofunction_, OrgGeogebraCommonKernelGeosGeoFunction *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, NOISEKILLER, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, LMFACTORDIV, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, LMFACTORMULT, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, MAXITERATIONS, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, EPSILON, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, EPSSING, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, PI, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, TWO_PI, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, a_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, a_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, b_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, b_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, c_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, c_, jdouble)

static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, d_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, d_, jdouble)

static IOSDoubleArray *OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, xd_, IOSDoubleArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, xd_, IOSDoubleArray *)

static IOSDoubleArray *OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, yd_, IOSDoubleArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, yd_, IOSDoubleArray *)

static jint OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, size_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, size_, jint)

static jint OrgGeogebraCommonKernelStatisticsAlgoFitSin_iterations_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, iterations_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, iterations_, jint)

static jboolean OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_ = NO;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, error_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelStatisticsAlgoFitSin, error_, jboolean)

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitSin_compute(OrgGeogebraCommonKernelStatisticsAlgoFitSin *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinWithDouble_withDouble_withDouble_(jdouble x, jdouble c, jdouble d);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_cosWithDouble_withDouble_withDouble_(jdouble x, jdouble c, jdouble d);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_fWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a, jdouble b, jdouble c, jdouble d);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_a();

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_bWithDouble_withDouble_withDouble_(jdouble x, jdouble c, jdouble d);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_cWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble b, jdouble c, jdouble d);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_dWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble b, jdouble c, jdouble d);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble a, jdouble b, jdouble c, jdouble d);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray *x, IOSDoubleArray *y, jdouble a, jdouble b, jdouble c, jdouble d);

__attribute__((unused)) static jint OrgGeogebraCommonKernelStatisticsAlgoFitSin_directionWithDouble_withDouble_withDouble_(jdouble y1, jdouble y2, jdouble y3);

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitSin_getPoints(OrgGeogebraCommonKernelStatisticsAlgoFitSin *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelStatisticsAlgoFitSin_nearmaxminWithDouble_withDouble_withInt_withInt_withDouble_withDouble_(jdouble a, jdouble b, jint state, jint current, jdouble max, jdouble min);

__attribute__((unused)) static void OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(NSString *s);

__attribute__((unused)) static jint OrgGeogebraCommonKernelStatisticsAlgoFitSin_findNumberOfHalfPeriodsWithInt_withInt_withInt_(jint k, jint xmin, jint xmax);

@implementation OrgGeogebraCommonKernelStatisticsAlgoFitSin

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geolist {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, geolist);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geolist {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, geolist);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_FitSin();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, geolist_);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:geofunction_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoFunction *)getFitSin {
  return geofunction_;
}

- (void)compute {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_compute(self);
}

+ (void)doReg {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_doReg();
}

+ (void)findParameters {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_findParameters();
}

+ (void)sinus_Reg {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinus_Reg();
}

+ (jdouble)sinWithDouble:(jdouble)x
              withDouble:(jdouble)c
              withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinWithDouble_withDouble_withDouble_(x, c, d);
}

+ (jdouble)cosWithDouble:(jdouble)x
              withDouble:(jdouble)c
              withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_cosWithDouble_withDouble_withDouble_(x, c, d);
}

+ (jdouble)fWithDouble:(jdouble)x
            withDouble:(jdouble)a
            withDouble:(jdouble)b
            withDouble:(jdouble)c
            withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_fWithDouble_withDouble_withDouble_withDouble_withDouble_(x, a, b, c, d);
}

+ (jdouble)df_a {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_a();
}

+ (jdouble)df_bWithDouble:(jdouble)x
               withDouble:(jdouble)c
               withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_bWithDouble_withDouble_withDouble_(x, c, d);
}

+ (jdouble)df_cWithDouble:(jdouble)x
               withDouble:(jdouble)b
               withDouble:(jdouble)c
               withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_cWithDouble_withDouble_withDouble_withDouble_(x, b, c, d);
}

+ (jdouble)df_dWithDouble:(jdouble)x
               withDouble:(jdouble)b
               withDouble:(jdouble)c
               withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_dWithDouble_withDouble_withDouble_withDouble_(x, b, c, d);
}

+ (jdouble)betaWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)a
               withDouble:(jdouble)b
               withDouble:(jdouble)c
               withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x, y, a, b, c, d);
}

+ (jdouble)beta2WithDoubleArray:(IOSDoubleArray *)x
                withDoubleArray:(IOSDoubleArray *)y
                     withDouble:(jdouble)a
                     withDouble:(jdouble)b
                     withDouble:(jdouble)c
                     withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(x, y, a, b, c, d);
}

+ (jdouble)betaWithDoubleArray:(IOSDoubleArray *)x
               withDoubleArray:(IOSDoubleArray *)y
                    withDouble:(jdouble)a
                    withDouble:(jdouble)b
                    withDouble:(jdouble)c
                    withDouble:(jdouble)d {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(x, y, a, b, c, d);
}

+ (jint)directionWithDouble:(jdouble)y1
                 withDouble:(jdouble)y2
                 withDouble:(jdouble)y3 {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_directionWithDouble_withDouble_withDouble_(y1, y2, y3);
}

- (void)getPoints {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_getPoints(self);
}

+ (jboolean)nearmaxminWithDouble:(jdouble)a
                      withDouble:(jdouble)b
                         withInt:(jint)state
                         withInt:(jint)current
                      withDouble:(jdouble)max
                      withDouble:(jdouble)min {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_nearmaxminWithDouble_withDouble_withInt_withInt_withDouble_withDouble_(a, b, state, current, max, min);
}

+ (void)errorMsgWithNSString:(NSString *)s {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(s);
}

+ (jint)findNumberOfHalfPeriodsWithInt:(jint)k
                               withInt:(jint)xmin
                               withInt:(jint)xmax {
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_findNumberOfHalfPeriodsWithInt_withInt_withInt_(k, xmin, xmax);
}

- (IOSDoubleArray *)getCoeffs {
  IOSDoubleArray *ret = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ } count:4];
  return ret;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoFitSin", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoFitSin", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getFitSin", NULL, "Lorg.geogebra.common.kernel.geos.GeoFunction;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "doReg", NULL, "V", 0x19, NULL, NULL },
    { "findParameters", NULL, "V", 0x19, NULL, NULL },
    { "sinus_Reg", NULL, "V", 0x19, NULL, NULL },
    { "sinWithDouble:withDouble:withDouble:", "sin", "D", 0x1a, NULL, NULL },
    { "cosWithDouble:withDouble:withDouble:", "cos", "D", 0x1a, NULL, NULL },
    { "fWithDouble:withDouble:withDouble:withDouble:withDouble:", "f", "D", 0x1a, NULL, NULL },
    { "df_a", NULL, "D", 0x1a, NULL, NULL },
    { "df_bWithDouble:withDouble:withDouble:", "df_b", "D", 0x1a, NULL, NULL },
    { "df_cWithDouble:withDouble:withDouble:withDouble:", "df_c", "D", 0x1a, NULL, NULL },
    { "df_dWithDouble:withDouble:withDouble:withDouble:", "df_d", "D", 0x1a, NULL, NULL },
    { "betaWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "beta", "D", 0x1a, NULL, NULL },
    { "beta2WithDoubleArray:withDoubleArray:withDouble:withDouble:withDouble:withDouble:", "beta2", "D", 0x19, NULL, NULL },
    { "betaWithDoubleArray:withDoubleArray:withDouble:withDouble:withDouble:withDouble:", "beta", "D", 0x1a, NULL, NULL },
    { "directionWithDouble:withDouble:withDouble:", "direction", "I", 0x1a, NULL, NULL },
    { "getPoints", NULL, "V", 0x12, NULL, NULL },
    { "nearmaxminWithDouble:withDouble:withInt:withInt:withDouble:withDouble:", "nearmaxmin", "Z", 0x1a, NULL, NULL },
    { "errorMsgWithNSString:", "errorMsg", "V", 0x1a, NULL, NULL },
    { "findNumberOfHalfPeriodsWithInt:withInt:withInt:", "findNumberOfHalfPeriods", "I", 0x1a, NULL, NULL },
    { "getCoeffs", NULL, "[D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NOISEKILLER_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitSin_NOISEKILLER },
    { "LMFACTORDIV_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitSin_LMFACTORDIV },
    { "LMFACTORMULT_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitSin_LMFACTORMULT },
    { "MAXITERATIONS_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelStatisticsAlgoFitSin_MAXITERATIONS },
    { "EPSILON_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSILON },
    { "EPSSING_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSSING },
    { "PI_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitSin_PI },
    { "TWO_PI_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelStatisticsAlgoFitSin_TWO_PI },
    { "a_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, NULL,  },
    { "b_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, NULL,  },
    { "c_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, NULL,  },
    { "d_", NULL, 0xa, "D", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_, NULL,  },
    { "xd_", NULL, 0xa, "[D", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, NULL,  },
    { "yd_", NULL, 0xa, "[D", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, NULL,  },
    { "size_", NULL, 0xa, "I", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_, NULL,  },
    { "iterations_", NULL, 0xa, "I", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_iterations_, NULL,  },
    { "error_", NULL, 0xa, "Z", &OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_, NULL,  },
    { "geolist_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "geofunction_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelStatisticsAlgoFitSin = { 2, "AlgoFitSin", "org.geogebra.common.kernel.statistics", NULL, 0x1, 25, methods, 19, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelStatisticsAlgoFitSin;
}

@end

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelStatisticsAlgoFitSin *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  (void) OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, geolist);
  [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelStatisticsAlgoFitSin *new_OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin *self = [OrgGeogebraCommonKernelStatisticsAlgoFitSin alloc];
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, geolist);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelStatisticsAlgoFitSin *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->geolist_ = geolist;
  self->geofunction_ = new_OrgGeogebraCommonKernelGeosGeoFunction_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_compute(self);
}

OrgGeogebraCommonKernelStatisticsAlgoFitSin *new_OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *geolist) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin *self = [OrgGeogebraCommonKernelStatisticsAlgoFitSin alloc];
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, geolist);
  return self;
}

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_compute(OrgGeogebraCommonKernelStatisticsAlgoFitSin *self) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_ = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geolist_)) size];
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_ = NO;
  if (![self->geolist_ isDefined] || (OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_ < 4)) {
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setUndefined];
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(@"List not properly defined or too small (4 points needed).");
    return;
  }
  @try {
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_getPoints(self);
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_doReg();
  }
  @catch (JavaLangException *all) {
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_ = YES;
  }
  if (!OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_) {
    OrgGeogebraCommonKernelArithmeticMyDouble *A = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_);
    OrgGeogebraCommonKernelArithmeticMyDouble *B = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_);
    OrgGeogebraCommonKernelArithmeticMyDouble *C = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_);
    OrgGeogebraCommonKernelArithmeticMyDouble *D = new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
    OrgGeogebraCommonKernelArithmeticFunctionVariable *X = new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self->kernel_);
    id<OrgGeogebraCommonKernelArithmeticExpressionValue> expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, C, OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), X);
    expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, expr, OrgGeogebraCommonPluginOperationEnum_get_PLUS(), D);
    expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, expr, OrgGeogebraCommonPluginOperationEnum_get_SIN(), nil);
    expr = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, B, OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), expr);
    OrgGeogebraCommonKernelArithmeticExpressionNode *node = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, A, OrgGeogebraCommonPluginOperationEnum_get_PLUS(), expr);
    OrgGeogebraCommonKernelArithmeticFunction *f = new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_(node, X);
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setFunctionWithOrgGeogebraCommonKernelArithmeticFunction:f];
    [self->geofunction_ setDefinedWithBoolean:YES];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(self->geofunction_)) setUndefined];
    return;
  }
}

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_doReg() {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_findParameters();
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinus_Reg();
}

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_findParameters() {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  jdouble y;
  jdouble min_max_distance;
  jint numberofhalfperiods = 1;
  jint xmax_abs = 0, xmin_abs = 0;
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_ = ((IOSDoubleArray *) nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_))->size_;
  jdouble sum = 0.0, max = -JavaLangDouble_MAX_VALUE, min = JavaLangDouble_MAX_VALUE;
  for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_; i++) {
    y = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_), i);
    sum += y;
    if (y > max) {
      max = y;
      xmax_abs = i;
    }
    if (y < min) {
      min = y;
      xmin_abs = i;
    }
  }
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_ = sum / OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_;
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_ = (max - min) / 2.0;
  jint xmax = xmax_abs, xmin = xmin_abs;
  jint state = 0;
  jint current = 0;
  jint changes = 0;
  for (jint i = 2; i < OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_; i++) {
    y = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_), i);
    current = OrgGeogebraCommonKernelStatisticsAlgoFitSin_directionWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, i - 2), IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, i - 1), y);
    if ((current == 1) || (current == -1)) {
      if (state == 0) {
        state = current;
      }
      else {
        if ((current != state) && (current != 0)) {
          if (OrgGeogebraCommonKernelStatisticsAlgoFitSin_nearmaxminWithDouble_withDouble_withInt_withInt_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, state, current, max, min)) {
            changes++;
            state = current;
          }
        }
      }
      if (changes >= 2) {
      }
      else {
        if (current == 1) {
          max = y;
          xmax = i;
        }
        else if (current == -1) {
          min = y;
          xmin = i;
        }
      }
    }
    else {
    }
  }
  min_max_distance = JavaLangMath_absWithDouble_(IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, xmax) - IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, xmin));
  if (changes <= 1) {
    xmin = xmin_abs;
    xmax = xmax_abs;
    min_max_distance = JavaLangMath_absWithDouble_(IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, xmin) - IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, xmax));
    numberofhalfperiods = OrgGeogebraCommonKernelStatisticsAlgoFitSin_findNumberOfHalfPeriodsWithInt_withInt_withInt_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_ / 4, xmin, xmax);
  }
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_ = OrgGeogebraCommonKernelStatisticsAlgoFitSin_PI * numberofhalfperiods / min_max_distance;
  jdouble c2 = 2 * JavaLangMath_PI / ((IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_ - 1) - IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, 0)) * 2 / changes);
  if (changes > 2) OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_ = (OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_ + c2) / 2;
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ = -JavaLangMath_PI;
  jdouble deltad = JavaLangMath_PI * 2 * 0.01;
  jdouble err = 0.0;
  jdouble bestd = 0.0;
  jdouble old_err = OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
  for (jint i = 0; i < 100; i++) {
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ += deltad;
    err = OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
    if (err < old_err) {
      old_err = err;
      bestd = OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_;
    }
  }
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ = bestd;
}

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinus_Reg() {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  jdouble lambda = 0.0;
  jdouble multfaktor = OrgGeogebraCommonKernelStatisticsAlgoFitSin_LMFACTORMULT;
  jdouble residual, old_residual = OrgGeogebraCommonKernelStatisticsAlgoFitSin_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
  jdouble da = OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSILON, db = OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSILON, dc = OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSILON, dd = OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSILON;
  jdouble b1, b2, b3, b4;
  jdouble m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44, n;
  jdouble x, y;
  jdouble dfa, dfb, dfc, dfd, beta, newa, newb, newc, newd;
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_iterations_ = 0;
  b1 = b2 = b3 = b4 = 0.0;
  m11 = m22 = m33 = m44 = 0.0;
  for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_; i++) {
    x = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_), i);
    y = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_), i);
    beta = OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x, y, OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
    dfa = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_a();
    dfb = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_bWithDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
    dfc = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_cWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
    dfd = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_dWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
    b1 += beta * dfa;
    b2 += beta * dfb;
    b3 += beta * dfc;
    b4 += beta * dfd;
    m11 += dfa * dfa;
    m22 += dfb * dfb;
    m33 += dfc * dfc;
    m44 += dfd * dfd;
  }
  jdouble startfaktor = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(m11, m22), m33), m44);
  lambda = startfaktor * 0.001;
  while (JavaLangMath_absWithDouble_(da) + JavaLangMath_absWithDouble_(db) + JavaLangMath_absWithDouble_(dc) + JavaLangMath_absWithDouble_(dd) > OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSILON) {
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_iterations_++;
    if ((OrgGeogebraCommonKernelStatisticsAlgoFitSin_iterations_ > OrgGeogebraCommonKernelStatisticsAlgoFitSin_MAXITERATIONS) || (OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_)) {
      OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(JreStrcat("$I$", @"More than ", OrgGeogebraCommonKernelStatisticsAlgoFitSin_MAXITERATIONS, @" iterations..."));
      OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_ = YES;
      break;
    }
    b1 = b2 = b3 = b4 = 0.0;
    m11 = m12 = m13 = m14 = m21 = m22 = m23 = m24 = m31 = m32 = m33 = m34 = m41 = m42 = m43 = m44 = 0.0;
    for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_; i++) {
      x = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_), i);
      y = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_), i);
      beta = OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x, y, OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
      dfa = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_a();
      dfb = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_bWithDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
      dfc = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_cWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
      dfd = OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_dWithDouble_withDouble_withDouble_withDouble_(x, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_);
      b1 += beta * dfa;
      b2 += beta * dfb;
      b3 += beta * dfc;
      b4 += beta * dfd;
      m11 += dfa * dfa + lambda;
      m12 += dfa * dfb;
      m13 += dfa * dfc;
      m14 += dfa * dfd;
      m22 += dfb * dfb + lambda;
      m23 += dfb * dfc;
      m24 += dfb * dfd;
      m33 += dfc * dfc + lambda;
      m34 += dfc * dfd;
      m44 += dfd * dfd + lambda;
    }
    m21 = m12;
    m31 = m13;
    m32 = m23;
    m41 = m14;
    m42 = m24;
    m43 = m34;
    n = OrgGeogebraCommonKernelStatisticsRegressionMath_det44WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44);
    if (JavaLangMath_absWithDouble_(n) < OrgGeogebraCommonKernelStatisticsAlgoFitSin_EPSSING) {
      OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_ = YES;
      OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(@"Singular matrix...");
      da = db = dc = dd = 0;
    }
    else {
      da = OrgGeogebraCommonKernelStatisticsRegressionMath_det44WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(b1, m12, m13, m14, b2, m22, m23, m24, b3, m32, m33, m34, b4, m42, m43, m44) / n;
      db = OrgGeogebraCommonKernelStatisticsRegressionMath_det44WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(m11, b1, m13, m14, m21, b2, m23, m24, m31, b3, m33, m34, m41, b4, m43, m44) / n;
      dc = OrgGeogebraCommonKernelStatisticsRegressionMath_det44WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(m11, m12, b1, m14, m21, m22, b2, m24, m31, m32, b3, m34, m41, m42, b4, m44) / n;
      dd = OrgGeogebraCommonKernelStatisticsRegressionMath_det44WithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(m11, m12, m13, b1, m21, m22, m23, b2, m31, m32, m33, b3, m41, m42, m43, b4) / n;
      newa = OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_ + da;
      newb = OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_ + db;
      newc = OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_ + dc;
      newd = OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ + dd;
      residual = OrgGeogebraCommonKernelStatisticsAlgoFitSin_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, newa, newb, newc, newd);
      if (residual < old_residual) {
        lambda = lambda / OrgGeogebraCommonKernelStatisticsAlgoFitSin_LMFACTORDIV;
        old_residual = residual;
        multfaktor = OrgGeogebraCommonKernelStatisticsAlgoFitSin_LMFACTORMULT;
        OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_ = newa;
        OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_ = newb;
        OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_ = newc;
        OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ = newd;
      }
      else {
        lambda = lambda * multfaktor;
        multfaktor *= 2;
      }
    }
  }
  jdouble reduction = JavaLangMath_PI * 2;
  while (JavaLangMath_absWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_) > JavaLangMath_PI) {
    if (OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ > JavaLangMath_PI) {
      OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ -= reduction;
    }
    if (OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ < -JavaLangMath_PI) {
      OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_ += reduction;
    }
  }
  if (JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_) || JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_) || JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_c_) || JavaLangDouble_isNaNWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_d_)) {
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_ = YES;
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(@"findParameters(): a,b or c undefined (NaN).");
    return;
  }
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinWithDouble_withDouble_withDouble_(jdouble x, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return JavaLangMath_sinWithDouble_(c * x + d);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_cosWithDouble_withDouble_withDouble_(jdouble x, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return JavaLangMath_cosWithDouble_(c * x + d);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_fWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble a, jdouble b, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return a + b * OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinWithDouble_withDouble_withDouble_(x, c, d);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_a() {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return 1.0;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_bWithDouble_withDouble_withDouble_(jdouble x, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_sinWithDouble_withDouble_withDouble_(x, c, d);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_cWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble b, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_cosWithDouble_withDouble_withDouble_(x, c, d) * b * x;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_df_dWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble b, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return OrgGeogebraCommonKernelStatisticsAlgoFitSin_cosWithDouble_withDouble_withDouble_(x, c, d) * b;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble a, jdouble b, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  return y - OrgGeogebraCommonKernelStatisticsAlgoFitSin_fWithDouble_withDouble_withDouble_withDouble_withDouble_(x, a, b, c, d);
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray *x, IOSDoubleArray *y, jdouble a, jdouble b, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  jdouble sum = 0.0, beta;
  jint n = ((IOSDoubleArray *) nil_chk(x))->size_;
  for (jint i = 0; i < n; i++) {
    beta = OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(x, i), IOSDoubleArray_Get(nil_chk(y), i), a, b, c, d);
    sum += beta * beta;
  }
  return sum;
}

jdouble OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray *x, IOSDoubleArray *y, jdouble a, jdouble b, jdouble c, jdouble d) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  jdouble sum = 0.0;
  jint n = ((IOSDoubleArray *) nil_chk(x))->size_;
  for (jint i = 0; i < n; i++) {
    sum += JavaLangMath_absWithDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_betaWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(x, i), IOSDoubleArray_Get(nil_chk(y), i), a, b, c, d));
  }
  return sum;
}

jint OrgGeogebraCommonKernelStatisticsAlgoFitSin_directionWithDouble_withDouble_withDouble_(jdouble y1, jdouble y2, jdouble y3) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  if ((y3 > y2) && (y2 > y1)) {
    return 1;
  }
  else if ((y1 > y2) && (y2 > y3)) {
    return -1;
  }
  else {
    return 0;
  }
}

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_getPoints(OrgGeogebraCommonKernelStatisticsAlgoFitSin *self) {
  IOSDoubleArray *xlist = nil, *ylist = nil;
  IOSDoubleArray *xy = [IOSDoubleArray newArrayWithLength:2];
  OrgGeogebraCommonKernelGeosGeoElement *geoelement;
  JavaUtilTreeSet *sortedSet;
  sortedSet = new_JavaUtilTreeSet_initWithJavaUtilComparator_(OrgGeogebraCommonKernelGeosGeoPoint_getComparatorX());
  for (jint i = 0; i < OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_; i++) {
    geoelement = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(self->geolist_)) getWithInt:i];
    if ([geoelement isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) {
      [sortedSet addWithId:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(geoelement, [OrgGeogebraCommonKernelGeosGeoPoint class])];
    }
    else {
      OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_ = YES;
    }
  }
  id<JavaUtilIterator> iter = [sortedSet iterator];
  jint i = 0;
  xlist = [IOSDoubleArray newArrayWithLength:OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_];
  ylist = [IOSDoubleArray newArrayWithLength:OrgGeogebraCommonKernelStatisticsAlgoFitSin_size_];
  OrgGeogebraCommonKernelGeosGeoPoint *gp;
  while ([((id<JavaUtilIterator>) nil_chk(iter)) hasNext]) {
    gp = [iter next];
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(gp)) getInhomCoordsWithDoubleArray:xy];
    *IOSDoubleArray_GetRef(xlist, i) = IOSDoubleArray_Get(xy, 0);
    *IOSDoubleArray_GetRef(ylist, i) = IOSDoubleArray_Get(xy, 1);
    i++;
  }
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_ = xlist;
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_ = ylist;
  if (OrgGeogebraCommonKernelStatisticsAlgoFitSin_error_) {
    OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(@"getPoints(): Wrong list format, must be points.");
  }
}

jboolean OrgGeogebraCommonKernelStatisticsAlgoFitSin_nearmaxminWithDouble_withDouble_withInt_withInt_withDouble_withDouble_(jdouble a, jdouble b, jint state, jint current, jdouble max, jdouble min) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  if ((state == 1) && (current == -1)) {
    if (max > a + OrgGeogebraCommonKernelStatisticsAlgoFitSin_NOISEKILLER * b) {
      return YES;
    }
    return NO;
  }
  else if ((state == -1) && (current == 1)) {
    if (min < a - OrgGeogebraCommonKernelStatisticsAlgoFitSin_NOISEKILLER * b) {
      return YES;
    }
    return NO;
  }
  else {
    return NO;
  }
}

void OrgGeogebraCommonKernelStatisticsAlgoFitSin_errorMsgWithNSString_(NSString *s) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  OrgGeogebraCommonMainApp_debugWithNSString_(s);
}

jint OrgGeogebraCommonKernelStatisticsAlgoFitSin_findNumberOfHalfPeriodsWithInt_withInt_withInt_(jint k, jint xmin, jint xmax) {
  OrgGeogebraCommonKernelStatisticsAlgoFitSin_initialize();
  jdouble min_error = JavaLangDouble_MAX_VALUE;
  jdouble error;
  jdouble period, c;
  jint n = 0, best = 0;
  for (jint i = 1; i <= k; i++) {
    n = 2 * i - 1;
    period = JavaLangMath_absWithDouble_(IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_), xmax) - IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, xmin)) * 2.0 / n;
    c = OrgGeogebraCommonKernelStatisticsAlgoFitSin_TWO_PI / period;
    error = OrgGeogebraCommonKernelStatisticsAlgoFitSin_beta2WithDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_yd_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_a_, OrgGeogebraCommonKernelStatisticsAlgoFitSin_b_, c, OrgGeogebraCommonKernelStatisticsAlgoFitSin_PI / 2.0 - c * IOSDoubleArray_Get(OrgGeogebraCommonKernelStatisticsAlgoFitSin_xd_, xmax));
    if (error < min_error) {
      min_error = error;
      best = n;
    }
  }
  return best;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelStatisticsAlgoFitSin)
