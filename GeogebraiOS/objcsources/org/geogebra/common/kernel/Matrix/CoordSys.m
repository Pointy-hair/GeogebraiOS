//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/Matrix/CoordSys.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"

@interface OrgGeogebraCommonKernelMatrixCoordSys () {
 @public
  OrgGeogebraCommonKernelMatrixCoordMatrix *matrix_;
  jint dimension_;
  jint madeCoordSys_;
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *matrixOrthonormal_, *drawingMatrix_;
  OrgGeogebraCommonKernelMatrixCoords *equationVector_;
  OrgGeogebraCommonKernelMatrixCoords *origin_;
  IOSObjectArray *vectors_;
  jint spaceDimension_;
  OrgGeogebraCommonKernelMatrixCoords *tmpCoords1_, *tmpCoords2_, *tmpCoords3_, *tmpCoords4_;
  OrgGeogebraCommonKernelMatrixCoordMatrix *tempMatrix3x3_;
}

- (void)checkEquationVectorHasJustOneNegativeCoeff;

- (void)setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vx;

- (void)setDrawingMatrixFromMatrixOrthonormal;

- (void)setFromMatrixOrthonormal;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, matrix_, OrgGeogebraCommonKernelMatrixCoordMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, matrixOrthonormal_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, drawingMatrix_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, equationVector_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, origin_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, vectors_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, tmpCoords1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, tmpCoords2_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, tmpCoords3_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, tmpCoords4_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelMatrixCoordSys, tempMatrix3x3_, OrgGeogebraCommonKernelMatrixCoordMatrix *)

__attribute__((unused)) static void OrgGeogebraCommonKernelMatrixCoordSys_checkEquationVectorHasJustOneNegativeCoeff(OrgGeogebraCommonKernelMatrixCoordSys *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelMatrixCoordSys_setEquationVectorWithDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelMatrixCoordSys *self, jdouble a, jdouble b, jdouble c, jdouble d);

__attribute__((unused)) static void OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonKernelMatrixCoordSys *self, OrgGeogebraCommonKernelMatrixCoords *vx);

__attribute__((unused)) static void OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(OrgGeogebraCommonKernelMatrixCoordSys *self);

__attribute__((unused)) static void OrgGeogebraCommonKernelMatrixCoordSys_setFromMatrixOrthonormal(OrgGeogebraCommonKernelMatrixCoordSys *self);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelMatrixCoordSys)

OrgGeogebraCommonKernelMatrixCoordSys *OrgGeogebraCommonKernelMatrixCoordSys_Identity3D_;

@implementation OrgGeogebraCommonKernelMatrixCoordSys

- (instancetype)initWithInt:(jint)dimension {
  OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(self, dimension);
  return self;
}

- (void)setWithOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)cs {
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) getOrigin]];
  for (jint i = 0; i < spaceDimension_; i++) {
    [self setVWithOrgGeogebraCommonKernelMatrixCoords:[cs getVWithInt:i] withInt:i];
  }
  [((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(matrix_)) setWithOrgGeogebraCommonKernelMatrixCoordMatrix:cs->matrix_];
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) setWithOrgGeogebraCommonKernelMatrixCoordMatrix:cs->matrixOrthonormal_];
  if (drawingMatrix_ == nil) drawingMatrix_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(drawingMatrix_)) setWithOrgGeogebraCommonKernelMatrixCoordMatrix:cs->drawingMatrix_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(equationVector_)) setWithOrgGeogebraCommonKernelMatrixCoords:cs->equationVector_];
  madeCoordSys_ = cs->madeCoordSys_;
}

- (OrgGeogebraCommonKernelMatrixCoordMatrix *)getMatrix {
  return matrix_;
}

- (jint)getDimension {
  return dimension_;
}

- (void)setOriginWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(origin_)) setWithOrgGeogebraCommonKernelMatrixCoords:o];
}

- (void)setVxWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  [self setVWithOrgGeogebraCommonKernelMatrixCoords:v withInt:0];
}

- (void)setVyWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  [self setVWithOrgGeogebraCommonKernelMatrixCoords:v withInt:1];
}

- (void)setVzWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  [self setVWithOrgGeogebraCommonKernelMatrixCoords:v withInt:2];
}

- (void)setVWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v
                                            withInt:(jint)i {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(vectors_), i))) setWithOrgGeogebraCommonKernelMatrixCoords:v];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(vectors_), i);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getOrigin {
  return origin_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVx {
  return [self getVWithInt:0];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVy {
  return [self getVWithInt:1];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVz {
  return [self getVWithInt:2];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPointWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords2D {
  return [self getPointWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords2D)) getX] withDouble:[coords2D getY]];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPointWithDouble:(jdouble)x
                                                 withDouble:(jdouble)y {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin])) addWithOrgGeogebraCommonKernelMatrixCoords:[self getVectorWithDouble:x withDouble:y]];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPointWithDouble:(jdouble)x
                                                 withDouble:(jdouble)y
                                                 withDouble:(jdouble)z {
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(z)) {
    return [self getVectorWithDouble:x withDouble:y];
  }
  return [self getPointWithDouble:x / z withDouble:y / z];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPointForDrawingWithDouble:(jdouble)x
                                                           withDouble:(jdouble)y {
  return [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(drawingMatrix_)) mulWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(x, y, 0, 1)];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPointWithDouble:(jdouble)x {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getOrigin])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) mulWithDouble:x]];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVectorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords2D {
  return [self getVectorWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords2D)) getX] withDouble:[coords2D getY]];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVectorWithDouble:(jdouble)x
                                                  withDouble:(jdouble)y {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getVx])) mulWithDouble:x])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVy])) mulWithDouble:y]];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getNormal {
  return [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getVz];
}

- (IOSObjectArray *)getNormalProjectionWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords {
  IOSObjectArray *result = [IOSObjectArray newArrayWithObjects:(id[]){ new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4), new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) } count:2 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[self getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 0) withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 1)];
  return result;
}

- (IOSObjectArray *)getNormalProjectionForDrawingWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords {
  IOSObjectArray *result = [IOSObjectArray newArrayWithObjects:(id[]){ new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4), new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) } count:2 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:drawingMatrix_ withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 0) withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 1)];
  return result;
}

- (IOSObjectArray *)getProjectionWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords
                                 withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)willingDirection {
  IOSObjectArray *result = [IOSObjectArray newArrayWithObjects:(id[]){ new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4), new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) } count:2 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) projectPlaneThruVWithOrgGeogebraCommonKernelMatrixCoordMatrix:[self getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:willingDirection withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 0) withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 1)];
  return result;
}

- (IOSObjectArray *)getProjectionThruVIfPossibleWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords
                                                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)willingDirection {
  IOSObjectArray *result = [IOSObjectArray newArrayWithObjects:(id[]){ new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4), new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) } count:2 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) projectPlaneThruVIfPossibleWithOrgGeogebraCommonKernelMatrixCoordMatrix:[self getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:willingDirection withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 0) withOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(result, 1)];
  return result;
}

- (void)setMadeCoordSysWithInt:(jint)i {
  madeCoordSys_ = i;
}

- (void)setMadeCoordSys {
  [self setMadeCoordSysWithInt:dimension_];
}

- (void)resetCoordSys {
  [self setMadeCoordSysWithInt:-1];
}

- (jint)getMadeCoordSys {
  return madeCoordSys_;
}

- (void)completeCoordSys2D {
  {
    OrgGeogebraCommonKernelMatrixCoords *vx;
    switch ([self getMadeCoordSys]) {
      case 0:
      [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonKernelMatrixCoords_get_VX_()];
      [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonKernelMatrixCoords_get_VY_()];
      break;
      case 1:
      vx = [self getVx];
      if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vx)) getX])) [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, -[vx getZ], [vx getY], 0)];
      else [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(-[vx getY], [vx getX], 0, 0)];
      break;
    }
  }
}

- (jboolean)isMadeCoordSys {
  return [self getMadeCoordSys] == dimension_;
}

- (void)addPointWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p {
  if ([self isMadeCoordSys]) return;
  if ([self getMadeCoordSys] == -1) {
    [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:p];
    [self setMadeCoordSysWithInt:0];
  }
  else {
    [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(p)) subWithOrgGeogebraCommonKernelMatrixCoords:[self getOrigin]]];
  }
}

- (void)addVectorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  if ([self isMadeCoordSys]) {
    return;
  }
  [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:v];
}

- (void)addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  {
    OrgGeogebraCommonKernelMatrixCoords *vn;
    switch ([self getMadeCoordSys]) {
      case 0:
      if (!OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) norm], 0, OrgGeogebraCommonKernelKernel_STANDARD_PRECISION)) {
        [self setVxWithOrgGeogebraCommonKernelMatrixCoords:v];
        [self setMadeCoordSysWithInt:1];
      }
      break;
      case 1:
      vn = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:v];
      if (!OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) norm], 0, OrgGeogebraCommonKernelKernel_STANDARD_PRECISION)) {
        [self setVyWithOrgGeogebraCommonKernelMatrixCoords:v];
        [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getVy]]];
        [self setMadeCoordSysWithInt:2];
      }
      break;
    }
  }
}

- (void)makeEquationVector {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(equationVector_)) setWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getVy]]];
  [equationVector_ setWithInt:4 withDouble:0];
  jdouble d = [equationVector_ dotproductWithOrgGeogebraCommonKernelMatrixCoords:[self getOrigin]];
  [equationVector_ setWithInt:4 withDouble:-d];
  OrgGeogebraCommonKernelMatrixCoordSys_checkEquationVectorHasJustOneNegativeCoeff(self);
}

- (void)checkEquationVectorHasJustOneNegativeCoeff {
  OrgGeogebraCommonKernelMatrixCoordSys_checkEquationVectorHasJustOneNegativeCoeff(self);
}

- (void)setEquationVectorWithDouble:(jdouble)a
                         withDouble:(jdouble)b
                         withDouble:(jdouble)c
                         withDouble:(jdouble)d {
  OrgGeogebraCommonKernelMatrixCoordSys_setEquationVectorWithDouble_withDouble_withDouble_withDouble_(self, a, b, c, d);
}

- (void)setEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)n {
  OrgGeogebraCommonKernelMatrixCoordSys_setEquationVectorWithDouble_withDouble_withDouble_withDouble_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n)) getX], [n getY], [n getZ], -([n getX] * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) getX] + [n getY] * [o getY] + [n getZ] * [o getZ]));
}

- (void)setEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)cA
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)cB
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)cC {
  [self setEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:cA withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(cB)) subWithOrgGeogebraCommonKernelMatrixCoords:cA])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(cC)) subWithOrgGeogebraCommonKernelMatrixCoords:cA]]];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getEquationVector {
  return equationVector_;
}

- (void)makeCoordSysWithDoubleArray:(IOSDoubleArray *)vals {
  [self resetCoordSys];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(equationVector_)) setWithDoubleArray:vals];
  OrgGeogebraCommonKernelMatrixCoords *o = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  jboolean originSet = NO;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(vals))->size_ - 1; i++) {
    if (!originSet) if (IOSDoubleArray_Get(vals, i) != 0) {
      [o setWithInt:i + 1 withDouble:-IOSDoubleArray_Get(vals, vals->size_ - 1) / IOSDoubleArray_Get(vals, i)];
      originSet = YES;
    }
  }
  if (!originSet) return;
  [o setWithInt:vals->size_ withDouble:1];
  [self addPointWithOrgGeogebraCommonKernelMatrixCoords:o];
  IOSObjectArray *v = [equationVector_ completeOrthonormal];
  [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(v), 1)];
  [self addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(v, 0)];
}

- (jboolean)makeOrthoMatrixWithBoolean:(jboolean)projectOrigin
                           withBoolean:(jboolean)firstVectorParallelToXOY {
  if (![self isMadeCoordSys]) {
    if (dimension_ == 1) {
      [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) setWithDouble:0];
      if ([self getMadeCoordSys] == 0) [matrixOrthonormal_ setOriginWithOrgGeogebraCommonKernelMatrixCoords:[self getOrigin]];
      [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) setWithDouble:0];
    }
    return NO;
  }
  if (dimension_ == 1) {
    OrgGeogebraCommonKernelMatrixCoords *vy = [(new_OrgGeogebraCommonKernelMatrixCoords_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 0, 1, 0 } count:4])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getVx]];
    if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vy)) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) {
      [self setVyWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 1, 0, 0, 0 } count:4])];
      [self setVzWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDoubleArray_([IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 1, 0, 0 } count:4])];
    }
    else {
      [self setVyWithOrgGeogebraCommonKernelMatrixCoords:vy];
      [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getVy]]];
    }
    if (projectOrigin) {
      [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonKernelMatrixCoords_get_O_())) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[self getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
    }
    else {
      [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) setWithOrgGeogebraCommonKernelMatrixCoords:[self getOrigin]];
    }
    [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) setWithOrgGeogebraCommonKernelMatrixCoordsArray:[IOSObjectArray newArrayWithObjects:(id[]){ [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) normalized], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVy])) normalized], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) normalized], tmpCoords1_ } count:4 type:OrgGeogebraCommonKernelMatrixCoords_class_()]];
    return YES;
  }
  if (dimension_ == 2) {
    OrgGeogebraCommonKernelMatrixCoords *vx, *vy, *vz;
    if (firstVectorParallelToXOY) {
      vz = new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, 1, 0);
      vx = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:vz];
      if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vx)) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) {
        (void) [vx normalize];
        vy = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:vx];
        (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vy)) normalize];
        vz = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) normalized];
      }
      else {
        vx = new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(1, 0, 0, 0);
        vy = new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 1, 0, 0);
      }
    }
    else {
      vx = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) normalizedWithBoolean:YES];
      vz = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vx)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getVy]])) normalizedWithBoolean:YES];
      vy = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vz)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:vx];
    }
    [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:[self getOrigin]];
    [matrixOrthonormal_ setVxWithOrgGeogebraCommonKernelMatrixCoords:vx];
    [matrixOrthonormal_ setVyWithOrgGeogebraCommonKernelMatrixCoords:vy];
    [matrixOrthonormal_ setVzWithOrgGeogebraCommonKernelMatrixCoords:vz];
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonKernelMatrixCoords_get_O_())) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[self getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords3_];
    if (projectOrigin) {
      [matrixOrthonormal_ setOriginWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords3_];
    }
    OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(tmpCoords3_, vz, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VZ, tmpCoords1_, tmpCoords2_, drawingMatrix_);
    return YES;
  }
  return NO;
}

- (jboolean)isDefined {
  return [self isMadeCoordSys];
}

- (void)setUndefined {
  [self resetCoordSys];
}

- (OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)getMatrixOrthonormal {
  return matrixOrthonormal_;
}

- (OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)getDrawingMatrix {
  return drawingMatrix_;
}

- (void)setSimpleCoordSysWithOriginWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)m {
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:m];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonKernelMatrixCoords_get_VX_()];
  [self setVyWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonKernelMatrixCoords_get_VY_()];
  [self setVzWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonKernelMatrixCoords_get_VZ_()];
  matrixOrthonormal_ = OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity();
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:m];
  drawingMatrix_ = OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity();
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(drawingMatrix_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:m];
}

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) addInsideWithOrgGeogebraCommonKernelMatrixCoords:v];
  [matrixOrthonormal_ setOriginWithOrgGeogebraCommonKernelMatrixCoords:o];
  if (dimension_ == 2) {
    [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(drawingMatrix_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:o];
  }
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:o];
  if (dimension_ == 2) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonKernelMatrixCoords_get_O_())) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrixOrthonormal_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords3_];
    [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(drawingMatrix_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords3_];
  }
}

- (void)translateEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  [equationVector_ setWWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(equationVector_)) getW] - [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:equationVector_]];
}

- (IOSDoubleArray *)matrixTransformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:(OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)m {
  IOSDoubleArray *ret;
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(m)) mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin]];
  OrgGeogebraCommonKernelMatrixCoords *vx = [m mulWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getVx]];
  OrgGeogebraCommonKernelMatrixCoords *vy = [m mulWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getVy]];
  OrgGeogebraCommonKernelMatrixCoords *vn = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vx)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:vy];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) isZero]) {
    if ([vx isZero]) {
      if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vy)) isZero]) {
        ret = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 0, 0 } count:3];
        OrgGeogebraCommonKernelMatrixCoordMatrix4x4_IdentityWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(matrixOrthonormal_);
        [matrixOrthonormal_ setOriginWithOrgGeogebraCommonKernelMatrixCoords:o];
      }
      else {
        [vy calcNorm];
        jdouble l = [vy getNorm];
        ret = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 0, l } count:3];
        OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(o, [vy mulWithDouble:1 / l], OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VY, tmpCoords1_, tmpCoords2_, matrixOrthonormal_);
      }
    }
    else {
      [vx calcNorm];
      jdouble l = [vx getNorm];
      vx = [vx mulWithDouble:1 / l];
      jdouble a = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vy)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vx];
      ret = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ l, a, 0 } count:3];
      OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(o, vx, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VX, tmpCoords1_, tmpCoords2_, matrixOrthonormal_);
    }
  }
  else {
    [vx calcNorm];
    jdouble l = [vx getNorm];
    vx = [vx mulWithDouble:1 / l];
    (void) [vn normalize];
    OrgGeogebraCommonKernelMatrixCoords *vyn = [vn crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:vx];
    jdouble a = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vy)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vx];
    jdouble b = [vy dotproductWithOrgGeogebraCommonKernelMatrixCoords:vyn];
    ret = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ l, a, b } count:3];
    [matrixOrthonormal_ setVxWithOrgGeogebraCommonKernelMatrixCoords:vx];
    [matrixOrthonormal_ setVyWithOrgGeogebraCommonKernelMatrixCoords:vyn];
    [matrixOrthonormal_ setVzWithOrgGeogebraCommonKernelMatrixCoords:vn];
    [matrixOrthonormal_ setOriginWithOrgGeogebraCommonKernelMatrixCoords:o];
  }
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:o];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:[m mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVx]]];
  if (dimension_ == 2) {
    [self setVyWithOrgGeogebraCommonKernelMatrixCoords:[m mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVy]]];
    [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[m mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVz]]];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
  }
  return ret;
}

- (void)setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vx {
  OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords_(self, vx);
}

- (void)setDrawingMatrixFromMatrixOrthonormal {
  OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
}

- (void)rotateWithDouble:(jdouble)phi
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center {
  if (tempMatrix3x3_ == nil) {
    tempMatrix3x3_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix_initWithInt_withInt_(3, 3);
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix_Rotation3x3WithDouble_withOrgGeogebraCommonKernelMatrixCoordMatrix_(phi, tempMatrix3x3_);
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin];
  matrixOrthonormal_ = [((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(tempMatrix3x3_)) mul3x3WithOrgGeogebraCommonKernelMatrixCoordMatrix:matrixOrthonormal_];
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) subWithOrgGeogebraCommonKernelMatrixCoords:center]])) addWithOrgGeogebraCommonKernelMatrixCoords:center]];
  [matrixOrthonormal_ setWithInt:4 withInt:4 withDouble:1];
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:o];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:[tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVx]]];
  if (dimension_ == 2) {
    [self setVyWithOrgGeogebraCommonKernelMatrixCoords:[tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVy]]];
    [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVz]]];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
  }
}

- (void)rotateWithOrgGeogebraCommonKernelMatrixCoordMatrix:(OrgGeogebraCommonKernelMatrixCoordMatrix *)rot
                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center {
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin];
  OrgGeogebraCommonKernelMatrixCoords *newOrigin = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(rot)) mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) subWithOrgGeogebraCommonKernelMatrixCoords:center]])) addWithOrgGeogebraCommonKernelMatrixCoords:center];
  OrgGeogebraCommonKernelMatrixCoords *vx = [matrixOrthonormal_ getVx];
  OrgGeogebraCommonKernelMatrixCoords *vz = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  [vz setValuesWithOrgGeogebraCommonKernelMatrixCoords:[rot mulWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getVz]] withInt:3];
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(newOrigin, vz, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VZ, vx, tmpCoords1_, tmpCoords2_, matrixOrthonormal_);
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:newOrigin];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getVx]];
  if (dimension_ == 2) {
    [self setVyWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getVy]];
    [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getVz]];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords_(self, [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(drawingMatrix_)) getVx]);
  }
}

- (void)rotateWithDouble:(jdouble)phi
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)direction {
  if (tempMatrix3x3_ == nil) {
    tempMatrix3x3_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix_initWithInt_withInt_(3, 3);
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix_Rotation3x3WithOrgGeogebraCommonKernelMatrixCoords_withDouble_withOrgGeogebraCommonKernelMatrixCoordMatrix_(direction, phi, tempMatrix3x3_);
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin];
  matrixOrthonormal_ = [((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(tempMatrix3x3_)) mul3x3WithOrgGeogebraCommonKernelMatrixCoordMatrix:matrixOrthonormal_];
  OrgGeogebraCommonKernelMatrixCoords *newOrigin = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) subWithOrgGeogebraCommonKernelMatrixCoords:center]])) addWithOrgGeogebraCommonKernelMatrixCoords:center];
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:newOrigin];
  [matrixOrthonormal_ setWithInt:4 withInt:4 withDouble:1];
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:newOrigin];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:[tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVx]]];
  if (dimension_ == 2) {
    [self setVyWithOrgGeogebraCommonKernelMatrixCoords:[tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVy]]];
    [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[tempMatrix3x3_ mulWithOrgGeogebraCommonKernelMatrixCoords:[self getVz]]];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
  }
}

- (void)dilateWithDouble:(jdouble)r
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  if (r < 0) {
    [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) mulInside3x3WithDouble:-1];
  }
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin];
  OrgGeogebraCommonKernelMatrixCoords *newOrigin = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) mulWithDouble:r])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) mulWithDouble:1 - r]];
  [matrixOrthonormal_ setOriginWithOrgGeogebraCommonKernelMatrixCoords:newOrigin];
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:newOrigin];
  if (r < 0) {
    (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) mulInsideWithDouble:-1];
  }
  if (dimension_ == 2) {
    if (r < 0) {
      (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVy])) mulInsideWithDouble:-1];
      (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) mulInsideWithDouble:-1];
    }
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
  }
}

- (void)dilateEquationVectorWithDouble:(jdouble)r
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  [self translateEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) mulWithDouble:1 - r]];
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) mulInsideWithDouble:-1];
  [matrixOrthonormal_ addToOriginWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) mulWithDouble:2]];
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getOrigin]];
  (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) mulInsideWithDouble:-1];
  if (dimension_ == 2) {
    (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVy])) mulInsideWithDouble:-1];
    (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) mulInsideWithDouble:-1];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
  }
}

- (void)mirrorEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  [self translateEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) mulWithDouble:2]];
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)direction {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin])) projectLineWithOrgGeogebraCommonKernelMatrixCoords:point withOrgGeogebraCommonKernelMatrixCoords:direction withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_ withDoubleArray:nil];
  jdouble x = 2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVx])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction];
  jdouble y = 2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVy])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction];
  jdouble z = 2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVz])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction];
  [matrixOrthonormal_ mulInsideWithDouble:-1];
  [matrixOrthonormal_ addToVxWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(direction)) mulWithDouble:x]];
  [matrixOrthonormal_ addToVyWithOrgGeogebraCommonKernelMatrixCoords:[direction mulWithDouble:y]];
  [matrixOrthonormal_ addToVzWithOrgGeogebraCommonKernelMatrixCoords:[direction mulWithDouble:z]];
  [matrixOrthonormal_ addToOriginWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) mulWithDouble:2]];
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getOrigin]];
  jdouble p = 2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) mulWithDouble:-1])) addWithOrgGeogebraCommonKernelMatrixCoords:[direction mulWithDouble:p]]];
  if (dimension_ == 2) {
    p = 2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVy])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction];
    [self setVyWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVy])) mulWithDouble:-1])) addWithOrgGeogebraCommonKernelMatrixCoords:[direction mulWithDouble:p]]];
    p = 2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:direction];
    [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) mulWithDouble:-1])) addWithOrgGeogebraCommonKernelMatrixCoords:[direction mulWithDouble:p]]];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
  }
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)cs {
  OrgGeogebraCommonKernelMatrixCoords *vn = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) getNormal];
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[cs getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  jdouble x = -2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVx])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn];
  jdouble y = -2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVy])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn];
  jdouble z = -2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVz])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn];
  [matrixOrthonormal_ addToVxWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vn withDouble:x]];
  [matrixOrthonormal_ addToVyWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:vn withDouble:y]];
  [matrixOrthonormal_ addToVzWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:vn withDouble:z]];
  [matrixOrthonormal_ setOriginWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setSubWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_ withDouble:2] withOrgGeogebraCommonKernelMatrixCoords:o]];
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getOrigin]];
  jdouble p = -2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVx])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords3_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:[self getVx] withDouble:-1] withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:vn withDouble:p]]];
  if (dimension_ == 2) {
    p = -2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVy])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn];
    [self setVyWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords3_ setMulWithOrgGeogebraCommonKernelMatrixCoords:[self getVy] withDouble:-1] withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:vn withDouble:p]]];
    p = -2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getVz])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn];
    [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords3_ setMulWithOrgGeogebraCommonKernelMatrixCoords:[self getVz] withDouble:-1] withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:vn withDouble:p]]];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(self);
  }
}

- (void)updateContinuousWithOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)coordsys {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin])) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys)) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  OrgGeogebraCommonKernelMatrixCoords *vz = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk([coordsys getMatrixOrthonormal])) getVz];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([matrixOrthonormal_ getVz])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vz] < 0) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vz)) mulInside3WithDouble:-1];
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(tmpCoords1_, vz, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VZ, [matrixOrthonormal_ getVx], tmpCoords2_, tmpCoords3_, matrixOrthonormal_);
  OrgGeogebraCommonKernelMatrixCoordSys_setFromMatrixOrthonormal(self);
}

- (void)updateToContainPointWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrixOrthonormal_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) setSubWithOrgGeogebraCommonKernelMatrixCoords:point withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) addToOriginWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  OrgGeogebraCommonKernelMatrixCoordSys_setFromMatrixOrthonormal(self);
}

- (void)updateContinuousPointVxWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point
                               withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vector {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrixOrthonormal_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) setSubWithOrgGeogebraCommonKernelMatrixCoords:point withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  (void) [tmpCoords1_ setAddWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_ withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(matrixOrthonormal_)) getOrigin]];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setCrossProductWithOrgGeogebraCommonKernelMatrixCoords:[matrixOrthonormal_ getVz] withOrgGeogebraCommonKernelMatrixCoords:vector];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords3_)) setCrossProductWithOrgGeogebraCommonKernelMatrixCoords:vector withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
  [tmpCoords3_ setWWithDouble:0];
  (void) [tmpCoords3_ normalize];
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(tmpCoords1_, tmpCoords3_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VZ, [matrixOrthonormal_ getVx], tmpCoords2_, tmpCoords4_, matrixOrthonormal_);
  OrgGeogebraCommonKernelMatrixCoordSys_setFromMatrixOrthonormal(self);
}

- (void)setFromMatrixOrthonormal {
  OrgGeogebraCommonKernelMatrixCoordSys_setFromMatrixOrthonormal(self);
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelMatrixCoordSys class]) {
    {
      OrgGeogebraCommonKernelMatrixCoordSys_Identity3D_ = new_OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(2);
      [OrgGeogebraCommonKernelMatrixCoordSys_Identity3D_ makeCoordSysWithDoubleArray:[IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 0, 1, 0 } count:4]];
      [OrgGeogebraCommonKernelMatrixCoordSys_Identity3D_ makeOrthoMatrixWithBoolean:YES withBoolean:YES];
    }
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelMatrixCoordSys)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "CoordSys", NULL, 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelMatrixCoordSys:", "set", "V", 0x1, NULL, NULL },
    { "getMatrix", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "setOriginWithOrgGeogebraCommonKernelMatrixCoords:", "setOrigin", "V", 0x1, NULL, NULL },
    { "setVxWithOrgGeogebraCommonKernelMatrixCoords:", "setVx", "V", 0x1, NULL, NULL },
    { "setVyWithOrgGeogebraCommonKernelMatrixCoords:", "setVy", "V", 0x1, NULL, NULL },
    { "setVzWithOrgGeogebraCommonKernelMatrixCoords:", "setVz", "V", 0x1, NULL, NULL },
    { "setVWithOrgGeogebraCommonKernelMatrixCoords:withInt:", "setV", "V", 0x1, NULL, NULL },
    { "getVWithInt:", "getV", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getOrigin", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getVx", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getVy", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getVz", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getPointWithOrgGeogebraCommonKernelMatrixCoords:", "getPoint", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getPointWithDouble:withDouble:", "getPoint", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getPointWithDouble:withDouble:withDouble:", "getPoint", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getPointForDrawingWithDouble:withDouble:", "getPointForDrawing", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getPointWithDouble:", "getPoint", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getVectorWithOrgGeogebraCommonKernelMatrixCoords:", "getVector", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getVectorWithDouble:withDouble:", "getVector", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getNormal", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getNormalProjectionWithOrgGeogebraCommonKernelMatrixCoords:", "getNormalProjection", "[Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getNormalProjectionForDrawingWithOrgGeogebraCommonKernelMatrixCoords:", "getNormalProjectionForDrawing", "[Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getProjectionWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "getProjection", "[Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getProjectionThruVIfPossibleWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "getProjectionThruVIfPossible", "[Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "setMadeCoordSysWithInt:", "setMadeCoordSys", "V", 0x1, NULL, NULL },
    { "setMadeCoordSys", NULL, "V", 0x1, NULL, NULL },
    { "resetCoordSys", NULL, "V", 0x1, NULL, NULL },
    { "getMadeCoordSys", NULL, "I", 0x1, NULL, NULL },
    { "completeCoordSys2D", NULL, "V", 0x1, NULL, NULL },
    { "isMadeCoordSys", NULL, "Z", 0x1, NULL, NULL },
    { "addPointWithOrgGeogebraCommonKernelMatrixCoords:", "addPoint", "V", 0x1, NULL, NULL },
    { "addVectorWithOrgGeogebraCommonKernelMatrixCoords:", "addVector", "V", 0x1, NULL, NULL },
    { "addVectorWithoutCheckMadeCoordSysWithOrgGeogebraCommonKernelMatrixCoords:", "addVectorWithoutCheckMadeCoordSys", "V", 0x1, NULL, NULL },
    { "makeEquationVector", NULL, "V", 0x1, NULL, NULL },
    { "checkEquationVectorHasJustOneNegativeCoeff", NULL, "V", 0x12, NULL, NULL },
    { "setEquationVectorWithDouble:withDouble:withDouble:withDouble:", "setEquationVector", "V", 0x11, NULL, NULL },
    { "setEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "setEquationVector", "V", 0x1, NULL, NULL },
    { "setEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "setEquationVector", "V", 0x1, NULL, NULL },
    { "getEquationVector", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "makeCoordSysWithDoubleArray:", "makeCoordSys", "V", 0x1, NULL, NULL },
    { "makeOrthoMatrixWithBoolean:withBoolean:", "makeOrthoMatrix", "Z", 0x1, NULL, NULL },
    { "isDefined", NULL, "Z", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x1, NULL, NULL },
    { "getMatrixOrthonormal", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", 0x1, NULL, NULL },
    { "getDrawingMatrix", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", 0x1, NULL, NULL },
    { "setSimpleCoordSysWithOriginWithOrgGeogebraCommonKernelMatrixCoords:", "setSimpleCoordSysWithOrigin", "V", 0x1, NULL, NULL },
    { "translateWithOrgGeogebraCommonKernelMatrixCoords:", "translate", "V", 0x1, NULL, NULL },
    { "translateEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:", "translateEquationVector", "V", 0x1, NULL, NULL },
    { "matrixTransformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:", "matrixTransform", "[D", 0x1, NULL, NULL },
    { "setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords:", "setDrawingMatrixFromMatrixOrthonormal", "V", 0x2, NULL, NULL },
    { "setDrawingMatrixFromMatrixOrthonormal", NULL, "V", 0x2, NULL, NULL },
    { "rotateWithDouble:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelMatrixCoordMatrix:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithDouble:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x1, NULL, NULL },
    { "dilateWithDouble:withOrgGeogebraCommonKernelMatrixCoords:", "dilate", "V", 0x1, NULL, NULL },
    { "dilateEquationVectorWithDouble:withOrgGeogebraCommonKernelMatrixCoords:", "dilateEquationVector", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorEquationVectorWithOrgGeogebraCommonKernelMatrixCoords:", "mirrorEquationVector", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoordSys:", "mirror", "V", 0x1, NULL, NULL },
    { "updateContinuousWithOrgGeogebraCommonKernelMatrixCoordSys:", "updateContinuous", "V", 0x1, NULL, NULL },
    { "updateToContainPointWithOrgGeogebraCommonKernelMatrixCoords:", "updateToContainPoint", "V", 0x1, NULL, NULL },
    { "updateContinuousPointVxWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "updateContinuousPointVx", "V", 0x1, NULL, NULL },
    { "setFromMatrixOrthonormal", NULL, "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "matrix_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", NULL, NULL,  },
    { "dimension_", NULL, 0x2, "I", NULL, NULL,  },
    { "madeCoordSys_", NULL, 0x2, "I", NULL, NULL,  },
    { "matrixOrthonormal_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", NULL, NULL,  },
    { "drawingMatrix_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", NULL, NULL,  },
    { "equationVector_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "origin_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "vectors_", NULL, 0x2, "[Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "spaceDimension_", NULL, 0x2, "I", NULL, NULL,  },
    { "tmpCoords1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords3_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords4_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "Identity3D_", NULL, 0x19, "Lorg.geogebra.common.kernel.Matrix.CoordSys;", &OrgGeogebraCommonKernelMatrixCoordSys_Identity3D_, NULL,  },
    { "tempMatrix3x3_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelMatrixCoordSys = { 2, "CoordSys", "org.geogebra.common.kernel.Matrix", NULL, 0x1, 66, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelMatrixCoordSys;
}

@end

void OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(OrgGeogebraCommonKernelMatrixCoordSys *self, jint dimension) {
  (void) NSObject_init(self);
  self->spaceDimension_ = 3;
  self->tmpCoords1_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  self->tmpCoords2_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  self->tmpCoords3_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  self->tmpCoords4_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  self->matrix_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix_initWithInt_withInt_(4, 4);
  self->matrixOrthonormal_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  self->drawingMatrix_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  self->dimension_ = dimension;
  self->origin_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(self->spaceDimension_ + 1);
  [self->origin_ setWithInt:self->spaceDimension_ + 1 withDouble:1];
  self->vectors_ = [IOSObjectArray newArrayWithLength:self->spaceDimension_ type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  for (jint i = 0; i < self->spaceDimension_; i++) {
    (void) IOSObjectArray_Set(self->vectors_, i, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(self->spaceDimension_ + 1));
  }
  self->equationVector_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(self->spaceDimension_ + 1);
  [self resetCoordSys];
}

OrgGeogebraCommonKernelMatrixCoordSys *new_OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(jint dimension) {
  OrgGeogebraCommonKernelMatrixCoordSys *self = [OrgGeogebraCommonKernelMatrixCoordSys alloc];
  OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(self, dimension);
  return self;
}

void OrgGeogebraCommonKernelMatrixCoordSys_checkEquationVectorHasJustOneNegativeCoeff(OrgGeogebraCommonKernelMatrixCoordSys *self) {
  jint zeros = 0;
  jboolean negative = NO;
  for (jint i = 1; i <= 3; i++) {
    jdouble coeff = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->equationVector_)) getWithInt:i];
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(coeff)) {
      zeros++;
    }
    else {
      negative = (coeff < 0);
    }
  }
  if (zeros == 2 && negative) {
    (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->equationVector_)) mulInsideWithDouble:-1];
  }
}

void OrgGeogebraCommonKernelMatrixCoordSys_setEquationVectorWithDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelMatrixCoordSys *self, jdouble a, jdouble b, jdouble c, jdouble d) {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->equationVector_)) setXWithDouble:a];
  [self->equationVector_ setYWithDouble:b];
  [self->equationVector_ setZWithDouble:c];
  [self->equationVector_ setWWithDouble:d];
  OrgGeogebraCommonKernelMatrixCoordSys_checkEquationVectorHasJustOneNegativeCoeff(self);
}

void OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonKernelMatrixCoordSys *self, OrgGeogebraCommonKernelMatrixCoords *vx) {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonKernelMatrixCoords_get_O_())) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:self->matrixOrthonormal_ withOrgGeogebraCommonKernelMatrixCoords:self->tmpCoords3_];
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self->tmpCoords3_, [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(self->matrixOrthonormal_)) getVz], OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VZ, vx, self->tmpCoords1_, self->tmpCoords2_, self->drawingMatrix_);
}

void OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormal(OrgGeogebraCommonKernelMatrixCoordSys *self) {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonKernelMatrixCoords_get_O_())) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:self->matrixOrthonormal_ withOrgGeogebraCommonKernelMatrixCoords:self->tmpCoords3_];
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_createOrthoToDirectionWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withInt_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self->tmpCoords3_, [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(self->matrixOrthonormal_)) getVz], OrgGeogebraCommonKernelMatrixCoordMatrix4x4_VZ, self->tmpCoords1_, self->tmpCoords2_, self->drawingMatrix_);
}

void OrgGeogebraCommonKernelMatrixCoordSys_setFromMatrixOrthonormal(OrgGeogebraCommonKernelMatrixCoordSys *self) {
  [self setOriginWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(self->matrixOrthonormal_)) getOrigin]];
  [self setVxWithOrgGeogebraCommonKernelMatrixCoords:[self->matrixOrthonormal_ getVx]];
  if (self->dimension_ == 2) {
    [self setVyWithOrgGeogebraCommonKernelMatrixCoords:[self->matrixOrthonormal_ getVy]];
    [self setVzWithOrgGeogebraCommonKernelMatrixCoords:[self->matrixOrthonormal_ getVz]];
    OrgGeogebraCommonKernelMatrixCoordSys_setDrawingMatrixFromMatrixOrthonormalWithOrgGeogebraCommonKernelMatrixCoords_(self, [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(self->drawingMatrix_)) getVx]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelMatrixCoordSys)
