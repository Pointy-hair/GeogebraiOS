//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/kernelND/GeoQuadricND.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "org/geogebra/common/kernel/geos/ChangeableCoordParent.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"

@interface OrgGeogebraCommonKernelKernelNDGeoQuadricND () {
 @public
  jint dimension_;
  OrgGeogebraCommonKernelMatrixCoordMatrix *symetricMatrix_;
  OrgGeogebraCommonKernelMatrixCoordMatrix *tmpEigenMatrix_;
  OrgGeogebraCommonKernelGeosChangeableCoordParent *changeableCoordParent_;
  jboolean trace_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelKernelNDGeoQuadricND, symetricMatrix_, OrgGeogebraCommonKernelMatrixCoordMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelKernelNDGeoQuadricND, tmpEigenMatrix_, OrgGeogebraCommonKernelMatrixCoordMatrix *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelKernelNDGeoQuadricND, changeableCoordParent_, OrgGeogebraCommonKernelGeosChangeableCoordParent *)

__attribute__((unused)) static void OrgGeogebraCommonKernelKernelNDGeoQuadricND_setChangeableCoordParentWithOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelKernelNDGeoQuadricND *self, OrgGeogebraCommonKernelGeosGeoNumeric *number, OrgGeogebraCommonKernelGeosGeoElement *direction);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelKernelNDGeoQuadricND)

IOSCharArray *OrgGeogebraCommonKernelKernelNDGeoQuadricND_VAR_STRING_;

@implementation OrgGeogebraCommonKernelKernelNDGeoQuadricND

- (IOSDoubleArray *)getFlatMatrix {
  return matrix_;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                    withInt:(jint)dimension {
  OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, c, dimension);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                    withInt:(jint)dimension
                                                withBoolean:(jboolean)isIntersection {
  OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_withInt_withBoolean_(self, c, dimension, isIntersection);
  return self;
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  OrgGeogebraCommonKernelKernelNDGeoQuadricND *quadric = (OrgGeogebraCommonKernelKernelNDGeoQuadricND *) check_class_cast(geo, [OrgGeogebraCommonKernelKernelNDGeoQuadricND class]);
  if ([((OrgGeogebraCommonKernelKernelNDGeoQuadricND *) nil_chk(quadric)) hasChangeableCoordParentNumbers]) OrgGeogebraCommonKernelKernelNDGeoQuadricND_setChangeableCoordParentWithOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(self, [((OrgGeogebraCommonKernelGeosChangeableCoordParent *) nil_chk(quadric->changeableCoordParent_)) getNumber], [quadric->changeableCoordParent_ getDirector]);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getEigenvec3DWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(eigenvecND_), i);
}

- (OrgGeogebraCommonKernelMatrixCoordMatrix *)getSymetricMatrixWithDoubleArray:(IOSDoubleArray *)vals {
  if (symetricMatrix_ == nil) {
    symetricMatrix_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix_initWithInt_withInt_(4, 4);
  }
  [((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(symetricMatrix_)) setWithInt:1 withInt:1 withDouble:IOSDoubleArray_Get(nil_chk(vals), 0)];
  [symetricMatrix_ setWithInt:2 withInt:2 withDouble:IOSDoubleArray_Get(vals, 1)];
  [symetricMatrix_ setWithInt:3 withInt:3 withDouble:IOSDoubleArray_Get(vals, 2)];
  [symetricMatrix_ setWithInt:4 withInt:4 withDouble:IOSDoubleArray_Get(vals, 3)];
  [symetricMatrix_ setWithInt:1 withInt:2 withDouble:IOSDoubleArray_Get(vals, 4)];
  [symetricMatrix_ setWithInt:2 withInt:1 withDouble:IOSDoubleArray_Get(vals, 4)];
  [symetricMatrix_ setWithInt:1 withInt:3 withDouble:IOSDoubleArray_Get(vals, 5)];
  [symetricMatrix_ setWithInt:3 withInt:1 withDouble:IOSDoubleArray_Get(vals, 5)];
  [symetricMatrix_ setWithInt:2 withInt:3 withDouble:IOSDoubleArray_Get(vals, 6)];
  [symetricMatrix_ setWithInt:3 withInt:2 withDouble:IOSDoubleArray_Get(vals, 6)];
  [symetricMatrix_ setWithInt:1 withInt:4 withDouble:IOSDoubleArray_Get(vals, 7)];
  [symetricMatrix_ setWithInt:4 withInt:1 withDouble:IOSDoubleArray_Get(vals, 7)];
  [symetricMatrix_ setWithInt:2 withInt:4 withDouble:IOSDoubleArray_Get(vals, 8)];
  [symetricMatrix_ setWithInt:4 withInt:2 withDouble:IOSDoubleArray_Get(vals, 8)];
  [symetricMatrix_ setWithInt:3 withInt:4 withDouble:IOSDoubleArray_Get(vals, 9)];
  [symetricMatrix_ setWithInt:4 withInt:3 withDouble:IOSDoubleArray_Get(vals, 9)];
  return symetricMatrix_;
}

- (OrgGeogebraCommonKernelMatrixCoordMatrix *)getSymetricMatrix {
  return [self getSymetricMatrixWithDoubleArray:matrix_];
}

- (void)setMatrixFromEigen {
  if (tmpEigenMatrix_ == nil) {
    tmpEigenMatrix_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix_initWithInt_withInt_(4, 4);
  }
  [((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(tmpEigenMatrix_)) setWithOrgGeogebraCommonKernelMatrixCoordsArray:eigenvecND_];
  [tmpEigenMatrix_ setWithOrgGeogebraCommonKernelMatrixCoords:[self getMidpoint] withInt:4];
  OrgGeogebraCommonKernelMatrixCoordMatrix *diagonalizedMatrix = OrgGeogebraCommonKernelMatrixCoordMatrix_DiagonalMatrixWithDoubleArray_(diagonal_);
  OrgGeogebraCommonKernelMatrixCoordMatrix *eigenMatrixInv = [tmpEigenMatrix_ inverse];
  OrgGeogebraCommonKernelMatrixCoordMatrix *finalMatrix = [((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(eigenMatrixInv)) transposeCopy])) mulWithOrgGeogebraCommonKernelMatrixCoordMatrix:diagonalizedMatrix])) mulWithOrgGeogebraCommonKernelMatrixCoordMatrix:eigenMatrixInv];
  [self setMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix:finalMatrix];
}

- (void)setMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix:(OrgGeogebraCommonKernelMatrixCoordMatrix *)m {
  *IOSDoubleArray_GetRef(nil_chk(matrix_), 0) = [((OrgGeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getWithInt:1 withInt:1];
  *IOSDoubleArray_GetRef(matrix_, 1) = [m getWithInt:2 withInt:2];
  *IOSDoubleArray_GetRef(matrix_, 2) = [m getWithInt:3 withInt:3];
  *IOSDoubleArray_GetRef(matrix_, 3) = [m getWithInt:4 withInt:4];
  *IOSDoubleArray_GetRef(matrix_, 4) = [m getWithInt:1 withInt:2];
  *IOSDoubleArray_GetRef(matrix_, 5) = [m getWithInt:1 withInt:3];
  *IOSDoubleArray_GetRef(matrix_, 6) = [m getWithInt:2 withInt:3];
  *IOSDoubleArray_GetRef(matrix_, 7) = [m getWithInt:1 withInt:4];
  *IOSDoubleArray_GetRef(matrix_, 8) = [m getWithInt:2 withInt:4];
  *IOSDoubleArray_GetRef(matrix_, 9) = [m getWithInt:3 withInt:4];
}

- (void)setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
                 withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
                                                      withDouble:(jdouble)r {
  defined_ = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(M, [OrgGeogebraCommonKernelGeosGeoElement class])))) isDefined] && ![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(M)) isInfinite]);
  [self setSphereNDWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(M)) getInhomCoordsInD3] withDouble:r];
}

- (void)setSphereNDWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)M
                                                withDouble:(jdouble)rad {
  jdouble r = rad;
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(r)) {
    r = 0;
  }
  else if (r < 0) {
    defined_ = NO;
  }
  if (defined_) {
    [self setSphereNDMatrixWithOrgGeogebraCommonKernelMatrixCoords:M withDouble:r];
    [self setAffineTransform];
  }
}

- (void)setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSphereNDMatrixWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)M
                                                      withDouble:(jdouble)r {
  IOSDoubleArray *coords = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(M)) get];
  [self setMidpointWithDoubleArray:coords];
  for (jint i = 0; i < dimension_; i++) *IOSDoubleArray_GetRef(nil_chk(halfAxes_), i) = r;
  for (jint i = 0; i < dimension_; i++) *IOSDoubleArray_GetRef(nil_chk(matrix_), i) = 1.0;
  *IOSDoubleArray_GetRef(nil_chk(matrix_), dimension_) = -r * r;
  for (jint i = 0; i < dimension_; i++) *IOSDoubleArray_GetRef(matrix_, dimension_) += IOSDoubleArray_Get(nil_chk(coords), i) * IOSDoubleArray_Get(coords, i);
  for (jint i = dimension_ + 1; i < matrixDim_ - dimension_; i++) *IOSDoubleArray_GetRef(matrix_, i) = 0.0;
  for (jint i = matrixDim_ - dimension_; i < matrixDim_; i++) *IOSDoubleArray_GetRef(matrix_, i) = -IOSDoubleArray_Get(nil_chk(coords), i - (matrixDim_ - dimension_));
  if (r > OrgGeogebraCommonKernelKernel_STANDARD_PRECISION) {
    if (type_ != OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_SPHERE) {
      type_ = OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_SPHERE;
      linearEccentricity_ = 0.0;
      eccentricity_ = 0.0;
      [self setFirstEigenvectorWithDoubleArray:[IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 1, 0 } count:2]];
      [self setEigenvectors];
    }
  }
  else if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(r)) {
    [self singlePoint];
  }
  else {
    [self empty];
  }
}

- (void)empty {
  type_ = OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_EMPTY;
}

- (void)setUndefined {
  defined_ = NO;
  [self empty];
}

- (void)setDefined {
  defined_ = YES;
}

- (void)setMidpointWithDouble:(jdouble)coord1
                   withDouble:(jdouble)coord2 {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(midpoint_)) setWithInt:1 withDouble:coord1];
  [midpoint_ setWithInt:2 withDouble:coord2];
}

- (void)setMidpointWithDoubleArray:(IOSDoubleArray *)coords {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(midpoint_)) setWithDoubleArray:coords];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMidpoint2D {
  return midpoint_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMidpoint {
  return [self getMidpoint2D];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMidpoint3D {
  OrgGeogebraCommonKernelMatrixCoords *ret = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  for (jint i = 1; i < [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(midpoint_)) getLength]; i++) [ret setWithInt:i withDouble:[midpoint_ getWithInt:i]];
  [ret setWWithDouble:[midpoint_ getLast]];
  return ret;
}

- (jdouble)getHalfAxisWithInt:(jint)i {
  return IOSDoubleArray_Get(nil_chk(halfAxes_), i);
}

- (jboolean)isDefined {
  return defined_;
}

- (jint)getType {
  return type_;
}

- (void)setTypeWithInt:(jint)type {
  self->type_ = type;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  JavaLangStringBuilder *sbToString = new_JavaLangStringBuilder_init();
  [sbToString setLengthWithInt:0];
  (void) [sbToString appendWithNSString:label_];
  (void) [sbToString appendWithNSString:@": "];
  (void) [sbToString appendWithNSString:[((JavaLangStringBuilder *) nil_chk([self buildValueStringWithOrgGeogebraCommonKernelStringTemplate:tpl])) description]];
  return [sbToString description];
}

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((JavaLangStringBuilder *) nil_chk([self buildValueStringWithOrgGeogebraCommonKernelStringTemplate:tpl])) description];
}

- (JavaLangStringBuilder *)buildValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)buildSphereNDStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbToValueString
           withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  NSString *squared;
  switch ([[((OrgGeogebraCommonKernelStringTemplate *) nil_chk(tpl)) getStringType] ordinal]) {
    case OrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringType_LATEX:
    squared = @"^{2}";
    break;
    case OrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringType_GIAC:
    squared = @"^2";
    break;
    default:
    squared = @"\u00b2";
  }
  for (jint i = 0; i < dimension_; i++) {
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getMidpoint])) getWithInt:i + 1])) {
      (void) [((JavaLangStringBuilder *) nil_chk(sbToValueString)) appendWithChar:IOSCharArray_Get(nil_chk(OrgGeogebraCommonKernelKernelNDGeoQuadricND_VAR_STRING_), i)];
      (void) [sbToValueString appendWithNSString:squared];
    }
    else {
      (void) [((JavaLangStringBuilder *) nil_chk(sbToValueString)) appendWithNSString:@"("];
      (void) [sbToValueString appendWithChar:IOSCharArray_Get(nil_chk(OrgGeogebraCommonKernelKernelNDGeoQuadricND_VAR_STRING_), i)];
      (void) [sbToValueString appendWithNSString:@" "];
      [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatSignedWithDouble:-[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getMidpoint])) getWithInt:i + 1] withJavaLangStringBuilder:sbToValueString withOrgGeogebraCommonKernelStringTemplate:tpl];
      (void) [sbToValueString appendWithNSString:@")"];
      (void) [sbToValueString appendWithNSString:squared];
    }
    if (i < dimension_ - 1) (void) [((JavaLangStringBuilder *) nil_chk(sbToValueString)) appendWithNSString:@" + "];
    else (void) [((JavaLangStringBuilder *) nil_chk(sbToValueString)) appendWithNSString:@" = "];
  }
  (void) [((JavaLangStringBuilder *) nil_chk(sbToValueString)) appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:[self getHalfAxisWithInt:0] * [self getHalfAxisWithInt:0] withOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)setFirstEigenvectorWithDoubleArray:(IOSDoubleArray *)coords {
}

- (void)setEigenvectors {
}

- (void)singlePoint {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setAffineTransform {
}

- (void)setChangeableCoordParentWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)number
                                withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)direction {
  OrgGeogebraCommonKernelKernelNDGeoQuadricND_setChangeableCoordParentWithOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(self, number, direction);
}

- (jboolean)hasChangeableCoordParentNumbers {
  return (changeableCoordParent_ != nil);
}

- (void)recordChangeableCoordParentNumbers {
  [((OrgGeogebraCommonKernelGeosChangeableCoordParent *) nil_chk(changeableCoordParent_)) record];
}

- (jboolean)moveFromChangeableCoordParentNumbersWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)rwTransVec
                                                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)endPosition
                                                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)viewDirection
                                                                  withJavaUtilArrayList:(JavaUtilArrayList *)updateGeos
                                                                  withJavaUtilArrayList:(JavaUtilArrayList *)tempMoveObjectList
                                            withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view {
  if (changeableCoordParent_ == nil) {
    return NO;
  }
  return [((OrgGeogebraCommonKernelGeosChangeableCoordParent *) nil_chk(changeableCoordParent_)) moveWithOrgGeogebraCommonKernelMatrixCoords:rwTransVec withOrgGeogebraCommonKernelMatrixCoords:endPosition withOrgGeogebraCommonKernelMatrixCoords:viewDirection withJavaUtilArrayList:updateGeos withJavaUtilArrayList:tempMoveObjectList withOrgGeogebraCommonEuclidianEuclidianView:view];
}

- (jint)getDimension {
  return dimension_;
}

- (jboolean)isTraceable {
  return YES;
}

- (void)setTraceWithBoolean:(jboolean)trace {
  self->trace_ = trace;
}

- (jboolean)getTrace {
  return trace_;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelKernelNDGeoQuadricND class]) {
    OrgGeogebraCommonKernelKernelNDGeoQuadricND_VAR_STRING_ = [IOSCharArray newArrayWithChars:(jchar[]){ 'x', 'y', 'z' } count:3];
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelKernelNDGeoQuadricND)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFlatMatrix", NULL, "[D", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withInt:", "GeoQuadricND", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoQuadricND", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withInt:withBoolean:", "GeoQuadricND", NULL, 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "getEigenvec3DWithInt:", "getEigenvec3D", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getSymetricMatrixWithDoubleArray:", "getSymetricMatrix", "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", 0x4, NULL, NULL },
    { "getSymetricMatrix", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", 0x1, NULL, NULL },
    { "setMatrixFromEigen", NULL, "V", 0x4, NULL, NULL },
    { "setMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix:", "setMatrix", "V", 0x4, NULL, NULL },
    { "setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "setSphereND", "V", 0x401, NULL, NULL },
    { "setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:withDouble:", "setSphereND", "V", 0x1, NULL, NULL },
    { "setSphereNDWithOrgGeogebraCommonKernelMatrixCoords:withDouble:", "setSphereND", "V", 0x1, NULL, NULL },
    { "setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "setSphereND", "V", 0x401, NULL, NULL },
    { "setSphereNDMatrixWithOrgGeogebraCommonKernelMatrixCoords:withDouble:", "setSphereNDMatrix", "V", 0x4, NULL, NULL },
    { "empty", NULL, "V", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x1, NULL, NULL },
    { "setDefined", NULL, "V", 0x11, NULL, NULL },
    { "setMidpointWithDouble:withDouble:", "setMidpoint", "V", 0x4, NULL, NULL },
    { "setMidpointWithDoubleArray:", "setMidpoint", "V", 0x4, NULL, NULL },
    { "getMidpoint2D", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getMidpoint", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getMidpoint3D", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getHalfAxisWithInt:", "getHalfAxis", "D", 0x1, NULL, NULL },
    { "isDefined", NULL, "Z", 0x1, NULL, NULL },
    { "getType", NULL, "I", 0x11, NULL, NULL },
    { "setTypeWithInt:", "setType", "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "buildValueStringWithOrgGeogebraCommonKernelStringTemplate:", "buildValueString", "Ljava.lang.StringBuilder;", 0x404, NULL, NULL },
    { "buildSphereNDStringWithJavaLangStringBuilder:withOrgGeogebraCommonKernelStringTemplate:", "buildSphereNDString", "V", 0x4, NULL, NULL },
    { "setFirstEigenvectorWithDoubleArray:", "setFirstEigenvector", "V", 0x4, NULL, NULL },
    { "setEigenvectors", NULL, "V", 0x4, NULL, NULL },
    { "singlePoint", NULL, "V", 0x404, NULL, NULL },
    { "setAffineTransform", NULL, "V", 0x4, NULL, NULL },
    { "setChangeableCoordParentWithOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoElement:", "setChangeableCoordParent", "V", 0x11, NULL, NULL },
    { "hasChangeableCoordParentNumbers", NULL, "Z", 0x1, NULL, NULL },
    { "recordChangeableCoordParentNumbers", NULL, "V", 0x1, NULL, NULL },
    { "moveFromChangeableCoordParentNumbersWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withJavaUtilArrayList:withJavaUtilArrayList:withOrgGeogebraCommonEuclidianEuclidianView:", "moveFromChangeableCoordParentNumbers", "Z", 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "isTraceable", NULL, "Z", 0x1, NULL, NULL },
    { "setTraceWithBoolean:", "setTrace", "V", 0x1, NULL, NULL },
    { "getTrace", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dimension_", NULL, 0x2, "I", NULL, NULL,  },
    { "matrixDim_", NULL, 0x4, "I", NULL, NULL,  },
    { "type_", NULL, 0x1, "I", NULL, NULL,  },
    { "matrix_", NULL, 0x4, "[D", NULL, NULL,  },
    { "halfAxes_", NULL, 0x1, "[D", NULL, NULL,  },
    { "linearEccentricity_", NULL, 0x1, "D", NULL, NULL,  },
    { "eccentricity_", NULL, 0x1, "D", NULL, NULL,  },
    { "p_", NULL, 0x1, "D", NULL, NULL,  },
    { "defined_", NULL, 0x4, "Z", NULL, NULL,  },
    { "midpoint_", NULL, 0x4, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "eigenvecND_", NULL, 0x4, "[Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "diagonal_", NULL, 0x4, "[D", NULL, NULL,  },
    { "VAR_STRING_", NULL, 0x1c, "[C", &OrgGeogebraCommonKernelKernelNDGeoQuadricND_VAR_STRING_, NULL,  },
    { "eigenval_", NULL, 0x4, "[D", NULL, NULL,  },
    { "mu_", NULL, 0x4, "[D", NULL, NULL,  },
    { "isIntersection_", NULL, 0x4, "Z", NULL, NULL,  },
    { "symetricMatrix_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", NULL, NULL,  },
    { "tmpEigenMatrix_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", NULL, NULL,  },
    { "changeableCoordParent_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.ChangeableCoordParent;", NULL, NULL,  },
    { "trace_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelKernelNDGeoQuadricND = { 2, "GeoQuadricND", "org.geogebra.common.kernel.kernelND", NULL, 0x401, 43, methods, 20, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelKernelNDGeoQuadricND;
}

@end

void OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_withInt_(OrgGeogebraCommonKernelKernelNDGeoQuadricND *self, OrgGeogebraCommonKernelConstruction *c, jint dimension) {
  (void) OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_withInt_withBoolean_(self, c, dimension, NO);
}

void OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelKernelNDGeoQuadricND *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonKernelGeosGeoElement_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->type_ = -1;
  self->defined_ = YES;
  self->mu_ = [IOSDoubleArray newArrayWithLength:2];
  self->changeableCoordParent_ = nil;
}

void OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_withInt_withBoolean_(OrgGeogebraCommonKernelKernelNDGeoQuadricND *self, OrgGeogebraCommonKernelConstruction *c, jint dimension, jboolean isIntersection) {
  (void) OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->isIntersection_ = isIntersection;
  [self setConstructionDefaults];
  self->dimension_ = dimension;
  self->matrixDim_ = (dimension + 1) * (dimension + 2) / 2;
  self->matrix_ = [IOSDoubleArray newArrayWithLength:self->matrixDim_];
  self->halfAxes_ = [IOSDoubleArray newArrayWithLength:dimension];
  self->midpoint_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(dimension + 1);
  [self->midpoint_ setWithInt:dimension + 1 withDouble:1];
  self->eigenval_ = [IOSDoubleArray newArrayWithLength:dimension + 1];
  self->mu_ = [IOSDoubleArray newArrayWithLength:dimension];
}

void OrgGeogebraCommonKernelKernelNDGeoQuadricND_setChangeableCoordParentWithOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelKernelNDGeoQuadricND *self, OrgGeogebraCommonKernelGeosGeoNumeric *number, OrgGeogebraCommonKernelGeosGeoElement *direction) {
  self->changeableCoordParent_ = new_OrgGeogebraCommonKernelGeosChangeableCoordParent_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoElement_(self, number, direction);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelKernelNDGeoQuadricND)
