//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/kernelND/AlgoMidpointND.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/AlgoMidpointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelKernelNDAlgoMidpointND () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> P_, Q_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> M_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelKernelNDAlgoMidpointND, P_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelKernelNDAlgoMidpointND, Q_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelKernelNDAlgoMidpointND, M_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)

__attribute__((unused)) static void OrgGeogebraCommonKernelKernelNDAlgoMidpointND_compute(OrgGeogebraCommonKernelKernelNDAlgoMidpointND *self);

@implementation OrgGeogebraCommonKernelKernelNDAlgoMidpointND

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)Q {
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P, Q);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
            withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(self, cons, segment);
  return self;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)construction {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Midpoint();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_MIDPOINT;
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(Q_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:M_];
  [self setDependencies];
}

- (void)compute {
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_compute(self);
}

- (void)copyCoordsWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)computeMidCoords {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPoint {
  return M_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getP {
  return P_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getQ {
  return Q_;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"MidpointOfAB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(Q_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(P_);
  RELEASE_(Q_);
  RELEASE_(M_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoMidpointND", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "AlgoMidpointND", NULL, 0x4, NULL, NULL },
    { "newGeoPointWithOrgGeogebraCommonKernelConstruction:", "newGeoPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x404, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x11, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "copyCoordsWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "copyCoords", "V", 0x404, NULL, NULL },
    { "computeMidCoords", NULL, "V", 0x404, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getP", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getQ", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x19, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonKernelKernelNDAlgoMidpointND_serialVersionUID },
    { "P_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "Q_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "M_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelKernelNDAlgoMidpointND = { 2, "AlgoMidpointND", "org.geogebra.common.kernel.kernelND", NULL, 0x401, 13, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelKernelNDAlgoMidpointND;
}

@end

void OrgGeogebraCommonKernelKernelNDAlgoMidpointND_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelKernelNDAlgoMidpointND *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, id<OrgGeogebraCommonKernelKernelNDGeoPointND> Q) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_set_P_(self, P);
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_set_Q_(self, Q);
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_set_M_(self, [self newGeoPointWithOrgGeogebraCommonKernelConstruction:cons]);
  [self setInputOutput];
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_compute(self);
}

void OrgGeogebraCommonKernelKernelNDAlgoMidpointND_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(OrgGeogebraCommonKernelKernelNDAlgoMidpointND *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segment) {
  OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_set_P_(self, [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segment)) getStartPoint]);
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_set_Q_(self, [segment getEndPoint]);
  OrgGeogebraCommonKernelKernelNDAlgoMidpointND_set_M_(self, [self newGeoPointWithOrgGeogebraCommonKernelConstruction:cons]);
}

void OrgGeogebraCommonKernelKernelNDAlgoMidpointND_compute(OrgGeogebraCommonKernelKernelNDAlgoMidpointND *self) {
  jboolean pInf = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) isInfinite];
  jboolean qInf = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->Q_)) isInfinite];
  if (!pInf && !qInf) {
    [self computeMidCoords];
  }
  else if (pInf && qInf) [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->M_)) setUndefined];
  else if (pInf) [self copyCoordsWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->P_];
  else [self copyCoordsWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->Q_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelKernelNDAlgoMidpointND)
