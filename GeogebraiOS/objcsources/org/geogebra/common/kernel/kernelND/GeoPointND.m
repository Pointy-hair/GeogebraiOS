//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/kernelND/GeoPointND.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/kernel/LocateableList.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/PathOrPoint.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/Region.h"
#include "org/geogebra/common/kernel/RegionParameters.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelKernelNDGeoPointND : NSObject
@end

@implementation OrgGeogebraCommonKernelKernelNDGeoPointND

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasChangeableCoordParentNumbers", NULL, "Z", 0x401, NULL, NULL },
    { "getRegionParameters", NULL, "Lorg.geogebra.common.kernel.RegionParameters;", 0x401, NULL, NULL },
    { "updateCoords2D", NULL, "V", 0x401, NULL, NULL },
    { "getInhomX", NULL, "D", 0x401, NULL, NULL },
    { "getInhomY", NULL, "D", 0x401, NULL, NULL },
    { "getInhomZ", NULL, "D", 0x401, NULL, NULL },
    { "getX2D", NULL, "D", 0x401, NULL, NULL },
    { "getY2D", NULL, "D", 0x401, NULL, NULL },
    { "updateCoordsFrom2DWithBoolean:withOrgGeogebraCommonKernelMatrixCoordSys:", "updateCoordsFrom2D", "V", 0x401, NULL, NULL },
    { "updateCoordsFrom2DWithBoolean:", "updateCoordsFrom2D", "V", 0x401, NULL, NULL },
    { "getMode", NULL, "I", 0x401, NULL, NULL },
    { "isFinite", NULL, "Z", 0x401, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "set", "V", 0x401, NULL, NULL },
    { "getStartPointXML", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getLocateableList", NULL, "Lorg.geogebra.common.kernel.LocateableList;", 0x401, NULL, NULL },
    { "vectorToWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "vectorTo", "[D", 0x401, NULL, NULL },
    { "getInhomCoords", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getInhomCoordsWithDoubleArray:", "getInhomCoords", "V", 0x401, NULL, NULL },
    { "hasPath", NULL, "Z", 0x401, NULL, NULL },
    { "getPathParameter", NULL, "Lorg.geogebra.common.kernel.PathParameter;", 0x401, NULL, NULL },
    { "hasRegion", NULL, "Z", 0x401, NULL, NULL },
    { "setCoordsWithDouble:withDouble:withDouble:", "setCoords", "V", 0x401, NULL, NULL },
    { "setCoordsWithDouble:withDouble:withDouble:withDouble:", "setCoords", "V", 0x401, NULL, NULL },
    { "setCoordsWithOrgGeogebraCommonKernelMatrixCoords:withBoolean:", "setCoords", "V", 0x401, NULL, NULL },
    { "setCoords2DWithDouble:withDouble:withDouble:", "setCoords2D", "V", 0x401, NULL, NULL },
    { "getInhomCoordsInDWithInt:", "getInhomCoordsInD", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getInhomCoordsInD3", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getInhomCoordsInD2", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getCoordsInD2", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getCoordsInD3", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getCoordsInDWithInt:", "getCoordsInD", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getCoordsInD2WithOrgGeogebraCommonKernelMatrixCoordSys:", "getCoordsInD2", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "getPath", NULL, "Lorg.geogebra.common.kernel.Path;", 0x401, NULL, NULL },
    { "getRegion", NULL, "Lorg.geogebra.common.kernel.Region;", 0x401, NULL, NULL },
    { "switchMoveModeWithInt:", "switchMoveMode", "V", 0x401, NULL, NULL },
    { "getMoveMode", NULL, "I", 0x401, NULL, NULL },
    { "updateCoords", NULL, "V", 0x401, NULL, NULL },
    { "showUndefinedInAlgebraViewWithBoolean:", "showUndefinedInAlgebraView", "V", 0x401, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x401, NULL, NULL },
    { "isAbsoluteStartPoint", NULL, "Z", 0x401, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x401, NULL, NULL },
    { "getTrace", NULL, "Z", 0x401, NULL, NULL },
    { "getDimension", NULL, "I", 0x401, NULL, NULL },
    { "setCartesian", NULL, "V", 0x401, NULL, NULL },
    { "setCartesian3D", NULL, "V", 0x401, NULL, NULL },
    { "setSpherical", NULL, "V", 0x401, NULL, NULL },
    { "distanceToPathWithOrgGeogebraCommonKernelPathOrPoint:", "distanceToPath", "D", 0x401, NULL, NULL },
    { "addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "addIncidence", "V", 0x401, NULL, NULL },
    { "setPathWithOrgGeogebraCommonKernelPath:", "setPath", "V", 0x401, NULL, NULL },
    { "getCoords", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x401, NULL, NULL },
    { "hasLocateableList", NULL, "Z", 0x401, NULL, NULL },
    { "setLocateableListWithOrgGeogebraCommonKernelLocateableList:", "setLocateableList", "V", 0x401, NULL, NULL },
    { "setCoordsFromPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "setCoordsFromPoint", "V", 0x401, NULL, NULL },
    { "removeIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:", "removeIncidence", "V", 0x401, NULL, NULL },
    { "getIncidenceList", NULL, "Ljava.util.ArrayList;", 0x401, NULL, NULL },
    { "isEqualWithOrgGeogebraCommonKernelGeosGeoElement:", "isEqual", "Z", 0x401, NULL, NULL },
    { "isEqualPointNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "isEqualPointND", "Z", 0x401, NULL, NULL },
    { "isGeoPoint", NULL, "Z", 0x401, NULL, NULL },
    { "setWithDouble:withDouble:withOrgGeogebraCommonKernelMyPoint:withOrgGeogebraCommonKernelMyPoint:", "set", "V", 0x401, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x401, NULL, NULL },
    { "setRegionWithOrgGeogebraCommonKernelRegion:", "setRegion", "V", 0x401, NULL, NULL },
    { "getAnimationValue", NULL, "D", 0x401, NULL, NULL },
    { "setAnimationValueWithDouble:", "setAnimationValue", "V", 0x401, NULL, NULL },
    { "setAnimatingWithBoolean:", "setAnimating", "V", 0x401, NULL, NULL },
    { "setModeWithInt:", "setMode", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MOVE_MODE_NONE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_NONE },
    { "MOVE_MODE_XY_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_XY },
    { "MOVE_MODE_Z_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_Z },
    { "MOVE_MODE_TOOL_DEFAULT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_TOOL_DEFAULT },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelKernelNDGeoPointND = { 2, "GeoPointND", "org.geogebra.common.kernel.kernelND", NULL, 0x609, 65, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelKernelNDGeoPointND;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelKernelNDGeoPointND)
