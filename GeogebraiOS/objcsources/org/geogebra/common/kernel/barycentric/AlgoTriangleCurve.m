//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/barycentric/AlgoTriangleCurve.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/Equation.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/Traversing.h"
#include "org/geogebra/common/kernel/barycentric/AlgoTriangleCurve.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/implicit/AlgoDependentImplicitPoly.h"
#include "org/geogebra/common/kernel/implicit/GeoImplicitPoly.h"
#include "org/geogebra/common/plugin/Operation.h"

@interface OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *A_, *B_, *C_;
  OrgGeogebraCommonKernelImplicitGeoImplicitPoly *n_;
  OrgGeogebraCommonKernelGeosGeoElement *poly_;
  OrgGeogebraCommonKernelArithmeticEquation *eq_;
  IOSObjectArray *xcoef_, *ycoef_, *constant_;
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *dd_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, A_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, B_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, C_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, n_, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, poly_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, eq_, OrgGeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, xcoef_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, ycoef_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, constant_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve, dd_, OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *)

__attribute__((unused)) static void OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve *self);

@implementation OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)B
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)C
         withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)e
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)a
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)b
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)c {
  OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, A, B, C, e, a, b, c);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_TriangleCurve();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, A_);
  (void) IOSObjectArray_Set(input_, 1, B_);
  (void) IOSObjectArray_Set(input_, 2, C_);
  (void) IOSObjectArray_Set(input_, 3, [((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(n_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:poly_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResult {
  return poly_;
}

- (void)compute {
  OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoTriangleCurve", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "C_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lorg.geogebra.common.kernel.implicit.GeoImplicitPoly;", NULL, NULL,  },
    { "poly_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "eq_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "xcoef_", NULL, 0x2, "[Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "ycoef_", NULL, 0x2, "[Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "constant_", NULL, 0x2, "[Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "dd_", NULL, 0x2, "Lorg.geogebra.common.kernel.implicit.AlgoDependentImplicitPoly;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve = { 2, "AlgoTriangleCurve", "org.geogebra.common.kernel.barycentric", NULL, 0x1, 5, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve;
}

@end

void OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoPoint *B, OrgGeogebraCommonKernelGeosGeoPoint *C, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *e, OrgGeogebraCommonKernelGeosGeoNumeric *a, OrgGeogebraCommonKernelGeosGeoNumeric *b, OrgGeogebraCommonKernelGeosGeoNumeric *c) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->A_ = A;
  self->B_ = B;
  self->C_ = C;
  self->n_ = e;
  OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *d = (OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *) check_class_cast([((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(self->n_)) getParentAlgorithm], [OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly class]);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:d];
  OrgGeogebraCommonKernelArithmeticExpressionNode *lhs = (OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk([((OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *) nil_chk(d)) getEquation])) getLHS])) deepCopyWithOrgGeogebraCommonKernelKernel:self->kernel_], [OrgGeogebraCommonKernelArithmeticExpressionNode class]);
  OrgGeogebraCommonKernelArithmeticExpressionNode *rhs = (OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk([d getEquation])) getRHS])) deepCopyWithOrgGeogebraCommonKernelKernel:self->kernel_], [OrgGeogebraCommonKernelArithmeticExpressionNode class]);
  IOSObjectArray *abcExp = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelArithmeticExpressionNode_class_()];
  OrgGeogebraCommonKernelArithmeticFunctionVariable *x = new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(self->kernel_, @"x");
  OrgGeogebraCommonKernelArithmeticFunctionVariable *y = new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(self->kernel_, @"y");
  self->xcoef_ = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoNumeric_class_()];
  self->ycoef_ = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoNumeric_class_()];
  self->constant_ = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelGeosGeoNumeric_class_()];
  for (jint i = 0; i < 3; i++) {
    (void) IOSObjectArray_Set(self->xcoef_, i, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
    (void) IOSObjectArray_Set(self->ycoef_, i, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
    (void) IOSObjectArray_Set(self->constant_, i, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons));
    (void) IOSObjectArray_Set(abcExp, i, new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, IOSObjectArray_Get(self->xcoef_, i), OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), x), OrgGeogebraCommonPluginOperationEnum_get_PLUS(), new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, IOSObjectArray_Get(self->ycoef_, i), OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), y)), OrgGeogebraCommonPluginOperationEnum_get_PLUS(), IOSObjectArray_Get(self->constant_, i)));
  }
  self->eq_ = new_OrgGeogebraCommonKernelArithmeticEquation_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, lhs, rhs);
  (void) [self->eq_ traverseWithOrgGeogebraCommonKernelArithmeticTraversing:OrgGeogebraCommonKernelArithmeticTraversing_Replacer_getReplacerWithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(a, IOSObjectArray_Get(abcExp, 0))];
  (void) [self->eq_ traverseWithOrgGeogebraCommonKernelArithmeticTraversing:OrgGeogebraCommonKernelArithmeticTraversing_Replacer_getReplacerWithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(b, IOSObjectArray_Get(abcExp, 1))];
  (void) [self->eq_ traverseWithOrgGeogebraCommonKernelArithmeticTraversing:OrgGeogebraCommonKernelArithmeticTraversing_Replacer_getReplacerWithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(c, IOSObjectArray_Get(abcExp, 2))];
  [self->eq_ setForceImplicitPoly];
  [self->eq_ initEquation];
  jboolean flag = [cons isSuppressLabelsActive];
  self->dd_ = new_OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticEquation_withBoolean_(cons, self->eq_, NO);
  [cons removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self->dd_];
  self->poly_ = IOSObjectArray_Get(nil_chk([self->dd_ getOutput]), 0);
  [self setInputOutput];
  OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(self);
  [cons setSuppressLabelCreationWithBoolean:flag];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->poly_)) setLabelWithNSString:label];
}

OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve *new_OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoPoint *B, OrgGeogebraCommonKernelGeosGeoPoint *C, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *e, OrgGeogebraCommonKernelGeosGeoNumeric *a, OrgGeogebraCommonKernelGeosGeoNumeric *b, OrgGeogebraCommonKernelGeosGeoNumeric *c) {
  OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve *self = [OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve alloc];
  OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, A, B, C, e, a, b, c);
  return self;
}

void OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve *self) {
  jdouble x1 = -((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->A_))->inhomX_;
  jdouble y1 = -self->A_->inhomY_;
  jdouble x2 = -((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->B_))->inhomX_;
  jdouble y2 = -self->B_->inhomY_;
  jdouble x3 = -((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->C_))->inhomX_;
  jdouble y3 = -self->C_->inhomY_;
  jdouble det = (x2 - x3) * (y1 - y3) + (x3 - x1) * (y2 - y3);
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(det)) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->poly_)) setUndefined];
  }
  else {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(nil_chk(self->ycoef_), 0))) setValueWithDouble:(x3 - x2) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(nil_chk(self->xcoef_), 0))) setValueWithDouble:(y2 - y3) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(nil_chk(self->constant_), 0))) setValueWithDouble:((x3 - x2) * y3 + (y2 - y3) * x3) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->ycoef_, 1))) setValueWithDouble:(x1 - x3) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->xcoef_, 1))) setValueWithDouble:(y3 - y1) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->constant_, 1))) setValueWithDouble:((x1 - x3) * y1 + (y3 - y1) * x1) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->ycoef_, 2))) setValueWithDouble:(x2 - x1) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->xcoef_, 2))) setValueWithDouble:(y1 - y2) / det];
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->constant_, 2))) setValueWithDouble:((x2 - x1) * y2 + (y1 - y2) * x2) / det];
    [((OrgGeogebraCommonKernelImplicitAlgoDependentImplicitPoly *) nil_chk(self->dd_)) update];
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->poly_)) update];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelBarycentricAlgoTriangleCurve)
