//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/EquationSystem.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "org/geogebra/common/kernel/locusequ/EquationList.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/EquationSystem.h"

@interface OrgGeogebraCommonKernelLocusequEquationSystem () {
 @public
  OrgGeogebraCommonKernelLocusequEquationList *el_;
  IOSObjectArray *vars_;
  OrgGeogebraCommonKernelLocusequEquationScope *scope_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequEquationSystem, el_, OrgGeogebraCommonKernelLocusequEquationList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequEquationSystem, vars_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequEquationSystem, scope_, OrgGeogebraCommonKernelLocusequEquationScope *)

@implementation OrgGeogebraCommonKernelLocusequEquationSystem

- (instancetype)initWithOrgGeogebraCommonKernelLocusequEquationList:(OrgGeogebraCommonKernelLocusequEquationList *)list
                   withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequEquationSystem_initWithOrgGeogebraCommonKernelLocusequEquationList_withOrgGeogebraCommonKernelLocusequEquationScope_(self, list, scope);
  return self;
}

- (id<JavaUtilCollection>)getAllPoints {
  return [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk(scope_)) getAllPoints];
}

- (void)setVarsWithNSStringArray:(IOSObjectArray *)vars {
  self->vars_ = vars;
}

- (OrgGeogebraCommonKernelLocusequEquationScope *)getScope {
  return self->scope_;
}

- (IOSObjectArray *)getVars {
  return self->vars_;
}

- (OrgGeogebraCommonKernelLocusequEquationList *)getEquations {
  return self->el_;
}

- (void)setEquationsWithOrgGeogebraCommonKernelLocusequEquationList:(OrgGeogebraCommonKernelLocusequEquationList *)el {
  self->el_ = el;
}

- (jboolean)looksSameWithOrgGeogebraCommonKernelLocusequEquationSystem:(OrgGeogebraCommonKernelLocusequEquationSystem *)system {
  if (system == nil && self != nil) {
    return NO;
  }
  OrgGeogebraCommonKernelLocusequEquationList *system_el = [((OrgGeogebraCommonKernelLocusequEquationSystem *) nil_chk(system)) getEquations];
  if ([((NSString *) nil_chk([((OrgGeogebraCommonKernelLocusequEquationList *) nil_chk(el_)) description])) isEqual:[((OrgGeogebraCommonKernelLocusequEquationList *) nil_chk(system_el)) description]]) {
    return YES;
  }
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelLocusequEquationList:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationSystem", NULL, 0x1, NULL, NULL },
    { "getAllPoints", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "setVarsWithNSStringArray:", "setVars", "V", 0x1, NULL, NULL },
    { "getScope", NULL, "Lorg.geogebra.common.kernel.locusequ.EquationScope;", 0x1, NULL, NULL },
    { "getVars", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getEquations", NULL, "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x1, NULL, NULL },
    { "setEquationsWithOrgGeogebraCommonKernelLocusequEquationList:", "setEquations", "V", 0x4, NULL, NULL },
    { "looksSameWithOrgGeogebraCommonKernelLocusequEquationSystem:", "looksSame", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "el_", NULL, 0x2, "Lorg.geogebra.common.kernel.locusequ.EquationList;", NULL, NULL,  },
    { "vars_", NULL, 0x2, "[Ljava.lang.String;", NULL, NULL,  },
    { "scope_", NULL, 0x2, "Lorg.geogebra.common.kernel.locusequ.EquationScope;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequEquationSystem = { 2, "EquationSystem", "org.geogebra.common.kernel.locusequ", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequEquationSystem;
}

@end

void OrgGeogebraCommonKernelLocusequEquationSystem_initWithOrgGeogebraCommonKernelLocusequEquationList_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequEquationSystem *self, OrgGeogebraCommonKernelLocusequEquationList *list, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  (void) NSObject_init(self);
  self->el_ = list;
  self->scope_ = scope;
}

OrgGeogebraCommonKernelLocusequEquationSystem *new_OrgGeogebraCommonKernelLocusequEquationSystem_initWithOrgGeogebraCommonKernelLocusequEquationList_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequEquationList *list, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequEquationSystem *self = [OrgGeogebraCommonKernelLocusequEquationSystem alloc];
  OrgGeogebraCommonKernelLocusequEquationSystem_initWithOrgGeogebraCommonKernelLocusequEquationList_withOrgGeogebraCommonKernelLocusequEquationScope_(self, list, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequEquationSystem)
