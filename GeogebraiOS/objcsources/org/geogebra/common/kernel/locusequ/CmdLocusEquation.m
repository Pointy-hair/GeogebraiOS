//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/CmdLocusEquation.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoLocus.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLocus.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/implicit/GeoImplicitPoly.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/locusequ/AlgoLocusEquation.h"
#include "org/geogebra/common/kernel/locusequ/CmdLocusEquation.h"
#include "org/geogebra/common/main/MyError.h"

__attribute__((unused)) static OrgGeogebraCommonKernelImplicitGeoImplicitPoly *OrgGeogebraCommonKernelLocusequCmdLocusEquation_LocusEquationWithNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelLocusequCmdLocusEquation *self, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *locusPoint, OrgGeogebraCommonKernelGeosGeoPoint *movingPoint);

@implementation OrgGeogebraCommonKernelLocusequCmdLocusEquation

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonKernelLocusequCmdLocusEquation_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray newArrayWithLength:n];
  IOSObjectArray *arg = [self resArgsWithOrgGeogebraCommonKernelArithmeticCommand:c];
  OrgGeogebraCommonKernelGeosGeoPoint *locusPoint, *movingPoint;
  switch (n) {
    case 1:
    if ([IOSObjectArray_Get(nil_chk(arg), 0) isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLocus class]] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) getParentAlgorithm] != nil && [[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) getParentAlgorithm] isKindOfClass:[OrgGeogebraCommonKernelAlgosAlgoLocus class]]) {
      OrgGeogebraCommonKernelGeosGeoLocus *locus = (OrgGeogebraCommonKernelGeosGeoLocus *) check_class_cast(IOSObjectArray_Get(arg, 0), [OrgGeogebraCommonKernelGeosGeoLocus class]);
      OrgGeogebraCommonKernelAlgosAlgoLocus *algo = (OrgGeogebraCommonKernelAlgosAlgoLocus *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus)) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoLocus class]);
      locusPoint = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([((OrgGeogebraCommonKernelAlgosAlgoLocus *) nil_chk(algo)) getLocusPoint], [OrgGeogebraCommonKernelGeosGeoPoint class]);
      movingPoint = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([algo getMovingPoint], [OrgGeogebraCommonKernelGeosGeoPoint class]);
    }
    else {
      @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    }
    break;
    case 2:
    if ((*IOSBooleanArray_GetRef(ok, 0) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint]))) {
      locusPoint = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(arg, 0), [OrgGeogebraCommonKernelGeosGeoPoint class]);
      movingPoint = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(arg, 1), [OrgGeogebraCommonKernelGeosGeoPoint class]);
    }
    else {
      @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:OrgGeogebraCommonKernelCommandsCommandProcessor_getBadArgWithBooleanArray_withOrgGeogebraCommonKernelGeosGeoElementArray_(ok, arg)];
    }
    break;
    default:
    @throw [self argNumErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
  return [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonKernelLocusequCmdLocusEquation_LocusEquationWithNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(self, [c getLabel], locusPoint, movingPoint) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
}

- (OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)LocusEquationWithNSString:(NSString *)label
                                      withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)locusPoint
                                      withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)movingPoint {
  return OrgGeogebraCommonKernelLocusequCmdLocusEquation_LocusEquationWithNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(self, label, locusPoint, movingPoint);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdLocusEquation", NULL, 0x1, NULL, NULL },
    { "processWithOrgGeogebraCommonKernelArithmeticCommand:", "process", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, "Lorg.geogebra.common.main.MyError;", NULL },
    { "LocusEquationWithNSString:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:", "LocusEquation", "Lorg.geogebra.common.kernel.implicit.GeoImplicitPoly;", 0x11, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequCmdLocusEquation = { 2, "CmdLocusEquation", "org.geogebra.common.kernel.locusequ", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequCmdLocusEquation;
}

@end

void OrgGeogebraCommonKernelLocusequCmdLocusEquation_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelLocusequCmdLocusEquation *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) OrgGeogebraCommonKernelCommandsCommandProcessor_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonKernelLocusequCmdLocusEquation *new_OrgGeogebraCommonKernelLocusequCmdLocusEquation_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelLocusequCmdLocusEquation *self = [OrgGeogebraCommonKernelLocusequCmdLocusEquation alloc];
  OrgGeogebraCommonKernelLocusequCmdLocusEquation_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

OrgGeogebraCommonKernelImplicitGeoImplicitPoly *OrgGeogebraCommonKernelLocusequCmdLocusEquation_LocusEquationWithNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelLocusequCmdLocusEquation *self, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *locusPoint, OrgGeogebraCommonKernelGeosGeoPoint *movingPoint) {
  if ([((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(movingPoint)) getPath] == nil || [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(locusPoint)) getPath] != nil || ![movingPoint isParentOfWithOrgGeogebraCommonKernelKernelNDGeoElementND:locusPoint]) return nil;
  OrgGeogebraCommonKernelLocusequAlgoLocusEquation *algo = new_OrgGeogebraCommonKernelLocusequAlgoLocusEquation_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(self->cons_, locusPoint, movingPoint);
  OrgGeogebraCommonKernelImplicitGeoImplicitPoly *poly = [algo getPoly];
  [((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(poly)) setLabelWithNSString:label];
  return poly;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequCmdLocusEquation)
