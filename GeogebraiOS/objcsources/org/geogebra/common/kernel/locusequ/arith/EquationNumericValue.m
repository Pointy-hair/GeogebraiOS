//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/arith/EquationNumericValue.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/locusequ/EquationTranslator.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationNumericValue.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationValue.h"

@interface OrgGeogebraCommonKernelLocusequArithEquationNumericValue () {
 @public
  jdouble value_;
}

@end

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelLocusequArithEquationNumericValue)

OrgGeogebraCommonKernelLocusequArithEquationNumericValue *OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ZERO_;
OrgGeogebraCommonKernelLocusequArithEquationNumericValue *OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ONE_;
OrgGeogebraCommonKernelLocusequArithEquationNumericValue *OrgGeogebraCommonKernelLocusequArithEquationNumericValue_TWO_;

@implementation OrgGeogebraCommonKernelLocusequArithEquationNumericValue

+ (OrgGeogebraCommonKernelLocusequArithEquationNumericValue *)fromWithDouble:(jdouble)value {
  return OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(value);
}

- (instancetype)initWithDouble:(jdouble)value {
  OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(self, value);
  return self;
}

- (jdouble)getValue {
  return self->value_;
}

- (jboolean)isNumericValue {
  return YES;
}

- (id)translateImplWithOrgGeogebraCommonKernelLocusequEquationTranslator:(OrgGeogebraCommonKernelLocusequEquationTranslator *)translator {
  return [((OrgGeogebraCommonKernelLocusequEquationTranslator *) nil_chk(translator)) numberWithDouble:[self getValue]];
}

- (jlong)toLong {
  return J2ObjCFpToLong([self getValue]);
}

- (NSString *)description {
  return OrgGeogebraCommonKernelArithmeticMyDouble_toStringWithDouble_([self getValue]);
}

- (jboolean)containsSymbolicValuesImpl {
  return NO;
}

- (jdouble)computeValueImpl {
  return [self getValue];
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getOpposite {
  return OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(-[self getValue]);
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getInverse {
  return OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(1 / [self getValue]);
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelLocusequArithEquationNumericValue class]) {
    OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ZERO_ = new_OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(0);
    OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ONE_ = new_OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(1);
    OrgGeogebraCommonKernelLocusequArithEquationNumericValue_TWO_ = new_OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelLocusequArithEquationNumericValue)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromWithDouble:", "from", "Lorg.geogebra.common.kernel.locusequ.arith.EquationNumericValue;", 0x9, NULL, NULL },
    { "initWithDouble:", "EquationNumericValue", NULL, 0x4, NULL, NULL },
    { "getValue", NULL, "D", 0x1, NULL, NULL },
    { "isNumericValue", NULL, "Z", 0x1, NULL, NULL },
    { "translateImplWithOrgGeogebraCommonKernelLocusequEquationTranslator:", "translateImpl", "TT;", 0x4, NULL, "<T:Ljava/lang/Object;>(Lorg/geogebra/common/kernel/locusequ/EquationTranslator<TT;>;)TT;" },
    { "toLong", NULL, "J", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "containsSymbolicValuesImpl", NULL, "Z", 0x4, NULL, NULL },
    { "computeValueImpl", NULL, "D", 0x4, NULL, NULL },
    { "getOpposite", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getInverse", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x2, "D", NULL, NULL,  },
    { "ZERO_", NULL, 0x19, "Lorg.geogebra.common.kernel.locusequ.arith.EquationNumericValue;", &OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ZERO_, NULL,  },
    { "ONE_", NULL, 0x19, "Lorg.geogebra.common.kernel.locusequ.arith.EquationNumericValue;", &OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ONE_, NULL,  },
    { "TWO_", NULL, 0x19, "Lorg.geogebra.common.kernel.locusequ.arith.EquationNumericValue;", &OrgGeogebraCommonKernelLocusequArithEquationNumericValue_TWO_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequArithEquationNumericValue = { 2, "EquationNumericValue", "org.geogebra.common.kernel.locusequ.arith", NULL, 0x1, 11, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequArithEquationNumericValue;
}

@end

OrgGeogebraCommonKernelLocusequArithEquationNumericValue *OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(jdouble value) {
  OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initialize();
  if (value == 0) {
    return OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ZERO_;
  }
  else if (value == 1) {
    return OrgGeogebraCommonKernelLocusequArithEquationNumericValue_ONE_;
  }
  else if (value == 2) {
    return OrgGeogebraCommonKernelLocusequArithEquationNumericValue_TWO_;
  }
  else {
    return new_OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(value);
  }
}

void OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(OrgGeogebraCommonKernelLocusequArithEquationNumericValue *self, jdouble value) {
  (void) OrgGeogebraCommonKernelLocusequArithEquationValue_init(self);
  self->value_ = value;
}

OrgGeogebraCommonKernelLocusequArithEquationNumericValue *new_OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(jdouble value) {
  OrgGeogebraCommonKernelLocusequArithEquationNumericValue *self = [OrgGeogebraCommonKernelLocusequArithEquationNumericValue alloc];
  OrgGeogebraCommonKernelLocusequArithEquationNumericValue_initWithDouble_(self, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequArithEquationNumericValue)
