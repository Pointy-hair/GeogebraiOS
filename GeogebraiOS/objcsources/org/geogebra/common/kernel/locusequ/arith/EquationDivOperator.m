//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/locusequ/arith/EquationDivOperator.java
//


#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/geogebra/common/kernel/locusequ/EquationTranslator.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationBinaryOperator.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationDivOperator.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"

@implementation OrgGeogebraCommonKernelLocusequArithEquationDivOperator

- (instancetype)initWithOrgGeogebraCommonKernelLocusequArithEquationExpression:(OrgGeogebraCommonKernelLocusequArithEquationExpression *)numerator
                    withOrgGeogebraCommonKernelLocusequArithEquationExpression:(OrgGeogebraCommonKernelLocusequArithEquationExpression *)denominator {
  OrgGeogebraCommonKernelLocusequArithEquationDivOperator_initWithOrgGeogebraCommonKernelLocusequArithEquationExpression_withOrgGeogebraCommonKernelLocusequArithEquationExpression_(self, numerator, denominator);
  return self;
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getNumerator {
  return [super getFirstExpression];
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getDenominator {
  return [super getSecondExpression];
}

- (jboolean)isDiv {
  return YES;
}

- (jlong)toLong {
  return ([((OrgGeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getNumerator])) toLong] / [((OrgGeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getDenominator])) toLong]);
}

- (NSString *)description {
  return JreStrcat("C$C$C", '(', [((OrgGeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getNumerator])) description], '/', [((OrgGeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getDenominator])) description], ')');
}

- (jdouble)operationWithDouble:(jdouble)a
                    withDouble:(jdouble)b {
  if (b == 0) {
    return JavaLangDouble_NaN;
  }
  return a / b;
}

- (id)translateImplWithOrgGeogebraCommonKernelLocusequEquationTranslator:(OrgGeogebraCommonKernelLocusequEquationTranslator *)translator {
  return [((OrgGeogebraCommonKernelLocusequEquationTranslator *) nil_chk(translator)) divWithId:[((OrgGeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getFirstExpression])) translateWithOrgGeogebraCommonKernelLocusequEquationTranslator:translator] withId:[((OrgGeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getSecondExpression])) translateWithOrgGeogebraCommonKernelLocusequEquationTranslator:translator]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelLocusequArithEquationExpression:withOrgGeogebraCommonKernelLocusequArithEquationExpression:", "EquationDivOperator", NULL, 0x1, NULL, NULL },
    { "getNumerator", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getDenominator", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "isDiv", NULL, "Z", 0x1, NULL, NULL },
    { "toLong", NULL, "J", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "operationWithDouble:withDouble:", "operation", "D", 0x4, NULL, NULL },
    { "translateImplWithOrgGeogebraCommonKernelLocusequEquationTranslator:", "translateImpl", "TT;", 0x4, NULL, "<T:Ljava/lang/Object;>(Lorg/geogebra/common/kernel/locusequ/EquationTranslator<TT;>;)TT;" },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequArithEquationDivOperator = { 2, "EquationDivOperator", "org.geogebra.common.kernel.locusequ.arith", NULL, 0x1, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequArithEquationDivOperator;
}

@end

void OrgGeogebraCommonKernelLocusequArithEquationDivOperator_initWithOrgGeogebraCommonKernelLocusequArithEquationExpression_withOrgGeogebraCommonKernelLocusequArithEquationExpression_(OrgGeogebraCommonKernelLocusequArithEquationDivOperator *self, OrgGeogebraCommonKernelLocusequArithEquationExpression *numerator, OrgGeogebraCommonKernelLocusequArithEquationExpression *denominator) {
  OrgGeogebraCommonKernelLocusequArithEquationBinaryOperator_initWithOrgGeogebraCommonKernelLocusequArithEquationExpression_withOrgGeogebraCommonKernelLocusequArithEquationExpression_(self, numerator, denominator);
}

OrgGeogebraCommonKernelLocusequArithEquationDivOperator *new_OrgGeogebraCommonKernelLocusequArithEquationDivOperator_initWithOrgGeogebraCommonKernelLocusequArithEquationExpression_withOrgGeogebraCommonKernelLocusequArithEquationExpression_(OrgGeogebraCommonKernelLocusequArithEquationExpression *numerator, OrgGeogebraCommonKernelLocusequArithEquationExpression *denominator) {
  OrgGeogebraCommonKernelLocusequArithEquationDivOperator *self = [OrgGeogebraCommonKernelLocusequArithEquationDivOperator alloc];
  OrgGeogebraCommonKernelLocusequArithEquationDivOperator_initWithOrgGeogebraCommonKernelLocusequArithEquationExpression_withOrgGeogebraCommonKernelLocusequArithEquationExpression_(self, numerator, denominator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequArithEquationDivOperator)
