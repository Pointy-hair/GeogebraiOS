//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/locusequ/EquationNormalPoint.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationNormalPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"

@implementation OrgGeogebraCommonKernelLocusequEquationNormalPoint

- (instancetype)initWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)point {
  OrgGeogebraCommonKernelLocusequEquationNormalPoint_initWithOrgGeogebraCommonKernelLocusequEquationPoint_(self, point);
  return self;
}

- (jboolean)isIndependent {
  return [((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) isIndependent];
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getXExpression {
  return [((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) getYExpression];
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getYExpression {
  return [((OrgGeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) getXExpression])) getOpposite];
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getZExpression {
  return [((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) getZExpression];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getPoint {
  return [((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) getPoint];
}

- (void)getIndexesFromWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)newPoint {
}

- (void)fixXWithDouble:(jdouble)value {
  [((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) fixYWithDouble:value];
}

- (void)fixYWithDouble:(jdouble)value {
  [((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(self->point_)) fixXWithDouble:-value];
}

- (void)dealloc {
  RELEASE_(point_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelLocusequEquationPoint:", "EquationNormalPoint", NULL, 0x1, NULL, NULL },
    { "isIndependent", NULL, "Z", 0x1, NULL, NULL },
    { "getXExpression", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getYExpression", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getZExpression", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getIndexesFromWithOrgGeogebraCommonKernelLocusequEquationPoint:", "getIndexesFrom", "V", 0x1, NULL, NULL },
    { "fixXWithDouble:", "fixX", "V", 0x1, NULL, NULL },
    { "fixYWithDouble:", "fixY", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "point_", NULL, 0x0, "Lorg.geogebra.common.kernel.locusequ.EquationPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequEquationNormalPoint = { 2, "EquationNormalPoint", "org.geogebra.common.kernel.locusequ", NULL, 0x1, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequEquationNormalPoint;
}

@end

void OrgGeogebraCommonKernelLocusequEquationNormalPoint_initWithOrgGeogebraCommonKernelLocusequEquationPoint_(OrgGeogebraCommonKernelLocusequEquationNormalPoint *self, OrgGeogebraCommonKernelLocusequEquationPoint *point) {
  OrgGeogebraCommonKernelLocusequEquationPoint_init(self);
  OrgGeogebraCommonKernelLocusequEquationNormalPoint_set_point_(self, point);
}

OrgGeogebraCommonKernelLocusequEquationNormalPoint *new_OrgGeogebraCommonKernelLocusequEquationNormalPoint_initWithOrgGeogebraCommonKernelLocusequEquationPoint_(OrgGeogebraCommonKernelLocusequEquationPoint *point) {
  OrgGeogebraCommonKernelLocusequEquationNormalPoint *self = [OrgGeogebraCommonKernelLocusequEquationNormalPoint alloc];
  OrgGeogebraCommonKernelLocusequEquationNormalPoint_initWithOrgGeogebraCommonKernelLocusequEquationPoint_(self, point);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequEquationNormalPoint)
