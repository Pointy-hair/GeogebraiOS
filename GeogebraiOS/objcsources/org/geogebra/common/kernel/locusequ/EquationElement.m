//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/EquationElement.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationAuxiliarSymbolicPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationList.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"

@interface OrgGeogebraCommonKernelLocusequEquationElement () {
 @public
  OrgGeogebraCommonKernelGeosGeoElement *result_;
  OrgGeogebraCommonKernelLocusequEquationScope *scope_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequEquationElement, result_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequEquationElement, scope_, OrgGeogebraCommonKernelLocusequEquationScope *)

@implementation OrgGeogebraCommonKernelLocusequEquationElement

- (instancetype)init {
  OrgGeogebraCommonKernelLocusequEquationElement_init(self);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)element
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequEquationElement_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  return self;
}

- (OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *)getNewIncidentPoint {
  OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *np = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getNewAuxiliarPoint];
  [((OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *) nil_chk(np)) addIncidenceWithOrgGeogebraCommonKernelLocusequEquationElement:self];
  return np;
}

- (OrgGeogebraCommonKernelLocusequEquationScope *)getScope {
  return self->scope_;
}

- (void)setScopeWithOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  self->scope_ = scope;
}

- (OrgGeogebraCommonKernelLocusequEquationList *)forPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p
                                                withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope2 {
  return [self forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:[((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk(scope2)) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:p]];
}

- (OrgGeogebraCommonKernelLocusequEquationList *)forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)p {
  OrgGeogebraCommonKernelLocusequEquationList *equ = [self forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:p];
  [((OrgGeogebraCommonKernelLocusequEquationList *) nil_chk(equ)) setAlgebraicWithBoolean:[self isAlgebraic]];
  return equ;
}

- (OrgGeogebraCommonKernelLocusequEquationList *)forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)p {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isAlgebraic {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getResult {
  return self->result_;
}

- (void)setResultWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)result {
  self->result_ = result;
}

- (jboolean)isRestriction {
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "EquationElement", NULL, 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationElement", NULL, 0x1, NULL, NULL },
    { "getNewIncidentPoint", NULL, "Lorg.geogebra.common.kernel.locusequ.EquationAuxiliarSymbolicPoint;", 0x1, NULL, NULL },
    { "getScope", NULL, "Lorg.geogebra.common.kernel.locusequ.EquationScope;", 0x1, NULL, NULL },
    { "setScopeWithOrgGeogebraCommonKernelLocusequEquationScope:", "setScope", "V", 0x4, NULL, NULL },
    { "forPointWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelLocusequEquationScope:", "forPoint", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x1, NULL, NULL },
    { "forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:", "forPoint", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x1, NULL, NULL },
    { "forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x404, NULL, NULL },
    { "isAlgebraic", NULL, "Z", 0x401, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "setResultWithOrgGeogebraCommonKernelGeosGeoElement:", "setResult", "V", 0x4, NULL, NULL },
    { "isRestriction", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "result_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "scope_", NULL, 0x2, "Lorg.geogebra.common.kernel.locusequ.EquationScope;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequEquationElement = { 2, "EquationElement", "org.geogebra.common.kernel.locusequ", NULL, 0x401, 12, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequEquationElement;
}

@end

void OrgGeogebraCommonKernelLocusequEquationElement_init(OrgGeogebraCommonKernelLocusequEquationElement *self) {
  (void) NSObject_init(self);
}

void OrgGeogebraCommonKernelLocusequEquationElement_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequEquationElement *self, OrgGeogebraCommonKernelGeosGeoElement *element, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  (void) NSObject_init(self);
  [self setResultWithOrgGeogebraCommonKernelGeosGeoElement:element];
  [self setScopeWithOrgGeogebraCommonKernelLocusequEquationScope:scope];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequEquationElement)
