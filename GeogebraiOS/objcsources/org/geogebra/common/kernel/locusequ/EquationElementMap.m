//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/locusequ/EquationElementMap.java
//


#include "J2ObjC_source.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/EquationElementInterface.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationElementMap.h"
#include "org/geogebra/common/kernel/locusequ/EquationRestriction.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/plugin/GeoClass.h"

@interface OrgGeogebraCommonKernelLocusequEquationElementMap () {
 @public
  OrgGeogebraCommonKernelLocusequEquationScope *scope_;
}

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)createEquationElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)key;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequEquationElementMap, scope_, OrgGeogebraCommonKernelLocusequEquationScope *)

__attribute__((unused)) static id<OrgGeogebraCommonKernelAlgosEquationElementInterface> OrgGeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelLocusequEquationElementMap *self, OrgGeogebraCommonKernelGeosGeoElement *key);

@implementation OrgGeogebraCommonKernelLocusequEquationElementMap

- (instancetype)initWithOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequEquationElementMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(self, scope);
  return self;
}

- (OrgGeogebraCommonKernelLocusequEquationElement *)getWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)key {
  return [((id<JavaUtilMap>) nil_chk(self->container_)) getWithId:key];
}

- (OrgGeogebraCommonKernelLocusequEquationElement *)putWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)key
                                              withOrgGeogebraCommonKernelLocusequEquationElement:(OrgGeogebraCommonKernelLocusequEquationElement *)value {
  return [((id<JavaUtilMap>) nil_chk(self->container_)) putWithId:key withId:value];
}

- (OrgGeogebraCommonKernelLocusequEquationElement *)getOrCreateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)key {
  OrgGeogebraCommonKernelLocusequEquationElement *res = [self getWithOrgGeogebraCommonKernelGeosGeoElement:key];
  if (res == nil) {
    res = (OrgGeogebraCommonKernelLocusequEquationElement *) check_class_cast(OrgGeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithOrgGeogebraCommonKernelGeosGeoElement_(self, key), [OrgGeogebraCommonKernelLocusequEquationElement class]);
    [self putWithOrgGeogebraCommonKernelGeosGeoElement:key withOrgGeogebraCommonKernelLocusequEquationElement:res];
  }
  return res;
}

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)createEquationElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)key {
  return OrgGeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithOrgGeogebraCommonKernelGeosGeoElement_(self, key);
}

- (void)identifyWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)orig
                withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)target {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(orig)) getGeoClassType] == [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(target)) getGeoClassType]) {
    [((id<JavaUtilMap>) nil_chk(self->container_)) putWithId:orig withId:[self getOrCreateWithOrgGeogebraCommonKernelGeosGeoElement:target]];
  }
}

- (void)dealloc {
  RELEASE_(container_);
  RELEASE_(scope_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelLocusequEquationScope:", "EquationElementMap", NULL, 0x1, NULL, NULL },
    { "getWithOrgGeogebraCommonKernelGeosGeoElement:", "get", "Lorg.geogebra.common.kernel.locusequ.EquationElement;", 0x1, NULL, NULL },
    { "putWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationElement:", "put", "Lorg.geogebra.common.kernel.locusequ.EquationElement;", 0x1, NULL, NULL },
    { "getOrCreateWithOrgGeogebraCommonKernelGeosGeoElement:", "getOrCreate", "Lorg.geogebra.common.kernel.locusequ.EquationElement;", 0x1, NULL, NULL },
    { "createEquationElementWithOrgGeogebraCommonKernelGeosGeoElement:", "createEquationElement", "Lorg.geogebra.common.kernel.algos.EquationElementInterface;", 0x2, NULL, NULL },
    { "identifyWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "identify", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "container_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/geogebra/common/kernel/geos/GeoElement;Lorg/geogebra/common/kernel/locusequ/EquationElement;>;",  },
    { "scope_", NULL, 0x2, "Lorg.geogebra.common.kernel.locusequ.EquationScope;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequEquationElementMap = { 2, "EquationElementMap", "org.geogebra.common.kernel.locusequ", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequEquationElementMap;
}

@end

void OrgGeogebraCommonKernelLocusequEquationElementMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequEquationElementMap *self, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  NSObject_init(self);
  OrgGeogebraCommonKernelLocusequEquationElementMap_setAndConsume_container_(self, new_JavaUtilHashMap_init());
  OrgGeogebraCommonKernelLocusequEquationElementMap_set_scope_(self, scope);
}

OrgGeogebraCommonKernelLocusequEquationElementMap *new_OrgGeogebraCommonKernelLocusequEquationElementMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequEquationElementMap *self = [OrgGeogebraCommonKernelLocusequEquationElementMap alloc];
  OrgGeogebraCommonKernelLocusequEquationElementMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(self, scope);
  return self;
}

id<OrgGeogebraCommonKernelAlgosEquationElementInterface> OrgGeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelLocusequEquationElementMap *self, OrgGeogebraCommonKernelGeosGeoElement *key) {
  OrgGeogebraCommonKernelAlgosAlgoElement *algo = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(key)) getParentAlgorithm];
  if (algo == nil) {
    id<OrgGeogebraCommonKernelAlgosEquationElementInterface> ret = [key buildEquationElementWithOrgGeogebraCommonKernelLocusequEquationScope:self->scope_];
    return ret != nil ? ((id) ret) : OrgGeogebraCommonKernelLocusequEquationRestriction_getEmptyRestriction();
  }
  return [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:key withOrgGeogebraCommonKernelAlgosEquationScopeInterface:self->scope_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequEquationElementMap)
