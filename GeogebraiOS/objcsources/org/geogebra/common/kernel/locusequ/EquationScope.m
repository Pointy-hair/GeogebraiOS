//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/EquationScope.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "org/geogebra/common/kernel/RestrictionAlgoForLocusEquation.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/EquationElementInterface.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationAuxiliarSymbolicPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationElementMap.h"
#include "org/geogebra/common/kernel/locusequ/EquationList.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationPointMap.h"
#include "org/geogebra/common/kernel/locusequ/EquationRestriction.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"

@interface OrgGeogebraCommonKernelLocusequEquationScope ()

- (void)initAuxiliarPoints OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((unused)) static void OrgGeogebraCommonKernelLocusequEquationScope_initAuxiliarPoints(OrgGeogebraCommonKernelLocusequEquationScope *self);

@implementation OrgGeogebraCommonKernelLocusequEquationScope

- (instancetype)init {
  OrgGeogebraCommonKernelLocusequEquationScope_init(self);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)locusPoint
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)movingPoint {
  OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(self, locusPoint, movingPoint);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)path
                      withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)movingPoint {
  OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoPoint_(self, path, movingPoint);
  return self;
}

- (void)initAuxiliarPoints {
  OrgGeogebraCommonKernelLocusequEquationScope_initAuxiliarPoints(self);
}

- (id<JavaUtilCollection>)getAllPoints {
  return [((OrgGeogebraCommonKernelLocusequEquationPointMap *) nil_chk(self->pointMap_)) getAllPoints];
}

- (id<JavaUtilCollection>)getAllVariables {
  id<JavaUtilSet> set = new_JavaUtilHashSet_init();
  for (OrgGeogebraCommonKernelLocusequEquationPoint * __strong p in nil_chk([self getAllPoints])) {
    [set addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(p)) getVariables]];
  }
  for (OrgGeogebraCommonKernelLocusequEquationPoint * __strong p in nil_chk(self->auxiliarPoints_)) {
    [set addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequEquationPoint *) nil_chk(p)) getVariables]];
  }
  return set;
}

- (OrgGeogebraCommonKernelLocusequEquationPoint *)getPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p {
  return [((OrgGeogebraCommonKernelLocusequEquationPointMap *) nil_chk(self->pointMap_)) getOrCreateWithOrgGeogebraCommonKernelGeosGeoPoint:p];
}

- (OrgGeogebraCommonKernelLocusequEquationElement *)getElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)key {
  return [((OrgGeogebraCommonKernelLocusequEquationElementMap *) nil_chk(self->elementsMap_)) getOrCreateWithOrgGeogebraCommonKernelGeosGeoElement:key];
}

- (OrgGeogebraCommonKernelLocusequEquationList *)getRestrictionsFromAlgoWithOrgGeogebraCommonKernelAlgosAlgoElement:(OrgGeogebraCommonKernelAlgosAlgoElement *)algo {
  if ([OrgGeogebraCommonKernelRestrictionAlgoForLocusEquation_class_() isInstance:algo]) {
    return [((OrgGeogebraCommonKernelLocusequEquationRestriction *) nil_chk(((OrgGeogebraCommonKernelLocusequEquationRestriction *) check_class_cast([((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:nil withOrgGeogebraCommonKernelAlgosEquationScopeInterface:self], [OrgGeogebraCommonKernelLocusequEquationRestriction class])))) getEquationList];
  }
  return OrgGeogebraCommonKernelLocusequEquationList_getEmptyList();
}

- (void)identifyPointsWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)orig
                      withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)target {
  [((OrgGeogebraCommonKernelLocusequEquationPointMap *) nil_chk(self->pointMap_)) identifyWithOrgGeogebraCommonKernelGeosGeoPoint:orig withOrgGeogebraCommonKernelGeosGeoPoint:target];
}

- (void)identifyElementsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)orig
                        withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)target {
  [((OrgGeogebraCommonKernelLocusequEquationElementMap *) nil_chk(self->elementsMap_)) identifyWithOrgGeogebraCommonKernelGeosGeoElement:orig withOrgGeogebraCommonKernelGeosGeoElement:target];
}

- (void)addPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)point
       withOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)symbolic {
  [((OrgGeogebraCommonKernelLocusequEquationPointMap *) nil_chk(self->pointMap_)) putWithOrgGeogebraCommonKernelGeosGeoPoint:point withOrgGeogebraCommonKernelLocusequEquationPoint:symbolic];
}

- (jboolean)isMovingPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p {
  return [((OrgGeogebraCommonKernelLocusequEquationPointMap *) nil_chk(self->pointMap_)) isMovingPointWithOrgGeogebraCommonKernelGeosGeoPoint:p];
}

- (jboolean)isLocusPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p {
  return [((OrgGeogebraCommonKernelLocusequEquationPointMap *) nil_chk(self->pointMap_)) isLocusPointWithOrgGeogebraCommonKernelGeosGeoPoint:p];
}

- (OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *)getNewAuxiliarPoint {
  OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *p = new_OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint_initWithInt_(self->auxPointIndex_);
  self->auxPointIndex_ += 2;
  [self registerAuxiliarPointWithOrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint:p];
  return p;
}

- (void)registerAuxiliarPointWithOrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint:(OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *)p {
  [((id<JavaUtilSet>) nil_chk(self->auxiliarPoints_)) addWithId:p];
}

- (id<JavaUtilSet>)getAuxiliarSymbolicPoints {
  return new_JavaUtilHashSet_initWithJavaUtilCollection_(self->auxiliarPoints_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "EquationScope", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:", "EquationScope", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoPoint:", "EquationScope", NULL, 0x1, NULL, NULL },
    { "initAuxiliarPoints", NULL, "V", 0x2, NULL, NULL },
    { "getAllPoints", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "getAllVariables", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
    { "getPointWithOrgGeogebraCommonKernelGeosGeoPoint:", "getPoint", "Lorg.geogebra.common.kernel.locusequ.EquationPoint;", 0x1, NULL, NULL },
    { "getElementWithOrgGeogebraCommonKernelGeosGeoElement:", "getElement", "Lorg.geogebra.common.kernel.locusequ.EquationElement;", 0x1, NULL, NULL },
    { "getRestrictionsFromAlgoWithOrgGeogebraCommonKernelAlgosAlgoElement:", "getRestrictionsFromAlgo", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x1, NULL, NULL },
    { "identifyPointsWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:", "identifyPoints", "V", 0x1, NULL, NULL },
    { "identifyElementsWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "identifyElements", "V", 0x1, NULL, NULL },
    { "addPointWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelLocusequEquationPoint:", "addPoint", "V", 0x1, NULL, NULL },
    { "isMovingPointWithOrgGeogebraCommonKernelGeosGeoPoint:", "isMovingPoint", "Z", 0x1, NULL, NULL },
    { "isLocusPointWithOrgGeogebraCommonKernelGeosGeoPoint:", "isLocusPoint", "Z", 0x1, NULL, NULL },
    { "getNewAuxiliarPoint", NULL, "Lorg.geogebra.common.kernel.locusequ.EquationAuxiliarSymbolicPoint;", 0x1, NULL, NULL },
    { "registerAuxiliarPointWithOrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint:", "registerAuxiliarPoint", "V", 0x1, NULL, NULL },
    { "getAuxiliarSymbolicPoints", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pointMap_", NULL, 0x4, "Lorg.geogebra.common.kernel.locusequ.EquationPointMap;", NULL, NULL,  },
    { "elementsMap_", NULL, 0x4, "Lorg.geogebra.common.kernel.locusequ.EquationElementMap;", NULL, NULL,  },
    { "auxiliarPoints_", NULL, 0x4, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/geogebra/common/kernel/locusequ/EquationAuxiliarSymbolicPoint;>;",  },
    { "auxPointIndex_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequEquationScope = { 2, "EquationScope", "org.geogebra.common.kernel.locusequ", NULL, 0x1, 17, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequEquationScope;
}

@end

void OrgGeogebraCommonKernelLocusequEquationScope_init(OrgGeogebraCommonKernelLocusequEquationScope *self) {
  (void) NSObject_init(self);
  self->pointMap_ = new_OrgGeogebraCommonKernelLocusequEquationPointMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(self);
  self->elementsMap_ = new_OrgGeogebraCommonKernelLocusequEquationElementMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(self);
  OrgGeogebraCommonKernelLocusequEquationScope_initAuxiliarPoints(self);
}

OrgGeogebraCommonKernelLocusequEquationScope *new_OrgGeogebraCommonKernelLocusequEquationScope_init() {
  OrgGeogebraCommonKernelLocusequEquationScope *self = [OrgGeogebraCommonKernelLocusequEquationScope alloc];
  OrgGeogebraCommonKernelLocusequEquationScope_init(self);
  return self;
}

void OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelLocusequEquationScope *self, OrgGeogebraCommonKernelGeosGeoPoint *locusPoint, OrgGeogebraCommonKernelGeosGeoPoint *movingPoint) {
  (void) NSObject_init(self);
  self->pointMap_ = new_OrgGeogebraCommonKernelLocusequEquationPointMap_initWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(locusPoint, movingPoint, self);
  self->elementsMap_ = new_OrgGeogebraCommonKernelLocusequEquationElementMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(self);
  OrgGeogebraCommonKernelLocusequEquationScope_initAuxiliarPoints(self);
}

OrgGeogebraCommonKernelLocusequEquationScope *new_OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelGeosGeoPoint *locusPoint, OrgGeogebraCommonKernelGeosGeoPoint *movingPoint) {
  OrgGeogebraCommonKernelLocusequEquationScope *self = [OrgGeogebraCommonKernelLocusequEquationScope alloc];
  OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(self, locusPoint, movingPoint);
  return self;
}

void OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelLocusequEquationScope *self, OrgGeogebraCommonKernelGeosGeoElement *path, OrgGeogebraCommonKernelGeosGeoPoint *movingPoint) {
  (void) NSObject_init(self);
  self->pointMap_ = new_OrgGeogebraCommonKernelLocusequEquationPointMap_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(path, movingPoint, self);
  self->elementsMap_ = new_OrgGeogebraCommonKernelLocusequEquationElementMap_initWithOrgGeogebraCommonKernelLocusequEquationScope_(self);
  OrgGeogebraCommonKernelLocusequEquationScope_initAuxiliarPoints(self);
}

OrgGeogebraCommonKernelLocusequEquationScope *new_OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelGeosGeoElement *path, OrgGeogebraCommonKernelGeosGeoPoint *movingPoint) {
  OrgGeogebraCommonKernelLocusequEquationScope *self = [OrgGeogebraCommonKernelLocusequEquationScope alloc];
  OrgGeogebraCommonKernelLocusequEquationScope_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoPoint_(self, path, movingPoint);
  return self;
}

void OrgGeogebraCommonKernelLocusequEquationScope_initAuxiliarPoints(OrgGeogebraCommonKernelLocusequEquationScope *self) {
  self->auxiliarPoints_ = new_JavaUtilHashSet_init();
  self->auxPointIndex_ = 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequEquationScope)
