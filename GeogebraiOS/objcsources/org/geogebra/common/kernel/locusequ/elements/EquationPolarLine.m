//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/elements/EquationPolarLine.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoPolarLine.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/locusequ/EquationElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericLine.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationPolarLine.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationPolarLine

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)line
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic:(OrgGeogebraCommonKernelLocusequElementsEquationGenericConic *)conic
                                   withOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)p
                                   withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, p, scope);
  return self;
}

- (void)getCoefficientsFromConicWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic:(OrgGeogebraCommonKernelLocusequElementsEquationGenericConic *)conic
                                               withOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)p {
  IOSObjectArray *coef = [((OrgGeogebraCommonKernelLocusequElementsEquationGenericConic *) nil_chk(conic)) getPolarLineCoefficientsForWithOrgGeogebraCommonKernelLocusequEquationPoint:p];
  [self setAWithOrgGeogebraCommonKernelLocusequArithEquationExpression:IOSObjectArray_Get(nil_chk(coef), 0)];
  [self setBWithOrgGeogebraCommonKernelLocusequArithEquationExpression:IOSObjectArray_Get(coef, 1)];
  [self setCWithOrgGeogebraCommonKernelLocusequArithEquationExpression:IOSObjectArray_Get(coef, 2)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationPolarLine", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic:withOrgGeogebraCommonKernelLocusequEquationPoint:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationPolarLine", NULL, 0x1, NULL, NULL },
    { "getCoefficientsFromConicWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic:withOrgGeogebraCommonKernelLocusequEquationPoint:", "getCoefficientsFromConic", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationPolarLine = { 2, "EquationPolarLine", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationPolarLine;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationPolarLine *self, OrgGeogebraCommonKernelGeosGeoElement *line, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  (void) OrgGeogebraCommonKernelLocusequElementsEquationGenericLine_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  OrgGeogebraCommonKernelAlgosAlgoPolarLine *algo = (OrgGeogebraCommonKernelAlgosAlgoPolarLine *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoPolarLine class]);
  OrgGeogebraCommonKernelGeosGeoConic *conic = (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast([((OrgGeogebraCommonKernelAlgosAlgoPolarLine *) nil_chk(algo)) getConic], [OrgGeogebraCommonKernelGeosGeoConic class]);
  OrgGeogebraCommonKernelGeosGeoPoint *point = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([algo getPoint], [OrgGeogebraCommonKernelGeosGeoPoint class]);
  [self setPointWithOrgGeogebraCommonKernelGeosGeoPoint:point];
  OrgGeogebraCommonKernelLocusequElementsEquationGenericConic *c = (OrgGeogebraCommonKernelLocusequElementsEquationGenericConic *) check_class_cast([((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithOrgGeogebraCommonKernelGeosGeoElement:conic], [OrgGeogebraCommonKernelLocusequElementsEquationGenericConic class]);
  OrgGeogebraCommonKernelLocusequEquationPoint *p = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:point];
  [self getCoefficientsFromConicWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic:c withOrgGeogebraCommonKernelLocusequEquationPoint:p];
}

OrgGeogebraCommonKernelLocusequElementsEquationPolarLine *new_OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *line, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationPolarLine *self = [OrgGeogebraCommonKernelLocusequElementsEquationPolarLine alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

void OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationPolarLine *self, OrgGeogebraCommonKernelLocusequElementsEquationGenericConic *conic, OrgGeogebraCommonKernelLocusequEquationPoint *p, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  (void) OrgGeogebraCommonKernelLocusequElementsEquationGenericLine_init(self);
  [self setScopeWithOrgGeogebraCommonKernelLocusequEquationScope:scope];
  [self setPointWithOrgGeogebraCommonKernelLocusequEquationPoint:p];
  [self getCoefficientsFromConicWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic:conic withOrgGeogebraCommonKernelLocusequEquationPoint:p];
}

OrgGeogebraCommonKernelLocusequElementsEquationPolarLine *new_OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationGenericConic *conic, OrgGeogebraCommonKernelLocusequEquationPoint *p, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationPolarLine *self = [OrgGeogebraCommonKernelLocusequElementsEquationPolarLine alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationPolarLine_initWithOrgGeogebraCommonKernelLocusequElementsEquationGenericConic_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, p, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationPolarLine)
