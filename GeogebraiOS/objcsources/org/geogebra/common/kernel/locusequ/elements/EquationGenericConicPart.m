//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/locusequ/elements/EquationGenericConicPart.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/geos/GeoConicPart.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/locusequ/EquationList.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/arith/Equation.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationArithHelper.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConicPart.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)conic
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

- (jboolean)isAlgebraic {
  return NO;
}

- (jboolean)isArc {
  return [((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast([self getResult], [OrgGeogebraCommonKernelGeosGeoConicPart class])))) getConicPartType] == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC;
}

- (jboolean)isSector {
  return [((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(((OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast([self getResult], [OrgGeogebraCommonKernelGeosGeoConicPart class])))) getConicPartType] == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_SECTOR;
}

- (OrgGeogebraCommonKernelLocusequEquationList *)orAllExpressionsWithOrgGeogebraCommonKernelLocusequEquationList:(OrgGeogebraCommonKernelLocusequEquationList *)originalList {
  OrgGeogebraCommonKernelLocusequEquationList *result = [new_OrgGeogebraCommonKernelLocusequEquationList_initWithInt_(1) autorelease];
  IOSObjectArray *eqs = [IOSObjectArray arrayWithLength:[((OrgGeogebraCommonKernelLocusequEquationList *) nil_chk(originalList)) size] type:OrgGeogebraCommonKernelLocusequArithEquationExpression_class_()];
  for (jint i = 0; i < [originalList size]; i++) {
    IOSObjectArray_Set(eqs, i, [((OrgGeogebraCommonKernelLocusequArithEquation *) nil_chk([originalList getWithInt:i])) getExpression]);
  }
  [result addWithId:OrgGeogebraCommonKernelLocusequArithEquationArithHelper_equationWithOrgGeogebraCommonKernelLocusequArithEquationExpression_(OrgGeogebraCommonKernelLocusequArithEquationArithHelper_timesWithOrgGeogebraCommonKernelLocusequArithEquationExpressionArray_(eqs))];
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationGenericConicPart", NULL, 0x1, NULL, NULL },
    { "isAlgebraic", NULL, "Z", 0x1, NULL, NULL },
    { "isArc", NULL, "Z", 0x1, NULL, NULL },
    { "isSector", NULL, "Z", 0x1, NULL, NULL },
    { "orAllExpressionsWithOrgGeogebraCommonKernelLocusequEquationList:", "orAllExpressions", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart = { 2, "EquationGenericConicPart", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x401, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart *self, OrgGeogebraCommonKernelGeosGeoElement *conic, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationGenericConic_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart)
