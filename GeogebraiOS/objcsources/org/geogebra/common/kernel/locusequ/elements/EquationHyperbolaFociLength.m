//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/locusequ/elements/EquationHyperbolaFociLength.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoHyperbolaFociLength.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationNumericValue.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationHyperbolaFociLength.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)conic
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

- (void)computeMatrix {
  OrgGeogebraCommonKernelAlgosAlgoHyperbolaFociLength *algo = (OrgGeogebraCommonKernelAlgosAlgoHyperbolaFociLength *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoHyperbolaFociLength class]);
  OrgGeogebraCommonKernelLocusequEquationPoint *focus1 = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([((OrgGeogebraCommonKernelAlgosAlgoHyperbolaFociLength *) nil_chk(algo)) getFocus1], [OrgGeogebraCommonKernelGeosGeoPoint class])];
  OrgGeogebraCommonKernelLocusequEquationPoint *focus2 = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([algo getFocus2], [OrgGeogebraCommonKernelGeosGeoPoint class])];
  OrgGeogebraCommonKernelLocusequArithEquationExpression *length = OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk([algo getLength])) getDouble]);
  [self setEllipseHyperbolaWithOrgGeogebraCommonKernelLocusequEquationPoint:focus1 withOrgGeogebraCommonKernelLocusequEquationPoint:focus2 withOrgGeogebraCommonKernelLocusequArithEquationExpression:length];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationHyperbolaFociLength", NULL, 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength = { 2, "EquationHyperbolaFociLength", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength *self, OrgGeogebraCommonKernelGeosGeoElement *conic, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationGenericConic_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  [self computeMatrix];
}

OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength *new_OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *conic, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength *self = [OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationHyperbolaFociLength)
