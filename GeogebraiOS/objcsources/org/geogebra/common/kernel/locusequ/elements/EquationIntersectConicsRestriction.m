//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/elements/EquationIntersectConicsRestriction.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoIntersect.h"
#include "org/geogebra/common/kernel/algos/AlgoIntersectConics.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationList.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationIntersectConicsRestriction.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationIntersectRestriction.h"

@interface OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction () {
 @public
  OrgGeogebraCommonKernelLocusequEquationElement *firstConic_;
  OrgGeogebraCommonKernelLocusequEquationElement *secondConic_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction, firstConic_, OrgGeogebraCommonKernelLocusequEquationElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction, secondConic_, OrgGeogebraCommonKernelLocusequEquationElement *)

@implementation OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
          withOrgGeogebraCommonKernelAlgosAlgoIntersectConics:(OrgGeogebraCommonKernelAlgosAlgoIntersectConics *)algo
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoIntersectConics_withOrgGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgoIntersectConics *)getAlgo {
  return (OrgGeogebraCommonKernelAlgosAlgoIntersectConics *) check_class_cast([super getAlgo], [OrgGeogebraCommonKernelAlgosAlgoIntersectConics class]);
}

- (OrgGeogebraCommonKernelLocusequEquationElement *)getFirstConic {
  if (self->firstConic_ == nil) {
    self->firstConic_ = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelAlgosAlgoIntersectConics *) nil_chk([self getAlgo])) getA]];
  }
  return self->firstConic_;
}

- (OrgGeogebraCommonKernelLocusequEquationElement *)getSecondConic {
  if (self->secondConic_ == nil) {
    self->secondConic_ = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelAlgosAlgoIntersectConics *) nil_chk([self getAlgo])) getB]];
  }
  return secondConic_;
}

- (OrgGeogebraCommonKernelLocusequEquationList *)forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)p {
  OrgGeogebraCommonKernelLocusequEquationList *list = new_OrgGeogebraCommonKernelLocusequEquationList_initWithInt_(2);
  [list addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequEquationElement *) nil_chk([self getFirstConic])) forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:p]];
  [list addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequEquationElement *) nil_chk([self getSecondConic])) forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:p]];
  return list;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelAlgosAlgoIntersectConics:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationIntersectConicsRestriction", NULL, 0x1, NULL, NULL },
    { "getAlgo", NULL, "Lorg.geogebra.common.kernel.algos.AlgoIntersectConics;", 0x1, NULL, NULL },
    { "getFirstConic", NULL, "Lorg.geogebra.common.kernel.locusequ.EquationElement;", 0x4, NULL, NULL },
    { "getSecondConic", NULL, "Lorg.geogebra.common.kernel.locusequ.EquationElement;", 0x4, NULL, NULL },
    { "forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "firstConic_", NULL, 0x2, "Lorg.geogebra.common.kernel.locusequ.EquationElement;", NULL, NULL,  },
    { "secondConic_", NULL, 0x2, "Lorg.geogebra.common.kernel.locusequ.EquationElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction = { 2, "EquationIntersectConicsRestriction", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoIntersectConics_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction *self, OrgGeogebraCommonKernelGeosGeoElement *geo, OrgGeogebraCommonKernelAlgosAlgoIntersectConics *algo, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  (void) OrgGeogebraCommonKernelLocusequElementsEquationIntersectRestriction_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoIntersect_withOrgGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
}

OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction *new_OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoIntersectConics_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *geo, OrgGeogebraCommonKernelAlgosAlgoIntersectConics *algo, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction *self = [OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoIntersectConics_withOrgGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction)
