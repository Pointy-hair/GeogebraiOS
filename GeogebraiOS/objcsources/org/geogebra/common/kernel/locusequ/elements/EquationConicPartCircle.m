//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/locusequ/elements/EquationConicPartCircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoConicPartCircle.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationList.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationArithHelper.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationConicPartCircle.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConicPart.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationJoinPoints.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)conic
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

- (void)computeMatrix {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *algo = (OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoConicPartCircle class]);
  OrgGeogebraCommonKernelLocusequEquationPoint *center = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[((OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *) nil_chk(algo)) getCenter]];
  OrgGeogebraCommonKernelLocusequEquationPoint *startPoint = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getStartPoint]];
  [self setMatrixWithOrgGeogebraCommonKernelLocusequArithEquationExpressionArray:[self matrixForCircleWithOrgGeogebraCommonKernelLocusequEquationPoint:center withOrgGeogebraCommonKernelLocusequArithEquationExpression:OrgGeogebraCommonKernelLocusequArithEquationArithHelper_dist2WithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_(center, startPoint)]];
}

- (OrgGeogebraCommonKernelLocusequEquationList *)forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)p {
  OrgGeogebraCommonKernelLocusequEquationList *el = [super forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:p];
  if ([self isSector]) {
    OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *algo = (OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoConicPartCircle class]);
    OrgGeogebraCommonKernelLocusequEquationPoint *center = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[((OrgGeogebraCommonKernelAlgosAlgoConicPartCircle *) nil_chk(algo)) getCenter]];
    OrgGeogebraCommonKernelLocusequEquationPoint *startPoint = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getStartPoint]];
    OrgGeogebraCommonKernelLocusequEquationPoint *endPoint = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getEndPoint]];
    [((OrgGeogebraCommonKernelLocusequEquationList *) nil_chk(el)) addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints *) [new_OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(center, startPoint, [self getScope]) autorelease]) forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:p]];
    [el addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints *) [new_OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(center, endPoint, [self getScope]) autorelease]) forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:p]];
    el = [self orAllExpressionsWithOrgGeogebraCommonKernelLocusequEquationList:el];
  }
  return el;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationConicPartCircle", NULL, 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
    { "forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle = { 2, "EquationConicPartCircle", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle *self, OrgGeogebraCommonKernelGeosGeoElement *conic, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  [self computeMatrix];
}

OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle *new_OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *conic, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle *self = [OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircle)
