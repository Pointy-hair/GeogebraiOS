//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/elements/EquationJoinPointsRay.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoJoinPointsRay.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/SymbolicVector.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericRay.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationJoinPointsRay.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)element
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationJoinPointsRay", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay = { 2, "EquationJoinPointsRay", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay *self, OrgGeogebraCommonKernelGeosGeoElement *element, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  (void) OrgGeogebraCommonKernelLocusequElementsEquationGenericRay_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  OrgGeogebraCommonKernelAlgosAlgoJoinPointsRay *algo = (OrgGeogebraCommonKernelAlgosAlgoJoinPointsRay *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(element)) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoJoinPointsRay class]);
  [self setPointWithOrgGeogebraCommonKernelGeosGeoPoint:[((OrgGeogebraCommonKernelAlgosAlgoJoinPointsRay *) nil_chk(algo)) getP]];
  [self setVectorWithOrgGeogebraCommonKernelLocusequSymbolicVector:new_OrgGeogebraCommonKernelLocusequSymbolicVector_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_([self getEquationPoint], [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getQ]])];
}

OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay *new_OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *element, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay *self = [OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationJoinPointsRay)
