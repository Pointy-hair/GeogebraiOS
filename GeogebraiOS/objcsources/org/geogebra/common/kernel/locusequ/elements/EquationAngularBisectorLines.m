//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/elements/EquationAngularBisectorLines.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoAngularBisectorLines.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationElement.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/SymbolicVector.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationAngularBisectorLines.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericAngularBisector.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericLine.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)line
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationAngularBisectorLines", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines = { 2, "EquationAngularBisectorLines", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines *self, OrgGeogebraCommonKernelGeosGeoElement *line, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  (void) OrgGeogebraCommonKernelLocusequElementsEquationGenericAngularBisector_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  OrgGeogebraCommonKernelAlgosAlgoAngularBisectorLines *algo = (OrgGeogebraCommonKernelAlgosAlgoAngularBisectorLines *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(line)) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoAngularBisectorLines class]);
  OrgGeogebraCommonKernelLocusequElementsEquationGenericLine *g, *h;
  g = (OrgGeogebraCommonKernelLocusequElementsEquationGenericLine *) check_class_cast([((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithOrgGeogebraCommonKernelGeosGeoElement:[((OrgGeogebraCommonKernelAlgosAlgoAngularBisectorLines *) nil_chk(algo)) getg]], [OrgGeogebraCommonKernelLocusequElementsEquationGenericLine class]);
  h = (OrgGeogebraCommonKernelLocusequElementsEquationGenericLine *) check_class_cast([((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithOrgGeogebraCommonKernelGeosGeoElement:[algo geth]], [OrgGeogebraCommonKernelLocusequElementsEquationGenericLine class]);
  OrgGeogebraCommonKernelLocusequEquationPoint *b = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getB]];
  [self setPointWithOrgGeogebraCommonKernelLocusequEquationPoint:b];
  [self setVectorsWithOrgGeogebraCommonKernelLocusequSymbolicVector:[((OrgGeogebraCommonKernelLocusequElementsEquationGenericLine *) nil_chk(g)) getVector] withOrgGeogebraCommonKernelLocusequSymbolicVector:[((OrgGeogebraCommonKernelLocusequElementsEquationGenericLine *) nil_chk(h)) getVector]];
  if (line == IOSObjectArray_Get(nil_chk([algo getLines]), 1)) {
    [self setVectorWithOrgGeogebraCommonKernelLocusequSymbolicVector:[((OrgGeogebraCommonKernelLocusequSymbolicVector *) nil_chk([self getVector])) getNormal]];
  }
}

OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines *new_OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *line, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines *self = [OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationAngularBisectorLines)
