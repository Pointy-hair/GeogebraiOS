//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/locusequ/elements/EquationCirclePointRadius.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoCirclePointRadius.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoSegment.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationArithHelper.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationNumericValue.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationCirclePointRadius.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)el
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, el, scope);
  return self;
}

- (void)computeMatrix {
  OrgGeogebraCommonKernelAlgosAlgoCirclePointRadius *algo = (OrgGeogebraCommonKernelAlgosAlgoCirclePointRadius *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoCirclePointRadius class]);
  OrgGeogebraCommonKernelLocusequEquationPoint *center = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([((OrgGeogebraCommonKernelAlgosAlgoCirclePointRadius *) nil_chk(algo)) getCenter], [OrgGeogebraCommonKernelGeosGeoPoint class])];
  OrgGeogebraCommonKernelLocusequArithEquationExpression *r2 = nil;
  OrgGeogebraCommonKernelGeosGeoElement *rGeo = [algo getRadiusGeo];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(rGeo)) isGeoNumeric]) {
    OrgGeogebraCommonKernelLocusequArithEquationExpression *r = OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(rGeo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) getValue]);
    r2 = OrgGeogebraCommonKernelLocusequArithEquationArithHelper_sqrWithOrgGeogebraCommonKernelLocusequArithEquationExpression_(r);
  }
  else if ([rGeo isGeoSegment]) {
    OrgGeogebraCommonKernelGeosGeoSegment *s = (OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(rGeo, [OrgGeogebraCommonKernelGeosGeoSegment class]);
    r2 = OrgGeogebraCommonKernelLocusequArithEquationArithHelper_dist2WithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_([((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[s getStartPoint]], [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[s getEndPoint]]);
  }
  [self setMatrixWithOrgGeogebraCommonKernelLocusequArithEquationExpressionArray:[self matrixForCircleWithOrgGeogebraCommonKernelLocusequEquationPoint:center withOrgGeogebraCommonKernelLocusequArithEquationExpression:r2]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationCirclePointRadius", NULL, 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius = { 2, "EquationCirclePointRadius", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius *self, OrgGeogebraCommonKernelGeosGeoElement *el, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationGenericConic_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, el, scope);
  [self computeMatrix];
}

OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius *new_OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *el, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius *self = [OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, el, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationCirclePointRadius)
