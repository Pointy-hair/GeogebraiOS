//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/locusequ/elements/EquationConicPartCircumcircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/algos/AlgoConicPartCircumcircle.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationAuxiliarSymbolicPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationList.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationConicPartCircumcircle.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericConicPart.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericLine.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationJoinPoints.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationLineBisector.h"

@implementation OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)conic
             withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

- (void)computeMatrix {
  OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle *algo = (OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle class]);
  OrgGeogebraCommonKernelLocusequEquationPoint *A, *B, *C;
  A = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[((OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle *) nil_chk(algo)) getA]];
  B = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getB]];
  C = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getC]];
  [self setMatrixWithOrgGeogebraCommonKernelLocusequArithEquationExpressionArray:[self matrixForCircleWithOrgGeogebraCommonKernelLocusequEquationPoint:A withOrgGeogebraCommonKernelLocusequEquationPoint:B withOrgGeogebraCommonKernelLocusequEquationPoint:C]];
}

- (OrgGeogebraCommonKernelLocusequEquationList *)forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)p {
  OrgGeogebraCommonKernelLocusequEquationList *el = [super forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:p];
  if ([self isSector]) {
    OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle *algo = (OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle class]);
    OrgGeogebraCommonKernelLocusequEquationPoint *A, *B, *C;
    A = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[((OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircle *) nil_chk(algo)) getA]];
    B = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getB]];
    C = [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:[algo getC]];
    OrgGeogebraCommonKernelLocusequElementsEquationGenericLine *l = [new_OrgGeogebraCommonKernelLocusequElementsEquationLineBisector_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(A, B, [self getScope]) autorelease];
    OrgGeogebraCommonKernelLocusequElementsEquationGenericLine *m = [new_OrgGeogebraCommonKernelLocusequElementsEquationLineBisector_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(A, C, [self getScope]) autorelease];
    OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *center = [l getNewIncidentPoint];
    [((OrgGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *) nil_chk(center)) addIncidenceWithOrgGeogebraCommonKernelLocusequEquationElement:m];
    [((OrgGeogebraCommonKernelLocusequEquationList *) nil_chk(el)) addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints *) [new_OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(center, A, [self getScope]) autorelease]) forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:p]];
    [el addAllWithJavaUtilCollection:[((OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints *) [new_OrgGeogebraCommonKernelLocusequElementsEquationJoinPoints_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationScope_(center, C, [self getScope]) autorelease]) forPointWithOrgGeogebraCommonKernelLocusequEquationPoint:p]];
    el = [self orAllExpressionsWithOrgGeogebraCommonKernelLocusequEquationList:el];
  }
  return el;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationConicPartCircumcircle", NULL, 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
    { "forPointImplWithOrgGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lorg.geogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle = { 2, "EquationConicPartCircumcircle", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle *self, OrgGeogebraCommonKernelGeosGeoElement *conic, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationGenericConicPart_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  [self computeMatrix];
}

OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle *new_OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoElement *conic, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle *self = [OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationConicPartCircumcircle)
