//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/locusequ/elements/EquationFreeLine.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationScope.h"
#include "org/geogebra/common/kernel/locusequ/SymbolicVector.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationFreeLine.h"
#include "org/geogebra/common/kernel/locusequ/elements/EquationGenericLine.h"

@interface OrgGeogebraCommonKernelLocusequElementsEquationFreeLine () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *q_;
  OrgGeogebraCommonKernelLocusequEquationPoint *qequ_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequElementsEquationFreeLine, q_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequElementsEquationFreeLine, qequ_, OrgGeogebraCommonKernelLocusequEquationPoint *)

@implementation OrgGeogebraCommonKernelLocusequElementsEquationFreeLine

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)line
          withOrgGeogebraCommonKernelLocusequEquationScope:(OrgGeogebraCommonKernelLocusequEquationScope *)scope {
  OrgGeogebraCommonKernelLocusequElementsEquationFreeLine_initWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

- (void)dealloc {
  RELEASE_(q_);
  RELEASE_(qequ_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelLocusequEquationScope:", "EquationFreeLine", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "q_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "qequ_", NULL, 0x2, "Lorg.geogebra.common.kernel.locusequ.EquationPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequElementsEquationFreeLine = { 2, "EquationFreeLine", "org.geogebra.common.kernel.locusequ.elements", NULL, 0x1, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequElementsEquationFreeLine;
}

@end

void OrgGeogebraCommonKernelLocusequElementsEquationFreeLine_initWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelLocusequElementsEquationFreeLine *self, OrgGeogebraCommonKernelGeosGeoLine *line, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationGenericLine_initWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  OrgGeogebraCommonKernelGeosGeoPoint *start = [new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(line)) getConstruction]) autorelease], *end = [new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([line getConstruction]) autorelease];
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([line getX])) {
    [start setCoordsWithDouble:0 withDouble:-[line getZ] / [line getY] withDouble:1];
    [end setCoordsWithDouble:1 withDouble:-[line getZ] / [line getY] withDouble:1];
  }
  else {
    [start setCoordsWithDouble:-[line getZ] / [line getX] withDouble:0 withDouble:1];
    [end setCoordsWithDouble:(-[line getZ] - [line getY]) / [line getX] withDouble:1 withDouble:1];
  }
  [start update];
  [end update];
  OrgGeogebraCommonKernelLocusequElementsEquationFreeLine_set_q_(self, start);
  OrgGeogebraCommonKernelLocusequElementsEquationFreeLine_set_qequ_(self, [((OrgGeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithOrgGeogebraCommonKernelGeosGeoPoint:self->q_]);
  [self setPointWithOrgGeogebraCommonKernelGeosGeoPoint:end];
  [self setVectorWithOrgGeogebraCommonKernelLocusequSymbolicVector:[new_OrgGeogebraCommonKernelLocusequSymbolicVector_initWithOrgGeogebraCommonKernelLocusequEquationPoint_withOrgGeogebraCommonKernelLocusequEquationPoint_([self getEquationPoint], self->qequ_) autorelease]];
}

OrgGeogebraCommonKernelLocusequElementsEquationFreeLine *new_OrgGeogebraCommonKernelLocusequElementsEquationFreeLine_initWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelLocusequEquationScope_(OrgGeogebraCommonKernelGeosGeoLine *line, OrgGeogebraCommonKernelLocusequEquationScope *scope) {
  OrgGeogebraCommonKernelLocusequElementsEquationFreeLine *self = [OrgGeogebraCommonKernelLocusequElementsEquationFreeLine alloc];
  OrgGeogebraCommonKernelLocusequElementsEquationFreeLine_initWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelLocusequEquationScope_(self, line, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequElementsEquationFreeLine)
