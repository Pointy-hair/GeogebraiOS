//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/locusequ/EquationFreePoint.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationFreePoint.h"
#include "org/geogebra/common/kernel/locusequ/EquationPoint.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "org/geogebra/common/kernel/locusequ/arith/EquationNumericValue.h"

@interface OrgGeogebraCommonKernelLocusequEquationFreePoint () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *p_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelLocusequEquationFreePoint, p_, OrgGeogebraCommonKernelGeosGeoPoint *)

@implementation OrgGeogebraCommonKernelLocusequEquationFreePoint

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)p {
  OrgGeogebraCommonKernelLocusequEquationFreePoint_initWithOrgGeogebraCommonKernelGeosGeoPoint_(self, p);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getPoint {
  return self->p_;
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getXExpression {
  return x_;
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getYExpression {
  return y_;
}

- (OrgGeogebraCommonKernelLocusequArithEquationExpression *)getZExpression {
  return z_;
}

- (jboolean)isIndependent {
  return YES;
}

- (void)getIndexesFromWithOrgGeogebraCommonKernelLocusequEquationPoint:(OrgGeogebraCommonKernelLocusequEquationPoint *)newPoint {
}

- (void)fixXWithDouble:(jdouble)value {
  self->x_ = OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(value);
}

- (void)fixYWithDouble:(jdouble)value {
  self->y_ = OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoPoint:", "EquationFreePoint", NULL, 0x1, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getXExpression", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getYExpression", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "getZExpression", NULL, "Lorg.geogebra.common.kernel.locusequ.arith.EquationExpression;", 0x1, NULL, NULL },
    { "isIndependent", NULL, "Z", 0x1, NULL, NULL },
    { "getIndexesFromWithOrgGeogebraCommonKernelLocusequEquationPoint:", "getIndexesFrom", "V", 0x1, NULL, NULL },
    { "fixXWithDouble:", "fixX", "V", 0x1, NULL, NULL },
    { "fixYWithDouble:", "fixY", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x4, "Lorg.geogebra.common.kernel.locusequ.arith.EquationNumericValue;", NULL, NULL,  },
    { "y_", NULL, 0x4, "Lorg.geogebra.common.kernel.locusequ.arith.EquationNumericValue;", NULL, NULL,  },
    { "z_", NULL, 0x4, "Lorg.geogebra.common.kernel.locusequ.arith.EquationNumericValue;", NULL, NULL,  },
    { "p_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelLocusequEquationFreePoint = { 2, "EquationFreePoint", "org.geogebra.common.kernel.locusequ", NULL, 0x1, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelLocusequEquationFreePoint;
}

@end

void OrgGeogebraCommonKernelLocusequEquationFreePoint_initWithOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelLocusequEquationFreePoint *self, OrgGeogebraCommonKernelGeosGeoPoint *p) {
  (void) OrgGeogebraCommonKernelLocusequEquationPoint_init(self);
  self->p_ = p;
  self->x_ = OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(self->p_)) getX]);
  self->y_ = OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([self->p_ getY]);
  self->z_ = OrgGeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_([self->p_ getZ]);
}

OrgGeogebraCommonKernelLocusequEquationFreePoint *new_OrgGeogebraCommonKernelLocusequEquationFreePoint_initWithOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelGeosGeoPoint *p) {
  OrgGeogebraCommonKernelLocusequEquationFreePoint *self = [OrgGeogebraCommonKernelLocusequEquationFreePoint alloc];
  OrgGeogebraCommonKernelLocusequEquationFreePoint_initWithOrgGeogebraCommonKernelGeosGeoPoint_(self, p);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelLocusequEquationFreePoint)
