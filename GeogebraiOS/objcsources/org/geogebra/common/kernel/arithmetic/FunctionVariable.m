//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/arithmetic/FunctionVariable.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/plugin/Operation.h"

@interface OrgGeogebraCommonKernelArithmeticFunctionVariable () {
 @public
  NSString *varStr_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticFunctionVariable, varStr_, NSString *)

@implementation OrgGeogebraCommonKernelArithmeticFunctionVariable

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                         withNSString:(NSString *)varStr {
  OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(self, kernel, varStr);
  return self;
}

- (jboolean)isConstant {
  return NO;
}

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)k {
  return [new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(k, varStr_) autorelease];
}

- (void)setVarStringWithNSString:(NSString *)varStr {
  OrgGeogebraCommonKernelArithmeticFunctionVariable_set_varStr_(self, varStr);
}

- (NSString *)getSetVarString {
  return varStr_;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonKernelStringTemplate *) nil_chk(tpl)) printVariableNameWithNSString:varStr_];
}

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)derivativeWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv
                                                                                      withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel0 {
  if (fv == self) {
    return [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel0, 1) autorelease];
  }
  return [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel0, 0) autorelease];
}

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)integralWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv
                                                                                    withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel0 {
  if (fv == self) {
    return [((OrgGeogebraCommonKernelArithmeticExpressionNode *) [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel0, self, OrgGeogebraCommonPluginOperationEnum_get_POWER(), [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel0, 2) autorelease]) autorelease]) divideWithDouble:2];
  }
  return [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel0, self, OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), fv) autorelease];
}

- (void)dealloc {
  RELEASE_(varStr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "FunctionVariable", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernel:withNSString:", "FunctionVariable", NULL, 0x1, NULL, NULL },
    { "isConstant", NULL, "Z", 0x11, NULL, NULL },
    { "deepCopyWithOrgGeogebraCommonKernelKernel:", "deepCopy", "Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", 0x11, NULL, NULL },
    { "setVarStringWithNSString:", "setVarString", "V", 0x1, NULL, NULL },
    { "getSetVarString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "derivativeWithOrgGeogebraCommonKernelArithmeticFunctionVariable:withOrgGeogebraCommonKernelKernel:", "derivative", "Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "integralWithOrgGeogebraCommonKernelArithmeticFunctionVariable:withOrgGeogebraCommonKernelKernel:", "integral", "Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "varStr_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelArithmeticFunctionVariable = { 2, "FunctionVariable", "org.geogebra.common.kernel.arithmetic", NULL, 0x1, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelArithmeticFunctionVariable;
}

@end

void OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelArithmeticFunctionVariable *self, OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  OrgGeogebraCommonKernelArithmeticFunctionVariable_set_varStr_(self, @"x");
}

OrgGeogebraCommonKernelArithmeticFunctionVariable *new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelArithmeticFunctionVariable *self = [OrgGeogebraCommonKernelArithmeticFunctionVariable alloc];
  OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

void OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelArithmeticFunctionVariable *self, OrgGeogebraCommonKernelKernel *kernel, NSString *varStr) {
  OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  OrgGeogebraCommonKernelArithmeticFunctionVariable_set_varStr_(self, @"x");
  [self setVarStringWithNSString:varStr];
}

OrgGeogebraCommonKernelArithmeticFunctionVariable *new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelKernel *kernel, NSString *varStr) {
  OrgGeogebraCommonKernelArithmeticFunctionVariable *self = [OrgGeogebraCommonKernelArithmeticFunctionVariable alloc];
  OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(self, kernel, varStr);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelArithmeticFunctionVariable)
