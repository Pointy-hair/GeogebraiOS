//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/arithmetic/Equation.java
//

#ifndef _OrgGeogebraCommonKernelArithmeticEquation_H_
#define _OrgGeogebraCommonKernelArithmeticEquation_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"

@class IOSObjectArray;
@class JavaUtilHashSet;
@class OrgGeogebraCommonKernelArithmeticExpressionNode;
@class OrgGeogebraCommonKernelArithmeticPolynomial;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonPluginOperationEnum;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;
@protocol OrgGeogebraCommonKernelArithmeticInspecting;
@protocol OrgGeogebraCommonKernelArithmeticTraversing;

@interface OrgGeogebraCommonKernelArithmeticEquation : OrgGeogebraCommonKernelArithmeticValidExpression

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)lhs
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)rhs;

- (void)addVariableDegreeWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)gn;

- (void)applyOperationWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation
          withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev
                                                   withBoolean:(jboolean)switchOrder;

- (jboolean)containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev;

- (jboolean)containsZ;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1;

- (jint)degree;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)evaluateWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)getAssignmentOperator;

- (NSString *)getAssignmentOperatorLaTeX;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getCoefficientWithNSString:(NSString *)variables;

- (jdouble)getCoeffValueWithNSString:(NSString *)variables;

- (IOSObjectArray *)getGeoElementVariables;

- (OrgGeogebraCommonKernelKernel *)getKernel;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)getLHS;

- (OrgGeogebraCommonKernelArithmeticPolynomial *)getNormalForm;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)getRHS;

- (JavaUtilHashSet *)getVariables;

- (jboolean)hasVariableDegree;

- (void)initEquation OBJC_METHOD_FAMILY_NONE;

- (jboolean)inspectWithOrgGeogebraCommonKernelArithmeticInspecting:(id<OrgGeogebraCommonKernelArithmeticInspecting>)t;

- (jboolean)isConstant;

- (jboolean)isExplicitWithNSString:(NSString *)var;

- (jboolean)isForcedConic;

- (jboolean)isForcedImplicitPoly;

- (jboolean)isForcedLine;

- (jboolean)isForcedPlane;

- (jboolean)isForcedQuadric;

- (jboolean)isFunctionDependent;

- (jboolean)isImplicit;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (jboolean)isPolynomial;

- (jboolean)mayBePolynomial;

- (void)resolveVariables;

- (void)setForceConic;

- (void)setForceImplicitPoly;

- (void)setForceLine;

- (void)setForcePlane;

- (void)setForceQuadric;

- (void)setFunctionDependentWithBoolean:(jboolean)isFunctionDependent;

- (void)setIsPolynomialWithBoolean:(jboolean)b;

- (void)setLHSWithOrgGeogebraCommonKernelArithmeticExpressionNode:(OrgGeogebraCommonKernelArithmeticExpressionNode *)lhs;

- (void)setRHSWithOrgGeogebraCommonKernelArithmeticExpressionNode:(OrgGeogebraCommonKernelArithmeticExpressionNode *)rhs;

- (jint)singleDegree;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl
            withOrgGeogebraCommonKernelArithmeticExpressionNode:(OrgGeogebraCommonKernelArithmeticExpressionNode *)lhs1;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)traverseWithOrgGeogebraCommonKernelArithmeticTraversing:(id<OrgGeogebraCommonKernelArithmeticTraversing>)t;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmeticEquation)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticEquation_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelArithmeticEquation *self, OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> lhs, id<OrgGeogebraCommonKernelArithmeticExpressionValue> rhs);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticEquation *new_OrgGeogebraCommonKernelArithmeticEquation_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> lhs, id<OrgGeogebraCommonKernelArithmeticExpressionValue> rhs) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmeticEquation)

#endif // _OrgGeogebraCommonKernelArithmeticEquation_H_
