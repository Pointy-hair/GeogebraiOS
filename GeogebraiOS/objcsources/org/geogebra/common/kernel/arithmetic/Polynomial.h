//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/arithmetic/Polynomial.java
//

#ifndef _OrgGeogebraCommonKernelArithmeticPolynomial_H_
#define _OrgGeogebraCommonKernelArithmeticPolynomial_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelArithmeticEquation;
@class OrgGeogebraCommonKernelArithmeticExpressionNode;
@class OrgGeogebraCommonKernelArithmeticTerm;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonPluginOperationEnum;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;

@interface OrgGeogebraCommonKernelArithmeticPolynomial : NSObject < JavaIoSerializable >

#pragma mark Public

- (jint)degree;

- (IOSObjectArray *)getCoeff;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getCoefficientWithNSString:(NSString *)variables;

- (jdouble)getCoeffValueWithNSString:(NSString *)variables;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getConstantCoefficient;

- (jboolean)isConstant;

- (jboolean)isFreeOfWithChar:(jchar)var;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
      withOrgGeogebraCommonKernelArithmeticPolynomial:(OrgGeogebraCommonKernelArithmeticPolynomial *)poly;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                         withNSString:(NSString *)vars;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
            withOrgGeogebraCommonKernelArithmeticTerm:(OrgGeogebraCommonKernelArithmeticTerm *)t;

- (void)addWithOrgGeogebraCommonKernelArithmeticPolynomial:(OrgGeogebraCommonKernelArithmeticPolynomial *)e
             withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)eq;

- (OrgGeogebraCommonKernelArithmeticPolynomial *)applyWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation
                                          withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)rt
                                                 withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ;

- (OrgGeogebraCommonKernelArithmeticPolynomial *)applyWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation
                                               withOrgGeogebraCommonKernelArithmeticPolynomial:(OrgGeogebraCommonKernelArithmeticPolynomial *)rt
                                                 withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ;

- (jboolean)containsWithNSString:(NSString *)var;

+ (OrgGeogebraCommonKernelArithmeticPolynomial *)fromNodeWithOrgGeogebraCommonKernelArithmeticExpressionNode:(OrgGeogebraCommonKernelArithmeticExpressionNode *)lhs
                                                               withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)eqn;

- (OrgGeogebraCommonKernelArithmeticTerm *)getTermWithInt:(jint)i;

- (jboolean)isEmpty;

- (jboolean)isVarWithNSString:(NSString *)var;

- (jint)length;

- (void)multiplyWithDouble:(jdouble)d;

- (void)simplifyWithOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)eq;

- (jint)singleDegree;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmeticPolynomial)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticPolynomial_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticTerm_(OrgGeogebraCommonKernelArithmeticPolynomial *self, OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonKernelArithmeticTerm *t);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticPolynomial *new_OrgGeogebraCommonKernelArithmeticPolynomial_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticTerm_(OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonKernelArithmeticTerm *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticPolynomial_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelArithmeticPolynomial *self, OrgGeogebraCommonKernelKernel *kernel, NSString *vars);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticPolynomial *new_OrgGeogebraCommonKernelArithmeticPolynomial_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelKernel *kernel, NSString *vars) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticPolynomial_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticPolynomial_(OrgGeogebraCommonKernelArithmeticPolynomial *self, OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonKernelArithmeticPolynomial *poly);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticPolynomial *new_OrgGeogebraCommonKernelArithmeticPolynomial_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticPolynomial_(OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonKernelArithmeticPolynomial *poly) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticPolynomial *OrgGeogebraCommonKernelArithmeticPolynomial_fromNodeWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelArithmeticExpressionNode *lhs, OrgGeogebraCommonKernelArithmeticEquation *eqn);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmeticPolynomial)

#endif // _OrgGeogebraCommonKernelArithmeticPolynomial_H_
