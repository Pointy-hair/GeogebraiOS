//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/arithmetic/Term.java
//

#ifndef _OrgGeogebraCommonKernelArithmeticTerm_H_
#define _OrgGeogebraCommonKernelArithmeticTerm_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/lang/Comparable.h"

@class JavaLangStringBuilder;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;

@interface OrgGeogebraCommonKernelArithmeticTerm : NSObject < JavaLangComparable, JavaIoSerializable > {
 @public
  id<OrgGeogebraCommonKernelArithmeticExpressionValue> coefficient_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)coeff
                                                            withNSString:(NSString *)vars;

- (instancetype)initWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)coeff
                                               withJavaLangStringBuilder:(JavaLangStringBuilder *)vars;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                           withDouble:(jdouble)coeff
                                         withNSString:(NSString *)vars;

- (instancetype)initWithOrgGeogebraCommonKernelArithmeticTerm:(OrgGeogebraCommonKernelArithmeticTerm *)t
                            withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (jint)compareToWithId:(id)o;

- (jboolean)isEqual:(id)o;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getCoefficient;

- (NSUInteger)hash;

- (NSString *)description;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Package-Private

- (void)addToCoefficientWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)number
                                           withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (jboolean)containsWithNSString:(NSString *)var;

- (jint)degree;

- (jint)degreeWithChar:(jchar)var;

- (void)divideWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)number
                                 withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (NSString *)getVars;

- (jboolean)hasIntegerCoeff;

- (jboolean)hasNoVars;

- (void)multiplyWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)number
                                   withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (void)multiplyWithOrgGeogebraCommonKernelArithmeticTerm:(OrgGeogebraCommonKernelArithmeticTerm *)t
                        withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (void)setCoefficientWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)coeff;

- (void)setVariablesWithNSString:(NSString *)vars;

- (void)setVariablesWithJavaLangStringBuilder:(JavaLangStringBuilder *)vars;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmeticTerm)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticTerm, coefficient_, id<OrgGeogebraCommonKernelArithmeticExpressionValue>)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_(OrgGeogebraCommonKernelArithmeticTerm *self, id<OrgGeogebraCommonKernelArithmeticExpressionValue> coeff, NSString *vars);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticTerm *new_OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> coeff, NSString *vars) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelKernel_withDouble_withNSString_(OrgGeogebraCommonKernelArithmeticTerm *self, OrgGeogebraCommonKernelKernel *kernel, jdouble coeff, NSString *vars);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticTerm *new_OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelKernel_withDouble_withNSString_(OrgGeogebraCommonKernelKernel *kernel, jdouble coeff, NSString *vars) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelArithmeticExpressionValue_withJavaLangStringBuilder_(OrgGeogebraCommonKernelArithmeticTerm *self, id<OrgGeogebraCommonKernelArithmeticExpressionValue> coeff, JavaLangStringBuilder *vars);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticTerm *new_OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelArithmeticExpressionValue_withJavaLangStringBuilder_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> coeff, JavaLangStringBuilder *vars) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelArithmeticTerm_withOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelArithmeticTerm *self, OrgGeogebraCommonKernelArithmeticTerm *t, OrgGeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticTerm *new_OrgGeogebraCommonKernelArithmeticTerm_initWithOrgGeogebraCommonKernelArithmeticTerm_withOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelArithmeticTerm *t, OrgGeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmeticTerm)

#endif // _OrgGeogebraCommonKernelArithmeticTerm_H_
