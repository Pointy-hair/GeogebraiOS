//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/arithmetic/MyBoolean.java
//

#ifndef _OrgGeogebraCommonKernelArithmeticMyBoolean_H_
#define _OrgGeogebraCommonKernelArithmeticMyBoolean_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/arithmetic/BooleanValue.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"

@class JavaUtilHashSet;
@class OrgGeogebraCommonKernelArithmeticExpressionNode;
@class OrgGeogebraCommonKernelArithmeticMyDouble;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;

@interface OrgGeogebraCommonKernelArithmeticMyBoolean : OrgGeogebraCommonKernelArithmeticValidExpression < OrgGeogebraCommonKernelArithmeticBooleanValue, OrgGeogebraCommonKernelArithmeticNumberValue >

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                          withBoolean:(jboolean)value;

- (jboolean)containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1;

- (jboolean)getBoolean;

- (jdouble)getDouble;

- (OrgGeogebraCommonKernelKernel *)getKernel;

- (OrgGeogebraCommonKernelArithmeticMyBoolean *)getMyBoolean;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (JavaUtilHashSet *)getVariables;

- (jboolean)isAngle;

- (jboolean)isConstant;

- (jboolean)isDefined;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (void)resolveVariables;

- (void)setValueWithBoolean:(jboolean)value;

- (OrgGeogebraCommonKernelGeosGeoElement *)toGeoElement;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmeticMyBoolean)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyBoolean_initWithOrgGeogebraCommonKernelKernel_withBoolean_(OrgGeogebraCommonKernelArithmeticMyBoolean *self, OrgGeogebraCommonKernelKernel *kernel, jboolean value);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticMyBoolean *new_OrgGeogebraCommonKernelArithmeticMyBoolean_initWithOrgGeogebraCommonKernelKernel_withBoolean_(OrgGeogebraCommonKernelKernel *kernel, jboolean value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmeticMyBoolean)

#endif // _OrgGeogebraCommonKernelArithmeticMyBoolean_H_
