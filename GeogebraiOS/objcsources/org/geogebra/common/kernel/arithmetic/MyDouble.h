//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/arithmetic/MyDouble.java
//

#ifndef _OrgGeogebraCommonKernelArithmeticMyDouble_H_
#define _OrgGeogebraCommonKernelArithmeticMyDouble_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"

@class JavaMathBigDecimal;
@class JavaUtilHashSet;
@class OrgGeogebraCommonKernelArithmeticExpressionNode;
@class OrgGeogebraCommonKernelArithmeticFunctionVariable;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonMainLocalization;
@protocol OrgGeogebraCommonKernelArithmeticEvaluatable;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;
@protocol OrgGeogebraCommonKernelArithmeticVectorValue;

@interface OrgGeogebraCommonKernelArithmeticMyDouble : OrgGeogebraCommonKernelArithmeticValidExpression < OrgGeogebraCommonKernelArithmeticNumberValue, JavaLangComparable > {
 @public
  OrgGeogebraCommonKernelKernel *kernel_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                           withDouble:(jdouble)x;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                         withNSString:(NSString *)power;

- (instancetype)initWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)d;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)abs;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)acos;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)acosh;

- (void)addWithDouble:(jdouble)a;

+ (void)addWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)a
        withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
           withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)applyWithOrgGeogebraCommonKernelArithmeticEvaluatable:(id<OrgGeogebraCommonKernelArithmeticEvaluatable>)lt;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)asin;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)asinh;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)atan;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)atan2WithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)y;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)atanh;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)betaWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)lt;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)betaIncompleteWithOrgGeogebraCommonKernelArithmeticVectorValue:(id<OrgGeogebraCommonKernelArithmeticVectorValue>)lt;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)betaIncompleteRegularizedWithOrgGeogebraCommonKernelArithmeticVectorValue:(id<OrgGeogebraCommonKernelArithmeticVectorValue>)lt;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)cbrt;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)ceil;

- (jint)compareToWithId:(id)arg0;

- (jboolean)containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)cos;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)cosh;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)cosineIntegral;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)cot;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)coth;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)csc;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)csch;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)derivativeWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv
                                                                                      withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel0;

+ (void)divWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)a
           withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)b
           withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c;

- (jboolean)isEqual:(id)d;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)erf;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)exp;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)expIntegral;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)factorial;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)floor;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)fractionalPart;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)gamma;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)gammaIncompleteWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)lt;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)gammaIncompleteRegularizedWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)lt;

- (jdouble)getDouble;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (JavaUtilHashSet *)getVariables;

- (NSUInteger)hash;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)integralWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv
                                                                                    withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel0;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)inverf;

- (jboolean)isAngle;

- (jboolean)isConstant;

- (jboolean)isDefined;

+ (jboolean)isFiniteWithDouble:(jdouble)d;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)log;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)logWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)base;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)log10;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)log2;

+ (void)multWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)a
                                               withDouble:(jdouble)b
            withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c;

+ (void)multWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)a
         withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
            withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c;

+ (jdouble)parseDoubleWithOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)app
                                               withNSString:(NSString *)str;

+ (jdouble)parsePercentageWithOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)app
                                                   withNSString:(NSString *)str;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)polygammaWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)order;

+ (jdouble)powWithDouble:(jdouble)a
              withDouble:(jdouble)b;

+ (void)powWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)a
           withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)b
           withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c;

+ (void)powDoubleSgnChangeWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)a
                          withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)b
                          withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)psi;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)random;

- (void)resolveVariables;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)round;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)roundWithDouble:(jdouble)digits;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)sec;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)sech;

- (void)setWithDouble:(jdouble)x;

- (void)setAngle;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)sgn;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)sin;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)sineIntegral;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)sinh;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)sqrt;

+ (void)subWithOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)a
        withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b
           withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)tan;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)tanh;

- (OrgGeogebraCommonKernelGeosGeoElement *)toGeoElement;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

+ (NSString *)toStringWithJavaMathBigDecimal:(JavaMathBigDecimal *)bd;

+ (NSString *)toStringWithDouble:(jdouble)x;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)wrap;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)zeta;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmeticMyDouble)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticMyDouble, kernel_, OrgGeogebraCommonKernelKernel *)

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelArithmeticMyDouble_LARGEST_INTEGER_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelArithmeticMyDouble, LARGEST_INTEGER_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonKernelArithmeticMyDouble, LARGEST_INTEGER_, jdouble)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelArithmeticMyDouble *self, OrgGeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticMyDouble *new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *self, OrgGeogebraCommonKernelKernel *kernel, jdouble x);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticMyDouble *new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(OrgGeogebraCommonKernelKernel *kernel, jdouble x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *self, OrgGeogebraCommonKernelArithmeticMyDouble *d);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticMyDouble *new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelArithmeticMyDouble *self, OrgGeogebraCommonKernelKernel *kernel, NSString *power);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticMyDouble *new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelKernel *kernel, NSString *power) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_addWithOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_subWithOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_multWithOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b, OrgGeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_multWithOrgGeogebraCommonKernelArithmeticMyDouble_withDouble_withOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *a, jdouble b, OrgGeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_divWithOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *a, OrgGeogebraCommonKernelArithmeticMyDouble *b, OrgGeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_powWithOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *a, OrgGeogebraCommonKernelArithmeticMyDouble *b, OrgGeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelArithmeticMyDouble_powWithDouble_withDouble_(jdouble a, jdouble b);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyDouble_powDoubleSgnChangeWithOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticMyDouble_withOrgGeogebraCommonKernelArithmeticMyDouble_(OrgGeogebraCommonKernelArithmeticMyDouble *a, OrgGeogebraCommonKernelArithmeticMyDouble *b, OrgGeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelArithmeticMyDouble_parsePercentageWithOrgGeogebraCommonMainLocalization_withNSString_(OrgGeogebraCommonMainLocalization *app, NSString *str);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonKernelArithmeticMyDouble_parseDoubleWithOrgGeogebraCommonMainLocalization_withNSString_(OrgGeogebraCommonMainLocalization *app, NSString *str);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonKernelArithmeticMyDouble_isFiniteWithDouble_(jdouble d);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonKernelArithmeticMyDouble_toStringWithDouble_(jdouble x);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonKernelArithmeticMyDouble_toStringWithJavaMathBigDecimal_(JavaMathBigDecimal *bd);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmeticMyDouble)

#endif // _OrgGeogebraCommonKernelArithmeticMyDouble_H_
