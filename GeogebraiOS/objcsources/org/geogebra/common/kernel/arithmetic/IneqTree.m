//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/arithmetic/IneqTree.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/util/Set.h"
#include "org/geogebra/common/kernel/arithmetic/IneqTree.h"
#include "org/geogebra/common/kernel/arithmetic/Inequality.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/plugin/Operation.h"

@interface OrgGeogebraCommonKernelArithmeticIneqTree () {
 @public
  OrgGeogebraCommonKernelArithmeticIneqTree *left_;
  OrgGeogebraCommonKernelArithmeticIneqTree *right_;
  OrgGeogebraCommonKernelArithmeticInequality *ineq_;
  OrgGeogebraCommonPluginOperationEnum *operation_;
  jint size_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticIneqTree, left_, OrgGeogebraCommonKernelArithmeticIneqTree *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticIneqTree, right_, OrgGeogebraCommonKernelArithmeticIneqTree *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticIneqTree, ineq_, OrgGeogebraCommonKernelArithmeticInequality *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticIneqTree, operation_, OrgGeogebraCommonPluginOperationEnum *)

@implementation OrgGeogebraCommonKernelArithmeticIneqTree

- (void)setRightWithOrgGeogebraCommonKernelArithmeticIneqTree:(OrgGeogebraCommonKernelArithmeticIneqTree *)right {
  OrgGeogebraCommonKernelArithmeticIneqTree_set_right_(self, right);
}

- (OrgGeogebraCommonKernelArithmeticIneqTree *)getRight {
  return right_;
}

- (void)setLeftWithOrgGeogebraCommonKernelArithmeticIneqTree:(OrgGeogebraCommonKernelArithmeticIneqTree *)left {
  OrgGeogebraCommonKernelArithmeticIneqTree_set_left_(self, left);
}

- (OrgGeogebraCommonKernelArithmeticIneqTree *)getLeft {
  return left_;
}

- (void)setOperationWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation {
  OrgGeogebraCommonKernelArithmeticIneqTree_set_operation_(self, operation);
}

- (OrgGeogebraCommonPluginOperationEnum *)getOperation {
  return operation_;
}

- (void)setIneqWithOrgGeogebraCommonKernelArithmeticInequality:(OrgGeogebraCommonKernelArithmeticInequality *)ineq {
  OrgGeogebraCommonKernelArithmeticIneqTree_set_ineq_(self, ineq);
}

- (OrgGeogebraCommonKernelArithmeticInequality *)getIneq {
  return ineq_;
}

- (jboolean)updateCoef {
  if (ineq_ != nil) {
    [ineq_ updateCoef];
    return [ineq_ getType] != OrgGeogebraCommonKernelArithmeticInequality_IneqTypeEnum_get_INEQUALITY_INVALID();
  }
  if (left_ == nil && right_ == nil) return NO;
  jboolean b = YES;
  if (left_ != nil) b &= [left_ updateCoef];
  if (right_ != nil) b &= [right_ updateCoef];
  return b;
}

- (jint)getSize {
  return size_;
}

- (OrgGeogebraCommonKernelArithmeticInequality *)getWithInt:(jint)i {
  if (ineq_ != nil) return ineq_;
  if (i < [((OrgGeogebraCommonKernelArithmeticIneqTree *) nil_chk(left_)) getSize]) return [left_ getWithInt:i];
  return [((OrgGeogebraCommonKernelArithmeticIneqTree *) nil_chk(right_)) getWithInt:i - [left_ getSize]];
}

- (void)recomputeSize {
  if (ineq_ != nil) {
    size_ = 1;
  }
  else size_ = 0;
  if (left_ != nil) {
    [left_ recomputeSize];
    size_ += left_->size_;
  }
  if (right_ != nil) {
    [right_ recomputeSize];
    size_ += right_->size_;
  }
}

- (void)getZerosWithJavaUtilSet:(id<JavaUtilSet>)zeros {
  if (ineq_ != nil) {
    IOSObjectArray *zeroPoints = [ineq_ getZeros];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(zeroPoints))->size_; i++) {
      [((id<JavaUtilSet>) nil_chk(zeros)) addWithId:JavaLangDouble_valueOfWithDouble_([((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(zeroPoints, i))) getX])];
    }
  }
  if (left_ != nil) {
    [left_ getZerosWithJavaUtilSet:zeros];
  }
  if (right_ != nil) {
    [right_ getZerosWithJavaUtilSet:zeros];
  }
}

- (instancetype)init {
  OrgGeogebraCommonKernelArithmeticIneqTree_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(left_);
  RELEASE_(right_);
  RELEASE_(ineq_);
  RELEASE_(operation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setRightWithOrgGeogebraCommonKernelArithmeticIneqTree:", "setRight", "V", 0x1, NULL, NULL },
    { "getRight", NULL, "Lorg.geogebra.common.kernel.arithmetic.IneqTree;", 0x1, NULL, NULL },
    { "setLeftWithOrgGeogebraCommonKernelArithmeticIneqTree:", "setLeft", "V", 0x1, NULL, NULL },
    { "getLeft", NULL, "Lorg.geogebra.common.kernel.arithmetic.IneqTree;", 0x1, NULL, NULL },
    { "setOperationWithOrgGeogebraCommonPluginOperationEnum:", "setOperation", "V", 0x1, NULL, NULL },
    { "getOperation", NULL, "Lorg.geogebra.common.plugin.Operation;", 0x1, NULL, NULL },
    { "setIneqWithOrgGeogebraCommonKernelArithmeticInequality:", "setIneq", "V", 0x1, NULL, NULL },
    { "getIneq", NULL, "Lorg.geogebra.common.kernel.arithmetic.Inequality;", 0x1, NULL, NULL },
    { "updateCoef", NULL, "Z", 0x1, NULL, NULL },
    { "getSize", NULL, "I", 0x1, NULL, NULL },
    { "getWithInt:", "get", "Lorg.geogebra.common.kernel.arithmetic.Inequality;", 0x1, NULL, NULL },
    { "recomputeSize", NULL, "V", 0x1, NULL, NULL },
    { "getZerosWithJavaUtilSet:", "getZeros", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "left_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.IneqTree;", NULL, NULL,  },
    { "right_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.IneqTree;", NULL, NULL,  },
    { "ineq_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Inequality;", NULL, NULL,  },
    { "operation_", NULL, 0x2, "Lorg.geogebra.common.plugin.Operation;", NULL, NULL,  },
    { "size_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelArithmeticIneqTree = { 2, "IneqTree", "org.geogebra.common.kernel.arithmetic", NULL, 0x1, 14, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelArithmeticIneqTree;
}

@end

void OrgGeogebraCommonKernelArithmeticIneqTree_init(OrgGeogebraCommonKernelArithmeticIneqTree *self) {
  NSObject_init(self);
  OrgGeogebraCommonKernelArithmeticIneqTree_set_operation_(self, OrgGeogebraCommonPluginOperationEnum_get_NO_OPERATION());
}

OrgGeogebraCommonKernelArithmeticIneqTree *new_OrgGeogebraCommonKernelArithmeticIneqTree_init() {
  OrgGeogebraCommonKernelArithmeticIneqTree *self = [OrgGeogebraCommonKernelArithmeticIneqTree alloc];
  OrgGeogebraCommonKernelArithmeticIneqTree_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelArithmeticIneqTree)
