//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/arithmetic/ExpressionNode.java
//

#ifndef _OrgGeogebraCommonKernelArithmeticExpressionNode_H_
#define _OrgGeogebraCommonKernelArithmeticExpressionNode_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "org/geogebra/common/kernel/arithmetic/ReplaceChildrenByValues.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"

@class IOSObjectArray;
@class JavaLangDouble;
@class JavaUtilArrayList;
@class JavaUtilHashSet;
@class OrgGeogebraCommonKernelArithmeticCommand;
@class OrgGeogebraCommonKernelArithmeticEquation;
@class OrgGeogebraCommonKernelArithmeticFunctionVariable;
@class OrgGeogebraCommonKernelArithmeticPolynomial;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoFunction;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonPluginOperationEnum;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;
@protocol OrgGeogebraCommonKernelArithmeticInspecting;
@protocol OrgGeogebraCommonKernelArithmeticTraversing;

@interface OrgGeogebraCommonKernelArithmeticExpressionNode : OrgGeogebraCommonKernelArithmeticValidExpression < OrgGeogebraCommonKernelArithmeticExpressionNodeConstants, OrgGeogebraCommonKernelArithmeticReplaceChildrenByValues > {
 @public
  jboolean holdsLaTeXtext_;
  jboolean leaf_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgGeogebraCommonKernelArithmeticExpressionNode:(OrgGeogebraCommonKernelArithmeticExpressionNode *)node;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel2
                                           withDouble:(jdouble)d;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)leaf;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)left
             withOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)right;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)abs;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)and__WithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)applyWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)applyWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation2
                                              withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)arg;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)atan;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)betaWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)betaRegularizedWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v1
                                                                    withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelGeosGeoFunction *)buildFunctionWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)cbrt;

+ (jboolean)chainedBooleanOpWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)op;

- (jboolean)containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev;

- (jboolean)containsCasEvaluableFunction;

- (jboolean)containsFreeFunctionVariableWithNSString:(NSString *)name;

- (jboolean)containsGeoFunctionNVar;

- (jboolean)containsMyStringBuffer;

+ (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)copy__WithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev
                                                                                 withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel OBJC_METHOD_FAMILY_NONE;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)cos;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)cosec;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)cosech;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)cosh;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)cot;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)coth;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)derivativeWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv
                                                                                   withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)divideWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)divideWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)erf;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)evaluateWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (jdouble)evaluateDouble;

- (jboolean)evaluatesTo3DVector;

- (jboolean)evaluatesToList;

- (jboolean)evaluatesToNonComplex2DVector;

- (jboolean)evaluatesToNumberWithBoolean:(jboolean)def;

- (jboolean)evaluatesToText;

- (jboolean)evaluatesToVectorNotPoint;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)exp;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)factorial;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)gamma;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)gammaIncompleteWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)gammaIncompleteReverseArgsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (NSString *)getCASstringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl
                                                        withBoolean:(jboolean)symbolic;

- (JavaLangDouble *)getCoefficientWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)getCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1;

- (void)getFractionWithOrgGeogebraCommonKernelArithmeticExpressionValueArray:(IOSObjectArray *)parts
                                                                 withBoolean:(jboolean)expandPlus;

- (IOSObjectArray *)getGeoElementVariables;

- (OrgGeogebraCommonKernelKernel *)getKernel;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getLeft;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)getLeftTree;

- (OrgGeogebraCommonPluginOperationEnum *)getOperation;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getRight;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)getRightTree;

- (OrgGeogebraCommonKernelGeosGeoElement *)getSingleGeoElement;

- (OrgGeogebraCommonKernelArithmeticCommand *)getTopLevelCommand;

- (NSString *)getTreeClass;

- (JavaUtilHashSet *)getUnconditionalVars;

- (JavaUtilHashSet *)getVariables;

- (jboolean)hasBrackets;

- (jboolean)hasCoords;

- (jboolean)hasOperations;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)ifElseWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ifBranch
                                                           withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)elseBranch;

- (jboolean)includesDivisionByWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)val;

- (jboolean)includesNonContinuousIntegral;

- (jboolean)inspectWithOrgGeogebraCommonKernelArithmeticInspecting:(id<OrgGeogebraCommonKernelArithmeticInspecting>)t;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)integralWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fv
                                                                                 withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (jboolean)isConditional;

- (jboolean)isConditionalDeep;

- (jboolean)isConditionalOldFashion;

- (jboolean)isConstant;

+ (jboolean)isEqualWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev1
                   withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev2;

+ (jboolean)isEqualStringWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev
                                                                   withDouble:(jdouble)val
                                                                  withBoolean:(jboolean)symbolic;

- (jboolean)isExpressionNode;

- (jboolean)isForcedFunction;

- (jboolean)isForcedPoint;

- (jboolean)isForcedVector;

- (jboolean)isImaginaryUnit;

- (jboolean)isLeaf;

+ (jboolean)isMultiplyOrDivideWithOrgGeogebraCommonKernelArithmeticExpressionNode:(OrgGeogebraCommonKernelArithmeticExpressionNode *)exp;

- (jboolean)isNumberValue;

- (jboolean)isSingleGeoElement;

- (jboolean)isSingleVariable;

- (jboolean)isTopLevelCommand;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)lessThanWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)lessThanWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)lessThanEqualWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)ln;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)multiplyWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)multiplyWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)multiplyRWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)multiplyRWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

+ (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)multiplySpecialWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ret
                                                                       withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)f
                                                                                          withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                                                                                                withBoolean:(jboolean)giacParsing;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)negation;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)nrootWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)n;

+ (NSString *)operationToStringWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)left
                               withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)right
                                           withOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)operation
                                                                       withNSString:(NSString *)leftStr
                                                                       withNSString:(NSString *)rightStr
                                                                        withBoolean:(jboolean)valueForm
                                          withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl
                                                  withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

+ (jint)opIDWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)plusWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)plusWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)plusRWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)polygammaWithDouble:(jdouble)n;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)powerWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)powerWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)powerRWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)reciprocate;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)replaceWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)oldObj
                                                               withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)newObj;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)replaceCasCommands;

- (void)replaceChildrenByValuesWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)replacePowersRootsWithBoolean:(jboolean)toRoot
                                  withInt:(jint)maxRoot;

- (jint)replaceVariablesWithNSString:(NSString *)varName
withOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)fVar;

- (void)resolveVariables;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)reverseSign;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)reverseSign2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)sec;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)sech;

- (void)setBracketsWithBoolean:(jboolean)brackets;

- (void)setForceFunction;

- (void)setForcePoint;

- (void)setForceVector;

- (void)setHoldsLaTeXtextWithBoolean:(jboolean)flag;

- (void)setLeftWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)l;

- (void)setOperationWithOrgGeogebraCommonPluginOperationEnum:(OrgGeogebraCommonPluginOperationEnum *)op;

- (void)setRightWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)r;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)sgn;

- (jboolean)shouldEvaluateToGeoVector;

- (void)simplifyConstantIntegers;

- (void)simplifyLeafs;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)sin;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)sinh;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)sqrt;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)square;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)subtractWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)subtractWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)v2;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)subtractRWithDouble:(jdouble)d;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)tan;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)tanh;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)traverseWithOrgGeogebraCommonKernelArithmeticTraversing:(id<OrgGeogebraCommonKernelArithmeticTraversing>)t;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)unwrap;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)wrap;

#pragma mark Protected

- (OrgGeogebraCommonKernelArithmeticPolynomial *)makePolynomialTreeWithOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ;

- (jint)replaceXYZnodesWithOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)xVar
                       withOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)yVar
                       withOrgGeogebraCommonKernelArithmeticFunctionVariable:(OrgGeogebraCommonKernelArithmeticFunctionVariable *)zVar
                                                       withJavaUtilArrayList:(JavaUtilArrayList *)undecided;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmeticExpressionNode)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticExpressionNode_init(OrgGeogebraCommonKernelArithmeticExpressionNode *self);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticExpressionNode *new_OrgGeogebraCommonKernelArithmeticExpressionNode_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelArithmeticExpressionNode *self, OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> left, OrgGeogebraCommonPluginOperationEnum *operation, id<OrgGeogebraCommonKernelArithmeticExpressionValue> right);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticExpressionNode *new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> left, OrgGeogebraCommonPluginOperationEnum *operation, id<OrgGeogebraCommonKernelArithmeticExpressionValue> right) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelArithmeticExpressionNode *self, OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> leaf);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticExpressionNode *new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> leaf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_(OrgGeogebraCommonKernelArithmeticExpressionNode *self, OrgGeogebraCommonKernelArithmeticExpressionNode *node);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticExpressionNode *new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_(OrgGeogebraCommonKernelArithmeticExpressionNode *node) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(OrgGeogebraCommonKernelArithmeticExpressionNode *self, OrgGeogebraCommonKernelKernel *kernel2, jdouble d);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticExpressionNode *new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(OrgGeogebraCommonKernelKernel *kernel2, jdouble d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<OrgGeogebraCommonKernelArithmeticExpressionValue> OrgGeogebraCommonKernelArithmeticExpressionNode_copy__WithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelKernel_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> ev, OrgGeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonKernelArithmeticExpressionNode_operationToStringWithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withNSString_withNSString_withBoolean_withOrgGeogebraCommonKernelStringTemplate_withOrgGeogebraCommonKernelKernel_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> left, id<OrgGeogebraCommonKernelArithmeticExpressionValue> right, OrgGeogebraCommonPluginOperationEnum *operation, NSString *leftStr, NSString *rightStr, jboolean valueForm, OrgGeogebraCommonKernelStringTemplate *tpl, OrgGeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonKernelArithmeticExpressionNode_isMultiplyOrDivideWithOrgGeogebraCommonKernelArithmeticExpressionNode_(OrgGeogebraCommonKernelArithmeticExpressionNode *exp);

FOUNDATION_EXPORT jint OrgGeogebraCommonKernelArithmeticExpressionNode_opIDWithOrgGeogebraCommonKernelArithmeticExpressionValue_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> ev);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonKernelArithmeticExpressionNode_isEqualWithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> ev1, id<OrgGeogebraCommonKernelArithmeticExpressionValue> ev2);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonKernelArithmeticExpressionNode_isEqualStringWithOrgGeogebraCommonKernelArithmeticExpressionValue_withDouble_withBoolean_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> ev, jdouble val, jboolean symbolic);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonKernelArithmeticExpressionNode_chainedBooleanOpWithOrgGeogebraCommonPluginOperationEnum_(OrgGeogebraCommonPluginOperationEnum *op);

FOUNDATION_EXPORT id<OrgGeogebraCommonKernelArithmeticExpressionValue> OrgGeogebraCommonKernelArithmeticExpressionNode_multiplySpecialWithOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelKernel_withBoolean_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> ret, id<OrgGeogebraCommonKernelArithmeticExpressionValue> f, OrgGeogebraCommonKernelKernel *kernel, jboolean giacParsing);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmeticExpressionNode)

#endif // _OrgGeogebraCommonKernelArithmeticExpressionNode_H_
