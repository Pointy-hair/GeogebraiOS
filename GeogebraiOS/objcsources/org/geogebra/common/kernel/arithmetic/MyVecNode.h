//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/arithmetic/MyVecNode.java
//

#ifndef _OrgGeogebraCommonKernelArithmeticMyVecNode_H_
#define _OrgGeogebraCommonKernelArithmeticMyVecNode_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/arithmetic/MyVecNDNode.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "org/geogebra/common/kernel/arithmetic/VectorValue.h"

@class IOSDoubleArray;
@class JavaUtilHashSet;
@class OrgGeogebraCommonKernelArithmeticExpressionNode;
@class OrgGeogebraCommonKernelGeosGeoVec2D;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;
@protocol OrgGeogebraCommonKernelArithmeticInspecting;
@protocol OrgGeogebraCommonKernelArithmeticTraversing;

@interface OrgGeogebraCommonKernelArithmeticMyVecNode : OrgGeogebraCommonKernelArithmeticValidExpression < OrgGeogebraCommonKernelArithmeticVectorValue, OrgGeogebraCommonKernelArithmeticMyVecNDNode > {
 @public
  id<OrgGeogebraCommonKernelArithmeticExpressionValue> x_;
  id<OrgGeogebraCommonKernelArithmeticExpressionValue> y_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)x
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)y;

- (jboolean)containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1;

- (jboolean)evaluatesToNonComplex2DVector;

- (jboolean)evaluatesToVectorNotPoint;

- (IOSDoubleArray *)getCoords;

- (jint)getDimension;

- (OrgGeogebraCommonKernelKernel *)getKernel;

- (jint)getMode;

- (JavaUtilHashSet *)getVariables;

- (OrgGeogebraCommonKernelGeosGeoVec2D *)getVector;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getX;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getY;

- (jboolean)hasCoords;

- (jboolean)hasPolarCoords;

- (jboolean)inspectWithOrgGeogebraCommonKernelArithmeticInspecting:(id<OrgGeogebraCommonKernelArithmeticInspecting>)t;

- (jboolean)isCASVector;

- (jboolean)isConstant;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (void)resolveVariables;

- (void)setCASVector;

- (void)setModeWithInt:(jint)mode;

- (void)setPolarCoordsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)r
                      withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)phi;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)traverseWithOrgGeogebraCommonKernelArithmeticTraversing:(id<OrgGeogebraCommonKernelArithmeticTraversing>)t;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmeticMyVecNode)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticMyVecNode, x_, id<OrgGeogebraCommonKernelArithmeticExpressionValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelArithmeticMyVecNode, y_, id<OrgGeogebraCommonKernelArithmeticExpressionValue>)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyVecNode_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelArithmeticMyVecNode *self, OrgGeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticMyVecNode *new_OrgGeogebraCommonKernelArithmeticMyVecNode_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmeticMyVecNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelArithmeticMyVecNode *self, OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> x, id<OrgGeogebraCommonKernelArithmeticExpressionValue> y);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmeticMyVecNode *new_OrgGeogebraCommonKernelArithmeticMyVecNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> x, id<OrgGeogebraCommonKernelArithmeticExpressionValue> y) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmeticMyVecNode)

#endif // _OrgGeogebraCommonKernelArithmeticMyVecNode_H_
