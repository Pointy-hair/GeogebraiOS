//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/arithmetic3D/MyVec3DNode.java
//

#ifndef _OrgGeogebraCommonKernelArithmetic3DMyVec3DNode_H_
#define _OrgGeogebraCommonKernelArithmetic3DMyVec3DNode_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/arithmetic/MyVecNDNode.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "org/geogebra/common/kernel/arithmetic3D/Vector3DValue.h"

@class IOSDoubleArray;
@class JavaUtilHashSet;
@class OrgGeogebraCommonKernelArithmeticExpressionNode;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol OrgGeogebraCommonKernelArithmeticExpressionValue;
@protocol OrgGeogebraCommonKernelArithmeticInspecting;
@protocol OrgGeogebraCommonKernelArithmeticTraversing;
@protocol OrgGeogebraCommonKernelKernelNDGeo3DVec;

@interface OrgGeogebraCommonKernelArithmetic3DMyVec3DNode : OrgGeogebraCommonKernelArithmeticValidExpression < OrgGeogebraCommonKernelArithmetic3DVector3DValue, OrgGeogebraCommonKernelArithmeticMyVecNDNode >

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)x
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)y
 withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)z;

- (jboolean)containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1;

- (jboolean)evaluatesTo3DVector;

- (jboolean)evaluatesToVectorNotPoint;

- (IOSDoubleArray *)getCoords;

- (jint)getDimension;

- (OrgGeogebraCommonKernelKernel *)getKernel;

- (jint)getMode;

- (IOSDoubleArray *)getPointAsDouble;

- (JavaUtilHashSet *)getVariables;

- (id<OrgGeogebraCommonKernelKernelNDGeo3DVec>)getVector;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getX;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getY;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)getZ;

- (jboolean)hasCoords;

- (jboolean)inspectWithOrgGeogebraCommonKernelArithmeticInspecting:(id<OrgGeogebraCommonKernelArithmeticInspecting>)t;

- (jboolean)isCASVector;

- (jboolean)isConstant;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (jboolean)isPoint3DValue;

- (void)resolveVariables;

- (void)setCASVector;

- (void)setSphericalPolarCoordsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)r
                               withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)theta
                               withOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)phi;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)traverseWithOrgGeogebraCommonKernelArithmeticTraversing:(id<OrgGeogebraCommonKernelArithmeticTraversing>)t;

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelArithmetic3DMyVec3DNode)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmetic3DMyVec3DNode_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelArithmetic3DMyVec3DNode *self, OrgGeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmetic3DMyVec3DNode *new_OrgGeogebraCommonKernelArithmetic3DMyVec3DNode_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelArithmetic3DMyVec3DNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelArithmetic3DMyVec3DNode *self, OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> x, id<OrgGeogebraCommonKernelArithmeticExpressionValue> y, id<OrgGeogebraCommonKernelArithmeticExpressionValue> z);

FOUNDATION_EXPORT OrgGeogebraCommonKernelArithmetic3DMyVec3DNode *new_OrgGeogebraCommonKernelArithmetic3DMyVec3DNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonKernelArithmeticExpressionValue_(OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticExpressionValue> x, id<OrgGeogebraCommonKernelArithmeticExpressionValue> y, id<OrgGeogebraCommonKernelArithmeticExpressionValue> z) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelArithmetic3DMyVec3DNode)

#endif // _OrgGeogebraCommonKernelArithmetic3DMyVec3DNode_H_
