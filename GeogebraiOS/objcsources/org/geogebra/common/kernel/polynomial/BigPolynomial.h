//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/polynomial/BigPolynomial.java
//

#ifndef _OrgGeogebraCommonKernelPolynomialBigPolynomial_H_
#define _OrgGeogebraCommonKernelPolynomialBigPolynomial_H_

#include "J2ObjC_header.h"

@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaMathBigDecimal;
@class JavaMathMathContext;
@class OrgGeogebraCommonKernelPolynomialBigComplex;

@interface OrgGeogebraCommonKernelPolynomialBigPolynomial : NSObject < NSCopying > {
 @public
  IOSObjectArray *coefficients_;
  NSString *representation_;
  JavaMathMathContext *mc_;
  JavaMathBigDecimal *plusEps_;
  JavaMathBigDecimal *minusEps_;
}

#pragma mark Public

- (instancetype)initWithJavaMathBigDecimalArray:(IOSObjectArray *)coeff
                         withJavaMathBigDecimal:(JavaMathBigDecimal *)eps
                        withJavaMathMathContext:(JavaMathMathContext *)mc;

- (instancetype)initWithDouble:(jdouble)constant
                       withInt:(jint)precision;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)coeff
                            withInt:(jint)precision;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)coeff
            withJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigPolynomial *)addWithOrgGeogebraCommonKernelPolynomialBigPolynomial:(OrgGeogebraCommonKernelPolynomialBigPolynomial *)p;

- (id)clone;

- (OrgGeogebraCommonKernelPolynomialBigPolynomial *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)degree;

- (OrgGeogebraCommonKernelPolynomialBigPolynomial *)divideWithOrgGeogebraCommonKernelPolynomialBigPolynomial:(OrgGeogebraCommonKernelPolynomialBigPolynomial *)divisor;

- (JavaMathBigDecimal *)evalWithJavaMathBigDecimal:(JavaMathBigDecimal *)val;

- (jdouble)evalWithDouble:(jdouble)d;

- (JavaMathBigDecimal *)getCoeffWithInt:(jint)index;

- (jdouble)getCoeffDoubleWithInt:(jint)index;

- (IOSObjectArray *)getCoefficients;

- (IOSDoubleArray *)getCoefficientsDouble;

- (IOSDoubleArray *)getRealRootsDoubleWithInt:(jint)precision;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)getRootWithOrgGeogebraCommonKernelPolynomialBigComplexArray:(IOSObjectArray *)coeff
                                                             withOrgGeogebraCommonKernelPolynomialBigComplex:(OrgGeogebraCommonKernelPolynomialBigComplex *)start
                                                                                     withJavaMathMathContext:(JavaMathMathContext *)mc;

- (IOSObjectArray *)getRootsLaguerreWithJavaMathMathContext:(JavaMathMathContext *)mc;

- (jboolean)isZeroPolynomial;

- (OrgGeogebraCommonKernelPolynomialBigPolynomial *)multiplyWithOrgGeogebraCommonKernelPolynomialBigPolynomial:(OrgGeogebraCommonKernelPolynomialBigPolynomial *)p;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)rootPolishingWithOrgGeogebraCommonKernelPolynomialBigComplex:(OrgGeogebraCommonKernelPolynomialBigComplex *)x;

- (OrgGeogebraCommonKernelPolynomialBigPolynomial *)subtractWithOrgGeogebraCommonKernelPolynomialBigPolynomial:(OrgGeogebraCommonKernelPolynomialBigPolynomial *)p;

- (NSString *)description;

#pragma mark Protected

- (instancetype)initWithOrgGeogebraCommonKernelPolynomialBigPolynomial:(OrgGeogebraCommonKernelPolynomialBigPolynomial *)p
                                           withJavaMathBigDecimalArray:(IOSObjectArray *)coeff;

- (jboolean)smallerEpsWithJavaMathBigDecimal:(JavaMathBigDecimal *)d;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelPolynomialBigPolynomial)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelPolynomialBigPolynomial, coefficients_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelPolynomialBigPolynomial, representation_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelPolynomialBigPolynomial, mc_, JavaMathMathContext *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelPolynomialBigPolynomial, plusEps_, JavaMathBigDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelPolynomialBigPolynomial, minusEps_, JavaMathBigDecimal *)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithOrgGeogebraCommonKernelPolynomialBigPolynomial_withJavaMathBigDecimalArray_(OrgGeogebraCommonKernelPolynomialBigPolynomial *self, OrgGeogebraCommonKernelPolynomialBigPolynomial *p, IOSObjectArray *coeff);

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigPolynomial *new_OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithOrgGeogebraCommonKernelPolynomialBigPolynomial_withJavaMathBigDecimalArray_(OrgGeogebraCommonKernelPolynomialBigPolynomial *p, IOSObjectArray *coeff) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithJavaMathBigDecimalArray_withJavaMathBigDecimal_withJavaMathMathContext_(OrgGeogebraCommonKernelPolynomialBigPolynomial *self, IOSObjectArray *coeff, JavaMathBigDecimal *eps, JavaMathMathContext *mc);

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigPolynomial *new_OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithJavaMathBigDecimalArray_withJavaMathBigDecimal_withJavaMathMathContext_(IOSObjectArray *coeff, JavaMathBigDecimal *eps, JavaMathMathContext *mc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithDoubleArray_withJavaMathMathContext_(OrgGeogebraCommonKernelPolynomialBigPolynomial *self, IOSDoubleArray *coeff, JavaMathMathContext *mc);

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigPolynomial *new_OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithDoubleArray_withJavaMathMathContext_(IOSDoubleArray *coeff, JavaMathMathContext *mc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithDoubleArray_withInt_(OrgGeogebraCommonKernelPolynomialBigPolynomial *self, IOSDoubleArray *coeff, jint precision);

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigPolynomial *new_OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithDoubleArray_withInt_(IOSDoubleArray *coeff, jint precision) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithDouble_withInt_(OrgGeogebraCommonKernelPolynomialBigPolynomial *self, jdouble constant, jint precision);

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigPolynomial *new_OrgGeogebraCommonKernelPolynomialBigPolynomial_initWithDouble_withInt_(jdouble constant, jint precision) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelPolynomialBigPolynomial)

#endif // _OrgGeogebraCommonKernelPolynomialBigPolynomial_H_
