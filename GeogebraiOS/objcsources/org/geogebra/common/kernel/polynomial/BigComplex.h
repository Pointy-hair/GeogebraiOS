//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/polynomial/BigComplex.java
//

#ifndef _OrgGeogebraCommonKernelPolynomialBigComplex_H_
#define _OrgGeogebraCommonKernelPolynomialBigComplex_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaMathBigDecimal;
@class JavaMathMathContext;

@interface OrgGeogebraCommonKernelPolynomialBigComplex : NSObject {
 @public
  JavaMathBigDecimal *real_;
  JavaMathBigDecimal *imag_;
}

#pragma mark Public

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)real;

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)real
                    withJavaMathBigDecimal:(JavaMathBigDecimal *)imag;

- (JavaMathBigDecimal *)absWithJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)addWithOrgGeogebraCommonKernelPolynomialBigComplex:(OrgGeogebraCommonKernelPolynomialBigComplex *)b
                                                                            withJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)addWithJavaMathBigDecimal:(JavaMathBigDecimal *)d
                                                   withJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)divideWithOrgGeogebraCommonKernelPolynomialBigComplex:(OrgGeogebraCommonKernelPolynomialBigComplex *)b
                                                                               withJavaMathMathContext:(JavaMathMathContext *)mc;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)multiplyWithOrgGeogebraCommonKernelPolynomialBigComplex:(OrgGeogebraCommonKernelPolynomialBigComplex *)b
                                                                                 withJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)multiplyWithJavaMathBigDecimal:(JavaMathBigDecimal *)d
                                                        withJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)negate;

+ (JavaMathBigDecimal *)sqrtWithJavaMathBigDecimal:(JavaMathBigDecimal *)d
                           withJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)sqrtWithJavaMathMathContext:(JavaMathMathContext *)mc;

- (OrgGeogebraCommonKernelPolynomialBigComplex *)subtractWithOrgGeogebraCommonKernelPolynomialBigComplex:(OrgGeogebraCommonKernelPolynomialBigComplex *)b
                                                                                 withJavaMathMathContext:(JavaMathMathContext *)mc;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonKernelPolynomialBigComplex)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelPolynomialBigComplex, real_, JavaMathBigDecimal *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelPolynomialBigComplex, imag_, JavaMathBigDecimal *)

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigComplex *OrgGeogebraCommonKernelPolynomialBigComplex_ZERO_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelPolynomialBigComplex, ZERO_, OrgGeogebraCommonKernelPolynomialBigComplex *)

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigComplex *OrgGeogebraCommonKernelPolynomialBigComplex_ONE_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelPolynomialBigComplex, ONE_, OrgGeogebraCommonKernelPolynomialBigComplex *)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_(OrgGeogebraCommonKernelPolynomialBigComplex *self, JavaMathBigDecimal *real);

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigComplex *new_OrgGeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_(JavaMathBigDecimal *real) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_withJavaMathBigDecimal_(OrgGeogebraCommonKernelPolynomialBigComplex *self, JavaMathBigDecimal *real, JavaMathBigDecimal *imag);

FOUNDATION_EXPORT OrgGeogebraCommonKernelPolynomialBigComplex *new_OrgGeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_withJavaMathBigDecimal_(JavaMathBigDecimal *real, JavaMathBigDecimal *imag) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaMathBigDecimal *OrgGeogebraCommonKernelPolynomialBigComplex_sqrtWithJavaMathBigDecimal_withJavaMathMathContext_(JavaMathBigDecimal *d, JavaMathMathContext *mc);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelPolynomialBigComplex_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelPolynomialBigComplex)

#endif // _OrgGeogebraCommonKernelPolynomialBigComplex_H_
