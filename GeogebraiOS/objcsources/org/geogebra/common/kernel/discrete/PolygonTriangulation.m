//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/discrete/PolygonTriangulation.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/SortedSet.h"
#include "java/util/Stack.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/awt/GPoint2D.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/discrete/PolygonTriangulation.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/util/Unicode.h"

@class OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints;
@class OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum;
@class OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum;

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_DEBUG NO

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation () {
 @public
  id<JavaUtilComparator> nonSelfIntersectingPolygonPointComparator_;
  OrgGeogebraCommonKernelGeosGeoPolygon *polygon_;
  jint maxPointIndex_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *firstPoint_;
  JavaUtilArrayList *polygonPointsList_;
  JavaUtilArrayList *fansList_;
  IOSObjectArray *pointsArray_;
  IOSObjectArray *completeVertices_;
  IOSObjectArray *corners_;
}

- (void)setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point
                                                                     withInt:(jint)i;

- (void)setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point
                                                                withNSString:(NSString *)s
                                                                     withInt:(jint)i;

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point
                                                                                                                                 withDouble:(jdouble)x
                                                                                                                                 withDouble:(jdouble)y
                                                                                                                               withNSString:(NSString *)name
                                                                                                                                    withInt:(jint)nameId;

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment
                                                                      withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)pt;

- (void)setNonSelfIntersectingWithJavaUtilTreeSet:(JavaUtilTreeSet *)pointSet;

- (void)checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)a
                         withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)b
                                                                     withJavaUtilTreeSet:(JavaUtilTreeSet *)pointSet;

- (void)createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point;

+ (jdouble)getReverseOrientationWithDouble:(jdouble)orientation;

- (void)triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *)polygonPoints;

+ (jboolean)needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)seg1
                         withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)seg2;

+ (void)debugDiagonalWithNSString:(NSString *)s
withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p1
withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, nonSelfIntersectingPolygonPointComparator_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, polygon_, OrgGeogebraCommonKernelGeosGeoPolygon *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, firstPoint_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, polygonPointsList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, fansList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, pointsArray_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, completeVertices_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, corners_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation, DEBUG, jboolean)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point, jint i);

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point, NSString *s, jint i);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point, jdouble x, jdouble y, NSString *name, jint nameId);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *OrgGeogebraCommonKernelDiscretePolygonTriangulation_cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt);

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNonSelfIntersectingWithJavaUtilTreeSet_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, JavaUtilTreeSet *pointSet);

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withJavaUtilTreeSet_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *a, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *b, JavaUtilTreeSet *pointSet);

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point);

__attribute__((unused)) static jdouble OrgGeogebraCommonKernelDiscretePolygonTriangulation_getReverseOrientationWithDouble_(jdouble orientation);

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *polygonPoints);

__attribute__((unused)) static jboolean OrgGeogebraCommonKernelDiscretePolygonTriangulation_needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *seg1, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *seg2);

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(NSString *s, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *p1, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *p2);

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_serialVersionUID 1LL

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet : JavaUtilTreeSet

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$;

- (id)higherWithId:(id)e;

- (id)lowerWithId:(id)e;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_serialVersionUID 1LL

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException : JavaLangException {
 @public
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *type_;
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *)type;

- (NSString *)getMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException, type_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *type);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException)

typedef NS_ENUM(NSUInteger, OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_Type) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_Type_LEFT_POINT_INTERSECTION = 0,
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_Type_ZERO_SEGMENT = 1,
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_Type_DEAD_END = 2,
};

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum : JavaLangEnum < NSCopying >

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values();

+ (OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum)

FOUNDATION_EXPORT OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values_[];

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_LEFT_POINT_INTERSECTION OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_Type_LEFT_POINT_INTERSECTION]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum, LEFT_POINT_INTERSECTION)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_ZERO_SEGMENT OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_Type_ZERO_SEGMENT]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum, ZERO_SEGMENT)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_DEAD_END OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_Type_DEAD_END]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum, DEAD_END)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum)

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point () {
 @public
  OrgGeogebraCommonKernelDiscretePolygonTriangulation *this$0_;
  jdouble x_, y_;
  jint id__;
  NSString *name_;
  jdouble orientationToNext_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *prev_, *next_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *toRight_, *toLeft_;
  jboolean needsDiagonal_;
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
                                                                 withDouble:(jdouble)x
                                                                 withDouble:(jdouble)y
                                                                    withInt:(jint)id_;

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)clone;

- (NSString *)debugSegments;

- (void)removeSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment;

- (jboolean)addSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment;

- (void)removeSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment;

- (jboolean)addSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment;

- (jboolean)hasNoSegment;

- (jint)compareToWithId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2;

- (jint)compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2;

- (jint)compareToWithDouble:(jdouble)x1
                 withDouble:(jdouble)y1;

- (OrgGeogebraCommonAwtGPoint2D_Double *)toDouble;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point, this$0_, OrgGeogebraCommonKernelDiscretePolygonTriangulation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point, prev_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point, next_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point, toRight_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point, toLeft_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble x, jdouble y, jint id_);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble x, jdouble y, jint id_) NS_RETURNS_RETAINED;

__attribute__((unused)) static jint OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *p2);

__attribute__((unused)) static jint OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToWithDouble_withDouble_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *self, jdouble x1, jdouble y1);

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment () {
 @public
  OrgGeogebraCommonKernelDiscretePolygonTriangulation *this$0_;
  jdouble orientation_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint_, *rightPoint_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *above_, *below_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *next_;
  jint usable_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *running_;
  jdouble x_, y_, z_;
  jboolean equationNeedsUpdate__;
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$;

- (jboolean)isDummy;

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
                                                                 withDouble:(jdouble)orientation
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)leftPoint
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)rightPoint;

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)clone;

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)leftPoint
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)rightPoint;

- (void)setEquation;

- (void)equationNeedsUpdate;

- (NSString *)description;

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)getFirstPoint;

- (void)removeFromPoints;

- (jboolean)addToPoints;

- (jint)compareToWithId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)seg;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment, this$0_, OrgGeogebraCommonKernelDiscretePolygonTriangulation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment, leftPoint_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment, rightPoint_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment, above_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment, below_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment, next_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment, running_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble orientation, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble orientation, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint) NS_RETURNS_RETAINED;

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_serialVersionUID 1LL

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan () {
 @public
  jboolean isClockWise_;
  jint apex_;
  id<JavaUtilIterator> iterator_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan, iterator_, id<JavaUtilIterator>)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan, serialVersionUID, jlong)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_serialVersionUID 1LL

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints : JavaUtilTreeSet {
 @public
  jboolean needsDiagonals_;
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
                                                     withJavaUtilComparator:(id<JavaUtilComparator>)comparator;


@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withJavaUtilComparator_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, id<JavaUtilComparator> comparator);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withJavaUtilComparator_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

typedef NS_ENUM(NSUInteger, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Running) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Running_RIGHT = 0,
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Running_LEFT = 1,
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Running_STOP = 2,
};

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum : JavaLangEnum < NSCopying >

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values();

+ (OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum)

FOUNDATION_EXPORT OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values_[];

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_RIGHT OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_Running_RIGHT]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum, RIGHT)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_LEFT OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_Running_LEFT]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum, LEFT)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_STOP OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_Running_STOP]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum, STOP)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum)

typedef NS_ENUM(NSUInteger, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Chain) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Chain_BOTH = 0,
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Chain_BELOW = 1,
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Chain_ABOVE = 2,
};

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum : JavaLangEnum < NSCopying >

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values();

+ (OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum)

FOUNDATION_EXPORT OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values_[];

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_BOTH OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_Chain_BOTH]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum, BOTH)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_BELOW OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_Chain_BELOW]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum, BELOW)

#define OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_ABOVE OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values_[OrgGeogebraCommonKernelDiscretePolygonTriangulation_Chain_ABOVE]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum, ABOVE)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum)

@interface OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 : NSObject < JavaUtilComparator > {
 @public
  OrgGeogebraCommonKernelDiscretePolygonTriangulation *this$0_;
}

- (jint)compareWithId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p1
               withId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2;

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1, this$0_, OrgGeogebraCommonKernelDiscretePolygonTriangulation *)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation

+ (void)debugWithNSString:(NSString *)s {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(s);
}

+ (void)errorWithNSString:(NSString *)s {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(s);
}

- (instancetype)init {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_init(self);
  return self;
}

- (void)setPolygonWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)p {
  self->polygon_ = p;
}

- (void)clear {
  [((JavaUtilArrayList *) nil_chk(polygonPointsList_)) clear];
  [((JavaUtilArrayList *) nil_chk(fansList_)) clear];
  maxPointIndex_ = 0;
  firstPoint_ = nil;
  comparedSameOrientationSegment_ = nil;
}

- (void)setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point
                                                                     withInt:(jint)i {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withInt_(self, point, i);
}

- (void)setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point
                                                                withNSString:(NSString *)s
                                                                     withInt:(jint)i {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withNSString_withInt_(self, point, s, i);
}

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point
                                                                                                                                 withDouble:(jdouble)x
                                                                                                                                 withDouble:(jdouble)y
                                                                                                                               withNSString:(NSString *)name
                                                                                                                                    withInt:(jint)nameId {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, x, y, name, nameId);
}

- (jint)updatePoints {
  maxPointIndex_ = [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon_)) getPointsLength];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(self, [polygon_ getPointXWithInt:0], [polygon_ getPointYWithInt:0], 0);
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withInt_(self, point, 0);
  firstPoint_ = point;
  jint length = [polygon_ getPointsLength];
  for (jint i = 1; i < length; i++) {
    point = OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, [polygon_ getPointXWithInt:i], [polygon_ getPointYWithInt:i], nil, i);
  }
  if (corners_ != nil) {
    maxPointIndex_ += OrgGeogebraCommonKernelDiscretePolygonTriangulation_EXTRA_POINTS;
    point = OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, [polygon_ getPointXWithInt:0], [polygon_ getPointYWithInt:0], nil, 0);
    for (jint i = 0; i < OrgGeogebraCommonKernelDiscretePolygonTriangulation_CORNERS; i++) {
      point = OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, i))) getX], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, i))) getY], @"c", i);
    }
    point = OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, 0))) getX], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, 0))) getY], @"c", 0);
    for (jint i = OrgGeogebraCommonKernelDiscretePolygonTriangulation_CORNERS; i < OrgGeogebraCommonKernelDiscretePolygonTriangulation_CORNERS_ALL; i++) {
      point = OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, i))) getX], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, i))) getY], @"c", i);
    }
    point = OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_CORNERS))) getX], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_CORNERS))) getY], @"c", 4);
    point = OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(self, point, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, 0))) getX], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(corners_, 0))) getY], @"c", 0);
  }
  jint n = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point))->id__ + 1;
  if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(point->x_, firstPoint_->x_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(point->y_, firstPoint_->y_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    firstPoint_ = firstPoint_->next_;
    n--;
  }
  if (n < 3) {
    return n;
  }
  point->next_ = firstPoint_;
  ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(firstPoint_))->prev_ = point;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *prevPoint = firstPoint_;
  point = prevPoint->next_;
  prevPoint->orientationToNext_ = JavaLangMath_atan2WithDouble_withDouble_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point))->y_ - prevPoint->y_, point->x_ - prevPoint->x_);
  jint removedPoints = 0;
  for (jint i = 0; i < n && removedPoints < n - 1; i++) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *nextPoint = point->next_;
    point->orientationToNext_ = JavaLangMath_atan2WithDouble_withDouble_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPoint))->y_ - point->y_, nextPoint->x_ - point->x_);
    jdouble delta = point->orientationToNext_ - prevPoint->orientationToNext_;
    if (delta < 0) {
      delta += 2 * JavaLangMath_PI;
    }
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$D", prevPoint->name_, @" : ", (prevPoint->orientationToNext_ * 180 / JavaLangMath_PI)));
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$C$C$$D", prevPoint->name_, '/', point->name_, '/', nextPoint->name_, @" : ", (delta * 180 / JavaLangMath_PI)));
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_withDouble_(delta, OrgGeogebraCommonKernelDiscretePolygonTriangulation_ORIENTATION_DELTA)) {
      prevPoint->next_ = nextPoint;
      nextPoint->prev_ = prevPoint;
      removedPoints++;
      point = nextPoint;
    }
    else if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(delta, JavaLangMath_PI, OrgGeogebraCommonKernelDiscretePolygonTriangulation_ORIENTATION_DELTA)) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(@"U-turn");
      if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(nextPoint->x_, prevPoint->x_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(nextPoint->y_, prevPoint->y_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$$", prevPoint->name_, @"==", nextPoint->name_));
        i--;
        prevPoint->orientationToNext_ = nextPoint->orientationToNext_;
        point = prevPoint;
        prevPoint = prevPoint->prev_;
        point->next_ = nextPoint->next_;
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPoint->next_))->prev_ = point;
        removedPoints += 2;
      }
      else if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(0, (nextPoint->x_ - prevPoint->x_) * (point->x_ - prevPoint->x_) + (nextPoint->y_ - prevPoint->y_) * (point->y_ - prevPoint->y_), OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$D", @" next point is back old point - ", (prevPoint->orientationToNext_ * 180 / JavaLangMath_PI)));
        if (prevPoint->orientationToNext_ > 0) {
          prevPoint->orientationToNext_ -= JavaLangMath_PI;
        }
        else {
          prevPoint->orientationToNext_ += JavaLangMath_PI;
        }
        prevPoint->next_ = nextPoint;
        nextPoint->prev_ = prevPoint;
        removedPoints++;
        point = nextPoint;
      }
      else {
        prevPoint->next_ = nextPoint;
        nextPoint->prev_ = prevPoint;
        point = nextPoint;
      }
    }
    else {
      prevPoint = point;
      point = nextPoint;
    }
  }
  firstPoint_ = point;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("I$I", n, @" - ", removedPoints));
  return n - removedPoints;
}

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *)checkIsConvex {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point1 = firstPoint_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point2 = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point1))->next_;
  jdouble delta = point1->orientationToNext_ + JavaLangMath_PI - ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point2))->orientationToNext_;
  if (delta < -JavaLangMath_PI) {
    delta += 2 * JavaLangMath_PI;
  }
  else if (delta > JavaLangMath_PI) {
    delta -= 2 * JavaLangMath_PI;
  }
  jboolean positive = (delta > 0);
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$CDCC", point1->name_, '(', (point1->orientationToNext_ * 180 / JavaLangMath_PI), OrgGeogebraCommonUtilUnicode_DEGREE_CHAR, ')'));
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$CDCC", point2->name_, '(', (point2->orientationToNext_ * 180 / JavaLangMath_PI), OrgGeogebraCommonUtilUnicode_DEGREE_CHAR, ')'));
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$DCC", @"delta : ", (delta * 180 / JavaLangMath_PI), OrgGeogebraCommonUtilUnicode_DEGREE_CHAR, ')'));
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$Z", @"positive : ", positive));
  jboolean convex = YES;
  point1 = point2;
  point2 = point1->next_;
  jint pointLengthMinus2 = -1;
  jdouble deltaSum = delta;
  while (point1 != firstPoint_ && convex) {
    delta = point1->orientationToNext_ + JavaLangMath_PI - ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point2))->orientationToNext_;
    if (delta < -JavaLangMath_PI) {
      delta += 2 * JavaLangMath_PI;
    }
    else if (delta > JavaLangMath_PI) {
      delta -= 2 * JavaLangMath_PI;
    }
    convex = (positive ^ (delta < 0));
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$CDC$DC$Z", point2->name_, '(', (point2->orientationToNext_ * 180 / JavaLangMath_PI), OrgGeogebraCommonUtilUnicode_DEGREE_CHAR, @") -- (", (delta * 180 / JavaLangMath_PI), OrgGeogebraCommonUtilUnicode_DEGREE_CHAR, @") -- ", convex));
    point1 = point2;
    point2 = point1->next_;
    pointLengthMinus2++;
    deltaSum += delta;
  }
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("D$I", (deltaSum * 180 / JavaLangMath_PI), @" , ", (pointLengthMinus2 - 2) * 180));
  convex = (convex && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(JavaLangMath_absWithDouble_(deltaSum), pointLengthMinus2 * JavaLangMath_PI));
  if (convex) {
    if (positive) {
      return OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_get_ANTI_CLOCKWISE();
    }
    return OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_get_CLOCKWISE();
  }
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_get_NOT();
}

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment
                                                                      withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)pt {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, segment, pt);
}

- (void)cutAfterComparisonToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment2 {
  if (comparedSameOrientationSegment_ != nil) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("@C@$I", segment2, ',', comparedSameOrientationSegment_, @" : ", comparedSameOrientationValue_));
    if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment2))->rightPoint_ == segment2->leftPoint_) {
      @throw new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_get_ZERO_SEGMENT());
    }
    if (comparedSameOrientationValue_ < 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *s = comparedSameOrientationSegment_;
      comparedSameOrientationSegment_ = nil;
      [s removeFromPoints];
      s->leftPoint_ = segment2->rightPoint_;
      segment2->usable_++;
      [segment2 addToPoints];
      comparedSameOrientationSegment_ = nil;
      [s addToPoints];
      [self cutAfterComparisonToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:s];
    }
    else if (comparedSameOrientationValue_ > 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *s = comparedSameOrientationSegment_;
      comparedSameOrientationSegment_ = nil;
      [segment2 removeFromPoints];
      segment2->leftPoint_ = s->rightPoint_;
      s->usable_++;
      [s addToPoints];
      comparedSameOrientationSegment_ = nil;
      [segment2 addToPoints];
      [self cutAfterComparisonToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:segment2];
    }
    else {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *s = comparedSameOrientationSegment_;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("I$I", ((jint) [segment2 hash]), @" / ", ((jint) [s hash])));
      comparedSameOrientationSegment_ = nil;
      segment2->usable_ += s->usable_;
      [segment2 removeFromPoints];
      [s removeFromPoints];
      comparedSameOrientationSegment_ = nil;
      [segment2 addToPoints];
      comparedSameOrientationSegment_ = nil;
    }
  }
}

- (void)cutAfterComparisonToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment2 {
  if (comparedSameOrientationSegment_ != nil) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("@C@$I", segment2, ',', comparedSameOrientationSegment_, @" : ", comparedSameOrientationValue_));
    if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment2))->rightPoint_ == segment2->leftPoint_) {
      @throw new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_get_ZERO_SEGMENT());
    }
    if (comparedSameOrientationValue_ > 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *s = comparedSameOrientationSegment_;
      comparedSameOrientationSegment_ = nil;
      [s removeFromPoints];
      s->rightPoint_ = segment2->leftPoint_;
      segment2->usable_++;
      [segment2 addToPoints];
      comparedSameOrientationSegment_ = nil;
      [s addToPoints];
      [self cutAfterComparisonToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:s];
    }
    else if (comparedSameOrientationValue_ < 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *s = comparedSameOrientationSegment_;
      comparedSameOrientationSegment_ = nil;
      [segment2 removeFromPoints];
      segment2->rightPoint_ = s->leftPoint_;
      s->usable_++;
      [s addToPoints];
      comparedSameOrientationSegment_ = nil;
      [segment2 addToPoints];
      [self cutAfterComparisonToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:segment2];
    }
    else {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *s = comparedSameOrientationSegment_;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("I$I", ((jint) [segment2 hash]), @" / ", ((jint) [s hash])));
      comparedSameOrientationSegment_ = nil;
      segment2->usable_ += s->usable_;
      [segment2 removeFromPoints];
      [s removeFromPoints];
      comparedSameOrientationSegment_ = nil;
      [segment2 addToPoints];
      comparedSameOrientationSegment_ = nil;
    }
  }
}

- (void)setIntersections {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point;
  for (point = firstPoint_; ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point))->next_ != firstPoint_; point = point->next_) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, point);
  }
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, point);
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(@"=========== store points ============");
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *pointSet = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self);
  for (point = firstPoint_; ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point))->next_ != firstPoint_; point = point->next_) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$CIC", point->name_, '(', point->id__, ')'));
    [pointSet addWithId:point];
  }
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$CIC", ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point))->name_, '(', point->id__, ')'));
  [pointSet addWithId:point];
  if ([pointSet size] > 3) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *top = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *bottom = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self);
    bottom->above_ = top;
    top->below_ = bottom;
    for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt = [pointSet first]; pt != [pointSet last]; pt = [pointSet higherWithId:pt]) {
      NSString *s = JreStrcat("$$", ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(pt))->name_, @" : ");
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *above = nil;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *below = nil;
      if (pt->toLeft_ != nil && ![pt->toLeft_ isEmpty]) {
        above = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk([pt->toLeft_ first]))->above_;
        below = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk([pt->toLeft_ last]))->below_;
        below->above_ = above;
        above->below_ = below;
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withJavaUtilTreeSet_(self, below, above, pointSet);
        jboolean go = YES;
        for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment = bottom->above_; segment != top && go; segment = segment->above_) {
          jdouble orientation = JavaLangMath_atan2WithDouble_withDouble_(pt->y_ - ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(segment->leftPoint_))->y_, pt->x_ - segment->leftPoint_->x_);
          if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(orientation, segment->orientation_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_ORIENTATION_DELTA)) {
            OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(JreStrcat("$$$@", @"(1)", pt->name_, @" aligned with ", segment));
            (void) OrgGeogebraCommonKernelDiscretePolygonTriangulation_cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, segment, pt);
            above = segment->above_;
            below = segment->below_;
            below->above_ = above;
            above->below_ = below;
            segment = below;
          }
          else if (orientation < segment->orientation_) {
            go = NO;
          }
        }
      }
      else {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$", @"search the correct place : ", pt->name_));
        jboolean go = YES;
        for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment = bottom->above_; segment != top && go; segment = segment->above_) {
          jdouble orientation = JavaLangMath_atan2WithDouble_withDouble_(pt->y_ - ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(segment->leftPoint_))->y_, pt->x_ - segment->leftPoint_->x_);
          if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(orientation, segment->orientation_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_ORIENTATION_DELTA)) {
            OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(JreStrcat("$$$@", @"(2)", pt->name_, @" aligned with ", segment));
            (void) OrgGeogebraCommonKernelDiscretePolygonTriangulation_cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, segment, pt);
            above = segment->above_;
            below = segment->below_;
            below->above_ = above;
            above->below_ = below;
          }
          else if (orientation < segment->orientation_) {
            go = NO;
            above = segment;
            below = above->below_;
            OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(JreStrcat("@C$C@", below, '<', pt->name_, '<', above));
          }
        }
        if (go) {
          above = top;
          below = above->below_;
        }
      }
      if (pt->toRight_ != nil) {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *oldBelow = below;
        for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong seg in pt->toRight_) {
          ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(below))->above_ = seg;
          ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg))->below_ = below;
          below = seg;
        }
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(below))->above_ = above;
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(above))->below_ = below;
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withJavaUtilTreeSet_(self, oldBelow, ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(oldBelow))->above_, pointSet);
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withJavaUtilTreeSet_(self, below, below->above_, pointSet);
      }
    }
  }
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNonSelfIntersectingWithJavaUtilTreeSet_(self, pointSet);
}

- (void)setNonSelfIntersectingWithJavaUtilTreeSet:(JavaUtilTreeSet *)pointSet {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNonSelfIntersectingWithJavaUtilTreeSet_(self, pointSet);
}

- (void)checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)a
                         withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)b
                                                                     withJavaUtilTreeSet:(JavaUtilTreeSet *)pointSet {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withJavaUtilTreeSet_(self, a, b, pointSet);
}

- (void)createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)point {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, point);
}

+ (jdouble)getReverseOrientationWithDouble:(jdouble)orientation {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_getReverseOrientationWithDouble_(orientation);
}

- (void)triangulate {
  [((JavaUtilArrayList *) nil_chk(fansList_)) clear];
  for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints * __strong polygonPoints in nil_chk(polygonPointsList_)) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_(self, polygonPoints);
  }
}

- (void)triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *)polygonPoints {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_(self, polygonPoints);
}

+ (jboolean)needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)seg1
                         withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)seg2 {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_(seg1, seg2);
}

- (void)triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)firstBelow
                   withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)firstAbove {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *chain;
  JavaUtilStack *stack = new_JavaUtilStack_init();
  (void) [stack pushWithId:((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(firstAbove))->leftPoint_];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pAbove = firstAbove->rightPoint_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pBelow = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(firstBelow))->rightPoint_;
  if (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(nil_chk(pAbove), pBelow) < 0) {
    chain = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_ABOVE();
    (void) [stack pushWithId:pAbove];
    firstAbove = firstAbove->next_;
  }
  else {
    chain = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_BELOW();
    (void) [stack pushWithId:pBelow];
    firstBelow = firstBelow->next_;
  }
  while (firstAbove != nil && firstBelow != nil) {
    NSString *s = @"fan : ";
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan *currentTriangleFan;
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *top = [stack peek];
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *vi;
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *viChain;
    if (chain == OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_ABOVE()) {
      pAbove = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(firstAbove))->rightPoint_;
      if (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(nil_chk(pAbove), pBelow) < 0) {
        vi = pAbove;
        viChain = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_ABOVE();
        firstAbove = firstAbove->next_;
      }
      else {
        vi = pBelow;
        viChain = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_BELOW();
        firstBelow = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(firstBelow))->next_;
      }
    }
    else {
      pBelow = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(firstBelow))->rightPoint_;
      if (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(nil_chk(pBelow), pAbove) < 0) {
        vi = pBelow;
        viChain = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_BELOW();
        firstBelow = firstBelow->next_;
      }
      else {
        vi = pAbove;
        viChain = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_ABOVE();
        firstAbove = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(firstAbove))->next_;
      }
    }
    jboolean clockWise = NO;
    if (viChain != chain) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(@"case 2 ", top, vi);
      if (viChain == OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_ABOVE()) {
        clockWise = YES;
      }
      currentTriangleFan = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withInt_withBoolean_(self, ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(vi))->id__, clockWise);
      s = JreStrcat("$$", s, vi->name_);
      while (![stack isEmpty]) {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *v = [stack pop];
        [currentTriangleFan addWithId:JavaLangInteger_valueOfWithInt_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(v))->id__)];
        s = JreStrcat("$$", s, v->name_);
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(@"diagonal : ", vi, v);
      }
      (void) [stack pushWithId:top];
      (void) [stack pushWithId:vi];
    }
    else {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(@"case 1 ", top, vi);
      if (viChain == OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_BELOW()) {
        clockWise = YES;
      }
      currentTriangleFan = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withInt_withBoolean_(self, ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(vi))->id__, clockWise);
      s = JreStrcat("$$", s, vi->name_);
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *vk = [stack pop];
      [currentTriangleFan addWithId:JavaLangInteger_valueOfWithInt_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(vk))->id__)];
      s = JreStrcat("$$", s, vk->name_);
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(@"diagonal ", vi, vk);
      jdouble dx2 = vk->x_ - vi->x_;
      jdouble dy2 = vk->y_ - vi->y_;
      jboolean go = YES;
      while (![stack isEmpty] && go) {
        jdouble dx1 = dx2;
        jdouble dy1 = dy2;
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *v = [stack pop];
        dx2 = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(v))->x_ - vi->x_;
        dy2 = v->y_ - vi->y_;
        if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(dx1 * dy2, dx2 * dy1) ^ (viChain != OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_get_BELOW())) {
          (void) [stack pushWithId:v];
          go = NO;
        }
        else {
          vk = v;
          [currentTriangleFan addWithId:JavaLangInteger_valueOfWithInt_(vk->id__)];
          s = JreStrcat("$$", s, vk->name_);
          OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(@"diagonal ", vi, vk);
        }
      }
      (void) [stack pushWithId:vk];
      (void) [stack pushWithId:vi];
    }
    if ([((OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan *) nil_chk(currentTriangleFan)) size] > 1) {
      [((JavaUtilArrayList *) nil_chk(fansList_)) addWithId:currentTriangleFan];
    }
    chain = viChain;
  }
}

+ (void)debugDiagonalWithNSString:(NSString *)s
withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p1
withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2 {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(s, p1, p2);
}

- (JavaUtilArrayList *)getTriangleFans {
  return fansList_;
}

- (IOSObjectArray *)getCompleteVerticesWithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)vertices
                                          withOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)cs
                                                                            withInt:(jint)length {
  if (maxPointIndex_ == length) {
    return vertices;
  }
  if (((IOSObjectArray *) nil_chk(completeVertices_))->size_ < maxPointIndex_) {
    completeVertices_ = [IOSObjectArray newArrayWithLength:maxPointIndex_ type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  }
  for (jint i = 0; i < length; i++) {
    (void) IOSObjectArray_Set(completeVertices_, i, IOSObjectArray_Get(nil_chk(vertices), i));
  }
  for (jint i = length; i < maxPointIndex_; i++) {
    OrgGeogebraCommonAwtGPoint2D_Double *point = IOSObjectArray_Get(nil_chk(pointsArray_), i);
    if (point != nil) {
      (void) IOSObjectArray_Set(completeVertices_, i, [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) getPointWithDouble:point->x_ withDouble:point->y_]);
    }
  }
  return completeVertices_;
}

- (void)setCornersWithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)corners {
  self->corners_ = corners;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "debugWithNSString:", "debug", "V", 0x1c, NULL, NULL },
    { "errorWithNSString:", "error", "V", 0x1c, NULL, NULL },
    { "init", "PolygonTriangulation", NULL, 0x1, NULL, NULL },
    { "setPolygonWithOrgGeogebraCommonKernelGeosGeoPolygon:", "setPolygon", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:withInt:", "setName", "V", 0x2, NULL, NULL },
    { "setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:withNSString:withInt:", "setName", "V", 0x2, NULL, NULL },
    { "addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:withDouble:withDouble:withNSString:withInt:", "addPointToChain", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", 0x2, NULL, NULL },
    { "updatePoints", NULL, "I", 0x1, NULL, NULL },
    { "checkIsConvex", NULL, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Convexity;", 0x1, NULL, NULL },
    { "cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:", "cut", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", 0x2, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException;", NULL },
    { "cutAfterComparisonToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "cutAfterComparisonToRight", "V", 0x4, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException;", NULL },
    { "cutAfterComparisonToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "cutAfterComparisonToLeft", "V", 0x4, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException;", NULL },
    { "setIntersections", NULL, "V", 0x1, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException;", NULL },
    { "setNonSelfIntersectingWithJavaUtilTreeSet:", "setNonSelfIntersecting", "V", 0x2, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException;", NULL },
    { "checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:withJavaUtilTreeSet:", "checkIntersection", "V", 0x12, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException;", NULL },
    { "createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:", "createSegment", "V", 0x12, NULL, NULL },
    { "getReverseOrientationWithDouble:", "getReverseOrientation", "D", 0x1a, NULL, NULL },
    { "triangulate", NULL, "V", 0x1, NULL, NULL },
    { "triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints:", "triangulate", "V", 0x2, NULL, NULL },
    { "needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "needsDiagonal", "Z", 0x1a, NULL, NULL },
    { "triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "triangulate", "V", 0x1, NULL, NULL },
    { "debugDiagonalWithNSString:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:", "debugDiagonal", "V", 0x1a, NULL, NULL },
    { "getTriangleFans", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "getCompleteVerticesWithOrgGeogebraCommonKernelMatrixCoordsArray:withOrgGeogebraCommonKernelMatrixCoordSys:withInt:", "getCompleteVertices", "[Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "setCornersWithOrgGeogebraCommonKernelMatrixCoordsArray:", "setCorners", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG__", "DEBUG", 0x1a, "Z", NULL, NULL, .constantValue.asBOOL = OrgGeogebraCommonKernelDiscretePolygonTriangulation_DEBUG },
    { "CORNERS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelDiscretePolygonTriangulation_CORNERS },
    { "CORNERS_ALL_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelDiscretePolygonTriangulation_CORNERS_ALL },
    { "EXTRA_POINTS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonKernelDiscretePolygonTriangulation_EXTRA_POINTS },
    { "nextNewPointForNonSelfIntersectingPolygon_", NULL, 0x4, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", NULL, NULL,  },
    { "nonSelfIntersectingPolygonPointComparator_", NULL, 0x12, "Ljava.util.Comparator;", NULL, "Ljava/util/Comparator<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Point;>;",  },
    { "POINT_DELTA_", NULL, 0x18, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA },
    { "ORIENTATION_DELTA_", NULL, 0x18, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ORIENTATION_DELTA },
    { "comparedSameOrientationSegment_", NULL, 0x4, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", NULL, NULL,  },
    { "comparedSameOrientationValue_", NULL, 0x4, "I", NULL, NULL,  },
    { "comparedSameSegment_", NULL, 0x4, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", NULL, NULL,  },
    { "polygon_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPolygon;", NULL, NULL,  },
    { "maxPointIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "firstPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", NULL, NULL,  },
    { "polygonPointsList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$PolygonPoints;>;",  },
    { "fansList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$TriangleFan;>;",  },
    { "pointsArray_", NULL, 0x2, "[Lorg.geogebra.common.awt.GPoint2D$Double;", NULL, NULL,  },
    { "completeVertices_", NULL, 0x2, "[Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "corners_", NULL, 0x2, "[Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$MyTreeSet;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangleFan;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$PolygonPoints;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Convexity;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Running;", "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Chain;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation = { 2, "PolygonTriangulation", "org.geogebra.common.kernel.discrete", NULL, 0x1, 26, methods, 19, fields, 0, NULL, 9, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(NSString *s) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_initialize();
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(NSString *s) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_initialize();
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_init(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self) {
  (void) NSObject_init(self);
  self->nextNewPointForNonSelfIntersectingPolygon_ = nil;
  self->nonSelfIntersectingPolygonPointComparator_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self);
  self->completeVertices_ = [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  self->corners_ = nil;
  self->polygonPointsList_ = new_JavaUtilArrayList_init();
  self->fansList_ = new_JavaUtilArrayList_init();
  self->pointsArray_ = [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonAwtGPoint2D_Double_class_()];
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_init() {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_init(self);
  return self;
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point, jint i) {
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point, NSString *s, jint i) {
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *OrgGeogebraCommonKernelDiscretePolygonTriangulation_addPointToChainWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withDouble_withDouble_withNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point, jdouble x, jdouble y, NSString *name, jint nameId) {
  if (!OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point))->x_, x, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA) || !OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(point->y_, y, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    point->next_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(self, x, y, point->id__ + 1);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNameWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withNSString_withInt_(self, point->next_, name, nameId);
    point->next_->prev_ = point;
    return point->next_;
  }
  return point;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *OrgGeogebraCommonKernelDiscretePolygonTriangulation_cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt) {
  [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment)) removeFromPoints];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment2 = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, segment->orientation_, pt, segment->rightPoint_);
  segment->rightPoint_ = pt;
  [segment addToPoints];
  self->comparedSameOrientationSegment_ = nil;
  [segment2 addToPoints];
  segment2->usable_ = segment->usable_;
  [self cutAfterComparisonToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:segment2];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_([((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(segment2->leftPoint_)) debugSegments]);
  return segment2;
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_setNonSelfIntersectingWithJavaUtilTreeSet_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, JavaUtilTreeSet *pointSet) {
  if (((IOSObjectArray *) nil_chk(self->pointsArray_))->size_ < self->maxPointIndex_) {
    self->pointsArray_ = [IOSObjectArray newArrayWithLength:self->maxPointIndex_ type:OrgGeogebraCommonAwtGPoint2D_Double_class_()];
  }
  [((JavaUtilArrayList *) nil_chk(self->polygonPointsList_)) clear];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(@"=========== non self-intersecting polygons ==============");
  while (![((JavaUtilTreeSet *) nil_chk(pointSet)) isEmpty]) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *polygonPoints = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withJavaUtilComparator_(self, self->nonSelfIntersectingPolygonPointComparator_);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *start = [pointSet first];
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segStart = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(start))->toRight_)) first];
    if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segStart))->usable_ > 1) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$@$I", @"*** ", segStart, @" : ", segStart->usable_));
      segStart->usable_ = segStart->usable_ % 2;
    }
    if (segStart->usable_ == 0) {
      [segStart removeFromPoints];
      if ([start hasNoSegment]) {
        [pointSet removeWithId:start];
        (void) IOSObjectArray_Set(self->pointsArray_, start->id__, new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_(start->x_, start->y_));
      }
      start = segStart->rightPoint_;
      if ([((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(start)) hasNoSegment]) {
        [pointSet removeWithId:start];
        (void) IOSObjectArray_Set(self->pointsArray_, start->id__, new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_(start->x_, start->y_));
      }
    }
    else {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *currentPoint;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *currentPointNew;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *nextPoint = start;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *nextPointNew = [nextPoint clone];
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *startPointNew = nextPointNew;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment = segStart;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *next = nil;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT();
      while (running != OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP()) {
        segment->running_ = running;
        currentPoint = nextPoint;
        currentPointNew = nextPointNew;
        jboolean needsDiagonal = NO;
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$@", nextPoint->name_, @", ", segment));
        if (running == OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT()) {
          nextPoint = segment->rightPoint_;
          if (nextPoint == start) {
            running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP();
            next = segStart;
          }
          else {
            next = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPoint))->toLeft_)) lowerWithId:segment];
            if (next == nil) {
              if (nextPoint->toRight_ != nil && ![nextPoint->toRight_ isEmpty]) {
                next = [nextPoint->toRight_ last];
              }
              if (next == nil) {
                next = [nextPoint->toLeft_ last];
                running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_LEFT();
                needsDiagonal = OrgGeogebraCommonKernelDiscretePolygonTriangulation_needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_(segment, next);
              }
            }
            else {
              running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_LEFT();
              needsDiagonal = OrgGeogebraCommonKernelDiscretePolygonTriangulation_needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_(segment, next);
            }
          }
          OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$@", @"next : ", next));
        }
        else {
          nextPoint = segment->leftPoint_;
          if (nextPoint == start && ([start->toRight_ higherWithId:segStart] == segment || segStart == segment)) {
            running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP();
            next = segStart;
          }
          else {
            next = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPoint))->toRight_ lowerWithId:segment];
            if (next == nil) {
              if (nextPoint->toLeft_ != nil && ![nextPoint->toLeft_ isEmpty]) {
                next = [nextPoint->toLeft_ last];
              }
              if (next == nil) {
                next = [nextPoint->toRight_ last];
                running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT();
                needsDiagonal = OrgGeogebraCommonKernelDiscretePolygonTriangulation_needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_(segment, next);
              }
            }
            else {
              running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT();
              needsDiagonal = OrgGeogebraCommonKernelDiscretePolygonTriangulation_needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_(segment, next);
            }
          }
        }
        {
          OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *clone;
          switch (segment->usable_) {
            case 1:
            [segment removeFromPoints];
            segment->usable_--;
            break;
            case 0:
            @throw new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_get_DEAD_END());
            default:
            segment->usable_--;
            clone = [segment clone];
            ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(clone))->running_ = segment->running_;
            segment = clone;
            break;
          }
        }
        if (running != OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP()) {
          nextPointNew = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPoint)) clone];
        }
        else {
          nextPointNew = startPointNew;
        }
        if (segment->running_ == OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT()) {
          segment->leftPoint_ = currentPointNew;
          segment->rightPoint_ = nextPointNew;
        }
        else {
          segment->leftPoint_ = nextPointNew;
          segment->rightPoint_ = currentPointNew;
        }
        if (![segment addToPoints]) {
          ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(self->comparedSameSegment_))->usable_++;
        }
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPointNew))->needsDiagonal_ = needsDiagonal;
        polygonPoints->needsDiagonals_ = (polygonPoints->needsDiagonals_ || needsDiagonal);
        self->nextNewPointForNonSelfIntersectingPolygon_ = nextPointNew;
        [polygonPoints addWithId:nextPointNew];
        nextPointNew = self->nextNewPointForNonSelfIntersectingPolygon_;
        if ([currentPoint hasNoSegment]) {
          [pointSet removeWithId:currentPoint];
          (void) IOSObjectArray_Set(self->pointsArray_, currentPoint->id__, new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_(currentPoint->x_, currentPoint->y_));
        }
        else {
        }
        segment = next;
      }
      if ([start hasNoSegment]) {
        [pointSet removeWithId:start];
        (void) IOSObjectArray_Set(self->pointsArray_, start->id__, new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_(start->x_, start->y_));
      }
      else {
      }
      [self->polygonPointsList_ addWithId:polygonPoints];
    }
  }
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(@"=========== END ==============");
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_checkIntersectionWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withJavaUtilTreeSet_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *a, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *b, JavaUtilTreeSet *pointSet) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$@C@", @"check intersection : ", a, '-', b));
  if ([((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(a)) isDummy] || [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(b)) isDummy]) {
    return;
  }
  if (a->rightPoint_ == ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(b))->rightPoint_) {
    return;
  }
  if (a->leftPoint_ == b->leftPoint_) {
    return;
  }
  [a setEquation];
  [b setEquation];
  jdouble x = a->y_ * b->z_ - a->z_ * b->y_;
  jdouble y = a->z_ * b->x_ - a->x_ * b->z_;
  jdouble z = a->x_ * b->y_ - a->y_ * b->x_;
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("DCDCD", x, ',', y, ',', z));
  if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_withDouble_(z, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    jdouble x1 = x / z;
    jdouble y1 = y / z;
    jint al, ar, bl, br;
    if ((al = OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToWithDouble_withDouble_(nil_chk(a->leftPoint_), x1, y1)) > 0 || (ar = OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToWithDouble_withDouble_(nil_chk(a->rightPoint_), x1, y1)) < 0 || (bl = OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToWithDouble_withDouble_(b->leftPoint_, x1, y1)) > 0 || (br = OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToWithDouble_withDouble_(b->rightPoint_, x1, y1)) < 0) {
    }
    else if (al == 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$", @"al : ", a->leftPoint_->name_));
      @throw new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_get_LEFT_POINT_INTERSECTION());
    }
    else if (ar == 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt = a->rightPoint_;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(JreStrcat("$$", @"ar : ", pt->name_));
      (void) OrgGeogebraCommonKernelDiscretePolygonTriangulation_cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, b, pt);
    }
    else if (bl == 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$C@C@", @"bl : ", b->leftPoint_->name_, ' ', a, '/', b));
      @throw new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_get_LEFT_POINT_INTERSECTION());
    }
    else if (br == 0) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt = b->rightPoint_;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(JreStrcat("$$", @"br : ", pt->name_));
      (void) OrgGeogebraCommonKernelDiscretePolygonTriangulation_cutWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, a, pt);
    }
    else {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(self, x / z, y / z, self->maxPointIndex_);
      pt->name_ = JavaLangInteger_toStringWithInt_(pt->id__);
      self->maxPointIndex_++;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(JreStrcat("@C@", a, '-', b));
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$$DCD", @"inter : ", pt->name_, @" : ", pt->x_, ',', pt->y_));
      [a removeFromPoints];
      [b removeFromPoints];
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *a2 = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, a->orientation_, pt, a->rightPoint_);
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *b2 = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, b->orientation_, pt, b->rightPoint_);
      [a2 addToPoints];
      [b2 addToPoints];
      a2->usable_ = a->usable_;
      b2->usable_ = b->usable_;
      a->rightPoint_ = pt;
      b->rightPoint_ = pt;
      [a addToPoints];
      [b addToPoints];
      [((JavaUtilTreeSet *) nil_chk(pointSet)) addWithId:pt];
    }
  }
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_createSegmentWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *point) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment;
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(point))->orientationToNext_, -JavaLangMath_PI / 2) && OrgGeogebraCommonKernelKernel_isGreaterEqualWithDouble_withDouble_(JavaLangMath_PI / 2, point->orientationToNext_)) {
    segment = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, point->orientationToNext_, point, point->next_);
  }
  else {
    segment = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_getReverseOrientationWithDouble_(point->orientationToNext_), point->next_, point);
  }
  [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment)) addToPoints];
}

jdouble OrgGeogebraCommonKernelDiscretePolygonTriangulation_getReverseOrientationWithDouble_(jdouble orientation) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_initialize();
  if (orientation > 0) {
    return orientation - JavaLangMath_PI;
  }
  return orientation + JavaLangMath_PI;
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *polygonPoints) {
  if ([((OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *) nil_chk(polygonPoints)) size] < 3) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(@"*** not a polygon ***");
    return;
  }
  if (polygonPoints->needsDiagonals_) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *top = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *bottom = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self);
    bottom->above_ = top;
    top->below_ = bottom;
    for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point * __strong pt in polygonPoints) {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *above = nil;
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *below = nil;
      if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(pt))->toLeft_ != nil && ![pt->toLeft_ isEmpty]) {
        above = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk([pt->toLeft_ first]))->above_;
        below = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk([pt->toLeft_ last]))->below_;
        below->above_ = above;
        above->below_ = below;
        if (pt->needsDiagonal_) {
          OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt2;
          if (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(nil_chk(below->rightPoint_), above->rightPoint_) < 0) {
            pt2 = below->rightPoint_;
          }
          else {
            pt2 = above->rightPoint_;
          }
          OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *diagonal = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, JavaLangMath_atan2WithDouble_withDouble_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(pt2))->y_ - pt->y_, pt2->x_ - pt->x_), pt, pt2);
          [diagonal addToPoints];
          diagonal->usable_++;
        }
      }
      else {
        jboolean go = YES;
        for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment = bottom->above_; segment != top && go; segment = segment->above_) {
          jdouble orientation = JavaLangMath_atan2WithDouble_withDouble_(pt->y_ - ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(segment->leftPoint_))->y_, pt->x_ - segment->leftPoint_->x_);
          if (orientation < segment->orientation_) {
            go = NO;
            above = segment;
            below = above->below_;
          }
        }
        if (go) {
          above = top;
          below = above->below_;
        }
        if (pt->needsDiagonal_) {
          if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(below))->usable_ > 1) {
            [below removeFromPoints];
            below->rightPoint_ = pt;
            [below addToPoints];
            below = below->below_;
            below->above_ = above;
            ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(above))->below_ = below;
          }
          else if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(above))->usable_ > 1) {
            [above removeFromPoints];
            above->rightPoint_ = pt;
            [above addToPoints];
            above = above->above_;
            below->above_ = above;
            above->below_ = below;
          }
          else {
            OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *pt2;
            if (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(nil_chk(below->leftPoint_), above->leftPoint_) < 0) {
              pt2 = above->leftPoint_;
            }
            else {
              pt2 = below->leftPoint_;
            }
            OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *diagonal = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, JavaLangMath_atan2WithDouble_withDouble_(pt->y_ - ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(pt2))->y_, pt->x_ - pt2->x_), pt2, pt);
            [diagonal addToPoints];
            diagonal->usable_++;
          }
        }
      }
      if (pt->toRight_ != nil) {
        for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong seg in pt->toRight_) {
          ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(below))->above_ = seg;
          ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg))->below_ = below;
          below = seg;
        }
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(below))->above_ = above;
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(above))->below_ = below;
      }
    }
  }
  while (![polygonPoints isEmpty]) {
    NSString *s = @"Monotone piece : ";
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *start = [polygonPoints first];
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *currentPoint = start;
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *nextPoint;
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segStart = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(start))->toRight_)) first];
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *segment = segStart;
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *next = nil;
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT();
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *oldRunning;
    while (running != OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP()) {
      oldRunning = running;
      if (running == OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT()) {
        nextPoint = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment))->rightPoint_;
        if (nextPoint == start) {
          running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP();
        }
        else {
          next = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPoint))->toLeft_)) lowerWithId:segment];
          if (next == nil) {
            if (nextPoint->toRight_ != nil && ![nextPoint->toRight_ isEmpty]) {
              next = [nextPoint->toRight_ last];
            }
            if (next == nil) {
              next = [nextPoint->toLeft_ higherWithId:segment];
              running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_LEFT();
            }
          }
          else {
            running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_LEFT();
          }
        }
      }
      else {
        nextPoint = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment))->leftPoint_;
        if (nextPoint == start) {
          running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP();
        }
        else {
          next = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(nextPoint))->toRight_ lowerWithId:segment];
          if (next == nil) {
            if (nextPoint->toLeft_ != nil && ![nextPoint->toLeft_ isEmpty]) {
              next = [nextPoint->toLeft_ last];
            }
            if (next == nil) {
              next = [nextPoint->toRight_ higherWithId:segment];
              running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT();
            }
          }
          else {
            running = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT();
          }
        }
      }
      s = JreStrcat("$$", s, ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(currentPoint))->name_);
      [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment)) removeFromPoints];
      if (oldRunning == OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_LEFT()) {
        if (segment->usable_ > 1) {
          segment->usable_--;
          OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *clone = [segment clone];
          [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(clone)) addToPoints];
          clone->usable_ = segment->usable_;
        }
        if (running == OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_LEFT()) {
          ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(next))->next_ = segment;
        }
      }
      else {
        if (segment->usable_ > 1) {
          segment->usable_--;
          OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *clone = [segment clone];
          [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(clone)) addToPoints];
          clone->usable_ = segment->usable_;
        }
        if (running == OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_RIGHT()) {
          segment->next_ = next;
        }
      }
      if ([currentPoint hasNoSegment]) {
        [polygonPoints removeWithId:currentPoint];
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$", @"remove : ", currentPoint->name_));
      }
      else {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$", @"keep : ", currentPoint->name_));
      }
      segment = next;
      currentPoint = nextPoint;
    }
    if ([start hasNoSegment]) {
      [polygonPoints removeWithId:start];
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$", @"remove : ", start->name_));
    }
    else {
      OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$", @"keep : ", start->name_));
    }
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(s);
    [self triangulateWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:segStart withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:segment];
  }
}

jboolean OrgGeogebraCommonKernelDiscretePolygonTriangulation_needsDiagonalWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *seg1, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *seg2) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_initialize();
  if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg1))->orientation_ < ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg2))->orientation_) {
    return YES;
  }
  return NO;
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugDiagonalWithNSString_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(NSString *s, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *p1, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *p2) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_initialize();
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_(JreStrcat("$$$C$", s, @": ", ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(p1))->name_, ',', ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(p2))->name_));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$ {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self, outer$);
  return self;
}

- (id)higherWithId:(id)e {
  id<JavaUtilSortedSet> set = [self tailSetWithId:e];
  id<JavaUtilIterator> it = [((id<JavaUtilSortedSet>) nil_chk(set)) iterator];
  if ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id first = [it next];
    if (first != e) {
      return first;
    }
    if ([it hasNext]) {
      return [it next];
    }
  }
  return nil;
}

- (id)lowerWithId:(id)e {
  id<JavaUtilSortedSet> set = [self headSetWithId:e];
  if (set == nil || [set isEmpty]) {
    return nil;
  }
  return [((id<JavaUtilSortedSet>) nil_chk(set)) last];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:", "MyTreeSet", NULL, 0x1, NULL, NULL },
    { "higherWithId:", "higher", "TE;", 0x1, NULL, "(TE;)TE;" },
    { "lowerWithId:", "lower", "TE;", 0x1, NULL, "(TE;)TE;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_serialVersionUID },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet = { 2, "MyTreeSet", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x2, 3, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/util/TreeSet<TE;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) {
  (void) JavaUtilTreeSet_init(self);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *)type {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(self, type);
  return self;
}

- (NSString *)getMessage {
  return JreStrcat("$@", @"Triangulation exception : ", type_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum:", "TriangulationException", NULL, 0x1, NULL, NULL },
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_serialVersionUID },
    { "type_", NULL, 0x2, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException$Type;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException$Type;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException = { 2, "TriangulationException", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0xa, 2, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *type) {
  (void) JavaLangException_init(self);
  self->type_ = type;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *type) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_(self, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum)

OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values_[3];

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values() {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values_ count:3 type:OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values();
}

+ (OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initialize();
  for (int i = 0; i < 3; i++) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *e = OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum class]) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_LEFT_POINT_INTERSECTION = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(@"LEFT_POINT_INTERSECTION", 0);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_ZERO_SEGMENT = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(@"ZERO_SEGMENT", 1);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_DEAD_END = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(@"DEAD_END", 2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "LEFT_POINT_INTERSECTION", "LEFT_POINT_INTERSECTION", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException$Type;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_LEFT_POINT_INTERSECTION, NULL,  },
    { "ZERO_SEGMENT", "ZERO_SEGMENT", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException$Type;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_ZERO_SEGMENT, NULL,  },
    { "DEAD_END", "DEAD_END", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException$Type;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_DEAD_END, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$TriangulationException$Type;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum = { 2, "Type", "org.geogebra.common.kernel.discrete", "PolygonTriangulation$TriangulationException", 0x4019, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$TriangulationException$Type;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException_TypeEnum)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
                                                                 withDouble:(jdouble)x
                                                                 withDouble:(jdouble)y
                                                                    withInt:(jint)id_ {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(self, outer$, x, y, id_);
  return self;
}

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)clone {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *ret = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(this$0_, x_, y_, id__);
  ret->name_ = name_;
  return ret;
}

- (NSString *)debugSegments {
  NSString *s = JreStrcat("$C", name_, ' ');
  if (toLeft_ != nil) {
    s = JreStrcat("$$", s, @"/ to left : ");
    for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong segment in toLeft_) {
      s = JreStrcat("$$", s, JreStrcat("IC$CI$", (J2ObjCFpToInt((((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment))->orientation_ * 180 / JavaLangMath_PI))) + OrgGeogebraCommonUtilUnicode_DEGREE_CHAR, ':', ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(segment->leftPoint_))->name_, '(', segment->usable_, @"), "));
    }
  }
  if (toRight_ != nil) {
    s = JreStrcat("$$", s, @"/ to right : ");
    for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong segment in toRight_) {
      s = JreStrcat("$$", s, JreStrcat("IC$CI$", (J2ObjCFpToInt((((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(segment))->orientation_ * 180 / JavaLangMath_PI))) + OrgGeogebraCommonUtilUnicode_DEGREE_CHAR, ':', ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(segment->rightPoint_))->name_, '(', segment->usable_, @"), "));
    }
  }
  return s;
}

- (void)removeSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment {
  [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(toRight_)) removeWithId:segment];
}

- (jboolean)addSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment {
  if (toRight_ == nil) {
    toRight_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(this$0_);
  }
  return [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(toRight_)) addWithId:segment];
}

- (void)removeSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment {
  [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(toLeft_)) removeWithId:segment];
}

- (jboolean)addSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)segment {
  if (toLeft_ == nil) {
    toLeft_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(this$0_);
  }
  return [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet *) nil_chk(toLeft_)) addWithId:segment];
}

- (jboolean)hasNoSegment {
  return (toLeft_ == nil || [toLeft_ isEmpty]) && (toRight_ == nil || [toRight_ isEmpty]);
}

- (jint)compareToWithId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2 {
  (void) check_class_cast(p2, [OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point class]);
  if (id__ == ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(p2))->id__) {
    return 0;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(p2->x_, x_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return -1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(x_, p2->x_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return 1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(p2->y_, y_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return -1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(y_, p2->y_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return 1;
  }
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_errorWithNSString_(JreStrcat("$$$", self->name_, @"==", p2->name_));
  if (toRight_ != nil) {
    if (p2->toRight_ == nil) {
      p2->toRight_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(this$0_);
    }
    for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong seg in toRight_) {
      ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg))->leftPoint_ = p2;
      [p2->toRight_ addWithId:seg];
      @try {
        [this$0_ cutAfterComparisonToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:seg];
      }
      @catch (OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *e) {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_([((OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *) nil_chk(e)) getMessage]);
      }
    }
  }
  if (toLeft_ != nil) {
    if (p2->toLeft_ == nil) {
      p2->toLeft_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(this$0_);
    }
    for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong seg in toLeft_) {
      ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg))->rightPoint_ = p2;
      [p2->toLeft_ addWithId:seg];
      @try {
        [this$0_ cutAfterComparisonToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:seg];
      }
      @catch (OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *e) {
        OrgGeogebraCommonKernelDiscretePolygonTriangulation_debugWithNSString_([((OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangulationException *) nil_chk(e)) getMessage]);
      }
    }
  }
  return 0;
}

- (jint)compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2 {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, p2);
}

- (jint)compareToWithDouble:(jdouble)x1
                 withDouble:(jdouble)y1 {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToWithDouble_withDouble_(self, x1, y1);
}

- (OrgGeogebraCommonAwtGPoint2D_Double *)toDouble {
  return new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_(x_, y_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:withDouble:withDouble:withInt:", "Point", NULL, 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", 0x1, NULL, NULL },
    { "debugSegments", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "removeSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "removeSegmentToRight", "V", 0x1, NULL, NULL },
    { "addSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "addSegmentToRight", "Z", 0x1, NULL, NULL },
    { "removeSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "removeSegmentToLeft", "V", 0x1, NULL, NULL },
    { "addSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:", "addSegmentToLeft", "Z", 0x1, NULL, NULL },
    { "hasNoSegment", NULL, "Z", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x11, NULL, NULL },
    { "compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:", "compareToOnly", "I", 0x11, NULL, NULL },
    { "compareToWithDouble:withDouble:", "compareTo", "I", 0x11, NULL, NULL },
    { "toDouble", NULL, "Lorg.geogebra.common.awt.GPoint2D$Double;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation;", NULL, NULL,  },
    { "x_", NULL, 0x1, "D", NULL, NULL,  },
    { "y_", NULL, 0x1, "D", NULL, NULL,  },
    { "id__", "id", 0x1, "I", NULL, NULL,  },
    { "name_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "orientationToNext_", NULL, 0x1, "D", NULL, NULL,  },
    { "prev_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", NULL, NULL,  },
    { "next_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", NULL, NULL,  },
    { "toRight_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$MyTreeSet;", NULL, "Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$MyTreeSet<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Segment;>;",  },
    { "toLeft_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$MyTreeSet;", NULL, "Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$MyTreeSet<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Segment;>;",  },
    { "needsDiagonal_", NULL, 0x0, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point = { 2, "Point", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x2, 12, methods, 11, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Point;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble x, jdouble y, jint id_) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->needsDiagonal_ = NO;
  self->x_ = x;
  self->y_ = y;
  self->id__ = id_;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble x, jdouble y, jint id_) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withDouble_withInt_(self, outer$, x, y, id_);
  return self;
}

jint OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *p2) {
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(p2))->x_, self->x_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return -1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(self->x_, p2->x_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return 1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(p2->y_, self->y_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return -1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(self->y_, p2->y_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return 1;
  }
  return 0;
}

jint OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToWithDouble_withDouble_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *self, jdouble x1, jdouble y1) {
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(x1, self->x_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return -1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(self->x_, x1, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return 1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(y1, self->y_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return -1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(self->y_, y1, OrgGeogebraCommonKernelDiscretePolygonTriangulation_POINT_DELTA)) {
    return 1;
  }
  return 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$ {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self, outer$);
  return self;
}

- (jboolean)isDummy {
  return leftPoint_ == nil;
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
                                                                 withDouble:(jdouble)orientation
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)leftPoint
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)rightPoint {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, outer$, orientation, leftPoint, rightPoint);
  return self;
}

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)clone {
  return new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(this$0_, orientation_, leftPoint_, rightPoint_);
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)leftPoint
              withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)rightPoint {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, outer$, leftPoint, rightPoint);
  return self;
}

- (void)setEquation {
  if (equationNeedsUpdate__) {
    y_ = ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(rightPoint_))->x_ - ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(leftPoint_))->x_;
    x_ = -rightPoint_->y_ + leftPoint_->y_;
    z_ = -x_ * rightPoint_->x_ - y_ * rightPoint_->y_;
    equationNeedsUpdate__ = NO;
  }
}

- (void)equationNeedsUpdate {
  equationNeedsUpdate__ = YES;
}

- (NSString *)description {
  if (leftPoint_ != nil) {
    return JreStrcat("$$", leftPoint_->name_, ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(rightPoint_))->name_);
  }
  return @"dummy";
}

- (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)getFirstPoint {
  if (running_ == OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_LEFT()) {
    return rightPoint_;
  }
  return leftPoint_;
}

- (void)removeFromPoints {
  [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(leftPoint_)) removeSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:self];
  [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(rightPoint_)) removeSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:self];
}

- (jboolean)addToPoints {
  jboolean newRight = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(leftPoint_)) addSegmentToRightWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:self];
  jboolean newLeft = [((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(rightPoint_)) addSegmentToLeftWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment:self];
  return newRight && newLeft;
}

- (jint)compareToWithId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *)seg {
  (void) check_class_cast(seg, [OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment class]);
  if (self == seg) {
    return 0;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg))->orientation_, orientation_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_ORIENTATION_DELTA)) {
    return -1;
  }
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_withDouble_(orientation_, seg->orientation_, OrgGeogebraCommonKernelDiscretePolygonTriangulation_ORIENTATION_DELTA)) {
    return 1;
  }
  this$0_->comparedSameOrientationSegment_ = seg;
  if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(rightPoint_))->id__ != seg->rightPoint_->id__) {
    this$0_->comparedSameOrientationValue_ = OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(rightPoint_, seg->rightPoint_);
  }
  else {
    this$0_->comparedSameOrientationValue_ = OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(nil_chk(leftPoint_), seg->leftPoint_);
  }
  if (rightPoint_->id__ < seg->rightPoint_->id__) {
    return -1;
  }
  if (rightPoint_->id__ > seg->rightPoint_->id__) {
    return 1;
  }
  this$0_->comparedSameSegment_ = seg;
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:", "Segment", NULL, 0x1, NULL, NULL },
    { "isDummy", NULL, "Z", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:withDouble:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:", "Segment", NULL, 0x1, NULL, NULL },
    { "clone", NULL, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point:", "Segment", NULL, 0x1, NULL, NULL },
    { "setEquation", NULL, "V", 0x1, NULL, NULL },
    { "equationNeedsUpdate", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFirstPoint", NULL, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", 0x1, NULL, NULL },
    { "removeFromPoints", NULL, "V", 0x1, NULL, NULL },
    { "addToPoints", NULL, "Z", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation;", NULL, NULL,  },
    { "orientation_", NULL, 0x0, "D", NULL, NULL,  },
    { "leftPoint_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", NULL, NULL,  },
    { "rightPoint_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;", NULL, NULL,  },
    { "above_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", NULL, NULL,  },
    { "below_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", NULL, NULL,  },
    { "next_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Segment;", NULL, NULL,  },
    { "usable_", NULL, 0x0, "I", NULL, NULL,  },
    { "running_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Running;", NULL, NULL,  },
    { "x_", NULL, 0x0, "D", NULL, NULL,  },
    { "y_", NULL, 0x0, "D", NULL, NULL,  },
    { "z_", NULL, 0x0, "D", NULL, NULL,  },
    { "equationNeedsUpdate__", "equationNeedsUpdate", 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment = { 2, "Segment", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x2, 12, methods, 13, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Segment;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->usable_ = 1;
  self->running_ = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP();
  self->equationNeedsUpdate__ = YES;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self, outer$);
  return self;
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble orientation, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint) {
  (void) OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, outer$, leftPoint, rightPoint);
  self->orientation_ = orientation;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jdouble orientation, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withDouble_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, outer$, orientation, leftPoint, rightPoint);
  return self;
}

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->usable_ = 1;
  self->running_ = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_get_STOP();
  self->equationNeedsUpdate__ = YES;
  self->leftPoint_ = leftPoint;
  self->rightPoint_ = rightPoint;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *leftPoint, OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *rightPoint) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_withOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(self, outer$, leftPoint, rightPoint);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
                                                                    withInt:(jint)apex
                                                                withBoolean:(jboolean)isClockWise {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withInt_withBoolean_(self, outer$, apex, isClockWise);
  return self;
}

- (jint)getApexPoint {
  return apex_;
}

- (jint)getVertexIndexWithInt:(jint)i {
  if (isClockWise_) {
    return [((JavaLangInteger *) nil_chk([self getWithInt:[self size] - i - 1])) intValue];
  }
  return [((JavaLangInteger *) nil_chk([self getWithInt:i])) intValue];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:withInt:withBoolean:", "TriangleFan", NULL, 0x1, NULL, NULL },
    { "getApexPoint", NULL, "I", 0x1, NULL, NULL },
    { "getVertexIndexWithInt:", "getVertexIndex", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_serialVersionUID },
    { "isClockWise_", NULL, 0x2, "Z", NULL, NULL,  },
    { "apex_", NULL, 0x2, "I", NULL, NULL,  },
    { "iterator_", NULL, 0x2, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Ljava/lang/Integer;>;",  },
  };
  static const char *superclass_type_args[] = {"Ljava.lang.Integer;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan = { 2, "TriangleFan", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x1, 3, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/ArrayList<Ljava/lang/Integer;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withInt_withBoolean_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jint apex, jboolean isClockWise) {
  (void) JavaUtilArrayList_init(self);
  self->apex_ = apex;
  self->isClockWise_ = isClockWise;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withInt_withBoolean_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, jint apex, jboolean isClockWise) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withInt_withBoolean_(self, outer$, apex, isClockWise);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_TriangleFan)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$
                                                     withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withJavaUtilComparator_(self, outer$, comparator);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:withJavaUtilComparator:", "PolygonPoints", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_serialVersionUID },
    { "needsDiagonals_", NULL, 0x1, "Z", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Point;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints = { 2, "PolygonPoints", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x2, 1, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/TreeSet<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Point;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withJavaUtilComparator_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, id<JavaUtilComparator> comparator) {
  (void) JavaUtilTreeSet_initWithJavaUtilComparator_(self, comparator);
  self->needsDiagonals_ = NO;
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withJavaUtilComparator_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$, id<JavaUtilComparator> comparator) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_withJavaUtilComparator_(self, outer$, comparator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_PolygonPoints)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum)

OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_values_[3];

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_values() {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_values_ count:3 type:OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_values();
}

+ (OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initialize();
  for (int i = 0; i < 3; i++) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *e = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum class]) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_CLOCKWISE = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(@"CLOCKWISE", 0);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_ANTI_CLOCKWISE = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(@"ANTI_CLOCKWISE", 1);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_NOT = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(@"NOT", 2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "CLOCKWISE", "CLOCKWISE", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Convexity;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_CLOCKWISE, NULL,  },
    { "ANTI_CLOCKWISE", "ANTI_CLOCKWISE", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Convexity;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_ANTI_CLOCKWISE, NULL,  },
    { "NOT", "NOT", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Convexity;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_NOT, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Convexity;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum = { 2, "Convexity", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x4019, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Convexity;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ConvexityEnum)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum)

OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values_[3];

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values() {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values_ count:3 type:OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values();
}

+ (OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initialize();
  for (int i = 0; i < 3; i++) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *e = OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum class]) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_RIGHT = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(@"RIGHT", 0);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_LEFT = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(@"LEFT", 1);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_STOP = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(@"STOP", 2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "RIGHT", "RIGHT", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Running;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_RIGHT, NULL,  },
    { "LEFT", "LEFT", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Running;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_LEFT, NULL,  },
    { "STOP", "STOP", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Running;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_STOP, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Running;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum = { 2, "Running", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x401a, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Running;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_RunningEnum)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum)

OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values_[3];

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values() {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values_ count:3 type:OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values();
}

+ (OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initialize();
  for (int i = 0; i < 3; i++) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *e = OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum class]) {
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_BOTH = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(@"BOTH", 0);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_BELOW = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(@"BELOW", 1);
    OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_ABOVE = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(@"ABOVE", 2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "BOTH", "BOTH", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Chain;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_BOTH, NULL,  },
    { "BELOW", "BELOW", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Chain;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_BELOW, NULL,  },
    { "ABOVE", "ABOVE", 0x4019, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Chain;", &OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_ABOVE, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.discrete.PolygonTriangulation$Chain;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum = { 2, "Chain", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x401a, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Chain;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_ChainEnum)

@implementation OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1

- (jint)compareWithId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p1
               withId:(OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *)p2 {
  if (p1 == p2) {
    return 0;
  }
  if (((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(p1))->id__ == ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point *) nil_chk(p2))->id__) {
    if (p1->toRight_ != nil) {
      if (p2->toRight_ == nil) {
        p2->toRight_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(this$0_);
      }
      for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong seg in p1->toRight_) {
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg))->leftPoint_ = p2;
        [p2->toRight_ addWithId:seg];
      }
    }
    if (p1->toLeft_ != nil) {
      if (p2->toLeft_ == nil) {
        p2->toLeft_ = new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_MyTreeSet_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(this$0_);
      }
      for (OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment * __strong seg in p1->toLeft_) {
        ((OrgGeogebraCommonKernelDiscretePolygonTriangulation_Segment *) nil_chk(seg))->rightPoint_ = p2;
        [p2->toLeft_ addWithId:seg];
      }
    }
    if (p1->needsDiagonal_) {
      p2->needsDiagonal_ = YES;
    }
    this$0_->nextNewPointForNonSelfIntersectingPolygon_ = p2;
    return 0;
  }
  return OrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_compareToOnlyWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_Point_(p1, p2);
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:(OrgGeogebraCommonKernelDiscretePolygonTriangulation *)outer$ {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.discrete.PolygonTriangulation;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 = { 2, "", "org.geogebra.common.kernel.discrete", "PolygonTriangulation", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/geogebra/common/kernel/discrete/PolygonTriangulation$Point;>;" };
  return &_OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1;
}

@end

void OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 *self, OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 *new_OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(OrgGeogebraCommonKernelDiscretePolygonTriangulation *outer$) {
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 *self = [OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1 alloc];
  OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1_initWithOrgGeogebraCommonKernelDiscretePolygonTriangulation_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscretePolygonTriangulation_$1)
