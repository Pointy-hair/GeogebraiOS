//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/discrete/AlgoHull.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/discrete/AlgoHull.h"
#include "org/geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint.h"
#include "org/geogebra/common/kernel/discrete/signalprocessor/voronoi/VoronoiAlgorithm.h"
#include "org/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/AbstractRepresentation.h"
#include "org/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/RepresentationFactory.h"
#include "org/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/RepresentationInterface.h"
#include "org/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/TriangulationRepresentation.h"
#include "org/geogebra/common/kernel/discrete/signalprocessor/voronoi/statusstructure/VLinkedNode.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoLocus.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonKernelDiscreteAlgoHull () {
 @public
  OrgGeogebraCommonKernelGeosGeoNumeric *percentage_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscreteAlgoHull, percentage_, OrgGeogebraCommonKernelGeosGeoNumeric *)

@interface OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper () {
 @public
  JavaUtilArrayList *circleevents_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper, circleevents_, JavaUtilArrayList *)

@interface OrgGeogebraCommonKernelDiscreteAlgoHull_$1 : OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff {
 @public
  OrgGeogebraCommonKernelDiscreteAlgoHull *this$0_;
}

- (jint)calculateCutOffWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *)rep;

- (instancetype)initWithOrgGeogebraCommonKernelDiscreteAlgoHull:(OrgGeogebraCommonKernelDiscreteAlgoHull *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelDiscreteAlgoHull_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelDiscreteAlgoHull_$1, this$0_, OrgGeogebraCommonKernelDiscreteAlgoHull *)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscreteAlgoHull_$1_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(OrgGeogebraCommonKernelDiscreteAlgoHull_$1 *self, OrgGeogebraCommonKernelDiscreteAlgoHull *outer$);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscreteAlgoHull_$1 *new_OrgGeogebraCommonKernelDiscreteAlgoHull_$1_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(OrgGeogebraCommonKernelDiscreteAlgoHull *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscreteAlgoHull_$1)

@implementation OrgGeogebraCommonKernelDiscreteAlgoHull

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)inputList
                  withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)percentage {
  OrgGeogebraCommonKernelDiscreteAlgoHull_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, inputList, percentage);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Hull();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:percentage_ == nil ? 1 : 2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, inputList_);
  if (percentage_ != nil) (void) IOSObjectArray_Set(input_, 1, percentage_);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:locus_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoLocus *)getResult {
  return locus_;
}

- (void)compute {
  size_ = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(inputList_)) size];
  if (![inputList_ isDefined] || size_ == 0) {
    [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setUndefined];
    return;
  }
  if (vl_ == nil) vl_ = new_JavaUtilArrayList_init();
  else [vl_ clear];
  IOSDoubleArray *inhom = [IOSDoubleArray newArrayWithLength:2];
  OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *calccutoff = new_OrgGeogebraCommonKernelDiscreteAlgoHull_$1_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(self);
  OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *representation;
  representation = OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createTriangulationRepresentation();
  for (jint i = 0; i < size_; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [inputList_ getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefined] && [geo isGeoPoint]) {
      id<OrgGeogebraCommonKernelKernelNDGeoPointND> p = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
      [p getInhomCoordsWithDoubleArray:inhom];
      [((JavaUtilArrayList *) nil_chk(vl_)) addWithId:[((OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *) nil_chk(representation)) createPointWithDouble:IOSDoubleArray_Get(inhom, 0) withDouble:IOSDoubleArray_Get(inhom, 1)]];
    }
  }
  representation = OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createTriangulationRepresentation();
  OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *trianglarrep = (OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) check_class_cast(representation, [OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation class]);
  [((OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) nil_chk(trianglarrep)) setCalcCutOffWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff:calccutoff];
  OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *representationwrapper = new_OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(self);
  representationwrapper->innerrepresentation_ = representation;
  OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiVoronoiAlgorithm_generateVoronoiWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationInterface_withJavaUtilCollection_(representationwrapper, vl_);
  JavaUtilArrayList *edge = [((OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) nil_chk(((OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) check_class_cast(representation, [OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation class])))) getPointsFormingOutterBoundary];
  if (edge == nil) {
    [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setUndefined];
    return;
  }
  if (al_ == nil) al_ = new_JavaUtilArrayList_init();
  else [al_ clear];
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(edge)) size]; i++) {
    OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *p = [edge getWithInt:i];
    [((JavaUtilArrayList *) nil_chk(al_)) addWithId:new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(((OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *) nil_chk(p))->x_, p->y_, i != 0)];
  }
  [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setPointsWithJavaUtilArrayList:al_];
  [locus_ setDefinedWithBoolean:YES];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoNumeric:", "AlgoHull", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lorg.geogebra.common.kernel.geos.GeoLocus;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputList_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "percentage_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "locus_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoLocus;", NULL, NULL,  },
    { "al_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/MyPoint;>;",  },
    { "vl_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint;>;",  },
    { "size_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.discrete.AlgoHull$TestRepresentationWrapper;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteAlgoHull = { 2, "AlgoHull", "org.geogebra.common.kernel.discrete", NULL, 0x1, 5, methods, 6, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscreteAlgoHull;
}

@end

void OrgGeogebraCommonKernelDiscreteAlgoHull_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelDiscreteAlgoHull *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *inputList, OrgGeogebraCommonKernelGeosGeoNumeric *percentage) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->inputList_ = inputList;
  self->percentage_ = percentage;
  self->locus_ = new_OrgGeogebraCommonKernelGeosGeoLocus_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setInputOutput];
  [self compute];
  [self->locus_ setLabelWithNSString:label];
}

OrgGeogebraCommonKernelDiscreteAlgoHull *new_OrgGeogebraCommonKernelDiscreteAlgoHull_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *inputList, OrgGeogebraCommonKernelGeosGeoNumeric *percentage) {
  OrgGeogebraCommonKernelDiscreteAlgoHull *self = [OrgGeogebraCommonKernelDiscreteAlgoHull alloc];
  OrgGeogebraCommonKernelDiscreteAlgoHull_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, inputList, percentage);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteAlgoHull)

@implementation OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper

- (void)beginAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points {
  [((JavaUtilArrayList *) nil_chk(circleevents_)) clear];
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ beginAlgorithmWithJavaUtilCollection:points];
  }
}

- (void)siteEventWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                 withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                 withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3 {
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ siteEventWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n1 withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n2 withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n3];
  }
}

- (void)circleEventWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                   withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                   withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3
                                                                                               withInt:(jint)circle_x
                                                                                               withInt:(jint)circle_y {
  [((JavaUtilArrayList *) nil_chk(circleevents_)) addWithId:new_OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_initWithDouble_withDouble_(circle_x, circle_y)];
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ circleEventWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n1 withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n2 withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n3 withInt:circle_x withInt:circle_y];
  }
}

- (void)endAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points
                                withDouble:(jdouble)lastsweeplineposition
withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)headnode {
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ endAlgorithmWithJavaUtilCollection:points withDouble:lastsweeplineposition withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:headnode];
  }
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscreteAlgoHull:(OrgGeogebraCommonKernelDiscreteAlgoHull *)outer$ {
  OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "beginAlgorithmWithJavaUtilCollection:", "beginAlgorithm", "V", 0x1, NULL, NULL },
    { "siteEventWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "siteEvent", "V", 0x1, NULL, NULL },
    { "circleEventWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withInt:withInt:", "circleEvent", "V", 0x1, NULL, NULL },
    { "endAlgorithmWithJavaUtilCollection:withDouble:withOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "endAlgorithm", "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelDiscreteAlgoHull:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "circleevents_", NULL, 0x12, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint;>;",  },
    { "innerrepresentation_", NULL, 0x0, "Lorg.geogebra.common.kernel.discrete.signalprocessor.voronoi.representation.RepresentationInterface;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper = { 2, "TestRepresentationWrapper", "org.geogebra.common.kernel.discrete", "AlgoHull", 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper;
}

@end

void OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *self, OrgGeogebraCommonKernelDiscreteAlgoHull *outer$) {
  (void) NSObject_init(self);
  self->circleevents_ = new_JavaUtilArrayList_init();
  self->innerrepresentation_ = nil;
}

OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *new_OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(OrgGeogebraCommonKernelDiscreteAlgoHull *outer$) {
  OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *self = [OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper alloc];
  OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper)

@implementation OrgGeogebraCommonKernelDiscreteAlgoHull_$1

- (jint)calculateCutOffWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:(OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *)rep {
  jdouble percent = (this$0_->percentage_ == nil || ![this$0_->percentage_ isDefined]) ? 1 : [this$0_->percentage_ getDouble];
  if (percent < 0) percent = 0;
  else if (percent > 1) percent = 1;
  jdouble min = [((OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) nil_chk(rep)) getMinLength];
  jdouble max = [rep getMaxLength];
  jint val = J2ObjCFpToInt((percent * (max - min) + min));
  return val;
}

- (instancetype)initWithOrgGeogebraCommonKernelDiscreteAlgoHull:(OrgGeogebraCommonKernelDiscreteAlgoHull *)outer$ {
  OrgGeogebraCommonKernelDiscreteAlgoHull_$1_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateCutOffWithOrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:", "calculateCutOff", "I", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelDiscreteAlgoHull:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.kernel.discrete.AlgoHull;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelDiscreteAlgoHull", "compute" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteAlgoHull_$1 = { 2, "", "org.geogebra.common.kernel.discrete", "AlgoHull", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgGeogebraCommonKernelDiscreteAlgoHull_$1;
}

@end

void OrgGeogebraCommonKernelDiscreteAlgoHull_$1_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(OrgGeogebraCommonKernelDiscreteAlgoHull_$1 *self, OrgGeogebraCommonKernelDiscreteAlgoHull *outer$) {
  self->this$0_ = outer$;
  (void) OrgGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_init(self);
}

OrgGeogebraCommonKernelDiscreteAlgoHull_$1 *new_OrgGeogebraCommonKernelDiscreteAlgoHull_$1_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(OrgGeogebraCommonKernelDiscreteAlgoHull *outer$) {
  OrgGeogebraCommonKernelDiscreteAlgoHull_$1 *self = [OrgGeogebraCommonKernelDiscreteAlgoHull_$1 alloc];
  OrgGeogebraCommonKernelDiscreteAlgoHull_$1_initWithOrgGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteAlgoHull_$1)
