//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/discrete/AlgoDelauneyTriangulation.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/awt/GPoint2D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/discrete/AlgoDelauneyTriangulation.h"
#include "org/geogebra/common/kernel/discrete/AlgoHull.h"
#include "org/geogebra/common/kernel/discrete/MyLine.h"
#include "org/geogebra/common/kernel/discrete/delaunay/Delaunay_Triangulation.h"
#include "org/geogebra/common/kernel/discrete/delaunay/Point_dt.h"
#include "org/geogebra/common/kernel/discrete/delaunay/Triangle_dt.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoLocus.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

static id<JavaUtilComparator> OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_lineComparator_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation, lineComparator_, id<JavaUtilComparator>)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation, lineComparator_, id<JavaUtilComparator>)

@interface OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgGeogebraCommonKernelDiscreteMyLine *)itemA
               withId:(OrgGeogebraCommonKernelDiscreteMyLine *)itemB;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1)

__attribute__((unused)) static void OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1_init(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 *self);

__attribute__((unused)) static OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 *new_OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1)

@implementation OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                     withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)inputList {
  OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, inputList);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_DelauneyTriangulation();
}

- (void)compute {
  size_ = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(inputList_)) size];
  if (![inputList_ isDefined] || size_ == 0) {
    [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setUndefined];
    return;
  }
  IOSDoubleArray *inhom = [IOSDoubleArray arrayWithLength:2];
  IOSObjectArray *points = [IOSObjectArray arrayWithLength:size_ type:OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt_class_()];
  for (jint i = 0; i < size_; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [inputList_ getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefined] && [geo isGeoPoint]) {
      id<OrgGeogebraCommonKernelKernelNDGeoPointND> p = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
      [p getInhomCoordsWithDoubleArray:inhom];
      IOSObjectArray_SetAndConsume(points, i, new_OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt_initWithDouble_withDouble_(IOSDoubleArray_Get(inhom, 0), IOSDoubleArray_Get(inhom, 1)));
    }
  }
  OrgGeogebraCommonKernelDiscreteDelaunayDelaunay_Triangulation *dt = [new_OrgGeogebraCommonKernelDiscreteDelaunayDelaunay_Triangulation_initWithOrgGeogebraCommonKernelDiscreteDelaunayPoint_dtArray_(points) autorelease];
  if (dt->allCollinear_) {
    [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setUndefined];
    return;
  }
  id<JavaUtilIterator> it = [dt trianglesIterator];
  if (al_ == nil) {
    OrgGeogebraCommonKernelDiscreteAlgoHull_setAndConsume_al_(self, new_JavaUtilArrayList_init());
  }
  else {
    [al_ clear];
  }
  JavaUtilTreeSet *tree = [new_JavaUtilTreeSet_initWithJavaUtilComparator_(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_getComparator()) autorelease];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    OrgGeogebraCommonKernelDiscreteDelaunayTriangle_dt *triangle = [it next];
    [tree addWithId:[new_OrgGeogebraCommonKernelDiscreteMyLine_initWithOrgGeogebraCommonAwtGPoint2D_withOrgGeogebraCommonAwtGPoint2D_([new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_([((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([((OrgGeogebraCommonKernelDiscreteDelaunayTriangle_dt *) nil_chk(triangle)) p1])) x], [((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p1])) y]) autorelease], [new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_([((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p2])) x], [((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p2])) y]) autorelease]) autorelease]];
    if ([triangle p3] != nil) {
      [tree addWithId:[new_OrgGeogebraCommonKernelDiscreteMyLine_initWithOrgGeogebraCommonAwtGPoint2D_withOrgGeogebraCommonAwtGPoint2D_([new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_([((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p2])) x], [((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p2])) y]) autorelease], [new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_([((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p3])) x], [((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p3])) y]) autorelease]) autorelease]];
      [tree addWithId:[new_OrgGeogebraCommonKernelDiscreteMyLine_initWithOrgGeogebraCommonAwtGPoint2D_withOrgGeogebraCommonAwtGPoint2D_([new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_([((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p3])) x], [((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p3])) y]) autorelease], [new_OrgGeogebraCommonAwtGPoint2D_Double_initWithDouble_withDouble_([((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p1])) x], [((OrgGeogebraCommonKernelDiscreteDelaunayPoint_dt *) nil_chk([triangle p1])) y]) autorelease]) autorelease]];
    }
  }
  id<JavaUtilIterator> it2 = [tree iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it2)) hasNext]) {
    OrgGeogebraCommonKernelDiscreteMyLine *line = [it2 next];
    [((JavaUtilArrayList *) nil_chk(al_)) addWithId:[new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_([((OrgGeogebraCommonAwtGPoint2D *) nil_chk(((OrgGeogebraCommonKernelDiscreteMyLine *) nil_chk(line))->p1_)) getX], [line->p1_ getY], NO) autorelease]];
    [al_ addWithId:[new_OrgGeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_([((OrgGeogebraCommonAwtGPoint2D *) nil_chk(line->p2_)) getX], [line->p2_ getY], YES) autorelease]];
  }
  [((OrgGeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setPointsWithJavaUtilArrayList:al_];
  [locus_ setDefinedWithBoolean:YES];
}

+ (id<JavaUtilComparator>)getComparator {
  return OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_getComparator();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoList:", "AlgoDelauneyTriangulation", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getComparator", NULL, "Ljava.util.Comparator;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "lineComparator_", NULL, 0xa, "Ljava.util.Comparator;", &OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_lineComparator_, "Ljava/util/Comparator<Lorg/geogebra/common/kernel/discrete/MyLine;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation = { 2, "AlgoDelauneyTriangulation", "org.geogebra.common.kernel.discrete", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation;
}

@end

void OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *inputList) {
  OrgGeogebraCommonKernelDiscreteAlgoHull_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, inputList, nil);
}

OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation *new_OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoList *inputList) {
  OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation *self = [OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation alloc];
  OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoList_(self, cons, label, inputList);
  return self;
}

id<JavaUtilComparator> OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_getComparator() {
  OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_initialize();
  if (OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_lineComparator_ == nil) {
    JreStrongAssignAndConsume(&OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_lineComparator_, nil, new_OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1_init());
  }
  return OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_lineComparator_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation)

@implementation OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1

- (jint)compareWithId:(OrgGeogebraCommonKernelDiscreteMyLine *)itemA
               withId:(OrgGeogebraCommonKernelDiscreteMyLine *)itemB {
  OrgGeogebraCommonAwtGPoint2D *p1A = ((OrgGeogebraCommonKernelDiscreteMyLine *) nil_chk(itemA))->p1_;
  OrgGeogebraCommonAwtGPoint2D *p2A = itemA->p2_;
  OrgGeogebraCommonAwtGPoint2D *p1B = ((OrgGeogebraCommonKernelDiscreteMyLine *) nil_chk(itemB))->p1_;
  OrgGeogebraCommonAwtGPoint2D *p2B = itemB->p2_;
  if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p1A)) getX], [((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p2B)) getX]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([p1A getY], [p2B getY]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p2A)) getX], [((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p1B)) getX]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([p2A getY], [p1B getY])) {
    return 0;
  }
  if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([p1A getX], [((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p1B)) getX]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([p1A getY], [p1B getY]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p2A)) getX], [p2B getX]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([p2A getY], [p2B getY])) {
    return 0;
  }
  return [itemA lengthSquared] > [itemB lengthSquared] ? -1 : 1;
}

- (instancetype)init {
  OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation", "getComparator" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 = { 2, "", "org.geogebra.common.kernel.discrete", "AlgoDelauneyTriangulation", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/geogebra/common/kernel/discrete/MyLine;>;" };
  return &_OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1;
}

@end

void OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1_init(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 *self) {
  NSObject_init(self);
}

OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 *new_OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1_init() {
  OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 *self = [OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1 alloc];
  OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteAlgoDelauneyTriangulation_$1)
