//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/discrete/tsp/model/Node.java
//


#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/kernel/discrete/tsp/model/Node.h"

@interface OrgGeogebraCommonKernelDiscreteTspModelNode () {
 @public
  jdouble x_;
  jdouble y_;
}

@end

@implementation OrgGeogebraCommonKernelDiscreteTspModelNode

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y {
  OrgGeogebraCommonKernelDiscreteTspModelNode_initWithDouble_withDouble_(self, x, y);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgGeogebraCommonKernelDiscreteTspModelNode class]]) {
    OrgGeogebraCommonKernelDiscreteTspModelNode *node = (OrgGeogebraCommonKernelDiscreteTspModelNode *) check_class_cast(obj, [OrgGeogebraCommonKernelDiscreteTspModelNode class]);
    return self->x_ == ((OrgGeogebraCommonKernelDiscreteTspModelNode *) nil_chk(node))->x_ && self->y_ == node->y_;
  }
  return NO;
}

- (jdouble)getDistanceWithOrgGeogebraCommonKernelDiscreteTspModelNode:(OrgGeogebraCommonKernelDiscreteTspModelNode *)node {
  jdouble dx = self->x_ - ((OrgGeogebraCommonKernelDiscreteTspModelNode *) nil_chk(node))->x_;
  jdouble dy = self->y_ - node->y_;
  return JavaLangMath_sqrtWithDouble_(dx * dx + dy * dy);
}

- (jdouble)getX {
  return self->x_;
}

- (jdouble)getY {
  return self->y_;
}

- (NSString *)description {
  return JreStrcat("DCD", self->x_, ',', self->y_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDouble:withDouble:", "Node", NULL, 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "getDistanceWithOrgGeogebraCommonKernelDiscreteTspModelNode:", "getDistance", "D", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x2, "D", NULL, NULL,  },
    { "y_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteTspModelNode = { 2, "Node", "org.geogebra.common.kernel.discrete.tsp.model", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscreteTspModelNode;
}

@end

void OrgGeogebraCommonKernelDiscreteTspModelNode_initWithDouble_withDouble_(OrgGeogebraCommonKernelDiscreteTspModelNode *self, jdouble x, jdouble y) {
  (void) NSObject_init(self);
  self->x_ = x;
  self->y_ = y;
}

OrgGeogebraCommonKernelDiscreteTspModelNode *new_OrgGeogebraCommonKernelDiscreteTspModelNode_initWithDouble_withDouble_(jdouble x, jdouble y) {
  OrgGeogebraCommonKernelDiscreteTspModelNode *self = [OrgGeogebraCommonKernelDiscreteTspModelNode alloc];
  OrgGeogebraCommonKernelDiscreteTspModelNode_initWithDouble_withDouble_(self, x, y);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteTspModelNode)
