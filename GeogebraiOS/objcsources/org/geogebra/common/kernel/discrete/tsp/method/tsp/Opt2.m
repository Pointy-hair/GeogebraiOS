//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/discrete/tsp/method/tsp/Opt2.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/geogebra/common/kernel/discrete/tsp/method/tsp/Opt2.h"
#include "org/geogebra/common/kernel/discrete/tsp/model/Node.h"

@implementation OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2

- (jboolean)methodWithJavaUtilList:(id<JavaUtilList>)route {
  jint length = [((id<JavaUtilList>) nil_chk(route)) size];
  for (jint i = 1; i < length - 1; i++) {
    OrgGeogebraCommonKernelDiscreteTspModelNode *s1 = [route getWithInt:i - 1];
    OrgGeogebraCommonKernelDiscreteTspModelNode *t1 = [route getWithInt:i % length];
    jdouble d1 = [((OrgGeogebraCommonKernelDiscreteTspModelNode *) nil_chk(s1)) getDistanceWithOrgGeogebraCommonKernelDiscreteTspModelNode:t1];
    for (jint j = i + 2; j <= length; j++) {
      OrgGeogebraCommonKernelDiscreteTspModelNode *s2 = [route getWithInt:j - 1];
      OrgGeogebraCommonKernelDiscreteTspModelNode *t2 = [route getWithInt:j % length];
      jdouble before = d1 + [((OrgGeogebraCommonKernelDiscreteTspModelNode *) nil_chk(s2)) getDistanceWithOrgGeogebraCommonKernelDiscreteTspModelNode:t2];
      jdouble after = [s1 getDistanceWithOrgGeogebraCommonKernelDiscreteTspModelNode:s2] + [((OrgGeogebraCommonKernelDiscreteTspModelNode *) nil_chk(t1)) getDistanceWithOrgGeogebraCommonKernelDiscreteTspModelNode:t2];
      if (before > after) {
        for (jint k = 0; k < (j - i) / 2; k++) {
          OrgGeogebraCommonKernelDiscreteTspModelNode *tmp = [route getWithInt:(k + i) % length];
          (void) [route setWithInt:(k + i) % length withId:[route getWithInt:(j - k - 1) % length]];
          (void) [route setWithInt:(j - k - 1) % length withId:tmp];
        }
        return YES;
      }
    }
  }
  return NO;
}

- (jboolean)methodWithIntArray:(IOSIntArray *)route
              withDoubleArray2:(IOSObjectArray *)table {
  jint length = ((IOSIntArray *) nil_chk(route))->size_;
  for (jint i = 1; i < length - 1; i++) {
    jint s1 = IOSIntArray_Get(route, i - 1);
    jint t1 = IOSIntArray_Get(route, i % length);
    jdouble d1 = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(table), s1)), t1);
    for (jint j = i + 2; j <= length; j++) {
      jint s2 = IOSIntArray_Get(route, j - 1);
      jint t2 = IOSIntArray_Get(route, j % length);
      jdouble before = d1 + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(table, s2)), t2);
      jdouble after = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(table, s1)), s2) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(table, t1)), t2);
      if (before > after) {
        for (jint k = 0; k < (j - i) / 2; k++) {
          jint tmp = IOSIntArray_Get(route, (k + i) % length);
          *IOSIntArray_GetRef(route, (k + i) % length) = IOSIntArray_Get(route, (j - k - 1) % length);
          *IOSIntArray_GetRef(route, (j - k - 1) % length) = tmp;
        }
        return YES;
      }
    }
  }
  return NO;
}

- (NSString *)description {
  return @"2-Opt";
}

- (instancetype)init {
  OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "methodWithJavaUtilList:", "method", "Z", 0x1, NULL, NULL },
    { "methodWithIntArray:withDoubleArray2:", "method", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2 = { 2, "Opt2", "org.geogebra.common.kernel.discrete.tsp.method.tsp", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2;
}

@end

void OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2_init(OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2 *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2 *new_OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2_init() {
  OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2 *self = [OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2 alloc];
  OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteTspMethodTspOpt2)
