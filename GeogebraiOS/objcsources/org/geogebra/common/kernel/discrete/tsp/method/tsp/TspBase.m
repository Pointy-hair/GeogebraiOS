//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/discrete/tsp/method/tsp/TspBase.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/discrete/tsp/method/tsp/TspBase.h"
#include "org/geogebra/common/kernel/discrete/tsp/model/Node.h"

@implementation OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase

- (IOSObjectArray *)getCostTableWithOrgGeogebraCommonKernelDiscreteTspModelNodeArray:(IOSObjectArray *)nodes {
  IOSObjectArray *table = [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ ((IOSObjectArray *) nil_chk(nodes))->size_, nodes->size_ }];
  for (jint i = 0; i < nodes->size_; i++) {
    for (jint j = 0; j < nodes->size_; j++) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(table, i)), j) = [((OrgGeogebraCommonKernelDiscreteTspModelNode *) nil_chk(IOSObjectArray_Get(nodes, i))) getDistanceWithOrgGeogebraCommonKernelDiscreteTspModelNode:IOSObjectArray_Get(nodes, j)];
    }
  }
  return table;
}

- (instancetype)init {
  OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getCostTableWithOrgGeogebraCommonKernelDiscreteTspModelNodeArray:", "getCostTable", "[[D", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase = { 2, "TspBase", "org.geogebra.common.kernel.discrete.tsp.method.tsp", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase;
}

@end

void OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase_init(OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase *new_OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase_init() {
  OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase *self = [OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase alloc];
  OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelDiscreteTspMethodTspTspBase)
