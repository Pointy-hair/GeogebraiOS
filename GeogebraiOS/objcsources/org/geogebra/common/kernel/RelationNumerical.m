//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/RelationNumerical.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Comparator.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/RelationNumerical.h"
#include "org/geogebra/common/kernel/algos/AlgoIntersectConics.h"
#include "org/geogebra/common/kernel/algos/AlgoIntersectLineConic.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoConicPart.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/geos/GeoVec3D.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonKernelRelationNumerical () {
 @public
  OrgGeogebraCommonMainApp *app_;
  OrgGeogebraCommonMainLocalization *loc_;
  OrgGeogebraCommonKernelConstruction *cons_;
  id<JavaUtilSet> reports_;
}

- (void)register__WithJavaLangBoolean:(JavaLangBoolean *)boolres
withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                         withNSString:(NSString *)stringres;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)a
                           withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)b;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
                           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)a
                           withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)b;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                           withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)B;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *)a
                           withOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *)b;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                         withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)p;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                                   withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)g
                           withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)h;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)g
                          withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)c;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoConicPart:(OrgGeogebraCommonKernelGeosGeoConicPart *)a
                           withOrgGeogebraCommonKernelGeosGeoConicPart:(OrgGeogebraCommonKernelGeosGeoConicPart *)b;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)a
                           withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)b;

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)a
                           withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)b;

- (NSString *)equalityStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                          withBoolean:(jboolean)equal;

- (NSString *)linDependencyStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                                 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                               withBoolean:(jboolean)dependent;

- (NSString *)incidenceStringWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)a
                           withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                         withBoolean:(jboolean)incident;

- (NSString *)incidencePerimeterStringWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)a
                                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                                  withBoolean:(jboolean)incident;

- (NSString *)parallelStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                            withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)b;

- (NSString *)triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                                         withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)B
                                         withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)C;

- (NSString *)perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                                 withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)b
                                                            withBoolean:(jboolean)perp;

- (NSString *)intersectStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                             withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                           withBoolean:(jboolean)intersects;

- (NSString *)lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                            withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)b
                                                            withInt:(jint)type;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelationNumerical, app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelationNumerical, loc_, OrgGeogebraCommonMainLocalization *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelationNumerical, cons_, OrgGeogebraCommonKernelConstruction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonKernelRelationNumerical, reports_, id<JavaUtilSet>)

__attribute__((unused)) static void OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(OrgGeogebraCommonKernelRelationNumerical *self, JavaLangBoolean *boolres, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, NSString *stringres);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoList *a, OrgGeogebraCommonKernelGeosGeoList *b);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelRelationNumerical *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelKernelNDGeoSegmentND_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(OrgGeogebraCommonKernelRelationNumerical *self, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> a, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> b);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoPoint *B);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelGeosGeoVector_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoVector *a, OrgGeogebraCommonKernelGeosGeoVector *b);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoPolygon *p);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *A, id<OrgGeogebraCommonKernelPath> path);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *g, OrgGeogebraCommonKernelGeosGeoLine *h);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *g, OrgGeogebraCommonKernelGeosGeoConic *c);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConicPart_withOrgGeogebraCommonKernelGeosGeoConicPart_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoConicPart *a, OrgGeogebraCommonKernelGeosGeoConicPart *b);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConic_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoConic *a, OrgGeogebraCommonKernelGeosGeoConic *b);

__attribute__((unused)) static id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoFunction *a, OrgGeogebraCommonKernelGeosGeoFunction *b);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean equal);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_linDependencyStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean dependent);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_incidenceStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean incident);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_incidencePerimeterStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean incident);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoLine *b);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoLine *b, jboolean perp);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean intersects);

__attribute__((unused)) static NSString *OrgGeogebraCommonKernelRelationNumerical_lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_withInt_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoConic *b, jint type);

__attribute__((unused)) static void OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *new_OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgGeogebraCommonKernelRelationNumerical_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgGeogebraCommonKernelRelationNumerical_Report *)r1
               withId:(OrgGeogebraCommonKernelRelationNumerical_Report *)r2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelRelationNumerical_$1)

__attribute__((unused)) static void OrgGeogebraCommonKernelRelationNumerical_$1_init(OrgGeogebraCommonKernelRelationNumerical_$1 *self);

__attribute__((unused)) static OrgGeogebraCommonKernelRelationNumerical_$1 *new_OrgGeogebraCommonKernelRelationNumerical_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelRelationNumerical_$1)

@implementation OrgGeogebraCommonKernelRelationNumerical

+ (id<JavaUtilSortedSet>)sortAlphabeticallyWithJavaUtilSet:(id<JavaUtilSet>)reports {
  return OrgGeogebraCommonKernelRelationNumerical_sortAlphabeticallyWithJavaUtilSet_(reports);
}

- (void)register__WithJavaLangBoolean:(JavaLangBoolean *)boolres
withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                         withNSString:(NSString *)stringres {
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, boolres, command, stringres);
}

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonKernelRelationNumerical_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                           withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) isDefined]) {
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, nil, nil, [((OrgGeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"AisNotDefined" withNSString:[a getColoredLabel]]);
    return reports_;
  }
  else if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isDefined]) {
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, nil, nil, [((OrgGeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"AisNotDefined" withNSString:[b getColoredLabel]]);
    return reports_;
  }
  if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(self, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoPoint class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoVector class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoVector class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelGeosGeoVector_(self, (OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoVector class]), (OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoVector class]));
  else if ([OrgGeogebraCommonKernelKernelNDGeoSegmentND_class_() isInstance:a] && [OrgGeogebraCommonKernelKernelNDGeoSegmentND_class_() isInstance:b]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelKernelNDGeoSegmentND_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(self, (id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) check_protocol_cast(a, @protocol(OrgGeogebraCommonKernelKernelNDGeoSegmentND)), (id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) check_protocol_cast(b, @protocol(OrgGeogebraCommonKernelKernelNDGeoSegmentND)));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(self, (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]), (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConicPart class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConicPart class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConicPart_withOrgGeogebraCommonKernelGeosGeoConicPart_(self, (OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConicPart class]), (OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoConicPart class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConic class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConic class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConic_withOrgGeogebraCommonKernelGeosGeoConic_(self, (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConic class]), (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoConic class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoFunction class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_(self, (OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoFunction class]), (OrgGeogebraCommonKernelGeosGeoFunction *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoFunction class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPolygon class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPolygon_(self, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPolygon *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoPolygon class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPolygon class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPolygon_(self, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPolygon *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoPolygon class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]] && [OrgGeogebraCommonKernelPath_class_() isInstance:b]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(self, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoPoint class]), (id<OrgGeogebraCommonKernelPath>) check_protocol_cast(b, @protocol(OrgGeogebraCommonKernelPath)));
  else if ([OrgGeogebraCommonKernelPath_class_() isInstance:a] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPoint class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(self, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoPoint class]), (id<OrgGeogebraCommonKernelPath>) check_protocol_cast(a, @protocol(OrgGeogebraCommonKernelPath)));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConic class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(self, (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]), (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConic class]));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoConic class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(self, (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]), (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoConic class]));
  else if ([OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:a] && [OrgGeogebraCommonKernelArithmeticNumberValue_class_() isInstance:b]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(a, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)), (id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(b, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue)));
  else if ([a isKindOfClass:[OrgGeogebraCommonKernelGeosGeoList class]] && [b isKindOfClass:[OrgGeogebraCommonKernelGeosGeoList class]]) return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(self, (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoList class]), (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoList class]));
  else {
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, nil, nil, [((OrgGeogebraCommonMainLocalization *) nil_chk(loc_)) getPlainWithNSString:@"AandBcannotBeCompared" withNSString:[a getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]]);
    return reports_;
  }
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)a
                           withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)b {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(self, a, b);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
                           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)b {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, a, b);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)a
                           withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)b {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelKernelNDGeoSegmentND_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(self, a, b);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                           withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)B {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(self, A, B);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *)a
                           withOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *)b {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelGeosGeoVector_(self, a, b);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                         withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)p {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPolygon_(self, A, p);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                                   withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(self, A, path);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)g
                           withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)h {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(self, g, h);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)g
                          withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)c {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(self, g, c);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoConicPart:(OrgGeogebraCommonKernelGeosGeoConicPart *)a
                           withOrgGeogebraCommonKernelGeosGeoConicPart:(OrgGeogebraCommonKernelGeosGeoConicPart *)b {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConicPart_withOrgGeogebraCommonKernelGeosGeoConicPart_(self, a, b);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)a
                           withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)b {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConic_withOrgGeogebraCommonKernelGeosGeoConic_(self, a, b);
}

- (id<JavaUtilSet>)relationWithOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)a
                           withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)b {
  return OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_(self, a, b);
}

- (NSString *)equalityStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                          withBoolean:(jboolean)equal {
  return OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, equal);
}

+ (NSString *)equalityStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                          withBoolean:(jboolean)equal
                                withOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)loc {
  return OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_withOrgGeogebraCommonMainLocalization_(a, b, equal, loc);
}

- (NSString *)linDependencyStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                                 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                               withBoolean:(jboolean)dependent {
  return OrgGeogebraCommonKernelRelationNumerical_linDependencyStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, dependent);
}

- (NSString *)incidenceStringWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)a
                           withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                         withBoolean:(jboolean)incident {
  return OrgGeogebraCommonKernelRelationNumerical_incidenceStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, incident);
}

- (NSString *)incidencePerimeterStringWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)a
                                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                                  withBoolean:(jboolean)incident {
  return OrgGeogebraCommonKernelRelationNumerical_incidencePerimeterStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, incident);
}

- (NSString *)parallelStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                            withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)b {
  return OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(self, a, b);
}

+ (NSString *)parallelStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                            withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)b
                             withOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)loc {
  return OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonMainLocalization_(a, b, loc);
}

- (NSString *)triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                                         withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)B
                                         withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)C {
  return OrgGeogebraCommonKernelRelationNumerical_triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonMainLocalization_(A, B, C, loc_);
}

+ (NSString *)triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)A
                                         withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)B
                                         withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)C
                                           withOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)loc {
  return OrgGeogebraCommonKernelRelationNumerical_triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonMainLocalization_(A, B, C, loc);
}

- (NSString *)perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                                 withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)b
                                                            withBoolean:(jboolean)perp {
  return OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_(self, a, b, perp);
}

+ (NSString *)perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                                 withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)b
                                                            withBoolean:(jboolean)perp
                                  withOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)loc {
  return OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_withOrgGeogebraCommonMainLocalization_(a, b, perp, loc);
}

- (NSString *)intersectStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                             withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                           withBoolean:(jboolean)intersects {
  return OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, intersects);
}

+ (NSString *)intersectStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                             withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                           withBoolean:(jboolean)intersects
                                 withOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)loc {
  return OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_withOrgGeogebraCommonMainLocalization_(a, b, intersects, loc);
}

- (NSString *)lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)a
                            withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)b
                                                            withInt:(jint)type {
  return OrgGeogebraCommonKernelRelationNumerical_lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_withInt_(self, a, b, type);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "sortAlphabeticallyWithJavaUtilSet:", "sortAlphabetically", "Ljava.util.SortedSet;", 0x9, NULL, NULL },
    { "register__WithJavaLangBoolean:withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:withNSString:", "register", "V", 0x2, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernel:", "RelationNumerical", NULL, 0x1, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "relation", "Ljava.util.Set;", 0x11, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoList:withOrgGeogebraCommonKernelGeosGeoList:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:withOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoVector:withOrgGeogebraCommonKernelGeosGeoVector:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPolygon:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelPath:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelGeosGeoLine:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelGeosGeoConic:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoConicPart:withOrgGeogebraCommonKernelGeosGeoConicPart:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoConic:withOrgGeogebraCommonKernelGeosGeoConic:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "relationWithOrgGeogebraCommonKernelGeosGeoFunction:withOrgGeogebraCommonKernelGeosGeoFunction:", "relation", "Ljava.util.Set;", 0x12, NULL, NULL },
    { "equalityStringWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "equalityString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "equalityStringWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:withOrgGeogebraCommonMainLocalization:", "equalityString", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "linDependencyStringWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "linDependencyString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "incidenceStringWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "incidenceString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "incidencePerimeterStringWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "incidencePerimeterString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "parallelStringWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelGeosGeoLine:", "parallelString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "parallelStringWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonMainLocalization:", "parallelString", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:", "triangleNonDegenerateString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonMainLocalization:", "triangleNonDegenerateString", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelGeosGeoLine:withBoolean:", "perpendicularString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelGeosGeoLine:withBoolean:withOrgGeogebraCommonMainLocalization:", "perpendicularString", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "intersectStringWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "intersectString", "Ljava.lang.String;", 0x12, NULL, NULL },
    { "intersectStringWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:withOrgGeogebraCommonMainLocalization:", "intersectString", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonKernelGeosGeoConic:withInt:", "lineConicString", "Ljava.lang.String;", 0x12, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "loc_", NULL, 0x2, "Lorg.geogebra.common.main.Localization;", NULL, NULL,  },
    { "cons_", NULL, 0x2, "Lorg.geogebra.common.kernel.Construction;", NULL, NULL,  },
    { "reports_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/geogebra/common/kernel/RelationNumerical$Report;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.RelationNumerical$Report;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelRelationNumerical = { 2, "RelationNumerical", "org.geogebra.common.kernel", NULL, 0x1, 30, methods, 4, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelRelationNumerical;
}

@end

id<JavaUtilSortedSet> OrgGeogebraCommonKernelRelationNumerical_sortAlphabeticallyWithJavaUtilSet_(id<JavaUtilSet> reports) {
  OrgGeogebraCommonKernelRelationNumerical_initialize();
  id<JavaUtilComparator> myComparator = new_OrgGeogebraCommonKernelRelationNumerical_$1_init();
  JavaUtilTreeSet *sortedReports = new_JavaUtilTreeSet_initWithJavaUtilComparator_(myComparator);
  [sortedReports addAllWithJavaUtilCollection:reports];
  return sortedReports;
}

void OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(OrgGeogebraCommonKernelRelationNumerical *self, JavaLangBoolean *boolres, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, NSString *stringres) {
  OrgGeogebraCommonKernelRelationNumerical_Report *r = new_OrgGeogebraCommonKernelRelationNumerical_Report_initWithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(boolres, command, stringres);
  [((id<JavaUtilSet>) nil_chk(self->reports_)) addWithId:r];
}

void OrgGeogebraCommonKernelRelationNumerical_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) NSObject_init(self);
  self->app_ = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getApplication];
  self->loc_ = [((OrgGeogebraCommonMainApp *) nil_chk(self->app_)) getLocalization];
  self->cons_ = [kernel getConstruction];
  self->reports_ = new_JavaUtilHashSet_init();
}

OrgGeogebraCommonKernelRelationNumerical *new_OrgGeogebraCommonKernelRelationNumerical_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelRelationNumerical *self = [OrgGeogebraCommonKernelRelationNumerical alloc];
  OrgGeogebraCommonKernelRelationNumerical_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoList_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoList *a, OrgGeogebraCommonKernelGeosGeoList *b) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(a)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:b]);
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, [a toGeoElement], [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(b)) toGeoElement], [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreEqual(), str);
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelRelationNumerical *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelArithmeticNumberValue> b) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_(OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) getDouble], [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(b)) getDouble]));
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, [a toGeoElement], [b toGeoElement], [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreEqual(), str);
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelKernelNDGeoSegmentND_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(OrgGeogebraCommonKernelRelationNumerical *self, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> a, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> b) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_([((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(a)) isEqualWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:b]);
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoElement class]), (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoElement class]), [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, nil, str);
  if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([(a) getDouble], [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk((b))) getDouble])) {
    str = [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AhasTheSameLengthAsB" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoElement class])) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoElement class])))) getColoredLabel]];
    bool_ = JavaLangBoolean_valueOfWithBoolean_(YES);
  }
  else {
    str = [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AdoesNothaveTheSameLengthAsB" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoElement class])) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoElement class])))) getColoredLabel]];
    bool_ = JavaLangBoolean_valueOfWithBoolean_(NO);
  }
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreEqual(), str);
  bool_ = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class])) isParallelWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class])]);
  if ([bool_ booleanValue]) {
    str = OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(self, (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]), (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]));
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreParallel(), str);
  }
  bool_ = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class])) isPerpendicularWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class])]);
  if ([bool_ booleanValue]) {
    str = OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_(self, (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]), (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]), YES);
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_ArePerpendicular(), str);
  }
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoPoint *B) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:B]);
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, A, B, [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreEqual(), str);
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoVector_withOrgGeogebraCommonKernelGeosGeoVector_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoVector *a, OrgGeogebraCommonKernelGeosGeoVector *b) {
  NSString *str;
  JavaLangBoolean *bool_;
  if ([((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(a)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:b]) {
    str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, YES);
    bool_ = JavaLangBoolean_valueOfWithBoolean_(YES);
  }
  else {
    str = OrgGeogebraCommonKernelRelationNumerical_linDependencyStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, [a linDepWithOrgGeogebraCommonKernelGeosGeoVec3D:b]);
    bool_ = JavaLangBoolean_valueOfWithBoolean_(NO);
  }
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreEqual(), str);
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoPolygon *p) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(p)) isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:A withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]);
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_incidencePerimeterStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, A, [p toGeoElement], [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, nil, str);
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelPath_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *A, id<OrgGeogebraCommonKernelPath> path) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_([((id<OrgGeogebraCommonKernelPath>) nil_chk(path)) isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:A withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]);
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_incidenceStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, A, [path toGeoElement], [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_IsOnPath(), str);
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *g, OrgGeogebraCommonKernelGeosGeoLine *h) {
  NSString *str;
  if ([((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(g)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:h]) {
    str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, g, h, YES);
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreEqual(), str);
  }
  else {
    if ([g isParallelWithOrgGeogebraCommonKernelGeosGeoLine:h]) {
      str = OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(self, g, h);
      OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_AreParallel(), str);
    }
    else if ([g isPerpendicularWithOrgGeogebraCommonKernelGeosGeoLine:h]) {
      str = OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_(self, g, h, YES);
      OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_get_ArePerpendicular(), str);
    }
    else {
      OrgGeogebraCommonKernelGeosGeoPoint *tempPoint = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(g->cons_);
      OrgGeogebraCommonKernelGeosGeoVec3D_crossWithOrgGeogebraCommonKernelGeosGeoVec3D_withOrgGeogebraCommonKernelGeosGeoVec3D_withOrgGeogebraCommonKernelGeosGeoVec3D_(g, h, tempPoint);
      jboolean isIntersection = [g isIntersectionPointIncidentWithOrgGeogebraCommonKernelGeosGeoPoint:tempPoint withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION] && [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(h)) isIntersectionPointIncidentWithOrgGeogebraCommonKernelGeosGeoPoint:tempPoint withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION];
      str = OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, g, h, isIntersection);
      OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(isIntersection), nil, str);
    }
  }
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *g, OrgGeogebraCommonKernelGeosGeoConic *c) {
  jint type;
  NSString *str;
  if ([((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(g)) isLimitedPath] || [((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(c)) isLimitedPath]) {
    OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic *algo = new_OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_(self->cons_, g, c);
    IOSObjectArray *points = [algo getIntersectionPoints];
    [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:algo];
    jboolean intersect = NO;
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(points))->size_; i++) {
      if ([((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points, i))) isDefined]) {
        intersect = YES;
        break;
      }
    }
    str = OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, g, c, intersect);
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points, 0))) remove];
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(intersect), nil, str);
    return self->reports_;
  }
  if ([g isDefinedTangentWithOrgGeogebraCommonKernelGeosGeoConic:c]) {
    str = OrgGeogebraCommonKernelRelationNumerical_lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_withInt_(self, g, c, OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_TANGENT_LINE);
  }
  else if ([g isDefinedAsymptoteWithOrgGeogebraCommonKernelGeosGeoConic:c]) {
    str = OrgGeogebraCommonKernelRelationNumerical_lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_withInt_(self, g, c, OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_ASYMPTOTIC_LINE);
  }
  else {
    IOSObjectArray *points = [IOSObjectArray newArrayWithObjects:(id[]){ new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(self->cons_), new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(self->cons_) } count:2 type:OrgGeogebraCommonKernelGeosGeoPoint_class_()];
    type = OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_intersectLineConicWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelKernelNDGeoConicND_withOrgGeogebraCommonKernelGeosGeoPointArray_withDouble_(g, c, points, OrgGeogebraCommonKernelKernel_STANDARD_PRECISION);
    str = OrgGeogebraCommonKernelRelationNumerical_lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_withInt_(self, g, c, type);
  }
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, nil, nil, str);
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConicPart_withOrgGeogebraCommonKernelGeosGeoConicPart_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoConicPart *a, OrgGeogebraCommonKernelGeosGeoConicPart *b) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(a)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:b]);
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, nil, str);
  jint type = [a getConicPartType];
  if (type == [((OrgGeogebraCommonKernelGeosGeoConicPart *) nil_chk(b)) getConicPartType]) {
    if (type == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC) {
      if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([(a) getDouble], [(b) getDouble])) {
        str = [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AhasTheSameLengthAsB" withNSString:[a getColoredLabel] withNSString:[b getColoredLabel]];
        OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), nil, str);
      }
      else {
        str = [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AdoesNothaveTheSameLengthAsB" withNSString:[a getColoredLabel] withNSString:[b getColoredLabel]];
        OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(NO), nil, str);
      }
    }
    else {
      if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([(a) getDouble], [(b) getDouble])) {
        str = [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AhasTheSameAreaAsB" withNSString:[a getColoredLabel] withNSString:[b getColoredLabel]];
        OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), nil, str);
      }
      else {
        str = [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AdoesNothaveTheSameAreaAsB" withNSString:[a getColoredLabel] withNSString:[b getColoredLabel]];
        OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(NO), nil, str);
      }
    }
  }
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoConic_withOrgGeogebraCommonKernelGeosGeoConic_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoConic *a, OrgGeogebraCommonKernelGeosGeoConic *b) {
  NSString *str;
  if ([((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(a)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:b]) {
    str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, YES);
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), nil, str);
  }
  else {
    OrgGeogebraCommonKernelAlgosAlgoIntersectConics *algo = new_OrgGeogebraCommonKernelAlgosAlgoIntersectConics_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoConic_withOrgGeogebraCommonKernelGeosGeoConic_(self->cons_, a, b);
    IOSObjectArray *points = [algo getIntersectionPoints];
    [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:algo];
    jboolean intersect = NO;
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(points))->size_; i++) {
      if ([((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points, i))) isDefined]) {
        intersect = YES;
        break;
      }
    }
    str = OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, intersect);
    OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, JavaLangBoolean_valueOfWithBoolean_(YES), nil, str);
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points, 0))) remove];
  }
  return self->reports_;
}

id<JavaUtilSet> OrgGeogebraCommonKernelRelationNumerical_relationWithOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoFunction *a, OrgGeogebraCommonKernelGeosGeoFunction *b) {
  JavaLangBoolean *bool_ = JavaLangBoolean_valueOfWithBoolean_([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(a)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:b]);
  NSString *str = OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(self, a, b, [bool_ booleanValue]);
  OrgGeogebraCommonKernelRelationNumerical_register__WithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, bool_, nil, str);
  return self->reports_;
}

NSString *OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean equal) {
  return OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_withOrgGeogebraCommonMainLocalization_(a, b, equal, self->loc_);
}

NSString *OrgGeogebraCommonKernelRelationNumerical_equalityStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_withOrgGeogebraCommonMainLocalization_(OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean equal, OrgGeogebraCommonMainLocalization *loc) {
  OrgGeogebraCommonKernelRelationNumerical_initialize();
  if (equal) {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AandBareEqual" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
  }
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AandBareNotEqual" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_linDependencyStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean dependent) {
  if (dependent) {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AandBareLinearlyDependent" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
  }
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AandBareLinearlyIndependent" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_incidenceStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean incident) {
  if (incident) {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AliesOnB" withNSString:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
  }
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AdoesNotLieOnB" withNSString:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_incidencePerimeterStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoPoint *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean incident) {
  if (incident) {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AliesOnThePerimeterOfB" withNSString:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
  }
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AdoesNotLieOnThePerimeterOfB" withNSString:[((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoLine *b) {
  return OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonMainLocalization_(a, b, self->loc_);
}

NSString *OrgGeogebraCommonKernelRelationNumerical_parallelStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonMainLocalization_(OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoLine *b, OrgGeogebraCommonMainLocalization *loc) {
  OrgGeogebraCommonKernelRelationNumerical_initialize();
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AandBareParallel" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(b)) getColoredLabel]];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_triangleNonDegenerateStringWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonMainLocalization_(OrgGeogebraCommonKernelGeosGeoPoint *A, OrgGeogebraCommonKernelGeosGeoPoint *B, OrgGeogebraCommonKernelGeosGeoPoint *C, OrgGeogebraCommonMainLocalization *loc) {
  OrgGeogebraCommonKernelRelationNumerical_initialize();
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"TriangleABCnonDegenerate" withNSString:JreStrcat("$$$", [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A)) getColoredLabel], [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(B)) getColoredLabel], [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(C)) getColoredLabel])];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoLine *b, jboolean perp) {
  return OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_withOrgGeogebraCommonMainLocalization_(a, b, perp, self->loc_);
}

NSString *OrgGeogebraCommonKernelRelationNumerical_perpendicularStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoLine_withBoolean_withOrgGeogebraCommonMainLocalization_(OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoLine *b, jboolean perp, OrgGeogebraCommonMainLocalization *loc) {
  OrgGeogebraCommonKernelRelationNumerical_initialize();
  if (perp) {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AandBarePerpendicular" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(b)) getColoredLabel]];
  }
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AandBareNotPerpendicular" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(b)) getColoredLabel]];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean intersects) {
  return OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_withOrgGeogebraCommonMainLocalization_(a, b, intersects, self->loc_);
}

NSString *OrgGeogebraCommonKernelRelationNumerical_intersectStringWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_withBoolean_withOrgGeogebraCommonMainLocalization_(OrgGeogebraCommonKernelGeosGeoElement *a, OrgGeogebraCommonKernelGeosGeoElement *b, jboolean intersects, OrgGeogebraCommonMainLocalization *loc) {
  OrgGeogebraCommonKernelRelationNumerical_initialize();
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  if (intersects) (void) [sb appendWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AIntersectsWithB" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]]];
  else (void) [sb appendWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"ADoesNotIntersectWithB" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) getColoredLabel]]];
  return [sb description];
}

NSString *OrgGeogebraCommonKernelRelationNumerical_lineConicStringWithOrgGeogebraCommonKernelGeosGeoLine_withOrgGeogebraCommonKernelGeosGeoConic_withInt_(OrgGeogebraCommonKernelRelationNumerical *self, OrgGeogebraCommonKernelGeosGeoLine *a, OrgGeogebraCommonKernelGeosGeoConic *b, jint type) {
  switch (type) {
    case OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_PRODUCING_LINE:
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AisaDegenerateBranchOfB" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(b)) getColoredLabel]];
    case OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_ASYMPTOTIC_LINE:
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AisAnAsymptoteToB" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(b)) getColoredLabel]];
    case OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_MEETING_LINE:
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AintersectsWithBOnce" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(b)) getColoredLabel]];
    case OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_TANGENT_LINE:
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AisaTangentToB" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(b)) getColoredLabel]];
    case OrgGeogebraCommonKernelAlgosAlgoIntersectLineConic_INTERSECTION_SECANT_LINE:
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"AintersectsWithBTwice" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(b)) getColoredLabel]];
    default:
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->loc_)) getPlainWithNSString:@"ADoesNotIntersectWithB" withNSString:[((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(a)) getColoredLabel] withNSString:[((OrgGeogebraCommonKernelGeosGeoConic *) nil_chk(b)) getColoredLabel]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelRelationNumerical)

@implementation OrgGeogebraCommonKernelRelationNumerical_Report

- (instancetype)initWithJavaLangBoolean:(JavaLangBoolean *)boolres
withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                           withNSString:(NSString *)stringres {
  OrgGeogebraCommonKernelRelationNumerical_Report_initWithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, boolres, command, stringres);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) {
    return NO;
  }
  return [((NSString *) nil_chk(self->stringResult_)) equalsIgnoreCase:((OrgGeogebraCommonKernelRelationNumerical_Report *) nil_chk(((OrgGeogebraCommonKernelRelationNumerical_Report *) check_class_cast(obj, [OrgGeogebraCommonKernelRelationNumerical_Report class]))))->stringResult_];
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(stringResult_)) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangBoolean:withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:withNSString:", "Report", NULL, 0x0, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "boolResult_", NULL, 0x1, "Ljava.lang.Boolean;", NULL, NULL,  },
    { "symbolicCheck_", NULL, 0x1, "Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;", NULL, NULL,  },
    { "stringResult_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelRelationNumerical_Report = { 2, "Report", "org.geogebra.common.kernel", "RelationNumerical", 0x9, 3, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonKernelRelationNumerical_Report;
}

@end

void OrgGeogebraCommonKernelRelationNumerical_Report_initWithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(OrgGeogebraCommonKernelRelationNumerical_Report *self, JavaLangBoolean *boolres, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, NSString *stringres) {
  (void) NSObject_init(self);
  self->boolResult_ = boolres;
  self->symbolicCheck_ = command;
  self->stringResult_ = stringres;
}

OrgGeogebraCommonKernelRelationNumerical_Report *new_OrgGeogebraCommonKernelRelationNumerical_Report_initWithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(JavaLangBoolean *boolres, OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, NSString *stringres) {
  OrgGeogebraCommonKernelRelationNumerical_Report *self = [OrgGeogebraCommonKernelRelationNumerical_Report alloc];
  OrgGeogebraCommonKernelRelationNumerical_Report_initWithJavaLangBoolean_withOrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(self, boolres, command, stringres);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelRelationNumerical_Report)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum)

OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_[4];

@implementation OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values() {
  OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_ count:4 type:OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values();
}

+ (OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initialize();
  for (int i = 0; i < 4; i++) {
    OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *e = OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum class]) {
    OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_AreEqual = new_OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(@"AreEqual", 0);
    OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_AreParallel = new_OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(@"AreParallel", 1);
    OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_ArePerpendicular = new_OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(@"ArePerpendicular", 2);
    OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_IsOnPath = new_OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(@"IsOnPath", 3);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "AreEqual", "AreEqual", 0x4019, "Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;", &OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_AreEqual, NULL,  },
    { "AreParallel", "AreParallel", 0x4019, "Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;", &OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_AreParallel, NULL,  },
    { "ArePerpendicular", "ArePerpendicular", 0x4019, "Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;", &OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_ArePerpendicular, NULL,  },
    { "IsOnPath", "IsOnPath", 0x4019, "Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;", &OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_IsOnPath, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.kernel.RelationNumerical$Report$RelationCommand;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum = { 2, "RelationCommand", "org.geogebra.common.kernel", "RelationNumerical$Report", 0x4019, 0, NULL, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/kernel/RelationNumerical$Report$RelationCommand;>;" };
  return &_OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum;
}

@end

void OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *new_OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *self = [OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum alloc];
  OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum)

@implementation OrgGeogebraCommonKernelRelationNumerical_$1

- (jint)compareWithId:(OrgGeogebraCommonKernelRelationNumerical_Report *)r1
               withId:(OrgGeogebraCommonKernelRelationNumerical_Report *)r2 {
  return [((NSString *) nil_chk(((OrgGeogebraCommonKernelRelationNumerical_Report *) nil_chk(r1))->stringResult_)) compareToWithId:((OrgGeogebraCommonKernelRelationNumerical_Report *) nil_chk(r2))->stringResult_];
}

- (instancetype)init {
  OrgGeogebraCommonKernelRelationNumerical_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelRelationNumerical", "sortAlphabeticallyWithJavaUtilSet:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelRelationNumerical_$1 = { 2, "", "org.geogebra.common.kernel", "RelationNumerical", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/geogebra/common/kernel/RelationNumerical$Report;>;" };
  return &_OrgGeogebraCommonKernelRelationNumerical_$1;
}

@end

void OrgGeogebraCommonKernelRelationNumerical_$1_init(OrgGeogebraCommonKernelRelationNumerical_$1 *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonKernelRelationNumerical_$1 *new_OrgGeogebraCommonKernelRelationNumerical_$1_init() {
  OrgGeogebraCommonKernelRelationNumerical_$1 *self = [OrgGeogebraCommonKernelRelationNumerical_$1 alloc];
  OrgGeogebraCommonKernelRelationNumerical_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelRelationNumerical_$1)
