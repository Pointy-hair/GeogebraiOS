//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/Macro.java
//

#ifndef _OrgGeogebraCommonKernelMacro_H_
#define _OrgGeogebraCommonKernelMacro_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelKernel;
@protocol JavaUtilSet;
@protocol OrgGeogebraCommonKernelAlgosAlgoMacroInterface;

@interface OrgGeogebraCommonKernelMacro : NSObject

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                         withNSString:(NSString *)cmdName;

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                         withNSString:(NSString *)cmdName
       withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)input
       withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)output;

+ (void)addDependentElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                     withJavaUtilSet:(id<JavaUtilSet>)consElementSet
                                                     withJavaUtilSet:(id<JavaUtilSet>)usedAlgoIds;

+ (void)addSpecialInputElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                        withJavaUtilSet:(id<JavaUtilSet>)consElementSet;

+ (JavaLangStringBuilder *)buildMacroXMLWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                                          withJavaUtilSet:(id<JavaUtilSet>)macroConsElements;

- (NSString *)getCommandName;

- (JavaUtilArrayList *)getDependentGeos;

- (NSString *)getIconFileName;

- (IOSObjectArray *)getInputTypes;

- (OrgGeogebraCommonKernelKernel *)getKernel;

- (OrgGeogebraCommonKernelConstruction *)getMacroConstruction;

- (IOSObjectArray *)getMacroInput;

- (IOSObjectArray *)getMacroOutput;

- (NSString *)getNeededTypesString;

- (NSString *)getToolHelp;

- (NSString *)getToolName;

- (NSString *)getToolOrCommandName;

- (JavaUtilArrayList *)getUsedMacros;

- (void)getXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)initMacroWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)macroCons1
                                       withNSStringArray:(IOSObjectArray *)inputLabels
                                       withNSStringArray:(IOSObjectArray *)outputLabels OBJC_METHOD_FAMILY_NONE;

- (jboolean)isCopyCaptionsAndVisibility;

- (jboolean)isInMacroConstructionWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isShowInToolBar;

- (jboolean)isUsed;

- (void)registerAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoMacroInterface:(id<OrgGeogebraCommonKernelAlgosAlgoMacroInterface>)algoMacro;

- (void)setCommandNameWithNSString:(NSString *)name;

- (void)setCopyCaptionsAndVisibilityWithBoolean:(jboolean)copyCaptions;

- (void)setIconFileNameWithNSString:(NSString *)name;

- (void)setShowInToolBarWithBoolean:(jboolean)showInToolBar;

- (void)setToolHelpWithNSString:(NSString *)toolHelp;

- (void)setToolNameWithNSString:(NSString *)name;

- (void)setUnused;

- (NSString *)description;

- (void)unregisterAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoMacroInterface:(id<OrgGeogebraCommonKernelAlgosAlgoMacroInterface>)algoMacro;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelMacro)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelMacro_initWithOrgGeogebraCommonKernelKernel_withNSString_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonKernelGeosGeoElementArray_(OrgGeogebraCommonKernelMacro *self, OrgGeogebraCommonKernelKernel *kernel, NSString *cmdName, IOSObjectArray *input, IOSObjectArray *output);

FOUNDATION_EXPORT OrgGeogebraCommonKernelMacro *new_OrgGeogebraCommonKernelMacro_initWithOrgGeogebraCommonKernelKernel_withNSString_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonKernelGeosGeoElementArray_(OrgGeogebraCommonKernelKernel *kernel, NSString *cmdName, IOSObjectArray *input, IOSObjectArray *output) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelMacro_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelMacro *self, OrgGeogebraCommonKernelKernel *kernel, NSString *cmdName);

FOUNDATION_EXPORT OrgGeogebraCommonKernelMacro *new_OrgGeogebraCommonKernelMacro_initWithOrgGeogebraCommonKernelKernel_withNSString_(OrgGeogebraCommonKernelKernel *kernel, NSString *cmdName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelMacro_addDependentElementWithOrgGeogebraCommonKernelGeosGeoElement_withJavaUtilSet_withJavaUtilSet_(OrgGeogebraCommonKernelGeosGeoElement *geo, id<JavaUtilSet> consElementSet, id<JavaUtilSet> usedAlgoIds);

FOUNDATION_EXPORT void OrgGeogebraCommonKernelMacro_addSpecialInputElementWithOrgGeogebraCommonKernelGeosGeoElement_withJavaUtilSet_(OrgGeogebraCommonKernelGeosGeoElement *geo, id<JavaUtilSet> consElementSet);

FOUNDATION_EXPORT JavaLangStringBuilder *OrgGeogebraCommonKernelMacro_buildMacroXMLWithOrgGeogebraCommonKernelKernel_withJavaUtilSet_(OrgGeogebraCommonKernelKernel *kernel, id<JavaUtilSet> macroConsElements);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelMacro)

#endif // _OrgGeogebraCommonKernelMacro_H_
