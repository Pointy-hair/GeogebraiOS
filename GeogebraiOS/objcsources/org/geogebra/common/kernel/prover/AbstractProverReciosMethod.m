//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/prover/AbstractProverReciosMethod.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/math/BigInteger.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/SymbolicParameters.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersAlgo.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/prover/AbstractProverReciosMethod.h"
#include "org/geogebra/common/kernel/prover/NoSymbolicParametersException.h"
#include "org/geogebra/common/kernel/prover/polynomial/Variable.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/util/Prover.h"

@interface OrgGeogebraCommonKernelProverAbstractProverReciosMethod ()

+ (OrgGeogebraCommonUtilProver_ProofResultEnum *)compute0dWithJavaUtilHashMap:(JavaUtilHashMap *)values
                           withOrgGeogebraCommonKernelAlgosSymbolicParameters:(OrgGeogebraCommonKernelAlgosSymbolicParameters *)s;

+ (OrgGeogebraCommonUtilProver_ProofResultEnum *)compute1dWithJavaUtilHashSet:(JavaUtilHashSet *)freeVariables
                                                          withJavaUtilHashMap:(JavaUtilHashMap *)values
                                                                      withInt:(jint)deg
                           withOrgGeogebraCommonKernelAlgosSymbolicParameters:(OrgGeogebraCommonKernelAlgosSymbolicParameters *)s;

+ (OrgGeogebraCommonUtilProver_ProofResultEnum *)compute2dWithJavaUtilHashSet:(JavaUtilHashSet *)freeVariables
                                                          withJavaUtilHashMap:(JavaUtilHashMap *)values
                                                                      withInt:(jint)deg
                           withOrgGeogebraCommonKernelAlgosSymbolicParameters:(OrgGeogebraCommonKernelAlgosSymbolicParameters *)s;

@end

static IOSObjectArray *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonKernelProverAbstractProverReciosMethod, fixedPoints_, IOSObjectArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonKernelProverAbstractProverReciosMethod, fixedPoints_, IOSObjectArray *)

__attribute__((unused)) static OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute0dWithJavaUtilHashMap_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(JavaUtilHashMap *values, OrgGeogebraCommonKernelAlgosSymbolicParameters *s);

__attribute__((unused)) static OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute1dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(JavaUtilHashSet *freeVariables, JavaUtilHashMap *values, jint deg, OrgGeogebraCommonKernelAlgosSymbolicParameters *s);

__attribute__((unused)) static OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute2dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(JavaUtilHashSet *freeVariables, JavaUtilHashMap *values, jint deg, OrgGeogebraCommonKernelAlgosSymbolicParameters *s);

@interface OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgGeogebraCommonKernelProverPolynomialVariable *)v1
               withId:(OrgGeogebraCommonKernelProverPolynomialVariable *)v2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1)

__attribute__((unused)) static void OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1_init(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 *self);

__attribute__((unused)) static OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 *new_OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1)

@implementation OrgGeogebraCommonKernelProverAbstractProverReciosMethod

- (OrgGeogebraCommonUtilProver_ProofResultEnum *)proveWithOrgGeogebraCommonUtilProver:(OrgGeogebraCommonUtilProver *)prover {
  OrgGeogebraCommonKernelAlgosSymbolicParameters *s;
  if ([OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo_class_() isInstance:[((OrgGeogebraCommonUtilProver *) nil_chk(prover)) getStatement]]) s = ([((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) check_protocol_cast([prover getStatement], @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo))))) getSymbolicParameters]);
  else if ([OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo_class_() isInstance:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([prover getStatement])) getParentAlgorithm]]) s = ([((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) nil_chk(((id<OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo>) check_protocol_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([prover getStatement])) getParentAlgorithm], @protocol(OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo))))) getSymbolicParameters]);
  else return OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
  JavaUtilHashSet *variables;
  @try {
    variables = [((OrgGeogebraCommonKernelAlgosSymbolicParameters *) nil_chk(s)) getFreeVariables];
  }
  @catch (OrgGeogebraCommonKernelProverNoSymbolicParametersException *e) {
    return OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
  }
  id<JavaUtilIterator> it = [((JavaUtilHashSet *) nil_chk(variables)) iterator];
  JavaUtilHashMap *values = [new_JavaUtilHashMap_init() autorelease];
  JavaUtilTreeSet *fixedVariables = [new_JavaUtilTreeSet_initWithJavaUtilComparator_([new_OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1_init() autorelease]) autorelease];
  JavaUtilHashSet *freeVariables = [new_JavaUtilHashSet_init() autorelease];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    OrgGeogebraCommonKernelProverPolynomialVariable *fv = [it next];
    if ([((OrgGeogebraCommonKernelProverPolynomialVariable *) nil_chk(fv)) getTwin] == nil || ![variables containsWithId:[fv getTwin]]) {
      [freeVariables addWithId:fv];
      continue;
    }
    [fixedVariables addWithId:fv];
  }
  it = [fixedVariables iterator];
  jint nrOfFixedPoints = 0;
  OrgGeogebraCommonKernelGeosGeoElement *fixedElement1 = nil, *fixedElement2 = nil;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    OrgGeogebraCommonKernelProverPolynomialVariable *var;
    if (nrOfFixedPoints == 0) {
      var = [it next];
      [values putWithId:var withId:JavaMathBigInteger_get_ZERO_()];
      [values putWithId:[it next] withId:JavaMathBigInteger_get_ZERO_()];
      fixedElement1 = [((OrgGeogebraCommonKernelProverPolynomialVariable *) nil_chk(var)) getParent];
      nrOfFixedPoints = 1;
    }
    else if (nrOfFixedPoints == 1) {
      var = [it next];
      [values putWithId:var withId:JavaMathBigInteger_get_ZERO_()];
      [values putWithId:[it next] withId:JavaMathBigInteger_get_ONE_()];
      fixedElement2 = [((OrgGeogebraCommonKernelProverPolynomialVariable *) nil_chk(var)) getParent];
      nrOfFixedPoints = 2;
    }
    else {
      [freeVariables addWithId:[it next]];
    }
  }
  if (nrOfFixedPoints == 1) {
    JreStrongAssignAndConsume(&OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_, nil, [IOSObjectArray newArrayWithLength:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_, 0, fixedElement1);
  }
  else if (nrOfFixedPoints == 2) {
    JreStrongAssignAndConsume(&OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_, nil, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_, 0, fixedElement1);
    IOSObjectArray_Set(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_, 1, fixedElement2);
  }
  jint nrFreeVariables = [freeVariables size];
  if (nrFreeVariables > 5) {
    OrgGeogebraCommonMainApp_debugWithNSString_(@"Recio's method is currently disabled when # of free variables > 5");
    return OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
  }
  IOSIntArray *degs;
  @try {
    degs = [((OrgGeogebraCommonKernelAlgosSymbolicParameters *) nil_chk(s)) getDegrees];
  }
  @catch (OrgGeogebraCommonKernelProverNoSymbolicParametersException *e) {
    return OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
  }
  jint deg = 0;
  {
    IOSIntArray *a__ = degs;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint i = *b__++;
      deg = JavaLangMath_maxWithInt_withInt_(deg, i);
    }
  }
  switch (nrFreeVariables) {
    case 0:
    return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute0dWithJavaUtilHashMap_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(values, s);
    case 1:
    return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute1dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(freeVariables, values, deg, s);
    case 2:
    return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute2dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(freeVariables, values, deg, s);
    default:
    return [self computeNdWithJavaUtilHashSet:freeVariables withJavaUtilHashMap:values withInt:deg withOrgGeogebraCommonKernelAlgosSymbolicParameters:s];
  }
}

+ (OrgGeogebraCommonUtilProver_ProofResultEnum *)compute0dWithJavaUtilHashMap:(JavaUtilHashMap *)values
                           withOrgGeogebraCommonKernelAlgosSymbolicParameters:(OrgGeogebraCommonKernelAlgosSymbolicParameters *)s {
  return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute0dWithJavaUtilHashMap_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(values, s);
}

+ (OrgGeogebraCommonUtilProver_ProofResultEnum *)compute1dWithJavaUtilHashSet:(JavaUtilHashSet *)freeVariables
                                                          withJavaUtilHashMap:(JavaUtilHashMap *)values
                                                                      withInt:(jint)deg
                           withOrgGeogebraCommonKernelAlgosSymbolicParameters:(OrgGeogebraCommonKernelAlgosSymbolicParameters *)s {
  return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute1dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(freeVariables, values, deg, s);
}

+ (OrgGeogebraCommonUtilProver_ProofResultEnum *)compute2dWithJavaUtilHashSet:(JavaUtilHashSet *)freeVariables
                                                          withJavaUtilHashMap:(JavaUtilHashMap *)values
                                                                      withInt:(jint)deg
                           withOrgGeogebraCommonKernelAlgosSymbolicParameters:(OrgGeogebraCommonKernelAlgosSymbolicParameters *)s {
  return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute2dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(freeVariables, values, deg, s);
}

- (OrgGeogebraCommonUtilProver_ProofResultEnum *)computeNdWithJavaUtilHashSet:(JavaUtilHashSet *)freeVariables
                                                          withJavaUtilHashMap:(JavaUtilHashMap *)values
                                                                      withInt:(jint)deg
                           withOrgGeogebraCommonKernelAlgosSymbolicParameters:(OrgGeogebraCommonKernelAlgosSymbolicParameters *)s {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)getFixedPoints {
  return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_getFixedPoints();
}

- (instancetype)init {
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "proveWithOrgGeogebraCommonUtilProver:", "prove", "Lorg.geogebra.common.util.Prover$ProofResult;", 0x1, NULL, NULL },
    { "compute0dWithJavaUtilHashMap:withOrgGeogebraCommonKernelAlgosSymbolicParameters:", "compute0d", "Lorg.geogebra.common.util.Prover$ProofResult;", 0xa, NULL, NULL },
    { "compute1dWithJavaUtilHashSet:withJavaUtilHashMap:withInt:withOrgGeogebraCommonKernelAlgosSymbolicParameters:", "compute1d", "Lorg.geogebra.common.util.Prover$ProofResult;", 0xa, NULL, NULL },
    { "compute2dWithJavaUtilHashSet:withJavaUtilHashMap:withInt:withOrgGeogebraCommonKernelAlgosSymbolicParameters:", "compute2d", "Lorg.geogebra.common.util.Prover$ProofResult;", 0xa, NULL, NULL },
    { "computeNdWithJavaUtilHashSet:withJavaUtilHashMap:withInt:withOrgGeogebraCommonKernelAlgosSymbolicParameters:", "computeNd", "Lorg.geogebra.common.util.Prover$ProofResult;", 0x404, NULL, NULL },
    { "getFixedPoints", NULL, "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fixedPoints_", NULL, 0xa, "[Lorg.geogebra.common.kernel.geos.GeoElement;", &OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelProverAbstractProverReciosMethod = { 2, "AbstractProverReciosMethod", "org.geogebra.common.kernel.prover", NULL, 0x401, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelProverAbstractProverReciosMethod;
}

@end

OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute0dWithJavaUtilHashMap_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(JavaUtilHashMap *values, OrgGeogebraCommonKernelAlgosSymbolicParameters *s) {
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_initialize();
  @try {
    IOSObjectArray *exactCoordinates = [((OrgGeogebraCommonKernelAlgosSymbolicParameters *) nil_chk(s)) getExactCoordinatesWithJavaUtilHashMap:values];
    {
      IOSObjectArray *a__ = exactCoordinates;
      JavaMathBigInteger * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaMathBigInteger * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaMathBigInteger *result = *b__++;
        if (![((JavaMathBigInteger *) nil_chk(result)) isEqual:JavaMathBigInteger_get_ZERO_()]) {
          return OrgGeogebraCommonUtilProver_ProofResultEnum_get_FALSE();
        }
      }
    }
  }
  @catch (OrgGeogebraCommonKernelProverNoSymbolicParametersException *e) {
    return OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
  }
  return OrgGeogebraCommonUtilProver_ProofResultEnum_get_TRUE();
}

OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute1dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(JavaUtilHashSet *freeVariables, JavaUtilHashMap *values, jint deg, OrgGeogebraCommonKernelAlgosSymbolicParameters *s) {
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_initialize();
  OrgGeogebraCommonKernelProverPolynomialVariable *variable = [((id<JavaUtilIterator>) nil_chk([((JavaUtilHashSet *) nil_chk(freeVariables)) iterator])) next];
  for (jint i = 1; i <= deg + 2; i++) {
    [((JavaUtilHashMap *) nil_chk(values)) putWithId:variable withId:JavaMathBigInteger_valueOfWithLong_(i)];
    @try {
      IOSObjectArray *exactCoordinates = [((OrgGeogebraCommonKernelAlgosSymbolicParameters *) nil_chk(s)) getExactCoordinatesWithJavaUtilHashMap:values];
      {
        IOSObjectArray *a__ = exactCoordinates;
        JavaMathBigInteger * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        JavaMathBigInteger * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          JavaMathBigInteger *result = *b__++;
          if (![((JavaMathBigInteger *) nil_chk(result)) isEqual:JavaMathBigInteger_get_ZERO_()]) {
            return OrgGeogebraCommonUtilProver_ProofResultEnum_get_FALSE();
          }
        }
      }
    }
    @catch (OrgGeogebraCommonKernelProverNoSymbolicParametersException *e) {
      return OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
    }
  }
  return OrgGeogebraCommonUtilProver_ProofResultEnum_get_TRUE();
}

OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_compute2dWithJavaUtilHashSet_withJavaUtilHashMap_withInt_withOrgGeogebraCommonKernelAlgosSymbolicParameters_(JavaUtilHashSet *freeVariables, JavaUtilHashMap *values, jint deg, OrgGeogebraCommonKernelAlgosSymbolicParameters *s) {
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_initialize();
  IOSObjectArray *variables = [IOSObjectArray arrayWithLength:[((JavaUtilHashSet *) nil_chk(freeVariables)) size] type:OrgGeogebraCommonKernelProverPolynomialVariable_class_()];
  id<JavaUtilIterator> it = [freeVariables iterator];
  for (jint i = 0; i < variables->size_; i++) {
    IOSObjectArray_Set(variables, i, [((id<JavaUtilIterator>) nil_chk(it)) next]);
  }
  jint nrOfTests = ((deg + 2) * (deg + 1)) / 2;
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("$I", @"nr of tests: ", nrOfTests));
  for (jint i = 1; i <= deg + 2; i++) {
    for (jint j = 1; j <= i; j++) {
      [((JavaUtilHashMap *) nil_chk(values)) putWithId:IOSObjectArray_Get(variables, 0) withId:JavaMathBigInteger_valueOfWithLong_((deg + 2 - i) * (deg + 2 - j))];
      [values putWithId:IOSObjectArray_Get(variables, 1) withId:JavaMathBigInteger_valueOfWithLong_(i * j)];
      @try {
        IOSObjectArray *exactCoordinates = [((OrgGeogebraCommonKernelAlgosSymbolicParameters *) nil_chk(s)) getExactCoordinatesWithJavaUtilHashMap:values];
        {
          IOSObjectArray *a__ = exactCoordinates;
          JavaMathBigInteger * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
          JavaMathBigInteger * const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            JavaMathBigInteger *result = *b__++;
            if (![((JavaMathBigInteger *) nil_chk(result)) isEqual:JavaMathBigInteger_get_ZERO_()]) {
              return OrgGeogebraCommonUtilProver_ProofResultEnum_get_FALSE();
            }
          }
        }
      }
      @catch (OrgGeogebraCommonKernelProverNoSymbolicParametersException *e) {
        return OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
      }
    }
  }
  return OrgGeogebraCommonUtilProver_ProofResultEnum_get_TRUE();
}

IOSObjectArray *OrgGeogebraCommonKernelProverAbstractProverReciosMethod_getFixedPoints() {
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_initialize();
  return OrgGeogebraCommonKernelProverAbstractProverReciosMethod_fixedPoints_;
}

void OrgGeogebraCommonKernelProverAbstractProverReciosMethod_init(OrgGeogebraCommonKernelProverAbstractProverReciosMethod *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelProverAbstractProverReciosMethod)

@implementation OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1

- (jint)compareWithId:(OrgGeogebraCommonKernelProverPolynomialVariable *)v1
               withId:(OrgGeogebraCommonKernelProverPolynomialVariable *)v2 {
  NSString *nameV1, *nameV2;
  if ([((OrgGeogebraCommonKernelProverPolynomialVariable *) nil_chk(v1)) getParent] == nil || (nameV1 = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([v1 getParent])) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]) == nil) {
    if ([((OrgGeogebraCommonKernelProverPolynomialVariable *) nil_chk(v2)) getParent] == nil || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([v1 getParent])) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()] == nil) {
      return [v1 compareToWithId:v2];
    }
    return -1;
  }
  if ([((OrgGeogebraCommonKernelProverPolynomialVariable *) nil_chk(v2)) getParent] == nil || (nameV2 = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([v2 getParent])) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]) == nil) {
    return 1;
  }
  jint compareNames = [((NSString *) nil_chk(nameV1)) compareToWithId:nameV2];
  if (compareNames == 0) {
    return [v1 compareToWithId:v2];
  }
  return compareNames;
}

- (instancetype)init {
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonKernelProverAbstractProverReciosMethod", "proveWithOrgGeogebraCommonUtilProver:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 = { 2, "", "org.geogebra.common.kernel.prover", "AbstractProverReciosMethod", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/geogebra/common/kernel/prover/polynomial/Variable;>;" };
  return &_OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1;
}

@end

void OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1_init(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 *self) {
  NSObject_init(self);
}

OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 *new_OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1_init() {
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 *self = [OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1 alloc];
  OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelProverAbstractProverReciosMethod_$1)
