//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/prover/AlgoAreCollinear.java
//

#ifndef _OrgGeogebraCommonKernelProverAlgoAreCollinear_H_
#define _OrgGeogebraCommonKernelProverAlgoAreCollinear_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersAlgo.h"
#include "org/geogebra/common/kernel/algos/SymbolicParametersBotanaAlgoAre.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@class OrgGeogebraCommonKernelAlgosSymbolicParameters;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoBoolean;
@class OrgGeogebraCommonKernelGeosGeoPoint;

@interface OrgGeogebraCommonKernelProverAlgoAreCollinear : OrgGeogebraCommonKernelAlgosAlgoElement < OrgGeogebraCommonKernelAlgosSymbolicParametersAlgo, OrgGeogebraCommonKernelAlgosSymbolicParametersBotanaAlgoAre >

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)inputPoint1
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)inputPoint2
                    withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)inputPoint3;

- (void)compute;

- (IOSObjectArray *)getBotanaPolynomials;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (IOSIntArray *)getDegrees;

- (IOSObjectArray *)getExactCoordinatesWithJavaUtilHashMap:(JavaUtilHashMap *)values;

- (void)getFreeVariablesWithJavaUtilHashSet:(JavaUtilHashSet *)variables;

- (IOSObjectArray *)getPolynomials;

- (OrgGeogebraCommonKernelGeosGeoBoolean *)getResult;

- (OrgGeogebraCommonKernelAlgosSymbolicParameters *)getSymbolicParameters;

#pragma mark Protected

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelProverAlgoAreCollinear)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelProverAlgoAreCollinear_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelProverAlgoAreCollinear *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *inputPoint1, OrgGeogebraCommonKernelGeosGeoPoint *inputPoint2, OrgGeogebraCommonKernelGeosGeoPoint *inputPoint3);

FOUNDATION_EXPORT OrgGeogebraCommonKernelProverAlgoAreCollinear *new_OrgGeogebraCommonKernelProverAlgoAreCollinear_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoPoint *inputPoint1, OrgGeogebraCommonKernelGeosGeoPoint *inputPoint2, OrgGeogebraCommonKernelGeosGeoPoint *inputPoint3) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelProverAlgoAreCollinear)

#endif // _OrgGeogebraCommonKernelProverAlgoAreCollinear_H_
