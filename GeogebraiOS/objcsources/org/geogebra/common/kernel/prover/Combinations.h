//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/prover/Combinations.java
//

#ifndef _OrgGeogebraCommonKernelProverCombinations_H_
#define _OrgGeogebraCommonKernelProverCombinations_H_

#include "J2ObjC_header.h"
#include "java/util/Iterator.h"

@protocol JavaUtilSet;

@interface OrgGeogebraCommonKernelProverCombinations : NSObject < JavaUtilIterator >

#pragma mark Public

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)inputSet
                            withInt:(jint)order;

- (jboolean)hasNext;

- (id<JavaUtilSet>)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelProverCombinations)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelProverCombinations_initWithJavaUtilSet_withInt_(OrgGeogebraCommonKernelProverCombinations *self, id<JavaUtilSet> inputSet, jint order);

FOUNDATION_EXPORT OrgGeogebraCommonKernelProverCombinations *new_OrgGeogebraCommonKernelProverCombinations_initWithJavaUtilSet_withInt_(id<JavaUtilSet> inputSet, jint order) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelProverCombinations)

#endif // _OrgGeogebraCommonKernelProverCombinations_H_
