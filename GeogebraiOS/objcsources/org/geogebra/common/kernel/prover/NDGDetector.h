//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/kernel/prover/NDGDetector.java
//

#ifndef _OrgGeogebraCommonKernelProverNDGDetector_H_
#define _OrgGeogebraCommonKernelProverNDGDetector_H_

#include "J2ObjC_header.h"

@class JavaUtilHashMap;
@class OrgGeogebraCommonKernelProverPolynomialPolynomial;
@class OrgGeogebraCommonUtilProver;
@class OrgGeogebraCommonUtilProver_NDGCondition;

@interface OrgGeogebraCommonKernelProverNDGDetector : NSObject

#pragma mark Public

- (OrgGeogebraCommonUtilProver_NDGCondition *)detectWithOrgGeogebraCommonKernelProverPolynomialPolynomial:(OrgGeogebraCommonKernelProverPolynomialPolynomial *)p;

#pragma mark Package-Private

- (instancetype)initWithOrgGeogebraCommonUtilProver:(OrgGeogebraCommonUtilProver *)prover
                                withJavaUtilHashMap:(JavaUtilHashMap *)substitutions;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonKernelProverNDGDetector)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelProverNDGDetector_initWithOrgGeogebraCommonUtilProver_withJavaUtilHashMap_(OrgGeogebraCommonKernelProverNDGDetector *self, OrgGeogebraCommonUtilProver *prover, JavaUtilHashMap *substitutions);

FOUNDATION_EXPORT OrgGeogebraCommonKernelProverNDGDetector *new_OrgGeogebraCommonKernelProverNDGDetector_initWithOrgGeogebraCommonUtilProver_withJavaUtilHashMap_(OrgGeogebraCommonUtilProver *prover, JavaUtilHashMap *substitutions) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelProverNDGDetector)

#endif // _OrgGeogebraCommonKernelProverNDGDetector_H_
