//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/kernel/prover/polynomial/Variable.java
//

#ifndef _OrgGeogebraCommonKernelProverPolynomialVariable_H_
#define _OrgGeogebraCommonKernelProverPolynomialVariable_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"

@class OrgGeogebraCommonKernelGeosGeoElement;

@interface OrgGeogebraCommonKernelProverPolynomialVariable : NSObject < JavaLangComparable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)free;

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)parent;

- (jint)compareToWithId:(OrgGeogebraCommonKernelProverPolynomialVariable *)v;

- (jboolean)isEqual:(id)o;

- (jint)getId;

- (NSString *)getName;

- (OrgGeogebraCommonKernelGeosGeoElement *)getParent;

- (OrgGeogebraCommonKernelProverPolynomialVariable *)getTwin;

- (NSUInteger)hash;

- (jboolean)isFree;

- (void)setParentWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)parent;

- (void)setTwinWithOrgGeogebraCommonKernelProverPolynomialVariable:(OrgGeogebraCommonKernelProverPolynomialVariable *)twin;

- (NSString *)description;

- (NSString *)toTeX;

#pragma mark Protected

- (instancetype)initWithOrgGeogebraCommonKernelProverPolynomialVariable:(OrgGeogebraCommonKernelProverPolynomialVariable *)fv;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonKernelProverPolynomialVariable)

FOUNDATION_EXPORT void OrgGeogebraCommonKernelProverPolynomialVariable_init(OrgGeogebraCommonKernelProverPolynomialVariable *self);

FOUNDATION_EXPORT OrgGeogebraCommonKernelProverPolynomialVariable *new_OrgGeogebraCommonKernelProverPolynomialVariable_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelProverPolynomialVariable_initWithBoolean_(OrgGeogebraCommonKernelProverPolynomialVariable *self, jboolean free);

FOUNDATION_EXPORT OrgGeogebraCommonKernelProverPolynomialVariable *new_OrgGeogebraCommonKernelProverPolynomialVariable_initWithBoolean_(jboolean free) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelProverPolynomialVariable_initWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelProverPolynomialVariable *self, OrgGeogebraCommonKernelGeosGeoElement *parent);

FOUNDATION_EXPORT OrgGeogebraCommonKernelProverPolynomialVariable *new_OrgGeogebraCommonKernelProverPolynomialVariable_initWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonKernelProverPolynomialVariable_initWithOrgGeogebraCommonKernelProverPolynomialVariable_(OrgGeogebraCommonKernelProverPolynomialVariable *self, OrgGeogebraCommonKernelProverPolynomialVariable *fv);

FOUNDATION_EXPORT OrgGeogebraCommonKernelProverPolynomialVariable *new_OrgGeogebraCommonKernelProverPolynomialVariable_initWithOrgGeogebraCommonKernelProverPolynomialVariable_(OrgGeogebraCommonKernelProverPolynomialVariable *fv) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonKernelProverPolynomialVariable)

#endif // _OrgGeogebraCommonKernelProverPolynomialVariable_H_
