//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/kernel/TransformDilate.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Transform.h"
#include "org/geogebra/common/kernel/TransformDilate.h"
#include "org/geogebra/common/kernel/algos/AlgoDilate.h"
#include "org/geogebra/common/kernel/algos/AlgoTransformation.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonKernelTransformDilate

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)ratio {
  OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, ratio);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)ratio
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center {
  OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, ratio, center);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgoTransformation *)getTransformAlgoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  OrgGeogebraCommonKernelAlgosAlgoDilate *algo = [new_OrgGeogebraCommonKernelAlgosAlgoDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_(cons_, geo, ratio_, center_) autorelease];
  return algo;
}

- (void)dealloc {
  RELEASE_(ratio_);
  RELEASE_(center_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticNumberValue:", "TransformDilate", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "TransformDilate", NULL, 0x1, NULL, NULL },
    { "getTransformAlgoWithOrgGeogebraCommonKernelGeosGeoElement:", "getTransformAlgo", "Lorg.geogebra.common.kernel.algos.AlgoTransformation;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ratio_", NULL, 0x4, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "center_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonKernelTransformDilate = { 2, "TransformDilate", "org.geogebra.common.kernel", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonKernelTransformDilate;
}

@end

void OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelTransformDilate *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> ratio) {
  OrgGeogebraCommonKernelTransform_init(self);
  OrgGeogebraCommonKernelTransformDilate_set_ratio_(self, ratio);
  OrgGeogebraCommonKernelTransform_set_cons_(self, cons);
}

OrgGeogebraCommonKernelTransformDilate *new_OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> ratio) {
  OrgGeogebraCommonKernelTransformDilate *self = [OrgGeogebraCommonKernelTransformDilate alloc];
  OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, ratio);
  return self;
}

void OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelTransformDilate *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> ratio, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center) {
  OrgGeogebraCommonKernelTransform_init(self);
  OrgGeogebraCommonKernelTransformDilate_set_ratio_(self, ratio);
  OrgGeogebraCommonKernelTransformDilate_set_center_(self, center);
  OrgGeogebraCommonKernelTransform_set_cons_(self, cons);
}

OrgGeogebraCommonKernelTransformDilate *new_OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelArithmeticNumberValue> ratio, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center) {
  OrgGeogebraCommonKernelTransformDilate *self = [OrgGeogebraCommonKernelTransformDilate alloc];
  OrgGeogebraCommonKernelTransformDilate_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, cons, ratio, center);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonKernelTransformDilate)
