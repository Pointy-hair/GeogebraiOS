//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/io/layout/PerspectiveDecoder.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/factories/AwtFactory.h"
#include "org/geogebra/common/gui/Layout.h"
#include "org/geogebra/common/io/layout/DockPanelData.h"
#include "org/geogebra/common/io/layout/DockSplitPaneData.h"
#include "org/geogebra/common/io/layout/Perspective.h"
#include "org/geogebra/common/io/layout/PerspectiveDecoder.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "org/geogebra/common/kernel/arithmetic/Variable.h"
#include "org/geogebra/common/kernel/parser/ParseException.h"
#include "org/geogebra/common/kernel/parser/Parser.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/Operation.h"

@interface OrgGeogebraCommonIoLayoutPerspectiveDecoder ()

+ (void)buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)expr
                                                                withNSString:(NSString *)panelPath
                                                                withNSString:(NSString *)splitPath
                                                       withJavaUtilArrayList:(JavaUtilArrayList *)panelList
                                                       withJavaUtilArrayList:(JavaUtilArrayList *)splitList
                                                                  withDouble:(jdouble)totalWidth
                                                                  withDouble:(jdouble)totalHeight;

+ (jdouble)sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)expr
                                                        withBoolean:(jboolean)horizontal;

@end

static id<JavaUtilMap> OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonIoLayoutPerspectiveDecoder, viewCodes_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonIoLayoutPerspectiveDecoder, viewCodes_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgGeogebraCommonIoLayoutPerspectiveDecoder_buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_withNSString_withJavaUtilArrayList_withJavaUtilArrayList_withDouble_withDouble_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> expr, NSString *panelPath, NSString *splitPath, JavaUtilArrayList *panelList, JavaUtilArrayList *splitList, jdouble totalWidth, jdouble totalHeight);

__attribute__((unused)) static jdouble OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> expr, jboolean horizontal);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonIoLayoutPerspectiveDecoder)

@implementation OrgGeogebraCommonIoLayoutPerspectiveDecoder

+ (OrgGeogebraCommonIoLayoutPerspective *)decodeWithNSString:(NSString *)code
                     withOrgGeogebraCommonKernelParserParser:(OrgGeogebraCommonKernelParserParser *)parser
                                                withNSString:(NSString *)defToolbar {
  return OrgGeogebraCommonIoLayoutPerspectiveDecoder_decodeWithNSString_withOrgGeogebraCommonKernelParserParser_withNSString_(code, parser, defToolbar);
}

+ (void)buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)expr
                                                                withNSString:(NSString *)panelPath
                                                                withNSString:(NSString *)splitPath
                                                       withJavaUtilArrayList:(JavaUtilArrayList *)panelList
                                                       withJavaUtilArrayList:(JavaUtilArrayList *)splitList
                                                                  withDouble:(jdouble)totalWidth
                                                                  withDouble:(jdouble)totalHeight {
  OrgGeogebraCommonIoLayoutPerspectiveDecoder_buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_withNSString_withJavaUtilArrayList_withJavaUtilArrayList_withDouble_withDouble_(expr, panelPath, splitPath, panelList, splitList, totalWidth, totalHeight);
}

+ (jdouble)sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)expr
                                                        withBoolean:(jboolean)horizontal {
  return OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_(expr, horizontal);
}

- (instancetype)init {
  OrgGeogebraCommonIoLayoutPerspectiveDecoder_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonIoLayoutPerspectiveDecoder class]) {
    OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ = new_JavaUtilHashMap_init();
    {
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"G" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN, nil, YES, NO, NO, [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newRectangleWithInt:100 withInt:100 withInt:600 withInt:400], @"1", 500)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"A" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_ALGEBRA, nil, NO, NO, NO, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:250 withInt:400], @"3,3", 200)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"S" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_SPREADSHEET, nil, YES, NO, NO, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:600 withInt:400], @"3", 300)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"C" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_CAS, nil, NO, NO, NO, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:600 withInt:400], @"3,1", 300)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"P" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_PROPERTIES, nil, NO, NO, YES, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:700 withInt:550], @"1,1", 400)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"L" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_CONSTRUCTION_PROTOCOL, nil, NO, NO, YES, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:700 withInt:550], @"1,1", 400)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"D" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN2, nil, NO, NO, YES, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:700 withInt:550], @"1,1", 400)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"T" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN3D, nil, NO, NO, YES, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:700 withInt:550], @"1,1", 400)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"B" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_PROBABILITY_CALCULATOR, nil, NO, NO, YES, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:700 withInt:550], @"1,1", 400)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"R" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_DATA_ANALYSIS, nil, NO, NO, YES, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:700 withInt:550], @"1,1", 400)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"F" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_FUNCTION_INSPECTOR, nil, NO, NO, YES, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:700 withInt:550], @"1,1", 400)];
      (void) [OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ putWithId:@"M" withId:new_OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_(OrgGeogebraCommonMainApp_VIEW_DATA_COLLECTION, nil, YES, NO, NO, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newRectangleWithInt:100 withInt:100 withInt:600 withInt:400], @"3", 300)];
    }
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonIoLayoutPerspectiveDecoder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "decodeWithNSString:withOrgGeogebraCommonKernelParserParser:withNSString:", "decode", "Lorg.geogebra.common.io.layout.Perspective;", 0x9, NULL, NULL },
    { "buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue:withNSString:withNSString:withJavaUtilArrayList:withJavaUtilArrayList:withDouble:withDouble:", "buildPerspective", "V", 0xa, NULL, NULL },
    { "sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue:withBoolean:", "size", "D", 0xa, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "viewCodes_", NULL, 0xa, "Ljava.util.Map;", &OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_, "Ljava/util/Map<Ljava/lang/String;Lorg/geogebra/common/io/layout/DockPanelData;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonIoLayoutPerspectiveDecoder = { 2, "PerspectiveDecoder", "org.geogebra.common.io.layout", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonIoLayoutPerspectiveDecoder;
}

@end

OrgGeogebraCommonIoLayoutPerspective *OrgGeogebraCommonIoLayoutPerspectiveDecoder_decodeWithNSString_withOrgGeogebraCommonKernelParserParser_withNSString_(NSString *code, OrgGeogebraCommonKernelParserParser *parser, NSString *defToolbar) {
  OrgGeogebraCommonIoLayoutPerspectiveDecoder_initialize();
  if (((jint) [((NSString *) nil_chk(code)) length]) == 0 || [code hasPrefix:@"search:"]) {
    return nil;
  }
  for (jint i = 1; i <= ((IOSObjectArray *) nil_chk(OrgGeogebraCommonGuiLayout_get_defaultPerspectives_()))->size_; i++) {
    if ([code isEqual:JreStrcat("I", i)]) {
      return IOSObjectArray_Get(OrgGeogebraCommonGuiLayout_get_defaultPerspectives_(), i - 1);
    }
  }
  NSString *longCode = @"";
  for (jint i = 0; i < ((jint) [code length]); i++) {
    longCode = JreStrcat("$$", longCode, JreStrcat("CC", [code charAtWithInt:i], ' '));
  }
  id<OrgGeogebraCommonKernelArithmeticExpressionValue> expr;
  @try {
    expr = [((OrgGeogebraCommonKernelArithmeticValidExpression *) nil_chk([((OrgGeogebraCommonKernelParserParser *) nil_chk(parser)) parseGeoGebraExpressionWithNSString:longCode])) wrap];
  }
  @catch (OrgGeogebraCommonKernelParserParseException *e) {
    [((OrgGeogebraCommonKernelParserParseException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  JavaUtilArrayList *panelList = new_JavaUtilArrayList_init();
  JavaUtilArrayList *splitList = new_JavaUtilArrayList_init();
  OrgGeogebraCommonIoLayoutPerspectiveDecoder_buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_withNSString_withJavaUtilArrayList_withJavaUtilArrayList_withDouble_withDouble_([((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(expr)) unwrap], @"", @"", panelList, splitList, 1, 0.8);
  if ([splitList isEmpty]) {
    [splitList addWithId:new_OrgGeogebraCommonIoLayoutDockSplitPaneData_initWithNSString_withDouble_withInt_(@"", 1.0, 1)];
  }
  IOSObjectArray *spData = [IOSObjectArray newArrayWithLength:[splitList size] type:OrgGeogebraCommonIoLayoutDockSplitPaneData_class_()];
  (void) [splitList toArrayWithNSObjectArray:spData];
  IOSObjectArray *dpData = [IOSObjectArray newArrayWithLength:[panelList size] type:OrgGeogebraCommonIoLayoutDockPanelData_class_()];
  (void) [panelList toArrayWithNSObjectArray:dpData];
  return new_OrgGeogebraCommonIoLayoutPerspective_initWithNSString_withOrgGeogebraCommonIoLayoutDockSplitPaneDataArray_withOrgGeogebraCommonIoLayoutDockPanelDataArray_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonMainApp_InputPositonEnum_(@"Custom", spData, dpData, defToolbar, YES, NO, YES, YES, YES, OrgGeogebraCommonMainApp_InputPositonEnum_get_algebraView());
}

void OrgGeogebraCommonIoLayoutPerspectiveDecoder_buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_withNSString_withJavaUtilArrayList_withJavaUtilArrayList_withDouble_withDouble_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> expr, NSString *panelPath, NSString *splitPath, JavaUtilArrayList *panelList, JavaUtilArrayList *splitList, jdouble totalWidth, jdouble totalHeight) {
  OrgGeogebraCommonIoLayoutPerspectiveDecoder_initialize();
  if ([expr isKindOfClass:[OrgGeogebraCommonKernelArithmeticVariable class]]) {
    NSString *code = [((OrgGeogebraCommonKernelArithmeticVariable *) nil_chk(((OrgGeogebraCommonKernelArithmeticVariable *) check_class_cast(expr, [OrgGeogebraCommonKernelArithmeticVariable class])))) getNameWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    if ([((id<JavaUtilMap>) nil_chk(OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_)) getWithId:code] != nil) {
      [((OrgGeogebraCommonIoLayoutDockPanelData *) nil_chk([OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ getWithId:code])) setVisibleWithBoolean:YES];
      [((OrgGeogebraCommonIoLayoutDockPanelData *) nil_chk([OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ getWithId:code])) setLocationWithNSString:((jint) [((NSString *) nil_chk(panelPath)) length]) > 0 ? [panelPath substring:1] : @""];
      [((JavaUtilArrayList *) nil_chk(panelList)) addWithId:[OrgGeogebraCommonIoLayoutPerspectiveDecoder_viewCodes_ getWithId:code]];
    }
  }
  else if ([expr isKindOfClass:[OrgGeogebraCommonKernelArithmeticExpressionNode class]]) {
    OrgGeogebraCommonKernelArithmeticExpressionNode *en = (OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast(expr, [OrgGeogebraCommonKernelArithmeticExpressionNode class]);
    jboolean horizontal = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(((OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast(expr, [OrgGeogebraCommonKernelArithmeticExpressionNode class])))) getOperation] == OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY();
    jdouble ratio = OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) getLeft], horizontal) / OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_(en, horizontal);
    jdouble height1 = totalHeight;
    jdouble width1 = totalWidth;
    jdouble height2 = totalHeight;
    jdouble width2 = totalWidth;
    if (horizontal) {
      width1 = width1 * ratio;
      width2 = width2 * (1 - ratio);
    }
    else {
      height1 = height1 * ratio;
      height2 = height2 * (1 - ratio);
    }
    [((JavaUtilArrayList *) nil_chk(splitList)) addWithId:new_OrgGeogebraCommonIoLayoutDockSplitPaneData_initWithNSString_withDouble_withInt_(((jint) [((NSString *) nil_chk(splitPath)) length]) > 0 ? [splitPath substring:1] : @"", horizontal ? width1 : height1, horizontal ? 1 : 0)];
    OrgGeogebraCommonIoLayoutPerspectiveDecoder_buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_withNSString_withJavaUtilArrayList_withJavaUtilArrayList_withDouble_withDouble_([((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([en getRight])) unwrap], JreStrcat("$$", panelPath, (horizontal ? @",1" : @",2")), JreStrcat("$$", splitPath, @",1"), panelList, splitList, width2, height2);
    OrgGeogebraCommonIoLayoutPerspectiveDecoder_buildPerspectiveWithOrgGeogebraCommonKernelArithmeticExpressionValue_withNSString_withNSString_withJavaUtilArrayList_withJavaUtilArrayList_withDouble_withDouble_([((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([en getLeft])) unwrap], JreStrcat("$$", panelPath, (horizontal ? @",3" : @",0")), JreStrcat("$$", splitPath, @",0"), panelList, splitList, width1, height1);
  }
  else {
    OrgGeogebraCommonMainApp_errorWithNSString_(JreStrcat("$$", @"Wrong type", [[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(expr)) getClass] getName]));
  }
}

jdouble OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_(id<OrgGeogebraCommonKernelArithmeticExpressionValue> expr, jboolean horizontal) {
  OrgGeogebraCommonIoLayoutPerspectiveDecoder_initialize();
  if ([expr isKindOfClass:[OrgGeogebraCommonKernelArithmeticVariable class]] && horizontal) {
    NSString *name = [((OrgGeogebraCommonKernelArithmeticVariable *) nil_chk(((OrgGeogebraCommonKernelArithmeticVariable *) check_class_cast(expr, [OrgGeogebraCommonKernelArithmeticVariable class])))) getNameWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    if ([@"A" isEqual:name] || [@"C" isEqual:name]) {
      return 0.5;
    }
  }
  if (!([expr isKindOfClass:[OrgGeogebraCommonKernelArithmeticExpressionNode class]])) {
    return 1;
  }
  OrgGeogebraCommonKernelArithmeticExpressionNode *en = (OrgGeogebraCommonKernelArithmeticExpressionNode *) check_class_cast(expr, [OrgGeogebraCommonKernelArithmeticExpressionNode class]);
  if ([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) getOperation] != OrgGeogebraCommonPluginOperationEnum_get_NO_OPERATION() && [en getRight] != nil) {
    return OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_([en getLeft], horizontal) + OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_([en getRight], horizontal);
  }
  return OrgGeogebraCommonIoLayoutPerspectiveDecoder_sizeWithOrgGeogebraCommonKernelArithmeticExpressionValue_withBoolean_([en getLeft], horizontal);
}

void OrgGeogebraCommonIoLayoutPerspectiveDecoder_init(OrgGeogebraCommonIoLayoutPerspectiveDecoder *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonIoLayoutPerspectiveDecoder *new_OrgGeogebraCommonIoLayoutPerspectiveDecoder_init() {
  OrgGeogebraCommonIoLayoutPerspectiveDecoder *self = [OrgGeogebraCommonIoLayoutPerspectiveDecoder alloc];
  OrgGeogebraCommonIoLayoutPerspectiveDecoder_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonIoLayoutPerspectiveDecoder)
