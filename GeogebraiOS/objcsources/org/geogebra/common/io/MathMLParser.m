//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/io/MathMLParser.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/StringIndexOutOfBoundsException.h"
#include "java/util/HashMap.h"
#include "org/geogebra/common/io/MathMLParser.h"
#include "org/geogebra/common/util/Unicode.h"

@interface OrgGeogebraCommonIoMathMLParser () {
 @public
  NSString *PH_BLOCK_START_;
  jchar PH_BLOCK_END_;
  IOSCharArray *specialCharacters_;
  IOSCharArray *leftBraces_;
  IOSCharArray *rightBraces_;
  JavaUtilHashMap *substitutions_;
  NSString *strBuf_;
  jint pos_;
  jboolean wrappedEntities_;
  jboolean skipUnknownEntities_;
  jboolean geogebraSyntax_;
  NSString *nextTag_;
  JavaLangStringBuilder *tagBuf_;
  JavaLangStringBuilder *entity_;
  NSString *entitySubst_;
  jboolean closeBracketNext_;
}

- (NSString *)getNextTag;

+ (jboolean)isValidUnicodeWithNSString:(NSString *)vu;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, PH_BLOCK_START_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, specialCharacters_, IOSCharArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, leftBraces_, IOSCharArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, rightBraces_, IOSCharArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, substitutions_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, strBuf_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, nextTag_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, tagBuf_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, entity_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, entitySubst_, NSString *)

static JavaUtilHashMap *OrgGeogebraCommonIoMathMLParser_geogebraMap_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonIoMathMLParser, geogebraMap_, JavaUtilHashMap *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, geogebraMap_, JavaUtilHashMap *)

static JavaUtilHashMap *OrgGeogebraCommonIoMathMLParser_latexMap_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonIoMathMLParser, latexMap_, JavaUtilHashMap *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonIoMathMLParser, latexMap_, JavaUtilHashMap *)

__attribute__((unused)) static NSString *OrgGeogebraCommonIoMathMLParser_getNextTag(OrgGeogebraCommonIoMathMLParser *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonIoMathMLParser_isValidUnicodeWithNSString_(NSString *vu);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonIoMathMLParser)

@implementation OrgGeogebraCommonIoMathMLParser

- (instancetype)initWithBoolean:(jboolean)geogebraSyntax1 {
  OrgGeogebraCommonIoMathMLParser_initWithBoolean_(self, geogebraSyntax1);
  return self;
}

- (NSString *)parseWithNSString:(NSString *)strBuf0
                    withBoolean:(jboolean)wrappedEntities1
                    withBoolean:(jboolean)skipUnknownEntities1 {
  NSString *strBuf1 = [((NSString *) nil_chk([((NSString *) nil_chk(strBuf0)) replace:0x000a withChar:' '])) replace:0x000d withChar:' '];
  strBuf1 = [((NSString *) nil_chk(strBuf1)) replaceAll:@"<!--.*?-->" withReplacement:@""];
  strBuf1 = [((NSString *) nil_chk(strBuf1)) replace:@"><" withSequence:@"> <"];
  strBuf1 = [((NSString *) nil_chk(strBuf1)) replaceAll:@"<msqrt.*?>" withReplacement:@"<msqrt> <mrow>"];
  strBuf1 = [((NSString *) nil_chk(strBuf1)) replace:@"</msqrt>" withSequence:@"</mrow> </msqrt>"];
  strBuf1 = [((NSString *) nil_chk(strBuf1)) replaceAll:@"<mtd.*?>" withReplacement:@"<mtd> <mrow>"];
  strBuf1 = [((NSString *) nil_chk(strBuf1)) replace:@"</mtd>" withSequence:@"</mrow> </mtd>"];
  if (strBuf1 != nil) {
    OrgGeogebraCommonIoMathMLParser_set_strBuf_(self, strBuf1);
    self->wrappedEntities_ = wrappedEntities1;
    self->skipUnknownEntities_ = skipUnknownEntities1;
    JavaLangStringBuilder *result = [new_JavaLangStringBuilder_initWithInt_(((jint) [strBuf_ length])) autorelease];
    pos_ = 0;
    @try {
      while ([strBuf_ indexOfString:@"<" fromIndex:pos_] != -1) {
        [self parseBlockWithNSString:OrgGeogebraCommonIoMathMLParser_getNextTag(self) withJavaLangStringBuilder:result withBoolean:YES];
        [self skipFollowingTag];
      }
      return [result description];
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
    }
    return nil;
  }
  return nil;
}

- (void)parseBlockWithNSString:(NSString *)startTag
     withJavaLangStringBuilder:(JavaLangStringBuilder *)result
                   withBoolean:(jboolean)appendSpace {
  jboolean closeBracketNow = self->closeBracketNext_;
  self->closeBracketNext_ = NO;
  NSString *endTag = [self generateEndTagWithNSString:startTag];
  jint blockEnd = [self getBlockEndWithNSString:startTag withNSString:endTag];
  NSString *substBuf;
  NSString *blockContent;
  jboolean inside = YES;
  jint blockNumber = 0;
  jint prevBlockNumber;
  while (pos_ <= blockEnd) {
    jint i = pos_;
    while ((i <= blockEnd) && ([((NSString *) nil_chk(strBuf_)) charAtWithInt:i] != '<')) i++;
    if ((startTag != endTag) && (i > blockEnd)) {
      if (inside) {
        blockContent = [((NSString *) nil_chk(strBuf_)) substring:pos_ endIndex:blockEnd + 1];
        [((JavaLangStringBuilder *) nil_chk(result)) appendWithNSString:[self parseBlockContentWithNSString:blockContent]];
        if (appendSpace) {
          [result appendWithChar:' '];
        }
        pos_ = pos_ + ((jint) [((NSString *) nil_chk(blockContent)) length]);
        blockContent = nil;
      }
      else {
        pos_ = blockEnd + 1;
      }
    }
    else {
      inside = NO;
      if ((substBuf = [((JavaUtilHashMap *) nil_chk(substitutions_)) getWithId:startTag]) != nil) {
        jint phIndex;
        jint substIndex = 0;
        while (((phIndex = [((NSString *) nil_chk(substBuf)) indexOfString:PH_BLOCK_START_ fromIndex:substIndex]) > -1) && (pos_ - 2 < blockEnd)) {
          while (substIndex < phIndex) {
            [((JavaLangStringBuilder *) nil_chk(result)) appendWithChar:[substBuf charAtWithInt:substIndex]];
            substIndex++;
          }
          substIndex += ((jint) [((NSString *) nil_chk(PH_BLOCK_START_)) length]);
          jint blockNumberIndex = substIndex;
          while ([substBuf charAtWithInt:substIndex] != PH_BLOCK_END_) {
            substIndex++;
          }
          prevBlockNumber = blockNumber;
          NSString *blockNumberStr = [substBuf substring:blockNumberIndex endIndex:substIndex];
          if ([((NSString *) nil_chk(blockNumberStr)) isEqual:@"S"]) {
            substIndex++;
            [self skipBlocksWithInt:(1 - prevBlockNumber) - 1];
            while ([((NSString *) nil_chk(([((NSString *) nil_chk(strBuf_)) substring:pos_ endIndex:blockEnd + 1]))) indexOf:'<'] != -1) {
              OrgGeogebraCommonIoMathMLParser_set_nextTag_(self, OrgGeogebraCommonIoMathMLParser_getNextTag(self));
              [self parseBlockWithNSString:nextTag_ withJavaLangStringBuilder:result withBoolean:YES];
              [self skipFollowingTag];
            }
            if (!appendSpace) {
              [result setLengthWithInt:[((JavaLangStringBuilder *) nil_chk(result)) length] - 1];
            }
          }
          else {
            @try {
              blockNumber = JavaLangInteger_parseIntWithNSString_(blockNumberStr);
            }
            @catch (JavaLangNumberFormatException *nfe) {
              @throw [new_JavaLangException_initWithNSString_(JreStrcat("$I$", @"Parsing error at character ", pos_, @": Unparseable block number in substitution.")) autorelease];
            }
            substIndex++;
            [self skipBlocksWithInt:(blockNumber - prevBlockNumber) - 1];
            OrgGeogebraCommonIoMathMLParser_set_nextTag_(self, OrgGeogebraCommonIoMathMLParser_getNextTag(self));
            [self parseBlockWithNSString:nextTag_ withJavaLangStringBuilder:result withBoolean:NO];
            [self skipFollowingTag];
          }
        }
        while (substIndex < ((jint) [substBuf length])) {
          [((JavaLangStringBuilder *) nil_chk(result)) appendWithChar:[substBuf charAtWithInt:substIndex]];
          substIndex++;
        }
        pos_ = blockEnd + ((jint) [((NSString *) nil_chk(endTag)) length]);
        if ([((NSString *) nil_chk([substitutions_ getWithId:startTag])) hasSuffix:@","]) {
          self->closeBracketNext_ = YES;
        }
      }
      else {
        while ([((NSString *) nil_chk(([((NSString *) nil_chk(strBuf_)) substring:pos_ endIndex:blockEnd + 1]))) indexOf:'<'] != -1) {
          OrgGeogebraCommonIoMathMLParser_set_nextTag_(self, OrgGeogebraCommonIoMathMLParser_getNextTag(self));
          [self parseBlockWithNSString:nextTag_ withJavaLangStringBuilder:result withBoolean:YES];
          [self skipFollowingTag];
        }
        if (!appendSpace && [result charAtWithInt:[((JavaLangStringBuilder *) nil_chk(result)) length] - 1] == ' ') {
          [result setLengthWithInt:[result length] - 1];
        }
      }
    }
    if (closeBracketNow) {
      [((JavaLangStringBuilder *) nil_chk(result)) appendWithNSString:@")"];
    }
  }
  pos_ = blockEnd;
}

- (NSString *)getNextTag {
  return OrgGeogebraCommonIoMathMLParser_getNextTag(self);
}

- (NSString *)generateEndTagWithNSString:(NSString *)startTag {
  if ([((NSString *) nil_chk(startTag)) charAtWithInt:[((JavaLangStringBuilder *) nil_chk(tagBuf_)) length] - 2] != '/') {
    if ([startTag indexOf:' '] > -1) {
      return JreStrcat("$$C", @"</", [startTag substring:1 endIndex:[startTag indexOf:' ']], '>');
    }
    return JreStrcat("$$", @"</", [startTag substring:1 endIndex:((jint) [startTag length])]);
  }
  return startTag;
}

- (void)skipFollowingTag {
  while ([((NSString *) nil_chk(strBuf_)) charAtWithInt:pos_] != '>') {
    pos_++;
  }
  pos_++;
}

- (void)skipBlocksWithInt:(jint)blocksToSkip {
  if (blocksToSkip > 0) {
    for (jint i = 0; i < blocksToSkip; i++) {
      NSString *startTag = OrgGeogebraCommonIoMathMLParser_getNextTag(self);
      NSString *endTag = [self generateEndTagWithNSString:startTag];
      pos_ = [self getBlockEndWithNSString:startTag withNSString:endTag];
      if (endTag != nil) {
        pos_ = pos_ + ((jint) [endTag length]);
      }
      else {
        pos_ = pos_ + ((jint) [((NSString *) nil_chk(startTag)) length]);
      }
    }
  }
  else if (blocksToSkip < 0) {
    for (jint i = 0; i > blocksToSkip; i--) {
      jint subBlocks = 1;
      while ([((NSString *) nil_chk(strBuf_)) charAtWithInt:pos_] != '>') {
        pos_--;
      }
      [((JavaLangStringBuilder *) nil_chk(tagBuf_)) setLengthWithInt:0];
      while ([strBuf_ charAtWithInt:pos_] != '<') {
        [tagBuf_ appendWithChar:[strBuf_ charAtWithInt:pos_]];
        pos_--;
      }
      [tagBuf_ appendWithChar:'<'];
      [tagBuf_ reverse];
      NSString *blockEndTag = [NSString stringWithJavaLangStringBuilder:tagBuf_];
      NSString *blockStartTag = [NSString stringWithJavaLangStringBuilder:[tagBuf_ deleteCharAtWithInt:1]];
      do {
        while ([strBuf_ charAtWithInt:pos_] != '>') {
          pos_--;
        }
        [tagBuf_ setLengthWithInt:0];
        while ([strBuf_ charAtWithInt:pos_] != '<') {
          [tagBuf_ appendWithChar:[strBuf_ charAtWithInt:pos_]];
          pos_--;
        }
        [tagBuf_ appendWithChar:'<'];
        [tagBuf_ reverse];
        if ([tagBuf_ indexOfWithNSString:@" "] > -1) [tagBuf_ delete__WithInt:[tagBuf_ indexOfWithNSString:@" "] withInt:[tagBuf_ length] - 1];
        if ([((NSString *) nil_chk([tagBuf_ description])) isEqual:blockStartTag]) {
          subBlocks--;
        }
        else {
          if ([((NSString *) nil_chk([tagBuf_ description])) isEqual:blockEndTag]) {
            subBlocks++;
          }
        }
      }
      while ((subBlocks > 0) || (!([((NSString *) nil_chk([tagBuf_ description])) isEqual:blockStartTag])));
    }
  }
}

- (jint)getBlockEndWithNSString:(NSString *)startTag0
                   withNSString:(NSString *)endTag {
  if (startTag0 != endTag) {
    NSString *startTag = [NSString stringWithString:startTag0];
    jint pos2 = pos_;
    jint subBlocks = 1;
    if ([startTag indexOf:' '] > -1) {
      startTag = JreStrcat("$C", [startTag substring:0 endIndex:[startTag indexOf:' ']], '>');
    }
    do {
      while ([((NSString *) nil_chk(strBuf_)) charAtWithInt:pos2] != '<') {
        pos2++;
      }
      [((JavaLangStringBuilder *) nil_chk(tagBuf_)) setLengthWithInt:0];
      while ([strBuf_ charAtWithInt:pos2] != '>') {
        [tagBuf_ appendWithChar:[strBuf_ charAtWithInt:pos2]];
        pos2++;
      }
      [tagBuf_ appendWithChar:'>'];
      if ([((NSString *) nil_chk([tagBuf_ description])) isEqual:endTag]) {
        subBlocks--;
      }
      else {
        if ([tagBuf_ indexOfWithNSString:@" "] > -1) [tagBuf_ delete__WithInt:[tagBuf_ indexOfWithNSString:@" "] withInt:[tagBuf_ length] - 1];
        if ([((NSString *) nil_chk([tagBuf_ description])) isEqual:startTag]) {
          subBlocks++;
        }
      }
    }
    while ((subBlocks > 0) || (!([((NSString *) nil_chk([tagBuf_ description])) isEqual:endTag])));
    return (pos2 - ((jint) [((NSString *) nil_chk(endTag)) length]));
  }
  return pos_ - ((jint) [((NSString *) nil_chk(startTag0)) length]);
}

- (NSString *)parseBlockContentWithNSString:(NSString *)s {
  jint sbIndex = 0;
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_initWithNSString_(s) autorelease];
  while ((sbIndex = [sb indexOfWithNSString:@"\\" withInt:sbIndex]) > -1) {
    [sb insertWithInt:sbIndex + 1 withNSString:@"backslash"];
    sbIndex = sbIndex + 10;
  }
  if (!geogebraSyntax_) {
    for (jint i = 0; i < ((IOSCharArray *) nil_chk(leftBraces_))->size_; i++) {
      sbIndex = 0;
      while ((sbIndex = [sb indexOfWithNSString:NSString_valueOfChar_(IOSCharArray_Get(leftBraces_, i)) withInt:sbIndex]) > -1) {
        [sb insertWithInt:sbIndex withNSString:@"\\left"];
        sbIndex = sbIndex + 6;
      }
    }
    for (jint i = 0; i < ((IOSCharArray *) nil_chk(rightBraces_))->size_; i++) {
      sbIndex = 0;
      while ((sbIndex = [sb indexOfWithNSString:NSString_valueOfChar_(IOSCharArray_Get(rightBraces_, i)) withInt:sbIndex]) > -1) {
        [sb insertWithInt:sbIndex withNSString:@"\\right"];
        sbIndex = sbIndex + 7;
      }
    }
  }
  for (jint i = 0; i < ((IOSCharArray *) nil_chk(specialCharacters_))->size_; i++) {
    sbIndex = 0;
    while ((sbIndex = [sb indexOfWithNSString:NSString_valueOfChar_(IOSCharArray_Get(specialCharacters_, i)) withInt:sbIndex]) > -1) {
      [sb insertWithInt:sbIndex withChar:'\\'];
      sbIndex = sbIndex + 2;
    }
  }
  sbIndex = 0;
  while ((sbIndex = [sb indexOfWithNSString:@"&" withInt:sbIndex]) > -1) {
    [((JavaLangStringBuilder *) nil_chk(entity_)) setLengthWithInt:0];
    while ([sb charAtWithInt:sbIndex] != ';') {
      [entity_ appendWithChar:[sb charAtWithInt:sbIndex]];
      sbIndex++;
    }
    [entity_ appendWithChar:';'];
    sbIndex++;
    if (wrappedEntities_ && [((NSString *) nil_chk([entity_ description])) isEqual:@"&amp;"]) {
      [sb delete__WithInt:sbIndex - 4 withInt:sbIndex];
      sbIndex = sbIndex - 5;
      [entity_ setLengthWithInt:0];
      @try {
        while ([sb charAtWithInt:sbIndex] != ';') {
          [entity_ appendWithChar:[sb charAtWithInt:sbIndex]];
          sbIndex++;
        }
      }
      @catch (JavaLangStringIndexOutOfBoundsException *sioobe) {
        @throw [new_JavaLangException_initWithNSString_(JreStrcat("$I$", @"Parsing error at character ", pos_, @": MathML code is not HTML wrapped.")) autorelease];
      }
      [entity_ appendWithChar:';'];
      sbIndex++;
    }
    if ((OrgGeogebraCommonIoMathMLParser_set_entitySubst_(self, [((JavaUtilHashMap *) nil_chk(substitutions_)) getWithId:[entity_ description]])) != nil) {
      [sb delete__WithInt:sbIndex - [entity_ length] withInt:sbIndex];
      sbIndex = sbIndex - [entity_ length];
      [sb insertWithInt:sbIndex withNSString:entitySubst_];
      sbIndex = sbIndex + ((jint) [((NSString *) nil_chk(entitySubst_)) length]);
      [sb insertWithInt:sbIndex withNSString:@" "];
      sbIndex++;
    }
    else {
      if (skipUnknownEntities_) {
        [sb delete__WithInt:sbIndex - [entity_ length] withInt:sbIndex];
        sbIndex = sbIndex - [entity_ length];
        [sb insertWithInt:sbIndex withNSString:@" "];
        sbIndex++;
      }
      else {
        NSString *entityWorkout = [entity_ description];
        if ([((NSString *) nil_chk(entityWorkout)) hasPrefix:@"&#x"]) {
          entityWorkout = [entityWorkout substring:3 endIndex:((jint) [entityWorkout length]) - 1];
        }
        else if ([entityWorkout hasPrefix:@"\\&\\#x"]) {
          entityWorkout = [entityWorkout substring:5 endIndex:((jint) [entityWorkout length]) - 1];
        }
        if (OrgGeogebraCommonIoMathMLParser_isValidUnicodeWithNSString_(entityWorkout)) {
          jint hex = JavaLangInteger_parseIntWithNSString_withInt_(entityWorkout, 16);
          JavaLangCharacter *hexChar = JavaLangCharacter_valueOfWithChar_((jchar) hex);
          [sb replaceWithInt:sbIndex - [entity_ length] withInt:sbIndex withNSString:[hexChar description]];
          sbIndex -= [entity_ length] - 1;
        }
        else {
          [sb insertWithInt:sbIndex - [entity_ length] withNSString:@"NOTFOUND:'"];
          sbIndex += 10;
          [sb insertWithInt:sbIndex withNSString:@"' "];
          sbIndex += 2;
        }
      }
    }
  }
  sbIndex = 0;
  while ((sbIndex = [sb indexOfWithNSString:@"&" withInt:sbIndex]) > -1) {
    [sb insertWithInt:sbIndex withChar:'\\'];
    sbIndex = sbIndex + 2;
  }
  sbIndex = 0;
  while ((sbIndex = [sb indexOfWithNSString:@"#" withInt:sbIndex]) > -1) {
    [sb insertWithInt:sbIndex withChar:'\\'];
    sbIndex = sbIndex + 2;
  }
  return [((NSString *) nil_chk([sb description])) trim];
}

+ (jboolean)isValidUnicodeWithNSString:(NSString *)vu {
  return OrgGeogebraCommonIoMathMLParser_isValidUnicodeWithNSString_(vu);
}

- (void)dealloc {
  RELEASE_(PH_BLOCK_START_);
  RELEASE_(specialCharacters_);
  RELEASE_(leftBraces_);
  RELEASE_(rightBraces_);
  RELEASE_(substitutions_);
  RELEASE_(strBuf_);
  RELEASE_(nextTag_);
  RELEASE_(tagBuf_);
  RELEASE_(entity_);
  RELEASE_(entitySubst_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonIoMathMLParser class]) {
    JreStrongAssignAndConsume(&OrgGeogebraCommonIoMathMLParser_geogebraMap_, nil, new_JavaUtilHashMap_init());
    {
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<mfrac>" withId:@"((%BLOCK1%) / (%BLOCK2%))"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<msup>" withId:@"((%BLOCK1%)^(%BLOCK2%))"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<msub>" withId:@"%BLOCK1%_{%BLOCK2%}"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<msqrt>" withId:@"sqrt(%BLOCK1%)"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<mroot>" withId:@"nroot(%BLOCK1%,%BLOCK2%)"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<mfenced>" withId:@"(%BLOCK1%)"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<mfenced open=\"|\" close=\"|\">" withId:@"abs(%BLOCK1%)"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<msubsup>" withId:@"(%BLOCK1%_{%BLOCK2%})^(%BLOCK3%)"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<munderover>" withId:@"%BLOCK1%(%BLOCK2%,%BLOCK3%,"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<munder>" withId:@"%BLOCK1%"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<mtable>" withId:@"{%BLOCKS%}"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<mtr>" withId:@"{%BLOCKS%}, "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"<mtd>" withId:@"%BLOCK1%, "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x222B;" withId:@"ggbMathmlIntegral"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x2211;" withId:@"ggbMathmlSum"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&dot;" withId:@"* "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sdot;" withId:@"* "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&middot;" withId:@"* "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&times;" withId:@"* "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&equals;" withId:@" = "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&forall;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&exist;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x220d;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&lowast;" withId:@"* "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&minus;" withId:@"- "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&frasl;" withId:@"/ "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ratio;" withId:@": "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&lt;" withId:@"< "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&gt;" withId:@"> "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&cong;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&InvisibleTimes;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&harr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&larr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rarr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&hArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&lArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sum;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&prod;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Integral;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&dd;" withId:@"d "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&alpha;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_alpha)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&beta;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_beta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&gamma;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_gamma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&delta;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_delta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&epsi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_epsilon)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&eta;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_eta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&iota;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_iota)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&kappa;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_kappa)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&lambda;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_lambda)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&mu;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_mu)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&mgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_mu)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&nu;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_nu)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&omicron;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_omicron)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&pi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_pi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&theta;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_theta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rho;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_rho)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_rho)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sigma;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_sigma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&tau;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_tau)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&upsilon;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_upsilon)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&phiv;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_phi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&phi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_phi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&chi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_chi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&piv;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_pi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&pgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_pi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ohgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_omega)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&omega;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_omega)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&xi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_xi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&psi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_psi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&zeta;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_zeta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Delta;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Delta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Phi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Phi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Gamma;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Gamma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Lambda;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Lambda)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Pi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Pi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&tgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_tau)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Theta;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Theta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Sigma;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Sigma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Upsilon;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Upsilon)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sigmaf;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_sigma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Omega;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Omega)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Xi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Xi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Psi;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Psi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&epsiv;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_epsilon)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&phgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_phi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ggr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_gamma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&eegr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_eta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&igr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_iota)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&phgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_phi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&kgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_kappa)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&lgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_lambda)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ngr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_nu)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ogr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_omega)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&thgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_theta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_sigma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ugr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_upsilon)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&zgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_zeta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Agr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Alpha)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Bgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Beta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&KHgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Chi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Egr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Epsilon)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&PHgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Phi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Ggr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Gamma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&EEgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Eta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Igr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Iota)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&THgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Theta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Kgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Kappa)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Lgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Lambda)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Mgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Mu)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Ngr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Nu)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Ogr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Omicron)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Pgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Pi)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Rgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Rho)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Sgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Sigma)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Tgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Tau)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Ugr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Upsilon)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&OHgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Omega)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Zgr;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_Zeta)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x2212;" withId:@"-"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&perp;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sim;" withId:@"~ "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&prime;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&le;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_LESS_EQUAL)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ge;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_GREATER_EQUAL)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&infin;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_INFINITY)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&clubs;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&diams;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&hearts;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&spades;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&PlusMinus;" withId:OrgGeogebraCommonUtilUnicode_get_PLUSMINUS_()];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Prime;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&prop;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&part;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&bull;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ne;" withId:OrgGeogebraCommonUtilUnicode_get_NOTEQUAL_()];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&equiv;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&asymp;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&hellip;" withId:@"... "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&VerticalBar;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&crarr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&alefsym;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&image;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&real;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&weierp;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&otimes;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&oplus;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&empty;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&cap;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&cup;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sup;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&supe;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&nsub;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sub;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sube;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&isin;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&notin;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ang;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&nabla;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&radic;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&and;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&or;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&and;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ang;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&angle;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ap;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&approx;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&bigoplus;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&bigotimes;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&bot;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&bottom;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&cap;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&CirclePlus;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&CircleTimes;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&cong;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Congruent;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&cup;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&darr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&dArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Del;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Del;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&DifferentialD;" withId:@"\u2146 "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&DoubleLeftArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&DoubleLeftRightArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&DoubleRightArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&DoubleUpArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&downarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Downarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&DownArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Element;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&emptyv;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&equiv;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&exist;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Exist;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&exponentiale;" withId:@"\u2147 "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&forall;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ForAll;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&geq;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_GREATER_EQUAL)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&GreaterEqual;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_GREATER_EQUAL)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&harr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&hArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&iff;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Implies;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&in;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&int;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Integral;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&isin;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&isinv;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&diam;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&diamond;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&lang;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&langle;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&larr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&lArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&LeftAngleBracket;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Leftarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&LeftArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&leftrightarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Leftrightarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&LeftRightArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&leq;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_LESS_EQUAL)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&leq;" withId:JreStrcat("C", OrgGeogebraCommonUtilUnicode_LESS_EQUAL)];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Longleftrightarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&minus;" withId:@"- "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&nabla;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&NotElement;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&NotEqual;" withId:OrgGeogebraCommonUtilUnicode_get_NOTEQUAL_()];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&notin;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&oplus;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&or;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&otimes;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&part;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&partialD;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&perp;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&prod;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Product;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rang;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rangle;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rarr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&RightAngleBracket;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&rightarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Rightarrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&RightArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sdot;" withId:@"* "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sim;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&prop;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Proportional;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&propto;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sub;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sube;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&subE;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&subset;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&subseteq;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&subseteqq;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&SubsetEqual;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sum;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Sum;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&sup;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&supe;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&supE;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Superset;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&SupersetEqual;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&supset;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&supseteq;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&supseteqq;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Tilde;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&TildeFullEqual;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&TildeTilde;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&tprime;" withId:@"\u2034 "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&uarr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&uArr;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&uparrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Uparrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&UpArrow;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&UpTee;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&varnothing;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&varpropto;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&vee;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&vprop;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&wedge;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&xoplus;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&xotime;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&Space;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&colon;" withId:@":"];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&ApplyFunction;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&squ;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x2212;" withId:@"- "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x2192;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x222b;" withId:@"# "];
      [OrgGeogebraCommonIoMathMLParser_geogebraMap_ putWithId:@"&#x2061;" withId:@""];
    }
    JreStrongAssignAndConsume(&OrgGeogebraCommonIoMathMLParser_latexMap_, nil, new_JavaUtilHashMap_init());
    {
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<mfrac>" withId:@"\\frac{%BLOCK1%}{%BLOCK2%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<msup>" withId:@"%BLOCK1%^{%BLOCK2%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<msub>" withId:@"%BLOCK1%_{%BLOCK2%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<msqrt>" withId:@"\\sqrt{%BLOCK1%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<mroot>" withId:@"\\sqrt[%BLOCK2%]{%BLOCK1%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<mfenced>" withId:@"\\left(%BLOCK1%\\right)"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<msubsup>" withId:@"%BLOCK1%_{%BLOCK2%}^{%BLOCK3%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<munderover>" withId:@"%BLOCK1%_{%BLOCK2%}^{%BLOCK3%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<munder>" withId:@"%BLOCK1%_{%BLOCK2%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<mtable>" withId:@"\\matrix{%BLOCKS%}"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<mtr>" withId:@"%BLOCKS%\\cr"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"<mtd>" withId:@"%BLOCK1%&"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&dot;" withId:@"\\cdot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sdot;" withId:@"\\cdot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&middot;" withId:@"\\cdot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&times;" withId:@"\\times "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&equals;" withId:@"\\Relbar "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&forall;" withId:@"\\forall "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&exist;" withId:@"\\exists "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&#x220d;" withId:@"\\ni "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&lowast;" withId:@"* "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&minus;" withId:@"- "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&frasl;" withId:@"/ "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ratio;" withId:@": "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&lt;" withId:@"< "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&gt;" withId:@"> "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&cong;" withId:@"\\cong "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&InvisibleTimes;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&harr;" withId:@"\\leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&larr;" withId:@"\\leftarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rarr;" withId:@"\\rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&hArr;" withId:@"\\Leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&lArr;" withId:@"\\Leftarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rArr;" withId:@"\\Rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sum;" withId:@"\\sum "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&prod;" withId:@"\\prod "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Integral;" withId:@"\\int "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&dd;" withId:@"d "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&alpha;" withId:@"\\alpha"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&beta;" withId:@"\\beta"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&gamma;" withId:@"\\gamma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&delta;" withId:@"\\delta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&epsi;" withId:@"\\epsilon "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&eta;" withId:@"\\eta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&iota;" withId:@"\\iota "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&kappa;" withId:@"\\kappa "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&lambda;" withId:@"\\lambda "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&mu;" withId:@"\\mu "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&mgr;" withId:@"\\mu "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&nu;" withId:@"\\nu "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&omicron;" withId:@"o "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&pi;" withId:@"\\pi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&theta;" withId:@"\\theta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rho;" withId:@"\\rho "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rgr;" withId:@"\\rho "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sigma;" withId:@"\\sigma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&tau;" withId:@"\\tau "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&upsilon;" withId:@"\\upsilon "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&phiv;" withId:@"\\phi"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&phi;" withId:@"\\varphi"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&chi;" withId:@"\\chi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&piv;" withId:@"\\varpi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&pgr;" withId:@"\\pi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ohgr;" withId:@"\\omega "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&omega;" withId:@"\\omega "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&xi;" withId:@"\\xi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&psi;" withId:@"\\psi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&zeta;" withId:@"\\zeta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Delta;" withId:@"\\Delta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Phi;" withId:@"\\Phi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Gamma;" withId:@"\\Gamma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Lambda;" withId:@"\\Lambda "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Pi;" withId:@"\\Pi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&tgr;" withId:@"\\tau "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Theta;" withId:@"\\Theta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Sigma;" withId:@"\\Sigma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Upsilon;" withId:@"\\Upsilon "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sigmaf;" withId:@"\\varsigma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Omega;" withId:@"\\Omega "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Xi;" withId:@"\\Xi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Psi;" withId:@"\\Psi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&epsiv;" withId:@"\\epsilon "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&phgr;" withId:@"\\phi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ggr;" withId:@"\\gamma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&eegr;" withId:@"\\eta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&igr;" withId:@"\\iota "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&phgr;" withId:@"\\phi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&kgr;" withId:@"\\kappa "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&lgr;" withId:@"\\lambda "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ngr;" withId:@"\\nu "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ogr;" withId:@"o "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&thgr;" withId:@"\\theta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sgr;" withId:@"\\sigma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ugr;" withId:@"\\upsilon "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&zgr;" withId:@"\\zeta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Agr;" withId:@"A "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Bgr;" withId:@"B "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&KHgr;" withId:@"X "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Egr;" withId:@"E "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&PHgr;" withId:@"\\Phi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Ggr;" withId:@"\\Gamma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&EEgr;" withId:@"H "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Igr;" withId:@"I "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&THgr;" withId:@"\\Theta "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Kgr;" withId:@"K "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Lgr;" withId:@"\\Lambda "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Mgr;" withId:@"M "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Ngr;" withId:@"N "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Ogr;" withId:@"O "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Pgr;" withId:@"\\Pi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Rgr;" withId:@"P "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Sgr;" withId:@"\\Sigma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Tgr;" withId:@"T "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Ugr;" withId:@"\\Upsilon "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&OHgr;" withId:@"\\Omega "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Zgr;" withId:@"Z "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&#x2212;" withId:@"-"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&perp;" withId:@"\\bot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sim;" withId:@"~ "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&prime;" withId:@"\\prime "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&le;" withId:@"\\le "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ge;" withId:@"\\ge "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&infin;" withId:@"\\infty "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&clubs;" withId:@"\\clubsuit "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&diams;" withId:@"\\diamondsuit "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&hearts;" withId:@"\\heartsuit "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&spades;" withId:@"\\spadesuit "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&PlusMinus;" withId:@"\\pm "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Prime;" withId:@"\\prime\\prime "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&prop;" withId:@"\\propto "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&part;" withId:@"\\partial "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&bull;" withId:@"\\bullet "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ne;" withId:@"\\neq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&equiv;" withId:@"\\equiv "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&asymp;" withId:@"\\approx "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&hellip;" withId:@"... "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&VerticalBar;" withId:@"\\mid "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&crarr;" withId:@"\\P "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&alefsym;" withId:@"\\aleph "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&image;" withId:@"\\Im "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&real;" withId:@"\\Re "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&weierp;" withId:@"\\wp "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&otimes;" withId:@"\\otimes "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&oplus;" withId:@"\\oplus "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&empty;" withId:@"\\emtyset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&cap;" withId:@"\\cap "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&cup;" withId:@"\\cup "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sup;" withId:@"\\supset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&supe;" withId:@"\\seupseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&nsub;" withId:@"\\not\\subset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sub;" withId:@"\\subset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sube;" withId:@"\\subseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&isin;" withId:@"\\in "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&notin;" withId:@"\\notin "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ang;" withId:@"\\angle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&nabla;" withId:@"\\nabla "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&radic;" withId:@"\\surd "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&and;" withId:@"\\wedge "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&or;" withId:@"\\vee "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&and;" withId:@"\\wedge "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ang;" withId:@"\\angle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&angle;" withId:@"\\angle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ap;" withId:@"\\approx "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&approx;" withId:@"\\approx "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&bigoplus;" withId:@"\\oplus "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&bigotimes;" withId:@"\\otimes "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&bot;" withId:@"\\bot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&bottom;" withId:@"\\bot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&cap;" withId:@"\\cap "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&CirclePlus;" withId:@"\\oplus "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&CircleTimes;" withId:@"\\otimes "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&cong;" withId:@"\\cong "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Congruent;" withId:@"\\equiv "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&cup;" withId:@"\\cup "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&darr;" withId:@"\\downarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&dArr;" withId:@"\\Downarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Del;" withId:@"\\nabla "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Del;" withId:@"\\nabla "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&DifferentialD;" withId:@"\u2146 "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&DoubleLeftArrow;" withId:@"\\Leftarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&DoubleLeftRightArrow;" withId:@"\\Leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&DoubleRightArrow;" withId:@"\\Rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&DoubleUpArrow;" withId:@"\\Uparrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&downarrow;" withId:@"\\downarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Downarrow;" withId:@"\\Downarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&DownArrow;" withId:@"\\Downarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Element;" withId:@"\\in "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&emptyv;" withId:@"\\oslash "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&equiv;" withId:@"\\equiv "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&exist;" withId:@"\\exists "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Exist;" withId:@"\\exists "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&exponentiale;" withId:@"\u2147 "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&forall;" withId:@"\\forall "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ForAll;" withId:@"\\forall "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ge;" withId:@"\\geq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&geq;" withId:@"\\geq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&GreaterEqual;" withId:@"\\geq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&harr;" withId:@"\\leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&hArr;" withId:@"\\Leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&iff;" withId:@"\\Leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Implies;" withId:@"\\Rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&in;" withId:@"\\in "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&infin;" withId:@"\\infty "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&int;" withId:@"\\int "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Integral;" withId:@"\\int "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&isin;" withId:@"\\in "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&isinv;" withId:@"\\in "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&diam;" withId:@"\\diamond "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&diamond;" withId:@"\\diamond "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&lang;" withId:@"\\left\\langle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&langle;" withId:@"\\left\\langle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&larr;" withId:@"\\leftarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&lArr;" withId:@"\\Leftarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&le;" withId:@"\\leq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&LeftAngleBracket;" withId:@"\\left\\langle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Leftarrow;" withId:@"\\Leftarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&LeftArrow;" withId:@"\\leftarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&leftrightarrow;" withId:@"\\leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Leftrightarrow;" withId:@"\\Leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&LeftRightArrow;" withId:@"\\leftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&leq;" withId:@"\\leq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&leq;" withId:@"\\leq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Longleftrightarrow;" withId:@"\\Longleftrightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&minus;" withId:@"- "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&nabla;" withId:@"\\nabla "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&NotElement;" withId:@"\\notin "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&NotEqual;" withId:@"\\notin "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&notin;" withId:@"\\notin "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&oplus;" withId:@"\\oplus "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&or;" withId:@"\\vee "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&otimes;" withId:@"\\otimes "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&part;" withId:@"\\partial "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&partialD;" withId:@"\\partial "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&perp;" withId:@"\\bot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&prod;" withId:@"\\Pi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Product;" withId:@"\\Pi "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rang;" withId:@"\\right\\rangle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rangle;" withId:@"\\right\\rangle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rarr;" withId:@"\\rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rArr;" withId:@"\\Rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&RightAngleBracket;" withId:@"\\right\\rangle "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&rightarrow;" withId:@"\\rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Rightarrow;" withId:@"\\Rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&RightArrow;" withId:@"\\rightarrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sdot;" withId:@"\\cdot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sim;" withId:@"\\sim "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&prop;" withId:@"\\propto "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Proportional;" withId:@"\\propto "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&propto;" withId:@"\\propto "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sub;" withId:@"\\subset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sube;" withId:@"\\subseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&subE;" withId:@"\\subseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&subset;" withId:@"\\subset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&subseteq;" withId:@"\\subseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&subseteqq;" withId:@"\\subseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&SubsetEqual;" withId:@"\\subseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sum;" withId:@"\\Sigma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Sum;" withId:@"\\Sigma "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&sup;" withId:@"\\supset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&supe;" withId:@"\\supseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&supE;" withId:@"\\supseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Superset;" withId:@"\\supset"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&SupersetEqual;" withId:@"\\supseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&supset;" withId:@"\\supset "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&supseteq;" withId:@"\\supseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&supseteqq;" withId:@"\\supseteq "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Tilde;" withId:@"\\sim "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&TildeFullEqual;" withId:@"\\cong "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&TildeTilde;" withId:@"\\approx "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&tprime;" withId:@"\u2034 "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&uarr;" withId:@"\\uparrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&uArr;" withId:@"\\Uparrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&uparrow;" withId:@"\\uparrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Uparrow;" withId:@"\\Uparrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&UpArrow;" withId:@"\\uparrow "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&UpTee;" withId:@"\\bot "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&varnothing;" withId:@"\\oslash "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&varpropto;" withId:@"\\propto "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&vee;" withId:@"\\vee "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&vprop;" withId:@"\\propto "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&wedge;" withId:@"\\wedge "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&xoplus;" withId:@"\\oplus "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&xotime;" withId:@"\\otimes "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&Space;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&colon;" withId:@":"];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&ApplyFunction;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&squ;" withId:@" "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&#x2212;" withId:@"- "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&#x2192;" withId:@"\\to "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&#x222b;" withId:@"\\int "];
      [OrgGeogebraCommonIoMathMLParser_latexMap_ putWithId:@"&#x2061;" withId:@""];
    }
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonIoMathMLParser)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:", "MathMLParser", NULL, 0x1, NULL, NULL },
    { "parseWithNSString:withBoolean:withBoolean:", "parse", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "parseBlockWithNSString:withJavaLangStringBuilder:withBoolean:", "parseBlock", "V", 0x0, "Ljava.lang.Exception;", NULL },
    { "getNextTag", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "generateEndTagWithNSString:", "generateEndTag", "Ljava.lang.String;", 0x0, NULL, NULL },
    { "skipFollowingTag", NULL, "V", 0x0, NULL, NULL },
    { "skipBlocksWithInt:", "skipBlocks", "V", 0x0, NULL, NULL },
    { "getBlockEndWithNSString:withNSString:", "getBlockEnd", "I", 0x0, NULL, NULL },
    { "parseBlockContentWithNSString:", "parseBlockContent", "Ljava.lang.String;", 0x0, "Ljava.lang.Exception;", NULL },
    { "isValidUnicodeWithNSString:", "isValidUnicode", "Z", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geogebraMap_", NULL, 0xa, "Ljava.util.HashMap;", &OrgGeogebraCommonIoMathMLParser_geogebraMap_, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;",  },
    { "latexMap_", NULL, 0xa, "Ljava.util.HashMap;", &OrgGeogebraCommonIoMathMLParser_latexMap_, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;",  },
    { "PH_BLOCK_START_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL,  },
    { "PH_BLOCK_END_", NULL, 0x12, "C", NULL, NULL,  },
    { "specialCharacters_", NULL, 0x12, "[C", NULL, NULL,  },
    { "leftBraces_", NULL, 0x12, "[C", NULL, NULL,  },
    { "rightBraces_", NULL, 0x12, "[C", NULL, NULL,  },
    { "substitutions_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;",  },
    { "strBuf_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "pos_", NULL, 0x2, "I", NULL, NULL,  },
    { "wrappedEntities_", NULL, 0x2, "Z", NULL, NULL,  },
    { "skipUnknownEntities_", NULL, 0x2, "Z", NULL, NULL,  },
    { "geogebraSyntax_", NULL, 0x2, "Z", NULL, NULL,  },
    { "nextTag_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "tagBuf_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
    { "entity_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
    { "entitySubst_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "closeBracketNext_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonIoMathMLParser = { 2, "MathMLParser", "org.geogebra.common.io", NULL, 0x1, 10, methods, 18, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonIoMathMLParser;
}

@end

void OrgGeogebraCommonIoMathMLParser_initWithBoolean_(OrgGeogebraCommonIoMathMLParser *self, jboolean geogebraSyntax1) {
  NSObject_init(self);
  OrgGeogebraCommonIoMathMLParser_set_PH_BLOCK_START_(self, @"%BLOCK");
  self->PH_BLOCK_END_ = '%';
  OrgGeogebraCommonIoMathMLParser_setAndConsume_specialCharacters_(self, [IOSCharArray newArrayWithChars:(jchar[]){ '%', '_', '$' } count:3]);
  OrgGeogebraCommonIoMathMLParser_setAndConsume_leftBraces_(self, [IOSCharArray newArrayWithChars:(jchar[]){ '(', '{', '[' } count:3]);
  OrgGeogebraCommonIoMathMLParser_setAndConsume_rightBraces_(self, [IOSCharArray newArrayWithChars:(jchar[]){ ')', '{', ']' } count:3]);
  OrgGeogebraCommonIoMathMLParser_setAndConsume_tagBuf_(self, new_JavaLangStringBuilder_initWithInt_(200));
  OrgGeogebraCommonIoMathMLParser_setAndConsume_entity_(self, new_JavaLangStringBuilder_initWithInt_(32));
  OrgGeogebraCommonIoMathMLParser_set_entitySubst_(self, @"");
  self->closeBracketNext_ = NO;
  self->geogebraSyntax_ = geogebraSyntax1;
  if (geogebraSyntax1) {
    OrgGeogebraCommonIoMathMLParser_set_substitutions_(self, OrgGeogebraCommonIoMathMLParser_geogebraMap_);
  }
  else {
    OrgGeogebraCommonIoMathMLParser_set_substitutions_(self, OrgGeogebraCommonIoMathMLParser_latexMap_);
  }
}

OrgGeogebraCommonIoMathMLParser *new_OrgGeogebraCommonIoMathMLParser_initWithBoolean_(jboolean geogebraSyntax1) {
  OrgGeogebraCommonIoMathMLParser *self = [OrgGeogebraCommonIoMathMLParser alloc];
  OrgGeogebraCommonIoMathMLParser_initWithBoolean_(self, geogebraSyntax1);
  return self;
}

NSString *OrgGeogebraCommonIoMathMLParser_getNextTag(OrgGeogebraCommonIoMathMLParser *self) {
  while ([((NSString *) nil_chk(self->strBuf_)) charAtWithInt:self->pos_] != '<') {
    self->pos_++;
  }
  [((JavaLangStringBuilder *) nil_chk(self->tagBuf_)) setLengthWithInt:0];
  while ([self->strBuf_ charAtWithInt:self->pos_] != '>') {
    [self->tagBuf_ appendWithChar:[self->strBuf_ charAtWithInt:self->pos_]];
    self->pos_++;
  }
  self->pos_++;
  [self->tagBuf_ appendWithChar:'>'];
  return [self->tagBuf_ description];
}

jboolean OrgGeogebraCommonIoMathMLParser_isValidUnicodeWithNSString_(NSString *vu) {
  OrgGeogebraCommonIoMathMLParser_initialize();
  if (((jint) [((NSString *) nil_chk(vu)) length]) != 4) return NO;
  IOSCharArray *ca = [((NSString *) nil_chk([vu lowercaseString])) toCharArray];
  for (jint i = 0; i < 4; i++) if (!JavaLangCharacter_isDigitWithChar_(IOSCharArray_Get(nil_chk(ca), i)) && (IOSCharArray_Get(ca, i) < 'a' || IOSCharArray_Get(ca, i) > 'f')) return NO;
  return YES;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonIoMathMLParser)
