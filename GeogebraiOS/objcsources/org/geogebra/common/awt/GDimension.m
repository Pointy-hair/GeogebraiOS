//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/awt/GDimension.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/awt/GDimension.h"

@implementation OrgGeogebraCommonAwtGDimension

- (jint)getWidth {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isEqual:(id)e {
  if ([e isKindOfClass:[OrgGeogebraCommonAwtGDimension class]]) {
    return [self getWidth] == [((OrgGeogebraCommonAwtGDimension *) nil_chk(((OrgGeogebraCommonAwtGDimension *) check_class_cast(e, [OrgGeogebraCommonAwtGDimension class])))) getWidth] && [self getHeight] == [((OrgGeogebraCommonAwtGDimension *) nil_chk(((OrgGeogebraCommonAwtGDimension *) check_class_cast(e, [OrgGeogebraCommonAwtGDimension class])))) getHeight];
  }
  return NO;
}

- (instancetype)init {
  OrgGeogebraCommonAwtGDimension_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWidth", NULL, "I", 0x401, NULL, NULL },
    { "getHeight", NULL, "I", 0x401, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x11, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonAwtGDimension = { 2, "GDimension", "org.geogebra.common.awt", NULL, 0x401, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonAwtGDimension;
}

@end

void OrgGeogebraCommonAwtGDimension_init(OrgGeogebraCommonAwtGDimension *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonAwtGDimension)
