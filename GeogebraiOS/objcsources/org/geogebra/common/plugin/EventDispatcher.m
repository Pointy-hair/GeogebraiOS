//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/plugin/EventDispatcher.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/ModeSetter.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/Event.h"
#include "org/geogebra/common/plugin/EventDispatcher.h"
#include "org/geogebra/common/plugin/EventListener.h"
#include "org/geogebra/common/plugin/EventType.h"
#include "org/geogebra/common/util/debug/GeoGebraProfiler.h"

@interface OrgGeogebraCommonPluginEventDispatcher () {
 @public
  OrgGeogebraCommonMainApp *app_;
  JavaUtilArrayList *listeners_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonPluginEventDispatcher, app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonPluginEventDispatcher, listeners_, JavaUtilArrayList *)

@implementation OrgGeogebraCommonPluginEventDispatcher

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  OrgGeogebraCommonPluginEventDispatcher_initWithOrgGeogebraCommonMainApp_(self, app);
  return self;
}

- (void)addEventListenerWithOrgGeogebraCommonPluginEventListener:(id<OrgGeogebraCommonPluginEventListener>)listener {
  [((JavaUtilArrayList *) nil_chk(listeners_)) addWithId:listener];
}

- (void)dispatchEventWithOrgGeogebraCommonPluginEvent:(OrgGeogebraCommonPluginEvent *)evt {
  for (id<OrgGeogebraCommonPluginEventListener> __strong listener in nil_chk(listeners_)) {
    [((id<OrgGeogebraCommonPluginEventListener>) nil_chk(listener)) sendEventWithOrgGeogebraCommonPluginEvent:evt];
  }
}

- (void)dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:(OrgGeogebraCommonPluginEventTypeEnum *)evtType
                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                 withNSString:(NSString *)arg {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelSet]) {
    return;
  }
  [self dispatchEventWithOrgGeogebraCommonPluginEvent:[new_OrgGeogebraCommonPluginEvent_initWithOrgGeogebraCommonPluginEventTypeEnum_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(evtType, geo, arg) autorelease]];
}

- (void)dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:(OrgGeogebraCommonPluginEventTypeEnum *)evtType
                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if ((nil != geo) && (![geo isLabelSet])) {
    return;
  }
  [self dispatchEventWithOrgGeogebraCommonPluginEvent:[new_OrgGeogebraCommonPluginEvent_initWithOrgGeogebraCommonPluginEventTypeEnum_withOrgGeogebraCommonKernelGeosGeoElement_(evtType, geo) autorelease]];
}

- (void)dispatchBulkEventWithOrgGeogebraCommonPluginEventTypeEnum:(OrgGeogebraCommonPluginEventTypeEnum *)evtType
                                            withJavaUtilArrayList:(JavaUtilArrayList *)geos {
  [self dispatchEventWithOrgGeogebraCommonPluginEvent:[new_OrgGeogebraCommonPluginEvent_initWithOrgGeogebraCommonPluginEventTypeEnum_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_withJavaUtilArrayList_(evtType, nil, nil, geos) autorelease]];
}

- (void)addWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_ADD() withOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)removeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_REMOVE() withOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)renameWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_RENAME() withOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)updateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  jlong start = JavaLangSystem_currentTimeMillis();
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_UPDATE() withOrgGeogebraCommonKernelGeosGeoElement:geo];
  OrgGeogebraCommonUtilDebugGeoGebraProfiler_addEventWithLong_(JavaLangSystem_currentTimeMillis() - start);
}

- (void)updateVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)updateAuxiliaryObjectWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)repaintView {
}

- (void)reset {
}

- (void)clearView {
  for (id<OrgGeogebraCommonPluginEventListener> __strong listener in nil_chk(listeners_)) {
    [((id<OrgGeogebraCommonPluginEventListener>) nil_chk(listener)) reset];
  }
}

- (void)setModeWithInt:(jint)mode
withOrgGeogebraCommonKernelModeSetterEnum:(OrgGeogebraCommonKernelModeSetterEnum *)m {
}

- (jint)getViewID {
  return OrgGeogebraCommonMainApp_VIEW_EVENT_DISPATCHER;
}

- (jboolean)hasFocus {
  return NO;
}

- (void)repaint {
}

- (jboolean)isShowing {
  return NO;
}

- (void)startBatchUpdate {
}

- (void)endBatchUpdate {
}

- (void)renameUpdatesComplete {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_RENAME_COMPLETE() withOrgGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)addingPolygon {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_ADD_POLYGON() withOrgGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)addPolygonCompleteWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)polygon {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_ADD_POLYGON_COMPLETE() withOrgGeogebraCommonKernelGeosGeoElement:polygon];
}

- (void)movingGeos {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_MOVING_GEOS() withOrgGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)movedGeosWithJavaUtilArrayList:(JavaUtilArrayList *)elms {
  [self dispatchBulkEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_MOVED_GEOS() withJavaUtilArrayList:elms];
}

- (void)deleteGeosWithJavaUtilArrayList:(JavaUtilArrayList *)elms {
  [self dispatchBulkEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_DELETE_GEOS() withJavaUtilArrayList:elms];
}

- (void)pasteElms {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_PASTE_ELMS() withOrgGeogebraCommonKernelGeosGeoElement:nil];
}

- (void)pasteElmsCompleteWithJavaUtilArrayList:(JavaUtilArrayList *)pastedElms {
  [self dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:OrgGeogebraCommonPluginEventTypeEnum_get_PASTE_ELMS_COMPLETE() withOrgGeogebraCommonKernelGeosGeoElement:nil];
}

- (jboolean)suggestRepaint {
  return NO;
}

- (void)dealloc {
  RELEASE_(app_);
  RELEASE_(listeners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:", "EventDispatcher", NULL, 0x1, NULL, NULL },
    { "addEventListenerWithOrgGeogebraCommonPluginEventListener:", "addEventListener", "V", 0x1, NULL, NULL },
    { "dispatchEventWithOrgGeogebraCommonPluginEvent:", "dispatchEvent", "V", 0x1, NULL, NULL },
    { "dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:withOrgGeogebraCommonKernelGeosGeoElement:withNSString:", "dispatchEvent", "V", 0x1, NULL, NULL },
    { "dispatchEventWithOrgGeogebraCommonPluginEventTypeEnum:withOrgGeogebraCommonKernelGeosGeoElement:", "dispatchEvent", "V", 0x1, NULL, NULL },
    { "dispatchBulkEventWithOrgGeogebraCommonPluginEventTypeEnum:withJavaUtilArrayList:", "dispatchBulkEvent", "V", 0x1, NULL, NULL },
    { "addWithOrgGeogebraCommonKernelGeosGeoElement:", "add", "V", 0x1, NULL, NULL },
    { "removeWithOrgGeogebraCommonKernelGeosGeoElement:", "remove", "V", 0x1, NULL, NULL },
    { "renameWithOrgGeogebraCommonKernelGeosGeoElement:", "rename", "V", 0x1, NULL, NULL },
    { "updateWithOrgGeogebraCommonKernelGeosGeoElement:", "update", "V", 0x1, NULL, NULL },
    { "updateVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:", "updateVisualStyle", "V", 0x1, NULL, NULL },
    { "updateAuxiliaryObjectWithOrgGeogebraCommonKernelGeosGeoElement:", "updateAuxiliaryObject", "V", 0x1, NULL, NULL },
    { "repaintView", NULL, "V", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "clearView", NULL, "V", 0x1, NULL, NULL },
    { "setModeWithInt:withOrgGeogebraCommonKernelModeSetterEnum:", "setMode", "V", 0x1, NULL, NULL },
    { "getViewID", NULL, "I", 0x1, NULL, NULL },
    { "hasFocus", NULL, "Z", 0x1, NULL, NULL },
    { "repaint", NULL, "V", 0x1, NULL, NULL },
    { "isShowing", NULL, "Z", 0x1, NULL, NULL },
    { "startBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "endBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "renameUpdatesComplete", NULL, "V", 0x1, NULL, NULL },
    { "addingPolygon", NULL, "V", 0x1, NULL, NULL },
    { "addPolygonCompleteWithOrgGeogebraCommonKernelGeosGeoElement:", "addPolygonComplete", "V", 0x1, NULL, NULL },
    { "movingGeos", NULL, "V", 0x1, NULL, NULL },
    { "movedGeosWithJavaUtilArrayList:", "movedGeos", "V", 0x1, NULL, NULL },
    { "deleteGeosWithJavaUtilArrayList:", "deleteGeos", "V", 0x1, NULL, NULL },
    { "pasteElms", NULL, "V", 0x1, NULL, NULL },
    { "pasteElmsCompleteWithJavaUtilArrayList:", "pasteElmsComplete", "V", 0x1, NULL, NULL },
    { "suggestRepaint", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "listeners_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/plugin/EventListener;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonPluginEventDispatcher = { 2, "EventDispatcher", "org.geogebra.common.plugin", NULL, 0x1, 31, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonPluginEventDispatcher;
}

@end

void OrgGeogebraCommonPluginEventDispatcher_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonPluginEventDispatcher *self, OrgGeogebraCommonMainApp *app) {
  NSObject_init(self);
  OrgGeogebraCommonPluginEventDispatcher_setAndConsume_listeners_(self, new_JavaUtilArrayList_init());
  OrgGeogebraCommonPluginEventDispatcher_set_app_(self, app);
  [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel])) attachWithOrgGeogebraCommonKernelView:self];
}

OrgGeogebraCommonPluginEventDispatcher *new_OrgGeogebraCommonPluginEventDispatcher_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonPluginEventDispatcher *self = [OrgGeogebraCommonPluginEventDispatcher alloc];
  OrgGeogebraCommonPluginEventDispatcher_initWithOrgGeogebraCommonMainApp_(self, app);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonPluginEventDispatcher)
