//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/ContextMenuGeoElement.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/awt/GPoint.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/EuclidianStyleBarStatic.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/EuclidianViewInterfaceCommon.h"
#include "org/geogebra/common/euclidian/Hits.h"
#include "org/geogebra/common/gui/ContextMenuGeoElement.h"
#include "org/geogebra/common/kernel/AnimationManager.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/UndoManager.h"
#include "org/geogebra/common/kernel/geos/AbsoluteScreenLocateable.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoSegment.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/kernel/geos/GeoUserInputElement.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"
#include "org/geogebra/common/kernel/geos/Traceable.h"
#include "org/geogebra/common/kernel/kernelND/HasCoordsMode.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/DialogManager.h"
#include "org/geogebra/common/main/GuiManagerInterface.h"
#include "org/geogebra/common/main/OptionType.h"
#include "org/geogebra/common/main/SelectionManager.h"
#include "org/geogebra/common/main/SpreadsheetTraceManager.h"

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGuiContextMenuGeoElement)

IOSDoubleArray *OrgGeogebraCommonGuiContextMenuGeoElement_zoomFactors_;
IOSDoubleArray *OrgGeogebraCommonGuiContextMenuGeoElement_axesRatios_;

@implementation OrgGeogebraCommonGuiContextMenuGeoElement

- (NSString *)getDescriptionWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                          withBoolean:(jboolean)addHTMLtag {
  NSString *title = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getLongDescriptionHTMLWithBoolean:NO withBoolean:addHTMLtag];
  if (((jint) [((NSString *) nil_chk(title)) length]) > 80) title = [geo getNameDescriptionHTMLWithBoolean:NO withBoolean:addHTMLtag];
  return title;
}

- (void)cartesianCoordsCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([OrgGeogebraCommonKernelKernelNDHasCoordsMode_class_() isInstance:geo1]) {
      id<OrgGeogebraCommonKernelKernelNDHasCoordsMode> point1 = (id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) check_protocol_cast(geo1, @protocol(OrgGeogebraCommonKernelKernelNDHasCoordsMode));
      [((id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) nil_chk(point1)) setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_CARTESIAN];
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) updateRepaint];
    }
  }
  [((OrgGeogebraCommonKernelUndoManager *) nil_chk([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getConstruction])) getUndoManager])) storeUndoInfoWithBoolean:YES];
}

- (void)polarCoorsCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([OrgGeogebraCommonKernelKernelNDHasCoordsMode_class_() isInstance:geo1]) {
      id<OrgGeogebraCommonKernelKernelNDHasCoordsMode> point1 = (id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) check_protocol_cast(geo1, @protocol(OrgGeogebraCommonKernelKernelNDHasCoordsMode));
      [((id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) nil_chk(point1)) setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_POLAR];
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) updateRepaint];
    }
  }
  [((OrgGeogebraCommonKernelUndoManager *) nil_chk([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getConstruction])) getUndoManager])) storeUndoInfoWithBoolean:YES];
}

- (void)cartesianCoords3dCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([OrgGeogebraCommonKernelKernelNDHasCoordsMode_class_() isInstance:geo1]) {
      id<OrgGeogebraCommonKernelKernelNDHasCoordsMode> point1 = (id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) check_protocol_cast(geo1, @protocol(OrgGeogebraCommonKernelKernelNDHasCoordsMode));
      [((id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) nil_chk(point1)) setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_CARTESIAN_3D];
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) updateRepaint];
    }
  }
  [((OrgGeogebraCommonKernelUndoManager *) nil_chk([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getConstruction])) getUndoManager])) storeUndoInfoWithBoolean:YES];
}

- (void)sphericalCoordsCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([OrgGeogebraCommonKernelKernelNDHasCoordsMode_class_() isInstance:geo1]) {
      id<OrgGeogebraCommonKernelKernelNDHasCoordsMode> point1 = (id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) check_protocol_cast(geo1, @protocol(OrgGeogebraCommonKernelKernelNDHasCoordsMode));
      [((id<OrgGeogebraCommonKernelKernelNDHasCoordsMode>) nil_chk(point1)) setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_SPHERICAL];
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) updateRepaint];
    }
  }
  [((OrgGeogebraCommonKernelUndoManager *) nil_chk([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getConstruction])) getUndoManager])) storeUndoInfoWithBoolean:YES];
}

- (void)equationImplicitEquationCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]] && !([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]])) {
      OrgGeogebraCommonKernelGeosGeoLine *line1 = (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoLine class]);
      [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(line1)) setModeWithInt:OrgGeogebraCommonKernelGeosGeoLine_EQUATION_IMPLICIT];
      [line1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)equationExplicitEquationCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]] && !([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]])) {
      OrgGeogebraCommonKernelGeosGeoLine *line1 = (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoLine class]);
      [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(line1)) setModeWithInt:OrgGeogebraCommonKernelGeosGeoLine_EQUATION_EXPLICIT];
      [line1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)parametricFormCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]] && !([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]])) {
      OrgGeogebraCommonKernelGeosGeoLine *line1 = (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoLine class]);
      [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(line1)) setModeWithInt:OrgGeogebraCommonKernelGeosGeoLine_PARAMETRIC];
      [line1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)cartesianCoordsForVectorItemsCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoVector class]]) {
      OrgGeogebraCommonKernelGeosGeoVector *vector1 = (OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoVector class]);
      [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(vector1)) setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_CARTESIAN];
      [vector1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonKernelUndoManager *) nil_chk([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getConstruction])) getUndoManager])) storeUndoInfoWithBoolean:YES];
}

- (void)polarCoordsForVectorItemsCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([geo1 isKindOfClass:[OrgGeogebraCommonKernelGeosGeoVector class]]) {
      OrgGeogebraCommonKernelGeosGeoVector *vector1 = (OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoVector class]);
      [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(vector1)) setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_POLAR];
      [vector1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonKernelUndoManager *) nil_chk([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getConstruction])) getUndoManager])) storeUndoInfoWithBoolean:YES];
}

- (void)implicitConicEquationCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) getClass] == OrgGeogebraCommonKernelGeosGeoConic_class_()) {
      OrgGeogebraCommonKernelGeosGeoConic *conic1 = (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoConic class]);
      [conic1 setToImplicit];
      [conic1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)equationConicEqnCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) getClass] == OrgGeogebraCommonKernelGeosGeoConic_class_()) {
      OrgGeogebraCommonKernelGeosGeoConic *conic1 = (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoConic class]);
      [conic1 setToSpecific];
      [conic1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)equationExplicitConicEquationCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) getClass] == OrgGeogebraCommonKernelGeosGeoConic_class_()) {
      OrgGeogebraCommonKernelGeosGeoConic *conic1 = (OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoConic class]);
      [conic1 setToExplicit];
      [conic1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)extendedFormCmdWithOrgGeogebraCommonKernelGeosGeoUserInputElement:(OrgGeogebraCommonKernelGeosGeoUserInputElement *)inputElement {
  [((OrgGeogebraCommonKernelGeosGeoUserInputElement *) nil_chk(inputElement)) setExtendedForm];
  [inputElement updateRepaint];
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)deleteCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) removeOrSetUndefinedIfHasFixedDescendent];
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (JavaUtilArrayList *)checkOneGeo {
  if (justOneGeo_) {
    JavaUtilArrayList *ret = new_JavaUtilArrayList_init();
    [ret addWithId:geo_];
    return ret;
  }
  return geos_;
}

- (void)editCmd {
  [((OrgGeogebraCommonMainDialogManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getDialogManager])) showTextDialogWithOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *) check_class_cast(geo_, [OrgGeogebraCommonKernelGeosGeoText class])];
}

- (void)renameCmd {
  [((OrgGeogebraCommonMainDialogManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getDialogManager])) showRenameDialogWithOrgGeogebraCommonKernelGeosGeoElement:geo_ withBoolean:YES withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) getLabelSimple] withBoolean:YES];
}

- (void)fixObjectNumericCmdWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)num {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) isGeoNumeric]) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoNumeric class])) setSliderFixedWithBoolean:![((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(num)) isSliderFixed]];
      [geo1 updateRepaint];
    }
    else {
      [geo1 setFixedWithBoolean:![((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(num)) isSliderFixed]];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)fixObjectCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) isGeoNumeric]) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo1, [OrgGeogebraCommonKernelGeosGeoNumeric class])) setSliderFixedWithBoolean:![geo1 isFixed]];
      [geo1 updateRepaint];
    }
    else {
      if ([geo1 isFixable]) {
        [geo1 setFixedWithBoolean:![geo1 isFixed]];
        [geo1 updateRepaint];
      }
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)fixCheckboxCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoBoolean *geo1 = (OrgGeogebraCommonKernelGeosGeoBoolean *) check_class_cast([geos2 getWithInt:i], [OrgGeogebraCommonKernelGeosGeoBoolean class]);
    [geo1 setCheckboxFixedWithBoolean:![((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(geo1)) isCheckboxFixed]];
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (jboolean)isLabelShown {
  return [self isLabelShownWithJavaUtilArrayList:[self checkOneGeo]];
}

- (jboolean)isLabelShownWithJavaUtilArrayList:(JavaUtilArrayList *)geos2 {
  jboolean show = YES;
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    show = (show && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geos2 getWithInt:i])) isLabelVisible]);
  }
  return show;
}

- (void)showLabelCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  jboolean show = [self isLabelShownWithJavaUtilArrayList:geos2];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) setLabelVisibleWithBoolean:!show];
    [geo1 updateRepaint];
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)showObjectCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  jboolean newVisibility = ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((JavaUtilArrayList *) nil_chk(geos2)) getWithInt:0])) isSetEuclidianVisible];
  for (jint i = [geos2 size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) setEuclidianVisibleWithBoolean:newVisibility];
    [geo1 updateRepaint];
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)showObjectAuxiliaryCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) isAlgebraShowable]) {
      [geo1 setAuxiliaryObjectWithBoolean:![geo1 isAuxiliaryObject]];
      [geo1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)openPropertiesDialogCmd {
  [((OrgGeogebraCommonMainDialogManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getDialogManager])) showPropertiesDialogWithOrgGeogebraCommonMainOptionTypeEnum:OrgGeogebraCommonMainOptionTypeEnum_get_OBJECTS() withJavaUtilArrayList:[self checkOneGeo]];
}

- (void)inputFormCmdWithOrgGeogebraCommonKernelGeosGeoUserInputElement:(OrgGeogebraCommonKernelGeosGeoUserInputElement *)inputElement {
  [((OrgGeogebraCommonKernelGeosGeoUserInputElement *) nil_chk(inputElement)) setInputForm];
  [inputElement updateRepaint];
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)traceCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) isTraceable]) {
      [((id<OrgGeogebraCommonKernelGeosTraceable>) check_protocol_cast(geo1, @protocol(OrgGeogebraCommonKernelGeosTraceable))) setTraceWithBoolean:![((id<OrgGeogebraCommonKernelGeosTraceable>) check_protocol_cast(geo1, @protocol(OrgGeogebraCommonKernelGeosTraceable))) getTrace]];
      [geo1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)animationCmd {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) isAnimatable]) {
      [geo1 setAnimatingWithBoolean:!([geo1 isAnimating] && [((OrgGeogebraCommonKernelAnimationManager *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getAnimatonManager])) isRunning])];
      [geo1 updateRepaint];
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
  [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk([app_ getActiveEuclidianView])) repaint];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) isAnimating]) [((OrgGeogebraCommonKernelAnimationManager *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([geo_ getKernel])) getAnimatonManager])) startAnimation];
}

- (void)pinCmdWithBoolean:(jboolean)isSelected {
  JavaUtilArrayList *geos2 = [self checkOneGeo];
  for (jint i = [((JavaUtilArrayList *) nil_chk(geos2)) size] - 1; i >= 0; i--) {
    OrgGeogebraCommonKernelGeosGeoElement *geo1 = [geos2 getWithInt:i];
    if ([OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable_class_() isInstance:geo1] && ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo1)) isGeoList]) {
      id<OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable> geoText = (id<OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable>) check_protocol_cast(geo1, @protocol(OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable));
      jboolean flag = ![geoText isAbsoluteScreenLocActive];
      if (flag) {
        jint x = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getActiveEuclidianView])) toScreenCoordXWithDouble:[geoText getRealWorldLocX]];
        jint y = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk([app_ getActiveEuclidianView])) toScreenCoordYWithDouble:[geoText getRealWorldLocY]];
        [geoText setAbsoluteScreenLocWithInt:x withInt:y];
      }
      else {
        jdouble x = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getActiveEuclidianView])) toRealWorldCoordXWithDouble:[geoText getAbsoluteScreenLocX]];
        jdouble y = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk([app_ getActiveEuclidianView])) toRealWorldCoordYWithDouble:[geoText getAbsoluteScreenLocY]];
        [geoText setRealWorldLocWithDouble:x withDouble:y];
      }
      [geoText setAbsoluteScreenLocActiveWithBoolean:flag];
      [geoText updateRepaint];
    }
    else if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) isPinnable]) {
      (void) OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixPositionWithJavaUtilArrayList_withBoolean_withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(geos2, isSelected, [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getActiveEuclidianView]);
    }
  }
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) storeUndoInfo];
}

- (void)geoActionCmdWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cmdGeo
                                        withJavaUtilArrayList:(JavaUtilArrayList *)sGeos
                                        withJavaUtilArrayList:(JavaUtilArrayList *)gs
                  withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)v
                               withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)l {
  if ([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(v)) getMode] == OrgGeogebraCommonEuclidianEuclidianConstants_MODE_MOVE) {
    [((OrgGeogebraCommonMainSelectionManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getSelectionManager])) clearSelectedGeosWithBoolean:NO];
    [((OrgGeogebraCommonMainSelectionManager *) nil_chk([app_ getSelectionManager])) addSelectedGeoWithOrgGeogebraCommonKernelGeosGeoElement:cmdGeo];
    [((JavaUtilArrayList *) nil_chk(sGeos)) clear];
    [sGeos addWithId:cmdGeo];
    if ([app_ getGuiManager] != nil) {
      [((id<OrgGeogebraCommonMainGuiManagerInterface>) nil_chk([app_ getGuiManager])) showPopupChooseGeoWithJavaUtilArrayList:sGeos withJavaUtilArrayList:gs withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon:v withOrgGeogebraCommonAwtGPoint:l];
    }
  }
  else {
    OrgGeogebraCommonEuclidianHits *hits = new_OrgGeogebraCommonEuclidianHits_init();
    [hits addWithId:cmdGeo];
    [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([v getEuclidianController])) processModeWithOrgGeogebraCommonEuclidianHits:hits withBoolean:NO];
  }
}

- (void)recordToSpreadSheetCmd {
  OrgGeogebraCommonMainSpreadsheetTraceManager *traceManager = [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getTraceManager];
  if (![((OrgGeogebraCommonMainSpreadsheetTraceManager *) nil_chk(traceManager)) isTraceGeoWithOrgGeogebraCommonKernelGeosGeoElement:geo_]) {
    [traceManager addSpreadsheetTraceGeoWithOrgGeogebraCommonKernelGeosGeoElement:geo_];
  }
}

- (instancetype)init {
  OrgGeogebraCommonGuiContextMenuGeoElement_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGuiContextMenuGeoElement class]) {
    OrgGeogebraCommonGuiContextMenuGeoElement_zoomFactors_ = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 4.0, 2.0, 1.5, 1.25, 1.0 / 1.25, 1.0 / 1.5, 0.5, 0.25 } count:8];
    OrgGeogebraCommonGuiContextMenuGeoElement_axesRatios_ = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 1.0 / 1000.0, 1.0 / 500.0, 1.0 / 200.0, 1.0 / 100.0, 1.0 / 50.0, 1.0 / 20.0, 1.0 / 10.0, 1.0 / 5.0, 1.0 / 2.0, 1, 2, 5, 10, 20, 50, 100, 200, 500, 1000 } count:19];
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGuiContextMenuGeoElement)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getDescriptionWithOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "getDescription", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "cartesianCoordsCmd", NULL, "V", 0x1, NULL, NULL },
    { "polarCoorsCmd", NULL, "V", 0x1, NULL, NULL },
    { "cartesianCoords3dCmd", NULL, "V", 0x1, NULL, NULL },
    { "sphericalCoordsCmd", NULL, "V", 0x1, NULL, NULL },
    { "equationImplicitEquationCmd", NULL, "V", 0x1, NULL, NULL },
    { "equationExplicitEquationCmd", NULL, "V", 0x1, NULL, NULL },
    { "parametricFormCmd", NULL, "V", 0x1, NULL, NULL },
    { "cartesianCoordsForVectorItemsCmd", NULL, "V", 0x1, NULL, NULL },
    { "polarCoordsForVectorItemsCmd", NULL, "V", 0x1, NULL, NULL },
    { "implicitConicEquationCmd", NULL, "V", 0x1, NULL, NULL },
    { "equationConicEqnCmd", NULL, "V", 0x1, NULL, NULL },
    { "equationExplicitConicEquationCmd", NULL, "V", 0x1, NULL, NULL },
    { "extendedFormCmdWithOrgGeogebraCommonKernelGeosGeoUserInputElement:", "extendedFormCmd", "V", 0x1, NULL, NULL },
    { "deleteCmd", NULL, "V", 0x1, NULL, NULL },
    { "checkOneGeo", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "editCmd", NULL, "V", 0x1, NULL, NULL },
    { "renameCmd", NULL, "V", 0x1, NULL, NULL },
    { "fixObjectNumericCmdWithOrgGeogebraCommonKernelGeosGeoNumeric:", "fixObjectNumericCmd", "V", 0x1, NULL, NULL },
    { "fixObjectCmd", NULL, "V", 0x1, NULL, NULL },
    { "fixCheckboxCmd", NULL, "V", 0x1, NULL, NULL },
    { "isLabelShown", NULL, "Z", 0x1, NULL, NULL },
    { "isLabelShownWithJavaUtilArrayList:", "isLabelShown", "Z", 0x1, NULL, NULL },
    { "showLabelCmd", NULL, "V", 0x1, NULL, NULL },
    { "showObjectCmd", NULL, "V", 0x1, NULL, NULL },
    { "showObjectAuxiliaryCmd", NULL, "V", 0x1, NULL, NULL },
    { "openPropertiesDialogCmd", NULL, "V", 0x1, NULL, NULL },
    { "inputFormCmdWithOrgGeogebraCommonKernelGeosGeoUserInputElement:", "inputFormCmd", "V", 0x1, NULL, NULL },
    { "traceCmd", NULL, "V", 0x1, NULL, NULL },
    { "animationCmd", NULL, "V", 0x1, NULL, NULL },
    { "pinCmdWithBoolean:", "pinCmd", "V", 0x1, NULL, NULL },
    { "geoActionCmdWithOrgGeogebraCommonKernelGeosGeoElement:withJavaUtilArrayList:withJavaUtilArrayList:withOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonAwtGPoint:", "geoActionCmd", "V", 0x1, NULL, NULL },
    { "recordToSpreadSheetCmd", NULL, "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "zoomFactors_", NULL, 0xc, "[D", &OrgGeogebraCommonGuiContextMenuGeoElement_zoomFactors_, NULL,  },
    { "axesRatios_", NULL, 0xc, "[D", &OrgGeogebraCommonGuiContextMenuGeoElement_axesRatios_, NULL,  },
    { "geos_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
    { "geo_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "app_", NULL, 0x1, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "justOneGeo_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiContextMenuGeoElement = { 2, "ContextMenuGeoElement", "org.geogebra.common.gui", NULL, 0x401, 34, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiContextMenuGeoElement;
}

@end

void OrgGeogebraCommonGuiContextMenuGeoElement_init(OrgGeogebraCommonGuiContextMenuGeoElement *self) {
  (void) NSObject_init(self);
  self->justOneGeo_ = NO;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiContextMenuGeoElement)
