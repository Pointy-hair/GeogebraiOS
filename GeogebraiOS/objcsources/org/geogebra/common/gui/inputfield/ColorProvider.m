//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/inputfield/ColorProvider.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gwt/regexp/shared/MatchResult.h"
#include "com/google/gwt/regexp/shared/RegExp.h"
#include "com/google/gwt/regexp/shared/SplitResult.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/gui/inputfield/ColorProvider.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/parser/cashandlers/ParserFunctions.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/GeoGebraColorConstants.h"

#define OrgGeogebraCommonGuiInputfieldColorProvider_TEXT_LENGHT_LIMIT 1000

@interface OrgGeogebraCommonGuiInputfieldColorProvider () {
 @public
  OrgGeogebraCommonKernelKernel *kernel_;
  id<JavaUtilSet> labels_;
  id<JavaUtilSet> locals_;
  OrgGeogebraCommonKernelParserCashandlersParserFunctions *pf_;
  id<JavaUtilList> definedObjectsIntervals_;
  id<JavaUtilList> undefinedObjectsIntervals_;
  id<JavaUtilList> ignoreIntervals_;
  id<JavaUtilList> localVariableIntervals_;
  NSString *text_;
  jboolean isCasInput_;
  ComGoogleGwtRegexpSharedRegExp *commandReg_;
  ComGoogleGwtRegexpSharedRegExp *commandParamReg_;
  ComGoogleGwtRegexpSharedRegExp *splitter_;
  ComGoogleGwtRegexpSharedRegExp *assignmentReg_;
}

+ (ComGoogleGwtRegexpSharedRegExp *)createAssignmentRegExpWithBoolean:(jboolean)isCasInput;

- (void)getIntervals;

- (void)getIntervalsRecursivelyWithNSString:(NSString *)text1
                                    withInt:(jint)startIndex;

- (ComGoogleGwtRegexpSharedSplitResult *)getVariablesWithNSString:(NSString *)vars;

+ (NSString *)trimVarWithNSString:(NSString *)var;

+ (void)addToWithJavaUtilList:(id<JavaUtilList>)list
                      withInt:(jint)s
                      withInt:(jint)e;

- (void)addToIntervalWithNSString:(NSString *)label
                          withInt:(jint)s
                          withInt:(jint)len;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, kernel_, OrgGeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, labels_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, locals_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, pf_, OrgGeogebraCommonKernelParserCashandlersParserFunctions *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, definedObjectsIntervals_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, undefinedObjectsIntervals_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, ignoreIntervals_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, localVariableIntervals_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, text_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, commandReg_, ComGoogleGwtRegexpSharedRegExp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, commandParamReg_, ComGoogleGwtRegexpSharedRegExp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, splitter_, ComGoogleGwtRegexpSharedRegExp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider, assignmentReg_, ComGoogleGwtRegexpSharedRegExp *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, TEXT_LENGHT_LIMIT, jint)

static NSString *OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_REGEX_STRING_ = @"((\\p{L}\\p{M}*)(\\p{L}\\p{M}*|\\p{Nd})*'?(\\_\\{+(\\P{M}\\p{M}*)+\\}|\\_(\\P{M}\\p{M})?)?(\\p{L}\\p{M}|\\p{Nd})*)";
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, LABEL_REGEX_STRING_, NSString *)

static NSString *OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_PARAM_ = @"((\\p{L}\\p{M}*)(\\p{L}\\p{M}*|\\p{Nd})*'?(\\_\\{+(\\P{M}\\p{M}*)+\\}|\\_(\\P{M}\\p{M})?)?(\\p{L}\\p{M}|\\p{Nd})*)(\\(|\\[)?";
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, LABEL_PARAM_, NSString *)

static NSString *OrgGeogebraCommonGuiInputfieldColorProvider_STRING_ = @"((\\P{M}\\p{M}*)*)";
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, STRING_, NSString *)

static NSString *OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_ = @"\\p{Z}*";
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, WHITESPACE_, NSString *)

static OrgGeogebraCommonAwtGColor *OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFINED_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, COLOR_DEFINED_, OrgGeogebraCommonAwtGColor *)

static OrgGeogebraCommonAwtGColor *OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_UNDEFINED_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, COLOR_UNDEFINED_, OrgGeogebraCommonAwtGColor *)

static OrgGeogebraCommonAwtGColor *OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_LOCAL_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, COLOR_LOCAL_, OrgGeogebraCommonAwtGColor *)

static OrgGeogebraCommonAwtGColor *OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFAULT_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiInputfieldColorProvider, COLOR_DEFAULT_, OrgGeogebraCommonAwtGColor *)

__attribute__((unused)) static ComGoogleGwtRegexpSharedRegExp *OrgGeogebraCommonGuiInputfieldColorProvider_createAssignmentRegExpWithBoolean_(jboolean isCasInput);

__attribute__((unused)) static void OrgGeogebraCommonGuiInputfieldColorProvider_getIntervals(OrgGeogebraCommonGuiInputfieldColorProvider *self);

__attribute__((unused)) static void OrgGeogebraCommonGuiInputfieldColorProvider_getIntervalsRecursivelyWithNSString_withInt_(OrgGeogebraCommonGuiInputfieldColorProvider *self, NSString *text1, jint startIndex);

__attribute__((unused)) static ComGoogleGwtRegexpSharedSplitResult *OrgGeogebraCommonGuiInputfieldColorProvider_getVariablesWithNSString_(OrgGeogebraCommonGuiInputfieldColorProvider *self, NSString *vars);

__attribute__((unused)) static NSString *OrgGeogebraCommonGuiInputfieldColorProvider_trimVarWithNSString_(NSString *var);

__attribute__((unused)) static void OrgGeogebraCommonGuiInputfieldColorProvider_addToWithJavaUtilList_withInt_withInt_(id<JavaUtilList> list, jint s, jint e);

__attribute__((unused)) static void OrgGeogebraCommonGuiInputfieldColorProvider_addToIntervalWithNSString_withInt_withInt_(OrgGeogebraCommonGuiInputfieldColorProvider *self, NSString *label, jint s, jint len);

@interface OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult : NSObject {
 @public
  jint index_;
  NSString *input_;
  id<JavaUtilList> groups_;
  jboolean isCommand__;
}

- (instancetype)initWithOrgGeogebraCommonGuiInputfieldColorProvider:(OrgGeogebraCommonGuiInputfieldColorProvider *)outer$
                                                            withInt:(jint)index
                                                       withNSString:(NSString *)input
                                                   withJavaUtilList:(id<JavaUtilList>)groups
                                                        withBoolean:(jboolean)isCommand;

- (jboolean)isCommand;

- (void)setCommandWithBoolean:(jboolean)isCommand;

- (jint)getIndex;

- (NSString *)getGroupWithInt:(jint)i;

- (NSString *)getInput;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult, input_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult, groups_, id<JavaUtilList>)

__attribute__((unused)) static void OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withInt_withNSString_withJavaUtilList_withBoolean_(OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *self, OrgGeogebraCommonGuiInputfieldColorProvider *outer$, jint index, NSString *input, id<JavaUtilList> groups, jboolean isCommand);

__attribute__((unused)) static OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *new_OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withInt_withNSString_withJavaUtilList_withBoolean_(OrgGeogebraCommonGuiInputfieldColorProvider *outer$, jint index, NSString *input, id<JavaUtilList> groups, jboolean isCommand) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult)

@interface OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp : NSObject {
 @public
  OrgGeogebraCommonGuiInputfieldColorProvider *this$0_;
  ComGoogleGwtRegexpSharedRegExp *regExp_;
  NSString *input_;
  NSString *text_;
  jint index_;
}

- (instancetype)initWithOrgGeogebraCommonGuiInputfieldColorProvider:(OrgGeogebraCommonGuiInputfieldColorProvider *)outer$
                                                       withNSString:(NSString *)text;

- (OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *)exec;

- (void)setTextWithNSString:(NSString *)text;

- (jchar)getClosingBracketWithNSString:(NSString *)openingBracket;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp, this$0_, OrgGeogebraCommonGuiInputfieldColorProvider *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp, regExp_, ComGoogleGwtRegexpSharedRegExp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp, input_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp, text_, NSString *)

__attribute__((unused)) static void OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withNSString_(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *self, OrgGeogebraCommonGuiInputfieldColorProvider *outer$, NSString *text);

__attribute__((unused)) static OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *new_OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withNSString_(OrgGeogebraCommonGuiInputfieldColorProvider *outer$, NSString *text) NS_RETURNS_RETAINED;

__attribute__((unused)) static jchar OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_getClosingBracketWithNSString_(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *self, NSString *openingBracket);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGuiInputfieldColorProvider)

@implementation OrgGeogebraCommonGuiInputfieldColorProvider

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                     withBoolean:(jboolean)isCasInput1 {
  OrgGeogebraCommonGuiInputfieldColorProvider_initWithOrgGeogebraCommonMainApp_withBoolean_(self, app, isCasInput1);
  return self;
}

- (void)setTextWithNSString:(NSString *)text1 {
  text_ = text1;
  if (((jint) [((NSString *) nil_chk(text1)) length]) > OrgGeogebraCommonGuiInputfieldColorProvider_TEXT_LENGHT_LIMIT) {
    return;
  }
  OrgGeogebraCommonGuiInputfieldColorProvider_getIntervals(self);
}

- (OrgGeogebraCommonAwtGColor *)getColorWithInt:(jint)i {
  for (IOSObjectArray * __strong in in nil_chk(definedObjectsIntervals_)) {
    if ([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(in), 0))) intValue] <= i && [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(in, 1))) intValue] > i) {
      return OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFINED_;
    }
  }
  for (IOSObjectArray * __strong in in nil_chk(localVariableIntervals_)) {
    if ([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(in), 0))) intValue] <= i && [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(in, 1))) intValue] > i) {
      return OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_LOCAL_;
    }
  }
  if (isCasInput_) {
    return OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFAULT_;
  }
  for (IOSObjectArray * __strong in in nil_chk(ignoreIntervals_)) {
    if ([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(in), 0))) intValue] <= i && [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(in, 1))) intValue] > i) {
      return OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFAULT_;
    }
  }
  for (IOSObjectArray * __strong in in nil_chk(undefinedObjectsIntervals_)) {
    if ([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(in), 0))) intValue] <= i && [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(in, 1))) intValue] > i) {
      return OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_UNDEFINED_;
    }
  }
  return OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFAULT_;
}

- (void)setIsCasInputWithBoolean:(jboolean)isCasInput1 {
  if (isCasInput_ != isCasInput1) {
    isCasInput_ = isCasInput1;
    assignmentReg_ = OrgGeogebraCommonGuiInputfieldColorProvider_createAssignmentRegExpWithBoolean_(isCasInput_);
  }
}

+ (ComGoogleGwtRegexpSharedRegExp *)createAssignmentRegExpWithBoolean:(jboolean)isCasInput {
  return OrgGeogebraCommonGuiInputfieldColorProvider_createAssignmentRegExpWithBoolean_(isCasInput);
}

- (void)getIntervals {
  OrgGeogebraCommonGuiInputfieldColorProvider_getIntervals(self);
}

- (void)getIntervalsRecursivelyWithNSString:(NSString *)text1
                                    withInt:(jint)startIndex {
  OrgGeogebraCommonGuiInputfieldColorProvider_getIntervalsRecursivelyWithNSString_withInt_(self, text1, startIndex);
}

- (ComGoogleGwtRegexpSharedSplitResult *)getVariablesWithNSString:(NSString *)vars {
  return OrgGeogebraCommonGuiInputfieldColorProvider_getVariablesWithNSString_(self, vars);
}

+ (NSString *)trimVarWithNSString:(NSString *)var {
  return OrgGeogebraCommonGuiInputfieldColorProvider_trimVarWithNSString_(var);
}

+ (void)addToWithJavaUtilList:(id<JavaUtilList>)list
                      withInt:(jint)s
                      withInt:(jint)e {
  OrgGeogebraCommonGuiInputfieldColorProvider_addToWithJavaUtilList_withInt_withInt_(list, s, e);
}

- (void)addToIntervalWithNSString:(NSString *)label
                          withInt:(jint)s
                          withInt:(jint)len {
  OrgGeogebraCommonGuiInputfieldColorProvider_addToIntervalWithNSString_withInt_withInt_(self, label, s, len);
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGuiInputfieldColorProvider class]) {
    OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFINED_ = OrgGeogebraCommonMainGeoGebraColorConstants_get_DEFINED_OBJECT_COLOR_();
    OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_UNDEFINED_ = OrgGeogebraCommonMainGeoGebraColorConstants_get_UNDEFINED_OBJECT_COLOR_();
    OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_LOCAL_ = OrgGeogebraCommonMainGeoGebraColorConstants_get_LOCAL_OBJECT_COLOR_();
    OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFAULT_ = OrgGeogebraCommonMainGeoGebraColorConstants_get_BLACK_();
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGuiInputfieldColorProvider)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:withBoolean:", "ColorProvider", NULL, 0x1, NULL, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL, NULL },
    { "getColorWithInt:", "getColor", "Lorg.geogebra.common.awt.GColor;", 0x1, NULL, NULL },
    { "setIsCasInputWithBoolean:", "setIsCasInput", "V", 0x1, NULL, NULL },
    { "createAssignmentRegExpWithBoolean:", "createAssignmentRegExp", "Lcom.google.gwt.regexp.shared.RegExp;", 0xa, NULL, NULL },
    { "getIntervals", NULL, "V", 0x2, NULL, NULL },
    { "getIntervalsRecursivelyWithNSString:withInt:", "getIntervalsRecursively", "V", 0x2, NULL, NULL },
    { "getVariablesWithNSString:", "getVariables", "Lcom.google.gwt.regexp.shared.SplitResult;", 0x2, NULL, NULL },
    { "trimVarWithNSString:", "trimVar", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "addToWithJavaUtilList:withInt:withInt:", "addTo", "V", 0xa, NULL, NULL },
    { "addToIntervalWithNSString:withInt:withInt:", "addToInterval", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TEXT_LENGHT_LIMIT_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiInputfieldColorProvider_TEXT_LENGHT_LIMIT },
    { "LABEL_REGEX_STRING_", NULL, 0x1a, "Ljava.lang.String;", &OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_REGEX_STRING_, NULL,  },
    { "LABEL_PARAM_", NULL, 0x1a, "Ljava.lang.String;", &OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_PARAM_, NULL,  },
    { "STRING_", NULL, 0x1a, "Ljava.lang.String;", &OrgGeogebraCommonGuiInputfieldColorProvider_STRING_, NULL,  },
    { "WHITESPACE_", NULL, 0x1a, "Ljava.lang.String;", &OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_, NULL,  },
    { "COLOR_DEFINED_", NULL, 0x1a, "Lorg.geogebra.common.awt.GColor;", &OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFINED_, NULL,  },
    { "COLOR_UNDEFINED_", NULL, 0x1a, "Lorg.geogebra.common.awt.GColor;", &OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_UNDEFINED_, NULL,  },
    { "COLOR_LOCAL_", NULL, 0x1a, "Lorg.geogebra.common.awt.GColor;", &OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_LOCAL_, NULL,  },
    { "COLOR_DEFAULT_", NULL, 0x1a, "Lorg.geogebra.common.awt.GColor;", &OrgGeogebraCommonGuiInputfieldColorProvider_COLOR_DEFAULT_, NULL,  },
    { "kernel_", NULL, 0x2, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "labels_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/String;>;",  },
    { "locals_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/String;>;",  },
    { "pf_", NULL, 0x2, "Lorg.geogebra.common.kernel.parser.cashandlers.ParserFunctions;", NULL, NULL,  },
    { "definedObjectsIntervals_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<L[Ljava/lang/Integer;;>;",  },
    { "undefinedObjectsIntervals_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<L[Ljava/lang/Integer;;>;",  },
    { "ignoreIntervals_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<L[Ljava/lang/Integer;;>;",  },
    { "localVariableIntervals_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<L[Ljava/lang/Integer;;>;",  },
    { "text_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "isCasInput_", NULL, 0x2, "Z", NULL, NULL,  },
    { "commandReg_", NULL, 0x2, "Lcom.google.gwt.regexp.shared.RegExp;", NULL, NULL,  },
    { "commandParamReg_", NULL, 0x2, "Lcom.google.gwt.regexp.shared.RegExp;", NULL, NULL,  },
    { "splitter_", NULL, 0x2, "Lcom.google.gwt.regexp.shared.RegExp;", NULL, NULL,  },
    { "assignmentReg_", NULL, 0x2, "Lcom.google.gwt.regexp.shared.RegExp;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.inputfield.ColorProvider$MyMatchResult;", "Lorg.geogebra.common.gui.inputfield.ColorProvider$MyLabelParamRegExp;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiInputfieldColorProvider = { 2, "ColorProvider", "org.geogebra.common.gui.inputfield", NULL, 0x1, 11, methods, 23, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiInputfieldColorProvider;
}

@end

void OrgGeogebraCommonGuiInputfieldColorProvider_initWithOrgGeogebraCommonMainApp_withBoolean_(OrgGeogebraCommonGuiInputfieldColorProvider *self, OrgGeogebraCommonMainApp *app, jboolean isCasInput1) {
  (void) NSObject_init(self);
  self->commandReg_ = ComGoogleGwtRegexpSharedRegExp_compileWithNSString_withNSString_(JreStrcat("$$$$", OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_REGEX_STRING_, @"\\[(", OrgGeogebraCommonGuiInputfieldColorProvider_STRING_, @"|,)\\]"), @"g");
  self->commandParamReg_ = ComGoogleGwtRegexpSharedRegExp_compileWithNSString_withNSString_(@"<(\\p{L}\\p{M}*| |\\-)*>", @"g");
  self->splitter_ = ComGoogleGwtRegexpSharedRegExp_compileWithNSString_(@",");
  self->assignmentReg_ = OrgGeogebraCommonGuiInputfieldColorProvider_createAssignmentRegExpWithBoolean_(self->isCasInput_);
  self->kernel_ = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel];
  [self setIsCasInputWithBoolean:isCasInput1];
  self->labels_ = nil;
  self->locals_ = nil;
  self->definedObjectsIntervals_ = new_JavaUtilArrayList_init();
  self->undefinedObjectsIntervals_ = new_JavaUtilArrayList_init();
  self->ignoreIntervals_ = new_JavaUtilArrayList_init();
  self->localVariableIntervals_ = new_JavaUtilArrayList_init();
  self->pf_ = [app getParserFunctions];
  self->text_ = @"";
}

OrgGeogebraCommonGuiInputfieldColorProvider *new_OrgGeogebraCommonGuiInputfieldColorProvider_initWithOrgGeogebraCommonMainApp_withBoolean_(OrgGeogebraCommonMainApp *app, jboolean isCasInput1) {
  OrgGeogebraCommonGuiInputfieldColorProvider *self = [OrgGeogebraCommonGuiInputfieldColorProvider alloc];
  OrgGeogebraCommonGuiInputfieldColorProvider_initWithOrgGeogebraCommonMainApp_withBoolean_(self, app, isCasInput1);
  return self;
}

ComGoogleGwtRegexpSharedRegExp *OrgGeogebraCommonGuiInputfieldColorProvider_createAssignmentRegExpWithBoolean_(jboolean isCasInput) {
  OrgGeogebraCommonGuiInputfieldColorProvider_initialize();
  return ComGoogleGwtRegexpSharedRegExp_compileWithNSString_(JreStrcat("C$$$$$$$C$$$$$$$", '^', OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_, OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_REGEX_STRING_, @"(\\(", OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_, @"((", OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_REGEX_STRING_, OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_, ',', OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_, @")*)", OrgGeogebraCommonGuiInputfieldColorProvider_LABEL_REGEX_STRING_, OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_, @"\\))", OrgGeogebraCommonGuiInputfieldColorProvider_WHITESPACE_, (!isCasInput ? @"(\\:\\=|\\=)" : @"(\\:\\=)")));
}

void OrgGeogebraCommonGuiInputfieldColorProvider_getIntervals(OrgGeogebraCommonGuiInputfieldColorProvider *self) {
  if (self->isCasInput_) {
    self->labels_ = [((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getConstruction])) getAllLabels];
  }
  else {
    self->labels_ = [((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getConstruction])) getAllGeoLabels];
  }
  self->locals_ = new_JavaUtilHashSet_init();
  [((id<JavaUtilList>) nil_chk(self->definedObjectsIntervals_)) clear];
  [((id<JavaUtilList>) nil_chk(self->undefinedObjectsIntervals_)) clear];
  [((id<JavaUtilList>) nil_chk(self->ignoreIntervals_)) clear];
  [((id<JavaUtilList>) nil_chk(self->localVariableIntervals_)) clear];
  ComGoogleGwtRegexpSharedMatchResult *res;
  if (!self->isCasInput_) {
    while ((res = [((ComGoogleGwtRegexpSharedRegExp *) nil_chk(self->commandReg_)) execWithNSString:self->text_]) != nil) {
      jint i = [((ComGoogleGwtRegexpSharedMatchResult *) nil_chk(res)) getIndex];
      [self->ignoreIntervals_ addWithId:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(i), JavaLangInteger_valueOfWithInt_(i + ((jint) [((NSString *) nil_chk([res getGroupWithInt:1])) length])) } count:2 type:JavaLangInteger_class_()]];
    }
    while ((res = [((ComGoogleGwtRegexpSharedRegExp *) nil_chk(self->commandParamReg_)) execWithNSString:self->text_]) != nil) {
      jint i = [((ComGoogleGwtRegexpSharedMatchResult *) nil_chk(res)) getIndex];
      [self->ignoreIntervals_ addWithId:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(i), JavaLangInteger_valueOfWithInt_(i + ((jint) [((NSString *) nil_chk([res getGroupWithInt:0])) length])) } count:2 type:JavaLangInteger_class_()]];
    }
  }
  res = [((ComGoogleGwtRegexpSharedRegExp *) nil_chk(self->assignmentReg_)) execWithNSString:self->text_];
  if (res != nil) {
    NSString *label = [res getGroupWithInt:1];
    if ([((id<JavaUtilSet>) nil_chk(self->labels_)) containsWithId:label]) {
      OrgGeogebraCommonGuiInputfieldColorProvider_addToWithJavaUtilList_withInt_withInt_(self->definedObjectsIntervals_, 0, ((jint) [((NSString *) nil_chk(label)) length]));
    }
    ComGoogleGwtRegexpSharedSplitResult *split = OrgGeogebraCommonGuiInputfieldColorProvider_getVariablesWithNSString_(self, [res getGroupWithInt:8]);
    for (jint i = 0; i < [((ComGoogleGwtRegexpSharedSplitResult *) nil_chk(split)) length]; i++) {
      NSString *var = [split getWithInt:i];
      NSString *trimmedVar = OrgGeogebraCommonGuiInputfieldColorProvider_trimVarWithNSString_(var);
      [self->locals_ addWithId:trimmedVar];
    }
  }
  OrgGeogebraCommonGuiInputfieldColorProvider_getIntervalsRecursivelyWithNSString_withInt_(self, self->text_, 0);
}

void OrgGeogebraCommonGuiInputfieldColorProvider_getIntervalsRecursivelyWithNSString_withInt_(OrgGeogebraCommonGuiInputfieldColorProvider *self, NSString *text1, jint startIndex) {
  OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *labelParam = new_OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withNSString_(self, text1);
  OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *res = nil;
  while ((res = [labelParam exec]) != nil) {
    NSString *label = [((OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *) nil_chk(res)) getGroupWithInt:0];
    NSString *params = [res getGroupWithInt:1];
    if (![res isCommand]) {
      OrgGeogebraCommonGuiInputfieldColorProvider_addToIntervalWithNSString_withInt_withInt_(self, label, startIndex + [res getIndex], ((jint) [((NSString *) nil_chk(label)) length]));
    }
    ComGoogleGwtRegexpSharedSplitResult *split = OrgGeogebraCommonGuiInputfieldColorProvider_getVariablesWithNSString_(self, params);
    jint j = startIndex + [res getIndex] + ((jint) [((NSString *) nil_chk(label)) length]);
    if (split != nil) {
      for (jint i = 0; i < [split length]; i++) {
        NSString *sub = [split getWithInt:i];
        OrgGeogebraCommonGuiInputfieldColorProvider_getIntervalsRecursivelyWithNSString_withInt_(self, sub, j);
        j += ((jint) [((NSString *) nil_chk(sub)) length]) + 1;
      }
    }
  }
}

ComGoogleGwtRegexpSharedSplitResult *OrgGeogebraCommonGuiInputfieldColorProvider_getVariablesWithNSString_(OrgGeogebraCommonGuiInputfieldColorProvider *self, NSString *vars) {
  return vars == nil ? nil : [((ComGoogleGwtRegexpSharedRegExp *) nil_chk(self->splitter_)) splitWithNSString:vars];
}

NSString *OrgGeogebraCommonGuiInputfieldColorProvider_trimVarWithNSString_(NSString *var) {
  OrgGeogebraCommonGuiInputfieldColorProvider_initialize();
  NSString *ret = var;
  if ([((NSString *) nil_chk(ret)) charAtWithInt:0] == '(') ret = [ret substring:1];
  if ([ret charAtWithInt:((jint) [((NSString *) nil_chk(ret)) length]) - 1] == ')') ret = [ret substring:0 endIndex:((jint) [ret length]) - 1];
  return [((NSString *) nil_chk(ret)) trim];
}

void OrgGeogebraCommonGuiInputfieldColorProvider_addToWithJavaUtilList_withInt_withInt_(id<JavaUtilList> list, jint s, jint e) {
  OrgGeogebraCommonGuiInputfieldColorProvider_initialize();
  [((id<JavaUtilList>) nil_chk(list)) addWithId:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(s), JavaLangInteger_valueOfWithInt_(e) } count:2 type:JavaLangInteger_class_()]];
}

void OrgGeogebraCommonGuiInputfieldColorProvider_addToIntervalWithNSString_withInt_withInt_(OrgGeogebraCommonGuiInputfieldColorProvider *self, NSString *label, jint s, jint len) {
  if ([((id<JavaUtilSet>) nil_chk(self->locals_)) containsWithId:label]) {
    OrgGeogebraCommonGuiInputfieldColorProvider_addToWithJavaUtilList_withInt_withInt_(self->localVariableIntervals_, s, s + len);
  }
  else if ([((id<JavaUtilSet>) nil_chk(self->labels_)) containsWithId:label]) {
    OrgGeogebraCommonGuiInputfieldColorProvider_addToWithJavaUtilList_withInt_withInt_(self->definedObjectsIntervals_, s, s + len);
  }
  else if (!self->isCasInput_ && ![((OrgGeogebraCommonKernelParserCashandlersParserFunctions *) nil_chk(self->pf_)) isReservedWithNSString:label]) {
    OrgGeogebraCommonGuiInputfieldColorProvider_addToWithJavaUtilList_withInt_withInt_(self->undefinedObjectsIntervals_, s, s + len);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiInputfieldColorProvider)

@implementation OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult

- (instancetype)initWithOrgGeogebraCommonGuiInputfieldColorProvider:(OrgGeogebraCommonGuiInputfieldColorProvider *)outer$
                                                            withInt:(jint)index
                                                       withNSString:(NSString *)input
                                                   withJavaUtilList:(id<JavaUtilList>)groups
                                                        withBoolean:(jboolean)isCommand {
  OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withInt_withNSString_withJavaUtilList_withBoolean_(self, outer$, index, input, groups, isCommand);
  return self;
}

- (jboolean)isCommand {
  return isCommand__;
}

- (void)setCommandWithBoolean:(jboolean)isCommand {
  self->isCommand__ = isCommand;
}

- (jint)getIndex {
  return index_;
}

- (NSString *)getGroupWithInt:(jint)i {
  return [((id<JavaUtilList>) nil_chk(groups_)) getWithInt:i];
}

- (NSString *)getInput {
  return input_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiInputfieldColorProvider:withInt:withNSString:withJavaUtilList:withBoolean:", "MyMatchResult", NULL, 0x1, NULL, NULL },
    { "isCommand", NULL, "Z", 0x1, NULL, NULL },
    { "setCommandWithBoolean:", "setCommand", "V", 0x1, NULL, NULL },
    { "getIndex", NULL, "I", 0x1, NULL, NULL },
    { "getGroupWithInt:", "getGroup", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getInput", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "index_", NULL, 0x0, "I", NULL, NULL,  },
    { "input_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "groups_", NULL, 0x0, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/String;>;",  },
    { "isCommand__", "isCommand", 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult = { 2, "MyMatchResult", "org.geogebra.common.gui.inputfield", "ColorProvider", 0x2, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult;
}

@end

void OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withInt_withNSString_withJavaUtilList_withBoolean_(OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *self, OrgGeogebraCommonGuiInputfieldColorProvider *outer$, jint index, NSString *input, id<JavaUtilList> groups, jboolean isCommand) {
  (void) NSObject_init(self);
  self->index_ = index;
  self->input_ = input;
  self->groups_ = groups;
  [self setCommandWithBoolean:isCommand];
}

OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *new_OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withInt_withNSString_withJavaUtilList_withBoolean_(OrgGeogebraCommonGuiInputfieldColorProvider *outer$, jint index, NSString *input, id<JavaUtilList> groups, jboolean isCommand) {
  OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *self = [OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult alloc];
  OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withInt_withNSString_withJavaUtilList_withBoolean_(self, outer$, index, input, groups, isCommand);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult)

@implementation OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp

- (instancetype)initWithOrgGeogebraCommonGuiInputfieldColorProvider:(OrgGeogebraCommonGuiInputfieldColorProvider *)outer$
                                                       withNSString:(NSString *)text {
  OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withNSString_(self, outer$, text);
  return self;
}

- (OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *)exec {
  ComGoogleGwtRegexpSharedMatchResult *res = [((ComGoogleGwtRegexpSharedRegExp *) nil_chk(regExp_)) execWithNSString:text_];
  if (res == nil) {
    return nil;
  }
  NSString *label = [((ComGoogleGwtRegexpSharedMatchResult *) nil_chk(res)) getGroupWithInt:1];
  NSString *openingBracket = [res getGroupWithInt:8];
  id<JavaUtilList> groups = new_JavaUtilArrayList_initWithInt_(2);
  [groups addWithId:label];
  OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult *ret;
  jint step = 0;
  NSString *params = nil;
  if (openingBracket == nil) {
    step = [res getIndex] + ((jint) [((NSString *) nil_chk(label)) length]);
  }
  else {
    jint paramsStart = [res getIndex] + ((jint) [((NSString *) nil_chk(label)) length]);
    jint i = paramsStart + 1;
    jint nrOfBrackets = 1;
    jchar closingBracket = OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_getClosingBracketWithNSString_(self, openingBracket);
    for (; i < ((jint) [((NSString *) nil_chk(text_)) length]) && nrOfBrackets != 0; i++) {
      if ([text_ charAtWithInt:i] == [openingBracket charAtWithInt:0]) nrOfBrackets++;
      else if ([text_ charAtWithInt:i] == closingBracket) nrOfBrackets--;
    }
    params = [text_ substring:paramsStart endIndex:i];
    step = paramsStart + ((jint) [((NSString *) nil_chk(params)) length]);
  }
  [groups addWithId:params];
  ret = new_OrgGeogebraCommonGuiInputfieldColorProvider_MyMatchResult_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withInt_withNSString_withJavaUtilList_withBoolean_(this$0_, index_ + [res getIndex], input_, groups, [@"[" isEqual:openingBracket]);
  index_ += step;
  text_ = [((NSString *) nil_chk(text_)) substring:step];
  return ret;
}

- (void)setTextWithNSString:(NSString *)text {
  self->text_ = text;
  input_ = text;
  index_ = 0;
}

- (jchar)getClosingBracketWithNSString:(NSString *)openingBracket {
  return OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_getClosingBracketWithNSString_(self, openingBracket);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiInputfieldColorProvider:withNSString:", "MyLabelParamRegExp", NULL, 0x1, NULL, NULL },
    { "exec", NULL, "Lorg.geogebra.common.gui.inputfield.ColorProvider$MyMatchResult;", 0x1, NULL, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL, NULL },
    { "getClosingBracketWithNSString:", "getClosingBracket", "C", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.gui.inputfield.ColorProvider;", NULL, NULL,  },
    { "regExp_", NULL, 0x0, "Lcom.google.gwt.regexp.shared.RegExp;", NULL, NULL,  },
    { "input_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "text_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "index_", NULL, 0x0, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp = { 2, "MyLabelParamRegExp", "org.geogebra.common.gui.inputfield", "ColorProvider", 0x2, 4, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp;
}

@end

void OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withNSString_(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *self, OrgGeogebraCommonGuiInputfieldColorProvider *outer$, NSString *text) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
  self->regExp_ = ComGoogleGwtRegexpSharedRegExp_compileWithNSString_(OrgGeogebraCommonGuiInputfieldColorProvider_get_LABEL_PARAM_());
  [self setTextWithNSString:text];
}

OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *new_OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withNSString_(OrgGeogebraCommonGuiInputfieldColorProvider *outer$, NSString *text) {
  OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *self = [OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp alloc];
  OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_initWithOrgGeogebraCommonGuiInputfieldColorProvider_withNSString_(self, outer$, text);
  return self;
}

jchar OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp_getClosingBracketWithNSString_(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp *self, NSString *openingBracket) {
  if ([@"[" isEqual:openingBracket]) {
    return ']';
  }
  return ')';
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiInputfieldColorProvider_MyLabelParamRegExp)
