//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/view/probcalculator/ProbabilityTable.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/gui/view/probcalculator/ProbabilityCalculatorView.h"
#include "org/geogebra/common/gui/view/probcalculator/ProbabilityManager.h"
#include "org/geogebra/common/gui/view/probcalculator/ProbabilityTable.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/settings/ProbabilityCalculatorSettings.h"
#include "org/geogebra/common/util/Unicode.h"

@implementation OrgGeogebraCommonGuiViewProbcalculatorProbabilityTable

- (void)setSelectionByRowValueWithInt:(jint)lowValue
                              withInt:(jint)highValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setColumnNames {
  columnNames_ = [IOSObjectArray newArrayWithLength:2 type:NSString_class_()];
  (void) IOSObjectArray_Set(columnNames_, 0, @"k");
  if ([self isCumulative]) (void) IOSObjectArray_Set(columnNames_, 1, JreStrcat("$$C$$", [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"ProbabilityOf"], @"X ", OrgGeogebraCommonUtilUnicode_LESS_EQUAL, @" k", [app_ getMenuWithNSString:@"EndProbabilityOf"]));
  else (void) IOSObjectArray_Set(columnNames_, 1, JreStrcat("$$$", [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"ProbabilityOf"], @"X = k", [app_ getMenuWithNSString:@"EndProbabilityOf"]));
}

- (jboolean)isCumulative {
  return [((OrgGeogebraCommonGuiViewProbcalculatorProbabilityCalculatorView *) nil_chk(probCalc_)) isCumulative];
}

- (instancetype)init {
  OrgGeogebraCommonGuiViewProbcalculatorProbabilityTable_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setSelectionByRowValueWithInt:withInt:", "setSelectionByRowValue", "V", 0x401, NULL, NULL },
    { "setColumnNames", NULL, "V", 0x1, NULL, NULL },
    { "isCumulative", NULL, "Z", 0x4, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x4, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "probManager_", NULL, 0x4, "Lorg.geogebra.common.gui.view.probcalculator.ProbabilityManager;", NULL, NULL,  },
    { "probCalc_", NULL, 0x4, "Lorg.geogebra.common.gui.view.probcalculator.ProbabilityCalculatorView;", NULL, NULL,  },
    { "columnNames_", NULL, 0x4, "[Ljava.lang.String;", NULL, NULL,  },
    { "distType_", NULL, 0x4, "Lorg.geogebra.common.main.settings.ProbabilityCalculatorSettings$DIST;", NULL, NULL,  },
    { "xMin_", NULL, 0x4, "I", NULL, NULL,  },
    { "xMax_", NULL, 0x4, "I", NULL, NULL,  },
    { "isIniting_", NULL, 0x4, "Z", NULL, NULL,  },
    { "parms_", NULL, 0x4, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewProbcalculatorProbabilityTable = { 2, "ProbabilityTable", "org.geogebra.common.gui.view.probcalculator", NULL, 0x401, 4, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewProbcalculatorProbabilityTable;
}

@end

void OrgGeogebraCommonGuiViewProbcalculatorProbabilityTable_init(OrgGeogebraCommonGuiViewProbcalculatorProbabilityTable *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewProbcalculatorProbabilityTable)
