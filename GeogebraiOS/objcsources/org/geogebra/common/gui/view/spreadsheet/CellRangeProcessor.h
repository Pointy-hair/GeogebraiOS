//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/view/spreadsheet/CellRangeProcessor.java
//

#ifndef _OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_H_
#define _OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_H_

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class IOSObjectArray;
@class JavaUtilArrayList;
@class OrgGeogebraCommonGuiViewSpreadsheetCellRange;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoFunctionNVar;
@class OrgGeogebraCommonKernelGeosGeoList;
@class OrgGeogebraCommonPluginGeoClassEnum;
@protocol OrgGeogebraCommonGuiViewSpreadsheetMyTable;

@interface OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor : NSObject

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGuiViewSpreadsheetMyTable:(id<OrgGeogebraCommonGuiViewSpreadsheetMyTable>)table;

+ (JavaUtilArrayList *)cloneWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)containsGeoClassWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
          withOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoClass;

- (OrgGeogebraCommonKernelGeosGeoList *)createCollectionListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                      withBoolean:(jboolean)copyByValue
                                                                      withBoolean:(jboolean)addToConstruction
                                                                      withBoolean:(jboolean)scanByColumn;

- (NSString *)createColumnMatrixExpressionWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                    withBoolean:(jboolean)copyByValue
                                                    withBoolean:(jboolean)addToConstruction;

- (OrgGeogebraCommonKernelGeosGeoElement *)createListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                               withBoolean:(jboolean)scanByColumn
                                                               withBoolean:(jboolean)copyByValue;

- (OrgGeogebraCommonKernelGeosGeoList *)createListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                            withBoolean:(jboolean)scanByColumn
                                                            withBoolean:(jboolean)copyByValue
                                                            withBoolean:(jboolean)isSorted
                                                            withBoolean:(jboolean)doStoreUndo
                                withOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoTypeFilter
                                                            withBoolean:(jboolean)setLabel;

- (OrgGeogebraCommonKernelGeosGeoElement *)createListFromColumnWithInt:(jint)column
                                                           withBoolean:(jboolean)copyByValue
                                                           withBoolean:(jboolean)isSorted
                                                           withBoolean:(jboolean)storeUndoInfo
                               withOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoTypeFilter
                                                           withBoolean:(jboolean)addToConstruction;

- (OrgGeogebraCommonKernelGeosGeoElement *)createMatrixWithInt:(jint)column1
                                                       withInt:(jint)column2
                                                       withInt:(jint)row1
                                                       withInt:(jint)row2
                                                   withBoolean:(jboolean)copyByValue;

- (OrgGeogebraCommonKernelGeosGeoElement *)createMatrixWithInt:(jint)column1
                                                       withInt:(jint)column2
                                                       withInt:(jint)row1
                                                       withInt:(jint)row2
                                                   withBoolean:(jboolean)copyByValue
                                                   withBoolean:(jboolean)transpose;

- (NSString *)createMatrixExpressionWithInt:(jint)column1
                                    withInt:(jint)column2
                                    withInt:(jint)row1
                                    withInt:(jint)row2
                                withBoolean:(jboolean)copyByValue
                                withBoolean:(jboolean)transpose;

- (void)createOperationTableWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:(OrgGeogebraCommonGuiViewSpreadsheetCellRange *)cr
                              withOrgGeogebraCommonKernelGeosGeoFunctionNVar:(OrgGeogebraCommonKernelGeosGeoFunctionNVar *)fcn;

- (OrgGeogebraCommonKernelGeosGeoList *)createPointGeoListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                    withBoolean:(jboolean)byValue
                                                                    withBoolean:(jboolean)leftToRight
                                                                    withBoolean:(jboolean)isSorted
                                                                    withBoolean:(jboolean)doStoreUndo
                                                                    withBoolean:(jboolean)doCreateFreePoints;

- (OrgGeogebraCommonKernelGeosGeoElement *)createPolyLineWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                   withBoolean:(jboolean)byValue
                                                                   withBoolean:(jboolean)leftToRight;

- (OrgGeogebraCommonKernelGeosGeoElement *)createPolyLineWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                   withBoolean:(jboolean)byValue
                                                                   withBoolean:(jboolean)leftToRight
                                                                   withBoolean:(jboolean)isSorted
                                                                   withBoolean:(jboolean)doStoreUndo;

- (OrgGeogebraCommonKernelGeosGeoElement *)createTableTextWithInt:(jint)column1
                                                          withInt:(jint)column2
                                                          withInt:(jint)row1
                                                          withInt:(jint)row2
                                                      withBoolean:(jboolean)copyByValue
                                                      withBoolean:(jboolean)transpose;

- (void)deleteColumnsWithInt:(jint)column1
                     withInt:(jint)column2;

- (void)deleteRowsWithInt:(jint)row1
                  withInt:(jint)row2;

- (NSString *)getCellRangeStringWithJavaUtilArrayList:(JavaUtilArrayList *)list;

- (NSString *)getCellRangeStringWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:(OrgGeogebraCommonGuiViewSpreadsheetCellRange *)range;

- (NSString *)getCellRangeStringWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:(OrgGeogebraCommonGuiViewSpreadsheetCellRange *)range
                                                                     withBoolean:(jboolean)onlyFirstRowColumn;

- (IOSObjectArray *)getColumnTitlesWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jint)getGeoCountWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
 withOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoClass;

- (IOSObjectArray *)getPointListTitlesWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                withBoolean:(jboolean)leftToRight;

- (void)insertColumnWithInt:(jint)column1
                    withInt:(jint)column2
                withBoolean:(jboolean)insertLeft;

- (void)insertRowWithInt:(jint)row1
                 withInt:(jint)row2
             withBoolean:(jboolean)insertAbove;

- (jboolean)is1DRangeListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isAllColumnsWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isCreateMatrixPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isCreateOperationTablePossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isCreatePointListPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isMultiVarStatsPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isOneVarStatsPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
               withOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoClass;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor)

FOUNDATION_EXPORT void OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_initWithOrgGeogebraCommonGuiViewSpreadsheetMyTable_(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *self, id<OrgGeogebraCommonGuiViewSpreadsheetMyTable> table);

FOUNDATION_EXPORT OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *new_OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_initWithOrgGeogebraCommonGuiViewSpreadsheetMyTable_(id<OrgGeogebraCommonGuiViewSpreadsheetMyTable> table) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaUtilArrayList *OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_cloneWithJavaUtilArrayList_(JavaUtilArrayList *rangeList);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor)

typedef NS_ENUM(NSUInteger, OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction) {
  OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Left = 0,
  OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Right = 1,
  OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Up = 2,
  OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Down = 3,
};

@interface OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values();

+ (OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum *OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum)

FOUNDATION_EXPORT OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum *OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[];

#define OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Left OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Left]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Left)

#define OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Right OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Right]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Right)

#define OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Up OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Up]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Up)

#define OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Down OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Down]
J2OBJC_ENUM_CONSTANT_GETTER(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Down)

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum)

#endif // _OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor_H_
