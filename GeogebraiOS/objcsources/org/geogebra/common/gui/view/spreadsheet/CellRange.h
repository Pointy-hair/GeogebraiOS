//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/view/spreadsheet/CellRange.java
//

#ifndef _OrgGeogebraCommonGuiViewSpreadsheetCellRange_H_
#define _OrgGeogebraCommonGuiViewSpreadsheetCellRange_H_

#include "J2ObjC_header.h"

@class IOSIntArray;
@class JavaUtilArrayList;
@class OrgGeogebraCommonAwtGPoint;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonMainApp;
@class OrgGeogebraCommonPluginGeoClassEnum;

@interface OrgGeogebraCommonGuiViewSpreadsheetCellRange : NSObject {
 @public
  OrgGeogebraCommonMainApp *app_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app;

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                         withInt:(jint)anchorColumn
                                         withInt:(jint)anchorRow;

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                         withInt:(jint)anchorColumn
                                         withInt:(jint)anchorRow
                                         withInt:(jint)col2
                                         withInt:(jint)row2;

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                         withInt:(jint)anchorColumn
                                         withInt:(jint)anchorRow
                                         withInt:(jint)minColumn
                                         withInt:(jint)minRow
                                         withInt:(jint)maxColumn
                                         withInt:(jint)maxRow;

- (OrgGeogebraCommonGuiViewSpreadsheetCellRange *)clone;

- (jboolean)containsWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)containsWithOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)location;

- (jboolean)containsGeoClassWithOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoClass;

- (void)debug;

- (jboolean)isEqual:(id)obj;

- (IOSIntArray *)getActualDimensions;

- (OrgGeogebraCommonGuiViewSpreadsheetCellRange *)getActualRange;

- (jint)getAnchorColumn;

- (jint)getAnchorRow;

- (jint)getGeoCountWithOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoClass;

- (jint)getHeight;

- (jint)getMaxColumn;

- (jint)getMaxRow;

- (jint)getMinColumn;

- (jint)getMinRow;

- (jint)getWidth;

- (jboolean)hasEmptyCells;

- (NSUInteger)hash;

- (jboolean)hasSameAnchorWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:(OrgGeogebraCommonGuiViewSpreadsheetCellRange *)cr;

- (jboolean)is1D;

- (jboolean)is2D;

- (jboolean)isColumn;

- (jboolean)isEmpty;

- (jboolean)isEmptyRange;

- (jboolean)isPartialColumn;

- (jboolean)isPartialRow;

- (jboolean)isPointList;

- (jboolean)isRow;

- (jboolean)isSingleCell;

- (jboolean)isValid;

- (void)setActualRange;

- (void)setCellRangeWithInt:(jint)anchorColumn
                    withInt:(jint)anchorRow;

- (void)setCellRangeWithInt:(jint)anchorColumn
                    withInt:(jint)anchorRow
                    withInt:(jint)col2
                    withInt:(jint)row2;

- (JavaUtilArrayList *)toCellListWithBoolean:(jboolean)scanByColumn;

- (JavaUtilArrayList *)toGeoLabelListWithBoolean:(jboolean)scanByColumn
                                     withBoolean:(jboolean)copyByValue;

- (JavaUtilArrayList *)toGeoList;

- (JavaUtilArrayList *)toGeoValueListWithBoolean:(jboolean)scanByColumn;

- (JavaUtilArrayList *)toPartialColumnList;

- (JavaUtilArrayList *)toPartialRowList;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiViewSpreadsheetCellRange)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewSpreadsheetCellRange, app_, OrgGeogebraCommonMainApp *)

FOUNDATION_EXPORT void OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonGuiViewSpreadsheetCellRange *self, OrgGeogebraCommonMainApp *app);

FOUNDATION_EXPORT OrgGeogebraCommonGuiViewSpreadsheetCellRange *new_OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainApp *app) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_withInt_withInt_withInt_withInt_withInt_withInt_(OrgGeogebraCommonGuiViewSpreadsheetCellRange *self, OrgGeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint minColumn, jint minRow, jint maxColumn, jint maxRow);

FOUNDATION_EXPORT OrgGeogebraCommonGuiViewSpreadsheetCellRange *new_OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_withInt_withInt_withInt_withInt_withInt_withInt_(OrgGeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint minColumn, jint minRow, jint maxColumn, jint maxRow) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_withInt_withInt_withInt_withInt_(OrgGeogebraCommonGuiViewSpreadsheetCellRange *self, OrgGeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint col2, jint row2);

FOUNDATION_EXPORT OrgGeogebraCommonGuiViewSpreadsheetCellRange *new_OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_withInt_withInt_withInt_withInt_(OrgGeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint col2, jint row2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_withInt_withInt_(OrgGeogebraCommonGuiViewSpreadsheetCellRange *self, OrgGeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow);

FOUNDATION_EXPORT OrgGeogebraCommonGuiViewSpreadsheetCellRange *new_OrgGeogebraCommonGuiViewSpreadsheetCellRange_initWithOrgGeogebraCommonMainApp_withInt_withInt_(OrgGeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiViewSpreadsheetCellRange)

#endif // _OrgGeogebraCommonGuiViewSpreadsheetCellRange_H_
