//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/gui/view/data/DataDisplayModel.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/gui/view/data/DataAnalysisController.h"
#include "org/geogebra/common/gui/view/data/DataAnalysisModel.h"
#include "org/geogebra/common/gui/view/data/DataDisplayModel.h"
#include "org/geogebra/common/gui/view/data/DataSource.h"
#include "org/geogebra/common/gui/view/data/DataVariable.h"
#include "org/geogebra/common/gui/view/data/StatGeo.h"
#include "org/geogebra/common/gui/view/data/StatPanelSettings.h"
#include "org/geogebra/common/kernel/View.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/statistics/AlgoFrequencyTable.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"

#define OrgGeogebraCommonGuiViewDataDataDisplayModel_serialVersionUID 1LL

@interface OrgGeogebraCommonGuiViewDataDataDisplayModel () {
 @public
  OrgGeogebraCommonMainApp *app_;
  OrgGeogebraCommonMainLocalization *loc_;
  OrgGeogebraCommonGuiViewDataDataAnalysisModel *daModel_;
  OrgGeogebraCommonGuiViewDataStatGeo *statGeo_;
  OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *selectedPlot_;
  OrgGeogebraCommonGuiViewDataStatPanelSettings *settings_;
  JavaUtilArrayList *plotGeoList_;
  IOSObjectArray *boxPlotTitles_;
  OrgGeogebraCommonKernelGeosGeoElement *histogram_, *dotPlot_, *frequencyPolygon_, *normalCurve_, *scatterPlot_, *scatterPlotLine_, *residualPlot_, *nqPlot_, *boxPlot_, *barChart_, *freqTableGeo_;
  jboolean hasControlPanel_;
  id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener> listener_;
}

+ (void)prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                         withInt:(jint)euclidianViewID;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, loc_, OrgGeogebraCommonMainLocalization *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, daModel_, OrgGeogebraCommonGuiViewDataDataAnalysisModel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, statGeo_, OrgGeogebraCommonGuiViewDataStatGeo *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, selectedPlot_, OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, settings_, OrgGeogebraCommonGuiViewDataStatPanelSettings *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, plotGeoList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, boxPlotTitles_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, histogram_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, dotPlot_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, frequencyPolygon_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, normalCurve_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, scatterPlot_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, scatterPlotLine_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, residualPlot_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, nqPlot_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, boxPlot_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, barChart_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, freqTableGeo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, listener_, id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiViewDataDataDisplayModel, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataDataDisplayModel_prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement_withInt_(OrgGeogebraCommonKernelGeosGeoElement *geo, jint euclidianViewID);

@interface OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener : NSObject
@end

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *self, NSString *key, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(NSString *key, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonGuiViewDataDataDisplayModel

- (instancetype)initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel:(OrgGeogebraCommonGuiViewDataDataAnalysisModel *)daModel
withOrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener:(id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>)listener {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener_(self, daModel, listener);
  return self;
}

- (void)updatePlotWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:(OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *)index
                                                                        withInt:(jint)mode {
  [self setModeWithInt:mode];
  [self setSelectedPlotWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:index];
  [((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk([self getSettings])) setDataSourceWithOrgGeogebraCommonGuiViewDataDataSource:[((OrgGeogebraCommonGuiViewDataDataAnalysisModel *) nil_chk(daModel_)) getDataSource]];
}

- (void)fillDisplayTypes {
  switch ([((OrgGeogebraCommonGuiViewDataDataAnalysisModel *) nil_chk(daModel_)) getMode]) {
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_ONEVAR:
    if (![daModel_ isNumericData]) {
      [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_BARCHART()];
    }
    else if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk([self getSettings])) groupType] == OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_RAWDATA()) {
      [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_HISTOGRAM()];
      [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_BARCHART()];
      [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_BOXPLOT()];
      [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_DOTPLOT()];
      [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_STEMPLOT()];
      [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_NORMALQUANTILE()];
    }
    else if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk([self getSettings])) groupType] == OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_FREQUENCY()) {
      [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_HISTOGRAM()];
      [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_BARCHART()];
      [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_BOXPLOT()];
    }
    else if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk([self getSettings])) groupType] == OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_CLASS()) {
      [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_HISTOGRAM()];
    }
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_REGRESSION:
    [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_SCATTERPLOT()];
    [listener_ addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_RESIDUAL()];
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_MULTIVAR:
    [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_MULTIBOXPLOT()];
    break;
  }
  [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) setSelectedTypeWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:[self getSelectedPlot]];
}

- (void)updatePlotPanelLayout {
  if ([self getSelectedPlot] == OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_SCATTERPLOT()) {
    [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) updateScatterPlot];
  }
  else if ([self getSelectedPlot] == OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_HISTOGRAM() || [self getSelectedPlot] == OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_BARCHART()) {
    if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk([self getSettings])) isShowFrequencyTable]) {
      [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) updateFrequencyTable];
    }
  }
}

- (void)updatePlotWithBoolean:(jboolean)doCreate {
  OrgGeogebraCommonKernelGeosGeoList *dataListSelected = [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([((OrgGeogebraCommonGuiViewDataDataAnalysisModel *) nil_chk(daModel_)) getController])) getDataSelected];
  if (dataListSelected == nil) {
    OrgGeogebraCommonMainApp_debugWithNSString_(@"[DDMODEL] dataListSelected is null!");
    return;
  }
  if (hasControlPanel_) {
    [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) showControlPanel];
  }
  if (doCreate) {
    [self clearPlotGeoList];
  }
  [((id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener>) nil_chk(listener_)) setOptionsButtonVisible];
  [self updatePlotPanelLayout];
  if (![((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([daModel_ getController])) isValidData]) {
    [listener_ showInvalidDataDisplay];
    return;
  }
  @try {
    {
      NSString *latex;
      switch ([selectedPlot_ ordinal]) {
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_HISTOGRAM:
        if (doCreate) {
          if (histogram_ != nil) {
            [histogram_ remove];
          }
          if (dataListSelected != nil) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_histogram_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createHistogramWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_ withBoolean:NO]);
            [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:histogram_];
          }
          if (frequencyPolygon_ != nil) {
            [frequencyPolygon_ remove];
          }
          if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isHasOverlayPolygon]) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_frequencyPolygon_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createHistogramWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_ withBoolean:YES]);
            [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:frequencyPolygon_];
          }
          if (normalCurve_ != nil) {
            [normalCurve_ remove];
          }
          if ([settings_ isHasOverlayNormal]) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_normalCurve_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createNormalCurveOverlayWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected]);
            [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:normalCurve_];
          }
          if (freqTableGeo_ != nil) {
            [freqTableGeo_ remove];
          }
          if ([settings_ isShowFrequencyTable]) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_freqTableGeo_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createFrequencyTableGeoWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(histogram_, [OrgGeogebraCommonKernelGeosGeoNumeric class]) withOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:selectedPlot_]);
            [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:freqTableGeo_];
          }
        }
        if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isShowFrequencyTable]) {
          [listener_ setTableFromGeoFrequencyTableWithOrgGeogebraCommonKernelStatisticsAlgoFrequencyTable:(OrgGeogebraCommonKernelStatisticsAlgoFrequencyTable *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(freqTableGeo_)) getParentAlgorithm], [OrgGeogebraCommonKernelStatisticsAlgoFrequencyTable class]) withBoolean:YES];
        }
        else {
          [listener_ removeFrequencyTable];
        }
        if (dataListSelected != nil) {
          [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) getHistogramSettingsWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonKernelGeosGeoElement:histogram_ withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
        }
        [listener_ updatePlotPanelSettings];
        if (hasControlPanel_ && [((OrgGeogebraCommonGuiViewDataDataSource *) nil_chk([settings_ getDataSource])) getGroupType] != OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_CLASS()) if ([settings_ isUseManualClasses]) {
          [listener_ showManualClassesPanel];
        }
        else {
          [listener_ showNumClassesPanel];
        }
        [listener_ showPlotPanel];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_BOXPLOT:
        if (doCreate) {
          if (boxPlot_ != nil) [boxPlot_ remove];
          OrgGeogebraCommonGuiViewDataDataDisplayModel_set_boxPlot_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createBoxPlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_]);
          [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:boxPlot_];
        }
        [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) getBoxPlotSettingsWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
        [listener_ updatePlotPanelSettings];
        [listener_ showPlotPanel];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_BARCHART:
        if (doCreate) {
          if (barChart_ != nil) {
            [barChart_ remove];
          }
          if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isNumericData]) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_barChart_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createBarChartNumericWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_]);
            [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:barChart_];
          }
          else {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_barChart_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createBarChartTextWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_]);
          }
          [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:barChart_];
          if (freqTableGeo_ != nil) {
            [freqTableGeo_ remove];
          }
          if ([settings_ isShowFrequencyTable]) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_freqTableGeo_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createFrequencyTableGeoWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(barChart_, [OrgGeogebraCommonKernelGeosGeoNumeric class]) withOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:selectedPlot_]);
            [plotGeoList_ addWithId:freqTableGeo_];
          }
          [listener_ resize];
        }
        if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isShowFrequencyTable]) {
          [listener_ setTableFromGeoFrequencyTableWithOrgGeogebraCommonKernelStatisticsAlgoFrequencyTable:(OrgGeogebraCommonKernelStatisticsAlgoFrequencyTable *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(freqTableGeo_)) getParentAlgorithm], [OrgGeogebraCommonKernelStatisticsAlgoFrequencyTable class]) withBoolean:NO];
        }
        [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) getBarChartSettingsWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_ withOrgGeogebraCommonKernelGeosGeoElement:barChart_];
        [listener_ updatePlotPanelSettings];
        [listener_ showPlotPanel];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_DOTPLOT:
        if (doCreate) {
          if (dotPlot_ != nil) [dotPlot_ remove];
          OrgGeogebraCommonGuiViewDataDataDisplayModel_set_dotPlot_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createDotPlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected]);
          [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:dotPlot_];
        }
        [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) updateDotPlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonKernelGeosGeoElement:dotPlot_ withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
        [listener_ updatePlotPanelSettings];
        [listener_ showPlotPanel];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_STEMPLOT:
        latex = [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) getStemPlotLatexWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withInt:[((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) getStemAdjust]];
        [listener_ updateStemPlotWithNSString:latex];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_NORMALQUANTILE:
        if (doCreate) {
          if (nqPlot_ != nil) [nqPlot_ remove];
          OrgGeogebraCommonGuiViewDataDataDisplayModel_set_nqPlot_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createNormalQuantilePlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected]);
          [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:nqPlot_];
        }
        [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) updateNormalQuantilePlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
        [listener_ updatePlotPanelSettings];
        [listener_ showPlotPanel];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_SCATTERPLOT:
        if (doCreate) {
          OrgGeogebraCommonMainApp_debugWithNSString_(@"[DDMODEL]  UPDATE SCATTERPLOT");
          OrgGeogebraCommonGuiViewDataDataDisplayModel_set_scatterPlot_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createScatterPlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected]);
          [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:scatterPlot_];
          if ([daModel_ getRegressionModel] != nil && ![((OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *) nil_chk([daModel_ getRegressionMode])) isEqual:OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_get_NONE()]) {
            [plotGeoList_ addWithId:[daModel_ getRegressionModel]];
          }
          if ([((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isShowScatterplotLine]) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_scatterPlotLine_(self, [statGeo_ createScatterPlotLineWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(scatterPlot_, [OrgGeogebraCommonKernelGeosGeoList class])]);
            [plotGeoList_ addWithId:scatterPlotLine_];
          }
        }
        [listener_ updateXYTitlesWithBoolean:[((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isPointList] withBoolean:[((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([daModel_ getDaCtrl])) isLeftToRight]];
        [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) getScatterPlotSettingsWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
        [listener_ updatePlotPanelSettings];
        [listener_ showPlotPanel];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_RESIDUAL:
        if (doCreate) {
          if (![((OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *) nil_chk([daModel_ getRegressionMode])) isEqual:OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_get_NONE()]) {
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_residualPlot_(self, [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createRegressionPlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum:[daModel_ getRegressionMode] withInt:[daModel_ getRegressionOrder] withBoolean:YES]);
            [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:residualPlot_];
            [statGeo_ getResidualPlotSettingsWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonKernelGeosGeoElement:residualPlot_ withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
            [listener_ updatePlotPanelSettings];
          }
          else if (residualPlot_ != nil) {
            [residualPlot_ remove];
            OrgGeogebraCommonGuiViewDataDataDisplayModel_set_residualPlot_(self, nil);
          }
        }
        [listener_ showPlotPanel];
        break;
        case OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotType_MULTIBOXPLOT:
        if (doCreate) {
          IOSObjectArray *boxPlots = [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createMultipleBoxPlotWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
          for (jint i = 0; i < ((IOSObjectArray *) nil_chk(boxPlots))->size_; i++) [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:IOSObjectArray_Get(boxPlots, i)];
        }
        [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) getMultipleBoxPlotSettingsWithOrgGeogebraCommonKernelGeosGeoList:dataListSelected withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_];
        [listener_ updatePlotPanelSettings];
        OrgGeogebraCommonGuiViewDataDataDisplayModel_set_boxPlotTitles_(self, [statGeo_ createBoxPlotTitlesWithOrgGeogebraCommonGuiViewDataDataAnalysisModel:daModel_ withOrgGeogebraCommonGuiViewDataStatPanelSettings:settings_]);
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(boxPlotTitles_))->size_; i++) [((JavaUtilArrayList *) nil_chk(plotGeoList_)) addWithId:IOSObjectArray_Get(boxPlotTitles_, i)];
        [listener_ showPlotPanel];
        break;
        default:
        ;
      }
    }
    if (doCreate && [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) removeFromConstruction]) {
      for (OrgGeogebraCommonKernelGeosGeoElement * __strong listGeo in nil_chk(plotGeoList_)) {
        [listener_ geoToPlotPanelWithOrgGeogebraCommonKernelGeosGeoElement:listGeo];
      }
    }
    if (freqTableGeo_ != nil) {
      [freqTableGeo_ setEuclidianVisibleWithBoolean:NO];
      [freqTableGeo_ updateRepaint];
    }
    if (histogram_ != nil) {
      [histogram_ setEuclidianVisibleWithBoolean:[((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isShowHistogram] && selectedPlot_ == OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_get_HISTOGRAM()];
      [histogram_ updateRepaint];
    }
  }
  @catch (JavaLangException *e) {
    [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([daModel_ getDaCtrl])) setValidDataWithBoolean:NO];
    [listener_ showInvalidDataDisplay];
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
}

- (void)clearPlotGeoList {
  for (OrgGeogebraCommonKernelGeosGeoElement * __strong geo in nil_chk(plotGeoList_)) {
    if (geo != nil) {
      [geo remove];
      geo = nil;
    }
  }
  [plotGeoList_ clear];
}

- (void)exportGeosToEVWithInt:(jint)euclidianViewID {
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) setWaitCursor];
  OrgGeogebraCommonKernelGeosGeoElement *regressionCopy = nil;
  OrgGeogebraCommonEuclidianEuclidianView *targetEV = (OrgGeogebraCommonEuclidianEuclidianView *) check_class_cast([app_ getViewWithInt:euclidianViewID], [OrgGeogebraCommonEuclidianEuclidianView class]);
  @try {
    [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([((OrgGeogebraCommonGuiViewDataDataAnalysisModel *) nil_chk(daModel_)) getController])) loadDataListsWithBoolean:NO];
    [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk([daModel_ getStatGeo])) setRemoveFromConstructionWithBoolean:NO];
    [self updatePlotWithBoolean:YES];
    if (histogram_ != nil && [((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_)) isShowHistogram] == NO) {
      [((JavaUtilArrayList *) nil_chk(plotGeoList_)) removeWithId:histogram_];
      [histogram_ remove];
      OrgGeogebraCommonGuiViewDataDataDisplayModel_set_histogram_(self, nil);
    }
    for (OrgGeogebraCommonKernelGeosGeoElement * __strong geo in nil_chk(plotGeoList_)) {
      OrgGeogebraCommonGuiViewDataDataDisplayModel_prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement_withInt_(geo, euclidianViewID);
    }
    if ([daModel_ isRegressionMode] && ![((OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *) nil_chk([daModel_ getRegressionMode])) isEqual:OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_get_NONE()]) {
      regressionCopy = [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) createRegressionPlotWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(scatterPlot_, [OrgGeogebraCommonKernelGeosGeoList class]) withOrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum:[daModel_ getRegressionMode] withInt:[daModel_ getRegressionOrder] withBoolean:NO];
      OrgGeogebraCommonGuiViewDataDataDisplayModel_prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement_withInt_(regressionCopy, euclidianViewID);
    }
    [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(targetEV)) setRealWorldCoordSystemWithDouble:((OrgGeogebraCommonGuiViewDataStatPanelSettings *) nil_chk(settings_))->xMin_ withDouble:settings_->xMax_ withDouble:settings_->yMin_ withDouble:settings_->yMax_];
    [targetEV setAutomaticAxesNumberingDistanceWithBoolean:settings_->xAxesIntervalAuto_ withInt:0];
    [targetEV setAutomaticAxesNumberingDistanceWithBoolean:settings_->yAxesIntervalAuto_ withInt:1];
    if (!settings_->xAxesIntervalAuto_) {
      [targetEV setAxesNumberingDistanceWithDouble:settings_->xAxesInterval_ withInt:0];
    }
    if (!settings_->yAxesIntervalAuto_) {
      [targetEV setAxesNumberingDistanceWithDouble:settings_->yAxesInterval_ withInt:1];
    }
    [targetEV updateBackground];
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_boxPlotTitles_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_histogram_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_dotPlot_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_frequencyPolygon_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_normalCurve_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_scatterPlotLine_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_scatterPlot_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_nqPlot_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_boxPlot_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_barChart_(self, nil);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_set_freqTableGeo_(self, nil);
    [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([daModel_ getController])) removeRegressionGeo];
    [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([daModel_ getController])) disposeDataListSelected];
    [plotGeoList_ clear];
    [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([daModel_ getController])) loadDataListsWithBoolean:YES];
    [((OrgGeogebraCommonGuiViewDataStatGeo *) nil_chk(statGeo_)) setRemoveFromConstructionWithBoolean:YES];
    [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk([daModel_ getController])) setRegressionGeo];
    [self updatePlotWithBoolean:YES];
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    [app_ setDefaultCursor];
  }
  [app_ setDefaultCursor];
  [app_ storeUndoInfo];
}

+ (void)prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                         withInt:(jint)euclidianViewID {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement_withInt_(geo, euclidianViewID);
}

- (void)removeGeos {
  [self clearPlotGeoList];
}

- (void)setModeWithInt:(jint)mode {
  [((OrgGeogebraCommonGuiViewDataDataAnalysisModel *) nil_chk(daModel_)) setModeWithInt:mode];
}

- (OrgGeogebraCommonGuiViewDataStatPanelSettings *)getSettings {
  return settings_;
}

- (OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *)getSelectedPlot {
  return selectedPlot_;
}

- (void)setSelectedPlotWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:(OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *)selectedPlot {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_set_selectedPlot_(self, selectedPlot);
}

- (void)dealloc {
  RELEASE_(app_);
  RELEASE_(loc_);
  RELEASE_(daModel_);
  RELEASE_(statGeo_);
  RELEASE_(selectedPlot_);
  RELEASE_(settings_);
  RELEASE_(plotGeoList_);
  RELEASE_(boxPlotTitles_);
  RELEASE_(histogram_);
  RELEASE_(dotPlot_);
  RELEASE_(frequencyPolygon_);
  RELEASE_(normalCurve_);
  RELEASE_(scatterPlot_);
  RELEASE_(scatterPlotLine_);
  RELEASE_(residualPlot_);
  RELEASE_(nqPlot_);
  RELEASE_(boxPlot_);
  RELEASE_(barChart_);
  RELEASE_(freqTableGeo_);
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel:withOrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener:", "DataDisplayModel", NULL, 0x1, NULL, NULL },
    { "updatePlotWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:withInt:", "updatePlot", "V", 0x1, NULL, NULL },
    { "fillDisplayTypes", NULL, "V", 0x1, NULL, NULL },
    { "updatePlotPanelLayout", NULL, "V", 0x1, NULL, NULL },
    { "updatePlotWithBoolean:", "updatePlot", "V", 0x1, NULL, NULL },
    { "clearPlotGeoList", NULL, "V", 0x1, NULL, NULL },
    { "exportGeosToEVWithInt:", "exportGeosToEV", "V", 0x1, NULL, NULL },
    { "prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement:withInt:", "prepareGeoForEV", "V", 0xa, NULL, NULL },
    { "removeGeos", NULL, "V", 0x1, NULL, NULL },
    { "setModeWithInt:", "setMode", "V", 0x1, NULL, NULL },
    { "getSettings", NULL, "Lorg.geogebra.common.gui.view.data.StatPanelSettings;", 0x1, NULL, NULL },
    { "getSelectedPlot", NULL, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", 0x1, NULL, NULL },
    { "setSelectedPlotWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:", "setSelectedPlot", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonGuiViewDataDataDisplayModel_serialVersionUID },
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "loc_", NULL, 0x2, "Lorg.geogebra.common.main.Localization;", NULL, NULL,  },
    { "daModel_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel;", NULL, NULL,  },
    { "statGeo_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.StatGeo;", NULL, NULL,  },
    { "selectedPlot_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", NULL, NULL,  },
    { "settings_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.StatPanelSettings;", NULL, NULL,  },
    { "plotGeoList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
    { "boxPlotTitles_", NULL, 0x2, "[Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "histogram_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "dotPlot_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "frequencyPolygon_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "normalCurve_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "scatterPlot_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "scatterPlotLine_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "residualPlot_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "nqPlot_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "boxPlot_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "barChart_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "freqTableGeo_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "hasControlPanel_", NULL, 0x2, "Z", NULL, NULL,  },
    { "listener_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$IDataDisplayListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.view.data.DataDisplayModel$IDataDisplayListener;", "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataDisplayModel = { 2, "DataDisplayModel", "org.geogebra.common.gui.view.data", NULL, 0x1, 13, methods, 22, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataDataDisplayModel;
}

@end

void OrgGeogebraCommonGuiViewDataDataDisplayModel_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener_(OrgGeogebraCommonGuiViewDataDataDisplayModel *self, OrgGeogebraCommonGuiViewDataDataAnalysisModel *daModel, id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener> listener) {
  NSObject_init(self);
  self->hasControlPanel_ = YES;
  OrgGeogebraCommonGuiViewDataDataDisplayModel_set_daModel_(self, daModel);
  OrgGeogebraCommonGuiViewDataDataDisplayModel_set_app_(self, [((OrgGeogebraCommonGuiViewDataDataAnalysisModel *) nil_chk(daModel)) getApp]);
  OrgGeogebraCommonGuiViewDataDataDisplayModel_set_loc_(self, [((OrgGeogebraCommonMainApp *) nil_chk(self->app_)) getLocalization]);
  OrgGeogebraCommonGuiViewDataDataDisplayModel_set_statGeo_(self, [daModel getStatGeo]);
  OrgGeogebraCommonGuiViewDataDataDisplayModel_set_listener_(self, listener);
  OrgGeogebraCommonGuiViewDataDataDisplayModel_setAndConsume_plotGeoList_(self, new_JavaUtilArrayList_init());
  OrgGeogebraCommonGuiViewDataDataDisplayModel_setAndConsume_settings_(self, new_OrgGeogebraCommonGuiViewDataStatPanelSettings_init());
  [self->settings_ setDataSourceWithOrgGeogebraCommonGuiViewDataDataSource:[daModel getDataSource]];
}

OrgGeogebraCommonGuiViewDataDataDisplayModel *new_OrgGeogebraCommonGuiViewDataDataDisplayModel_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener_(OrgGeogebraCommonGuiViewDataDataAnalysisModel *daModel, id<OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener> listener) {
  OrgGeogebraCommonGuiViewDataDataDisplayModel *self = [OrgGeogebraCommonGuiViewDataDataDisplayModel alloc];
  OrgGeogebraCommonGuiViewDataDataDisplayModel_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener_(self, daModel, listener);
  return self;
}

void OrgGeogebraCommonGuiViewDataDataDisplayModel_prepareGeoForEVWithOrgGeogebraCommonKernelGeosGeoElement_withInt_(OrgGeogebraCommonKernelGeosGeoElement *geo, jint euclidianViewID) {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_initialize();
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) setLabelWithNSString:nil];
  [geo setEuclidianVisibleWithBoolean:YES];
  [geo setAuxiliaryObjectWithBoolean:NO];
  if (euclidianViewID == OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN) {
    [geo addViewWithInt:OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN];
    [geo removeViewWithInt:OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN2];
    [geo update];
  }
  if (euclidianViewID == OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN2) {
    [geo addViewWithInt:OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN2];
    [geo removeViewWithInt:OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN];
    [geo update];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataDisplayModel)

@implementation OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addDisplayTypeItemWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:", "addDisplayTypeItem", "V", 0x401, NULL, NULL },
    { "updateScatterPlot", NULL, "V", 0x401, NULL, NULL },
    { "updateFrequencyTable", NULL, "V", 0x401, NULL, NULL },
    { "setSelectedTypeWithOrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum:", "setSelectedType", "V", 0x401, NULL, NULL },
    { "showControlPanel", NULL, "V", 0x401, NULL, NULL },
    { "setOptionsButtonVisible", NULL, "V", 0x401, NULL, NULL },
    { "showInvalidDataDisplay", NULL, "V", 0x401, NULL, NULL },
    { "setTableFromGeoFrequencyTableWithOrgGeogebraCommonKernelStatisticsAlgoFrequencyTable:withBoolean:", "setTableFromGeoFrequencyTable", "V", 0x401, NULL, NULL },
    { "updatePlotPanelSettings", NULL, "V", 0x401, NULL, NULL },
    { "showManualClassesPanel", NULL, "V", 0x401, NULL, NULL },
    { "showNumClassesPanel", NULL, "V", 0x401, NULL, NULL },
    { "showPlotPanel", NULL, "V", 0x401, NULL, NULL },
    { "updateStemPlotWithNSString:", "updateStemPlot", "V", 0x401, NULL, NULL },
    { "updateXYTitlesWithBoolean:withBoolean:", "updateXYTitles", "V", 0x401, NULL, NULL },
    { "geoToPlotPanelWithOrgGeogebraCommonKernelGeosGeoElement:", "geoToPlotPanel", "V", 0x401, NULL, NULL },
    { "removeFrequencyTable", NULL, "V", 0x401, NULL, NULL },
    { "resize", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener = { 2, "IDataDisplayListener", "org.geogebra.common.gui.view.data", "DataDisplayModel", 0x609, 17, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataDisplayModel_IDataDisplayListener)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum)

OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_values_[9];

@implementation OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum

- (instancetype)initWithNSString:(NSString *)key
                    withNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(self, key, __name, __ordinal);
  return self;
}

- (NSString *)getTranslatedKeyWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  return [((OrgGeogebraCommonMainApp *) nil_chk(app)) getMenuWithNSString:key_];
}

IOSObjectArray *OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_values() {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_values_ count:9 type:OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_values();
}

+ (OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initialize();
  for (int i = 0; i < 9; i++) {
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *e = OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum class]) {
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_HISTOGRAM = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"Histogram", @"HISTOGRAM", 0);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_BOXPLOT = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"Boxplot", @"BOXPLOT", 1);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_DOTPLOT = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"DotPlot", @"DOTPLOT", 2);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_NORMALQUANTILE = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"NormalQuantilePlot", @"NORMALQUANTILE", 3);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_STEMPLOT = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"StemPlot", @"STEMPLOT", 4);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_BARCHART = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"BarChart", @"BARCHART", 5);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_SCATTERPLOT = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"Scatterplot", @"SCATTERPLOT", 6);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_RESIDUAL = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"ResidualPlot", @"RESIDUAL", 7);
    OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_MULTIBOXPLOT = new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(@"StackedBoxPlots", @"MULTIBOXPLOT", 8);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getTranslatedKeyWithOrgGeogebraCommonMainApp:", "getTranslatedKey", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HISTOGRAM", "HISTOGRAM", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_HISTOGRAM, NULL,  },
    { "BOXPLOT", "BOXPLOT", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_BOXPLOT, NULL,  },
    { "DOTPLOT", "DOTPLOT", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_DOTPLOT, NULL,  },
    { "NORMALQUANTILE", "NORMALQUANTILE", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_NORMALQUANTILE, NULL,  },
    { "STEMPLOT", "STEMPLOT", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_STEMPLOT, NULL,  },
    { "BARCHART", "BARCHART", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_BARCHART, NULL,  },
    { "SCATTERPLOT", "SCATTERPLOT", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_SCATTERPLOT, NULL,  },
    { "RESIDUAL", "RESIDUAL", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_RESIDUAL, NULL,  },
    { "MULTIBOXPLOT", "MULTIBOXPLOT", 0x4019, "Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;", &OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_MULTIBOXPLOT, NULL,  },
    { "key_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.gui.view.data.DataDisplayModel$PlotType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum = { 2, "PlotType", "org.geogebra.common.gui.view.data", "DataDisplayModel", 0x4019, 1, methods, 10, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/gui/view/data/DataDisplayModel$PlotType;>;" };
  return &_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum;
}

@end

void OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *self, NSString *key, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_set_key_(self, key);
}

OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *new_OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(NSString *key, NSString *__name, jint __ordinal) {
  OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum *self = [OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum alloc];
  OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum_initWithNSString_withNSString_withInt_(self, key, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataDisplayModel_PlotTypeEnum)
