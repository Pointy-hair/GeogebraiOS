//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/view/data/StatisticsModel.java
//


#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"
#include "org/geogebra/common/gui/view/data/DataAnalysisModel.h"
#include "org/geogebra/common/gui/view/data/StatisticsModel.h"
#include "org/geogebra/common/main/App.h"

#define OrgGeogebraCommonGuiViewDataStatisticsModel_serialVersionUID 1LL

@interface OrgGeogebraCommonGuiViewDataStatisticsModel () {
 @public
  JavaUtilHashMap *labelMap_;
  JavaUtilHashMap *labelMapReverse_;
  jint selectedMode_;
  OrgGeogebraCommonMainApp *app_;
  OrgGeogebraCommonGuiViewDataDataAnalysisModel *daModel_;
  id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener> listener_;
}

- (void)createLabelMap;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataStatisticsModel, labelMap_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataStatisticsModel, labelMapReverse_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataStatisticsModel, app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataStatisticsModel, daModel_, OrgGeogebraCommonGuiViewDataDataAnalysisModel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataStatisticsModel, listener_, id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiViewDataStatisticsModel, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataStatisticsModel_createLabelMap(OrgGeogebraCommonGuiViewDataStatisticsModel *self);

@interface OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener : NSObject
@end

@implementation OrgGeogebraCommonGuiViewDataStatisticsModel

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
withOrgGeogebraCommonGuiViewDataDataAnalysisModel:(OrgGeogebraCommonGuiViewDataDataAnalysisModel *)model
withOrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener:(id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>)listener {
  OrgGeogebraCommonGuiViewDataStatisticsModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener_(self, app, model, listener);
  return self;
}

- (void)fillInferenceModes {
  switch ([((OrgGeogebraCommonGuiViewDataDataAnalysisModel *) nil_chk(daModel_)) getMode]) {
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_ONEVAR:
    [((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) addInferenceModeWithNSString:[((JavaUtilHashMap *) nil_chk(labelMap_)) getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_SUMMARY_STATISTICS)]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZTEST)]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST)]];
    [listener_ addInferenceModeWithNSString:[listener_ getSeparator]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZINT)]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT)]];
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_REGRESSION:
    [((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) addInferenceModeWithNSString:[((JavaUtilHashMap *) nil_chk(labelMap_)) getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_SUMMARY_STATISTICS)]];
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_MULTIVAR:
    [((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) addInferenceModeWithNSString:[((JavaUtilHashMap *) nil_chk(labelMap_)) getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_SUMMARY_STATISTICS)]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ANOVA)]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_2MEANS)]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_PAIRED)]];
    [listener_ addInferenceModeWithNSString:[listener_ getSeparator]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_2MEANS)]];
    [listener_ addInferenceModeWithNSString:[labelMap_ getWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_PAIRED)]];
    break;
  }
  [((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) selectInferenceModeWithNSString:[((JavaUtilHashMap *) nil_chk(labelMap_)) getWithId:JavaLangInteger_valueOfWithInt_([self getSelectedMode])]];
}

- (void)createLabelMap {
  OrgGeogebraCommonGuiViewDataStatisticsModel_createLabelMap(self);
}

- (void)update {
  switch ([self getSelectedMode]) {
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZTEST:
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST:
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZINT:
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT:
    [((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) updateOneVarInferenceWithInt:selectedMode_];
    break;
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_2MEANS:
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_PAIRED:
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_2MEANS:
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_PAIRED:
    [((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) updateTwoVarInferenceWithInt:selectedMode_];
    break;
    case OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ANOVA:
    [((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) updateAnovaTable];
    break;
  }
}

- (void)selectInferenceModeWithNSString:(NSString *)item {
  if ([((NSString *) nil_chk(item)) isEqual:[((id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener>) nil_chk(listener_)) getSeparator]]) {
    [listener_ selectInferenceModeWithNSString:[((JavaUtilHashMap *) nil_chk(labelMap_)) getWithId:JavaLangInteger_valueOfWithInt_([self getSelectedMode])]];
  }
  else {
    selectedMode_ = [((JavaLangInteger *) nil_chk([((JavaUtilHashMap *) nil_chk(labelMapReverse_)) getWithId:item])) intValue];
  }
}

- (jint)getSelectedMode {
  return selectedMode_;
}

- (void)setSelectedModeWithInt:(jint)selectedMode {
  self->selectedMode_ = selectedMode;
}

- (void)dealloc {
  RELEASE_(labelMap_);
  RELEASE_(labelMapReverse_);
  RELEASE_(app_);
  RELEASE_(daModel_);
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonGuiViewDataDataAnalysisModel:withOrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener:", "StatisticsModel", NULL, 0x1, NULL, NULL },
    { "fillInferenceModes", NULL, "V", 0x1, NULL, NULL },
    { "createLabelMap", NULL, "V", 0x2, NULL, NULL },
    { "update", NULL, "V", 0x1, NULL, NULL },
    { "selectInferenceModeWithNSString:", "selectInferenceMode", "V", 0x1, NULL, NULL },
    { "getSelectedMode", NULL, "I", 0x1, NULL, NULL },
    { "setSelectedModeWithInt:", "setSelectedMode", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonGuiViewDataStatisticsModel_serialVersionUID },
    { "SUMMARY_STATISTICS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_SUMMARY_STATISTICS },
    { "INFER_ZTEST_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZTEST },
    { "INFER_ZINT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZINT },
    { "INFER_TTEST_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST },
    { "INFER_TINT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT },
    { "INFER_TTEST_2MEANS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_2MEANS },
    { "INFER_TTEST_PAIRED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_PAIRED },
    { "INFER_TINT_2MEANS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_2MEANS },
    { "INFER_TINT_PAIRED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_PAIRED },
    { "INFER_ANOVA_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ANOVA },
    { "labelMap_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/String;>;",  },
    { "labelMapReverse_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;",  },
    { "selectedMode_", NULL, 0x2, "I", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "daModel_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel;", NULL, NULL,  },
    { "listener_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.StatisticsModel$IStatisticsModelListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.view.data.StatisticsModel$IStatisticsModelListener;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataStatisticsModel = { 2, "StatisticsModel", "org.geogebra.common.gui.view.data", NULL, 0x1, 7, methods, 17, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataStatisticsModel;
}

@end

void OrgGeogebraCommonGuiViewDataStatisticsModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener_(OrgGeogebraCommonGuiViewDataStatisticsModel *self, OrgGeogebraCommonMainApp *app, OrgGeogebraCommonGuiViewDataDataAnalysisModel *model, id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener> listener) {
  NSObject_init(self);
  self->selectedMode_ = OrgGeogebraCommonGuiViewDataStatisticsModel_SUMMARY_STATISTICS;
  OrgGeogebraCommonGuiViewDataStatisticsModel_set_app_(self, app);
  OrgGeogebraCommonGuiViewDataStatisticsModel_set_daModel_(self, model);
  OrgGeogebraCommonGuiViewDataStatisticsModel_set_listener_(self, listener);
  OrgGeogebraCommonGuiViewDataStatisticsModel_createLabelMap(self);
}

OrgGeogebraCommonGuiViewDataStatisticsModel *new_OrgGeogebraCommonGuiViewDataStatisticsModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener_(OrgGeogebraCommonMainApp *app, OrgGeogebraCommonGuiViewDataDataAnalysisModel *model, id<OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener> listener) {
  OrgGeogebraCommonGuiViewDataStatisticsModel *self = [OrgGeogebraCommonGuiViewDataStatisticsModel alloc];
  OrgGeogebraCommonGuiViewDataStatisticsModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_withOrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener_(self, app, model, listener);
  return self;
}

void OrgGeogebraCommonGuiViewDataStatisticsModel_createLabelMap(OrgGeogebraCommonGuiViewDataStatisticsModel *self) {
  if (self->labelMap_ == nil) OrgGeogebraCommonGuiViewDataStatisticsModel_setAndConsume_labelMap_(self, new_JavaUtilHashMap_init());
  [((JavaUtilHashMap *) nil_chk(self->labelMap_)) clear];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST) withId:[((OrgGeogebraCommonMainApp *) nil_chk(self->app_)) getMenuWithNSString:@"TMeanTest"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT) withId:[self->app_ getMenuWithNSString:@"TMeanInterval"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZTEST) withId:[self->app_ getMenuWithNSString:@"ZMeanTest"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ZINT) withId:[self->app_ getMenuWithNSString:@"ZMeanInterval"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_ANOVA) withId:[self->app_ getMenuWithNSString:@"ANOVA"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_SUMMARY_STATISTICS) withId:[self->app_ getMenuWithNSString:@"Statistics"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_2MEANS) withId:[self->app_ getMenuWithNSString:@"TTestDifferenceOfMeans"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TTEST_PAIRED) withId:[self->app_ getMenuWithNSString:@"TTestPairedDifferences"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_2MEANS) withId:[self->app_ getMenuWithNSString:@"TEstimateDifferenceOfMeans"]];
  [self->labelMap_ putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonGuiViewDataStatisticsModel_INFER_TINT_PAIRED) withId:[self->app_ getMenuWithNSString:@"TEstimatePairedDifferences"]];
  OrgGeogebraCommonGuiViewDataStatisticsModel_setAndConsume_labelMapReverse_(self, new_JavaUtilHashMap_init());
  for (JavaLangInteger * __strong key in nil_chk([self->labelMap_ keySet])) {
    [self->labelMapReverse_ putWithId:[self->labelMap_ getWithId:key] withId:key];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataStatisticsModel)

@implementation OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addInferenceModeWithNSString:", "addInferenceMode", "V", 0x401, NULL, NULL },
    { "selectInferenceModeWithNSString:", "selectInferenceMode", "V", 0x401, NULL, NULL },
    { "getSeparator", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "updateOneVarInferenceWithInt:", "updateOneVarInference", "V", 0x401, NULL, NULL },
    { "updateTwoVarInferenceWithInt:", "updateTwoVarInference", "V", 0x401, NULL, NULL },
    { "updateAnovaTable", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener = { 2, "IStatisticsModelListener", "org.geogebra.common.gui.view.data", "StatisticsModel", 0x609, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataStatisticsModel_IStatisticsModelListener)
