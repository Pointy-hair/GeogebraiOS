//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/view/data/DataItem.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/gui/view/data/DataItem.h"
#include "org/geogebra/common/gui/view/spreadsheet/CellRange.h"
#include "org/geogebra/common/gui/view/spreadsheet/CellRangeProcessor.h"
#include "org/geogebra/common/gui/view/spreadsheet/MyTable.h"
#include "org/geogebra/common/gui/view/spreadsheet/MyTableInterface.h"
#include "org/geogebra/common/gui/view/spreadsheet/RelativeCopy.h"
#include "org/geogebra/common/gui/view/spreadsheet/SpreadsheetViewInterface.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/View.h"
#include "org/geogebra/common/kernel/algos/AlgoDependentList.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/GuiManagerInterface.h"
#include "org/geogebra/common/plugin/GeoClass.h"

@interface OrgGeogebraCommonGuiViewDataDataItem () {
 @public
  OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *sourceType_;
  OrgGeogebraCommonPluginGeoClassEnum *geoClass_;
  JavaUtilArrayList *rangeList_;
  OrgGeogebraCommonKernelGeosGeoList *geoList_;
  IOSObjectArray *leftBorder_;
  IOSObjectArray *strInternal_;
  NSString *description__;
}

- (jboolean)isEmptyItem;

+ (JavaUtilArrayList *)rangeListCopyWithJavaUtilArrayList:(JavaUtilArrayList *)list
                                              withBoolean:(jboolean)removeHeaderCell;

+ (OrgGeogebraCommonGuiViewSpreadsheetCellRange *)rangeCopyWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:(OrgGeogebraCommonGuiViewSpreadsheetCellRange *)cr
                                                                                                withBoolean:(jboolean)removeHeaderCell;

+ (OrgGeogebraCommonKernelGeosGeoList *)dependentListCopyWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                          withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList;

+ (void)swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList;

- (jboolean)isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

+ (OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *)crProcessorWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app;

+ (id<OrgGeogebraCommonGuiViewSpreadsheetMyTable>)spreadsheetTableWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataItem, sourceType_, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataItem, geoClass_, OrgGeogebraCommonPluginGeoClassEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataItem, rangeList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataItem, geoList_, OrgGeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataItem, leftBorder_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataItem, strInternal_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataItem, description__, NSString *)

__attribute__((unused)) static jboolean OrgGeogebraCommonGuiViewDataDataItem_isEmptyItem(OrgGeogebraCommonGuiViewDataDataItem *self);

__attribute__((unused)) static JavaUtilArrayList *OrgGeogebraCommonGuiViewDataDataItem_rangeListCopyWithJavaUtilArrayList_withBoolean_(JavaUtilArrayList *list, jboolean removeHeaderCell);

__attribute__((unused)) static OrgGeogebraCommonGuiViewSpreadsheetCellRange *OrgGeogebraCommonGuiViewDataDataItem_rangeCopyWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_withBoolean_(OrgGeogebraCommonGuiViewSpreadsheetCellRange *cr, jboolean removeHeaderCell);

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoList *OrgGeogebraCommonGuiViewDataDataItem_dependentListCopyWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *geoList);

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataDataItem_swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelGeosGeoList *geoList);

__attribute__((unused)) static jboolean OrgGeogebraCommonGuiViewDataDataItem_isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGuiViewDataDataItem *self, OrgGeogebraCommonKernelGeosGeoElement *geo);

__attribute__((unused)) static OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *OrgGeogebraCommonGuiViewDataDataItem_crProcessorWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainApp *app);

__attribute__((unused)) static id<OrgGeogebraCommonGuiViewSpreadsheetMyTable> OrgGeogebraCommonGuiViewDataDataItem_spreadsheetTableWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainApp *app);

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *new_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonGuiViewDataDataItem

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList {
  OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonKernelGeosGeoList_(self, geoList);
  return self;
}

- (instancetype)initWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList {
  OrgGeogebraCommonGuiViewDataDataItem_initWithJavaUtilArrayList_(self, rangeList);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:(OrgGeogebraCommonGuiViewSpreadsheetCellRange *)cellRange {
  OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_(self, cellRange);
  return self;
}

- (instancetype)initWithJavaLangDoubleArray:(IOSObjectArray *)leftBorder {
  OrgGeogebraCommonGuiViewDataDataItem_initWithJavaLangDoubleArray_(self, leftBorder);
  return self;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)internalData {
  OrgGeogebraCommonGuiViewDataDataItem_initWithNSStringArray_(self, internalData);
  return self;
}

- (instancetype)init {
  OrgGeogebraCommonGuiViewDataDataItem_init(self);
  return self;
}

- (void)setDataItemWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList {
  [self clearItem];
  OrgGeogebraCommonGuiViewDataDataItem_set_rangeList_(self, rangeList);
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_SPREADSHEET());
}

- (void)setDataItemWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList {
  [self clearItem];
  OrgGeogebraCommonGuiViewDataDataItem_set_geoList_(self, geoList);
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_LIST());
}

- (void)setDataItemWithJavaLangDoubleArray:(IOSObjectArray *)leftBorder {
  [self clearItem];
  OrgGeogebraCommonGuiViewDataDataItem_set_leftBorder_(self, leftBorder);
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_CLASS());
}

- (JavaUtilArrayList *)getRangeList {
  return rangeList_;
}

- (OrgGeogebraCommonKernelGeosGeoList *)getGeoList {
  return geoList_;
}

- (IOSObjectArray *)getLeftBorder {
  return leftBorder_;
}

- (IOSObjectArray *)getStrInternal {
  return strInternal_;
}

- (OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *)getType {
  return sourceType_;
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClass {
  return geoClass_;
}

- (void)setGeoClassWithOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoClass {
  OrgGeogebraCommonGuiViewDataDataItem_set_geoClass_(self, geoClass);
}

- (NSString *)getDescription {
  return description__;
}

- (void)setDescriptionWithNSString:(NSString *)description_ {
  OrgGeogebraCommonGuiViewDataDataItem_set_description__(self, description_);
}

- (void)clearItem {
}

- (jboolean)containsGeoClassWithOrgGeogebraCommonPluginGeoClassEnum:(OrgGeogebraCommonPluginGeoClassEnum *)geoClass {
  if (sourceType_ == OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_EMPTY()) {
    return NO;
  }
  switch ([sourceType_ ordinal]) {
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_LIST:
    if (geoList_ == nil) {
      return NO;
    }
    for (jint i = 0; i < [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(geoList_)) size]; i++) {
      if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geoList_ getWithInt:i])) getGeoClassType] == geoClass) {
        return YES;
      }
    }
    break;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_SPREADSHEET:
    if (rangeList_ == nil) {
      return NO;
    }
    for (OrgGeogebraCommonGuiViewSpreadsheetCellRange * __strong cr in nil_chk(rangeList_)) {
      if ([((OrgGeogebraCommonGuiViewSpreadsheetCellRange *) nil_chk(cr)) containsGeoClassWithOrgGeogebraCommonPluginGeoClassEnum:geoClass]) return YES;
    }
    break;
  }
  return NO;
}

- (jboolean)isEmptyItem {
  return OrgGeogebraCommonGuiViewDataDataItem_isEmptyItem(self);
}

- (jint)getGeoCount {
  {
    jint count;
    switch ([sourceType_ ordinal]) {
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_LIST:
      return [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(geoList_)) size];
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_SPREADSHEET:
      count = 0;
      for (OrgGeogebraCommonGuiViewSpreadsheetCellRange * __strong cr in nil_chk(rangeList_)) {
        count += [((OrgGeogebraCommonGuiViewSpreadsheetCellRange *) nil_chk(cr)) getGeoCountWithOrgGeogebraCommonPluginGeoClassEnum:nil];
      }
      return count;
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_CLASS:
      return ((IOSObjectArray *) nil_chk(leftBorder_))->size_;
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_INTERNAL:
      return ((IOSObjectArray *) nil_chk(strInternal_))->size_;
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_EMPTY:
      return 0;
      default:
      return 0;
    }
  }
}

- (NSString *)getSourceStringWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  NSString *sourceString = @" ";
  switch ([sourceType_ ordinal]) {
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_LIST:
    sourceString = [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk([self getGeoList])) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    break;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_SPREADSHEET:
    sourceString = [((OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *) nil_chk([((id<OrgGeogebraCommonGuiViewSpreadsheetMyTable>) nil_chk(OrgGeogebraCommonGuiViewDataDataItem_spreadsheetTableWithOrgGeogebraCommonMainApp_(app))) getCellRangeProcessor])) getCellRangeStringWithJavaUtilArrayList:[self getRangeList]];
    break;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_INTERNAL:
    sourceString = @"Untitled";
    break;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_CLASS:
    sourceString = @" ";
    break;
  }
  return sourceString;
}

- (NSString *)getDataTitleWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                           withBoolean:(jboolean)enableHeader {
  if (!enableHeader || sourceType_ == OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_LIST()) {
    return ([self getSourceStringWithOrgGeogebraCommonMainApp:app]);
  }
  else if (enableHeader && sourceType_ == OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_SPREADSHEET()) {
    OrgGeogebraCommonKernelStringTemplate *tpl = OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_();
    OrgGeogebraCommonGuiViewSpreadsheetCellRange *range = [((JavaUtilArrayList *) nil_chk([self getRangeList])) getWithInt:0];
    if ([((OrgGeogebraCommonGuiViewSpreadsheetCellRange *) nil_chk(range)) isColumn] || [range isPartialColumn]) {
      OrgGeogebraCommonKernelGeosGeoElement *geo = OrgGeogebraCommonGuiViewSpreadsheetRelativeCopy_getValueWithOrgGeogebraCommonMainApp_withInt_withInt_(app, [range getMinColumn], [range getMinRow]);
      if (geo != nil) {
        return [geo toDefinedValueStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
      }
    }
  }
  return [((OrgGeogebraCommonMainApp *) nil_chk(app)) getMenuWithNSString:@"Untitled"];
}

- (OrgGeogebraCommonKernelGeosGeoList *)toGeoListWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                                                  withBoolean:(jboolean)enableHeader
                                                                  withBoolean:(jboolean)leftToRight
                                                                  withBoolean:(jboolean)doCopy {
  if (sourceType_ == OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_EMPTY()) {
    return nil;
  }
  OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel])) getConstruction];
  OrgGeogebraCommonKernelGeosGeoList *list;
  {
    jboolean scanByColumn;
    jboolean copyByValue;
    jboolean doStoreUndo;
    jboolean isSorted;
    jboolean setLabel;
    IOSObjectArray *s;
    jboolean oldSuppress;
    switch ([sourceType_ ordinal]) {
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_LIST:
      if (doCopy) {
        list = OrgGeogebraCommonGuiViewDataDataItem_dependentListCopyWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(cons, [self getGeoList]);
      }
      else {
        list = [self getGeoList];
      }
      if (!leftToRight) {
        OrgGeogebraCommonGuiViewDataDataItem_swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList_(list);
      }
      break;
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_SPREADSHEET:
      scanByColumn = YES;
      copyByValue = doCopy;
      doStoreUndo = NO;
      isSorted = NO;
      setLabel = NO;
      @try {
        JavaUtilArrayList *rangeListCopy = OrgGeogebraCommonGuiViewDataDataItem_rangeListCopyWithJavaUtilArrayList_withBoolean_([self getRangeList], enableHeader);
        list = [((OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *) nil_chk(OrgGeogebraCommonGuiViewDataDataItem_crProcessorWithOrgGeogebraCommonMainApp_(app))) createListWithJavaUtilArrayList:rangeListCopy withBoolean:scanByColumn withBoolean:copyByValue withBoolean:isSorted withBoolean:doStoreUndo withOrgGeogebraCommonPluginGeoClassEnum:geoClass_ withBoolean:setLabel];
      }
      @catch (JavaLangException *e) {
        [((JavaLangException *) nil_chk(e)) printStackTrace];
        return nil;
      }
      break;
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_CLASS:
      list = [new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
      for (jint i = 0; i < ((IOSObjectArray *) nil_chk([self getLeftBorder]))->size_; i++) {
        [list addWithOrgGeogebraCommonKernelGeosGeoElement:[new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(cons, [((JavaLangDouble *) nil_chk(IOSObjectArray_Get(nil_chk([self getLeftBorder]), i))) doubleValue]) autorelease]];
      }
      break;
      case OrgGeogebraCommonGuiViewDataDataItem_SourceType_INTERNAL:
      s = [self getStrInternal];
      oldSuppress = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) isSuppressLabelsActive];
      [cons setSuppressLabelCreationWithBoolean:YES];
      list = [new_OrgGeogebraCommonKernelGeosGeoList_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
      for (jint i = 0; i < ((IOSObjectArray *) nil_chk(s))->size_; i++) {
        @try {
          jdouble num = JavaLangDouble_parseDoubleWithNSString_(IOSObjectArray_Get(s, i));
          OrgGeogebraCommonKernelGeosGeoElement *geo = [new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
          [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) setValueWithDouble:num];
          [list addWithOrgGeogebraCommonKernelGeosGeoElement:geo];
        }
        @catch (JavaLangException *e) {
          OrgGeogebraCommonMainApp_errorWithNSString_([((JavaLangException *) nil_chk(e)) getMessage]);
        }
      }
      [cons setSuppressLabelCreationWithBoolean:oldSuppress];
      break;
      default:
      return nil;
    }
  }
  if (!leftToRight && [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(list)) getElementType] == OrgGeogebraCommonPluginGeoClassEnum_get_POINT()) {
    OrgGeogebraCommonGuiViewDataDataItem_swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList_(list);
  }
  return list;
}

+ (JavaUtilArrayList *)rangeListCopyWithJavaUtilArrayList:(JavaUtilArrayList *)list
                                              withBoolean:(jboolean)removeHeaderCell {
  return OrgGeogebraCommonGuiViewDataDataItem_rangeListCopyWithJavaUtilArrayList_withBoolean_(list, removeHeaderCell);
}

+ (OrgGeogebraCommonGuiViewSpreadsheetCellRange *)rangeCopyWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:(OrgGeogebraCommonGuiViewSpreadsheetCellRange *)cr
                                                                                                withBoolean:(jboolean)removeHeaderCell {
  return OrgGeogebraCommonGuiViewDataDataItem_rangeCopyWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_withBoolean_(cr, removeHeaderCell);
}

+ (OrgGeogebraCommonKernelGeosGeoList *)dependentListCopyWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                          withOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList {
  return OrgGeogebraCommonGuiViewDataDataItem_dependentListCopyWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(cons, geoList);
}

+ (void)swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)geoList {
  OrgGeogebraCommonGuiViewDataDataItem_swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList_(geoList);
}

- (IOSObjectArray *)toStringArrayWithBoolean:(jboolean)enableHeader {
  JavaUtilArrayList *list = [self toStringListWithBoolean:enableHeader];
  if (list == nil) {
    return [IOSObjectArray arrayWithLength:0 type:NSString_class_()];
  }
  return [list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[((JavaUtilArrayList *) nil_chk(list)) size] type:NSString_class_()]];
}

- (JavaUtilArrayList *)toStringListWithBoolean:(jboolean)enableHeader {
  if (OrgGeogebraCommonGuiViewDataDataItem_isEmptyItem(self)) {
    return nil;
  }
  JavaUtilArrayList *strList = [new_JavaUtilArrayList_init() autorelease];
  @try {
    {
      jboolean skipFirstCell;
      IOSObjectArray *str;
      IOSObjectArray *leftBorder;
      switch ([sourceType_ ordinal]) {
        case OrgGeogebraCommonGuiViewDataDataItem_SourceType_LIST:
        for (jint i = 0; i < [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(geoList_)) size]; i++) {
          if ([geoList_ getWithInt:i] == nil || !([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geoList_ getWithInt:i])) isDefined])) {
            continue;
          }
          if (OrgGeogebraCommonGuiViewDataDataItem_isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement_(self, [geoList_ getWithInt:i])) {
            [strList addWithInt:i withId:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geoList_ getWithInt:i])) getValueForInputBar]];
          }
          else {
            [strList addWithInt:i withId:JreStrcat("$$$", @"<html><i><font color = gray>", [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geoList_ getWithInt:i])) getValueForInputBar], @"</font></i></html>")];
          }
        }
        break;
        case OrgGeogebraCommonGuiViewDataDataItem_SourceType_SPREADSHEET:
        skipFirstCell = enableHeader;
        for (OrgGeogebraCommonGuiViewSpreadsheetCellRange * __strong cr in nil_chk(rangeList_)) {
          JavaUtilArrayList *list = [((OrgGeogebraCommonGuiViewSpreadsheetCellRange *) nil_chk(cr)) toGeoList];
          for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(list)) size]; i++) {
            if (skipFirstCell) {
              skipFirstCell = NO;
              continue;
            }
            if ([list getWithInt:i] == nil || !([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([list getWithInt:i])) isDefined])) {
              continue;
            }
            if (OrgGeogebraCommonGuiViewDataDataItem_isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement_(self, [list getWithInt:i])) {
              [strList addWithId:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([list getWithInt:i])) getValueForInputBar]];
            }
            else {
              [strList addWithId:JreStrcat("$$$", @"<html><i><font color = gray>", [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([list getWithInt:i])) getValueForInputBar], @"</font></i></html>")];
            }
          }
        }
        break;
        case OrgGeogebraCommonGuiViewDataDataItem_SourceType_INTERNAL:
        str = [self getStrInternal];
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(str))->size_; i++) {
          if (i < str->size_ && IOSObjectArray_Get(str, i) != nil) {
            [strList addWithInt:i withId:IOSObjectArray_Get(str, i)];
          }
          else {
            [strList addWithInt:i withId:@" "];
          }
        }
        break;
        case OrgGeogebraCommonGuiViewDataDataItem_SourceType_CLASS:
        leftBorder = [self getLeftBorder];
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(leftBorder))->size_ - 1; i++) {
          if (i < leftBorder->size_ && IOSObjectArray_Get(leftBorder, i) != nil) {
            NSString *interval = JreStrcat("@$@", IOSObjectArray_Get(leftBorder, i), @" - ", IOSObjectArray_Get(leftBorder, i + 1));
            [strList addWithInt:i withId:interval];
          }
          else {
            [strList addWithInt:i withId:@" "];
          }
        }
      }
    }
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
  return strList;
}

- (jboolean)isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return OrgGeogebraCommonGuiViewDataDataItem_isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement_(self, geo);
}

+ (OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *)crProcessorWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  return OrgGeogebraCommonGuiViewDataDataItem_crProcessorWithOrgGeogebraCommonMainApp_(app);
}

+ (id<OrgGeogebraCommonGuiViewSpreadsheetMyTable>)spreadsheetTableWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  return OrgGeogebraCommonGuiViewDataDataItem_spreadsheetTableWithOrgGeogebraCommonMainApp_(app);
}

- (void)dealloc {
  RELEASE_(sourceType_);
  RELEASE_(geoClass_);
  RELEASE_(rangeList_);
  RELEASE_(geoList_);
  RELEASE_(leftBorder_);
  RELEASE_(strInternal_);
  RELEASE_(description__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelGeosGeoList:", "DataItem", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilArrayList:", "DataItem", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:", "DataItem", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangDoubleArray:", "DataItem", NULL, 0x1, NULL, NULL },
    { "initWithNSStringArray:", "DataItem", NULL, 0x1, NULL, NULL },
    { "init", "DataItem", NULL, 0x1, NULL, NULL },
    { "setDataItemWithJavaUtilArrayList:", "setDataItem", "V", 0x1, NULL, NULL },
    { "setDataItemWithOrgGeogebraCommonKernelGeosGeoList:", "setDataItem", "V", 0x1, NULL, NULL },
    { "setDataItemWithJavaLangDoubleArray:", "setDataItem", "V", 0x1, NULL, NULL },
    { "getRangeList", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "getGeoList", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "getLeftBorder", NULL, "[Ljava.lang.Double;", 0x1, NULL, NULL },
    { "getStrInternal", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getType", NULL, "Lorg.geogebra.common.gui.view.data.DataItem$SourceType;", 0x1, NULL, NULL },
    { "getGeoClass", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "setGeoClassWithOrgGeogebraCommonPluginGeoClassEnum:", "setGeoClass", "V", 0x1, NULL, NULL },
    { "getDescription", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setDescriptionWithNSString:", "setDescription", "V", 0x1, NULL, NULL },
    { "clearItem", NULL, "V", 0x1, NULL, NULL },
    { "containsGeoClassWithOrgGeogebraCommonPluginGeoClassEnum:", "containsGeoClass", "Z", 0x1, NULL, NULL },
    { "isEmptyItem", NULL, "Z", 0x2, NULL, NULL },
    { "getGeoCount", NULL, "I", 0x1, NULL, NULL },
    { "getSourceStringWithOrgGeogebraCommonMainApp:", "getSourceString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDataTitleWithOrgGeogebraCommonMainApp:withBoolean:", "getDataTitle", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toGeoListWithOrgGeogebraCommonMainApp:withBoolean:withBoolean:withBoolean:", "toGeoList", "Lorg.geogebra.common.kernel.geos.GeoList;", 0x4, NULL, NULL },
    { "rangeListCopyWithJavaUtilArrayList:withBoolean:", "rangeListCopy", "Ljava.util.ArrayList;", 0xa, NULL, NULL },
    { "rangeCopyWithOrgGeogebraCommonGuiViewSpreadsheetCellRange:withBoolean:", "rangeCopy", "Lorg.geogebra.common.gui.view.spreadsheet.CellRange;", 0xa, NULL, NULL },
    { "dependentListCopyWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoList:", "dependentListCopy", "Lorg.geogebra.common.kernel.geos.GeoList;", 0xa, NULL, NULL },
    { "swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList:", "swapXYCoords", "V", 0xa, NULL, NULL },
    { "toStringArrayWithBoolean:", "toStringArray", "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "toStringListWithBoolean:", "toStringList", "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement:", "isValidDataType", "Z", 0x2, NULL, NULL },
    { "crProcessorWithOrgGeogebraCommonMainApp:", "crProcessor", "Lorg.geogebra.common.gui.view.spreadsheet.CellRangeProcessor;", 0xa, NULL, NULL },
    { "spreadsheetTableWithOrgGeogebraCommonMainApp:", "spreadsheetTable", "Lorg.geogebra.common.gui.view.spreadsheet.MyTable;", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sourceType_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataItem$SourceType;", NULL, NULL,  },
    { "geoClass_", NULL, 0x2, "Lorg.geogebra.common.plugin.GeoClass;", NULL, NULL,  },
    { "rangeList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/gui/view/spreadsheet/CellRange;>;",  },
    { "geoList_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "leftBorder_", NULL, 0x2, "[Ljava.lang.Double;", NULL, NULL,  },
    { "strInternal_", NULL, 0x2, "[Ljava.lang.String;", NULL, NULL,  },
    { "description__", "description", 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.view.data.DataItem$SourceType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataItem = { 2, "DataItem", "org.geogebra.common.gui.view.data", NULL, 0x1, 34, methods, 7, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataDataItem;
}

@end

void OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonGuiViewDataDataItem *self, OrgGeogebraCommonKernelGeosGeoList *geoList) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewDataDataItem_set_geoClass_(self, OrgGeogebraCommonPluginGeoClassEnum_get_NUMERIC());
  OrgGeogebraCommonGuiViewDataDataItem_set_description__(self, @" ");
  OrgGeogebraCommonGuiViewDataDataItem_set_geoList_(self, geoList);
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_LIST());
}

OrgGeogebraCommonGuiViewDataDataItem *new_OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelGeosGeoList *geoList) {
  OrgGeogebraCommonGuiViewDataDataItem *self = [OrgGeogebraCommonGuiViewDataDataItem alloc];
  OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonKernelGeosGeoList_(self, geoList);
  return self;
}

void OrgGeogebraCommonGuiViewDataDataItem_initWithJavaUtilArrayList_(OrgGeogebraCommonGuiViewDataDataItem *self, JavaUtilArrayList *rangeList) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewDataDataItem_set_geoClass_(self, OrgGeogebraCommonPluginGeoClassEnum_get_NUMERIC());
  OrgGeogebraCommonGuiViewDataDataItem_set_description__(self, @" ");
  OrgGeogebraCommonGuiViewDataDataItem_set_rangeList_(self, rangeList);
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_SPREADSHEET());
}

OrgGeogebraCommonGuiViewDataDataItem *new_OrgGeogebraCommonGuiViewDataDataItem_initWithJavaUtilArrayList_(JavaUtilArrayList *rangeList) {
  OrgGeogebraCommonGuiViewDataDataItem *self = [OrgGeogebraCommonGuiViewDataDataItem alloc];
  OrgGeogebraCommonGuiViewDataDataItem_initWithJavaUtilArrayList_(self, rangeList);
  return self;
}

void OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_(OrgGeogebraCommonGuiViewDataDataItem *self, OrgGeogebraCommonGuiViewSpreadsheetCellRange *cellRange) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewDataDataItem_set_geoClass_(self, OrgGeogebraCommonPluginGeoClassEnum_get_NUMERIC());
  OrgGeogebraCommonGuiViewDataDataItem_set_description__(self, @" ");
  OrgGeogebraCommonGuiViewDataDataItem_setAndConsume_rangeList_(self, new_JavaUtilArrayList_init());
  [self->rangeList_ addWithId:cellRange];
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_SPREADSHEET());
}

OrgGeogebraCommonGuiViewDataDataItem *new_OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_(OrgGeogebraCommonGuiViewSpreadsheetCellRange *cellRange) {
  OrgGeogebraCommonGuiViewDataDataItem *self = [OrgGeogebraCommonGuiViewDataDataItem alloc];
  OrgGeogebraCommonGuiViewDataDataItem_initWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_(self, cellRange);
  return self;
}

void OrgGeogebraCommonGuiViewDataDataItem_initWithJavaLangDoubleArray_(OrgGeogebraCommonGuiViewDataDataItem *self, IOSObjectArray *leftBorder) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewDataDataItem_set_geoClass_(self, OrgGeogebraCommonPluginGeoClassEnum_get_NUMERIC());
  OrgGeogebraCommonGuiViewDataDataItem_set_description__(self, @" ");
  OrgGeogebraCommonGuiViewDataDataItem_set_leftBorder_(self, leftBorder);
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_CLASS());
}

OrgGeogebraCommonGuiViewDataDataItem *new_OrgGeogebraCommonGuiViewDataDataItem_initWithJavaLangDoubleArray_(IOSObjectArray *leftBorder) {
  OrgGeogebraCommonGuiViewDataDataItem *self = [OrgGeogebraCommonGuiViewDataDataItem alloc];
  OrgGeogebraCommonGuiViewDataDataItem_initWithJavaLangDoubleArray_(self, leftBorder);
  return self;
}

void OrgGeogebraCommonGuiViewDataDataItem_initWithNSStringArray_(OrgGeogebraCommonGuiViewDataDataItem *self, IOSObjectArray *internalData) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewDataDataItem_set_geoClass_(self, OrgGeogebraCommonPluginGeoClassEnum_get_NUMERIC());
  OrgGeogebraCommonGuiViewDataDataItem_set_description__(self, @" ");
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_INTERNAL());
}

OrgGeogebraCommonGuiViewDataDataItem *new_OrgGeogebraCommonGuiViewDataDataItem_initWithNSStringArray_(IOSObjectArray *internalData) {
  OrgGeogebraCommonGuiViewDataDataItem *self = [OrgGeogebraCommonGuiViewDataDataItem alloc];
  OrgGeogebraCommonGuiViewDataDataItem_initWithNSStringArray_(self, internalData);
  return self;
}

void OrgGeogebraCommonGuiViewDataDataItem_init(OrgGeogebraCommonGuiViewDataDataItem *self) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewDataDataItem_set_geoClass_(self, OrgGeogebraCommonPluginGeoClassEnum_get_NUMERIC());
  OrgGeogebraCommonGuiViewDataDataItem_set_description__(self, @" ");
  OrgGeogebraCommonGuiViewDataDataItem_set_sourceType_(self, OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_get_EMPTY());
}

OrgGeogebraCommonGuiViewDataDataItem *new_OrgGeogebraCommonGuiViewDataDataItem_init() {
  OrgGeogebraCommonGuiViewDataDataItem *self = [OrgGeogebraCommonGuiViewDataDataItem alloc];
  OrgGeogebraCommonGuiViewDataDataItem_init(self);
  return self;
}

jboolean OrgGeogebraCommonGuiViewDataDataItem_isEmptyItem(OrgGeogebraCommonGuiViewDataDataItem *self) {
  switch ([self->sourceType_ ordinal]) {
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_LIST:
    return self->geoList_ == nil;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_SPREADSHEET:
    return self->rangeList_ == nil;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_CLASS:
    return self->leftBorder_ == nil;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_INTERNAL:
    return self->strInternal_ == nil;
    case OrgGeogebraCommonGuiViewDataDataItem_SourceType_EMPTY:
    return YES;
    default:
    return NO;
  }
}

JavaUtilArrayList *OrgGeogebraCommonGuiViewDataDataItem_rangeListCopyWithJavaUtilArrayList_withBoolean_(JavaUtilArrayList *list, jboolean removeHeaderCell) {
  OrgGeogebraCommonGuiViewDataDataItem_initialize();
  JavaUtilArrayList *list2 = [new_JavaUtilArrayList_init() autorelease];
  [list2 addWithId:OrgGeogebraCommonGuiViewDataDataItem_rangeCopyWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_withBoolean_([((JavaUtilArrayList *) nil_chk(list)) getWithInt:0], removeHeaderCell)];
  for (jint i = 1; i < [list size]; i++) {
    [list2 addWithId:[((OrgGeogebraCommonGuiViewSpreadsheetCellRange *) nil_chk([list getWithInt:i])) clone]];
  }
  return list2;
}

OrgGeogebraCommonGuiViewSpreadsheetCellRange *OrgGeogebraCommonGuiViewDataDataItem_rangeCopyWithOrgGeogebraCommonGuiViewSpreadsheetCellRange_withBoolean_(OrgGeogebraCommonGuiViewSpreadsheetCellRange *cr, jboolean removeHeaderCell) {
  OrgGeogebraCommonGuiViewDataDataItem_initialize();
  OrgGeogebraCommonGuiViewSpreadsheetCellRange *cr2 = [((OrgGeogebraCommonGuiViewSpreadsheetCellRange *) nil_chk(cr)) clone];
  if (removeHeaderCell) {
    [((OrgGeogebraCommonGuiViewSpreadsheetCellRange *) nil_chk(cr2)) setCellRangeWithInt:[cr getMinColumn] withInt:[cr getMinRow] + 1 withInt:[cr getMaxColumn] withInt:[cr getMaxRow]];
  }
  return cr2;
}

OrgGeogebraCommonKernelGeosGeoList *OrgGeogebraCommonGuiViewDataDataItem_dependentListCopyWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoList *geoList) {
  OrgGeogebraCommonGuiViewDataDataItem_initialize();
  JavaUtilArrayList *copyList = [new_JavaUtilArrayList_init() autorelease];
  for (jint i = 0; i < [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(geoList)) size]; i++) {
    [copyList addWithId:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geoList getWithInt:i])) copy__]];
  }
  OrgGeogebraCommonKernelAlgosAlgoDependentList *algo = [new_OrgGeogebraCommonKernelAlgosAlgoDependentList_initWithOrgGeogebraCommonKernelConstruction_withJavaUtilArrayList_withBoolean_(cons, copyList, NO) autorelease];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:algo];
  return (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(nil_chk([algo getGeoElements]), 0), [OrgGeogebraCommonKernelGeosGeoList class]);
}

void OrgGeogebraCommonGuiViewDataDataItem_swapXYCoordsWithOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelGeosGeoList *geoList) {
  OrgGeogebraCommonGuiViewDataDataItem_initialize();
  if ([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(geoList)) getElementType] != OrgGeogebraCommonPluginGeoClassEnum_get_POINT()) {
    return;
  }
  for (jint i = 0; i < [geoList size]; i++) {
    jdouble x = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([geoList getWithInt:i], [OrgGeogebraCommonKernelGeosGeoPoint class]))))->x_;
    jdouble y = ((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([geoList getWithInt:i], [OrgGeogebraCommonKernelGeosGeoPoint class]))))->y_;
    [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast([geoList getWithInt:i], [OrgGeogebraCommonKernelGeosGeoPoint class])))) setCoordsWithDouble:y withDouble:x withDouble:1.0];
  }
  [geoList updateCascade];
}

jboolean OrgGeogebraCommonGuiViewDataDataItem_isValidDataTypeWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGuiViewDataDataItem *self, OrgGeogebraCommonKernelGeosGeoElement *geo) {
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getGeoClassType] == self->geoClass_;
}

OrgGeogebraCommonGuiViewSpreadsheetCellRangeProcessor *OrgGeogebraCommonGuiViewDataDataItem_crProcessorWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonGuiViewDataDataItem_initialize();
  return [((id<OrgGeogebraCommonGuiViewSpreadsheetMyTable>) nil_chk(OrgGeogebraCommonGuiViewDataDataItem_spreadsheetTableWithOrgGeogebraCommonMainApp_(app))) getCellRangeProcessor];
}

id<OrgGeogebraCommonGuiViewSpreadsheetMyTable> OrgGeogebraCommonGuiViewDataDataItem_spreadsheetTableWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonGuiViewDataDataItem_initialize();
  id<OrgGeogebraCommonGuiViewSpreadsheetSpreadsheetViewInterface> spvi = (id<OrgGeogebraCommonGuiViewSpreadsheetSpreadsheetViewInterface>) check_protocol_cast([((id<OrgGeogebraCommonMainGuiManagerInterface>) nil_chk(([((OrgGeogebraCommonMainApp *) nil_chk(app)) getGuiManager]))) getSpreadsheetView], @protocol(OrgGeogebraCommonGuiViewSpreadsheetSpreadsheetViewInterface));
  return (id<OrgGeogebraCommonGuiViewSpreadsheetMyTable>) check_protocol_cast([((id<OrgGeogebraCommonGuiViewSpreadsheetSpreadsheetViewInterface>) nil_chk(spvi)) getSpreadsheetTable], @protocol(OrgGeogebraCommonGuiViewSpreadsheetMyTable));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataItem)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum)

OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_values_[5];

@implementation OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_values() {
  OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_values_ count:5 type:OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_values();
}

+ (OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initialize();
  for (int i = 0; i < 5; i++) {
    OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *e = OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum class]) {
    OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_SPREADSHEET = new_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(@"SPREADSHEET", 0);
    OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_LIST = new_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(@"LIST", 1);
    OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_CLASS = new_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(@"CLASS", 2);
    OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_INTERNAL = new_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(@"INTERNAL", 3);
    OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_EMPTY = new_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(@"EMPTY", 4);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "SPREADSHEET", "SPREADSHEET", 0x4019, "Lorg.geogebra.common.gui.view.data.DataItem$SourceType;", &OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_SPREADSHEET, NULL,  },
    { "LIST", "LIST", 0x4019, "Lorg.geogebra.common.gui.view.data.DataItem$SourceType;", &OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_LIST, NULL,  },
    { "CLASS", "CLASS", 0x4019, "Lorg.geogebra.common.gui.view.data.DataItem$SourceType;", &OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_CLASS, NULL,  },
    { "INTERNAL", "INTERNAL", 0x4019, "Lorg.geogebra.common.gui.view.data.DataItem$SourceType;", &OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_INTERNAL, NULL,  },
    { "EMPTY", "EMPTY", 0x4019, "Lorg.geogebra.common.gui.view.data.DataItem$SourceType;", &OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_EMPTY, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.gui.view.data.DataItem$SourceType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum = { 2, "SourceType", "org.geogebra.common.gui.view.data", "DataItem", 0x4019, 0, NULL, 5, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/gui/view/data/DataItem$SourceType;>;" };
  return &_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum;
}

@end

void OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *new_OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum *self = [OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum alloc];
  OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataItem_SourceTypeEnum)
