//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/view/data/StatPanelSettings.java
//

#ifndef _OrgGeogebraCommonGuiViewDataStatPanelSettings_H_
#define _OrgGeogebraCommonGuiViewDataStatPanelSettings_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/gui/view/data/PlotSettings.h"

@class OrgGeogebraCommonGuiViewDataDataSource;
@class OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum;

#define OrgGeogebraCommonGuiViewDataStatPanelSettings_TYPE_COUNT 0
#define OrgGeogebraCommonGuiViewDataStatPanelSettings_TYPE_RELATIVE 1
#define OrgGeogebraCommonGuiViewDataStatPanelSettings_TYPE_NORMALIZED 2

@interface OrgGeogebraCommonGuiViewDataStatPanelSettings : OrgGeogebraCommonGuiViewDataPlotSettings {
 @public
  OrgGeogebraCommonGuiViewDataDataSource *dataSource_;
}

#pragma mark Public

- (instancetype)init;

- (jdouble)getBarWidth;

- (jdouble)getClassStart;

- (jdouble)getClassWidth;

- (OrgGeogebraCommonGuiViewDataDataSource *)getDataSource;

- (jint)getFrequencyType;

- (jint)getNumClasses;

- (jint)getStemAdjust;

- (OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum *)groupType;

- (jboolean)isAutomaticBarWidth;

- (jboolean)isAutomaticWindow;

- (jboolean)isCumulative;

- (jboolean)isHasOverlayNormal;

- (jboolean)isHasOverlayPolygon;

- (jboolean)isLeftRule;

- (jboolean)isNumericData;

- (jboolean)isPointList;

- (jboolean)isShowFrequencyTable;

- (jboolean)isShowHistogram;

- (jboolean)isShowOutliers;

- (jboolean)isShowScatterplotLine;

- (jboolean)isUseManualClasses;

- (void)setAutomaticBarWidthWithBoolean:(jboolean)isAutomaticBarWidth;

- (void)setAutomaticWindowWithBoolean:(jboolean)isAutomaticWindow;

- (void)setBarWidthWithDouble:(jdouble)barWidth;

- (void)setClassStartWithDouble:(jdouble)classStart;

- (void)setClassWidthWithDouble:(jdouble)classWidth;

- (void)setCumulativeWithBoolean:(jboolean)isCumulative;

- (void)setDataSourceWithOrgGeogebraCommonGuiViewDataDataSource:(OrgGeogebraCommonGuiViewDataDataSource *)dataSource;

- (void)setFrequencyTypeWithInt:(jint)frequencyType;

- (void)setHasOverlayNormalWithBoolean:(jboolean)hasOverlayNormal;

- (void)setHasOverlayPolygonWithBoolean:(jboolean)hasOverlayPolygon;

- (void)setLeftRuleWithBoolean:(jboolean)isLeftRule;

- (void)setNumClassesWithInt:(jint)numClasses;

- (void)setShowFrequencyTableWithBoolean:(jboolean)showFrequencyTable;

- (void)setShowHistogramWithBoolean:(jboolean)showHistogram;

- (void)setShowOutliersWithBoolean:(jboolean)showOutliers;

- (void)setShowScatterplotLineWithBoolean:(jboolean)showScatterplotLine;

- (void)setStemAdjustWithInt:(jint)stemAdjust;

- (void)setUseManualClassesWithBoolean:(jboolean)useManualClasses;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiViewDataStatPanelSettings)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataStatPanelSettings, dataSource_, OrgGeogebraCommonGuiViewDataDataSource *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiViewDataStatPanelSettings, TYPE_COUNT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiViewDataStatPanelSettings, TYPE_RELATIVE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiViewDataStatPanelSettings, TYPE_NORMALIZED, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonGuiViewDataStatPanelSettings_init(OrgGeogebraCommonGuiViewDataStatPanelSettings *self);

FOUNDATION_EXPORT OrgGeogebraCommonGuiViewDataStatPanelSettings *new_OrgGeogebraCommonGuiViewDataStatPanelSettings_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiViewDataStatPanelSettings)

#endif // _OrgGeogebraCommonGuiViewDataStatPanelSettings_H_
