//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/view/data/DataAnalysisModel.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/gui/view/data/DataAnalysisController.h"
#include "org/geogebra/common/gui/view/data/DataAnalysisModel.h"
#include "org/geogebra/common/gui/view/data/DataSource.h"
#include "org/geogebra/common/gui/view/data/DataVariable.h"
#include "org/geogebra/common/gui/view/data/StatGeo.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/DialogManager.h"
#include "org/geogebra/common/main/GuiManagerInterface.h"
#include "org/geogebra/common/util/debug/Log.h"

#define OrgGeogebraCommonGuiViewDataDataAnalysisModel_serialVersionUID 1LL

@interface OrgGeogebraCommonGuiViewDataDataAnalysisModel () {
 @public
  OrgGeogebraCommonMainApp *app_;
  OrgGeogebraCommonKernelKernel *kernel_;
  OrgGeogebraCommonGuiViewDataStatGeo *statGeo_;
  jint mode_;
  jboolean showDataPanel__;
  jboolean showStatPanel__;
  jboolean showDataDisplayPanel2__;
  jboolean isIniting__;
  jint printDecimals_, printFigures_;
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *regressionMode_;
  jint regressionOrder_;
  jint defaultDividerSize_;
  OrgGeogebraCommonGuiViewDataDataAnalysisController *ctrl_;
  id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener> listener_;
}

- (void)updateRounding;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel, app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel, kernel_, OrgGeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel, statGeo_, OrgGeogebraCommonGuiViewDataStatGeo *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel, regressionMode_, OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel, ctrl_, OrgGeogebraCommonGuiViewDataDataAnalysisController *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel, listener_, id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataDataAnalysisModel_updateRounding(OrgGeogebraCommonGuiViewDataDataAnalysisModel *self);

@interface OrgGeogebraCommonGuiViewDataDataAnalysisModel_ICreateColor : NSObject
@end

@interface OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener : NSObject
@end

@interface OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum () {
 @public
  NSString *label_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum, label_, NSString *)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *self, NSString *s, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(NSString *s, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 : NSObject < JavaLangRunnable > {
 @public
  OrgGeogebraCommonGuiViewDataDataAnalysisModel *this$0_;
}

- (void)run;

- (instancetype)initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel:(OrgGeogebraCommonGuiViewDataDataAnalysisModel *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1, this$0_, OrgGeogebraCommonGuiViewDataDataAnalysisModel *)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_(OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 *self, OrgGeogebraCommonGuiViewDataDataAnalysisModel *outer$);

__attribute__((unused)) static OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 *new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_(OrgGeogebraCommonGuiViewDataDataAnalysisModel *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1)

NSString *OrgGeogebraCommonGuiViewDataDataAnalysisModel_MainCard_ = @"Card with main panel";
NSString *OrgGeogebraCommonGuiViewDataDataAnalysisModel_SourceCard_ = @"Card with data type options";

@implementation OrgGeogebraCommonGuiViewDataDataAnalysisModel

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                         withInt:(jint)mode
withOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener:(id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>)listener
withOrgGeogebraCommonGuiViewDataDataAnalysisController:(OrgGeogebraCommonGuiViewDataDataAnalysisController *)ctrl {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_initWithOrgGeogebraCommonMainApp_withInt_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener_withOrgGeogebraCommonGuiViewDataDataAnalysisController_(self, app, mode, listener, ctrl);
  return self;
}

- (void)setViewWithOrgGeogebraCommonGuiViewDataDataSource:(OrgGeogebraCommonGuiViewDataDataSource *)dataSource
                                                  withInt:(jint)mode
                                              withBoolean:(jboolean)forceModeUpdate {
  [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) setDataSourceWithOrgGeogebraCommonGuiViewDataDataSource:dataSource];
  if (dataSource == nil) {
    [ctrl_ setValidDataWithBoolean:NO];
  }
  else {
    [ctrl_ setValidDataWithBoolean:YES];
  }
  if (mode == OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_ONEVAR) {
    if (showDataPanel__ == YES && [((OrgGeogebraCommonGuiViewDataDataSource *) nil_chk(dataSource)) getGroupType] != OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_RAWDATA()) {
      [self setShowDataPanelWithBoolean:NO];
    }
  }
  if ([self getMode] != mode || forceModeUpdate) {
    [self setModeWithInt:mode];
    [ctrl_ updateDataLists];
    [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) onModeChange];
    [ctrl_ updateDataAnalysisView];
  }
  else {
    [ctrl_ updateDataAnalysisView];
  }
  [ctrl_ setLeftToRightWithBoolean:YES];
}

- (void)setDataPlotPanels {
  switch ([self getMode]) {
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_ONEVAR:
    if (![self isNumericData]) {
      [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) setPlotPanelOVNotNumericWithInt:[self getMode]];
    }
    else if ([self groupType] == OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_RAWDATA()) {
      [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) setPlotPanelOVRawDataWithInt:[self getMode]];
    }
    else if ([self groupType] == OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_FREQUENCY()) {
      [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) setPlotPanelOVFrequencyWithInt:[self getMode]];
    }
    else if ([self groupType] == OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum_get_CLASS()) {
      [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) setPlotPanelOVClassWithInt:[self getMode]];
    }
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_REGRESSION:
    [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) setPlotPanelRegressionWithInt:[self getMode]];
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_MULTIVAR:
    [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) setPlotPanelMultiVarWithInt:[self getMode]];
    showDataDisplayPanel2__ = NO;
    break;
  }
}

- (OrgGeogebraCommonGuiViewDataDataAnalysisController *)getDaCtrl {
  return ctrl_;
}

- (OrgGeogebraCommonGuiViewDataDataSource *)getDataSource {
  return [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) getDataSource];
}

- (void)setDataSourceWithOrgGeogebraCommonGuiViewDataDataSource:(OrgGeogebraCommonGuiViewDataDataSource *)dataSource {
  [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) setDataSourceWithOrgGeogebraCommonGuiViewDataDataSource:dataSource];
}

- (OrgGeogebraCommonGuiViewDataDataVariable_GroupTypeEnum *)groupType {
  return [((OrgGeogebraCommonGuiViewDataDataSource *) nil_chk([((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) getDataSource])) getGroupType];
}

- (jboolean)showDataDisplayPanel2 {
  return showDataDisplayPanel2__;
}

- (jboolean)showDataPanel {
  return showDataPanel__;
}

- (void)setShowDataPanelWithBoolean:(jboolean)isVisible {
  if (showDataPanel__ == isVisible) {
    return;
  }
  showDataPanel__ = isVisible;
  [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) updateStatDataPanelVisibility];
}

- (void)setShowStatisticsWithBoolean:(jboolean)isVisible {
  if (showStatPanel__ == isVisible) {
    return;
  }
  showStatPanel__ = isVisible;
  [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) updateStatDataPanelVisibility];
}

- (jboolean)showStatPanel {
  return showStatPanel__;
}

- (OrgGeogebraCommonGuiViewDataDataAnalysisController *)getController {
  return ctrl_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getRegressionModel {
  return [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) getRegressionModel];
}

- (OrgGeogebraCommonGuiViewDataStatGeo *)getStatGeo {
  if (statGeo_ == nil) statGeo_ = new_OrgGeogebraCommonGuiViewDataStatGeo_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_ICreateColor_(app_, [self getListener]);
  return statGeo_;
}

- (jint)getRegressionOrder {
  return regressionOrder_;
}

- (void)setRegressionModeWithInt:(jint)regressionMode {
  {
    IOSObjectArray *a__ = OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_values();
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *l = *b__++;
      if ([((OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *) nil_chk(l)) ordinal] == regressionMode) {
        self->regressionMode_ = l;
        [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) setRegressionGeo];
        [ctrl_ updateAllPanelsWithBoolean:YES];
        return;
      }
    }
  }
  OrgGeogebraCommonUtilDebugLog_warnWithNSString_(@"no mode set in setRegressionMode()");
  self->regressionMode_ = OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_get_NONE();
}

- (OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *)getRegressionMode {
  return regressionMode_;
}

- (void)setRegressionOrderWithInt:(jint)regressionOrder {
  self->regressionOrder_ = regressionOrder;
}

- (OrgGeogebraCommonMainApp *)getApp {
  return app_;
}

- (jint)getMode {
  return mode_;
}

- (void)setShowDataOptionsDialogWithBoolean:(jboolean)showDialog {
  [((OrgGeogebraCommonMainDialogManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getDialogManager])) showDataSourceDialogWithInt:[self getMode] withBoolean:NO];
}

- (jboolean)isNumericData {
  if ([((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) getDataSource] == nil) {
    return NO;
  }
  return [((OrgGeogebraCommonGuiViewDataDataSource *) nil_chk([ctrl_ getDataSource])) isNumericData];
}

- (void)setShowComboPanel2WithBoolean:(jboolean)showComboPanel2 {
  self->showDataDisplayPanel2__ = showComboPanel2;
  [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) showComboPanel2WithBoolean:showComboPanel2];
}

- (NSString *)formatWithDouble:(jdouble)x {
  OrgGeogebraCommonKernelStringTemplate *highPrecision;
  if (printDecimals_ >= 0) {
    jint d = printDecimals_ < 4 ? 4 : printDecimals_;
    highPrecision = OrgGeogebraCommonKernelStringTemplate_printDecimalsWithOrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_withInt_withBoolean_(OrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_GEOGEBRA(), d, NO);
  }
  else {
    highPrecision = OrgGeogebraCommonKernelStringTemplate_printFiguresWithOrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_withInt_withBoolean_(OrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_GEOGEBRA(), printFigures_, NO);
  }
  NSString *result = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:x withOrgGeogebraCommonKernelStringTemplate:highPrecision];
  return result;
}

- (void)updateRounding {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_updateRounding(self);
}

- (jint)getPrintDecimals {
  return printDecimals_;
}

- (jint)getPrintFigures {
  return printFigures_;
}

- (void)removeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) handleRemovedDataGeoWithOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)updateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_updateRounding(self);
  if (![self isIniting] && [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) isInDataSourceWithOrgGeogebraCommonKernelGeosGeoElement:geo]) {
    [((id<OrgGeogebraCommonMainGuiManagerInterface>) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getGuiManager])) invokeLaterWithJavaLangRunnable:new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_(self)];
  }
}

- (IOSObjectArray *)getDataTitles {
  return [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl_)) getDataTitles];
}

- (void)updateSelection {
}

- (jboolean)isIniting {
  return isIniting__;
}

- (void)setInitingWithBoolean:(jboolean)isIniting {
  self->isIniting__ = isIniting;
}

- (jboolean)isMultiVar {
  return [self getMode] == OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_MULTIVAR;
}

- (jboolean)isRegressionMode {
  return [self getMode] == OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_REGRESSION;
}

- (void)updateGUI {
  [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) updateGUI];
}

- (id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>)getListener {
  return listener_;
}

- (void)setListenerWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener:(id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>)listener {
  self->listener_ = listener;
}

- (void)setModeWithInt:(jint)mode {
  self->mode_ = mode;
}

- (NSString *)modeString {
  NSString *str = @"[DAMODE] ";
  switch (mode_) {
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_ONEVAR:
    str = JreStrcat("$$", str, @"ONEVAR");
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_REGRESSION:
    str = JreStrcat("$$", str, @"TWOVAR - REGRESSION");
    break;
    case OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_MULTIVAR:
    str = JreStrcat("$$", str, @"MULTIVAR");
    break;
  }
  return str;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:withInt:withOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener:withOrgGeogebraCommonGuiViewDataDataAnalysisController:", "DataAnalysisModel", NULL, 0x1, NULL, NULL },
    { "setViewWithOrgGeogebraCommonGuiViewDataDataSource:withInt:withBoolean:", "setView", "V", 0x1, NULL, NULL },
    { "setDataPlotPanels", NULL, "V", 0x1, NULL, NULL },
    { "getDaCtrl", NULL, "Lorg.geogebra.common.gui.view.data.DataAnalysisController;", 0x1, NULL, NULL },
    { "getDataSource", NULL, "Lorg.geogebra.common.gui.view.data.DataSource;", 0x1, NULL, NULL },
    { "setDataSourceWithOrgGeogebraCommonGuiViewDataDataSource:", "setDataSource", "V", 0x1, NULL, NULL },
    { "groupType", NULL, "Lorg.geogebra.common.gui.view.data.DataVariable$GroupType;", 0x1, NULL, NULL },
    { "showDataDisplayPanel2", NULL, "Z", 0x1, NULL, NULL },
    { "showDataPanel", NULL, "Z", 0x1, NULL, NULL },
    { "setShowDataPanelWithBoolean:", "setShowDataPanel", "V", 0x1, NULL, NULL },
    { "setShowStatisticsWithBoolean:", "setShowStatistics", "V", 0x1, NULL, NULL },
    { "showStatPanel", NULL, "Z", 0x1, NULL, NULL },
    { "getController", NULL, "Lorg.geogebra.common.gui.view.data.DataAnalysisController;", 0x1, NULL, NULL },
    { "getRegressionModel", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getStatGeo", NULL, "Lorg.geogebra.common.gui.view.data.StatGeo;", 0x1, NULL, NULL },
    { "getRegressionOrder", NULL, "I", 0x1, NULL, NULL },
    { "setRegressionModeWithInt:", "setRegressionMode", "V", 0x1, NULL, NULL },
    { "getRegressionMode", NULL, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", 0x1, NULL, NULL },
    { "setRegressionOrderWithInt:", "setRegressionOrder", "V", 0x1, NULL, NULL },
    { "getApp", NULL, "Lorg.geogebra.common.main.App;", 0x1, NULL, NULL },
    { "getMode", NULL, "I", 0x1, NULL, NULL },
    { "setShowDataOptionsDialogWithBoolean:", "setShowDataOptionsDialog", "V", 0x1, NULL, NULL },
    { "isNumericData", NULL, "Z", 0x1, NULL, NULL },
    { "setShowComboPanel2WithBoolean:", "setShowComboPanel2", "V", 0x1, NULL, NULL },
    { "formatWithDouble:", "format", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "updateRounding", NULL, "V", 0x2, NULL, NULL },
    { "getPrintDecimals", NULL, "I", 0x1, NULL, NULL },
    { "getPrintFigures", NULL, "I", 0x1, NULL, NULL },
    { "removeWithOrgGeogebraCommonKernelGeosGeoElement:", "remove", "V", 0x1, NULL, NULL },
    { "updateWithOrgGeogebraCommonKernelGeosGeoElement:", "update", "V", 0x1, NULL, NULL },
    { "getDataTitles", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "updateSelection", NULL, "V", 0x1, NULL, NULL },
    { "isIniting", NULL, "Z", 0x1, NULL, NULL },
    { "setInitingWithBoolean:", "setIniting", "V", 0x1, NULL, NULL },
    { "isMultiVar", NULL, "Z", 0x1, NULL, NULL },
    { "isRegressionMode", NULL, "Z", 0x1, NULL, NULL },
    { "updateGUI", NULL, "V", 0x1, NULL, NULL },
    { "getListener", NULL, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$IDataAnalysisListener;", 0x1, NULL, NULL },
    { "setListenerWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener:", "setListener", "V", 0x1, NULL, NULL },
    { "setModeWithInt:", "setMode", "V", 0x1, NULL, NULL },
    { "modeString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonGuiViewDataDataAnalysisModel_serialVersionUID },
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "statGeo_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.StatGeo;", NULL, NULL,  },
    { "MODE_ONEVAR_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_ONEVAR },
    { "MODE_REGRESSION_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_REGRESSION },
    { "MODE_MULTIVAR_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_MODE_MULTIVAR },
    { "mode_", NULL, 0x2, "I", NULL, NULL,  },
    { "TABLE_GRID_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_TABLE_GRID_COLOR_IDX },
    { "TABLE_HEADER_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_TABLE_HEADER_COLOR_IDX },
    { "HISTOGRAM_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_HISTOGRAM_COLOR_IDX },
    { "BOXPLOT_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_BOXPLOT_COLOR_IDX },
    { "BARCHART_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_BARCHART_COLOR_IDX },
    { "DOTPLOT_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_DOTPLOT_COLOR_IDX },
    { "NQPLOT_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_NQPLOT_COLOR_IDX },
    { "REGRESSION_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_REGRESSION_COLOR_IDX },
    { "OVERLAY_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_OVERLAY_COLOR_IDX },
    { "BLACK_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_BLACK_COLOR_IDX },
    { "WHITE_COLOR_IDX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_WHITE_COLOR_IDX },
    { "showDataPanel__", "showDataPanel", 0x2, "Z", NULL, NULL,  },
    { "showStatPanel__", "showStatPanel", 0x2, "Z", NULL, NULL,  },
    { "showDataDisplayPanel2__", "showDataDisplayPanel2", 0x2, "Z", NULL, NULL,  },
    { "isIniting__", "isIniting", 0x2, "Z", NULL, NULL,  },
    { "opacityBarChart_", NULL, 0x19, "F", NULL, NULL, .constantValue.asFloat = OrgGeogebraCommonGuiViewDataDataAnalysisModel_opacityBarChart },
    { "thicknessCurve_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_thicknessCurve },
    { "thicknessBarChart_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiViewDataDataAnalysisModel_thicknessBarChart },
    { "printDecimals_", NULL, 0x2, "I", NULL, NULL,  },
    { "printFigures_", NULL, 0x2, "I", NULL, NULL,  },
    { "regressionMode_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", NULL, NULL,  },
    { "regressionOrder_", NULL, 0x2, "I", NULL, NULL,  },
    { "defaultDividerSize_", NULL, 0x2, "I", NULL, NULL,  },
    { "ctrl_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataAnalysisController;", NULL, NULL,  },
    { "MainCard_", NULL, 0x18, "Ljava.lang.String;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_MainCard_, NULL,  },
    { "SourceCard_", NULL, 0x18, "Ljava.lang.String;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_SourceCard_, NULL,  },
    { "listener_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$IDataAnalysisListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.view.data.DataAnalysisModel$IDataAnalysisListener;", "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$ICreateColor;", "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataAnalysisModel = { 2, "DataAnalysisModel", "org.geogebra.common.gui.view.data", NULL, 0x1, 41, methods, 35, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataDataAnalysisModel;
}

@end

void OrgGeogebraCommonGuiViewDataDataAnalysisModel_initWithOrgGeogebraCommonMainApp_withInt_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener_withOrgGeogebraCommonGuiViewDataDataAnalysisController_(OrgGeogebraCommonGuiViewDataDataAnalysisModel *self, OrgGeogebraCommonMainApp *app, jint mode, id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener> listener, OrgGeogebraCommonGuiViewDataDataAnalysisController *ctrl) {
  (void) NSObject_init(self);
  self->mode_ = -1;
  self->showDataPanel__ = NO;
  self->showStatPanel__ = NO;
  self->showDataDisplayPanel2__ = NO;
  self->isIniting__ = YES;
  self->printDecimals_ = 4;
  self->printFigures_ = -1;
  self->regressionMode_ = OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_get_NONE();
  self->regressionOrder_ = 2;
  [self setInitingWithBoolean:YES];
  self->app_ = app;
  self->kernel_ = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel];
  [self setListenerWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener:listener];
  self->ctrl_ = ctrl;
  [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(ctrl)) setModelWithOrgGeogebraCommonGuiViewDataDataAnalysisModel:self];
  [self setInitingWithBoolean:NO];
}

OrgGeogebraCommonGuiViewDataDataAnalysisModel *new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_initWithOrgGeogebraCommonMainApp_withInt_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener_withOrgGeogebraCommonGuiViewDataDataAnalysisController_(OrgGeogebraCommonMainApp *app, jint mode, id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener> listener, OrgGeogebraCommonGuiViewDataDataAnalysisController *ctrl) {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel *self = [OrgGeogebraCommonGuiViewDataDataAnalysisModel alloc];
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_initWithOrgGeogebraCommonMainApp_withInt_withOrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener_withOrgGeogebraCommonGuiViewDataDataAnalysisController_(self, app, mode, listener, ctrl);
  return self;
}

void OrgGeogebraCommonGuiViewDataDataAnalysisModel_updateRounding(OrgGeogebraCommonGuiViewDataDataAnalysisModel *self) {
  if (((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_))->useSignificantFigures_) {
    if (self->printFigures_ != [self->kernel_ getPrintFigures]) {
      self->printFigures_ = [self->kernel_ getPrintFigures];
      self->printDecimals_ = -1;
      [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) updateGUI];
    }
  }
  else if (self->printDecimals_ != [self->kernel_ getPrintDecimals]) {
    self->printDecimals_ = [self->kernel_ getPrintDecimals];
    [((id<OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener>) nil_chk([self getListener])) updateGUI];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataAnalysisModel)

@implementation OrgGeogebraCommonGuiViewDataDataAnalysisModel_ICreateColor

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createColorWithInt:", "createColor", "Lorg.geogebra.common.awt.GColor;", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataAnalysisModel_ICreateColor = { 2, "ICreateColor", "org.geogebra.common.gui.view.data", "DataAnalysisModel", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataDataAnalysisModel_ICreateColor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataAnalysisModel_ICreateColor)

@implementation OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onModeChange", NULL, "V", 0x401, NULL, NULL },
    { "setPlotPanelOVNotNumericWithInt:", "setPlotPanelOVNotNumeric", "V", 0x401, NULL, NULL },
    { "setPlotPanelOVRawDataWithInt:", "setPlotPanelOVRawData", "V", 0x401, NULL, NULL },
    { "setPlotPanelOVFrequencyWithInt:", "setPlotPanelOVFrequency", "V", 0x401, NULL, NULL },
    { "setPlotPanelOVClassWithInt:", "setPlotPanelOVClass", "V", 0x401, NULL, NULL },
    { "setPlotPanelRegressionWithInt:", "setPlotPanelRegression", "V", 0x401, NULL, NULL },
    { "setPlotPanelMultiVarWithInt:", "setPlotPanelMultiVar", "V", 0x401, NULL, NULL },
    { "loadDataTableWithJavaUtilArrayList:", "loadDataTable", "V", 0x401, NULL, NULL },
    { "updateStatDataPanelVisibility", NULL, "V", 0x401, NULL, NULL },
    { "getController", NULL, "Lorg.geogebra.common.gui.view.data.DataAnalysisController;", 0x401, NULL, NULL },
    { "showComboPanel2WithBoolean:", "showComboPanel2", "V", 0x401, NULL, NULL },
    { "updateGUI", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener = { 2, "IDataAnalysisListener", "org.geogebra.common.gui.view.data", "DataAnalysisModel", 0x609, 12, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataAnalysisModel_IDataAnalysisListener)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum)

OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_values_[9];

@implementation OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum

- (instancetype)initWithNSString:(NSString *)s
                    withNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(self, s, __name, __ordinal);
  return self;
}

- (NSString *)getLabel {
  return label_;
}

IOSObjectArray *OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_values() {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_values_ count:9 type:OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_values();
}

+ (OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initialize();
  for (int i = 0; i < 9; i++) {
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *e = OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum class]) {
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_NONE = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"None", @"NONE", 0);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_LINEAR = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Linear", @"LINEAR", 1);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_LOG = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Log", @"LOG", 2);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_POLY = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Polynomial", @"POLY", 3);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_POW = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Power", @"POW", 4);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_EXP = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Exponential", @"EXP", 5);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_GROWTH = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Growth", @"GROWTH", 6);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_SIN = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Sin", @"SIN", 7);
    OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_LOGISTIC = new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(@"Logistic", @"LOGISTIC", 8);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getLabel", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "NONE", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_NONE, NULL,  },
    { "LINEAR", "LINEAR", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_LINEAR, NULL,  },
    { "LOG", "LOG", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_LOG, NULL,  },
    { "POLY", "POLY", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_POLY, NULL,  },
    { "POW", "POW", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_POW, NULL,  },
    { "EXP", "EXP", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_EXP, NULL,  },
    { "GROWTH", "GROWTH", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_GROWTH, NULL,  },
    { "SIN", "SIN", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_SIN, NULL,  },
    { "LOGISTIC", "LOGISTIC", 0x4019, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;", &OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_LOGISTIC, NULL,  },
    { "label_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.gui.view.data.DataAnalysisModel$Regression;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum = { 2, "Regression", "org.geogebra.common.gui.view.data", "DataAnalysisModel", 0x4019, 1, methods, 10, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/gui/view/data/DataAnalysisModel$Regression;>;" };
  return &_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum;
}

@end

void OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *self, NSString *s, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->label_ = s;
}

OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(NSString *s, NSString *__name, jint __ordinal) {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum *self = [OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum alloc];
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum_initWithNSString_withNSString_withInt_(self, s, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataAnalysisModel_RegressionEnum)

@implementation OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1

- (void)run {
  [((OrgGeogebraCommonGuiViewDataDataAnalysisController *) nil_chk(this$0_->ctrl_)) updateDataAnalysisView];
}

- (instancetype)initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel:(OrgGeogebraCommonGuiViewDataDataAnalysisModel *)outer$ {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.gui.view.data.DataAnalysisModel;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonGuiViewDataDataAnalysisModel", "updateWithOrgGeogebraCommonKernelGeosGeoElement:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 = { 2, "", "org.geogebra.common.gui.view.data", "DataAnalysisModel", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1;
}

@end

void OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_(OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 *self, OrgGeogebraCommonGuiViewDataDataAnalysisModel *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 *new_OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_(OrgGeogebraCommonGuiViewDataDataAnalysisModel *outer$) {
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 *self = [OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1 alloc];
  OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1_initWithOrgGeogebraCommonGuiViewDataDataAnalysisModel_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataDataAnalysisModel_$1)
