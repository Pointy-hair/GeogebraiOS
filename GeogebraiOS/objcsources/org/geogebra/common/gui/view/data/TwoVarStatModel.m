//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/view/data/TwoVarStatModel.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "org/apache/commons/math/stat/StatUtils.h"
#include "org/apache/commons/math/stat/descriptive/SummaryStatistics.h"
#include "org/geogebra/common/gui/view/data/TwoVarStatModel.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonGuiViewDataTwoVarStatModel () {
 @public
  IOSObjectArray *selectedDataIndex_;
  jboolean isPairedData_;
  jdouble mean1_, mean2_, sd1_, sd2_, sdDifference_, meanDifference_;
  jlong n1_, n2_;
  id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener> listener_;
}

- (void)updateStat;

- (void)updateDifferences;

- (jboolean)evaluatePairedDifferences;

- (jboolean)evaluateSampleData;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataTwoVarStatModel, selectedDataIndex_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewDataTwoVarStatModel, listener_, id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateStat(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self);

__attribute__((unused)) static void OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateDifferences(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluatePairedDifferences(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluateSampleData(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self);

@interface OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener : NSObject
@end

@implementation OrgGeogebraCommonGuiViewDataTwoVarStatModel

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                     withBoolean:(jboolean)isPairedData
withOrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener:(id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>)listener {
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_initWithOrgGeogebraCommonMainApp_withBoolean_withOrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener_(self, app, isPairedData, listener);
  return self;
}

- (void)setPairedDataWithBoolean:(jboolean)isPairedData {
  self->isPairedData_ = isPairedData;
}

- (IOSObjectArray *)getRowNames {
  return nil;
}

- (IOSObjectArray *)getColumnNames {
  IOSObjectArray *names = [IOSObjectArray arrayWithObjects:(id[]){ @" ", [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getMenuWithNSString:@"Mean"], [app_ getMenuWithNSString:@"SampleStandardDeviation.short"], [app_ getMenuWithNSString:@"Length.short"] } count:4 type:NSString_class_()];
  return names;
}

- (jint)getRowCount {
  if (isPairedData_) {
    return 3;
  }
  return 2;
}

- (jint)getColumnCount {
  return ((IOSObjectArray *) nil_chk([self getColumnNames]))->size_;
}

- (IOSObjectArray *)getSelectedDataIndex {
  return selectedDataIndex_;
}

- (void)setSelectedDataIndexWithJavaLangIntegerArray:(IOSObjectArray *)selectedDataIndex {
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_set_selectedDataIndex_(self, selectedDataIndex);
}

- (void)update {
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateStat(self);
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateDifferences(self);
}

- (void)updateStat {
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateStat(self);
}

- (void)updateDifferences {
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateDifferences(self);
}

- (jint)getSelectedDataIndex0 {
  return [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(selectedDataIndex_), 0))) intValue];
}

- (jint)getSelectedDataIndex1 {
  return [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(selectedDataIndex_), 1))) intValue];
}

- (jboolean)evaluatePairedDifferences {
  return OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluatePairedDifferences(self);
}

- (jboolean)evaluateSampleData {
  return OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluateSampleData(self);
}

- (void)setSelectedDataIndex0WithInt:(jint)idx {
  IOSObjectArray_Set(nil_chk(selectedDataIndex_), 0, JavaLangInteger_valueOfWithInt_(idx));
}

- (void)setSelectedDataIndex1WithInt:(jint)idx {
  IOSObjectArray_Set(nil_chk(selectedDataIndex_), 1, JavaLangInteger_valueOfWithInt_(idx));
}

- (void)dealloc {
  RELEASE_(app_);
  RELEASE_(selectedDataIndex_);
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:withBoolean:withOrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener:", "TwoVarStatModel", NULL, 0x1, NULL, NULL },
    { "setPairedDataWithBoolean:", "setPairedData", "V", 0x1, NULL, NULL },
    { "getRowNames", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getColumnNames", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getRowCount", NULL, "I", 0x1, NULL, NULL },
    { "getColumnCount", NULL, "I", 0x1, NULL, NULL },
    { "getSelectedDataIndex", NULL, "[Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setSelectedDataIndexWithJavaLangIntegerArray:", "setSelectedDataIndex", "V", 0x1, NULL, NULL },
    { "update", NULL, "V", 0x1, NULL, NULL },
    { "updateStat", NULL, "V", 0x2, NULL, NULL },
    { "updateDifferences", NULL, "V", 0x2, NULL, NULL },
    { "getSelectedDataIndex0", NULL, "I", 0x1, NULL, NULL },
    { "getSelectedDataIndex1", NULL, "I", 0x1, NULL, NULL },
    { "evaluatePairedDifferences", NULL, "Z", 0x2, NULL, NULL },
    { "evaluateSampleData", NULL, "Z", 0x2, NULL, NULL },
    { "setSelectedDataIndex0WithInt:", "setSelectedDataIndex0", "V", 0x1, NULL, NULL },
    { "setSelectedDataIndex1WithInt:", "setSelectedDataIndex1", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x4, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "selectedDataIndex_", NULL, 0x2, "[Ljava.lang.Integer;", NULL, NULL,  },
    { "isPairedData_", NULL, 0x2, "Z", NULL, NULL,  },
    { "mean1_", NULL, 0x2, "D", NULL, NULL,  },
    { "mean2_", NULL, 0x2, "D", NULL, NULL,  },
    { "sd1_", NULL, 0x2, "D", NULL, NULL,  },
    { "sd2_", NULL, 0x2, "D", NULL, NULL,  },
    { "sdDifference_", NULL, 0x2, "D", NULL, NULL,  },
    { "meanDifference_", NULL, 0x2, "D", NULL, NULL,  },
    { "n1_", NULL, 0x2, "J", NULL, NULL,  },
    { "n2_", NULL, 0x2, "J", NULL, NULL,  },
    { "listener_", NULL, 0x2, "Lorg.geogebra.common.gui.view.data.TwoVarStatModel$TwoVarStatListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.view.data.TwoVarStatModel$TwoVarStatListener;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataTwoVarStatModel = { 2, "TwoVarStatModel", "org.geogebra.common.gui.view.data", NULL, 0x1, 17, methods, 12, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataTwoVarStatModel;
}

@end

void OrgGeogebraCommonGuiViewDataTwoVarStatModel_initWithOrgGeogebraCommonMainApp_withBoolean_withOrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener_(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self, OrgGeogebraCommonMainApp *app, jboolean isPairedData, id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener> listener) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_setAndConsume_selectedDataIndex_(self, [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1) } count:2 type:JavaLangInteger_class_()]);
  self->isPairedData_ = NO;
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_set_app_(self, app);
  self->isPairedData_ = isPairedData;
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_set_listener_(self, listener);
}

OrgGeogebraCommonGuiViewDataTwoVarStatModel *new_OrgGeogebraCommonGuiViewDataTwoVarStatModel_initWithOrgGeogebraCommonMainApp_withBoolean_withOrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener_(OrgGeogebraCommonMainApp *app, jboolean isPairedData, id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener> listener) {
  OrgGeogebraCommonGuiViewDataTwoVarStatModel *self = [OrgGeogebraCommonGuiViewDataTwoVarStatModel alloc];
  OrgGeogebraCommonGuiViewDataTwoVarStatModel_initWithOrgGeogebraCommonMainApp_withBoolean_withOrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener_(self, app, isPairedData, listener);
  return self;
}

void OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateStat(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self) {
  jboolean ok = OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluateSampleData(self);
  if (!ok) {
    [((id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>) nil_chk(self->listener_)) clear];
    return;
  }
  [((id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>) nil_chk(self->listener_)) setValueAtWithDouble:self->mean1_ withInt:0 withInt:1];
  [self->listener_ setValueAtWithDouble:self->sd1_ withInt:0 withInt:2];
  [self->listener_ setValueAtWithDouble:self->n1_ withInt:0 withInt:3];
  [self->listener_ setValueAtWithDouble:self->mean2_ withInt:1 withInt:1];
  [self->listener_ setValueAtWithDouble:self->sd2_ withInt:1 withInt:2];
  [self->listener_ setValueAtWithDouble:self->n2_ withInt:1 withInt:3];
}

void OrgGeogebraCommonGuiViewDataTwoVarStatModel_updateDifferences(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self) {
  if (!self->isPairedData_) {
    return;
  }
  jboolean ok = OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluatePairedDifferences(self);
  if (!ok) {
    [((id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>) nil_chk(self->listener_)) clear];
    return;
  }
  [((id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>) nil_chk(self->listener_)) setValueAtWithNSString:[((OrgGeogebraCommonMainApp *) nil_chk(self->app_)) getMenuWithNSString:@"Differences"] withInt:2 withInt:0];
  [self->listener_ setValueAtWithDouble:self->meanDifference_ withInt:2 withInt:1];
  [self->listener_ setValueAtWithDouble:self->sdDifference_ withInt:2 withInt:2];
  [self->listener_ setValueAtWithDouble:self->n1_ withInt:2 withInt:3];
}

jboolean OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluatePairedDifferences(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self) {
  @try {
    OrgGeogebraCommonKernelGeosGeoList *dataCollection = [((id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>) nil_chk(self->listener_)) getDataSelected];
    OrgGeogebraCommonKernelGeosGeoList *dataList1 = (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(dataCollection)) getWithInt:[((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(self->selectedDataIndex_), 0))) intValue]], [OrgGeogebraCommonKernelGeosGeoList class]);
    IOSDoubleArray *sample1 = [self->listener_ getValueArrayWithOrgGeogebraCommonKernelGeosGeoList:dataList1];
    OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats1 = [new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init() autorelease];
    for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(sample1))->size_; i++) {
      [stats1 addValueWithDouble:IOSDoubleArray_Get(sample1, i)];
    }
    OrgGeogebraCommonKernelGeosGeoList *dataList2 = (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast([dataCollection getWithInt:[((JavaLangInteger *) nil_chk(IOSObjectArray_Get(self->selectedDataIndex_, 1))) intValue]], [OrgGeogebraCommonKernelGeosGeoList class]);
    IOSDoubleArray *sample2 = [self->listener_ getValueArrayWithOrgGeogebraCommonKernelGeosGeoList:dataList2];
    OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats2 = [new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init() autorelease];
    for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(sample2))->size_; i++) {
      [stats2 addValueWithDouble:IOSDoubleArray_Get(sample2, i)];
    }
    if ([stats1 getN] != [stats2 getN]) return NO;
    self->meanDifference_ = OrgApacheCommonsMathStatStatUtils_meanDifferenceWithDoubleArray_withDoubleArray_(sample1, sample2);
    self->sdDifference_ = JavaLangMath_sqrtWithDouble_(OrgApacheCommonsMathStatStatUtils_varianceDifferenceWithDoubleArray_withDoubleArray_withDouble_(sample1, sample2, self->meanDifference_));
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    return NO;
  }
  return YES;
}

jboolean OrgGeogebraCommonGuiViewDataTwoVarStatModel_evaluateSampleData(OrgGeogebraCommonGuiViewDataTwoVarStatModel *self) {
  @try {
    OrgGeogebraCommonKernelGeosGeoList *dataCollection = [((id<OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener>) nil_chk(self->listener_)) getDataSelected];
    OrgGeogebraCommonKernelGeosGeoList *dataList1 = (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(dataCollection)) getWithInt:[((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(self->selectedDataIndex_), 0))) intValue]], [OrgGeogebraCommonKernelGeosGeoList class]);
    IOSDoubleArray *sample1 = [self->listener_ getValueArrayWithOrgGeogebraCommonKernelGeosGeoList:dataList1];
    OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats1 = [new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init() autorelease];
    for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(sample1))->size_; i++) {
      [stats1 addValueWithDouble:IOSDoubleArray_Get(sample1, i)];
    }
    OrgGeogebraCommonKernelGeosGeoList *dataList2 = (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast([dataCollection getWithInt:[((JavaLangInteger *) nil_chk(IOSObjectArray_Get(self->selectedDataIndex_, 1))) intValue]], [OrgGeogebraCommonKernelGeosGeoList class]);
    IOSDoubleArray *sample2 = [self->listener_ getValueArrayWithOrgGeogebraCommonKernelGeosGeoList:dataList2];
    OrgApacheCommonsMathStatDescriptiveSummaryStatistics *stats2 = [new_OrgApacheCommonsMathStatDescriptiveSummaryStatistics_init() autorelease];
    for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(sample2))->size_; i++) {
      [stats2 addValueWithDouble:IOSDoubleArray_Get(sample2, i)];
    }
    self->mean1_ = [stats1 getMean];
    self->sd1_ = [stats1 getStandardDeviation];
    self->n1_ = [stats1 getN];
    self->mean2_ = [stats2 getMean];
    self->sd2_ = [stats2 getStandardDeviation];
    self->n2_ = [stats2 getN];
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    return NO;
  }
  return YES;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataTwoVarStatModel)

@implementation OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setValueAtWithNSString:withInt:withInt:", "setValueAt", "V", 0x401, NULL, NULL },
    { "setValueAtWithDouble:withInt:withInt:", "setValueAt", "V", 0x401, NULL, NULL },
    { "getDataSelected", NULL, "Lorg.geogebra.common.kernel.geos.GeoList;", 0x401, NULL, NULL },
    { "getValueArrayWithOrgGeogebraCommonKernelGeosGeoList:", "getValueArray", "[D", 0x401, NULL, NULL },
    { "clear", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener = { 2, "TwoVarStatListener", "org.geogebra.common.gui.view.data", "TwoVarStatModel", 0x609, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewDataTwoVarStatModel_TwoVarStatListener)
