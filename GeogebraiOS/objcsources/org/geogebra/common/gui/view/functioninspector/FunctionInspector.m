//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/view/functioninspector/FunctionInspector.java
//


#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/geogebra/common/gui/SetLabels.h"
#include "org/geogebra/common/gui/view/functioninspector/FunctionInspector.h"
#include "org/geogebra/common/gui/view/functioninspector/FunctionInspectorModel.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/ModeSetter.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/GeoElementSelectionListener.h"
#include "org/geogebra/common/main/SelectionManager.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector () {
 @public
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *model_;
  OrgGeogebraCommonKernelKernel *kernel_;
  jboolean isIniting_;
  jboolean isChangingValue_;
  OrgGeogebraCommonMainApp *app_;
}

- (void)createHelpPanel;

- (void)createGeoElementSlectionListener;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector, model_, OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector, kernel_, OrgGeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector, app_, OrgGeogebraCommonMainApp *)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createHelpPanel(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *self);

__attribute__((unused)) static void OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createGeoElementSlectionListener(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *self);

@interface OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 : NSObject < OrgGeogebraCommonMainGeoElementSelectionListener > {
 @public
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *this$0_;
}

- (void)geoElementSelectedWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                        withBoolean:(jboolean)addToSelection;

- (instancetype)initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector:(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1, this$0_, OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1_initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 *self, OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *outer$);

__attribute__((unused)) static OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 *new_OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1_initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1)

@implementation OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
      withOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)selectedGeo {
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelGeosGeoFunction_(self, app, selectedGeo);
  return self;
}

- (void)createGUI {
  [self createGUIElements];
  [self createHeaderPanel];
  [self createTabPanel];
}

- (void)createTabPanel {
  [self createTabPointPanel];
  [self createTabIntervalPanel];
  [self buildTabPanel];
}

- (void)buildTabPanel {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)buildHelpPanel {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)buildHeaderPanel {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)createHeaderPanel {
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createHelpPanel(self);
  [self buildHeaderPanel];
}

- (void)createHelpPanel {
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createHelpPanel(self);
}

- (void)createTabIntervalPanel {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)createTabPointPanel {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)createGUIElements {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updateIntervalTab {
  [self updateIntervalTable];
  [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) updateIntervalGeoVisiblity];
}

- (void)updatePointsTab {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)isIntervalTabSelected {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)updateGUI {
  if ([self isIntervalTabSelected]) {
    [self updateIntervalTab];
  }
  else {
    [self updatePointsTab];
  }
  [self setLabels];
}

- (void)updateTabPanels {
  if ([self isIntervalTabSelected]) {
    [self updateIntervalFields];
  }
  else {
    [self updatePointsTab];
  }
  [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) updateGeosWithBoolean:[self isIntervalTabSelected]];
  [self updateGUI];
}

- (void)updateIntervalFields {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)updateIntervalTable {
  isChangingValue_ = YES;
  [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) updateIntervalTable];
  isChangingValue_ = NO;
}

- (void)updateXYTable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)removeColumn {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setInspectorVisibleWithBoolean:(jboolean)isVisible {
  if (isVisible) {
    OrgGeogebraCommonMainApp_debugWithNSString_(@"setInspectorVisible(true)");
    [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk([self getApp])) getKernel])) attachWithOrgGeogebraCommonKernelView:self];
  }
  else {
    OrgGeogebraCommonMainApp_debugWithNSString_(@"setInspectorVisible(false)");
    [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk([self getApp])) getKernel])) detachWithOrgGeogebraCommonKernelView:self];
    [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) clearGeoList];
  }
}

- (void)updateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (![((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) isValid] || isChangingValue_ || isIniting_) {
    return;
  }
  [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) updateWithOrgGeogebraCommonKernelGeosGeoElement:geo withBoolean:![self isIntervalTabSelected]];
}

- (void)updateVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [self updateWithOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (void)addWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)removeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)renameWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)updateAuxiliaryObjectWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)repaintView {
}

- (void)clearView {
}

- (void)setModeWithInt:(jint)mode
withOrgGeogebraCommonKernelModeSetterEnum:(OrgGeogebraCommonKernelModeSetterEnum *)m {
}

- (void)createGeoElementSlectionListener {
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createGeoElementSlectionListener(self);
}

- (void)insertGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (geo == nil || ![geo isGeoFunction]) {
    return;
  }
  [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) insertGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:geo];
  [self updateTabPanels];
}

- (void)updateTestPoint {
  if (isIniting_) {
    return;
  }
  isChangingValue_ = YES;
  [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) updateTestPoint];
  isChangingValue_ = NO;
}

- (void)setStartWithDouble:(jdouble)x {
  @try {
    [((OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *) nil_chk([self getModel])) setStartWithDouble:x];
    [self updateXYTable];
    [self updateTestPoint];
  }
  @catch (JavaLangException *e1) {
    [((JavaLangException *) nil_chk(e1)) printStackTrace];
  }
}

- (void)changeStartWithDouble:(jdouble)x {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)changedNumberFormat {
  [self updateGUI];
  [self updateIntervalFields];
  [self updateTestPoint];
}

- (void)createOptionsButton {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)doCopyToSpreadsheet {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)getViewID {
  return OrgGeogebraCommonMainApp_VIEW_FUNCTION_INSPECTOR;
}

- (void)repaint {
  OrgGeogebraCommonMainApp_debugWithNSString_(@"unimplemented");
}

- (jboolean)isShowing {
  OrgGeogebraCommonMainApp_debugWithNSString_(@"unimplemented");
  return NO;
}

- (void)startBatchUpdate {
}

- (void)endBatchUpdate {
}

- (OrgGeogebraCommonMainApp *)getApp {
  return app_;
}

- (void)setAppWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  self->app_ = app;
}

- (OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *)getModel {
  return model_;
}

- (void)setModelWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel:(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel *)model {
  self->model_ = model;
}

- (OrgGeogebraCommonKernelKernel *)getKernel {
  return kernel_;
}

- (void)setKernelWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  self->kernel_ = kernel;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonKernelGeosGeoFunction:", "FunctionInspector", NULL, 0x1, NULL, NULL },
    { "createGUI", NULL, "V", 0x4, NULL, NULL },
    { "createTabPanel", NULL, "V", 0x4, NULL, NULL },
    { "buildTabPanel", NULL, "V", 0x404, NULL, NULL },
    { "buildHelpPanel", NULL, "V", 0x404, NULL, NULL },
    { "buildHeaderPanel", NULL, "V", 0x404, NULL, NULL },
    { "createHeaderPanel", NULL, "V", 0x4, NULL, NULL },
    { "createHelpPanel", NULL, "V", 0x2, NULL, NULL },
    { "createTabIntervalPanel", NULL, "V", 0x404, NULL, NULL },
    { "createTabPointPanel", NULL, "V", 0x404, NULL, NULL },
    { "createGUIElements", NULL, "V", 0x404, NULL, NULL },
    { "updateIntervalTab", NULL, "V", 0x4, NULL, NULL },
    { "updatePointsTab", NULL, "V", 0x404, NULL, NULL },
    { "isIntervalTabSelected", NULL, "Z", 0x404, NULL, NULL },
    { "updateGUI", NULL, "V", 0x1, NULL, NULL },
    { "updateTabPanels", NULL, "V", 0x1, NULL, NULL },
    { "updateIntervalFields", NULL, "V", 0x404, NULL, NULL },
    { "updateIntervalTable", NULL, "V", 0x4, NULL, NULL },
    { "updateXYTable", NULL, "V", 0x404, NULL, NULL },
    { "removeColumn", NULL, "V", 0x404, NULL, NULL },
    { "setInspectorVisibleWithBoolean:", "setInspectorVisible", "V", 0x1, NULL, NULL },
    { "updateWithOrgGeogebraCommonKernelGeosGeoElement:", "update", "V", 0x1, NULL, NULL },
    { "updateVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:", "updateVisualStyle", "V", 0x11, NULL, NULL },
    { "addWithOrgGeogebraCommonKernelGeosGeoElement:", "add", "V", 0x1, NULL, NULL },
    { "removeWithOrgGeogebraCommonKernelGeosGeoElement:", "remove", "V", 0x1, NULL, NULL },
    { "renameWithOrgGeogebraCommonKernelGeosGeoElement:", "rename", "V", 0x1, NULL, NULL },
    { "updateAuxiliaryObjectWithOrgGeogebraCommonKernelGeosGeoElement:", "updateAuxiliaryObject", "V", 0x1, NULL, NULL },
    { "repaintView", NULL, "V", 0x1, NULL, NULL },
    { "clearView", NULL, "V", 0x1, NULL, NULL },
    { "setModeWithInt:withOrgGeogebraCommonKernelModeSetterEnum:", "setMode", "V", 0x1, NULL, NULL },
    { "createGeoElementSlectionListener", NULL, "V", 0x2, NULL, NULL },
    { "insertGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:", "insertGeoElement", "V", 0x1, NULL, NULL },
    { "updateTestPoint", NULL, "V", 0x4, NULL, NULL },
    { "setStartWithDouble:", "setStart", "V", 0x4, NULL, NULL },
    { "changeStartWithDouble:", "changeStart", "V", 0x404, NULL, NULL },
    { "changedNumberFormat", NULL, "V", 0x1, NULL, NULL },
    { "createOptionsButton", NULL, "V", 0x404, NULL, NULL },
    { "doCopyToSpreadsheet", NULL, "V", 0x404, NULL, NULL },
    { "getViewID", NULL, "I", 0x1, NULL, NULL },
    { "repaint", NULL, "V", 0x1, NULL, NULL },
    { "isShowing", NULL, "Z", 0x1, NULL, NULL },
    { "startBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "endBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "getApp", NULL, "Lorg.geogebra.common.main.App;", 0x1, NULL, NULL },
    { "setAppWithOrgGeogebraCommonMainApp:", "setApp", "V", 0x1, NULL, NULL },
    { "getModel", NULL, "Lorg.geogebra.common.gui.view.functioninspector.FunctionInspectorModel;", 0x1, NULL, NULL },
    { "setModelWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel:", "setModel", "V", 0x1, NULL, NULL },
    { "getKernel", NULL, "Lorg.geogebra.common.kernel.Kernel;", 0x1, NULL, NULL },
    { "setKernelWithOrgGeogebraCommonKernelKernel:", "setKernel", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "model_", NULL, 0x2, "Lorg.geogebra.common.gui.view.functioninspector.FunctionInspectorModel;", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "isIniting_", NULL, 0x2, "Z", NULL, NULL,  },
    { "isChangingValue_", NULL, 0x2, "Z", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector = { 2, "FunctionInspector", "org.geogebra.common.gui.view.functioninspector", NULL, 0x401, 49, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector;
}

@end

void OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelGeosGeoFunction_(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *self, OrgGeogebraCommonMainApp *app, OrgGeogebraCommonKernelGeosGeoFunction *selectedGeo) {
  (void) NSObject_init(self);
  [self setAppWithOrgGeogebraCommonMainApp:app];
  [self setKernelWithOrgGeogebraCommonKernelKernel:[((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel]];
  [((OrgGeogebraCommonKernelKernel *) nil_chk([app getKernel])) attachWithOrgGeogebraCommonKernelView:self];
  [self setModelWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel:new_OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelGeosGeoFunction_withOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspectorModel_IFunctionInspectorListener_(app, selectedGeo, self)];
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createGeoElementSlectionListener(self);
  [self createGUI];
  [self insertGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:selectedGeo];
  self->isIniting_ = NO;
}

void OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createHelpPanel(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *self) {
  [self createOptionsButton];
  [self buildHelpPanel];
}

void OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_createGeoElementSlectionListener(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *self) {
  id<OrgGeogebraCommonMainGeoElementSelectionListener> sl = new_OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1_initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_(self);
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(self->app_)) getSelectionManager])) addSelectionListenerWithOrgGeogebraCommonMainGeoElementSelectionListener:sl];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector)

@implementation OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1

- (void)geoElementSelectedWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                        withBoolean:(jboolean)addToSelection {
  [this$0_ insertGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (instancetype)initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector:(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *)outer$ {
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1_initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "geoElementSelectedWithOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "geoElementSelected", "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.gui.view.functioninspector.FunctionInspector;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector", "createGeoElementSlectionListener" };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 = { 2, "", "org.geogebra.common.gui.view.functioninspector", "FunctionInspector", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1;
}

@end

void OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1_initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 *self, OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *outer$) {
  self->this$0_ = outer$;
  (void) NSObject_init(self);
}

OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 *new_OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1_initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector *outer$) {
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 *self = [OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1 alloc];
  OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1_initWithOrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewFunctioninspectorFunctionInspector_$1)
