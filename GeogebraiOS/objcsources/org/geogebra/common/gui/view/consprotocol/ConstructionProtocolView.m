//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/view/consprotocol/ConstructionProtocolView.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "org/geogebra/common/gui/SetLabels.h"
#include "org/geogebra/common/gui/view/consprotocol/ConstructionProtocolNavigation.h"
#include "org/geogebra/common/gui/view/consprotocol/ConstructionProtocolView.h"
#include "org/geogebra/common/javax/swing/GImageIcon.h"
#include "org/geogebra/common/javax/swing/SwingConstants.h"
#include "org/geogebra/common/javax/swing/table/GAbstractTableModel.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/ModeSetter.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/GuiManagerInterface.h"
#include "org/geogebra/common/util/IndexHTMLBuilder.h"

@interface OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData () {
 @public
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *this$0_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData, this$0_, OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *)

@interface OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData () {
 @public
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *this$0_;
  jint prefWidth_, minWidth_;
  jint alignment_;
  jboolean initShow_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData, this$0_, OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *)

@interface OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData () {
 @public
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *this$0_;
  id<OrgGeogebraCommonGuiSetLabels> gui_;
}

- (void)updateRowNumbersWithInt:(jint)row;

- (void)updateIndices;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData, this$0_, OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData, gui_, id<OrgGeogebraCommonGuiSetLabels>)

__attribute__((unused)) static void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateRowNumbersWithInt_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *self, jint row);

__attribute__((unused)) static void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateIndices(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *self);

@implementation OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView

- (void)updateNavigationBars {
  OrgGeogebraCommonMainApp_debugWithNSString_(@"common/ContructionProtocolView.updateNavigationBars() not implemented");
}

- (jint)getCurrentStepNumber {
  return [((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *) nil_chk(data_)) getCurrentStepNumber];
}

- (jint)getLastStepNumber {
  return [((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *) nil_chk(data_)) getLastStepNumber];
}

- (void)setConstructionStepWithInt:(jint)step {
  if (isViewAttached_) [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) detachWithOrgGeogebraCommonKernelView:data_];
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) setConstructionStepWithInt:step];
  if (isViewAttached_) [kernel_ attachWithOrgGeogebraCommonKernelView:data_];
  [self updateNavigationBars];
}

- (void)nextStep {
  if (isViewAttached_) [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) detachWithOrgGeogebraCommonKernelView:data_];
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) nextStep];
  if (isViewAttached_) [kernel_ attachWithOrgGeogebraCommonKernelView:data_];
  [self updateNavigationBars];
  [self repaint];
}

- (void)previousStep {
  if (isViewAttached_) [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) detachWithOrgGeogebraCommonKernelView:data_];
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) previousStep];
  if (isViewAttached_) [kernel_ attachWithOrgGeogebraCommonKernelView:data_];
  [self updateNavigationBars];
}

- (void)firstStep {
  if (isViewAttached_) [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) detachWithOrgGeogebraCommonKernelView:data_];
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) firstStep];
  if (isViewAttached_) [kernel_ attachWithOrgGeogebraCommonKernelView:data_];
  [self updateNavigationBars];
}

- (void)lastStep {
  if (isViewAttached_) [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) detachWithOrgGeogebraCommonKernelView:data_];
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) lastStep];
  if (isViewAttached_) [kernel_ attachWithOrgGeogebraCommonKernelView:data_];
  [self updateNavigationBars];
}

- (void)repaint {
}

- (OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *)getData {
  return data_;
}

- (void)registerNavigationBarWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolNavigation:(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolNavigation *)nb {
  if (![((JavaUtilArrayList *) nil_chk(navigationBars_)) containsWithId:nb]) {
    [navigationBars_ addWithId:nb];
    [((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *) nil_chk(data_)) attachView];
  }
}

- (void)scrollToConstructionStep {
}

- (NSString *)getConsProtocolXML {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:@"\t<consProtColumns "];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *) nil_chk(data_))->columns_))->size_; i++) {
    [sb appendWithNSString:@" col"];
    [sb appendWithInt:i];
    [sb appendWithNSString:@"=\""];
    [sb appendWithBoolean:[((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData *) nil_chk(IOSObjectArray_Get(data_->columns_, i))) isVisible]];
    [sb appendWithNSString:@"\""];
  }
  [sb appendWithNSString:@"/>\n"];
  [sb appendWithNSString:@"\t<consProtocol "];
  [sb appendWithNSString:@"useColors=\""];
  [sb appendWithBoolean:useColors_];
  [sb appendWithNSString:@"\""];
  [sb appendWithNSString:@" addIcons=\""];
  [sb appendWithBoolean:addIcons_];
  [sb appendWithNSString:@"\""];
  [sb appendWithNSString:@" showOnlyBreakpoints=\""];
  [sb appendWithBoolean:[((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getConstruction])) showOnlyBreakpoints]];
  [sb appendWithNSString:@"\""];
  [sb appendWithNSString:@"/>\n"];
  return [sb description];
}

- (instancetype)init {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(app_);
  RELEASE_(kernel_);
  RELEASE_(data_);
  RELEASE_(navigationBars_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "updateNavigationBars", NULL, "V", 0x4, NULL, NULL },
    { "getCurrentStepNumber", NULL, "I", 0x1, NULL, NULL },
    { "getLastStepNumber", NULL, "I", 0x1, NULL, NULL },
    { "setConstructionStepWithInt:", "setConstructionStep", "V", 0x1, NULL, NULL },
    { "nextStep", NULL, "V", 0x1, NULL, NULL },
    { "previousStep", NULL, "V", 0x1, NULL, NULL },
    { "firstStep", NULL, "V", 0x1, NULL, NULL },
    { "lastStep", NULL, "V", 0x1, NULL, NULL },
    { "repaint", NULL, "V", 0x4, NULL, NULL },
    { "getData", NULL, "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$ConstructionTableData;", 0x1, NULL, NULL },
    { "registerNavigationBarWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolNavigation:", "registerNavigationBar", "V", 0x1, NULL, NULL },
    { "scrollToConstructionStep", NULL, "V", 0x1, NULL, NULL },
    { "getConsProtocolXML", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x4, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "kernel_", NULL, 0x1, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "data_", NULL, 0x1, "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$ConstructionTableData;", NULL, NULL,  },
    { "isViewAttached_", NULL, 0x4, "Z", NULL, NULL,  },
    { "navigationBars_", NULL, 0x1, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/gui/view/consprotocol/ConstructionProtocolNavigation;>;",  },
    { "useColors_", NULL, 0x4, "Z", NULL, NULL,  },
    { "addIcons_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$RowData;", "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$ColumnData;", "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$ConstructionTableData;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView = { 2, "ConstructionProtocolView", "org.geogebra.common.gui.view.consprotocol", NULL, 0x1, 14, methods, 7, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView;
}

@end

void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_init(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *self) {
  NSObject_init(self);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_setAndConsume_navigationBars_(self, new_JavaUtilArrayList_init());
}

OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_init() {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *self = [OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView alloc];
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView)

@implementation OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData

- (instancetype)initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView:(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *)outer$
                                           withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonKernelGeosGeoElement_(self, outer$, geo);
  return self;
}

- (void)updateAlgebraAndName {
  if ([geo_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoText class]]) OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_algebra_(self, JreStrcat("C$C", '"', [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) toValueStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()], '"'));
  else OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_algebra_(self, [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) getAlgebraDescriptionTextOrHTMLDefaultWithOrgGeogebraCommonUtilIndexHTMLBuilder:[new_OrgGeogebraCommonUtilIndexHTMLBuilder_initWithBoolean_(YES) autorelease]]);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_name_(self, [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) getNameDescriptionTextOrHTML]);
}

- (void)updateCaption {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_caption_(self, [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) getCaptionDescriptionHTMLWithBoolean:YES withOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeo {
  return geo_;
}

- (jint)getIndex {
  return index_;
}

- (void)setIndexWithInt:(jint)i {
  index_ = i;
}

- (NSString *)getName {
  return name_;
}

- (NSString *)getDefinition {
  return definition_;
}

- (NSString *)getCommand {
  return command_;
}

- (NSString *)getAlgebra {
  return algebra_;
}

- (NSString *)getCaption {
  return caption_;
}

- (OrgGeogebraCommonJavaxSwingGImageIcon *)getToolbarIcon {
  return toolbarIcon_;
}

- (JavaLangBoolean *)getCPVisible {
  return consProtocolVisible_;
}

- (jint)getRowNumber {
  return rowNumber_;
}

- (void)setRowNumberWithInt:(jint)num {
  rowNumber_ = num;
}

- (jboolean)getIncludesIndex {
  return includesIndex_;
}

- (void)updateAll {
  jint index;
  jint prevIndex;
  index = (rowNumber_ < 0) ? -1 : [self getConstructionIndexWithInt:rowNumber_];
  prevIndex = (rowNumber_ < 1) ? -1 : [self getConstructionIndexWithInt:rowNumber_ - 1];
  jint m;
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) getParentAlgorithm] != nil) {
    m = [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk([geo_ getParentAlgorithm])) getRelatedModeID];
  }
  else m = [geo_ getRelatedModeID];
  if (m != -1 && index != prevIndex) OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_toolbarIcon_(self, [self getModeIconWithInt:m]);
  else OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_toolbarIcon_(self, nil);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_name_(self, [geo_ getNameDescriptionTextOrHTML]);
  if ([geo_ isKindOfClass:[OrgGeogebraCommonKernelGeosGeoText class]]) OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_algebra_(self, JreStrcat("C$C", '"', [geo_ toValueStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()], '"'));
  else OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_algebra_(self, [geo_ getAlgebraDescriptionTextOrHTMLDefaultWithOrgGeogebraCommonUtilIndexHTMLBuilder:[new_OrgGeogebraCommonUtilIndexHTMLBuilder_initWithBoolean_(YES) autorelease]]);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_definition_(self, [geo_ getDefinitionDescriptionHTMLWithBoolean:YES]);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_command_(self, [geo_ getCommandDescriptionHTMLWithBoolean:YES]);
  [self updateCaption];
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_setAndConsume_consProtocolVisible_(self, new_JavaLangBoolean_initWithBoolean_([geo_ isConsProtocolBreakpoint]));
  includesIndex_ = (([((NSString *) nil_chk(name_)) indexOfString:@"<sub>"] >= 0) || ([((NSString *) nil_chk(algebra_)) indexOfString:@"<sub>"] >= 0) || ([((NSString *) nil_chk(definition_)) indexOfString:@"<sub>"] >= 0) || ([((NSString *) nil_chk(command_)) indexOfString:@"<sub>"] >= 0) || ([((NSString *) nil_chk(caption_)) indexOfString:@"<sub>"] >= 0));
}

- (jint)getConstructionIndexWithInt:(jint)row {
  return [((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *) nil_chk(this$0_->data_)) getConstructionIndexWithInt:row];
}

- (OrgGeogebraCommonJavaxSwingGImageIcon *)getModeIconWithInt:(jint)mode {
  return [((OrgGeogebraCommonMainApp *) nil_chk(this$0_->app_)) wrapGetModeIconWithInt:mode];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(geo_);
  RELEASE_(toolbarIcon_);
  RELEASE_(name_);
  RELEASE_(algebra_);
  RELEASE_(definition_);
  RELEASE_(command_);
  RELEASE_(caption_);
  RELEASE_(consProtocolVisible_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView:withOrgGeogebraCommonKernelGeosGeoElement:", "RowData", NULL, 0x1, NULL, NULL },
    { "updateAlgebraAndName", NULL, "V", 0x1, NULL, NULL },
    { "updateCaption", NULL, "V", 0x1, NULL, NULL },
    { "getGeo", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getIndex", NULL, "I", 0x1, NULL, NULL },
    { "setIndexWithInt:", "setIndex", "V", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDefinition", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getCommand", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAlgebra", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getCaption", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getToolbarIcon", NULL, "Lorg.geogebra.common.javax.swing.GImageIcon;", 0x1, NULL, NULL },
    { "getCPVisible", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "getRowNumber", NULL, "I", 0x1, NULL, NULL },
    { "setRowNumberWithInt:", "setRowNumber", "V", 0x1, NULL, NULL },
    { "getIncludesIndex", NULL, "Z", 0x1, NULL, NULL },
    { "updateAll", NULL, "V", 0x1, NULL, NULL },
    { "getConstructionIndexWithInt:", "getConstructionIndex", "I", 0x4, NULL, NULL },
    { "getModeIconWithInt:", "getModeIcon", "Lorg.geogebra.common.javax.swing.GImageIcon;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView;", NULL, NULL,  },
    { "rowNumber_", NULL, 0x0, "I", NULL, NULL,  },
    { "index_", NULL, 0x0, "I", NULL, NULL,  },
    { "geo_", NULL, 0x0, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "toolbarIcon_", NULL, 0x0, "Lorg.geogebra.common.javax.swing.GImageIcon;", NULL, NULL,  },
    { "name_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "algebra_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "definition_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "command_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "caption_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "includesIndex_", NULL, 0x0, "Z", NULL, NULL,  },
    { "consProtocolVisible_", NULL, 0x0, "Ljava.lang.Boolean;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData = { 2, "RowData", "org.geogebra.common.gui.view.consprotocol", "ConstructionProtocolView", 0x1, 19, methods, 12, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData;
}

@end

void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *self, OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *outer$, OrgGeogebraCommonKernelGeosGeoElement *geo) {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_this$0_(self, outer$);
  NSObject_init(self);
  self->rowNumber_ = -1;
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_set_geo_(self, geo);
  [self updateAll];
}

OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *outer$, OrgGeogebraCommonKernelGeosGeoElement *geo) {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *self = [OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData alloc];
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonKernelGeosGeoElement_(self, outer$, geo);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData)

@implementation OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData

- (instancetype)initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView:(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *)outer$
                                                                        withNSString:(NSString *)title
                                                                             withInt:(jint)prefWidth
                                                                             withInt:(jint)minWidth
                                                                             withInt:(jint)alignment
                                                                         withBoolean:(jboolean)initShow {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(self, outer$, title, prefWidth, minWidth, alignment, initShow);
  return self;
}

- (NSString *)getTitle {
  return title_;
}

- (NSString *)getTranslatedTitle {
  return [((OrgGeogebraCommonMainApp *) nil_chk(this$0_->app_)) getPlainWithNSString:title_];
}

- (jint)getPreferredWidth {
  return prefWidth_;
}

- (jint)getMinWidth {
  return minWidth_;
}

- (jint)getAlignment {
  return alignment_;
}

- (jboolean)getInitShow {
  if ([((NSString *) nil_chk(title_)) isEqual:@"Value"] && ![((id<OrgGeogebraCommonMainGuiManagerInterface>) nil_chk(([((OrgGeogebraCommonMainApp *) nil_chk(this$0_->app_)) getGuiManager]))) showViewWithInt:OrgGeogebraCommonMainApp_VIEW_ALGEBRA]) return NO;
  return initShow_;
}

- (void)setVisibleWithBoolean:(jboolean)isVisible {
  self->isVisible__ = isVisible;
}

- (jboolean)isVisible {
  return isVisible__;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(title_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView:withNSString:withInt:withInt:withInt:withBoolean:", "ColumnData", NULL, 0x1, NULL, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTranslatedTitle", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPreferredWidth", NULL, "I", 0x1, NULL, NULL },
    { "getMinWidth", NULL, "I", 0x1, NULL, NULL },
    { "getAlignment", NULL, "I", 0x1, NULL, NULL },
    { "getInitShow", NULL, "Z", 0x1, NULL, NULL },
    { "setVisibleWithBoolean:", "setVisible", "V", 0x1, NULL, NULL },
    { "isVisible", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView;", NULL, NULL,  },
    { "title_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "isVisible__", "isVisible", 0x0, "Z", NULL, NULL,  },
    { "prefWidth_", NULL, 0x2, "I", NULL, NULL,  },
    { "minWidth_", NULL, 0x2, "I", NULL, NULL,  },
    { "alignment_", NULL, 0x2, "I", NULL, NULL,  },
    { "initShow_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData = { 2, "ColumnData", "org.geogebra.common.gui.view.consprotocol", "ConstructionProtocolView", 0x1, 9, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData;
}

@end

void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData *self, OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *outer$, NSString *title, jint prefWidth, jint minWidth, jint alignment, jboolean initShow) {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_set_this$0_(self, outer$);
  NSObject_init(self);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_set_title_(self, title);
  self->prefWidth_ = prefWidth;
  self->minWidth_ = minWidth;
  self->alignment_ = alignment;
  self->initShow_ = initShow;
  self->isVisible__ = initShow;
}

OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData *new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *outer$, NSString *title, jint prefWidth, jint minWidth, jint alignment, jboolean initShow) {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData *self = [OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData alloc];
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(self, outer$, title, prefWidth, minWidth, alignment, initShow);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData)

@implementation OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData

- (instancetype)initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView:(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *)outer$
                                                   withOrgGeogebraCommonGuiSetLabels:(id<OrgGeogebraCommonGuiSetLabels>)gui {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonGuiSetLabels_(self, outer$, gui);
  return self;
}

- (void)setLabels {
  [((id<OrgGeogebraCommonGuiSetLabels>) nil_chk(self->gui_)) setLabels];
}

- (void)startBatchUpdate {
}

- (void)endBatchUpdate {
}

- (jboolean)suggestRepaint {
  return NO;
}

- (JavaUtilArrayList *)getrowList {
  return rowList_;
}

- (id<OrgGeogebraCommonJavaxSwingTableGAbstractTableModel>)getImpl {
  OrgGeogebraCommonMainApp_debugWithNSString_(@"ConstructionTableData.getImpl() must be overriden");
  return nil;
}

- (IOSObjectArray *)getColumns {
  return columns_;
}

- (jint)getLastStepNumber {
  jint pos = [((JavaUtilArrayList *) nil_chk(rowList_)) size] - 1;
  if (pos >= 0) return [((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *) nil_chk([rowList_ getWithInt:pos])) getIndex];
  else return 0;
}

- (jint)getCurrentStepNumber {
  jint step = [((OrgGeogebraCommonKernelKernel *) nil_chk(this$0_->kernel_)) getConstructionStep];
  jint size = [((JavaUtilArrayList *) nil_chk(rowList_)) size];
  for (jint i = 0; i < size; i++) {
    OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *rd = [rowList_ getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *) nil_chk(rd)) getGeo])) getConstructionIndex] == step) {
      return [rd getIndex];
    }
  }
  return 0;
}

- (void)setConstructionStepForRowWithInt:(jint)row {
  if (row >= 0) {
    [this$0_ setConstructionStepWithInt:[self getConstructionIndexWithInt:row]];
  }
  else {
    [this$0_ setConstructionStepWithInt:-1];
  }
}

- (jint)getConstructionIndexWithInt:(jint)row {
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *) nil_chk([((JavaUtilArrayList *) nil_chk(rowList_)) getWithInt:row])) getGeo])) getConstructionIndex];
}

- (OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *)getRowWithInt:(jint)row {
  return [((JavaUtilArrayList *) nil_chk(rowList_)) getWithInt:row];
}

- (void)setModeWithInt:(jint)mode
withOrgGeogebraCommonKernelModeSetterEnum:(OrgGeogebraCommonKernelModeSetterEnum *)m {
}

- (jint)getRowCount {
  return [((JavaUtilArrayList *) nil_chk(rowList_)) size];
}

- (jint)getColumnCount {
  return columnsCount_;
}

- (jint)getRowIndexWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData:(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *)row {
  return [((JavaUtilArrayList *) nil_chk(rowList_)) indexOfWithId:row];
}

- (jint)getColumnNumberWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData:(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData *)column {
  jint pos = -1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(columns_))->size_; i++) {
    if (IOSObjectArray_Get(columns_, i) == column) {
      pos = i;
      break;
    }
  }
  return pos;
}

- (jboolean)isCellEditableWithInt:(jint)nRow
                          withInt:(jint)nCol {
  if ([((NSString *) nil_chk(([((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData *) nil_chk(IOSObjectArray_Get(nil_chk(self->columns_), nCol))) getTitle]))) isEqual:@"Caption"]) {
    return YES;
  }
  return NO;
}

- (void)addWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelSet] || [geo isGeoCasCell] || ([((OrgGeogebraCommonKernelConstruction *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(this$0_->kernel_)) getConstruction])) showOnlyBreakpoints] && ![geo isConsProtocolBreakpoint])) return;
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *row = [((JavaUtilHashMap *) nil_chk(geoMap_)) getWithId:geo];
  if (row == nil) {
    jint index = [geo getConstructionIndex];
    jint pos = 0;
    jint size = [((JavaUtilArrayList *) nil_chk(rowList_)) size];
    while (pos < size && index >= [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *) nil_chk([rowList_ getWithInt:pos])) getGeo])) getConstructionIndex]) pos++;
    row = [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonKernelGeosGeoElement_(this$0_, geo) autorelease];
    if (pos < size) {
      [rowList_ addWithInt:pos withId:row];
    }
    else {
      pos = size;
      [rowList_ addWithId:row];
    }
    [geoMap_ putWithId:geo withId:row];
    OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateRowNumbersWithInt_(self, pos);
    OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateIndices(self);
    [self fireTableRowsInsertedWithInt:pos withInt:pos];
    [self updateAll];
    [this$0_ updateNavigationBars];
  }
}

- (void)removeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *row = [((JavaUtilHashMap *) nil_chk(geoMap_)) getWithId:geo];
  if (row != nil) {
    [((JavaUtilArrayList *) nil_chk(rowList_)) removeWithId:row];
    [geoMap_ removeWithId:geo];
    OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateRowNumbersWithInt_(self, [row getRowNumber]);
    OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateIndices(self);
    [self fireTableRowsDeletedWithInt:[row getRowNumber] withInt:[row getRowNumber]];
    [self updateAll];
    [this$0_ updateNavigationBars];
  }
}

- (void)clearView {
  [((JavaUtilArrayList *) nil_chk(rowList_)) clear];
  [((JavaUtilHashMap *) nil_chk(geoMap_)) clear];
  [this$0_ updateNavigationBars];
}

- (void)repaintView {
  [this$0_ repaint];
}

- (void)renameWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [self updateAll];
}

- (void)updateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)updateVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)updateAuxiliaryObjectWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (void)reset {
}

- (jint)getViewID {
  return 0;
}

- (jboolean)hasFocus {
  return NO;
}

- (jboolean)isShowing {
  return NO;
}

- (void)updateRowNumbersWithInt:(jint)row {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateRowNumbersWithInt_(self, row);
}

- (void)updateIndices {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateIndices(self);
}

- (void)fireTableRowsDeletedWithInt:(jint)firstRow
                            withInt:(jint)lastRow {
  OrgGeogebraCommonMainApp_debugWithNSString_(@"fireTableRowsDeleted - must be overridden");
}

- (void)fireTableRowsInsertedWithInt:(jint)firstRow
                             withInt:(jint)lastRow {
  OrgGeogebraCommonMainApp_debugWithNSString_(@"fireTableRowsInserted - must be overriden");
}

- (void)initView {
  [((JavaUtilArrayList *) nil_chk(rowList_)) clear];
  [((JavaUtilHashMap *) nil_chk(geoMap_)) clear];
  [self notifyAddAllWithInt:[((OrgGeogebraCommonKernelKernel *) nil_chk(this$0_->kernel_)) getLastConstructionStep]];
}

- (void)updateAll {
  OrgGeogebraCommonMainApp_debugWithNSString_(@"updateAll - unimplemented");
}

- (void)notifyAddAllWithInt:(jint)lastConstructionStep {
  notifyUpdateCalled_ = YES;
  [this$0_->kernel_ notifyAddAllWithOrgGeogebraCommonKernelView:self withInt:[((OrgGeogebraCommonKernelKernel *) nil_chk(this$0_->kernel_)) getLastConstructionStep]];
  notifyUpdateCalled_ = NO;
  [self updateAll];
}

- (void)attachView {
  if (!this$0_->isViewAttached_) {
    [((OrgGeogebraCommonKernelKernel *) nil_chk(this$0_->kernel_)) attachWithOrgGeogebraCommonKernelView:self];
    [self initView];
    this$0_->isViewAttached_ = YES;
  }
  [this$0_ scrollToConstructionStep];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(ctData_);
  RELEASE_(columns_);
  RELEASE_(rowList_);
  RELEASE_(geoMap_);
  RELEASE_(gui_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView:withOrgGeogebraCommonGuiSetLabels:", "ConstructionTableData", NULL, 0x1, NULL, NULL },
    { "setLabels", NULL, "V", 0x1, NULL, NULL },
    { "startBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "endBatchUpdate", NULL, "V", 0x1, NULL, NULL },
    { "suggestRepaint", NULL, "Z", 0x1, NULL, NULL },
    { "getrowList", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "getImpl", NULL, "Lorg.geogebra.common.javax.swing.table.GAbstractTableModel;", 0x1, NULL, NULL },
    { "getColumns", NULL, "[Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$ColumnData;", 0x1, NULL, NULL },
    { "getLastStepNumber", NULL, "I", 0x1, NULL, NULL },
    { "getCurrentStepNumber", NULL, "I", 0x1, NULL, NULL },
    { "setConstructionStepForRowWithInt:", "setConstructionStepForRow", "V", 0x1, NULL, NULL },
    { "getConstructionIndexWithInt:", "getConstructionIndex", "I", 0x1, NULL, NULL },
    { "getRowWithInt:", "getRow", "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$RowData;", 0x1, NULL, NULL },
    { "setModeWithInt:withOrgGeogebraCommonKernelModeSetterEnum:", "setMode", "V", 0x1, NULL, NULL },
    { "getRowCount", NULL, "I", 0x1, NULL, NULL },
    { "getColumnCount", NULL, "I", 0x1, NULL, NULL },
    { "getRowIndexWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData:", "getRowIndex", "I", 0x1, NULL, NULL },
    { "getColumnNumberWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData:", "getColumnNumber", "I", 0x1, NULL, NULL },
    { "isCellEditableWithInt:withInt:", "isCellEditable", "Z", 0x1, NULL, NULL },
    { "addWithOrgGeogebraCommonKernelGeosGeoElement:", "add", "V", 0x1, NULL, NULL },
    { "removeWithOrgGeogebraCommonKernelGeosGeoElement:", "remove", "V", 0x1, NULL, NULL },
    { "clearView", NULL, "V", 0x1, NULL, NULL },
    { "repaintView", NULL, "V", 0x11, NULL, NULL },
    { "renameWithOrgGeogebraCommonKernelGeosGeoElement:", "rename", "V", 0x1, NULL, NULL },
    { "updateWithOrgGeogebraCommonKernelGeosGeoElement:", "update", "V", 0x1, NULL, NULL },
    { "updateVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:", "updateVisualStyle", "V", 0x1, NULL, NULL },
    { "updateAuxiliaryObjectWithOrgGeogebraCommonKernelGeosGeoElement:", "updateAuxiliaryObject", "V", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "getViewID", NULL, "I", 0x1, NULL, NULL },
    { "hasFocus", NULL, "Z", 0x1, NULL, NULL },
    { "isShowing", NULL, "Z", 0x1, NULL, NULL },
    { "updateRowNumbersWithInt:", "updateRowNumbers", "V", 0x2, NULL, NULL },
    { "updateIndices", NULL, "V", 0x2, NULL, NULL },
    { "fireTableRowsDeletedWithInt:withInt:", "fireTableRowsDeleted", "V", 0x4, NULL, NULL },
    { "fireTableRowsInsertedWithInt:withInt:", "fireTableRowsInserted", "V", 0x4, NULL, NULL },
    { "initView", NULL, "V", 0x1, NULL, NULL },
    { "updateAll", NULL, "V", 0x1, NULL, NULL },
    { "notifyAddAllWithInt:", "notifyAddAll", "V", 0x1, NULL, NULL },
    { "attachView", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView;", NULL, NULL,  },
    { "ctData_", NULL, 0x4, "Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$ConstructionTableData;", NULL, NULL,  },
    { "columns_", NULL, 0x11, "[Lorg.geogebra.common.gui.view.consprotocol.ConstructionProtocolView$ColumnData;", NULL, NULL,  },
    { "rowList_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/gui/view/consprotocol/ConstructionProtocolView$RowData;>;",  },
    { "geoMap_", NULL, 0x4, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Lorg/geogebra/common/kernel/geos/GeoElement;Lorg/geogebra/common/gui/view/consprotocol/ConstructionProtocolView$RowData;>;",  },
    { "columnsCount_", NULL, 0x4, "I", NULL, NULL,  },
    { "notifyUpdateCalled_", NULL, 0x4, "Z", NULL, NULL,  },
    { "gui_", NULL, 0x2, "Lorg.geogebra.common.gui.SetLabels;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData = { 2, "ConstructionTableData", "org.geogebra.common.gui.view.consprotocol", "ConstructionProtocolView", 0x1, 39, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData;
}

@end

void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonGuiSetLabels_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *self, OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *outer$, id<OrgGeogebraCommonGuiSetLabels> gui) {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_set_this$0_(self, outer$);
  NSObject_init(self);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_set_ctData_(self, self);
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_setAndConsume_columns_(self, [IOSObjectArray newArrayWithObjects:(id[]){ [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"No.", 35, 35, OrgGeogebraCommonJavaxSwingSwingConstants_RIGHT, YES) autorelease], [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"Name", 80, 50, OrgGeogebraCommonJavaxSwingSwingConstants_LEFT, YES) autorelease], [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"ToolbarIcon", 35, 35, OrgGeogebraCommonJavaxSwingSwingConstants_CENTER, NO) autorelease], [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"Definition", 150, 50, OrgGeogebraCommonJavaxSwingSwingConstants_LEFT, YES) autorelease], [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"Command", 150, 50, OrgGeogebraCommonJavaxSwingSwingConstants_LEFT, NO) autorelease], [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"Value", 150, 50, OrgGeogebraCommonJavaxSwingSwingConstants_LEFT, YES) autorelease], [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"Caption", 150, 50, OrgGeogebraCommonJavaxSwingSwingConstants_LEFT, YES) autorelease], [new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withNSString_withInt_withInt_withInt_withBoolean_(outer$, @"Breakpoint", 70, 35, OrgGeogebraCommonJavaxSwingSwingConstants_CENTER, NO) autorelease] } count:8 type:OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ColumnData_class_()]);
  self->columnsCount_ = self->columns_->size_;
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_setAndConsume_rowList_(self, new_JavaUtilArrayList_init());
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_setAndConsume_geoMap_(self, new_JavaUtilHashMap_init());
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_set_gui_(self, gui);
}

OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *new_OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonGuiSetLabels_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView *outer$, id<OrgGeogebraCommonGuiSetLabels> gui) {
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *self = [OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData alloc];
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_initWithOrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_withOrgGeogebraCommonGuiSetLabels_(self, outer$, gui);
  return self;
}

void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateRowNumbersWithInt_(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *self, jint row) {
  if (row < 0) return;
  jint size = [((JavaUtilArrayList *) nil_chk(self->rowList_)) size];
  for (jint i = row; i < size; ++i) {
    [((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *) nil_chk([self->rowList_ getWithInt:i])) setRowNumberWithInt:i];
  }
}

void OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData_updateIndices(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData *self) {
  jint size = [((JavaUtilArrayList *) nil_chk(self->rowList_)) size];
  if (size == 0) return;
  jint lastIndex = -1;
  jint count = 0;
  OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *row;
  for (jint i = 0; i < size; ++i) {
    row = [self->rowList_ getWithInt:i];
    jint newIndex = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_RowData *) nil_chk(row)) getGeo])) getConstructionIndex];
    if (lastIndex != newIndex) {
      lastIndex = newIndex;
      count++;
    }
    [row setIndexWithInt:count];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiViewConsprotocolConstructionProtocolView_ConstructionTableData)
