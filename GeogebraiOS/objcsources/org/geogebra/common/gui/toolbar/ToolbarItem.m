//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/toolbar/ToolbarItem.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/util/Vector.h"
#include "org/geogebra/common/gui/toolbar/ToolbarItem.h"

@interface OrgGeogebraCommonGuiToolbarToolbarItem () {
 @public
  JavaUtilVector *menu_;
  JavaLangInteger *mode_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiToolbarToolbarItem, menu_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiToolbarToolbarItem, mode_, JavaLangInteger *)

@implementation OrgGeogebraCommonGuiToolbarToolbarItem

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)menu {
  OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaUtilVector_(self, menu);
  return self;
}

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)mode {
  OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaLangInteger_(self, mode);
  return self;
}

- (JavaUtilVector *)getMenu {
  return menu_;
}

- (JavaLangInteger *)getMode {
  return mode_;
}

- (void)dealloc {
  RELEASE_(menu_);
  RELEASE_(mode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilVector:", "ToolbarItem", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangInteger:", "ToolbarItem", NULL, 0x1, NULL, NULL },
    { "getMenu", NULL, "Ljava.util.Vector;", 0x1, NULL, NULL },
    { "getMode", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "menu_", NULL, 0x2, "Ljava.util.Vector;", NULL, "Ljava/util/Vector<Ljava/lang/Integer;>;",  },
    { "mode_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiToolbarToolbarItem = { 2, "ToolbarItem", "org.geogebra.common.gui.toolbar", NULL, 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiToolbarToolbarItem;
}

@end

void OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaUtilVector_(OrgGeogebraCommonGuiToolbarToolbarItem *self, JavaUtilVector *menu) {
  NSObject_init(self);
  OrgGeogebraCommonGuiToolbarToolbarItem_set_menu_(self, menu);
  OrgGeogebraCommonGuiToolbarToolbarItem_set_mode_(self, nil);
}

OrgGeogebraCommonGuiToolbarToolbarItem *new_OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaUtilVector_(JavaUtilVector *menu) {
  OrgGeogebraCommonGuiToolbarToolbarItem *self = [OrgGeogebraCommonGuiToolbarToolbarItem alloc];
  OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaUtilVector_(self, menu);
  return self;
}

void OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaLangInteger_(OrgGeogebraCommonGuiToolbarToolbarItem *self, JavaLangInteger *mode) {
  NSObject_init(self);
  OrgGeogebraCommonGuiToolbarToolbarItem_set_mode_(self, mode);
}

OrgGeogebraCommonGuiToolbarToolbarItem *new_OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaLangInteger_(JavaLangInteger *mode) {
  OrgGeogebraCommonGuiToolbarToolbarItem *self = [OrgGeogebraCommonGuiToolbarToolbarItem alloc];
  OrgGeogebraCommonGuiToolbarToolbarItem_initWithJavaLangInteger_(self, mode);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiToolbarToolbarItem)
