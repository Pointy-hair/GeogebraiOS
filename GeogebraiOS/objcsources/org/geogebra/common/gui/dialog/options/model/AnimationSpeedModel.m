//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/dialog/options/model/AnimationSpeedModel.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/geogebra/common/gui/dialog/options/model/AnimationSpeedModel.h"
#include "org/geogebra/common/gui/dialog/options/model/AnimationStepModel.h"
#include "org/geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "org/geogebra/common/gui/dialog/options/model/MultipleOptionsModel.h"
#include "org/geogebra/common/gui/dialog/options/model/NumberOptionsModel.h"
#include "org/geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "org/geogebra/common/kernel/ConstructionDefaults.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel () {
 @public
  jboolean showSliders_;
  OrgGeogebraCommonKernelKernel *kernel_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel, kernel_, OrgGeogebraCommonKernelKernel *)

@interface OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener : NSObject
@end

@implementation OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel

- (id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener>)getListener {
  return (id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener>) check_protocol_cast([super getListener], @protocol(OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener));
}

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
withOrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener:(id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener>)listener {
  OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener_(self, app, listener);
  return self;
}

- (jboolean)isValidAtWithInt:(jint)index {
  OrgGeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isPointOnPath] || [geo getDefaultGeoType] == OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_ON_PATH) {
    if (![geo isChangeable]) return NO;
  }
  else if ([geo isGeoNumeric] && [geo isIndependent]) {
    if (![self isShowSliders] || ![geo isChangeable]) return NO;
  }
  else {
    return NO;
  }
  return YES;
}

- (void)updateProperties {
  OrgGeogebraCommonKernelGeosGeoElement *temp, *geo0 = [self getGeoAtWithInt:0];
  jboolean equalSpeed = YES;
  jboolean equalAnimationType = YES;
  for (jint i = 0; i < [self getGeosLength]; i++) {
    temp = [self getGeoAtWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo0)) getAnimationSpeedObject] != [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(temp)) getAnimationSpeedObject]) {
      equalSpeed = NO;
    }
    if ([geo0 getAnimationType] != [temp getAnimationType]) {
      equalAnimationType = NO;
    }
  }
  [((id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener>) nil_chk([self getListener])) setSelectedIndexWithInt:equalAnimationType ? [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo0)) getAnimationType] : -1];
  OrgGeogebraCommonKernelStringTemplate *highPrecision = OrgGeogebraCommonKernelStringTemplate_printDecimalsWithOrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_withInt_withBoolean_(OrgGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_GEOGEBRA(), OrgGeogebraCommonGuiDialogOptionsModelAnimationStepModel_TEXT_FIELD_FRACTION_DIGITS, NO);
  if (equalSpeed) {
    OrgGeogebraCommonKernelGeosGeoElement *speedObj = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo0)) getAnimationSpeedObject];
    OrgGeogebraCommonKernelGeosGeoNumeric *num = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgoDispatcher])) getDefaultNumberWithBoolean:[geo0 isAngle]];
    [((id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener>) nil_chk([self getListener])) setTextWithNSString:speedObj == nil ? [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(num)) getAnimationSpeedObject])) getLabelWithOrgGeogebraCommonKernelStringTemplate:highPrecision] : [speedObj getLabelWithOrgGeogebraCommonKernelStringTemplate:highPrecision]];
  }
  else [((id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener>) nil_chk([self getListener])) setTextWithNSString:@""];
}

- (id<JavaUtilList>)getChoichesWithOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)loc {
  return JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ JreStrcat("$$", @"\u21d4 ", [((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"Oscillating"]), JreStrcat("$$", @"\u21d2 ", [loc getPlainWithNSString:@"Increasing"]), JreStrcat("$$", @"\u21d0 ", [loc getPlainWithNSString:@"Decreasing"]), JreStrcat("$$", @"\u21d2 ", [loc getPlainWithNSString:@"IncreasingOnce"]) } count:4 type:NSString_class_()]);
}

- (void)applyTypeChangesWithInt:(jint)value {
  [self applyChangesWithInt:value];
}

- (void)applySpeedChangesWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)value {
  for (jint i = 0; i < [self getGeosLength]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:i];
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) setAnimationSpeedObjectWithOrgGeogebraCommonKernelArithmeticNumberValue:value];
    [geo updateCascade];
  }
  [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) udpateNeedToShowAnimationButton];
  [kernel_ notifyRepaint];
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  OrgGeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) setAnimationTypeWithInt:value];
  [geo updateRepaint];
}

- (jint)getValueAtWithInt:(jint)index {
  return -1;
}

- (jboolean)isShowSliders {
  return showSliders_;
}

- (void)setShowSlidersWithBoolean:(jboolean)showSliders {
  self->showSliders_ = showSliders;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getListener", NULL, "Lorg.geogebra.common.gui.dialog.options.model.AnimationSpeedModel$IAnimationSpeedListener;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener:", "AnimationSpeedModel", NULL, 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "getChoichesWithOrgGeogebraCommonMainLocalization:", "getChoiches", "Ljava.util.List;", 0x1, NULL, NULL },
    { "applyTypeChangesWithInt:", "applyTypeChanges", "V", 0x1, NULL, NULL },
    { "applySpeedChangesWithOrgGeogebraCommonKernelArithmeticNumberValue:", "applySpeedChanges", "V", 0x1, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x1, NULL, NULL },
    { "isShowSliders", NULL, "Z", 0x1, NULL, NULL },
    { "setShowSlidersWithBoolean:", "setShowSliders", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "showSliders_", NULL, 0x2, "Z", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.dialog.options.model.AnimationSpeedModel$IAnimationSpeedListener;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel = { 2, "AnimationSpeedModel", "org.geogebra.common.gui.dialog.options.model", NULL, 0x1, 11, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel;
}

@end

void OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener_(OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel *self, OrgGeogebraCommonMainApp *app, id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener> listener) {
  (void) OrgGeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  self->showSliders_ = NO;
  self->kernel_ = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel];
}

OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel *new_OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener_(OrgGeogebraCommonMainApp *app, id<OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener> listener) {
  OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel *self = [OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel alloc];
  OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener_(self, app, listener);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel)

@implementation OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener = { 2, "IAnimationSpeedListener", "org.geogebra.common.gui.dialog.options.model", "AnimationSpeedModel", 0x609, 0, NULL, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelAnimationSpeedModel_IAnimationSpeedListener)
