//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/dialog/options/model/ReflexAngleModel.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "org/geogebra/common/gui/dialog/options/model/MultipleOptionsModel.h"
#include "org/geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "org/geogebra/common/gui/dialog/options/model/ReflexAngleModel.h"
#include "org/geogebra/common/kernel/geos/AngleProperties.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel () {
 @public
  jboolean hasOrientation__;
  jboolean isDrawable_;
  jboolean isDefaults_;
  OrgGeogebraCommonMainApp *app_;
}

- (id<OrgGeogebraCommonKernelGeosAngleProperties>)getAnglePropertiesAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel, app_, OrgGeogebraCommonMainApp *)

__attribute__((unused)) static id<OrgGeogebraCommonKernelGeosAngleProperties> OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_getAnglePropertiesAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel *self, jint index);

@interface OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener : NSObject
@end

@implementation OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel

- (instancetype)initWithOrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener:(id<OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener>)listener
                                                                       withOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                                                                        withBoolean:(jboolean)isDefaults {
  OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener_withOrgGeogebraCommonMainApp_withBoolean_(self, listener, app, isDefaults);
  return self;
}

- (id<OrgGeogebraCommonKernelGeosAngleProperties>)getAnglePropertiesAtWithInt:(jint)index {
  return OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_getAnglePropertiesAtWithInt_(self, index);
}

- (void)updateProperties {
  id<OrgGeogebraCommonKernelGeosAngleProperties> temp, geo0 = OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_getAnglePropertiesAtWithInt_(self, 0);
  jboolean equalangleStyle = YES;
  jboolean hasOrientationOld = hasOrientation__;
  jboolean isDrawableOld = isDrawable_;
  hasOrientation__ = YES;
  isDrawable_ = YES;
  for (jint i = 0; i < [self getGeosLength]; i++) {
    temp = OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_getAnglePropertiesAtWithInt_(self, i);
    if (![((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(temp)) hasOrientation]) {
      hasOrientation__ = NO;
    }
    if (![temp isDrawable]) {
      isDrawable_ = NO;
    }
    if ([((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(geo0)) getAngleStyle] != [temp getAngleStyle]) {
      equalangleStyle = NO;
    }
  }
  if (hasOrientation__ != hasOrientationOld || isDrawableOld != isDrawable_) {
    [((id<OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener>) nil_chk(((id<OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener>) check_protocol_cast([self getListener], @protocol(OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener))))) setComboLabels];
  }
  if (equalangleStyle) {
    [((id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk([self getListener])) setSelectedIndexWithInt:[((OrgGeogebraCommonKernelGeosGeoAngle_AngleStyleEnum *) nil_chk([((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(geo0)) getAngleStyle])) getXmlVal]];
  }
}

- (id<JavaUtilList>)getChoichesWithOrgGeogebraCommonMainLocalization:(OrgGeogebraCommonMainLocalization *)loc {
  id<JavaUtilList> result = [new_JavaUtilArrayList_init() autorelease];
  if (hasOrientation__) {
    jint length = ((IOSObjectArray *) nil_chk(OrgGeogebraCommonKernelGeosGeoAngle_get_INTERVAL_MIN_()))->size_;
    if (isDrawable_) {
      length--;
    }
    for (jint i = 0; i < length; i++) {
      [result addWithId:[((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AandB" withNSString:IOSObjectArray_Get(OrgGeogebraCommonKernelGeosGeoAngle_get_INTERVAL_MIN_(), i) withNSString:IOSObjectArray_Get(nil_chk(OrgGeogebraCommonKernelGeosGeoAngle_get_INTERVAL_MAX_()), i)]];
    }
  }
  else {
    [result addWithId:[((OrgGeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"AandB" withNSString:IOSObjectArray_Get(nil_chk(OrgGeogebraCommonKernelGeosGeoAngle_get_INTERVAL_MIN_()), 1) withNSString:IOSObjectArray_Get(nil_chk(OrgGeogebraCommonKernelGeosGeoAngle_get_INTERVAL_MAX_()), 1)]];
    [result addWithId:[loc getPlainWithNSString:@"AandB" withNSString:IOSObjectArray_Get(OrgGeogebraCommonKernelGeosGeoAngle_get_INTERVAL_MIN_(), 2) withNSString:IOSObjectArray_Get(OrgGeogebraCommonKernelGeosGeoAngle_get_INTERVAL_MAX_(), 2)]];
  }
  return result;
}

- (jboolean)isValidAtWithInt:(jint)index {
  OrgGeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  return (!(([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isIndependent] && !isDefaults_)) && ([OrgGeogebraCommonKernelGeosAngleProperties_class_() isInstance:geo]) && ![geo isGeoList]) || OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_isAngleListWithOrgGeogebraCommonKernelGeosGeoElement_(geo);
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  id<OrgGeogebraCommonKernelGeosAngleProperties> geo = OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_getAnglePropertiesAtWithInt_(self, index);
  [((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(geo)) setAngleStyleWithInt:value];
  [(geo) updateRepaint];
}

- (jboolean)hasOrientation {
  return hasOrientation__;
}

- (jint)getValueAtWithInt:(jint)index {
  return 0;
}

- (void)dealloc {
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener:withOrgGeogebraCommonMainApp:withBoolean:", "ReflexAngleModel", NULL, 0x1, NULL, NULL },
    { "getAnglePropertiesAtWithInt:", "getAnglePropertiesAt", "Lorg.geogebra.common.kernel.geos.AngleProperties;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "getChoichesWithOrgGeogebraCommonMainLocalization:", "getChoiches", "Ljava.util.List;", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x4, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "hasOrientation", NULL, "Z", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "hasOrientation__", "hasOrientation", 0x2, "Z", NULL, NULL,  },
    { "isDrawable_", NULL, 0x2, "Z", NULL, NULL,  },
    { "isDefaults_", NULL, 0x2, "Z", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.dialog.options.model.ReflexAngleModel$IReflexAngleListener;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel = { 2, "ReflexAngleModel", "org.geogebra.common.gui.dialog.options.model", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel;
}

@end

void OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener_withOrgGeogebraCommonMainApp_withBoolean_(OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel *self, id<OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener> listener, OrgGeogebraCommonMainApp *app, jboolean isDefaults) {
  OrgGeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_set_app_(self, app);
  self->isDefaults_ = isDefaults;
}

OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel *new_OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener_withOrgGeogebraCommonMainApp_withBoolean_(id<OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener> listener, OrgGeogebraCommonMainApp *app, jboolean isDefaults) {
  OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel *self = [OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel alloc];
  OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener_withOrgGeogebraCommonMainApp_withBoolean_(self, listener, app, isDefaults);
  return self;
}

id<OrgGeogebraCommonKernelGeosAngleProperties> OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_getAnglePropertiesAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel *self, jint index) {
  return (id<OrgGeogebraCommonKernelGeosAngleProperties>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(OrgGeogebraCommonKernelGeosAngleProperties));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel)

@implementation OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setComboLabels", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener = { 2, "IReflexAngleListener", "org.geogebra.common.gui.dialog.options.model", "ReflexAngleModel", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelReflexAngleModel_IReflexAngleListener)
