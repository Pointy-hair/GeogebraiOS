//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/dialog/options/model/DecoAngleModel.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/gui/dialog/options/model/DecoAngleModel.h"
#include "org/geogebra/common/gui/dialog/options/model/NumberOptionsModel.h"
#include "org/geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "org/geogebra/common/kernel/geos/AngleProperties.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"

@interface OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel () {
 @public
  id<OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener> listener_;
}

- (id<OrgGeogebraCommonKernelGeosAngleProperties>)getAnglePropertiesAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel, listener_, id<OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener>)

__attribute__((unused)) static id<OrgGeogebraCommonKernelGeosAngleProperties> OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getAnglePropertiesAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel *self, jint index);

@interface OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener : NSObject
@end

@implementation OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel

- (instancetype)initWithOrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener:(id<OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener>)listener {
  OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener_(self, listener);
  return self;
}

- (id<OrgGeogebraCommonKernelGeosAngleProperties>)getAnglePropertiesAtWithInt:(jint)index {
  return OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getAnglePropertiesAtWithInt_(self, index);
}

- (void)updateProperties {
  id<OrgGeogebraCommonKernelGeosAngleProperties> geo0 = OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getAnglePropertiesAtWithInt_(self, 0);
  [((id<OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener>) nil_chk(listener_)) setSelectedIndexWithInt:[((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(geo0)) getDecorationType]];
}

- (jboolean)isValidAtWithInt:(jint)index {
  return ([OrgGeogebraCommonKernelGeosAngleProperties_class_() isInstance:[self getObjectAtWithInt:index]]);
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  id<OrgGeogebraCommonKernelGeosAngleProperties> geo = OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getAnglePropertiesAtWithInt_(self, index);
  [((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(geo)) setDecorationTypeWithInt:value];
  if ([geo getArcSize] < 20 && ([geo getDecorationType] == OrgGeogebraCommonKernelGeosGeoElement_DECORATION_ANGLE_THREE_ARCS || [geo getDecorationType] == OrgGeogebraCommonKernelGeosGeoElement_DECORATION_ANGLE_TWO_ARCS)) {
    [geo setArcSizeWithInt:20];
    [((id<OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener>) nil_chk(listener_)) setArcSizeMinValue];
  }
  [geo updateRepaint];
}

- (jint)getValueAtWithInt:(jint)index {
  return [((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getAnglePropertiesAtWithInt_(self, index))) getDecorationType];
}

+ (jint)getDecoTypeLength {
  return OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getDecoTypeLength();
}

- (void)dealloc {
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener:", "DecoAngleModel", NULL, 0x1, NULL, NULL },
    { "getAnglePropertiesAtWithInt:", "getAnglePropertiesAt", "Lorg.geogebra.common.kernel.geos.AngleProperties;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x4, NULL, NULL },
    { "getDecoTypeLength", NULL, "I", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "listener_", NULL, 0x2, "Lorg.geogebra.common.gui.dialog.options.model.DecoAngleModel$IDecoAngleListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.dialog.options.model.DecoAngleModel$IDecoAngleListener;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel = { 2, "DecoAngleModel", "org.geogebra.common.gui.dialog.options.model", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel;
}

@end

void OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener_(OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel *self, id<OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener> listener) {
  OrgGeogebraCommonGuiDialogOptionsModelNumberOptionsModel_init(self);
  OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_set_listener_(self, listener);
}

OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel *new_OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener_(id<OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener> listener) {
  OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel *self = [OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel alloc];
  OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener_(self, listener);
  return self;
}

id<OrgGeogebraCommonKernelGeosAngleProperties> OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getAnglePropertiesAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel *self, jint index) {
  return (id<OrgGeogebraCommonKernelGeosAngleProperties>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(OrgGeogebraCommonKernelGeosAngleProperties));
}

jint OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_getDecoTypeLength() {
  OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_initialize();
  return ((IOSObjectArray *) nil_chk(OrgGeogebraCommonKernelGeosGeoAngle_getDecoTypes()))->size_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel)

@implementation OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setArcSizeMinValue", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener = { 2, "IDecoAngleListener", "org.geogebra.common.gui.dialog.options.model", "DecoAngleModel", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelDecoAngleModel_IDecoAngleListener)
