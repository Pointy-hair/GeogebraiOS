//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/dialog/options/OptionsObject.java
//


#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/gui/dialog/options/OptionsObject.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGuiDialogOptionsOptionsObject () {
 @public
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsOptionsObject, sb_, JavaLangStringBuilder *)

@implementation OrgGeogebraCommonGuiDialogOptionsOptionsObject

- (void)addWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  geoAdded_ = geo;
}

- (void)forgetGeoAdded {
  geoAdded_ = nil;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)consumeGeoAdded {
  OrgGeogebraCommonKernelGeosGeoElement *ret = geoAdded_;
  [self forgetGeoAdded];
  return ret;
}

- (NSString *)getSelectionDescription {
  if (selection_ == nil || [selection_ size] == 0) {
    return [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getPlainWithNSString:@"Properties"];
  }
  else if ([selection_ size] == 1) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [selection_ getWithInt:0];
    [((JavaLangStringBuilder *) nil_chk(sb_)) setLengthWithInt:0];
    (void) [sb_ appendWithNSString:@"<html>"];
    (void) [sb_ appendWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getLocalization])) getPlainWithNSString:@"PropertiesOfA" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getNameDescriptionHTMLWithBoolean:NO withBoolean:NO]]];
    (void) [sb_ appendWithNSString:@"</html>"];
    return [sb_ description];
  }
  else {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getLocalization])) getPlainWithNSString:@"PropertiesOfA" withNSString:[app_ getPlainWithNSString:@"Selection"]];
  }
}

- (instancetype)init {
  OrgGeogebraCommonGuiDialogOptionsOptionsObject_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithOrgGeogebraCommonKernelGeosGeoElement:", "add", "V", 0x1, NULL, NULL },
    { "forgetGeoAdded", NULL, "V", 0x1, NULL, NULL },
    { "consumeGeoAdded", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getSelectionDescription", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_LIST_WIDTH_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiDialogOptionsOptionsObject_MIN_LIST_WIDTH },
    { "TEXT_FIELD_FRACTION_DIGITS_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiDialogOptionsOptionsObject_TEXT_FIELD_FRACTION_DIGITS },
    { "kernel_", NULL, 0x4, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "SLIDER_MAX_WIDTH_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiDialogOptionsOptionsObject_SLIDER_MAX_WIDTH },
    { "MIN_WIDTH_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiDialogOptionsOptionsObject_MIN_WIDTH },
    { "MIN_HEIGHT_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGuiDialogOptionsOptionsObject_MIN_HEIGHT },
    { "geoAdded_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "firstTime_", NULL, 0x4, "Z", NULL, NULL,  },
    { "selection_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
    { "app_", NULL, 0x1, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsOptionsObject = { 2, "OptionsObject", "org.geogebra.common.gui.dialog.options", NULL, 0x401, 5, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsOptionsObject;
}

@end

void OrgGeogebraCommonGuiDialogOptionsOptionsObject_init(OrgGeogebraCommonGuiDialogOptionsOptionsObject *self) {
  (void) NSObject_init(self);
  self->geoAdded_ = nil;
  self->firstTime_ = YES;
  self->sb_ = new_JavaLangStringBuilder_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsOptionsObject)
