//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/dialog/options/model/OptionsModel.java
//

#ifndef _OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_H_
#define _OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class OrgGeogebraCommonKernelGeosGeoElement;

@interface OrgGeogebraCommonGuiDialogOptionsModelOptionsModel : NSObject

#pragma mark Public

- (instancetype)init;

- (jboolean)checkGeos;

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeoAtWithInt:(jint)i;

- (IOSObjectArray *)getGeos;

- (jint)getGeosLength;

- (id)getObjectAtWithInt:(jint)i;

- (jboolean)hasGeos;

- (jboolean)hasPreview;

+ (jboolean)isAngleListWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setGeosWithNSObjectArray:(IOSObjectArray *)geos;

- (void)updateProperties;

#pragma mark Protected

- (jboolean)isValidAtWithInt:(jint)index;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGuiDialogOptionsModelOptionsModel)

FOUNDATION_EXPORT jboolean OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_isAngleListWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *geo);

FOUNDATION_EXPORT void OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_init(OrgGeogebraCommonGuiDialogOptionsModelOptionsModel *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGuiDialogOptionsModelOptionsModel)

#endif // _OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_H_
