//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/gui/dialog/options/model/PointStyleModel.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "org/geogebra/common/gui/dialog/options/model/NumberOptionsModel.h"
#include "org/geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "org/geogebra/common/gui/dialog/options/model/PointStyleModel.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/PointProperties.h"
#include "org/geogebra/common/plugin/EuclidianStyleConstants.h"

@interface OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel () {
 @public
  id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener> listener_;
}

- (id<OrgGeogebraCommonKernelGeosPointProperties>)getPointPropertiesAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel, listener_, id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener>)

__attribute__((unused)) static id<OrgGeogebraCommonKernelGeosPointProperties> OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel *self, jint index);

@implementation OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel

- (instancetype)initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener:(id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener>)listener {
  OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

- (id<OrgGeogebraCommonKernelGeosPointProperties>)getPointPropertiesAtWithInt:(jint)index {
  return OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(self, index);
}

- (void)updateProperties {
  if (![self hasGeos]) {
    return;
  }
  id<OrgGeogebraCommonKernelGeosPointProperties> geo0 = OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(self, 0);
  if (listener_ == nil) {
    return;
  }
  if ((geo0 == nil) || ([geo0 getPointStyle] == -1)) {
    [((id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk(listener_)) setSelectedIndexWithInt:OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_STYLE_DOT];
  }
  else {
    [((id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk(listener_)) setSelectedIndexWithInt:[geo0 getPointStyle]];
  }
}

- (jboolean)checkGeos {
  if (![self hasGeos]) {
    return NO;
  }
  return [super checkGeos];
}

- (jboolean)isValidAtWithInt:(jint)index {
  jboolean valid = YES;
  OrgGeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  if (([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D] && !([geo isGeoPoint])) || (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geo getGeoElementForPropertiesDialog])) isGeoPoint] && (!([geo isGeoList] && [((OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoList class])) showPointProperties])))) {
    valid = NO;
  }
  return valid;
}

- (jboolean)is3D {
  for (jint i = 0; i < [self getGeosLength]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:i];
    if (!([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint] && [geo isGeoElement3D])) {
      return NO;
    }
  }
  return YES;
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  id<OrgGeogebraCommonKernelGeosPointProperties> point = OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(self, index);
  [((id<OrgGeogebraCommonKernelGeosPointProperties>) nil_chk(point)) setPointStyleWithInt:value];
  [point updateRepaint];
}

- (jint)getValueAtWithInt:(jint)index {
  return 0;
}

- (void)dealloc {
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener:", "PointStyleModel", NULL, 0x1, NULL, NULL },
    { "getPointPropertiesAtWithInt:", "getPointPropertiesAt", "Lorg.geogebra.common.kernel.geos.PointProperties;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "checkGeos", NULL, "Z", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "is3D", NULL, "Z", 0x1, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "listener_", NULL, 0x2, "Lorg.geogebra.common.gui.dialog.options.model.IComboListener;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel = { 2, "PointStyleModel", "org.geogebra.common.gui.dialog.options.model", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel;
}

@end

void OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener_(OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel *self, id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  OrgGeogebraCommonGuiDialogOptionsModelNumberOptionsModel_init(self);
  OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_set_listener_(self, listener);
}

OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel *new_OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener_(id<OrgGeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel *self = [OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel alloc];
  OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_initWithOrgGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

id<OrgGeogebraCommonKernelGeosPointProperties> OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel_getPointPropertiesAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel *self, jint index) {
  return (id<OrgGeogebraCommonKernelGeosPointProperties>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(OrgGeogebraCommonKernelGeosPointProperties));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelPointStyleModel)
