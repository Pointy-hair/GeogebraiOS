//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/dialog/options/model/ButtonSizeModel.java
//


#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/geogebra/common/gui/dialog/options/model/ButtonSizeModel.h"
#include "org/geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "org/geogebra/common/kernel/geos/GeoButton.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"

@interface OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel () {
 @public
  id<OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener> listener_;
}

- (OrgGeogebraCommonKernelGeosGeoButton *)getButtonAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel, listener_, id<OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener>)

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoButton *OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_getButtonAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel *self, jint index);

@interface OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener : NSObject
@end

@implementation OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel

- (instancetype)initWithOrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener:(id<OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener>)listener {
  OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_initWithOrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener_(self, listener);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoButton *)getButtonAtWithInt:(jint)index {
  return OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_getButtonAtWithInt_(self, index);
}

- (void)updateProperties {
  for (jint i = 0; i < [self getGeosLength]; i++) {
    OrgGeogebraCommonKernelGeosGeoButton *geo = OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_getButtonAtWithInt_(self, i);
    [((id<OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener>) nil_chk(listener_)) updateSizesWithInt:[((OrgGeogebraCommonKernelGeosGeoButton *) nil_chk(geo)) getWidth] withInt:[geo getHeight] withBoolean:[geo isFixed]];
  }
}

- (jboolean)isValidAtWithInt:(jint)index {
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isGeoButton] && ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isGeoTextField];
}

- (void)setSizesFromStringWithNSString:(NSString *)strWidth
                          withNSString:(NSString *)strHeight
                           withBoolean:(jboolean)isFixed {
  for (jint i = 0; i < [self getGeosLength]; i++) {
    OrgGeogebraCommonKernelGeosGeoButton *geo = OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_getButtonAtWithInt_(self, i);
    [((OrgGeogebraCommonKernelGeosGeoButton *) nil_chk(geo)) setFixedSizeWithBoolean:isFixed];
    if (isFixed) {
      [geo setHeightWithInt:JavaLangInteger_parseIntWithNSString_(strHeight)];
      [geo setWidthWithInt:JavaLangInteger_parseIntWithNSString_(strWidth)];
    }
    else {
      [geo setFixedSizeWithBoolean:NO];
    }
  }
}

- (void)applyChangesWithBoolean:(jboolean)isFixed {
  for (jint i = 0; i < [self getGeosLength]; i++) {
    OrgGeogebraCommonKernelGeosGeoButton *geo = OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_getButtonAtWithInt_(self, i);
    [((OrgGeogebraCommonKernelGeosGeoButton *) nil_chk(geo)) setFixedSizeWithBoolean:isFixed];
    [((id<OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener>) nil_chk(listener_)) updateSizesWithInt:[geo getWidth] withInt:[geo getHeight] withBoolean:isFixed];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener:", "ButtonSizeModel", NULL, 0x1, NULL, NULL },
    { "getButtonAtWithInt:", "getButtonAt", "Lorg.geogebra.common.kernel.geos.GeoButton;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "setSizesFromStringWithNSString:withNSString:withBoolean:", "setSizesFromString", "V", 0x1, NULL, NULL },
    { "applyChangesWithBoolean:", "applyChanges", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "listener_", NULL, 0x2, "Lorg.geogebra.common.gui.dialog.options.model.ButtonSizeModel$IButtonSizeListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.dialog.options.model.ButtonSizeModel$IButtonSizeListener;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel = { 2, "ButtonSizeModel", "org.geogebra.common.gui.dialog.options.model", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel;
}

@end

void OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_initWithOrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener_(OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel *self, id<OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener> listener) {
  (void) OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_init(self);
  self->listener_ = listener;
}

OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel *new_OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_initWithOrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener_(id<OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener> listener) {
  OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel *self = [OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel alloc];
  OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_initWithOrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener_(self, listener);
  return self;
}

OrgGeogebraCommonKernelGeosGeoButton *OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_getButtonAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel *self, jint index) {
  return (OrgGeogebraCommonKernelGeosGeoButton *) check_class_cast([self getObjectAtWithInt:index], [OrgGeogebraCommonKernelGeosGeoButton class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel)

@implementation OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "updateSizesWithInt:withInt:withBoolean:", "updateSizes", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener = { 2, "IButtonSizeListener", "org.geogebra.common.gui.dialog.options.model", "ButtonSizeModel", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelButtonSizeModel_IButtonSizeListener)
