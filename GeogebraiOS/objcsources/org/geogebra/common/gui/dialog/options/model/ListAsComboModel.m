//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/gui/dialog/options/model/ListAsComboModel.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/gui/dialog/options/model/BooleanOptionModel.h"
#include "org/geogebra/common/gui/dialog/options/model/ListAsComboModel.h"
#include "org/geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel () {
 @public
  OrgGeogebraCommonMainApp *app_;
  id<OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener> listener_ListAsComboModel_;
}

- (OrgGeogebraCommonKernelGeosGeoList *)getGeoListAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel, app_, OrgGeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel, listener_ListAsComboModel_, id<OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener>)

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoList *OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_getGeoListAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel *self, jint index);

@interface OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener : NSObject
@end

@implementation OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
withOrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener:(id<OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener>)listener {
  OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener_(self, app, listener);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoList *)getGeoListAtWithInt:(jint)index {
  return OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_getGeoListAtWithInt_(self, index);
}

- (void)applyChangesWithBoolean:(jboolean)value {
  [super applyChangesWithBoolean:value];
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) refreshViews];
}

- (jboolean)isValidAtWithInt:(jint)index {
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isGeoList];
}

- (jboolean)getValueAtWithInt:(jint)index {
  return [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_getGeoListAtWithInt_(self, 0))) drawAsComboBox];
}

- (void)applyWithInt:(jint)index
         withBoolean:(jboolean)value {
  OrgGeogebraCommonKernelGeosGeoList *geo = OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_getGeoListAtWithInt_(self, index);
  [((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(geo)) setDrawAsComboBoxWithBoolean:value];
  if (value) {
    [geo setEuclidianVisibleWithBoolean:YES];
  }
  [((id<OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener>) nil_chk(listener_ListAsComboModel_)) drawListAsComboBoxWithOrgGeogebraCommonKernelGeosGeoList:geo withBoolean:value];
  [geo updateRepaint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener:", "ListAsComboModel", NULL, 0x1, NULL, NULL },
    { "getGeoListAtWithInt:", "getGeoListAt", "Lorg.geogebra.common.kernel.geos.GeoList;", 0x2, NULL, NULL },
    { "applyChangesWithBoolean:", "applyChanges", "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withBoolean:", "apply", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x2, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "listener_ListAsComboModel_", "listener", 0x2, "Lorg.geogebra.common.gui.dialog.options.model.ListAsComboModel$IListAsComboListener;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.gui.dialog.options.model.ListAsComboModel$IListAsComboListener;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel = { 2, "ListAsComboModel", "org.geogebra.common.gui.dialog.options.model", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel;
}

@end

void OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener_(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel *self, OrgGeogebraCommonMainApp *app, id<OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener> listener) {
  (void) OrgGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_initWithOrgGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  self->app_ = app;
  self->listener_ListAsComboModel_ = listener;
}

OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel *new_OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener_(OrgGeogebraCommonMainApp *app, id<OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener> listener) {
  OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel *self = [OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel alloc];
  OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener_(self, app, listener);
  return self;
}

OrgGeogebraCommonKernelGeosGeoList *OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_getGeoListAtWithInt_(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel *self, jint index) {
  return (OrgGeogebraCommonKernelGeosGeoList *) check_class_cast([self getObjectAtWithInt:index], [OrgGeogebraCommonKernelGeosGeoList class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel)

@implementation OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "drawListAsComboBoxWithOrgGeogebraCommonKernelGeosGeoList:withBoolean:", "drawListAsComboBox", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener = { 2, "IListAsComboListener", "org.geogebra.common.gui.dialog.options.model", "ListAsComboModel", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGuiDialogOptionsModelListAsComboModel_IListAsComboListener)
