//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/factories/LaTeXFactory.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/factories/LaTeXFactory.h"
#include "org/geogebra/common/util/LaTeXCache.h"

OrgGeogebraCommonFactoriesLaTeXFactory *OrgGeogebraCommonFactoriesLaTeXFactory_prototype_;

@implementation OrgGeogebraCommonFactoriesLaTeXFactory

- (id<OrgGeogebraCommonUtilLaTeXCache>)newLaTeXCache {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  OrgGeogebraCommonFactoriesLaTeXFactory_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newLaTeXCache", NULL, "Lorg.geogebra.common.util.LaTeXCache;", 0x401, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "prototype_", NULL, 0x9, "Lorg.geogebra.common.factories.LaTeXFactory;", &OrgGeogebraCommonFactoriesLaTeXFactory_prototype_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonFactoriesLaTeXFactory = { 2, "LaTeXFactory", "org.geogebra.common.factories", NULL, 0x401, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonFactoriesLaTeXFactory;
}

@end

void OrgGeogebraCommonFactoriesLaTeXFactory_init(OrgGeogebraCommonFactoriesLaTeXFactory *self) {
  (void) NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonFactoriesLaTeXFactory)
