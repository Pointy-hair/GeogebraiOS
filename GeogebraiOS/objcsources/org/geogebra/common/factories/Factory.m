//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/factories/Factory.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/factories/Factory.h"
#include "org/geogebra/common/javax/swing/RelationPane.h"

static OrgGeogebraCommonFactoriesFactory *OrgGeogebraCommonFactoriesFactory_prototype_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonFactoriesFactory, prototype_, OrgGeogebraCommonFactoriesFactory *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonFactoriesFactory, prototype_, OrgGeogebraCommonFactoriesFactory *)

@implementation OrgGeogebraCommonFactoriesFactory

- (id<OrgGeogebraCommonJavaxSwingRelationPane>)newRelationPane {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (OrgGeogebraCommonFactoriesFactory *)getPrototype {
  return OrgGeogebraCommonFactoriesFactory_getPrototype();
}

+ (void)setPrototypeWithOrgGeogebraCommonFactoriesFactory:(OrgGeogebraCommonFactoriesFactory *)ret {
  OrgGeogebraCommonFactoriesFactory_setPrototypeWithOrgGeogebraCommonFactoriesFactory_(ret);
}

- (instancetype)init {
  OrgGeogebraCommonFactoriesFactory_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newRelationPane", NULL, "Lorg.geogebra.common.javax.swing.RelationPane;", 0x401, NULL, NULL },
    { "getPrototype", NULL, "Lorg.geogebra.common.factories.Factory;", 0x9, NULL, NULL },
    { "setPrototypeWithOrgGeogebraCommonFactoriesFactory:", "setPrototype", "V", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "prototype_", NULL, 0xa, "Lorg.geogebra.common.factories.Factory;", &OrgGeogebraCommonFactoriesFactory_prototype_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonFactoriesFactory = { 2, "Factory", "org.geogebra.common.factories", NULL, 0x401, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonFactoriesFactory;
}

@end

OrgGeogebraCommonFactoriesFactory *OrgGeogebraCommonFactoriesFactory_getPrototype() {
  OrgGeogebraCommonFactoriesFactory_initialize();
  return OrgGeogebraCommonFactoriesFactory_prototype_;
}

void OrgGeogebraCommonFactoriesFactory_setPrototypeWithOrgGeogebraCommonFactoriesFactory_(OrgGeogebraCommonFactoriesFactory *ret) {
  OrgGeogebraCommonFactoriesFactory_initialize();
  JreStrongAssign(&OrgGeogebraCommonFactoriesFactory_prototype_, nil, ret);
}

void OrgGeogebraCommonFactoriesFactory_init(OrgGeogebraCommonFactoriesFactory *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonFactoriesFactory)
