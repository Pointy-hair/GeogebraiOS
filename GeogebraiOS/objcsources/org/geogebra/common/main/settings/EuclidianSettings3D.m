//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/main/settings/EuclidianSettings3D.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/main/settings/AbstractSettings.h"
#include "org/geogebra/common/main/settings/EuclidianSettings.h"
#include "org/geogebra/common/main/settings/EuclidianSettings3D.h"

@interface OrgGeogebraCommonMainSettingsEuclidianSettings3D () {
 @public
  jdouble zscale_;
  jdouble zZero_;
  jdouble a_;
  jdouble b_;
  jboolean useClippingCube__;
  jboolean showClippingCube__;
  jint clippingReduction_;
  jboolean showPlate_;
  jint projection_;
  jint projectionPerspectiveEyeDistance_;
  jint eyeSep_;
  jdouble projectionObliqueAngle_;
  jdouble projectionObliqueFactor_;
  jboolean yAxisVertical_;
  jboolean useLight_;
}

@end

@implementation OrgGeogebraCommonMainSettingsEuclidianSettings3D

- (instancetype)initWithOrgGeogebraCommonMainSettingsEuclidianSettings:(OrgGeogebraCommonMainSettingsEuclidianSettings *)euclidianSettings1 {
  OrgGeogebraCommonMainSettingsEuclidianSettings3D_initWithOrgGeogebraCommonMainSettingsEuclidianSettings_(self, euclidianSettings1);
  return self;
}

- (void)setZscaleWithDouble:(jdouble)scale_ {
  if (self->zscale_ != scale_) {
    self->zscale_ = scale_;
    [self settingChanged];
  }
}

- (jdouble)getZscale {
  return zscale_;
}

- (void)setRotXYinDegreesWithDouble:(jdouble)a2
                         withDouble:(jdouble)b2 {
  if (self->a_ != a2 || self->b_ != b2) {
    self->a_ = a2;
    self->b_ = b2;
    [self settingChanged];
  }
}

- (void)setRotXYinDegreesFromViewWithDouble:(jdouble)a2
                                 withDouble:(jdouble)b2 {
  self->a_ = a2;
  self->b_ = b2;
}

- (void)updateRotXYWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view)) setRotXYinDegreesWithDouble:a_ withDouble:b_];
}

- (void)updateOriginWithDouble:(jdouble)xZero2
                    withDouble:(jdouble)yZero2
                    withDouble:(jdouble)zZero2 {
  if (self->xZero_ != xZero2 || self->yZero_ != yZero2 || self->zZero_ != zZero2) {
    self->xZero_ = xZero2;
    self->yZero_ = yZero2;
    self->zZero_ = zZero2;
    [self settingChanged];
  }
}

- (void)updateOriginFromViewWithDouble:(jdouble)xZero2
                            withDouble:(jdouble)yZero2
                            withDouble:(jdouble)zZero2 {
  self->xZero_ = xZero2;
  self->yZero_ = yZero2;
  self->zZero_ = zZero2;
}

- (void)updateOriginWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view)) setXZeroWithDouble:[self getXZero]];
  [view setYZeroWithDouble:[self getYZero]];
  [view setZZeroWithDouble:[self getZZero]];
}

- (jdouble)getZZero {
  return zZero_;
}

- (void)setUseClippingCubeWithBoolean:(jboolean)flag {
  if (useClippingCube__ != flag) {
    useClippingCube__ = flag;
    [self settingChanged];
  }
}

- (jboolean)useClippingCube {
  return useClippingCube__;
}

- (void)setShowClippingCubeWithBoolean:(jboolean)flag {
  if (showClippingCube__ != flag) {
    showClippingCube__ = flag;
    [self settingChanged];
  }
}

- (jboolean)showClippingCube {
  return showClippingCube__;
}

- (void)setClippingReductionWithInt:(jint)value {
  if (clippingReduction_ != value) {
    clippingReduction_ = value;
    [self settingChanged];
  }
}

- (jint)getClippingReduction {
  return clippingReduction_;
}

- (void)setShowPlateWithBoolean:(jboolean)flag {
  if (showPlate_ != flag) {
    showPlate_ = flag;
    [self settingChanged];
  }
}

- (jboolean)getShowPlate {
  return showPlate_;
}

- (void)togglePlane {
  showPlate_ = !showPlate_;
  [self settingChanged];
}

- (void)setProjectionWithInt:(jint)projection {
  if (self->projection_ != projection) {
    self->projection_ = projection;
    [self settingChanged];
  }
}

- (jint)getProjection {
  return projection_;
}

- (jint)getProjectionPerspectiveEyeDistance {
  return projectionPerspectiveEyeDistance_;
}

- (void)setProjectionPerspectiveEyeDistanceWithInt:(jint)distance {
  if (projectionPerspectiveEyeDistance_ != distance) {
    projectionPerspectiveEyeDistance_ = distance;
    [self settingChanged];
  }
}

- (void)setEyeSepWithInt:(jint)value {
  if (eyeSep_ != value) {
    eyeSep_ = value;
    [self settingChanged];
  }
}

- (jint)getEyeSep {
  return eyeSep_;
}

- (void)setProjectionObliqueAngleWithDouble:(jdouble)value {
  if (projectionObliqueAngle_ != value) {
    projectionObliqueAngle_ = value;
    [self settingChanged];
  }
}

- (jdouble)getProjectionObliqueAngle {
  return projectionObliqueAngle_;
}

- (void)setProjectionObliqueFactorWithDouble:(jdouble)value {
  if (projectionObliqueFactor_ != value) {
    projectionObliqueFactor_ = value;
    [self settingChanged];
  }
}

- (jdouble)getProjectionObliqueFactor {
  return projectionObliqueFactor_;
}

- (jboolean)getYAxisVertical {
  return yAxisVertical_;
}

- (void)setYAxisVerticalWithBoolean:(jboolean)flag {
  if (yAxisVertical_ != flag) {
    yAxisVertical_ = flag;
    [self settingChanged];
  }
}

- (void)setUseLightWithBoolean:(jboolean)flag {
  if (useLight_ != flag) {
    useLight_ = flag;
    [self settingChanged];
  }
}

- (jboolean)getUseLight {
  return useLight_;
}

- (jboolean)is3D {
  return YES;
}

- (void)resetNoFire {
  [super resetNoFire];
  xZero_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_XZERO_SCENE_STANDARD;
  yZero_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_XZERO_SCENE_STANDARD;
  zZero_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_ZZERO_SCENE_STANDARD;
  a_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_ANGLE_ROT_OZ;
  b_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_ANGLE_ROT_XOY;
  xscale_ = OrgGeogebraCommonEuclidianEuclidianView_SCALE_STANDARD;
  yscale_ = OrgGeogebraCommonEuclidianEuclidianView_SCALE_STANDARD;
  zscale_ = OrgGeogebraCommonEuclidianEuclidianView_SCALE_STANDARD;
  yAxisVertical_ = NO;
  useLight_ = YES;
  clippingReduction_ = 1;
  useClippingCube__ = YES;
  showClippingCube__ = YES;
  projection_ = 0;
  eyeSep_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_EYE_SEP_DEFAULT;
  projectionPerspectiveEyeDistance_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_PERSPECTIVE_EYE_DISTANCE_DEFAULT;
  projectionObliqueAngle_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_OBLIQUE_ANGLE_DEFAULT;
  projectionObliqueFactor_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_OBLIQUE_FACTOR_DEFAULT;
}

- (void)setScaleNoCallToSettingsChangedWithDouble:(jdouble)scale_ {
  self->xscale_ = scale_;
  self->yscale_ = scale_;
  self->zscale_ = scale_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainSettingsEuclidianSettings:", "EuclidianSettings3D", NULL, 0x1, NULL, NULL },
    { "setZscaleWithDouble:", "setZscale", "V", 0x1, NULL, NULL },
    { "getZscale", NULL, "D", 0x1, NULL, NULL },
    { "setRotXYinDegreesWithDouble:withDouble:", "setRotXYinDegrees", "V", 0x1, NULL, NULL },
    { "setRotXYinDegreesFromViewWithDouble:withDouble:", "setRotXYinDegreesFromView", "V", 0x1, NULL, NULL },
    { "updateRotXYWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "updateRotXY", "V", 0x1, NULL, NULL },
    { "updateOriginWithDouble:withDouble:withDouble:", "updateOrigin", "V", 0x1, NULL, NULL },
    { "updateOriginFromViewWithDouble:withDouble:withDouble:", "updateOriginFromView", "V", 0x1, NULL, NULL },
    { "updateOriginWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "updateOrigin", "V", 0x1, NULL, NULL },
    { "getZZero", NULL, "D", 0x1, NULL, NULL },
    { "setUseClippingCubeWithBoolean:", "setUseClippingCube", "V", 0x1, NULL, NULL },
    { "useClippingCube", NULL, "Z", 0x1, NULL, NULL },
    { "setShowClippingCubeWithBoolean:", "setShowClippingCube", "V", 0x1, NULL, NULL },
    { "showClippingCube", NULL, "Z", 0x1, NULL, NULL },
    { "setClippingReductionWithInt:", "setClippingReduction", "V", 0x1, NULL, NULL },
    { "getClippingReduction", NULL, "I", 0x1, NULL, NULL },
    { "setShowPlateWithBoolean:", "setShowPlate", "V", 0x1, NULL, NULL },
    { "getShowPlate", NULL, "Z", 0x1, NULL, NULL },
    { "togglePlane", NULL, "V", 0x1, NULL, NULL },
    { "setProjectionWithInt:", "setProjection", "V", 0x1, NULL, NULL },
    { "getProjection", NULL, "I", 0x1, NULL, NULL },
    { "getProjectionPerspectiveEyeDistance", NULL, "I", 0x1, NULL, NULL },
    { "setProjectionPerspectiveEyeDistanceWithInt:", "setProjectionPerspectiveEyeDistance", "V", 0x1, NULL, NULL },
    { "setEyeSepWithInt:", "setEyeSep", "V", 0x1, NULL, NULL },
    { "getEyeSep", NULL, "I", 0x1, NULL, NULL },
    { "setProjectionObliqueAngleWithDouble:", "setProjectionObliqueAngle", "V", 0x1, NULL, NULL },
    { "getProjectionObliqueAngle", NULL, "D", 0x1, NULL, NULL },
    { "setProjectionObliqueFactorWithDouble:", "setProjectionObliqueFactor", "V", 0x1, NULL, NULL },
    { "getProjectionObliqueFactor", NULL, "D", 0x1, NULL, NULL },
    { "getYAxisVertical", NULL, "Z", 0x1, NULL, NULL },
    { "setYAxisVerticalWithBoolean:", "setYAxisVertical", "V", 0x1, NULL, NULL },
    { "setUseLightWithBoolean:", "setUseLight", "V", 0x1, NULL, NULL },
    { "getUseLight", NULL, "Z", 0x1, NULL, NULL },
    { "is3D", NULL, "Z", 0x1, NULL, NULL },
    { "resetNoFire", NULL, "V", 0x4, NULL, NULL },
    { "setScaleNoCallToSettingsChangedWithDouble:", "setScaleNoCallToSettingsChanged", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "zscale_", NULL, 0x2, "D", NULL, NULL,  },
    { "zZero_", NULL, 0x2, "D", NULL, NULL,  },
    { "a_", NULL, 0x2, "D", NULL, NULL,  },
    { "b_", NULL, 0x2, "D", NULL, NULL,  },
    { "useClippingCube__", "useClippingCube", 0x2, "Z", NULL, NULL,  },
    { "showClippingCube__", "showClippingCube", 0x2, "Z", NULL, NULL,  },
    { "clippingReduction_", NULL, 0x2, "I", NULL, NULL,  },
    { "showPlate_", NULL, 0x2, "Z", NULL, NULL,  },
    { "projection_", NULL, 0x2, "I", NULL, NULL,  },
    { "projectionPerspectiveEyeDistance_", NULL, 0x2, "I", NULL, NULL,  },
    { "PROJECTION_PERSPECTIVE_EYE_DISTANCE_DEFAULT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_PERSPECTIVE_EYE_DISTANCE_DEFAULT },
    { "EYE_SEP_DEFAULT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonMainSettingsEuclidianSettings3D_EYE_SEP_DEFAULT },
    { "eyeSep_", NULL, 0x2, "I", NULL, NULL,  },
    { "PROJECTION_OBLIQUE_ANGLE_DEFAULT_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_OBLIQUE_ANGLE_DEFAULT },
    { "PROJECTION_OBLIQUE_FACTOR_DEFAULT_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_OBLIQUE_FACTOR_DEFAULT },
    { "projectionObliqueAngle_", NULL, 0x2, "D", NULL, NULL,  },
    { "projectionObliqueFactor_", NULL, 0x2, "D", NULL, NULL,  },
    { "yAxisVertical_", NULL, 0x2, "Z", NULL, NULL,  },
    { "useLight_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMainSettingsEuclidianSettings3D = { 2, "EuclidianSettings3D", "org.geogebra.common.main.settings", NULL, 0x1, 36, methods, 19, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonMainSettingsEuclidianSettings3D;
}

@end

void OrgGeogebraCommonMainSettingsEuclidianSettings3D_initWithOrgGeogebraCommonMainSettingsEuclidianSettings_(OrgGeogebraCommonMainSettingsEuclidianSettings3D *self, OrgGeogebraCommonMainSettingsEuclidianSettings *euclidianSettings1) {
  OrgGeogebraCommonMainSettingsEuclidianSettings_initWithOrgGeogebraCommonMainSettingsEuclidianSettings_(self, euclidianSettings1);
  self->zZero_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_ZZERO_SCENE_STANDARD;
  self->a_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_ANGLE_ROT_OZ;
  self->b_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_ANGLE_ROT_XOY;
  self->useClippingCube__ = YES;
  self->showClippingCube__ = YES;
  self->clippingReduction_ = 1;
  self->showPlate_ = YES;
  self->projectionPerspectiveEyeDistance_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_PERSPECTIVE_EYE_DISTANCE_DEFAULT;
  self->eyeSep_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_EYE_SEP_DEFAULT;
  self->projectionObliqueAngle_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_OBLIQUE_ANGLE_DEFAULT;
  self->projectionObliqueFactor_ = OrgGeogebraCommonMainSettingsEuclidianSettings3D_PROJECTION_OBLIQUE_FACTOR_DEFAULT;
  self->yAxisVertical_ = NO;
  self->useLight_ = YES;
  [self setXscaleWithDouble:50];
  [self setYscaleWithDouble:50];
  [self setZscaleWithDouble:50];
  self->xZero_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_XZERO_SCENE_STANDARD;
  self->yZero_ = OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_XZERO_SCENE_STANDARD;
}

OrgGeogebraCommonMainSettingsEuclidianSettings3D *new_OrgGeogebraCommonMainSettingsEuclidianSettings3D_initWithOrgGeogebraCommonMainSettingsEuclidianSettings_(OrgGeogebraCommonMainSettingsEuclidianSettings *euclidianSettings1) {
  OrgGeogebraCommonMainSettingsEuclidianSettings3D *self = [OrgGeogebraCommonMainSettingsEuclidianSettings3D alloc];
  OrgGeogebraCommonMainSettingsEuclidianSettings3D_initWithOrgGeogebraCommonMainSettingsEuclidianSettings_(self, euclidianSettings1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMainSettingsEuclidianSettings3D)
