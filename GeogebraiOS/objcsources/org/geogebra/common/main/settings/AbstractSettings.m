//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/main/settings/AbstractSettings.java
//


#include "J2ObjC_source.h"
#include "java/util/LinkedList.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/settings/AbstractSettings.h"
#include "org/geogebra/common/main/settings/SettingListener.h"

@interface OrgGeogebraCommonMainSettingsAbstractSettings () {
 @public
  jboolean isBatch_;
  jboolean settingsChanged_;
  JavaUtilLinkedList *listeners_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonMainSettingsAbstractSettings, listeners_, JavaUtilLinkedList *)

__attribute__((unused)) static void OrgGeogebraCommonMainSettingsAbstractSettings_settingChanged(OrgGeogebraCommonMainSettingsAbstractSettings *self);

@implementation OrgGeogebraCommonMainSettingsAbstractSettings

- (instancetype)init {
  OrgGeogebraCommonMainSettingsAbstractSettings_init(self);
  return self;
}

- (instancetype)initWithJavaUtilLinkedList:(JavaUtilLinkedList *)listeners {
  OrgGeogebraCommonMainSettingsAbstractSettings_initWithJavaUtilLinkedList_(self, listeners);
  return self;
}

- (void)setListenersWithJavaUtilLinkedList:(JavaUtilLinkedList *)listeners {
  OrgGeogebraCommonMainSettingsAbstractSettings_set_listeners_(self, listeners);
}

- (void)settingChanged {
  OrgGeogebraCommonMainSettingsAbstractSettings_settingChanged(self);
}

- (void)beginBatch {
  isBatch_ = YES;
  settingsChanged_ = NO;
}

- (void)endBatch {
  if (!isBatch_) {
    OrgGeogebraCommonMainApp_debugWithNSString_(@"Settings: endBatch() called without beginBatch(). Maybe beginBatch() is missing?");
  }
  if (settingsChanged_) {
    for (id<OrgGeogebraCommonMainSettingsSettingListener> __strong listener in nil_chk(listeners_)) {
      [((id<OrgGeogebraCommonMainSettingsSettingListener>) nil_chk(listener)) settingsChangedWithOrgGeogebraCommonMainSettingsAbstractSettings:self];
    }
  }
  isBatch_ = NO;
}

- (void)addListenerWithOrgGeogebraCommonMainSettingsSettingListener:(id<OrgGeogebraCommonMainSettingsSettingListener>)listener {
  [((JavaUtilLinkedList *) nil_chk(listeners_)) addWithId:listener];
}

- (void)removeListenerWithOrgGeogebraCommonMainSettingsSettingListener:(id<OrgGeogebraCommonMainSettingsSettingListener>)listener {
  [((JavaUtilLinkedList *) nil_chk(listeners_)) removeWithId:listener];
}

- (JavaUtilLinkedList *)getListeners {
  return listeners_;
}

- (void)dealloc {
  RELEASE_(listeners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractSettings", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilLinkedList:", "AbstractSettings", NULL, 0x1, NULL, NULL },
    { "setListenersWithJavaUtilLinkedList:", "setListeners", "V", 0x1, NULL, NULL },
    { "settingChanged", NULL, "V", 0x14, NULL, NULL },
    { "beginBatch", NULL, "V", 0x11, NULL, NULL },
    { "endBatch", NULL, "V", 0x11, NULL, NULL },
    { "addListenerWithOrgGeogebraCommonMainSettingsSettingListener:", "addListener", "V", 0x11, NULL, NULL },
    { "removeListenerWithOrgGeogebraCommonMainSettingsSettingListener:", "removeListener", "V", 0x11, NULL, NULL },
    { "getListeners", NULL, "Ljava.util.LinkedList;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "isBatch_", NULL, 0x2, "Z", NULL, NULL,  },
    { "settingsChanged_", NULL, 0x2, "Z", NULL, NULL,  },
    { "listeners_", NULL, 0x2, "Ljava.util.LinkedList;", NULL, "Ljava/util/LinkedList<Lorg/geogebra/common/main/settings/SettingListener;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMainSettingsAbstractSettings = { 2, "AbstractSettings", "org.geogebra.common.main.settings", NULL, 0x401, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonMainSettingsAbstractSettings;
}

@end

void OrgGeogebraCommonMainSettingsAbstractSettings_init(OrgGeogebraCommonMainSettingsAbstractSettings *self) {
  NSObject_init(self);
  OrgGeogebraCommonMainSettingsAbstractSettings_setAndConsume_listeners_(self, new_JavaUtilLinkedList_init());
}

void OrgGeogebraCommonMainSettingsAbstractSettings_initWithJavaUtilLinkedList_(OrgGeogebraCommonMainSettingsAbstractSettings *self, JavaUtilLinkedList *listeners) {
  NSObject_init(self);
  OrgGeogebraCommonMainSettingsAbstractSettings_set_listeners_(self, listeners);
  OrgGeogebraCommonMainSettingsAbstractSettings_settingChanged(self);
}

void OrgGeogebraCommonMainSettingsAbstractSettings_settingChanged(OrgGeogebraCommonMainSettingsAbstractSettings *self) {
  if (self->isBatch_) {
    self->settingsChanged_ = YES;
  }
  else {
    for (id<OrgGeogebraCommonMainSettingsSettingListener> __strong listener in nil_chk(self->listeners_)) {
      [((id<OrgGeogebraCommonMainSettingsSettingListener>) nil_chk(listener)) settingsChangedWithOrgGeogebraCommonMainSettingsAbstractSettings:self];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMainSettingsAbstractSettings)
