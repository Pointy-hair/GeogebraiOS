//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/main/SpreadsheetTableModel.java
//

#ifndef _OrgGeogebraCommonMainSpreadsheetTableModel_H_
#define _OrgGeogebraCommonMainSpreadsheetTableModel_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/UpdateLocationView.h"

@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelModeSetterEnum;
@class OrgGeogebraCommonMainAlgoCellRangeManager;
@class OrgGeogebraCommonMainApp;

@interface OrgGeogebraCommonMainSpreadsheetTableModel : NSObject < OrgGeogebraCommonKernelUpdateLocationView > {
 @public
  OrgGeogebraCommonMainApp *app_;
  jboolean isIniting_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                         withInt:(jint)rows
                                         withInt:(jint)columns;

- (void)addWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)attachView;

- (void)clearView;

- (void)detachView;

- (void)endBatchUpdate;

- (OrgGeogebraCommonMainAlgoCellRangeManager *)getCellRangeManager;

- (jint)getColumnCount;

- (jint)getHighestUsedColumn;

- (jint)getHighestUsedRow;

- (jint)getRowCount;

- (id)getValueAtWithInt:(jint)row
                withInt:(jint)column;

- (jint)getViewID;

- (void)removeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)renameWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)repaintView;

- (void)reset;

- (void)setColumnCountWithInt:(jint)columnCount;

- (void)setModeWithInt:(jint)mode
withOrgGeogebraCommonKernelModeSetterEnum:(OrgGeogebraCommonKernelModeSetterEnum *)m;

- (void)setRowCountWithInt:(jint)rowCount;

- (void)setValueAtWithId:(id)value
                 withInt:(jint)row
                 withInt:(jint)column;

- (void)startBatchUpdate;

- (void)updateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)updateAuxiliaryObjectWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)updateLocationWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)updateVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonMainSpreadsheetTableModel)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonMainSpreadsheetTableModel, app_, OrgGeogebraCommonMainApp *)

FOUNDATION_EXPORT void OrgGeogebraCommonMainSpreadsheetTableModel_initWithOrgGeogebraCommonMainApp_withInt_withInt_(OrgGeogebraCommonMainSpreadsheetTableModel *self, OrgGeogebraCommonMainApp *app, jint rows, jint columns);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonMainSpreadsheetTableModel)

#endif // _OrgGeogebraCommonMainSpreadsheetTableModel_H_
