//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/main/DialogManager.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GPoint.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/EuclidianControllerCompanion.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/EuclidianViewInterfaceCommon.h"
#include "org/geogebra/common/gui/InputHandler.h"
#include "org/geogebra/common/gui/dialog/InputDialog.h"
#include "org/geogebra/common/gui/dialog/TextInputDialog.h"
#include "org/geogebra/common/gui/dialog/handler/ColorChangeHandler.h"
#include "org/geogebra/common/gui/dialog/handler/RedefineInputHandler.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/kernel/geos/Transformable.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/DialogManager.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/main/OptionType.h"
#include "org/geogebra/common/util/AsyncOperation.h"
#include "org/geogebra/common/util/Unicode.h"

@interface OrgGeogebraCommonMainDialogManager () {
 @public
  id oldString_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonMainDialogManager, oldString_, id)

__attribute__((unused)) static void OrgGeogebraCommonMainDialogManager_showTextDialogWithOrgGeogebraCommonKernelGeosGeoText_(OrgGeogebraCommonMainDialogManager *self, OrgGeogebraCommonKernelGeosGeoText *text);

@implementation OrgGeogebraCommonMainDialogManager

- (instancetype)init {
  OrgGeogebraCommonMainDialogManager_init(self);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  OrgGeogebraCommonMainDialogManager_initWithOrgGeogebraCommonMainApp_(self, app);
  return self;
}

- (jboolean)showFunctionInspectorWithOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)geoFunction {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)showDataSourceDialogWithInt:(jint)mode
                        withBoolean:(jboolean)doAutoLoadSelectedGeos {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showRedefineDialogWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                        withBoolean:(jboolean)allowTextDialog {
  if (allowTextDialog && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoText] && ![geo isTextCommand]) {
    OrgGeogebraCommonMainDialogManager_showTextDialogWithOrgGeogebraCommonKernelGeosGeoText_(self, (OrgGeogebraCommonKernelGeosGeoText *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoText class]));
    return;
  }
  NSString *str = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getRedefineStringWithBoolean:NO withBoolean:YES];
  id<OrgGeogebraCommonGuiInputHandler> handler = new_OrgGeogebraCommonGuiDialogHandlerRedefineInputHandler_initWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonKernelGeosGeoElement_withNSString_(app_, geo, str);
  (void) [self newInputDialogWithOrgGeogebraCommonMainApp:app_ withNSString:[geo getNameDescription] withNSString:[((OrgGeogebraCommonMainApp *) nil_chk(app_)) getPlainWithNSString:@"Redefine"] withNSString:str withBoolean:YES withOrgGeogebraCommonGuiInputHandler:handler withOrgGeogebraCommonKernelGeosGeoElement:geo];
}

- (OrgGeogebraCommonGuiDialogInputDialog *)newInputDialogWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                                                         withNSString:(NSString *)message
                                                                         withNSString:(NSString *)title
                                                                         withNSString:(NSString *)initString
                                                                          withBoolean:(jboolean)autoComplete
                                                 withOrgGeogebraCommonGuiInputHandler:(id<OrgGeogebraCommonGuiInputHandler>)handler
                                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)showNumberInputDialogSegmentFixedWithNSString:(NSString *)menu
        withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showNumberInputDialogAngleFixedWithNSString:(NSString *)menu
withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)selectedSegments
 withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)selectedPoints
     withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeos
  withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  OrgGeogebraCommonMainDialogManager_doAngleFixedWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonKernelGeosGeoNumberValue_withBoolean_withOrgGeogebraCommonEuclidianEuclidianController_([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel], selectedSegments, selectedPoints, selGeos, [self getNumberWithOrgGeogebraCommonKernelKernel:[app_ getKernel] withNSString:JreStrcat("$C$", menu, ' ', [app_ getPlainWithNSString:@"Length"]) withNSString:@""], NO, ec);
}

+ (void)doAngleFixedWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
 withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)segments
   withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
       withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeo2s
        withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)num
                                          withBoolean:(jboolean)clockWise
    withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  OrgGeogebraCommonMainDialogManager_doAngleFixedWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonKernelGeosGeoNumberValue_withBoolean_withOrgGeogebraCommonEuclidianEuclidianController_(kernel, segments, points, selGeo2s, num, clockWise, ec);
}

- (jboolean)showSliderCreationDialogWithInt:(jint)x
                                    withInt:(jint)y {
  OrgGeogebraCommonKernelKernel *kernel = [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getKernel];
  jboolean isAngle = ![self confirmWithNSString:@"OK for number, Cancel for angle"];
  OrgGeogebraCommonKernelGeosGeoNumeric *slider = OrgGeogebraCommonKernelGeosGeoNumeric_setSliderFromDefaultWithOrgGeogebraCommonKernelGeosGeoNumeric_withBoolean_(isAngle ? new_OrgGeogebraCommonKernelGeosGeoAngle_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getConstruction]) : new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getConstruction]), isAngle);
  OrgGeogebraCommonKernelStringTemplate *tmpl = OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_();
  NSString *minStr = isAngle ? JreStrcat("$$", [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) formatWithDouble:JavaLangMath_toDegreesWithDouble_([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) getIntervalMin]) withOrgGeogebraCommonKernelStringTemplate:tmpl], OrgGeogebraCommonUtilUnicode_get_DEGREE_()) : [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) formatWithDouble:[((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) getIntervalMin] withOrgGeogebraCommonKernelStringTemplate:tmpl];
  NSString *maxStr = isAngle ? JreStrcat("$$", [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) formatWithDouble:JavaLangMath_toDegreesWithDouble_([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) getIntervalMax]) withOrgGeogebraCommonKernelStringTemplate:tmpl], OrgGeogebraCommonUtilUnicode_get_DEGREE_()) : [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) formatWithDouble:[((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) getIntervalMax] withOrgGeogebraCommonKernelStringTemplate:tmpl];
  NSString *incStr = isAngle ? JreStrcat("$$", [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) formatWithDouble:JavaLangMath_toDegreesWithDouble_([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) getAnimationStep]) withOrgGeogebraCommonKernelStringTemplate:tmpl], OrgGeogebraCommonUtilUnicode_get_DEGREE_()) : [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) formatWithDouble:[((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) getAnimationStep] withOrgGeogebraCommonKernelStringTemplate:tmpl];
  id<OrgGeogebraCommonKernelArithmeticNumberValue> min = [self getNumberWithOrgGeogebraCommonKernelKernel:kernel withNSString:@"Enter minimum" withNSString:minStr];
  id<OrgGeogebraCommonKernelArithmeticNumberValue> max = [self getNumberWithOrgGeogebraCommonKernelKernel:kernel withNSString:@"Enter maximum" withNSString:maxStr];
  id<OrgGeogebraCommonKernelArithmeticNumberValue> increment = [self getNumberWithOrgGeogebraCommonKernelKernel:kernel withNSString:@"Enter increment" withNSString:incStr];
  if (min != nil) [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) setIntervalMinWithOrgGeogebraCommonKernelArithmeticNumberValue:min];
  if (max != nil) [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) setIntervalMaxWithOrgGeogebraCommonKernelArithmeticNumberValue:max];
  if (increment != nil) [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) setAnimationStepWithOrgGeogebraCommonKernelArithmeticNumberValue:increment];
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slider)) setLabelWithNSString:nil];
  [slider setValueWithDouble:isAngle ? 45 * JavaLangMath_PI / 180 : 1];
  [slider setSliderLocationWithDouble:x withDouble:y withBoolean:YES];
  [slider setEuclidianVisibleWithBoolean:YES];
  [slider setLabelModeWithInt:OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME_VALUE];
  [slider setLabelVisibleWithBoolean:YES];
  [slider update];
  [app_ storeUndoInfo];
  return YES;
}

- (jboolean)confirmWithNSString:(NSString *)string {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)showNumberInputDialogRotateWithNSString:(NSString *)menu
 withOrgGeogebraCommonKernelGeosGeoPolygonArray:(IOSObjectArray *)selectedPolygons
withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)selectedPoints
 withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeos
withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  NSString *inputString = [self promptWithNSString:JreStrcat("$C$", menu, ' ', [((OrgGeogebraCommonMainApp *) nil_chk(app_)) getPlainWithNSString:@"Angle"]) withNSString:defaultAngle_];
  defaultAngle_ = OrgGeogebraCommonMainDialogManager_rotateObjectWithOrgGeogebraCommonMainApp_withNSString_withBoolean_withOrgGeogebraCommonKernelGeosGeoPolygonArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonEuclidianEuclidianController_(app_, inputString, NO, selectedPolygons, selectedPoints, selGeos, ec);
}

- (void)showNumberInputDialogDilateWithNSString:(NSString *)menu
 withOrgGeogebraCommonKernelGeosGeoPolygonArray:(IOSObjectArray *)selectedPolygons
withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)selectedPoints
 withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeos
withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showNumberInputDialogRegularPolygonWithNSString:(NSString *)menu
      withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec
          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint1
          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showBooleanCheckboxCreationDialogWithOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc
                              withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)bool_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showNumberInputDialogCirclePointRadiusWithNSString:(NSString *)title
             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPointND
               withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showNumberInputDialogWithNSString:(NSString *)title
                             withNSString:(NSString *)message
                             withNSString:(NSString *)initText
  withOrgGeogebraCommonUtilAsyncOperation:(OrgGeogebraCommonUtilAsyncOperation *)callback {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showNumberInputDialogWithNSString:(NSString *)title
                             withNSString:(NSString *)message
                             withNSString:(NSString *)initText
                              withBoolean:(jboolean)changingSign
                             withNSString:(NSString *)checkBoxText
  withOrgGeogebraCommonUtilAsyncOperation:(OrgGeogebraCommonUtilAsyncOperation *)callback {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showAngleInputDialogWithNSString:(NSString *)title
                            withNSString:(NSString *)message
                            withNSString:(NSString *)initText
 withOrgGeogebraCommonUtilAsyncOperation:(OrgGeogebraCommonUtilAsyncOperation *)callback {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)showButtonCreationDialogWithInt:(jint)x
                                    withInt:(jint)y
                                withBoolean:(jboolean)textfield {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (NSString *)rotateObjectWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                          withNSString:(NSString *)inputText
                                           withBoolean:(jboolean)clockwise
        withOrgGeogebraCommonKernelGeosGeoPolygonArray:(IOSObjectArray *)polys
    withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
        withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeos
     withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  return OrgGeogebraCommonMainDialogManager_rotateObjectWithOrgGeogebraCommonMainApp_withNSString_withBoolean_withOrgGeogebraCommonKernelGeosGeoPolygonArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonEuclidianEuclidianController_(app, inputText, clockwise, polys, points, selGeos, ec);
}

+ (jboolean)makeRegularPolygonWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
         withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec
                                              withNSString:(NSString *)inputString
             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint1
             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint2 {
  return OrgGeogebraCommonMainDialogManager_makeRegularPolygonWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonEuclidianEuclidianController_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(app, ec, inputString, geoPoint1, geoPoint2);
}

- (id<OrgGeogebraCommonKernelGeosGeoNumberValue>)getNumberWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                                                               withNSString:(NSString *)message
                                                                               withNSString:(NSString *)def {
  OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getConstruction];
  jboolean oldVal = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) isSuppressLabelsActive];
  [cons setSuppressLabelCreationWithBoolean:YES];
  NSString *str = [self promptWithNSString:message withNSString:def];
  id<OrgGeogebraCommonKernelGeosGeoNumberValue> result = [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel getAlgebraProcessor])) evaluateToNumericWithNSString:str withBoolean:YES];
  [cons setSuppressLabelCreationWithBoolean:oldVal];
  return result;
}

- (NSString *)promptWithNSString:(NSString *)message
                    withNSString:(NSString *)def {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)closeAll {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showRenameDialogWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                      withBoolean:(jboolean)b
                                                     withNSString:(NSString *)label
                                                      withBoolean:(jboolean)c {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showPropertiesDialog {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showPropertiesDialogWithJavaUtilArrayList:(JavaUtilArrayList *)geos {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showPropertiesDialogWithOrgGeogebraCommonMainOptionTypeEnum:(OrgGeogebraCommonMainOptionTypeEnum *)type
                                              withJavaUtilArrayList:(JavaUtilArrayList *)geos {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showToolbarConfigDialog {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showLogInDialog {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showLogOutDialog {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (jboolean)doDilateWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
     withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)num
   withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
       withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeos
    withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  return OrgGeogebraCommonMainDialogManager_doDilateWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonEuclidianEuclidianController_(kernel, num, points, selGeos, ec);
}

+ (void)doSegmentFixedWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint1
       withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)num {
  OrgGeogebraCommonMainDialogManager_doSegmentFixedWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(kernel, geoPoint1, num);
}

- (void)showTextDialogWithOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)text {
  OrgGeogebraCommonMainDialogManager_showTextDialogWithOrgGeogebraCommonKernelGeosGeoText_(self, text);
}

- (void)showTextCreationDialogWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
                                                                withBoolean:(jboolean)rw {
  [self showTextDialogWithOrgGeogebraCommonKernelGeosGeoText:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:startPoint withBoolean:rw];
}

- (void)openToolHelp {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)showTextDialogWithOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)text
               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
                                                 withBoolean:(jboolean)rw {
  [((OrgGeogebraCommonMainApp *) nil_chk(app_)) setWaitCursor];
  if (textInputDialog_ == nil) {
    textInputDialog_ = [self createTextDialogWithOrgGeogebraCommonKernelGeosGeoText:text withOrgGeogebraCommonKernelKernelNDGeoPointND:startPoint withBoolean:rw];
  }
  else {
    [textInputDialog_ reInitEditorWithOrgGeogebraCommonKernelGeosGeoText:text withOrgGeogebraCommonKernelKernelNDGeoPointND:startPoint withBoolean:rw];
  }
  [((id<OrgGeogebraCommonGuiDialogTextInputDialog>) nil_chk(textInputDialog_)) setVisibleWithBoolean:YES];
  [app_ setDefaultCursor];
}

- (id<OrgGeogebraCommonGuiDialogTextInputDialog>)createTextDialogWithOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)text
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
                                                                                            withBoolean:(jboolean)rw {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)showNumberInputDialogSpherePointRadiusWithNSString:(NSString *)title
             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint {
}

- (void)showNumberInputDialogConeTwoPointsRadiusWithNSString:(NSString *)title
               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b {
}

- (void)showNumberInputDialogCylinderTwoPointsRadiusWithNSString:(NSString *)title
                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b {
}

- (void)showNumberInputDialogCirclePointDirectionRadiusWithNSString:(NSString *)title
                      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint
                  withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)forAxis {
}

- (void)showNumberInputDialogRotateWithNSString:(NSString *)title
 withOrgGeogebraCommonKernelGeosGeoPolygonArray:(IOSObjectArray *)polys
withOrgGeogebraCommonKernelKernelNDGeoLineNDArray:(IOSObjectArray *)selectedLines
 withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeos
withOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
}

- (void)showColorChooserDialogWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)originalColor
     withOrgGeogebraCommonGuiDialogHandlerColorChangeHandler:(id<OrgGeogebraCommonGuiDialogHandlerColorChangeHandler>)handler {
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DialogManager", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonMainApp:", "DialogManager", NULL, 0x1, NULL, NULL },
    { "showFunctionInspectorWithOrgGeogebraCommonKernelGeosGeoFunction:", "showFunctionInspector", "Z", 0x401, NULL, NULL },
    { "showDataSourceDialogWithInt:withBoolean:", "showDataSourceDialog", "V", 0x401, NULL, NULL },
    { "showRedefineDialogWithOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "showRedefineDialog", "V", 0x1, NULL, NULL },
    { "newInputDialogWithOrgGeogebraCommonMainApp:withNSString:withNSString:withNSString:withBoolean:withOrgGeogebraCommonGuiInputHandler:withOrgGeogebraCommonKernelGeosGeoElement:", "newInputDialog", "Lorg.geogebra.common.gui.dialog.InputDialog;", 0x401, NULL, NULL },
    { "showNumberInputDialogSegmentFixedWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "showNumberInputDialogSegmentFixed", "V", 0x401, NULL, NULL },
    { "showNumberInputDialogAngleFixedWithNSString:withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withOrgGeogebraCommonKernelGeosGeoElementArray:withOrgGeogebraCommonEuclidianEuclidianController:", "showNumberInputDialogAngleFixed", "V", 0x1, NULL, NULL },
    { "doAngleFixedWithOrgGeogebraCommonKernelKernel:withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withOrgGeogebraCommonKernelGeosGeoElementArray:withOrgGeogebraCommonKernelGeosGeoNumberValue:withBoolean:withOrgGeogebraCommonEuclidianEuclidianController:", "doAngleFixed", "V", 0x9, NULL, NULL },
    { "showSliderCreationDialogWithInt:withInt:", "showSliderCreationDialog", "Z", 0x1, NULL, NULL },
    { "confirmWithNSString:", "confirm", "Z", 0x404, NULL, NULL },
    { "showNumberInputDialogRotateWithNSString:withOrgGeogebraCommonKernelGeosGeoPolygonArray:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withOrgGeogebraCommonKernelGeosGeoElementArray:withOrgGeogebraCommonEuclidianEuclidianController:", "showNumberInputDialogRotate", "V", 0x1, NULL, NULL },
    { "showNumberInputDialogDilateWithNSString:withOrgGeogebraCommonKernelGeosGeoPolygonArray:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withOrgGeogebraCommonKernelGeosGeoElementArray:withOrgGeogebraCommonEuclidianEuclidianController:", "showNumberInputDialogDilate", "V", 0x401, NULL, NULL },
    { "showNumberInputDialogRegularPolygonWithNSString:withOrgGeogebraCommonEuclidianEuclidianController:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "showNumberInputDialogRegularPolygon", "V", 0x401, NULL, NULL },
    { "showBooleanCheckboxCreationDialogWithOrgGeogebraCommonAwtGPoint:withOrgGeogebraCommonKernelGeosGeoBoolean:", "showBooleanCheckboxCreationDialog", "V", 0x401, NULL, NULL },
    { "showNumberInputDialogCirclePointRadiusWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonEuclidianEuclidianView:", "showNumberInputDialogCirclePointRadius", "V", 0x401, NULL, NULL },
    { "showNumberInputDialogWithNSString:withNSString:withNSString:withOrgGeogebraCommonUtilAsyncOperation:", "showNumberInputDialog", "V", 0x401, NULL, NULL },
    { "showNumberInputDialogWithNSString:withNSString:withNSString:withBoolean:withNSString:withOrgGeogebraCommonUtilAsyncOperation:", "showNumberInputDialog", "V", 0x401, NULL, NULL },
    { "showAngleInputDialogWithNSString:withNSString:withNSString:withOrgGeogebraCommonUtilAsyncOperation:", "showAngleInputDialog", "V", 0x401, NULL, NULL },
    { "showButtonCreationDialogWithInt:withInt:withBoolean:", "showButtonCreationDialog", "Z", 0x401, NULL, NULL },
    { "rotateObjectWithOrgGeogebraCommonMainApp:withNSString:withBoolean:withOrgGeogebraCommonKernelGeosGeoPolygonArray:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withOrgGeogebraCommonKernelGeosGeoElementArray:withOrgGeogebraCommonEuclidianEuclidianController:", "rotateObject", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "makeRegularPolygonWithOrgGeogebraCommonMainApp:withOrgGeogebraCommonEuclidianEuclidianController:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "makeRegularPolygon", "Z", 0x9, NULL, NULL },
    { "getNumberWithOrgGeogebraCommonKernelKernel:withNSString:withNSString:", "getNumber", "Lorg.geogebra.common.kernel.geos.GeoNumberValue;", 0x4, NULL, NULL },
    { "promptWithNSString:withNSString:", "prompt", "Ljava.lang.String;", 0x404, NULL, NULL },
    { "closeAll", NULL, "V", 0x401, NULL, NULL },
    { "showRenameDialogWithOrgGeogebraCommonKernelGeosGeoElement:withBoolean:withNSString:withBoolean:", "showRenameDialog", "V", 0x401, NULL, NULL },
    { "showPropertiesDialog", NULL, "V", 0x401, NULL, NULL },
    { "showPropertiesDialogWithJavaUtilArrayList:", "showPropertiesDialog", "V", 0x401, NULL, NULL },
    { "showPropertiesDialogWithOrgGeogebraCommonMainOptionTypeEnum:withJavaUtilArrayList:", "showPropertiesDialog", "V", 0x401, NULL, NULL },
    { "showToolbarConfigDialog", NULL, "V", 0x401, NULL, NULL },
    { "showLogInDialog", NULL, "V", 0x401, NULL, NULL },
    { "showLogOutDialog", NULL, "V", 0x401, NULL, NULL },
    { "doDilateWithOrgGeogebraCommonKernelKernel:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withOrgGeogebraCommonKernelGeosGeoElementArray:withOrgGeogebraCommonEuclidianEuclidianController:", "doDilate", "Z", 0x9, NULL, NULL },
    { "doSegmentFixedWithOrgGeogebraCommonKernelKernel:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "doSegmentFixed", "V", 0x9, NULL, NULL },
    { "showTextDialogWithOrgGeogebraCommonKernelGeosGeoText:", "showTextDialog", "V", 0x11, NULL, NULL },
    { "showTextCreationDialogWithOrgGeogebraCommonKernelKernelNDGeoPointND:withBoolean:", "showTextCreationDialog", "V", 0x11, NULL, NULL },
    { "openToolHelp", NULL, "V", 0x401, NULL, NULL },
    { "showTextDialogWithOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelKernelNDGeoPointND:withBoolean:", "showTextDialog", "V", 0x4, NULL, NULL },
    { "createTextDialogWithOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonKernelKernelNDGeoPointND:withBoolean:", "createTextDialog", "Lorg.geogebra.common.gui.dialog.TextInputDialog;", 0x401, NULL, NULL },
    { "showNumberInputDialogSpherePointRadiusWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "showNumberInputDialogSpherePointRadius", "V", 0x1, NULL, NULL },
    { "showNumberInputDialogConeTwoPointsRadiusWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "showNumberInputDialogConeTwoPointsRadius", "V", 0x1, NULL, NULL },
    { "showNumberInputDialogCylinderTwoPointsRadiusWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "showNumberInputDialogCylinderTwoPointsRadius", "V", 0x1, NULL, NULL },
    { "showNumberInputDialogCirclePointDirectionRadiusWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "showNumberInputDialogCirclePointDirectionRadius", "V", 0x1, NULL, NULL },
    { "showNumberInputDialogRotateWithNSString:withOrgGeogebraCommonKernelGeosGeoPolygonArray:withOrgGeogebraCommonKernelKernelNDGeoLineNDArray:withOrgGeogebraCommonKernelGeosGeoElementArray:withOrgGeogebraCommonEuclidianEuclidianController:", "showNumberInputDialogRotate", "V", 0x1, NULL, NULL },
    { "showColorChooserDialogWithOrgGeogebraCommonAwtGColor:withOrgGeogebraCommonGuiDialogHandlerColorChangeHandler:", "showColorChooserDialog", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "defaultAngle_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL,  },
    { "app_", NULL, 0x4, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
    { "oldString_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL,  },
    { "textInputDialog_", NULL, 0x4, "Lorg.geogebra.common.gui.dialog.TextInputDialog;", NULL, NULL,  },
    { "oldVal_", NULL, 0x4, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMainDialogManager = { 2, "DialogManager", "org.geogebra.common.main", NULL, 0x401, 45, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonMainDialogManager;
}

@end

void OrgGeogebraCommonMainDialogManager_init(OrgGeogebraCommonMainDialogManager *self) {
  (void) NSObject_init(self);
  self->defaultAngle_ = OrgGeogebraCommonUtilUnicode_get_FORTY_FIVE_DEGREES_();
}

void OrgGeogebraCommonMainDialogManager_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainDialogManager *self, OrgGeogebraCommonMainApp *app) {
  (void) NSObject_init(self);
  self->defaultAngle_ = OrgGeogebraCommonUtilUnicode_get_FORTY_FIVE_DEGREES_();
  self->app_ = app;
}

void OrgGeogebraCommonMainDialogManager_doAngleFixedWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonKernelGeosGeoNumberValue_withBoolean_withOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonKernelKernel *kernel, IOSObjectArray *segments, IOSObjectArray *points, IOSObjectArray *selGeo2s, id<OrgGeogebraCommonKernelGeosGeoNumberValue> num, jboolean clockWise, OrgGeogebraCommonEuclidianEuclidianController *ec) {
  OrgGeogebraCommonMainDialogManager_initialize();
  OrgGeogebraCommonKernelGeosGeoAngle *angle;
  if (((IOSObjectArray *) nil_chk(points))->size_ == 2) {
    angle = [((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec)) getCompanion])) createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points, 0) withOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points, 1) withOrgGeogebraCommonKernelGeosGeoNumberValue:num withBoolean:clockWise];
  }
  else {
    angle = [((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec)) getCompanion])) createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:[((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(IOSObjectArray_Get(nil_chk(segments), 0))) getEndPoint] withOrgGeogebraCommonKernelKernelNDGeoPointND:[((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(IOSObjectArray_Get(segments, 0))) getStartPoint] withOrgGeogebraCommonKernelGeosGeoNumberValue:num withBoolean:clockWise];
  }
  [((OrgGeogebraCommonMainApp *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getApplication])) storeUndoInfo];
}

NSString *OrgGeogebraCommonMainDialogManager_rotateObjectWithOrgGeogebraCommonMainApp_withNSString_withBoolean_withOrgGeogebraCommonKernelGeosGeoPolygonArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonMainApp *app, NSString *inputText, jboolean clockwise, IOSObjectArray *polys, IOSObjectArray *points, IOSObjectArray *selGeos, OrgGeogebraCommonEuclidianEuclidianController *ec) {
  OrgGeogebraCommonMainDialogManager_initialize();
  NSString *defaultRotateAngle = OrgGeogebraCommonUtilUnicode_get_FORTY_FIVE_DEGREES_();
  NSString *angleText = inputText;
  OrgGeogebraCommonKernelKernel *kernel = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel];
  OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getConstruction];
  jboolean oldVal = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) isSuppressLabelsActive];
  [cons setSuppressLabelCreationWithBoolean:YES];
  if ([((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec)) getCompanion])) viewOrientationForClockwiseWithBoolean:clockwise]) {
    inputText = JreStrcat("$$C", @"-(", inputText, ')');
  }
  IOSObjectArray *result = [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel getAlgebraProcessor])) processAlgebraCommandWithNSString:inputText withBoolean:NO];
  [cons setSuppressLabelCreationWithBoolean:oldVal];
  jboolean success = result != nil && [OrgGeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(result, 0)];
  if (success) {
    id<OrgGeogebraCommonKernelGeosGeoNumberValue> num = (id<OrgGeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(nil_chk(result), 0), @protocol(OrgGeogebraCommonKernelGeosGeoNumberValue));
    if ([((NSString *) nil_chk(angleText)) hasSuffix:OrgGeogebraCommonUtilUnicode_get_DEGREE_()]) defaultRotateAngle = angleText;
    if (((IOSObjectArray *) nil_chk(polys))->size_ == 1) {
      IOSObjectArray *geos = [((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([ec getCompanion])) rotateByAngleWithOrgGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(polys, 0) withOrgGeogebraCommonKernelGeosGeoNumberValue:num withOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(nil_chk(points), 0)];
      if (geos != nil) {
        [app storeUndoInfo];
        [ec memorizeJustCreatedGeosWithOrgGeogebraCommonKernelGeosGeoElementArray:geos];
      }
      return defaultRotateAngle;
    }
    JavaUtilArrayList *ret = new_JavaUtilArrayList_init();
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(selGeos))->size_; i++) {
      if (IOSObjectArray_Get(selGeos, i) != IOSObjectArray_Get(nil_chk(points), 0)) {
        if ([OrgGeogebraCommonKernelGeosTransformable_class_() isInstance:IOSObjectArray_Get(selGeos, i)]) {
          [ret addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_([((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([ec getCompanion])) rotateByAngleWithOrgGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(selGeos, i) withOrgGeogebraCommonKernelGeosGeoNumberValue:num withOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points, 0)])];
        }
        else if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(selGeos, i))) isGeoPolygon]) {
          [ret addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_([((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([ec getCompanion])) rotateByAngleWithOrgGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(selGeos, i) withOrgGeogebraCommonKernelGeosGeoNumberValue:num withOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points, 0)])];
        }
      }
    }
    if (![ret isEmpty]) {
      [app storeUndoInfo];
      [ec memorizeJustCreatedGeosWithJavaUtilArrayList:ret];
    }
  }
  else {
    [app showErrorWithNSString:[((OrgGeogebraCommonMainLocalization *) nil_chk([app getLocalization])) getErrorWithNSString:@"NumberExpected"]];
  }
  return success ? defaultRotateAngle : nil;
}

jboolean OrgGeogebraCommonMainDialogManager_makeRegularPolygonWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonEuclidianEuclidianController_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonMainApp *app, OrgGeogebraCommonEuclidianEuclidianController *ec, NSString *inputString, id<OrgGeogebraCommonKernelKernelNDGeoPointND> geoPoint1, id<OrgGeogebraCommonKernelKernelNDGeoPointND> geoPoint2) {
  OrgGeogebraCommonMainDialogManager_initialize();
  if (inputString == nil || [@"" isEqual:inputString]) {
    return NO;
  }
  OrgGeogebraCommonKernelKernel *kernel = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel];
  OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getConstruction];
  jboolean oldVal = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) isSuppressLabelsActive];
  [cons setSuppressLabelCreationWithBoolean:YES];
  IOSObjectArray *result = [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel getAlgebraProcessor])) processAlgebraCommandWithNSString:inputString withBoolean:NO];
  [cons setSuppressLabelCreationWithBoolean:oldVal];
  jboolean success = result != nil && [OrgGeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(result, 0)];
  if (!success) {
    [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel getAlgebraProcessor])) showErrorWithNSString:@"NumberExpected"];
    return NO;
  }
  IOSObjectArray *geos = [((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec)) getCompanion])) regularPolygonWithOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint1 withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint2 withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(nil_chk(result), 0), @protocol(OrgGeogebraCommonKernelGeosGeoNumberValue))];
  IOSObjectArray *onlypoly = [IOSObjectArray newArrayWithObjects:(id[]){ nil } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  if (geos != nil) {
    (void) IOSObjectArray_Set(onlypoly, 0, IOSObjectArray_Get(geos, 0));
    [app storeUndoInfo];
    [ec memorizeJustCreatedGeosWithOrgGeogebraCommonKernelGeosGeoElementArray:onlypoly];
  }
  return YES;
}

jboolean OrgGeogebraCommonMainDialogManager_doDilateWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelGeosGeoElementArray_withOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelArithmeticNumberValue> num, IOSObjectArray *points, IOSObjectArray *selGeos, OrgGeogebraCommonEuclidianEuclidianController *ec) {
  OrgGeogebraCommonMainDialogManager_initialize();
  if (((IOSObjectArray *) nil_chk(selGeos))->size_ > 0) {
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> point = IOSObjectArray_Get(nil_chk(points), 0);
    JavaUtilArrayList *ret = new_JavaUtilArrayList_init();
    for (jint i = 0; i < selGeos->size_; i++) {
      if (IOSObjectArray_Get(selGeos, i) != point) {
        if (([OrgGeogebraCommonKernelGeosTransformable_class_() isInstance:IOSObjectArray_Get(selGeos, i)]) || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(selGeos, i))) isGeoList]) [ret addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_([((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec)) getCompanion])) dilateFromPointWithOrgGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(selGeos, i) withOrgGeogebraCommonKernelArithmeticNumberValue:num withOrgGeogebraCommonKernelKernelNDGeoPointND:point])];
      }
    }
    if (![ret isEmpty]) {
      [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec)) memorizeJustCreatedGeosWithJavaUtilArrayList:ret];
      [((OrgGeogebraCommonMainApp *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getApplication])) storeUndoInfo];
      return YES;
    }
  }
  return NO;
}

void OrgGeogebraCommonMainDialogManager_doSegmentFixedWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelKernel *kernel, id<OrgGeogebraCommonKernelKernelNDGeoPointND> geoPoint1, id<OrgGeogebraCommonKernelArithmeticNumberValue> num) {
  OrgGeogebraCommonMainDialogManager_initialize();
  IOSObjectArray *segment = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getAlgoDispatcher])) SegmentWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint1 withOrgGeogebraCommonKernelArithmeticNumberValue:num];
  IOSObjectArray *onlysegment = [IOSObjectArray newArrayWithObjects:(id[]){ nil } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  if (segment != nil) {
    (void) IOSObjectArray_Set(onlysegment, 0, IOSObjectArray_Get(segment, 0));
    [((OrgGeogebraCommonMainApp *) nil_chk([kernel getApplication])) storeUndoInfo];
    [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk([kernel getApplication])) getActiveEuclidianView])) getEuclidianController])) memorizeJustCreatedGeosWithOrgGeogebraCommonKernelGeosGeoElementArray:onlysegment];
  }
}

void OrgGeogebraCommonMainDialogManager_showTextDialogWithOrgGeogebraCommonKernelGeosGeoText_(OrgGeogebraCommonMainDialogManager *self, OrgGeogebraCommonKernelGeosGeoText *text) {
  [self showTextDialogWithOrgGeogebraCommonKernelGeosGeoText:text withOrgGeogebraCommonKernelKernelNDGeoPointND:nil withBoolean:YES];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMainDialogManager)
