//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/cas/giac/Ggb2giac.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Map.h"
#include "java/util/TreeMap.h"
#include "org/geogebra/common/cas/giac/Ggb2giac.h"

static id<JavaUtilMap> OrgGeogebraCommonCasGiacGgb2giac_commandMap_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonCasGiacGgb2giac, commandMap_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonCasGiacGgb2giac, commandMap_, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonCasGiacGgb2giac)

@implementation OrgGeogebraCommonCasGiacGgb2giac

+ (void)pWithNSString:(NSString *)signature
         withNSString:(NSString *)casSyntax {
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(signature, casSyntax);
}

+ (id<JavaUtilMap>)getMap {
  return OrgGeogebraCommonCasGiacGgb2giac_getMap();
}

- (instancetype)init {
  OrgGeogebraCommonCasGiacGgb2giac_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonCasGiacGgb2giac class]) {
    JreStrongAssignAndConsume(&OrgGeogebraCommonCasGiacGgb2giac_commandMap_, nil, new_JavaUtilTreeMap_init());
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonCasGiacGgb2giac)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "pWithNSString:withNSString:", "p", "V", 0x9, NULL, NULL },
    { "getMap", NULL, "Ljava.util.Map;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "commandMap_", NULL, 0xa, "Ljava.util.Map;", &OrgGeogebraCommonCasGiacGgb2giac_commandMap_, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonCasGiacGgb2giac = { 2, "Ggb2giac", "org.geogebra.common.cas.giac", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonCasGiacGgb2giac;
}

@end

void OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(NSString *signature, NSString *casSyntax) {
  OrgGeogebraCommonCasGiacGgb2giac_initialize();
  [((id<JavaUtilMap>) nil_chk(OrgGeogebraCommonCasGiacGgb2giac_commandMap_)) putWithId:signature withId:[((NSString *) nil_chk(casSyntax)) replace:@"_" withSequence:@"\\_"]];
}

id<JavaUtilMap> OrgGeogebraCommonCasGiacGgb2giac_getMap() {
  OrgGeogebraCommonCasGiacGgb2giac_initialize();
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Append.2", @"append(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Binomial.2", @"simplify(binomial(%0,%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"BinomialDist.4", @"[[[ggbbinarg0:=%0], [ggbbinarg1:=%1], [ggbbinarg2:=%2]],if %3=true then binomial_cdf(ggbbinarg0,ggbbinarg1,ggbbinarg2) else binomial(ggbbinarg0,ggbbinarg1,ggbbinarg2) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Cauchy.3", @"normal(1/2+1/pi*atan(((%2)-(%1))/(%0)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CFactor.1", @"[with_sqrt(0),[ggbcfactans:=%0],[ggbcfactans:=cfactor(ggbcfactans)],with_sqrt(1),ggbcfactans][4]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CFactor.2", @"[with_sqrt(0),[ggbcfactans:=%0],[ggbcfactans:=cfactor(ggbcfactans,%1)],with_sqrt(1),ggbcfactans][4]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CIFactor.1", @"[with_sqrt(1),[ggbcfactans:=%0],[ggbcfactans:=cfactor(ggbcfactans)],ggbcfactans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CIFactor.2", @"[with_sqrt(1),[ggbcfactans:=%0],[ggbcfactans:=cfactor(ggbcfactans,%1)],ggbcfactans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ChiSquared.2", @"igamma(%0/2,%1/2,1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Coefficients.1", @"when(is_polynomial(%0),coeffs(%0),{})");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Coefficients.2", @"coeffs(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CompleteSquare.1", @"canonical_form(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CommonDenominator.2", @"lcm(denom(%0),denom(%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Covariance.2", @"covariance(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Covariance.1", @"normal(covariance(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Cross.2", @"[[[ggbcrossarg0:=%0], [ggbcrossarg1:=%1]],when(is3dpoint(ggbcrossarg0)||is3dpoint(ggbcrossarg1),point(cross(ggbcrossarg0,ggbcrossarg1)),cross(ggbcrossarg0,ggbcrossarg1))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ComplexRoot.1", @"normal(cZeros(%0,x))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CSolutions.1", @"ggbsort([[[ggbcsans:=0/0],[ggbcsans:=%0],[ggbvars:=lname(ggbcsans)]],normal(cZeros(%0,when(size(ggbvars)==1,ggbvars[0],x)))][1])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CSolutions.2", @"ggbsort(normal(cZeros(%0,%1)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CSolve.1", @"ggbsort([[[ggbcsans:=0/0],[ggbcsans:=%0],[ggbvars:=lname(ggbcsans)]],regroup(csolve(%0,when(size(ggbvars)==1,ggbvars[0],x)))][1])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"CSolve.2", @"ggbsort(regroup(csolve(%0,%1)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Degree.1", @"degree(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Degree.2", @"degree(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Denominator.1", @"getDenom(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Derivative.1", @"[[ggbderivarg0:=%0], regroup(diff(ggbderivarg0, when(length(lname(ggbderivarg0))==0,x,when(count_eq(x,lname(ggbderivarg0))==0,lname(ggbderivarg0)[0],x))))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Derivative.2", @"[[[ggbderiv2arg0:=%0],[ggbderiv2arg1:=%1]],when(type(ggbderiv2arg1)==DOM_INT,regroup(diff(ggbderiv2arg0,when(count_eq(x,lname(ggbderiv2arg0))==0,lname(%0)[0],x),ggbderiv2arg1)),regroup(diff(ggbderiv2arg0,ggbderiv2arg1)))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Derivative.3", @"regroup(diff(%0,%1,%2))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Determinant.1", @"det(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Dimension.1", @"[[ggbdimarg:=%0], when(ggbdimarg[0]=='pnt',when(is3dpoint(ggbdimarg),3,2),dim(ggbdimarg))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Div.2", @"[[[ggbdivarg0:=%0],[ggbdivarg1:=%1]],if type(ggbdivarg0)==DOM_INT && type(ggbdivarg1)==DOM_INT then iquo(ggbdivarg0,ggbdivarg1) else quo(ggbdivarg0,ggbdivarg1,x) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Division.2", @"[[[ggbdivarg0:=%0],[ggbdivarg1:=%1]],if type(ggbdivarg0)==DOM_INT && type(%1)==DOM_INT then iquorem(ggbdivarg0,ggbdivarg1) else quorem(ggbdivarg0,ggbdivarg1,x) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Divisors.1", @"dim(idivis(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"DivisorsList.1", @"idivis(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"DivisorsSum.1", @"sum(idivis(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Dot.2", @"[[[ggbdotarg0:=%0], [ggbdotarg1:=%1]],when(type(ggbdotarg0)==DOM_LIST && subtype(ggbdotarg0)!=27,regroup(ggbdotarg0 * ggbdotarg1), regroup(xcoord(ggbdotarg0)*xcoord(ggbdotarg1)+ycoord(ggbdotarg0)*ycoord(ggbdotarg1)+zcoord(ggbdotarg0)*zcoord(ggbdotarg1)))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Element.2", @"[[[ggbelarg0:=%0], [ggbelarg1:=%1]],when(type(ggbelarg0)==DOM_LIST,(ggbelarg0)[ggbelarg1-1],when(ggbelarg1>0,(ggbelarg0)[ggbelarg1],?))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Element.3", @"(%0)[%1 - 1,%2 - 1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Eliminate.2", @"eliminate(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Evaluate.1", @"regroup(normal(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Expand.1", @"normal(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Exponential.2", @"1-exp(-(%0)*(%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Factor.1", @"[with_sqrt(0),[ggbfacans:=%0],[if type(ggbfacans)==DOM_INT then ggbfacans:=ifactor(ggbfacans); else ggbfacans:=factor(ggbfacans,x); fi],with_sqrt(1),ggbfacans][4]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Factor.2", @"[with_sqrt(0),[ggbfacans:=%0],[ggbfacans:=factor(ggbfacans,%1)],with_sqrt(1),ggbfacans][4]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"IFactor.1", @"[with_sqrt(1),[ggbfacans:=%0],[if type(ggbfacans)==DOM_INT then ggbfacans:=ifactor(ggbfacans); else ggbfacans:=factor(ggbfacans,x); fi],ggbfacans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"IFactor.2", @"[with_sqrt(1),[ggbfacans:=%0],[ggbfacans:=factor(ggbfacans,%1)],ggbfacans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Factors.1", @"[[ggbfacans:=%0],[if type(ggbfacans)==DOM_INT then calc_mode(0); ggbfacans:=ifactors(ggbfacans); calc_mode(1); else ggbfacans:=factors(ggbfacans); fi],matrix(dim(ggbfacans)/2,2,ggbfacans)][2]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"FDistribution.3", @"fisher_cdf(%0,%1,%2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Flatten.1", @"flatten(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"First.1", @"[[ggbfiarg0:=%0],{when(type(ggbfiarg0)==DOM_LIST,(ggbfiarg0)[0],(ggbfiarg0)[1])}][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"First.2", @"[[[ggbfiarg0:=%0],[ggbfiarg1:=%1]],when(type(ggbfiarg0)==DOM_LIST,(ggbfiarg0)[0..ggbfiarg1-1],seq((ggbfiarg0)[j],j,1,ggbfiarg1))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"FitExp.1", @"[[ggbfitans:=%0],[ggbfitans:=exponential_regression(ggbfitans)],evalf(ggbfitans[1])*exp(ln(evalf(ggbfitans[0]))*x)][2]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"FitLog.1", @"[[ggbfitans:=%0],[ggbfitans:=logarithmic_regression(%0)],evalf(ggbfitans[0])*ln(x)+evalf(ggbfitans[1])][2]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"FitPoly.2", @"normal(evalf(horner(polynomial_regression(%0,%1),x)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"FitPow.1", @"[[ggbfitans:=%0],[ggbfitans:=power_regression(ggbfitans)],evalf(ggbfitans[1])*x^evalf(ggbfitans[0])][2]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Function.3", @"[[ggbvars:=lname(%0)],[ggbvar:=when(size(ggbvars)==0,x,ggbvars[0])], when(ggbvar>=%1 && ggbvar<=%2, %0, undef)][2]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Gamma.3", @"igamma((%0),(%2)/(%1),1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GCD.2", @"gcd(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GCD.1", @"lgcd(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GroebnerLex.1", @"gbasis(%0,indets(%0),plex)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GroebnerLex.2", @"gbasis(%0,%1,plex)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GroebnerDegRevLex.1", @"gbasis(%0,indets(%0),revlex)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GroebnerDegRevLex.2", @"gbasis(%0,%1,revlex)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GroebnerLexDeg.1", @"gbasis(%0,indets(%0),tdeg)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"GroebnerLexDeg.2", @"gbasis(%0,%1,tdeg)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"HyperGeometric.5", @"[[m:=%1],[ng:=%0],[n:=%2],[kk:=%3],if %4=true then sum(binomial(m,k)*binomial((ng-m),(n-k))/binomial(ng,n),k,0,floor(kk)) else binomial(m,kk)*binomial((ng-m),(n-kk))/binomial(ng,n) fi][4]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Identity.1", @"identity(round(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"If.2", @"when(%0,%1,undef)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"If.3", @"when(%0,%1,%2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ImplicitDerivative.3", @"normal(regroup(-diff(%0,%2)/diff(%0,%1)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ImplicitDerivative.1", @"normal(regroup(-diff(%0,x)/diff(%0,y)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Integral.1", @"regroup(integrate(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Integral.2", @"regroup(integrate(%0,%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Integral.3", @"[[[ggbintans:=0/0],[ggbintans:=integrate(%0,%1,%2)]],normal(when(type(ggbintans)==DOM_LIST,ggbintans[0],ggbintans))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Integral.4", @"[[[ggbintans:=0/0],[ggbintans:=integrate(%0,%1,%2,%3)]],normal(when(type(ggbintans)==DOM_LIST,ggbintans[0],ggbintans))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"IntegralBetween.4", @"[[[ggbintans:=0/0],[ggbintans:=int(%0-(%1),x,%2,%3)]],normal(when(type(ggbintans)==DOM_LIST,ggbintans[0],ggbintans))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"IntegralBetween.5", @"[[[ggbintans:=0/0],[ggbintans:=int(%0-(%1),%2,%3,%4)]],normal(when(type(ggbintans)==DOM_LIST,ggbintans[0],ggbintans))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Intersect.2", @"[[ggbinterans:=0/0],[ggbinarg0:=%0],[ggbinarg1:=%1],[ggbinterans:=normal(inter(when(ggbinarg0[0]=='=',ggbinarg0,y=ggbinarg0),when(ggbinarg1[0]=='=',ggbinarg1,y=ggbinarg1)))],[ggbinterans:=when(type(ggbinterans[0])==DOM_LIST,ggbinterans,coordinates(ggbinterans))],ggbinterans][5]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Conic.5", @"[[[M:=0/0],[A:=(0/0,0/0)],[B:=(0/0,0/0)],[C:=(0/0,0/0)],[D:=(0/0,0/0)],[E:=(0/0,0/0)]],[[A:=(real(%0[1]),im(%0[1]))],[B:=(real(%1[1]),im(%1[1]))],[C:=(real(%2[1]),im(%2[1]))],[D:=(real(%3[1]),im(%3[1]))],[E:=(real(%4[1]),im(%4[1]))],],[M:={{x^2,x*y,y^2,x,y,1},{A[0]^2,A[0]*A[1],A[1]^2,A[0],A[1],1},{B[0]^2,B[0]*B[1],B[1]^2,B[0],B[1],1},{C[0]^2,C[0]*C[1],C[1]^2,C[0],C[1],1},{D[0]^2,D[0]*D[1],D[1]^2,D[0],D[1],1},{E[0]^2,E[0]*E[1],E[1]^2,E[0],E[1],1}}],[M:=det(M)],[hcf:=factors(M)[0]],when(type(hcf)==DOM_INT,normal(M/hcf)=0,M=0)][5]");
  NSString *ellipseHyperbola1 = @"[[[ggbellipsearg0:=%0],[ggbellipsearg1:=%1],[a:=0/0],[b1:=0/0],[b2:=0/0],[c1:=0/0],[c2:=0/0],[a:=%2],[b1:=xcoord(ggbellipsearg0)],[b2:=ycoord(ggbellipsearg0)],[c1:=xcoord(ggbellipsearg1)],[c2:=ycoord(ggbellipsearg1)],[a := when(%2[0]=='pnt',(sqrt((b1-real(a[1]))^2+(b2-im(a[1]))^2) ";
  NSString *ellipseHyperbola2 = @"sqrt((c1-real(a[1]))^2+(c2-im(a[1]))^2))/2,a)],[diff1 := b1 - c1],[diff2 := b2 - c2],[sqsumb := b1 * b1 + b2 * b2],[sqsumc := c1 * c1 + c2 * c2],[sqsumdiff := sqsumb - sqsumc],[a2 := 2 * a],[asq4 := a2 * a2],[asq := a * a],[afo := asq * asq],[ggbeherans:=simplify(4 * (a2 - diff1) * (a2 + diff1) * x^2 -8 * diff1 * diff2 * x * y + 4 * (a2 - diff2) * (a2 + diff2)* y^2 -4 * (asq4 * (b1 + c1) - diff1 * sqsumdiff)*x - 4 * (asq4 * (b2 + c2) - diff2 * sqsumdiff)*y-16 * afo - sqsumdiff * sqsumdiff + 8 * asq * (sqsumb + sqsumc))]],when(type(denom(ggbeherans))==DOM_INT,numer(ggbeherans)=0,ggbeherans=0)][1]";
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Ellipse.3", JreStrcat("$C$", ellipseHyperbola1, '+', ellipseHyperbola2));
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Hyperbola.3", JreStrcat("$C$", ellipseHyperbola1, '-', ellipseHyperbola2));
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Intersection.2", @"%0 intersect %1");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Iteration.3", @"regroup((unapply(%0,x)@@%2)(%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"IterationList.3", @"[[ggbilans(f,x0,n):=begin local l,k; l:=[x0]; for k from 1 to n do l[k]:=regroup(f(l[k-1])); od; l; end],ggbilans(unapply(%0,x),%1,%2)][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"PointList.1", @"flatten1(coordinates(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RootList.1", @"apply(x->convert([x,0],25),%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Invert.1", @"[[ggbinvans:=0/0], [ggbinvarg:=%0], [ggbinvans:=when(type(ggbinvarg)!=DOM_LIST,subst(right(revlist([op(solve(tmpvar=ggbinvarg,lname(ggbinvarg)[0]))])[0]),tmpvar,lname(ggbinvarg)[0]),inv(ggbinvarg))],ggbinvans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"IsPrime.1", @"isprime(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Join.N", @"flatten1(%)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Laplace.1", @"[[ggblaparg0:=%0],when(lname(ggblaparg0)[0]=ggbtmpvart, laplace(ggblaparg0, ggbtmpvart, ggbtmpvars), laplace(ggblaparg0, lname(ggblaparg0)[0]))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Laplace.2", @"laplace(%0, %1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Laplace.3", @"laplace(%0, %1, %2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"InverseLaplace.1", @"[[ggblaparg0:=%0],when(lname(ggblaparg0)[0]=ggbtmpvars, ilaplace(ggblaparg0, ggbtmpvars, ggbtmpvart), ilaplace(ggblaparg0, lname(ggblaparg0)[0]))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"InverseLaplace.2", @"ilaplace(%0, %1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"InverseLaplace.3", @"ilaplace(%0, %1, %2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Last.1", @"[[ggblastarg0:=%0],{when(type(ggblastarg0)==DOM_LIST,(ggblastarg0)[size(ggblastarg0)-1],(ggblastarg0)[dim(ggblastarg0)])}][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Last.2", @"[[[ggblastarg0:=%0],[ggblastarg1:=%1]],when(type(ggblastarg0)==DOM_LIST,(ggblastarg0)[size(ggblastarg0)-ggblastarg1..size(ggblastarg0)-1],seq((ggblastarg0)[j],j,dim(ggblastarg0)-ggblastarg1+1,dim(ggblastarg0)))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LCM.1", @"lcm(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LCM.2", @"lcm(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LeftSide.1", @"[[ggbleftarg0:=%0],when(type(ggbleftarg0)==DOM_LIST,map(ggbleftarg0,left),left(ggbleftarg0))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LeftSide.2", @"left(%0[%1-1])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Length.1", @"[[ggbv:=%0],regroup(when(ggbv[0]=='pnt' || (type(ggbv)==DOM_LIST && subtype(ggbv)==27), l2norm(ggbv),size(ggbv)))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Length.3", @"arcLen(%0,%1,%2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Length.4", @"arcLen(%0,%1,%2,%3)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Limit.2", @"[[ggblimvans:=?],[ggblimvans:=limit(%0,%1)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Limit.3", @"[[ggblimvans:=?],[ggblimvans:=limit(%0,%1,%2)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LimitAbove.2", @"[[ggblimvans:=?],[ggblimvans:=limit(%0,x,%1,1)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LimitAbove.3", @"[[ggblimvans:=?],[ggblimvans:=limit(%0,%1,%2,1)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LimitBelow.2", @"[[ggblimvans:=?],[ggblimvans:=limit(%0,x,%1,-1)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LimitBelow.3", @"[[ggblimvans:=?],[ggblimvans:=limit(%0,%1,%2,-1)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Max.N", @"[[ggbmaxarg:=%],when(type(ggbmaxarg)==DOM_LIST, when(type((ggbmaxarg)[0])==DOM_LIST, ?, max(ggbmaxarg)), ?)][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"MatrixRank.1", @"rank(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Mean.1", @"mean(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Median.1", @"median(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Min.N", @"[[ggbminarg:=%],when(type(ggbminarg)==DOM_LIST, when(type((ggbminarg)[0])==DOM_LIST, ?, min(ggbminarg)), ?)][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"MixedNumber.1", @"propfrac(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Mod.2", @"[[[ggbmodarg0:=%0],[ggbmodarg1:=%1]],if type(ggbmodarg0)==DOM_INT && type(ggbmodarg1)==DOM_INT then irem(ggbmodarg0,ggbmodarg1) else rem(ggbmodarg0,ggbmodarg1,x) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"NextPrime.1", @"nextprime(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"NIntegral.3", @"romberg(%0,%1,%2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"NIntegral.4", @"romberg(%0,%1,%2,%3)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Normal.3", @"normald_cdf(%0,%1,%2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Normal.4", @"[[[ggbnormarg0:=%0],[ggbnormarg1:=%1],[ggbnormarg2:=%2]],if %3=true then normald_cdf(ggbnormarg0,ggbnormarg1,ggbnormarg2) else (1/sqrt(2*pi*((ggbnormarg1)^2))) * exp(-((ggbnormarg2-(ggbnormarg0))^2) / (2*((ggbnormarg1)^2))) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"nPr.2", @"perm(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"NSolve.1", @"ggbsort([[ggbnsans:=%0],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,[[ggbvars:=lname(ggbnsans)],[ggbnsans:=fsolve(ggbnsans,ggbvars)],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,when(type(ggbnsans[0])==DOM_LIST,ggbnsans[0],ggbnsans),[ggbnsans])],seq(ggbvars[irem(j,dim(ggbnsans))]=ggbnsans[j],j,0,dim(ggbnsans)-1)][3],[[ggbvars:=lname(ggbnsans)],[ggbnsans:=fsolve(regroup(ggbnsans),ggbvars[0])],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,ggbnsans,[ggbnsans])],seq(ggbvars[0]=ggbnsans[j],j,0,dim(ggbnsans)-1)][3])],ggbnsans][2])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"NSolve.2", @"ggbsort([[ggbnsans:=%0],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,[[ggbvars:=seq(left(%1[j]),j,0,dim(%1)-1)],[ggbnsans:=fsolve(ggbnsans,%1)],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,when(type(ggbnsans[0])==DOM_LIST,ggbnsans[0],ggbnsans),[ggbnsans])],seq(ggbvars[irem(j,dim(ggbnsans))]=ggbnsans[j],j,0,dim(ggbnsans)-1)][3],[[ggbvars:=when(type(%1)==DOM_LIST,left(%1[0]),left(%1))],[ggbnsans:=fsolve(ggbnsans,%1)],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,ggbnsans,[ggbnsans])],seq(ggbvars=ggbnsans[j],j,0,dim(ggbnsans)-1)][3])],ggbnsans][2])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"NSolutions.1", @"ggbsort([[ggbnsans:=%0],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,[[ggbvars:=lname(ggbnsans)],[ggbnsans:=fsolve(ggbnsans,ggbvars)],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,ggbnsans,[ggbnsans])],ggbnsans][3],[[ggbvars:=lname(ggbnsans)],[ggbnsans:=fsolve(ggbnsans,ggbvars[0])],[ggbnsans:=when(type(ggbnsans)==DOM_LIST,ggbnsans,[ggbnsans])],ggbnsans][3])],ggbnsans][2])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"NSolutions.2", @"ggbsort([[ggbnsans:=fsolve(%0,%1)],when(type(ggbnsans)==DOM_LIST,ggbnsans,[ggbnsans])][1])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Numerator.1", @"getNum(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Numeric.1", @"[[ggbnumans:=%0],when(dim(lname(ggbnumans))==0 || count_eq(unicode0176u,lname(ggbnumans))>0,evalf(ggbnumans),evalf(regroup(normal(ggbnumans))))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Numeric.2", @"[[ggbnumans:=%0],when(dim(lname(ggbnumans))==0 || lname(ggbnumans)==[unicode0176u],evalf(ggbnumans,%1),evalf(regroup(normal(ggbnumans)),%1))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"PartialFractions.1", @"partfrac(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"PartialFractions.2", @"partfrac(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Pascal.4", @"[[[ggbpasarg0:=%0],[ggbpasarg1:=%1],[ggbpasarg2:=%2]],if %3=true then Beta(ggbpasarg0,1+floor(ggbpasarg2),ggbpasarg1,1) else (1-(%1))^(ggbpasarg2)*(ggbpasarg1)^(ggbpasarg0)*binomial(ggbpasarg0+ggbpasarg2-1,ggbpasarg0-1) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Poisson.3", @"if %2=true then exp(-(%0))*sum ((%0)^k/k!,k,0,floor(%1)) else normal((%0)^(%1)/factorial(floor(%1))*exp(-%0)) fi");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Polynomial.N", @"[[[ggbpolans:=0/0], [ggbvar:=x], [ggbinput:=%], when(type(ggbinput)==DOM_LIST && type(ggbinput[1]) != DOM_IDENT,[[xvals := [seq(xcoord(ggbinput[j]),j=0..size(ggbinput)-1)]], [yvals := [seq(ycoord(ggbinput[j]),j=0..size(ggbinput)-1)]], [ggbpolans := normal(lagrange(xvals,yvals,x))]],[[ggbinput:=when(type(ggbinput)==DOM_LIST,[[ggbvar:=ggbinput[1]],coeffs(ggbinput[0],ggbinput[1])][1],coeffs(ggbinput,x))], [ggbpolans:=add(seq(ggbinput[j]*ggbvar^(size(ggbinput)-1-j),j=0..size(ggbinput)-1))]])],ggbpolans][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"PreviousPrime.1", @"[[ggbpparg0:=%0],if (ggbpparg0 > 2) then prevprime(ggbpparg0) else 0/0 fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"PrimeFactors.1", @"ifactors(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Product.1", @"normal(product(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Product.4", @"normal(product(%0,%1,%2,%3))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Random.2", @"[[ggbranarg0:=%0],ggbranarg0+rand(%1-(ggbranarg0)+1)][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RandomBinomial.2", @"binomial_icdf(%0,%1,rand(0,1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RandomElement.1", @"rand(1,%0)[0]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RandomPoisson.1", @"poisson_icdf(%0,rand(0,1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RandomNormal.2", @"randnorm(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RandomPolynomial.3", @"randpoly(%0,x,%1,%2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RandomPolynomial.4", @"randpoly(%1,%0,%2,%3)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Rationalize.1", @"[[ggbratarg0:=%0],if type(ggbratarg0)==DOM_RAT then ggbratarg0 else normal(exact(ggbratarg0)) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Reverse.1", @"revlist(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RightSide.1", @"[[ggbrightarg0:=%0],when(type(ggbrightarg0)==DOM_LIST,map(ggbrightarg0,right),right(ggbrightarg0))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"RightSide.2", @"right(%0[%1-1]) ");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ReducedRowEchelonForm.1", @"rref(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Sample.2", @"flatten1(seq(rand(1,%0),j,1,%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Sample.3", @"[[[ggbsamarg0:=%0],[ggbsamarg1:=%1]],if %2=true then flatten1(seq(rand(1,ggbsamarg0),j,1,ggbsamarg1)) else rand(ggbsamarg1,ggbsamarg0) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SampleVariance.1", @" [[ggbsvans:=%0],[ggbsvans:=normal(variance(ggbsvans)*size(ggbsvans)/(size(ggbsvans)-1))],ggbsvans][2]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SampleSD.1", @"normal(stddevp(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Sequence.1", @"seq(j,j,1,%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Sequence.4", @"seq(%0,%1,%2,%3)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Sequence.5", @"seq(%0,%1,%2,%3,%4)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SD.1", @"normal(stddev(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Shuffle.1", @"randperm(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Simplify.1", @"simplify(regroup(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Solutions.1", @"ggbsort(normal(zeros(%0,x)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Solutions.2", @"ggbsort(normal(zeros(%0,%1)))");
  NSString *root1 = @"ggbsort(normal([op(solve(%0))]))";
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Root.1", root1);
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Solve.1", root1);
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Solve.2", @"ggbsort(normal([op(solve(%0,%1))]))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SolveODE.1", @"when((%0)[0]=='=',normal(map(desolve(%0),x->y=x)[0]),normal(map(desolve(y'=%0),x->y=x)[0]))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SolveODE.2", @"normal(y=when(type(%1)==DOM_LIST,desolve([%0,y(xcoord(%1[0]))=ycoord(%1[0]),y(xcoord(%1[1]))=ycoord(%1[1])],x,y),desolve(when((%0)[0]=='=',%0,y'=%0),x,y,%1))[0])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SolveODE.3", @"when((%0)[0]=='=',normal(map(desolve(%0,%2,%1),(type(%1)==DOM_IDENT)?(x->%1=x):(x->y=x))[0]),normal(map(desolve(y'=%0,%2,%1),(type(%1)==DOM_IDENT)?(x->%1=x):(x->y=x))[0]))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SolveODE.4", @"when((%0)[0]=='=',normal(map(desolve(%0,%2,%1,%3),x->%1=x)[0]),normal(map(desolve(y'=%0,%2,%1,%3),x->%1=x)[0]))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SolveODE.5", @"normal(map(desolve(%0,%2,%1,%3,%4),x->%1=x)[0])");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Substitute.2", @"subst(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Substitute.3", @"subst(%0,%1,%2)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Sum.1", @"sum(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Sum.4", @"expand(subst(sum(subst(%0,%1,ggbsumvar@1),ggbsumvar@1,%2,%3), ggbsumvar@1, %1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Take.3", @"[[[ggbtakearg0:=%0],[ggbtakearg1:=%1],[ggbtakearg2:=%2]],ggbtakearg0[ggbtakearg1-1..ggbtakearg2-1]][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TaylorSeries.3", @"convert(series(%0,x,%1,%2),polynom)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TaylorSeries.4", @"convert(series(%0,%1,%2,%3),polynom)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TDistribution.2", @"student_cdf(%0,%1)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ToComplex.1", @"[[ggbtcans:=?],[ggbtcans:=%0],[ggbtype:=type(evalf(ggbtcans))],when(ggbtype==DOM_INT || ggbtype==DOM_FLOAT,ggbtcans,when(ggbtcans[0]=='pnt',xcoord(%0)+i*ycoord(%0),real(ggbtcans)+i*im(ggbtcans)))][3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ToExponential.1", @"rectangular2polar(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ToPolar.1", @"([[ggbtpans:=%0],[ggbtpans:=polar_coordinates(ggbtpans)],[ggbtpans:=convert([ggb_ang(ggbtpans[0],ggbtpans[1])],25)],ggbtpans])[3]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"ToPoint.1", @"point(convert(coordinates(%0),25))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Transpose.1", @"transpose(%0)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TrigExpand.1", @"tan2sincos(trigexpand(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TrigExpand.2", @"[[ggbtrigarg0:=%0],when((%1)[0]=='tan', trigexpand(ggbtrigarg0),tan2sincos(trigexpand(ggbtrigarg0)))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TrigExpand.3", @"[[[ggbtrigarg0:=%0],[ggbtrigarg2:=%2]],when(%1==tan(x),tlin(halftan(ggbtrigarg0)),subst(trigexpand(subst(ggbtrigarg0,solve(ggbtmp=ggbtrigarg2,lname(ggbtrigarg0)))),ggbtmp=ggbtrigarg2))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TrigExpand.4", @"[[[ggbtrigarg0:=%0],[ggbtrigarg2:=%2],[ggbtrigarg3:=%3]],when(%1==tan(x),tlin(halftan(ggbtrigarg0)),subst(subst(trigexpand(subst(subst(ggbtrigarg0,solve(tmpvar=ggbtrigarg2,lname(ggbtrigarg0))),solve(tmpvar2=ggbtrigarg3,lname(ggbtrigarg0)))),tmpvar=ggbtrigarg2),tmpvar2=ggbtrigarg3))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TrigSimplify.1", @"[[[ggbtrigarg:=%0], [ggbsin:=trigsin(ggbtrigarg)], [ggbcos:=trigcos(ggbtrigarg)], [ggbtan:=trigtan(ggbtrigarg)], [ggbsinlen:=length(\"\"+ggbsin)],[ggbcoslen:=length(\"\"+ggbcos)],[ggbtanlen:=length(\"\"+ggbtan)]],when(ggbsinlen<=ggbcoslen && ggbsinlen<=ggbtanlen,ggbsin,when(ggbcoslen<=ggbtanlen,ggbcos,ggbtan))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TrigCombine.1", @"[[[ggbtrigarg:=%0], [ggbsin:=tcollectsin(normal(ggbtrigarg))], [ggbcos:=tcollect(normal(ggbtrigarg))], [ggbtan:=tcollect(normal(tan2sincos(ggbtrigarg)))], [ggbsinlen:=length(\"\"+ggbsin)],[ggbcoslen:=length(\"\"+ggbcos)],[ggbtanlen:=length(\"\"+ggbtan)]],when(ggbcoslen<=ggbsinlen && ggbcoslen<=ggbtanlen,ggbcos,when(ggbsinlen<=ggbtanlen,ggbsin,ggbtan))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"TrigCombine.2", @"[[[ggbtrigarg0:=%0],[ggbtrigarg1:=%1]],when(ggbtrigarg1[0]=='sin',tcollectsin(normal(ggbtrigarg0)),when(ggbtrigarg1[0]=='tan',tcollect(normal(tan2sincos(ggbtrigarg0))),tcollect(normal(ggbtrigarg0))))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Union.2", @"%0 union %1");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Unique.1", @"[op(set[op(%0)])]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Variance.1", @"normal(variance(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Weibull.3", @"1-exp(-((%2)/(%1))^(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Zipf.4", @"[[[ggbzipfarg0:=%0],[ggbzipfarg1:=%1],[ggbzipfarg2:=%2]],if %3=true then harmonic(ggbzipfarg1,ggbzipfarg2)/harmonic(ggbzipfarg1,ggbzipfarg0) else 1/((ggbzipfarg2)^ggbzipfarg1*harmonic(ggbzipfarg1,ggbzipfarg0)) fi][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Zip.N", @"[[ggbzipans(l):=begin local len,res,sbl,xpr,k,j;xpr:=l[0];len:=length(l[2]);res:={};for k from 4 to length(l)-1 step +2 do len:=min(len,length(l[k])); od;for k from 0 to len-1 do sbl:={};for j from 2 to length(l)-1 step +2 dosbl:=append(sbl, l[j-1]=l[j][k]);od;res:=append(res, subst(xpr,sbl));od; res; end],ggbzipans(%)][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"SolveCubic.1", @"[[j:=exp(2*i*pi/3)],[V:=symb2poly(%0,x)],[n:=size(V)],[V:=V/V[0]],[b:=V[1]],[V:=ptayl(V,-b/3)],[p:=V[2]],[q:=V[3]],[d:=q^2/4+p^3/27],[d:=sqrt(d)],[u:=(-q/2+d)^(1/3)],[v:=-p/3/u],[x1:=u+v-b/3],[x2:=u*j+v*conj(j)-b/3],[x3:=u*conj(j)+v*j-b/3],[x1s:=simplify(x1)],[x2s:=simplify(x2)],[x3s:=simplify(x3)],[[x1,x2,x3]]][18][0]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Radius.1", @"normal(regroup(radius(%0)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Center.1", @"coordinates(center(%0))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Midpoint.2", @"normal(regroup(coordinates(midpoint(%0,%1))))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Circle.2", @"[[[ggbcirarg0:=%0],[ggbcirarg1:=%1]],regroup(equation(when(ggbcirarg1[0]=='pnt',circle(2*(ggbcirarg0)-(ggbcirarg1),ggbcirarg1),circle(ggbcirarg0,ggbcirarg1))))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Area.1", @"normal(regroup(area(circle(%0))))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Circumference.1", @"normal(regroup(perimeter(%0)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"LineBisector.2", @"equation(perpen_bisector(%0,%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"AngularBisector.2", @"[[ggbabarg0:=%0],[ggbabarg1:=%1],[B:=inter(ggbabarg0,ggbabarg1)],[eqa:=equation(ggbabarg0)],[eqb:=equation(ggbabarg1)],[uva:=convert([unitV(coeff(left(eqa)-right(eqa),y,1),-coeff(left(eqa)-right(eqa),x,1))],25)],[uvb:=convert([unitV(coeff(left(eqb)-right(eqb),y,1),-coeff(left(eqb)-right(eqb),x,1))],25)],when(uva==uvb,[eqa],[equation(line(B[0],B[0]+uva+uvb)),equation(line(B[0],B[0]+uva-uvb))])][5]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"AngularBisector.3", @"equation(bisector(%1,%0,%2))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Angle.2", @"[[[ggbangarg0:=%0], [ggbangarg1:=%1]], normal(regroup(angle(point(0,0,0),point(xcoord(ggbangarg0),ycoord(ggbangarg0),zcoord(ggbangarg0)),point(xcoord(ggbangarg1),ycoord(ggbangarg1),zcoord(ggbangarg1)))))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Angle.3", @"[[[ggbangarg0:=%0], [ggbangarg1:=%1], [ggbangarg2:=%2]], normal(regroup(angle(point(xcoord(ggbangarg1),ycoord(ggbangarg1),zcoord(ggbangarg1)),point(xcoord(ggbangarg0),ycoord(ggbangarg0),zcoord(ggbangarg0)),point(xcoord(ggbangarg2),ycoord(ggbangarg2),zcoord(ggbangarg2)))))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Distance.2", @"[[[ggbdisans:=0/0],[ggbdisarg0:=%0],[ggbdisarg1:=%1],[ggbdisans:=when(ggbdisarg0[0]!='pnt',undef,when(type(evalf(ggbdisarg1))==DOM_FLOAT,undef,regroup(distance(ggbdisarg0,when(ggbdisarg1[0]!='pnt' && ggbdisarg1[0] != '=',y=ggbdisarg1,when(count_eq(z,lname(ggbdisarg1))==0,ggbdisarg1,plane(ggbdisarg1)))))))]],when(lname(ggbdisans)=={},normal(ggbdisans),ggbdisans)][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Line.2", @"[[ggblinearg0:=%0],[ggblinearg1:=%1],when(is3dpoint(ggblinearg0),ggblinearg0+t*(ggblinearg1-ggblinearg0),regroup(equation(line(ggblinearg0,ggblinearg1))))][2]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Midpoint.2", @"convert(factor((normal(coordinates(midpoint(%0,%1))))),25)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"OrthogonalLine.2", @"equation(perpendicular(%0,line(%1)))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Segment.2", @"equation(segment(%0,%1))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Tangent.2", @"[[[ggbtanarg0:=%0],[ggbtanarg1:=%1]],when((%0)[0]=='pnt',when((ggbtanarg1)[0]=='=',equation(tangent(ggbtanarg1,ggbtanarg0)),y=normal(subst(diff(ggbtanarg1,x),x=real(ggbtanarg0[1]))*(x-real(ggbtanarg0[1]))+subst(ggbtanarg1,x=real(%0[1])))),y=normal(subst(diff(ggbtanarg1,x),x=ggbtanarg0)*(x-(ggbtanarg0))+subst(ggbtanarg1,x=ggbtanarg0)))][1]");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Vector.1", @"when(is3dpoint(%0),ggbvect[xcoord(%0),ycoord(%0),zcoord(%0)],when((%0)[0]=='pnt',ggbvect[xcoord(%0),ycoord(%0)],when(im(%0)==ggbvect[0,0],%0,ggbvect[re(%0),im(%0)])))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"Vector.2", @"when(is3dpoint(%0)||is3dpoint(%1),ggbvect[xcoord(%1)-xcoord(%0),ycoord(%1)-ycoord(%0),zcoord(%1)-zcoord(%0)],when((%0)[0]=='pnt',ggbvect[xcoord(%1)-xcoord(%0),ycoord(%1)-ycoord(%0)],ggbvect[%0,%1]))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"OrthogonalVector.1", @"convert([[0,-1],[1,0]]*(%0),25)");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"UnitOrthogonalVector.1", @"when(type(%0)==DOM_LIST && size(%0) != 2,?,convert(unitV([-ycoord(%0),xcoord(%0)]),25))");
  OrgGeogebraCommonCasGiacGgb2giac_pWithNSString_withNSString_(@"UnitVector.1", @"[[ggin:=%0],[ggbuvans:=when(type(ggin)==DOM_LIST,normalize(ggin),when((ggin)[0]=='=',convert([unitV(coeff(left(ggin)-right(ggin),y,1),-coeff(left(ggin)-right(ggin),x,1))],25),when(ggin[0]='pnt' && size(ggin[1])==3,normal(unitV(ggin)),convert(unitV([real(ggin[1]),im(ggin[1])]),25))))],ggbuvans][2]");
  return OrgGeogebraCommonCasGiacGgb2giac_commandMap_;
}

void OrgGeogebraCommonCasGiacGgb2giac_init(OrgGeogebraCommonCasGiacGgb2giac *self) {
  NSObject_init(self);
}

OrgGeogebraCommonCasGiacGgb2giac *new_OrgGeogebraCommonCasGiacGgb2giac_init() {
  OrgGeogebraCommonCasGiacGgb2giac *self = [OrgGeogebraCommonCasGiacGgb2giac alloc];
  OrgGeogebraCommonCasGiacGgb2giac_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonCasGiacGgb2giac)
