//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/javax/swing/AbstractJComboBox.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GFont.h"
#include "org/geogebra/common/euclidian/event/ActionListener.h"
#include "org/geogebra/common/javax/swing/AbstractJComboBox.h"

@implementation OrgGeogebraCommonJavaxSwingAbstractJComboBox

- (void)setVisibleWithBoolean:(jboolean)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)getItemAtWithInt:(jint)i {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setFontWithOrgGeogebraCommonAwtGFont:(OrgGeogebraCommonAwtGFont *)font {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setForegroundWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)objectColor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setBackgroundWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setFocusableWithBoolean:(jboolean)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setEditableWithBoolean:(jboolean)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)addItemWithNSString:(NSString *)string {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setSelectedIndexWithInt:(jint)selectedIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)getSelectedIndex {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)addActionListenerWithOrgGeogebraCommonEuclidianEventActionListener:(OrgGeogebraCommonEuclidianEventActionListener *)newActionListener {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)removeAllItems {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)getItemCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  OrgGeogebraCommonJavaxSwingAbstractJComboBox_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setVisibleWithBoolean:", "setVisible", "V", 0x401, NULL, NULL },
    { "getItemAtWithInt:", "getItemAt", "Ljava.lang.Object;", 0x401, NULL, NULL },
    { "setFontWithOrgGeogebraCommonAwtGFont:", "setFont", "V", 0x401, NULL, NULL },
    { "setForegroundWithOrgGeogebraCommonAwtGColor:", "setForeground", "V", 0x401, NULL, NULL },
    { "setBackgroundWithOrgGeogebraCommonAwtGColor:", "setBackground", "V", 0x401, NULL, NULL },
    { "setFocusableWithBoolean:", "setFocusable", "V", 0x401, NULL, NULL },
    { "setEditableWithBoolean:", "setEditable", "V", 0x401, NULL, NULL },
    { "addItemWithNSString:", "addItem", "V", 0x401, NULL, NULL },
    { "setSelectedIndexWithInt:", "setSelectedIndex", "V", 0x401, NULL, NULL },
    { "getSelectedIndex", NULL, "I", 0x401, NULL, NULL },
    { "addActionListenerWithOrgGeogebraCommonEuclidianEventActionListener:", "addActionListener", "V", 0x401, NULL, NULL },
    { "removeAllItems", NULL, "V", 0x401, NULL, NULL },
    { "getItemCount", NULL, "I", 0x401, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonJavaxSwingAbstractJComboBox = { 2, "AbstractJComboBox", "org.geogebra.common.javax.swing", NULL, 0x401, 14, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonJavaxSwingAbstractJComboBox;
}

@end

void OrgGeogebraCommonJavaxSwingAbstractJComboBox_init(OrgGeogebraCommonJavaxSwingAbstractJComboBox *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonJavaxSwingAbstractJComboBox)
