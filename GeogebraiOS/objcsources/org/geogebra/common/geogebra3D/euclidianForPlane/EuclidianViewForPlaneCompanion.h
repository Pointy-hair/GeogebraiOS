//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidianForPlane/EuclidianViewForPlaneCompanion.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_H_
#define _OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidianFor3D/EuclidianViewFor3DCompanion.h"

@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class OrgGeogebraCommonEuclidianDrawDrawAngle;
@class OrgGeogebraCommonEuclidianEuclidianView;
@class OrgGeogebraCommonKernelAlgosAlgoElement;
@class OrgGeogebraCommonKernelGeosGeoAngle;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelMatrixCoordMatrix;
@class OrgGeogebraCommonKernelMatrixCoords;
@class OrgGeogebraCommonMainSettingsAbstractSettings;
@protocol OrgGeogebraCommonAwtGGraphics2D;
@protocol OrgGeogebraCommonGuiLayoutDockPanel;
@protocol OrgGeogebraCommonKernelKernelNDGeoDirectionND;
@protocol OrgGeogebraCommonKernelKernelNDGeoPlaneND;
@protocol OrgGeogebraCommonKernelKernelNDViewCreator;

@interface OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion : OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianViewFor3DCompanion

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view;

- (void)addExistingGeos;

- (void)attachView;

- (void)doRemove;

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords;

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsFromViewWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords;

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsFromViewWithDouble:(jdouble)x
                                                          withDouble:(jdouble)y;

- (id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)getDirection;

- (JavaUtilArrayList *)getFreeInputPointsWithOrgGeogebraCommonKernelAlgosAlgoElement:(OrgGeogebraCommonKernelAlgosAlgoElement *)algoParent;

- (NSString *)getFromPlaneString;

- (jint)getId;

- (OrgGeogebraCommonKernelMatrixCoordMatrix *)getInverseMatrix;

- (OrgGeogebraCommonKernelMatrixCoordMatrix *)getMatrix;

- (id<OrgGeogebraCommonKernelKernelNDViewCreator>)getPlane;

- (id<OrgGeogebraCommonKernelKernelNDGeoPlaneND>)getPlaneContaining;

- (NSString *)getTranslatedFromPlaneString;

- (void)getXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbxml
                            withBoolean:(jboolean)asPreference;

- (void)getXMLidWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbxml;

- (jboolean)goToZPlusWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v;

- (jboolean)hasForParentWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)initViewWithOrgGeogebraCommonKernelKernelNDViewCreator:(id<OrgGeogebraCommonKernelKernelNDViewCreator>)plane OBJC_METHOD_FAMILY_NONE;

- (jboolean)isDefault2D;

- (jboolean)isMoveableWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isVisibleInThisViewWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)paintWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2;

- (void)removeFromGuiAndKernel;

- (void)setDockPanelWithOrgGeogebraCommonGuiLayoutDockPanel:(id<OrgGeogebraCommonGuiLayoutDockPanel>)panel;

- (void)setPlaneWithOrgGeogebraCommonKernelKernelNDViewCreator:(id<OrgGeogebraCommonKernelKernelNDViewCreator>)plane;

- (void)settingsChangedWithOrgGeogebraCommonMainSettingsAbstractSettings:(OrgGeogebraCommonMainSettingsAbstractSettings *)settings;

- (void)setTransform;

- (void)setTransformRegardingView;

- (void)setXYMinMaxForUpdateSize;

- (jboolean)showGridWithBoolean:(jboolean)show;

- (void)updateAllDrawablesWithBoolean:(jboolean)repaint;

- (void)updateCenterAndOrientationRegardingView;

- (void)updateForPlane;

- (void)updateMatrix;

- (void)updateScaleRegardingView;

- (jboolean)viewOrientationForClockwiseWithBoolean:(jboolean)clockwise;

#pragma mark Protected

- (OrgGeogebraCommonEuclidianDrawDrawAngle *)newDrawAngleWithOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)geo OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_initWithOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *self, OrgGeogebraCommonEuclidianEuclidianView *view);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *new_OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_initWithOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonEuclidianEuclidianView *view) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion)

#endif // _OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_H_
