//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/euclidianForPlane/EuclidianControllerForPlaneCompanion.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/awt/GPoint.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/EuclidianViewCompanion.h"
#include "org/geogebra/common/euclidian/event/AbstractEvent.h"
#include "org/geogebra/common/geogebra3D/euclidianFor3D/EuclidianControllerFor3DCompanion.h"
#include "org/geogebra/common/geogebra3D/euclidianForPlane/EuclidianControllerForPlaneCompanion.h"
#include "org/geogebra/common/geogebra3D/euclidianForPlane/EuclidianViewForPlaneCompanion.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/Region.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPlaneND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion ()

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsFromViewWithDouble:(jdouble)x
                                                          withDouble:(jdouble)y;

@end

__attribute__((unused)) static OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_getCoordsFromViewWithDouble_withDouble_(OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion *self, jdouble x, jdouble y);

@implementation OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
  return self;
}

- (IOSObjectArray *)createCircle2WithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p0
                                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1 {
  return [self createCircle2For3DWithOrgGeogebraCommonKernelKernelNDGeoPointND:p0 withOrgGeogebraCommonKernelKernelNDGeoPointND:p1];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)circleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
                                            withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)radius {
  return [self circleFor3DWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelKernelNDGeoPointND:center withOrgGeogebraCommonKernelArithmeticNumberValue:radius];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                                                                           withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                                                                         withBoolean:(jboolean)coords2D {
  return [super getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b withBoolean:NO];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsFromViewWithDouble:(jdouble)x
                                                          withDouble:(jdouble)y {
  return OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_getCoordsFromViewWithDouble_withDouble_(self, x, y);
}

- (void)movePointWithBoolean:(jboolean)repaint
withOrgGeogebraCommonEuclidianEventAbstractEvent:(OrgGeogebraCommonEuclidianEventAbstractEvent *)event {
  OrgGeogebraCommonKernelMatrixCoords *coords = OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_getCoordsFromViewWithDouble_withDouble_(self, ((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_, ec_->yRW_);
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(ec_->movedGeoPoint_, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(ec_->movedGeoPoint_, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) setWillingCoordsUndefined];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(ec_->movedGeoPoint_, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) setWillingDirectionUndefined];
  }
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(ec_->movedGeoPoint_)) setCoordsWithOrgGeogebraCommonKernelMatrixCoords:coords withBoolean:YES];
  [((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(ec_->movedGeoPoint_, [OrgGeogebraCommonKernelGeosGeoElement class])) updateCascade];
  ec_->movedGeoPointDragged_ = YES;
  if (repaint) [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) notifyRepaint];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithBoolean:(jboolean)forPreviewable
                                                               withBoolean:(jboolean)complex {
  OrgGeogebraCommonKernelMatrixCoords *coords = OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_getCoordsFromViewWithDouble_withDouble_(self, ((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_, ec_->yRW_);
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> ret = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getManager3D])) Point3DInWithNSString:nil withOrgGeogebraCommonKernelRegion:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getPlaneContaining] withOrgGeogebraCommonKernelMatrixCoords:coords withBoolean:!forPreviewable withBoolean:NO];
  return ret;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithBoolean:(jboolean)forPreviewable
                                           withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                               withBoolean:(jboolean)complex {
  OrgGeogebraCommonKernelMatrixCoords *coords = OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_getCoordsFromViewWithDouble_withDouble_(self, ((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_, ec_->yRW_);
  return [self createNewPointWithNSString:nil withBoolean:forPreviewable withOrgGeogebraCommonKernelPath:path withDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX] withDouble:[coords getY] withDouble:[coords getZ] withBoolean:complex withBoolean:NO];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithBoolean:(jboolean)forPreviewable
                                         withOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)region
                                                               withBoolean:(jboolean)complex {
  OrgGeogebraCommonKernelMatrixCoords *coords = OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_getCoordsFromViewWithDouble_withDouble_(self, ((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_, ec_->yRW_);
  return [ec_ createNewPointWithNSString:nil withBoolean:forPreviewable withOrgGeogebraCommonKernelRegion:region withDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX] withDouble:[coords getY] withDouble:[coords getZ] withBoolean:complex withBoolean:NO];
}

- (void)processModeLockWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonKernelMatrixCoords *coords = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getInhomCoordsInD3]];
  ec_->xRW_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX];
  ec_->yRW_ = [coords getY];
}

- (void)processModeLockWithOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path {
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> p = [self createNewPointWithBoolean:YES withOrgGeogebraCommonKernelPath:path withBoolean:NO];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p, [OrgGeogebraCommonKernelGeosGeoElement class])))) update];
  OrgGeogebraCommonKernelMatrixCoords *coords = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p)) getInhomCoordsInD3]];
  ec_->xRW_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX];
  ec_->yRW_ = [coords getY];
}

- (JavaUtilArrayList *)removeParentsOfViewWithJavaUtilArrayList:(JavaUtilArrayList *)list {
  JavaUtilArrayList *ret = [new_JavaUtilArrayList_init() autorelease];
  for (OrgGeogebraCommonKernelGeosGeoElement * __strong geo in nil_chk(list)) if ([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) isMoveableWithOrgGeogebraCommonKernelGeosGeoElement:geo]) [ret addWithId:geo];
  return ret;
}

- (jboolean)viewOrientationForClockwiseWithBoolean:(jboolean)clockwise {
  return [((OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *) check_class_cast([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getCompanion], [OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion class])))) viewOrientationForClockwiseWithBoolean:clockwise];
}

- (IOSObjectArray *)rotateByAngleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geoRot
                             withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)phi
                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)Q {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Rotate3DWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geoRot withOrgGeogebraCommonKernelGeosGeoNumberValue:phi withOrgGeogebraCommonKernelKernelNDGeoPointND:Q withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection]];
}

- (jboolean)setCoordsToMouseLocWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)loc {
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(loc)) setCoordsWithDouble:((OrgGeogebraCommonAwtGPoint *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->mouseLoc_))->x_ withDouble:ec_->mouseLoc_->y_ withDouble:1.0];
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianController:", "EuclidianControllerForPlaneCompanion", NULL, 0x1, NULL, NULL },
    { "createCircle2WithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "createCircle2", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circleWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "circle", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "getSingleIntersectionPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getCoordsFromViewWithDouble:withDouble:", "getCoordsFromView", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x2, NULL, NULL },
    { "movePointWithBoolean:withOrgGeogebraCommonEuclidianEventAbstractEvent:", "movePoint", "V", 0x1, NULL, NULL },
    { "createNewPointWithBoolean:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "createNewPointWithBoolean:withOrgGeogebraCommonKernelPath:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "createNewPointWithBoolean:withOrgGeogebraCommonKernelRegion:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "processModeLockWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "processModeLock", "V", 0x4, NULL, NULL },
    { "processModeLockWithOrgGeogebraCommonKernelPath:", "processModeLock", "V", 0x4, NULL, NULL },
    { "removeParentsOfViewWithJavaUtilArrayList:", "removeParentsOfView", "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "viewOrientationForClockwiseWithBoolean:", "viewOrientationForClockwise", "Z", 0x1, NULL, NULL },
    { "rotateByAngleWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotateByAngle", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "setCoordsToMouseLocWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "setCoordsToMouseLoc", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion = { 2, "EuclidianControllerForPlaneCompanion", "org.geogebra.common.geogebra3D.euclidianForPlane", NULL, 0x1, 15, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion *self, OrgGeogebraCommonEuclidianEuclidianController *ec) {
  OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
}

OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion *new_OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonEuclidianEuclidianController *ec) {
  OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion *self = [OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion alloc];
  OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
  return self;
}

OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion_getCoordsFromViewWithDouble_withDouble_(OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion *self, jdouble x, jdouble y) {
  return [((OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *) check_class_cast([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(self->ec_))->view_)) getCompanion], [OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion class])))) getCoordsFromViewWithDouble:x withDouble:y];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidianForPlaneEuclidianControllerForPlaneCompanion)
