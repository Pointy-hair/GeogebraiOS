//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/io/layout/DockPanelDataForPlane.java
//


#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/geogebra3D/io/layout/DockPanelDataForPlane.h"
#include "org/geogebra/common/io/layout/DockPanelData.h"
#include "org/geogebra/common/main/App.h"

@implementation OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane

- (instancetype)initWithInt:(jint)viewId
               withNSString:(NSString *)toolbar
                withBoolean:(jboolean)isVisible
                withBoolean:(jboolean)openInFrame
                withBoolean:(jboolean)showStyleBar
withOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)windowRect
               withNSString:(NSString *)embeddedDef
                    withInt:(jint)embeddedSize
               withNSString:(NSString *)plane {
  OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_withNSString_(self, viewId, toolbar, isVisible, openInFrame, showStyleBar, windowRect, embeddedDef, embeddedSize, plane);
  return self;
}

- (jboolean)storeXml {
  return [self isVisible];
}

- (NSString *)getXml {
  JavaLangStringBuilder *sb = [self getStartXml];
  (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\" plane=\""];
  (void) [sb appendWithNSString:[self getPlane]];
  (void) [sb appendWithNSString:@"\" />\n"];
  return [sb description];
}

- (jint)getViewIdForXML {
  return OrgGeogebraCommonMainApp_VIEW_EUCLIDIAN_FOR_PLANE_START;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withNSString:withBoolean:withBoolean:withBoolean:withOrgGeogebraCommonAwtGRectangle:withNSString:withInt:withNSString:", "DockPanelDataForPlane", NULL, 0x1, NULL, NULL },
    { "storeXml", NULL, "Z", 0x1, NULL, NULL },
    { "getXml", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getViewIdForXML", NULL, "I", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane = { 2, "DockPanelDataForPlane", "org.geogebra.common.geogebra3D.io.layout", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane;
}

@end

void OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_withNSString_(OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane *self, jint viewId, NSString *toolbar, jboolean isVisible, jboolean openInFrame, jboolean showStyleBar, id<OrgGeogebraCommonAwtGRectangle> windowRect, NSString *embeddedDef, jint embeddedSize, NSString *plane) {
  (void) OrgGeogebraCommonIoLayoutDockPanelData_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_withNSString_(self, viewId, toolbar, isVisible, openInFrame, showStyleBar, windowRect, embeddedDef, embeddedSize, plane);
}

OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane *new_OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_withNSString_(jint viewId, NSString *toolbar, jboolean isVisible, jboolean openInFrame, jboolean showStyleBar, id<OrgGeogebraCommonAwtGRectangle> windowRect, NSString *embeddedDef, jint embeddedSize, NSString *plane) {
  OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane *self = [OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane alloc];
  OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane_initWithInt_withNSString_withBoolean_withBoolean_withBoolean_withOrgGeogebraCommonAwtGRectangle_withNSString_withInt_withNSString_(self, viewId, toolbar, isVisible, openInFrame, showStyleBar, windowRect, embeddedDef, embeddedSize, plane);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DIoLayoutDockPanelDataForPlane)
