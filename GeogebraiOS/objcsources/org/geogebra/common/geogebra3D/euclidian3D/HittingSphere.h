//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/HittingSphere.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/Hitting.h"

@class OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class OrgGeogebraCommonKernelMatrixCoords;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere : OrgGeogebraCommonGeogebra3DEuclidian3DHitting

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view;

- (jboolean)isSphere;

- (void)setHitsWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)pos
                                               withInt:(jint)threshold;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere *new_OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DHittingSphere_H_
