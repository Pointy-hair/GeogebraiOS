//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawSurface3DOld.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DSurfaces.h"

@class OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@protocol OrgGeogebraCommonKernelKernelNDSurfaceEvaluable;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld : OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces {
 @public
  id<OrgGeogebraCommonKernelKernelNDSurfaceEvaluable> surface_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d
                          withOrgGeogebraCommonKernelKernelNDSurfaceEvaluable:(id<OrgGeogebraCommonKernelKernelNDSurfaceEvaluable>)surface;

- (void)addToDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)drawGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawOutlineWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jint)getPickOrder;

- (void)removeFromDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

#pragma mark Protected

- (void)drawSurfaceGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)updateColors;

- (jboolean)updateForItSelf;

- (void)updateForView;

#pragma mark Package-Private

- (void)drawGeometryHidingWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld, surface_, id<OrgGeogebraCommonKernelKernelNDSurfaceEvaluable>)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelKernelNDSurfaceEvaluable_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, id<OrgGeogebraCommonKernelKernelNDSurfaceEvaluable> surface);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelKernelNDSurfaceEvaluable_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, id<OrgGeogebraCommonKernelKernelNDSurfaceEvaluable> surface) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_H_
