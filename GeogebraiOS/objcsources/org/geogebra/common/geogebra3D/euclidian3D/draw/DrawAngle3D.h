//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawAngle3D.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DCurves.h"

@class OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class OrgGeogebraCommonKernelGeosGeoAngle;
@class OrgGeogebraCommonKernelMatrixCoords;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D : OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DCurves

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3d
                                      withOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)geo;

- (void)addToDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)drawGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawHidingWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawNotTransparentSurfaceWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawTranspWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (OrgGeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (jint)getPickOrder;

- (void)removeFromDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

#pragma mark Protected

- (jdouble)getExtent;

- (jfloat)getLabelOffsetX;

- (jfloat)getLabelOffsetY;

- (jdouble)getStart;

- (jboolean)isLabelVisible;

- (void)updateColors;

- (jboolean)updateForItSelf;

- (void)updateForView;

- (void)updateLabel;

- (void)updateLabelPosition;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelGeosGeoAngle_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, OrgGeogebraCommonKernelGeosGeoAngle *geo);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelGeosGeoAngle_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, OrgGeogebraCommonKernelGeosGeoAngle *geo) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAngle3D_H_
