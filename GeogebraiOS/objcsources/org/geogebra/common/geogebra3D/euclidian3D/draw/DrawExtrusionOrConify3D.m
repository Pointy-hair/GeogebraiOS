//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawExtrusionOrConify3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/Hits.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianController3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawExtrusionOrConify3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DLists.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DSurfaces.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Renderer.h"
#include "org/geogebra/common/geogebra3D/kernel3D/Kernel3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoForExtrusion.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/ExtrusionComputer.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/DialogManager.h"
#include "org/geogebra/common/main/SelectionManager.h"
#include "org/geogebra/common/util/AsyncOperation.h"

@class OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D () {
 @public
  JavaUtilArrayList *selectedPolygons_;
  JavaUtilArrayList *selectedConics_;
  JavaUtilArrayList *segments_;
  JavaUtilArrayList *segmentsPoints_;
  OrgGeogebraCommonKernelGeosGeoNumeric *height_;
  OrgGeogebraCommonKernelGeosGeoElement *basis_;
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *callback_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, selectedPolygons_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, selectedConics_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, segments_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, segmentsPoints_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, height_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, basis_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, callback_, OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *)

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback : OrgGeogebraCommonUtilAsyncOperation {
 @public
  OrgGeogebraCommonKernelGeosGeoElement *basis_;
  OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view_;
  OrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer *extrusionComputer_;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *)outer$;

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)basis
withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view
withOrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer:(OrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer *)extrusionComputer;

- (void)callbackWithId:(id)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback, basis_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback, view_, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback, extrusionComputer_, OrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *self, OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *outer$);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D

- (void)drawSurfaceGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
}

- (void)drawGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
}

- (void)drawGeometryHidingWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
  [self drawGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:renderer];
}

- (void)drawGeometryHiddenWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
}

- (void)drawOutlineWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
}

- (jint)getPickOrder {
  return OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_PICK_ORDER_SURFACE;
}

- (void)addToDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists {
  [self addToDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:lists withInt:OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_CLOSED_SURFACES_CURVED];
}

- (void)removeFromDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists {
  [self removeFromDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:lists withInt:OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_CLOSED_SURFACES_CURVED];
}

- (jboolean)updateForItSelf {
  return YES;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                                        withJavaUtilArrayList:(JavaUtilArrayList *)selectedPolygons
                                                        withJavaUtilArrayList:(JavaUtilArrayList *)selectedConics {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withJavaUtilArrayList_(self, a_view3D, selectedPolygons, selectedConics);
  return self;
}

- (void)updateMousePosWithDouble:(jdouble)xRW
                      withDouble:(jdouble)yRW {
}

- (id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>)getAlgoWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)basis
                                                                       withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>)getAlgoWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)basis
                                                                           withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)height {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)updatePreview {
  if (extrusionComputer_ == nil) {
    if ([((JavaUtilArrayList *) nil_chk(selectedPolygons_)) size] == 1) {
      OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_set_basis_(self, [selectedPolygons_ getWithInt:0]);
      OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_setAndConsume_height_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_([((OrgGeogebraCommonGeogebra3DKernel3DKernel3D *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getKernel])) getConstruction], 0.0001));
      OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_setAndConsume_extrusionComputer_(self, new_OrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion_([self getAlgoWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *) check_class_cast(basis_, [OrgGeogebraCommonKernelGeosGeoPolygon class]) withOrgGeogebraCommonKernelGeosGeoNumeric:height_]));
    }
    else if ([((JavaUtilArrayList *) nil_chk(selectedConics_)) size] == 1) {
      OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_set_basis_(self, [selectedConics_ getWithInt:0]);
      OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_setAndConsume_height_(self, new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_([((OrgGeogebraCommonGeogebra3DKernel3DKernel3D *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getKernel])) getConstruction], 0.0001));
      OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_setAndConsume_extrusionComputer_(self, new_OrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion_([self getAlgoWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(basis_, [OrgGeogebraCommonKernelKernelNDGeoConicND class]) withOrgGeogebraCommonKernelGeosGeoNumeric:height_]));
    }
    if (extrusionComputer_ != nil) {
      [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) removeOutputFromAlgebraView];
      [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) removeOutputFromPicking];
      [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) setOutputPointsEuclidianVisibleWithBoolean:NO];
      [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) notifyUpdateOutputPoints];
      [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *) check_class_cast([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getEuclidianController], [OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D class])))) setHandledGeoWithOrgGeogebraCommonKernelGeosGeoElement:[((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) getGeoToHandle]];
      [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) setOutputOtherEuclidianVisibleWithBoolean:YES];
      [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) notifyUpdateOutputOther];
    }
  }
}

- (void)disposePreview {
  [super disposePreview];
  [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *) check_class_cast([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getEuclidianController], [OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D class])))) setHandledGeoWithOrgGeogebraCommonKernelGeosGeoElement:nil];
  if (extrusionComputer_ != nil) {
    [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) remove];
    OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_set_extrusionComputer_(self, nil);
  }
}

- (void)createPolyhedron {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *) check_class_cast([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getEuclidianController], [OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D class])))) setHandledGeoWithOrgGeogebraCommonKernelGeosGeoElement:nil];
  if (extrusionComputer_ != nil) {
    if (![((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getRenderer])) useLogicalPicking]) {
      [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getEuclidianController])) clearSelections];
    }
    OrgGeogebraCommonEuclidianHits *hits = [new_OrgGeogebraCommonEuclidianHits_init() autorelease];
    if ([extrusionComputer_ getComputed] == 0) {
      OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getApplication];
      if (callback_ == nil) {
        OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_setAndConsume_callback_(self, new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_(self));
      }
      [((OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *) nil_chk(callback_)) setWithOrgGeogebraCommonKernelGeosGeoElement:basis_ withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:[self getView3D] withOrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer:extrusionComputer_];
      [((OrgGeogebraCommonMainDialogManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getDialogManager])) showNumberInputDialogWithNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) getOutputWithInt:0])) translatedTypeString] withNSString:[app getPlainWithNSString:@"Altitude"] withNSString:@"" withBoolean:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(basis_)) getMainDirection])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getViewDirection]] > 0 withNSString:[app getPlainWithNSString:@"PositiveValuesFollowTheView"] withOrgGeogebraCommonUtilAsyncOperation:callback_];
    }
    else {
      [hits addWithId:height_];
      [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) getEuclidianController])) addSelectedNumberValueWithOrgGeogebraCommonEuclidianHits:hits withInt:1 withBoolean:NO];
    }
    if (extrusionComputer_ != nil) {
      [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) remove];
      OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_set_extrusionComputer_(self, nil);
    }
  }
}

- (void)dealloc {
  RELEASE_(selectedPolygons_);
  RELEASE_(selectedConics_);
  RELEASE_(segments_);
  RELEASE_(segmentsPoints_);
  RELEASE_(extrusionComputer_);
  RELEASE_(height_);
  RELEASE_(basis_);
  RELEASE_(callback_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "drawSurfaceGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawSurfaceGeometry", "V", 0x4, NULL, NULL },
    { "drawGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawGeometry", "V", 0x1, NULL, NULL },
    { "drawGeometryHidingWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawGeometryHiding", "V", 0x1, NULL, NULL },
    { "drawGeometryHiddenWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawGeometryHidden", "V", 0x1, NULL, NULL },
    { "drawOutlineWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawOutline", "V", 0x1, NULL, NULL },
    { "getPickOrder", NULL, "I", 0x1, NULL, NULL },
    { "addToDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:", "addToDrawable3DLists", "V", 0x1, NULL, NULL },
    { "removeFromDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:", "removeFromDrawable3DLists", "V", 0x1, NULL, NULL },
    { "updateForItSelf", NULL, "Z", 0x4, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:withJavaUtilArrayList:withJavaUtilArrayList:", "DrawExtrusionOrConify3D", NULL, 0x1, NULL, NULL },
    { "updateMousePosWithDouble:withDouble:", "updateMousePos", "V", 0x1, NULL, NULL },
    { "getAlgoWithOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelGeosGeoNumeric:", "getAlgo", "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoForExtrusion;", 0x404, NULL, NULL },
    { "getAlgoWithOrgGeogebraCommonKernelKernelNDGeoConicND:withOrgGeogebraCommonKernelGeosGeoNumeric:", "getAlgo", "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoForExtrusion;", 0x404, NULL, NULL },
    { "updatePreview", NULL, "V", 0x1, NULL, NULL },
    { "disposePreview", NULL, "V", 0x1, NULL, NULL },
    { "createPolyhedron", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "selectedPolygons_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/geos/GeoPolygon;>;",  },
    { "selectedConics_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/kernelND/GeoConicND;>;",  },
    { "segments_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/geogebra3D/euclidian3D/draw/DrawSegment3D;>;",  },
    { "segmentsPoints_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/util/ArrayList;>;",  },
    { "extrusionComputer_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.ExtrusionComputer;", NULL, NULL,  },
    { "height_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "basis_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "callback_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.draw.DrawExtrusionOrConify3D$CreatePolyhedronCallback;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.euclidian3D.draw.DrawExtrusionOrConify3D$CreatePolyhedronCallback;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D = { 2, "DrawExtrusionOrConify3D", "org.geogebra.common.geogebra3D.euclidian3D.draw", NULL, 0x401, 16, methods, 8, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withJavaUtilArrayList_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPolygons, JavaUtilArrayList *selectedConics) {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, a_view3D);
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_set_selectedPolygons_(self, selectedPolygons);
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_set_selectedConics_(self, selectedConics);
  [self updatePreview];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *)outer$ {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_(self, outer$);
  return self;
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)basis
withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view
withOrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer:(OrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer *)extrusionComputer {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_set_basis_(self, basis);
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_set_view_(self, view);
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_set_extrusionComputer_(self, extrusionComputer);
}

- (void)callbackWithId:(id)obj {
  id<OrgGeogebraCommonKernelGeosGeoNumberValue> num = (id<OrgGeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(obj, @protocol(OrgGeogebraCommonKernelGeosGeoNumberValue));
  if (extrusionComputer_ != nil) {
    [((id<OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>) nil_chk([extrusionComputer_ getAlgo])) remove];
    OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_set_extrusionComputer_(self, nil);
  }
  OrgGeogebraCommonKernelGeosGeoElement *ret;
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(basis_)) isGeoPolygon]) {
    if ([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view_)) getEuclidianController])) getMode] == OrgGeogebraCommonEuclidianEuclidianConstants_MODE_EXTRUSION) {
      ret = IOSObjectArray_Get(nil_chk([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([basis_ getKernel])) getManager3D])) PrismWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *) check_class_cast(basis_, [OrgGeogebraCommonKernelGeosGeoPolygon class]) withOrgGeogebraCommonKernelArithmeticNumberValue:num]), 0);
    }
    else {
      ret = IOSObjectArray_Get(nil_chk([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([basis_ getKernel])) getManager3D])) PyramidWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *) check_class_cast(basis_, [OrgGeogebraCommonKernelGeosGeoPolygon class]) withOrgGeogebraCommonKernelArithmeticNumberValue:num]), 0);
    }
  }
  else {
    if ([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view_)) getEuclidianController])) getMode] == OrgGeogebraCommonEuclidianEuclidianConstants_MODE_EXTRUSION) {
      ret = IOSObjectArray_Get(nil_chk([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([basis_ getKernel])) getManager3D])) CylinderLimitedWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(basis_, [OrgGeogebraCommonKernelKernelNDGeoConicND class]) withOrgGeogebraCommonKernelArithmeticNumberValue:num]), 0);
    }
    else {
      ret = IOSObjectArray_Get(nil_chk([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([basis_ getKernel])) getManager3D])) ConeLimitedWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(basis_, [OrgGeogebraCommonKernelKernelNDGeoConicND class]) withOrgGeogebraCommonKernelArithmeticNumberValue:num]), 0);
    }
  }
  [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view_)) getEuclidianController])) setDialogOccurred];
  [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([view_ getEuclidianController])) clearSelected];
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk([view_ getApplication])) getSelectionManager])) clearSelectedGeosWithBoolean:NO withBoolean:NO];
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk([view_ getApplication])) getSelectionManager])) addSelectedGeoWithOrgGeogebraCommonKernelGeosGeoElement:ret withBoolean:YES withBoolean:YES];
}

- (void)dealloc {
  RELEASE_(basis_);
  RELEASE_(view_);
  RELEASE_(extrusionComputer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D:", "CreatePolyhedronCallback", NULL, 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:withOrgGeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer:", "set", "V", 0x1, NULL, NULL },
    { "callbackWithId:", "callback", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "basis_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "view_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.EuclidianView3D;", NULL, NULL,  },
    { "extrusionComputer_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.ExtrusionComputer;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback = { 2, "CreatePolyhedronCallback", "org.geogebra.common.geogebra3D.euclidian3D.draw", "DrawExtrusionOrConify3D", 0x2, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *self, OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *outer$) {
  OrgGeogebraCommonUtilAsyncOperation_init(self);
}

OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *outer$) {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback *self = [OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback_initWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_CreatePolyhedronCallback)
