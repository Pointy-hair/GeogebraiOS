//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawPointDecorations.java
//


#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawCoordSys1D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawJoinPoints.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawPointDecorations.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Renderer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Textures.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/plugin/EuclidianStyleConstants.h"

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations () {
 @public
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *planeMatrix_;
  OrgGeogebraCommonKernelMatrixCoords *p1_, *p2_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *point_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations, planeMatrix_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations, p1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations, p2_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations, point_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)aView3d {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, aView3d);
  return self;
}

- (jboolean)isVisible {
  return YES;
}

- (void)setPointWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)point0 {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_set_point_(self, point0);
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_set_p1_(self, [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(point_)) getCoords]);
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_setAndConsume_p2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  [p2_ setWithOrgGeogebraCommonKernelMatrixCoords:p1_];
  [p2_ setWithInt:3 withDouble:0];
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(planeMatrix_)) setOriginWithOrgGeogebraCommonKernelMatrixCoords:p2_];
  [self setWaitForUpdate];
}

- (void)drawHiddenWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLTextures *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *) nil_chk(renderer)) getTextures])) setDashFromLineTypeWithInt:OrgGeogebraCommonPluginEuclidianStyleConstants_LINE_TYPE_DASHED_LONG];
  [self drawOutlineWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:renderer];
}

- (void)drawOutlineWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *) nil_chk(renderer)) setColorWithOrgGeogebraCommonKernelMatrixCoords:[new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, 0, 1) autorelease]];
  [self drawGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:renderer];
}

- (jboolean)updateForItSelf {
  [self updateForItSelfWithOrgGeogebraCommonKernelMatrixCoords:p1_ withOrgGeogebraCommonKernelMatrixCoords:p2_];
  return YES;
}

- (void)updateLabel {
}

- (void)updateLabelPosition {
}

- (jint)getLineThickness {
  if (point_ == nil) {
    return 1;
  }
  return JavaLangMath_maxWithInt_withInt_(1, [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(point_)) getPointSize] / 2);
}

- (void)updateForView {
  if ([((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([self getView3D])) viewChangedByZoom]) [self updateForItSelf];
}

- (jint)getPickOrder {
  return 0;
}

- (jboolean)isTransparent {
  return NO;
}

- (jdouble)getColorShift {
  return OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_COLOR_SHIFT_NONE;
}

- (void)updateColors {
}

- (void)dealloc {
  RELEASE_(planeMatrix_);
  RELEASE_(p1_);
  RELEASE_(p2_);
  RELEASE_(point_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "DrawPointDecorations", NULL, 0x1, NULL, NULL },
    { "isVisible", NULL, "Z", 0x4, NULL, NULL },
    { "setPointWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:", "setPoint", "V", 0x1, NULL, NULL },
    { "drawHiddenWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawHidden", "V", 0x1, NULL, NULL },
    { "drawOutlineWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawOutline", "V", 0x1, NULL, NULL },
    { "updateForItSelf", NULL, "Z", 0x4, NULL, NULL },
    { "updateLabel", NULL, "V", 0x4, NULL, NULL },
    { "updateLabelPosition", NULL, "V", 0x4, NULL, NULL },
    { "getLineThickness", NULL, "I", 0x4, NULL, NULL },
    { "updateForView", NULL, "V", 0x4, NULL, NULL },
    { "getPickOrder", NULL, "I", 0x1, NULL, NULL },
    { "isTransparent", NULL, "Z", 0x1, NULL, NULL },
    { "getColorShift", NULL, "D", 0x4, NULL, NULL },
    { "updateColors", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "planeMatrix_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", NULL, NULL,  },
    { "p1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "p2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "point_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations = { 2, "DrawPointDecorations", "org.geogebra.common.geogebra3D.euclidian3D.draw", NULL, 0x1, 14, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *aView3d) {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, aView3d);
  [self setDrawMinMaxWithDouble:0 withDouble:1];
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_setAndConsume_p1_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  [self->p1_ setWWithDouble:1];
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_set_p2_(self, [self->p1_ copyVector]);
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_set_planeMatrix_(self, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity());
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(self->planeMatrix_)) setVxWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonKernelMatrixCoords_get_VX_())) mulWithDouble:0.2]];
  [self->planeMatrix_ setVyWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonKernelMatrixCoords_get_VY_())) mulWithDouble:0.2]];
  [self setWaitForUpdate];
}

OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *aView3d) {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations *self = [OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, aView3d);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPointDecorations)
