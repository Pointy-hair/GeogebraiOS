//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DListsForDrawList3D.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawList3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DLists.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DListsForDrawList3D.h"

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D () {
 @public
  OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D, view3D_, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, view3D);
  return self;
}

- (void)addWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawable {
  [super addWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:drawable];
  if (!([drawable isKindOfClass:[OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D class]])) {
    [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view3D_)) addOneGeoToPick];
  }
}

- (void)removeWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawable {
  [super removeWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:drawable];
  if (drawable != nil && !([drawable isKindOfClass:[OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D class]])) {
    [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view3D_)) removeOneGeoToPick];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "Drawable3DListsForDrawList3D", NULL, 0x1, NULL, NULL },
    { "addWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:", "add", "V", 0x1, NULL, NULL },
    { "removeWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:", "remove", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "view3D_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.EuclidianView3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D = { 2, "Drawable3DListsForDrawList3D", "org.geogebra.common.geogebra3D.euclidian3D.draw", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D) {
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists_init(self);
  self->view3D_ = view3D;
}

OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D) {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *self = [OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, view3D);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D)
