//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawPlaneConstant3D.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawPlane3D.h"

@class OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D;
@class OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D : OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlane3D

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                        withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)a_plane3D
                     withOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *)xAxis
                     withOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *)yAxis;

#pragma mark Protected

- (jboolean)isGridVisible;

- (void)setMinMax;

- (jboolean)updateForItSelf;

- (void)updateForView;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_withOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *a_plane3D, OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *xAxis, OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *yAxis);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_withOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *a_plane3D, OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *xAxis, OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *yAxis) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_H_
