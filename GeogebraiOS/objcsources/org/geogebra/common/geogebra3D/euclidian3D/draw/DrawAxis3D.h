//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawAxis3D.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawLine3D.h"

@class IOSObjectArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class OrgGeogebraCommonGeogebra3DEuclidian3DHits3D;
@class OrgGeogebraCommonGeogebra3DEuclidian3DHitting;
@class OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@protocol OrgGeogebraCommonKernelKernelNDGeoAxisND;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D : OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawLine3D

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D
                                 withOrgGeogebraCommonKernelKernelNDGeoAxisND:(id<OrgGeogebraCommonKernelKernelNDGeoAxisND>)axis3D;

- (void)drawLabelWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jdouble)getNumbersDistance;

- (jboolean)hasPickableLable;

- (void)setDrawMinMaxImmediatlyWithDoubleArray2:(IOSObjectArray *)minMax;

- (void)setLabelWaitForReset;

- (void)setWaitForReset;

- (void)updateDecorations;

#pragma mark Protected

- (jboolean)hitLabelWithOrgGeogebraCommonGeogebra3DEuclidian3DHitting:(OrgGeogebraCommonGeogebra3DEuclidian3DHitting *)hitting
                     withOrgGeogebraCommonGeogebra3DEuclidian3DHits3D:(OrgGeogebraCommonGeogebra3DEuclidian3DHits3D *)hits;

- (jboolean)isVisible;

- (jboolean)updateForItSelf;

- (void)updateForView;

- (void)updateLabel;

- (void)updateLabelPosition;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelKernelNDGeoAxisND_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, id<OrgGeogebraCommonKernelKernelNDGeoAxisND> axis3D);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelKernelNDGeoAxisND_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, id<OrgGeogebraCommonKernelKernelNDGeoAxisND> axis3D) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_H_
