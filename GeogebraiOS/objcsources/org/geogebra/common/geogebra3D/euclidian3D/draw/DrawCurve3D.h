//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawCurve3D.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DCurves.h"

@class OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@protocol OrgGeogebraCommonKernelKernelNDCurveEvaluable;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D : OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DCurves

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d
                            withOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve;

- (void)addToDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)drawGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jint)getPickOrder;

- (void)removeFromDrawable3DListsWithOrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

#pragma mark Protected

- (jboolean)updateForItSelf;

- (void)updateForView;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelKernelNDCurveEvaluable_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D *new_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelKernelNDCurveEvaluable_(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCurve3D_H_
