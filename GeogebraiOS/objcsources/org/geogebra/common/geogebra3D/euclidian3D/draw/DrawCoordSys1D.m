//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/draw/DrawCoordSys1D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawCoordSys1D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/DrawJoinPoints.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs1D {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelGeosGeoElement_(self, a_view3D, cs1D);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, a_view3d);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                                        withJavaUtilArrayList:(JavaUtilArrayList *)selectedPoints
                                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withOrgGeogebraCommonKernelGeosGeoElement_(self, a_view3D, selectedPoints, geo);
  return self;
}

- (void)setPreviewableCoordsWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)firstPoint
                            withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)secondPoint {
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) check_class_cast([self getGeoElement], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D class])))) setCoordFromPointsWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(firstPoint)) getInhomCoordsInD3] withOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(secondPoint)) getInhomCoordsInD3]];
}

- (IOSObjectArray *)calcPoints {
  id<OrgGeogebraCommonKernelKernelNDGeoLineND> cs = (id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast([self getGeoElement], @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND));
  IOSDoubleArray *minmax = [self getDrawMinMax];
  return [IOSObjectArray newArrayWithObjects:(id[]){ [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(cs)) getPointInDWithInt:3 withDouble:IOSDoubleArray_Get(nil_chk(minmax), 0)])) getInhomCoordsInSameDimension], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([cs getPointInDWithInt:3 withDouble:IOSDoubleArray_Get(minmax, 1)])) getInhomCoordsInSameDimension] } count:2 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:withOrgGeogebraCommonKernelGeosGeoElement:", "DrawCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "DrawCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:withJavaUtilArrayList:withOrgGeogebraCommonKernelGeosGeoElement:", "DrawCoordSys1D", NULL, 0x1, NULL, NULL },
    { "setPreviewableCoordsWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "setPreviewableCoords", "V", 0x4, NULL, NULL },
    { "calcPoints", NULL, "[Lorg.geogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D = { 2, "DrawCoordSys1D", "org.geogebra.common.geogebra3D.euclidian3D.draw", NULL, 0x401, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, OrgGeogebraCommonKernelGeosGeoElement *cs1D) {
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawJoinPoints_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withOrgGeogebraCommonKernelGeosGeoElement_(self, a_view3D, cs1D);
}

void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d) {
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawJoinPoints_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, a_view3d);
}

void OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D *self, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPoints, OrgGeogebraCommonKernelGeosGeoElement *geo) {
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawJoinPoints_initWithOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withOrgGeogebraCommonKernelGeosGeoElement_(self, a_view3D, selectedPoints, geo);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DDrawDrawCoordSys1D)
