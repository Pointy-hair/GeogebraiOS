//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterSurface.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Manager.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterSurface.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/SurfaceMesh2.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/FloatBuffer.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Matrix/Coords3.h"
#include "org/geogebra/common/kernel/arithmetic/Functional2Var.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionNVar.h"

#define OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_OUT 0.75f
#define OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_IN 0.0f

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface () {
 @public
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager_;
  jint index_;
  id<OrgGeogebraCommonKernelArithmeticFunctional2Var> functional2Var_;
  OrgGeogebraCommonKernelGeosGeoFunctionNVar *function_;
  jfloat uMin_, uMax_, vMin_, vMax_;
  jint uNb_, vNb_;
  jfloat du_, dv_;
  jfloat uMinFade_, uMaxFade_, vMinFade_, vMaxFade_;
  jfloat uMinFadeNb_, uMaxFadeNb_, vMinFadeNb_, vMaxFadeNb_;
  IOSObjectArray *coordsArray_;
  OrgGeogebraCommonKernelMatrixCoords *m_;
  OrgGeogebraCommonKernelMatrixCoords *tmpCoords_, *tmpCoords2_, *tmpCoords3_, *center1_, *center2_, *n_;
  OrgGeogebraCommonKernelMatrixCoords *coords1_;
  OrgGeogebraCommonKernelMatrixCoords *normal2_;
}

+ (void)cosSinWithInt:(jint)vi
              withInt:(jint)latitude
      withDoubleArray:(IOSDoubleArray *)ret;

+ (void)sphericalCoordsWithInt:(jint)ui
                       withInt:(jint)longitude
                    withDouble:(jdouble)longitudeStart
               withDoubleArray:(IOSDoubleArray *)cosSinV
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)n;

+ (OrgGeogebraCommonKernelMatrixCoords *)sphericalCoordsWithInt:(jint)ui
                                                        withInt:(jint)vi
                                                        withInt:(jint)longitude
                                                        withInt:(jint)latitude;

- (OrgGeogebraCommonKernelMatrixCoords *)calcNormalWithFloat:(jfloat)x
                                                   withFloat:(jfloat)y
                                                   withFloat:(jfloat)z;

- (void)drawQuadWithInt:(jint)ui
                withInt:(jint)vi;

- (void)drawTNVWithInt:(jint)ui
               withInt:(jint)vi;

- (void)drawNCrWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)normal
               withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                            withDouble:(jdouble)radius;

- (void)drawNCrmWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)normal
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                             withDouble:(jdouble)radius;

- (void)drawNVWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)normal
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point;

+ (jfloat)getTextureCoordWithInt:(jint)i
                         withInt:(jint)n
                       withFloat:(jfloat)fadeMin
                       withFloat:(jfloat)fadeMax;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, manager_, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, functional2Var_, id<OrgGeogebraCommonKernelArithmeticFunctional2Var>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, function_, OrgGeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, coordsArray_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, m_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, tmpCoords_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, tmpCoords2_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, tmpCoords3_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, center1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, center2_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, n_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, coords1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, normal2_, OrgGeogebraCommonKernelMatrixCoords *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, TEXTURE_FADE_OUT, jfloat)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface, TEXTURE_FADE_IN, jfloat)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_cosSinWithInt_withInt_withDoubleArray_(jint vi, jint latitude, IOSDoubleArray *ret);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(jint ui, jint longitude, jdouble longitudeStart, IOSDoubleArray *cosSinV, OrgGeogebraCommonKernelMatrixCoords *n);

__attribute__((unused)) static OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withInt_withInt_(jint ui, jint vi, jint longitude, jint latitude);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawQuadWithInt_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, jint ui, jint vi);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, jint ui, jint vi);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, OrgGeogebraCommonKernelMatrixCoords *normal, OrgGeogebraCommonKernelMatrixCoords *center, jdouble radius);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, OrgGeogebraCommonKernelMatrixCoords *normal, OrgGeogebraCommonKernelMatrixCoords *center, jdouble radius);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, OrgGeogebraCommonKernelMatrixCoords *normal, OrgGeogebraCommonKernelMatrixCoords *point);

__attribute__((unused)) static jfloat OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(jint i, jint n, jfloat fadeMin, jfloat fadeMax);

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)manager {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

- (void)startWithInt:(jint)old {
  index_ = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startNewListWithInt:old];
}

- (void)startWithOrgGeogebraCommonKernelArithmeticFunctional2Var:(id<OrgGeogebraCommonKernelArithmeticFunctional2Var>)function
                                                         withInt:(jint)old {
  index_ = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startNewListWithInt:old];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_set_functional2Var_(self, function);
  uMinFade_ = 0;
  vMinFade_ = 0;
  uMaxFade_ = 0;
  vMaxFade_ = 0;
}

- (void)startWithOrgGeogebraCommonKernelGeosGeoFunctionNVar:(OrgGeogebraCommonKernelGeosGeoFunctionNVar *)function
                                                    withInt:(jint)old {
  index_ = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startNewListWithInt:old];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_set_function_(self, function);
  uMinFade_ = 0;
  vMinFade_ = 0;
  uMaxFade_ = 0;
  vMaxFade_ = 0;
}

- (jint)end {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) endList];
  return index_;
}

- (void)setUWithFloat:(jfloat)min
            withFloat:(jfloat)max {
  self->uMin_ = min;
  self->uMax_ = max;
}

- (void)setVWithFloat:(jfloat)min
            withFloat:(jfloat)max {
  self->vMin_ = min;
  self->vMax_ = max;
}

- (void)setNbUWithInt:(jint)n {
  self->uNb_ = n;
}

- (void)setNbVWithInt:(jint)n {
  self->vNb_ = n;
}

- (void)setUFadingWithFloat:(jfloat)min
                  withFloat:(jfloat)max {
  self->uMinFade_ = min;
  self->uMaxFade_ = max;
}

- (void)setVFadingWithFloat:(jfloat)min
                  withFloat:(jfloat)max {
  self->vMinFade_ = min;
  self->vMaxFade_ = max;
}

- (void)drawTriangleWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p1
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p2
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p3 {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  jfloat uT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(1, uNb_, uMinFadeNb_, uMaxFadeNb_);
  jfloat vT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(1, vNb_, vMinFadeNb_, vMaxFadeNb_);
  [manager_ textureWithDouble:uT withDouble:vT];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p1];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p3];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p2];
  [manager_ endGeometry];
}

- (void)drawQuadWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p1
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p2
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p3
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p4 {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  jfloat uT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(1, uNb_, uMinFadeNb_, uMaxFadeNb_);
  jfloat vT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(1, vNb_, vMinFadeNb_, vMaxFadeNb_);
  [manager_ textureWithDouble:uT withDouble:vT];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p1];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p2];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p4];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p3];
  [manager_ endGeometry];
}

- (void)drawQuadNoTextureWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p1
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p2
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p3
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p4 {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  [manager_ setDummyTexture];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p1];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p2];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p4];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p3];
  [manager_ endGeometry];
}

- (void)drawQuadWireFrameWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p1
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p2
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p3
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p4 {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_LINE_LOOP()];
  [manager_ setDummyTexture];
  [manager_ colorWithDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p1];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p2];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p3];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p4];
  [manager_ endGeometry];
  [manager_ startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  [manager_ setDummyTexture];
  [manager_ colorWithDouble:1.0f withDouble:0.0f withDouble:0.0f withDouble:0.5f];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p1];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p2];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p4];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:p3];
  [manager_ endGeometry];
}

- (void)startTrianglesWireFrame {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_LINE_LOOP()];
  [manager_ setDummyTexture];
  [manager_ colorWithDouble:0.0f withDouble:0.0f withDouble:0.0f withDouble:1.0f];
}

- (void)startTrianglesWireFrameSurface {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [manager_ setDummyTexture];
  [manager_ colorWithDouble:1.0f withDouble:0.0f withDouble:0.0f withDouble:0.25f];
}

- (void)startTrianglesWireFrameSurfaceBoundary {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [manager_ setDummyTexture];
  [manager_ colorWithDouble:0.0f withDouble:0.0f withDouble:1.0f withDouble:0.25f];
}

- (void)startTriangles {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [manager_ setDummyTexture];
}

- (void)startTrianglesWithInt:(jint)size {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryDirectWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES() withInt:size];
  [manager_ setDummyTexture];
}

- (void)vertexDirectWithOrgGeogebraCommonKernelMatrixCoords3:(OrgGeogebraCommonKernelMatrixCoords3 *)p {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) vertexDirectWithOrgGeogebraCommonKernelMatrixCoords3:p];
}

- (void)normalDirectWithOrgGeogebraCommonKernelMatrixCoords3:(OrgGeogebraCommonKernelMatrixCoords3 *)n {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) normalDirectWithOrgGeogebraCommonKernelMatrixCoords3:n];
}

- (void)endGeometryDirect {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) endGeometryDirect];
}

- (jint)calcSphereLongitudesNeededWithDouble:(jdouble)radius
                                  withDouble:(jdouble)viewScale {
  jint longitude = 8;
  jdouble size = radius * viewScale;
  while (longitude * longitude <= 16 * size && longitude < [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) getLongitudeMax]) {
    longitude *= 2;
  }
  return longitude;
}

- (void)drawSphereWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                               withDouble:(jdouble)radius
                                                  withInt:(jint)longitude {
  [self drawSphereWithOrgGeogebraCommonKernelMatrixCoords:center withDouble:radius withInt:longitude withDouble:0 withInt:longitude];
}

- (void)drawSphereWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                               withDouble:(jdouble)radius
                                                  withInt:(jint)longitude
                                               withDouble:(jdouble)longitudeStart
                                                  withInt:(jint)longitudeLength {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [manager_ setDummyTexture];
  jint latitude = longitude / 4;
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([manager_ getView3D])) getCenter];
  jdouble frustumRadius = [((OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk([manager_ getView3D])) getFrustumRadius];
  jdouble z = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) getZ];
  jdouble zMin = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) getZ] - frustumRadius;
  jdouble zMax = [o getZ] + frustumRadius;
  jint latitudeMaxTop = 0;
  latitudeMaxTop = latitude;
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(z + radius, zMax)) {
    jdouble angle = JavaLangMath_asinWithDouble_((zMax - z) / radius);
    latitudeMaxTop = J2ObjCFpToInt((latitude * 2 * angle / JavaLangMath_PI)) + 2;
  }
  jint latitudeMaxBottom = 0;
  latitudeMaxBottom = latitude;
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(zMin, z - radius)) {
    jdouble angle = JavaLangMath_asinWithDouble_((z - zMin) / radius);
    latitudeMaxBottom = J2ObjCFpToInt((latitude * 2 * angle / JavaLangMath_PI)) + 2;
  }
  jint latitudeMax = JavaLangMath_maxWithInt_withInt_(latitudeMaxTop, latitudeMaxBottom);
  jint latitudeMin = 0;
  if (latitudeMaxTop < 0) {
    latitudeMin = -latitudeMaxTop;
  }
  else if (latitudeMaxBottom < 0) {
    latitudeMin = -latitudeMaxBottom;
  }
  if (((IOSObjectArray *) nil_chk(coordsArray_))->size_ <= longitudeLength) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_coordsArray_(self, [IOSObjectArray newArrayWithLength:longitudeLength + 1 type:OrgGeogebraCommonKernelMatrixCoords_class_()]);
    for (jint ui = 0; ui <= longitudeLength; ui++) {
      IOSObjectArray_SetAndConsume(coordsArray_, ui, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
    }
  }
  OrgGeogebraCommonKernelMatrixCoords *n1 = [new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease], *n2 = [new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease], *n1b = [new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease], *n2b = [new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  IOSDoubleArray *cosSinV = [IOSDoubleArray arrayWithLength:2];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_cosSinWithInt_withInt_withDoubleArray_(latitudeMin, latitude, cosSinV);
  jdouble lastCos = 1;
  for (jint ui = 0; ui <= longitudeLength; ui++) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(ui, longitude, longitudeStart, cosSinV, IOSObjectArray_Get(coordsArray_, ui));
  }
  jint shift = 1;
  jboolean jumpNeeded = NO;
  for (jint vi = latitudeMin + 1; vi < latitudeMax; vi++) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_cosSinWithInt_withInt_withDoubleArray_(vi, latitude, cosSinV);
    if (2 * IOSDoubleArray_Get(cosSinV, 0) < lastCos) {
      lastCos = lastCos / 2;
      jumpNeeded = YES;
    }
    else {
      jumpNeeded = NO;
    }
    [n2 setWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(coordsArray_, 0)];
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(0, longitude, longitudeStart, cosSinV, n2b);
    jboolean jump = jumpNeeded;
    for (jint ui = shift; ui <= longitudeLength; ui += shift) {
      [n1 setWithOrgGeogebraCommonKernelMatrixCoords:n2];
      [n2 setWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(coordsArray_, ui)];
      [n1b setWithOrgGeogebraCommonKernelMatrixCoords:n2b];
      if (jumpNeeded) {
        if (jump) {
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(ui + shift, longitude, longitudeStart, cosSinV, n2b);
          if (vi < latitudeMaxTop) {
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2b, center, radius);
          }
          if (vi < latitudeMaxBottom) {
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2b, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
          }
        }
        else {
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(ui, longitude, longitudeStart, cosSinV, n2b);
          if (vi < latitudeMaxTop) {
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
          }
          if (vi < latitudeMaxBottom) {
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
          }
        }
      }
      else {
        OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(ui, longitude, longitudeStart, cosSinV, n2b);
        if (vi < latitudeMaxTop) {
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2b, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
        }
        if (vi < latitudeMaxBottom) {
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1b, center, radius);
          OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2b, center, radius);
        }
      }
      [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(coordsArray_, ui))) setWithOrgGeogebraCommonKernelMatrixCoords:n2b];
      if (jumpNeeded) {
        jump = !jump;
      }
    }
    if (jumpNeeded) {
      shift = shift * 2;
    }
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(0, longitude, longitudeStart, cosSinV, IOSObjectArray_Get(coordsArray_, 0));
  }
  if (latitudeMax == latitude) {
    [n2 setWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(coordsArray_, 0)];
    for (jint ui = shift; ui <= longitudeLength; ui += shift) {
      [n1 setWithOrgGeogebraCommonKernelMatrixCoords:n2];
      [n2 setWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(coordsArray_, ui)];
      if (latitudeMaxTop == latitude) {
        OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
        OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
        OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, OrgGeogebraCommonKernelMatrixCoords_get_VZ_(), center, radius);
      }
      if (latitudeMaxBottom == latitude) {
        OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n1, center, radius);
        OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, OrgGeogebraCommonKernelMatrixCoords_get_VZ_(), center, radius);
        OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, n2, center, radius);
      }
    }
  }
  [manager_ endGeometry];
}

- (void)draw {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  du_ = (uMax_ - uMin_) / uNb_;
  dv_ = (vMax_ - vMin_) / vNb_;
  uMinFadeNb_ = uMinFade_ / du_;
  uMaxFadeNb_ = uMaxFade_ / du_;
  vMinFadeNb_ = vMinFade_ / dv_;
  vMaxFadeNb_ = vMaxFade_ / dv_;
  for (jint ui = 0; ui < uNb_; ui++) {
    for (jint vi = 0; vi < vNb_; vi++) {
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawQuadWithInt_withInt_(self, ui, vi);
    }
  }
  [manager_ endGeometry];
}

- (void)drawSphereWithInt:(jint)size
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
               withDouble:(jdouble)radius {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  OrgGeogebraCommonKernelMatrixCoords *n1, *n2, *n3, *n4, *v1, *v2, *v3, *v4;
  jint longitude = 6;
  size += 3;
  while (longitude * 6 <= size * size) {
    longitude *= 2;
  }
  jint latitude = longitude / 2;
  for (jint ui = 0; ui < longitude; ui++) {
    for (jint vi = -latitude; vi < latitude; vi++) {
      n1 = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withInt_withInt_(ui, vi, longitude, latitude);
      n2 = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withInt_withInt_(ui + 1, vi, longitude, latitude);
      n3 = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withInt_withInt_(ui + 1, vi + 1, longitude, latitude);
      n4 = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withInt_withInt_(ui, vi + 1, longitude, latitude);
      v1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n1)) mulWithDouble:radius]];
      v2 = [center addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n2)) mulWithDouble:radius]];
      v3 = [center addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n3)) mulWithDouble:radius]];
      v4 = [center addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n4)) mulWithDouble:radius]];
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, n1, v1);
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, n2, v2);
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, n3, v3);
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, n1, v1);
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, n3, v3);
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, n4, v4);
    }
  }
  [manager_ endGeometry];
}

+ (void)cosSinWithInt:(jint)vi
              withInt:(jint)latitude
      withDoubleArray:(IOSDoubleArray *)ret {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_cosSinWithInt_withInt_withDoubleArray_(vi, latitude, ret);
}

+ (void)sphericalCoordsWithInt:(jint)ui
                       withInt:(jint)longitude
                    withDouble:(jdouble)longitudeStart
               withDoubleArray:(IOSDoubleArray *)cosSinV
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)n {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(ui, longitude, longitudeStart, cosSinV, n);
}

+ (OrgGeogebraCommonKernelMatrixCoords *)sphericalCoordsWithInt:(jint)ui
                                                        withInt:(jint)vi
                                                        withInt:(jint)longitude
                                                        withInt:(jint)latitude {
  return OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withInt_withInt_(ui, vi, longitude, latitude);
}

- (void)drawWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *)tree {
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *b1 = [((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *) nil_chk(tree)) getVertices];
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *b2 = [tree getNormals];
  jint cnt = [tree getTriangleCount];
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [manager_ textureWithDouble:0 withDouble:0];
  IOSFloatArray *f = [IOSFloatArray arrayWithLength:9];
  IOSFloatArray *n = [IOSFloatArray arrayWithLength:9];
  [((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *) nil_chk(b1)) rewind];
  [((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *) nil_chk(b2)) rewind];
  for (jint i = 0; i < cnt; i++) {
    [b1 getWithFloatArray:f];
    [b2 getWithFloatArray:n];
    [manager_ normalWithDouble:IOSFloatArray_Get(n, 0) withDouble:IOSFloatArray_Get(n, 1) withDouble:IOSFloatArray_Get(n, 2)];
    [manager_ vertexWithDouble:IOSFloatArray_Get(f, 0) withDouble:IOSFloatArray_Get(f, 1) withDouble:IOSFloatArray_Get(f, 2)];
    [manager_ normalWithDouble:IOSFloatArray_Get(n, 3) withDouble:IOSFloatArray_Get(n, 4) withDouble:IOSFloatArray_Get(n, 5)];
    [manager_ vertexWithDouble:IOSFloatArray_Get(f, 3) withDouble:IOSFloatArray_Get(f, 4) withDouble:IOSFloatArray_Get(f, 5)];
    [manager_ normalWithDouble:IOSFloatArray_Get(n, 6) withDouble:IOSFloatArray_Get(n, 7) withDouble:IOSFloatArray_Get(n, 8)];
    [manager_ vertexWithDouble:IOSFloatArray_Get(f, 6) withDouble:IOSFloatArray_Get(f, 7) withDouble:IOSFloatArray_Get(f, 8)];
  }
  [manager_ endGeometry];
}

- (void)discWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                         withDouble:(jdouble)radius {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_FAN()];
  jint longitude = [manager_ getLongitudeDefault];
  OrgGeogebraCommonKernelMatrixCoords *vn;
  jfloat dt = (jfloat) 1 / longitude;
  jfloat da = (jfloat) (2 * JavaLangMath_PI * dt);
  [manager_ textureWithDouble:0 withDouble:0];
  [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:v2]];
  [manager_ triangleFanApexWithOrgGeogebraCommonKernelMatrixCoords:center];
  jfloat u = 1, v = 0;
  vn = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:u])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) mulWithDouble:v]];
  [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) mulWithDouble:radius]]];
  for (jint i = 1; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_cosWithDouble_(i * da);
    v = (jfloat) JavaLangMath_sinWithDouble_(i * da);
    vn = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:u])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:v]];
    [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:[center addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) mulWithDouble:radius]]];
  }
  [manager_ endGeometry];
}

- (void)parallelogramWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                     withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                     withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                                  withDouble:(jdouble)l1
                                                  withDouble:(jdouble)l2 {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [manager_ setDummyTexture];
  [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:v2]];
  [tmpCoords_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v1 withDouble:l1]];
  [tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords_ withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:l2]];
  [tmpCoords3_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords3_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:l2]];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:center];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords_];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:center];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
  [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords3_];
  [manager_ endGeometry];
}

- (void)ellipsePartWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                                withDouble:(jdouble)a
                                                withDouble:(jdouble)b
                                                withDouble:(jdouble)start
                                                withDouble:(jdouble)extent {
  [self ellipsePartWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:v1 withOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:a withDouble:b withDouble:start withDouble:extent withBoolean:YES];
}

- (void)ellipsePartWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                                withDouble:(jdouble)a
                                                withDouble:(jdouble)b
                                                withDouble:(jdouble)start
                                                withDouble:(jdouble)extent
                                               withBoolean:(jboolean)fromEllipseCenter {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_FAN()];
  jint longitude = [manager_ getLongitudeDefault];
  jfloat u, v;
  jfloat dt = (jfloat) 1 / longitude;
  jfloat da = (jfloat) (extent * dt);
  [manager_ setDummyTexture];
  [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:v2]];
  u = (jfloat) JavaLangMath_cosWithDouble_(start);
  v = (jfloat) JavaLangMath_sinWithDouble_(start);
  [v1 mulWithDouble:a * u withOrgGeogebraCommonKernelMatrixCoords:m_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) mulWithDouble:b * v withOrgGeogebraCommonKernelMatrixCoords:tmpCoords_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m_)) addWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords_ withOrgGeogebraCommonKernelMatrixCoords:m_];
  if (fromEllipseCenter) {
    [manager_ triangleFanApexWithOrgGeogebraCommonKernelMatrixCoords:center];
  }
  else {
    u = (jfloat) JavaLangMath_cosWithDouble_(start + extent);
    v = (jfloat) JavaLangMath_sinWithDouble_(start + extent);
    [v1 mulWithDouble:a * u withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
    [v2 mulWithDouble:b * v withOrgGeogebraCommonKernelMatrixCoords:tmpCoords_];
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) addWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
    [tmpCoords2_ addWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
    [tmpCoords2_ mulWithDouble:0.5 withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
    [manager_ triangleFanApexWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
  }
  [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:m_]];
  for (jint i = 1; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_cosWithDouble_(start + i * da);
    v = (jfloat) JavaLangMath_sinWithDouble_(start + i * da);
    [v1 mulWithDouble:a * u withOrgGeogebraCommonKernelMatrixCoords:m_];
    [v2 mulWithDouble:b * v withOrgGeogebraCommonKernelMatrixCoords:tmpCoords_];
    [m_ addWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords_ withOrgGeogebraCommonKernelMatrixCoords:m_];
    [center addWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:m_];
    [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:m_];
  }
  [manager_ endGeometry];
}

- (OrgGeogebraCommonKernelMatrixCoords *)coneWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                             withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vx
                                             withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vy
                                             withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vz
                                                                          withDouble:(jdouble)radius
                                                                          withDouble:(jdouble)start
                                                                          withDouble:(jdouble)extent
                                                                          withDouble:(jdouble)height
                                                                           withFloat:(jfloat)fading {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  jint longitude = [manager_ getLongitudeDefault];
  jfloat u, v;
  jfloat dt = (jfloat) 1 / longitude;
  jfloat da = (jfloat) (extent * dt);
  if (fading == 1) {
    [manager_ setDummyTexture];
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center2_)) setWithOrgGeogebraCommonKernelMatrixCoords:vz];
  [center2_ mulInside3WithDouble:height];
  [center2_ addInsideWithOrgGeogebraCommonKernelMatrixCoords:center];
  jdouble r = radius * -height;
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vz withDouble:radius];
  for (jint i = 0; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_cosWithDouble_(start + i * da);
    v = (jfloat) JavaLangMath_sinWithDouble_(start + i * da);
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m_)) setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vx withDouble:u] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords3_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vy withDouble:v]];
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n_)) setAddWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords_];
    [n_ normalize];
    if (fading < 1) {
      [manager_ textureWithDouble:0 withDouble:fading];
    }
    [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:n_];
    [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:center];
    if (fading < 1) {
      [manager_ textureWithDouble:0 withDouble:1];
    }
    [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:n_];
    [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center2_ withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords3_ setMulWithOrgGeogebraCommonKernelMatrixCoords:m_ withDouble:r]]];
  }
  [manager_ endGeometry];
  return center2_;
}

- (void)coneWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vx
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vy
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vz
                                         withDouble:(jdouble)radius
                                         withDouble:(jdouble)start
                                         withDouble:(jdouble)extent
                                         withDouble:(jdouble)min
                                         withDouble:(jdouble)max
                                        withBoolean:(jboolean)minFading
                                        withBoolean:(jboolean)maxFading {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  jint longitude = [manager_ getLongitudeDefault];
  jfloat u, v;
  jfloat dt = (jfloat) 1 / longitude;
  jfloat da = (jfloat) (extent * dt);
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center1_)) setWithOrgGeogebraCommonKernelMatrixCoords:vz];
  [center1_ mulInside3WithDouble:min];
  [center1_ addInsideWithOrgGeogebraCommonKernelMatrixCoords:center];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center2_)) setWithOrgGeogebraCommonKernelMatrixCoords:vz];
  [center2_ mulInside3WithDouble:max];
  [center2_ addInsideWithOrgGeogebraCommonKernelMatrixCoords:center];
  jdouble r1 = radius * min;
  jdouble r2 = radius * max;
  jint sgn = 1;
  if (max > 0) {
    sgn = -1;
  }
  else {
    r1 *= -1;
    r2 *= -1;
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vz withDouble:radius * sgn];
  jboolean fading = minFading || maxFading;
  if (!fading) {
    [manager_ setDummyTexture];
  }
  for (jint i = 0; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_cosWithDouble_(start + i * da);
    v = (jfloat) JavaLangMath_sinWithDouble_(start + i * da);
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m_)) setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vx withDouble:u] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords3_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vy withDouble:v]];
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n_)) setAddWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords_];
    [n_ normalize];
    if (fading) {
      if (maxFading) {
        [manager_ textureWithDouble:0 withDouble:1];
      }
      else {
        [manager_ textureWithDouble:0 withDouble:0];
      }
    }
    [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:n_];
    [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center2_ withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords3_ setMulWithOrgGeogebraCommonKernelMatrixCoords:m_ withDouble:r2]]];
    if (fading) {
      if (minFading) {
        [manager_ textureWithDouble:0 withDouble:1];
      }
      else {
        [manager_ textureWithDouble:0 withDouble:0];
      }
    }
    [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:n_];
    [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center1_ withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords3_ setMulWithOrgGeogebraCommonKernelMatrixCoords:m_ withDouble:r1]]];
  }
  [manager_ endGeometry];
}

- (OrgGeogebraCommonKernelMatrixCoords *)cylinderWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                                 withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vx
                                                 withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vy
                                                 withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vz
                                                                              withDouble:(jdouble)radius
                                                                              withDouble:(jdouble)start
                                                                              withDouble:(jdouble)extent
                                                                              withDouble:(jdouble)min
                                                                              withDouble:(jdouble)max
                                                                             withBoolean:(jboolean)minFading
                                                                             withBoolean:(jboolean)maxFading
                                                                                 withInt:(jint)longitude {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  jfloat u, v;
  jfloat dt = (jfloat) 1 / longitude;
  jfloat da = (jfloat) (extent * dt);
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center1_)) setWithOrgGeogebraCommonKernelMatrixCoords:vz];
  [center1_ mulInside3WithDouble:min];
  [center1_ addInsideWithOrgGeogebraCommonKernelMatrixCoords:center];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center2_)) setWithOrgGeogebraCommonKernelMatrixCoords:vz];
  [center2_ mulInside3WithDouble:max];
  [center2_ addInsideWithOrgGeogebraCommonKernelMatrixCoords:center];
  jboolean fading = minFading || maxFading;
  if (!fading) {
    [manager_ setDummyTexture];
  }
  for (jint i = 0; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_cosWithDouble_(start + i * da);
    v = (jfloat) JavaLangMath_sinWithDouble_(start + i * da);
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n_)) setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vx withDouble:u] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vy withDouble:v]];
    if (fading) {
      if (maxFading) {
        [manager_ textureWithDouble:0 withDouble:1];
      }
      else {
        [manager_ textureWithDouble:0 withDouble:0];
      }
    }
    [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:n_];
    [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center2_ withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:n_ withDouble:radius]]];
    if (fading) {
      if (minFading) {
        [manager_ textureWithDouble:0 withDouble:1];
      }
      else {
        [manager_ textureWithDouble:0 withDouble:0];
      }
    }
    [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:n_];
    [manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center1_ withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setMulWithOrgGeogebraCommonKernelMatrixCoords:n_ withDouble:radius]]];
  }
  [manager_ endGeometry];
  return center2_;
}

- (void)hyperbolaPartWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                     withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                     withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                                  withDouble:(jdouble)a
                                                  withDouble:(jdouble)b
                                                  withDouble:(jdouble)tMin
                                                  withDouble:(jdouble)tMax {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_FAN()];
  [manager_ textureWithDouble:0 withDouble:0];
  [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:v2]];
  jint longitude = [manager_ getLongitudeDefault];
  OrgGeogebraCommonKernelMatrixCoords *m;
  jfloat dt = (jfloat) (tMax - tMin) / longitude;
  jfloat u, v;
  u = (jfloat) JavaLangMath_coshWithDouble_(tMin);
  v = (jfloat) JavaLangMath_sinhWithDouble_(tMin);
  m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:a * u])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) mulWithDouble:b * v]];
  u = (jfloat) JavaLangMath_coshWithDouble_(tMax);
  v = (jfloat) JavaLangMath_sinhWithDouble_(tMax);
  [manager_ triangleFanApexWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:a * u])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:b * v]]]))) mulWithDouble:0.5]]];
  [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:[center addWithOrgGeogebraCommonKernelMatrixCoords:m]];
  for (jint i = 1; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_coshWithDouble_(tMin + i * dt);
    v = (jfloat) JavaLangMath_sinhWithDouble_(tMin + i * dt);
    m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:a * u])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:b * v]];
    [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:[center addWithOrgGeogebraCommonKernelMatrixCoords:m]];
  }
  [manager_ endGeometry];
}

- (void)parabolaWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                             withDouble:(jdouble)p
                                             withDouble:(jdouble)tMin
                                             withDouble:(jdouble)tMax {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_FAN()];
  [manager_ textureWithDouble:0 withDouble:0];
  [manager_ normalWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:v2]];
  jint longitude = [manager_ getLongitudeDefault];
  OrgGeogebraCommonKernelMatrixCoords *m;
  jfloat dt = (jfloat) (tMax - tMin) / longitude;
  jfloat u, v;
  jdouble t;
  t = tMin;
  u = (jfloat) (p * t * t / 2);
  v = (jfloat) (p * t);
  m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:u])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) mulWithDouble:v]];
  t = tMax;
  u = (jfloat) (p * t * t / 2);
  v = (jfloat) (p * t);
  [manager_ triangleFanApexWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:u])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:v]]]))) mulWithDouble:0.5]]];
  [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:[center addWithOrgGeogebraCommonKernelMatrixCoords:m]];
  for (jint i = 1; i <= longitude; i++) {
    t = tMin + i * dt;
    u = (jfloat) (p * t * t / 2);
    v = (jfloat) (p * t);
    m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:u])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:v]];
    [manager_ triangleFanVertexWithOrgGeogebraCommonKernelMatrixCoords:[center addWithOrgGeogebraCommonKernelMatrixCoords:m]];
  }
  [manager_ endGeometry];
}

- (OrgGeogebraCommonKernelMatrixCoords *)calcNormalWithFloat:(jfloat)x
                                                   withFloat:(jfloat)y
                                                   withFloat:(jfloat)z {
  IOSDoubleArray *n = [IOSDoubleArray arrayWithLength:3];
  OrgGeogebraCommonKernelMatrixCoords *v0 = [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(x, y, z, 0) autorelease];
  OrgGeogebraCommonKernelMatrixCoords *v1 = [((OrgGeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(function_)) evaluatePointWithDouble:x + 1e-9 withDouble:y];
  OrgGeogebraCommonKernelMatrixCoords *v2 = [function_ evaluatePointWithDouble:x withDouble:y + 1e-9];
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) subWithOrgGeogebraCommonKernelMatrixCoords:v0])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) subWithOrgGeogebraCommonKernelMatrixCoords:v0]])) normalized];
}

- (void)drawTriangleWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)d {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  jfloat uT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(1, uNb_, uMinFadeNb_, uMaxFadeNb_);
  jfloat vT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(1, vNb_, vMinFadeNb_, vMaxFadeNb_);
  [manager_ textureWithDouble:uT withDouble:vT];
  IOSFloatArray *f = [IOSFloatArray arrayWithLength:9];
  [((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *) nil_chk(d)) getWithFloatArray:f];
  [manager_ vertexWithDouble:IOSFloatArray_Get(f, 0) withDouble:IOSFloatArray_Get(f, 1) withDouble:IOSFloatArray_Get(f, 2)];
  [manager_ vertexWithDouble:IOSFloatArray_Get(f, 3) withDouble:IOSFloatArray_Get(f, 4) withDouble:IOSFloatArray_Get(f, 5)];
  [manager_ vertexWithDouble:IOSFloatArray_Get(f, 6) withDouble:IOSFloatArray_Get(f, 7) withDouble:IOSFloatArray_Get(f, 8)];
  [manager_ endGeometry];
  [d flip];
  [manager_ endGeometry];
}

- (void)drawQuadWithInt:(jint)ui
                withInt:(jint)vi {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawQuadWithInt_withInt_(self, ui, vi);
}

- (void)drawTNVWithInt:(jint)ui
               withInt:(jint)vi {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(self, ui, vi);
}

- (void)drawNCrWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)normal
               withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                            withDouble:(jdouble)radius {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, normal, center, radius);
}

- (void)drawNCrmWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)normal
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                                             withDouble:(jdouble)radius {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, normal, center, radius);
}

- (void)drawNVWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)normal
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, normal, point);
}

+ (jfloat)getTextureCoordWithInt:(jint)i
                         withInt:(jint)n
                       withFloat:(jfloat)fadeMin
                       withFloat:(jfloat)fadeMax {
  return OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(i, n, fadeMin, fadeMax);
}

- (void)dealloc {
  RELEASE_(manager_);
  RELEASE_(functional2Var_);
  RELEASE_(function_);
  RELEASE_(coordsArray_);
  RELEASE_(m_);
  RELEASE_(tmpCoords_);
  RELEASE_(tmpCoords2_);
  RELEASE_(tmpCoords3_);
  RELEASE_(center1_);
  RELEASE_(center2_);
  RELEASE_(n_);
  RELEASE_(coords1_);
  RELEASE_(normal2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:", "PlotterSurface", NULL, 0x1, NULL, NULL },
    { "startWithInt:", "start", "V", 0x1, NULL, NULL },
    { "startWithOrgGeogebraCommonKernelArithmeticFunctional2Var:withInt:", "start", "V", 0x1, NULL, NULL },
    { "startWithOrgGeogebraCommonKernelGeosGeoFunctionNVar:withInt:", "start", "V", 0x1, NULL, NULL },
    { "end", NULL, "I", 0x1, NULL, NULL },
    { "setUWithFloat:withFloat:", "setU", "V", 0x1, NULL, NULL },
    { "setVWithFloat:withFloat:", "setV", "V", 0x1, NULL, NULL },
    { "setNbUWithInt:", "setNbU", "V", 0x1, NULL, NULL },
    { "setNbVWithInt:", "setNbV", "V", 0x1, NULL, NULL },
    { "setUFadingWithFloat:withFloat:", "setUFading", "V", 0x1, NULL, NULL },
    { "setVFadingWithFloat:withFloat:", "setVFading", "V", 0x1, NULL, NULL },
    { "drawTriangleWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "drawTriangle", "V", 0x1, NULL, NULL },
    { "drawQuadWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "drawQuad", "V", 0x1, NULL, NULL },
    { "drawQuadNoTextureWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "drawQuadNoTexture", "V", 0x1, NULL, NULL },
    { "drawQuadWireFrameWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "drawQuadWireFrame", "V", 0x1, NULL, NULL },
    { "startTrianglesWireFrame", NULL, "V", 0x1, NULL, NULL },
    { "startTrianglesWireFrameSurface", NULL, "V", 0x1, NULL, NULL },
    { "startTrianglesWireFrameSurfaceBoundary", NULL, "V", 0x1, NULL, NULL },
    { "startTriangles", NULL, "V", 0x1, NULL, NULL },
    { "startTrianglesWithInt:", "startTriangles", "V", 0x1, NULL, NULL },
    { "vertexDirectWithOrgGeogebraCommonKernelMatrixCoords3:", "vertexDirect", "V", 0x1, NULL, NULL },
    { "normalDirectWithOrgGeogebraCommonKernelMatrixCoords3:", "normalDirect", "V", 0x1, NULL, NULL },
    { "endGeometryDirect", NULL, "V", 0x1, NULL, NULL },
    { "calcSphereLongitudesNeededWithDouble:withDouble:", "calcSphereLongitudesNeeded", "I", 0x1, NULL, NULL },
    { "drawSphereWithOrgGeogebraCommonKernelMatrixCoords:withDouble:withInt:", "drawSphere", "V", 0x1, NULL, NULL },
    { "drawSphereWithOrgGeogebraCommonKernelMatrixCoords:withDouble:withInt:withDouble:withInt:", "drawSphere", "V", 0x1, NULL, NULL },
    { "draw", NULL, "V", 0x1, NULL, NULL },
    { "drawSphereWithInt:withOrgGeogebraCommonKernelMatrixCoords:withDouble:", "drawSphere", "V", 0x1, NULL, NULL },
    { "cosSinWithInt:withInt:withDoubleArray:", "cosSin", "V", 0xa, NULL, NULL },
    { "sphericalCoordsWithInt:withInt:withDouble:withDoubleArray:withOrgGeogebraCommonKernelMatrixCoords:", "sphericalCoords", "V", 0x1a, NULL, NULL },
    { "sphericalCoordsWithInt:withInt:withInt:withInt:", "sphericalCoords", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0xa, NULL, NULL },
    { "drawWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2:", "draw", "V", 0x1, NULL, NULL },
    { "discWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:", "disc", "V", 0x1, NULL, NULL },
    { "parallelogramWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:", "parallelogram", "V", 0x1, NULL, NULL },
    { "ellipsePartWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:", "ellipsePart", "V", 0x1, NULL, NULL },
    { "ellipsePartWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:withBoolean:", "ellipsePart", "V", 0x1, NULL, NULL },
    { "coneWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:withFloat:", "cone", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "coneWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:withDouble:withBoolean:withBoolean:", "cone", "V", 0x1, NULL, NULL },
    { "cylinderWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:withDouble:withBoolean:withBoolean:withInt:", "cylinder", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "hyperbolaPartWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:", "hyperbolaPart", "V", 0x1, NULL, NULL },
    { "parabolaWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:", "parabola", "V", 0x1, NULL, NULL },
    { "calcNormalWithFloat:withFloat:withFloat:", "calcNormal", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x2, NULL, NULL },
    { "drawTriangleWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer:", "drawTriangle", "V", 0x1, NULL, NULL },
    { "drawQuadWithInt:withInt:", "drawQuad", "V", 0x2, NULL, NULL },
    { "drawTNVWithInt:withInt:", "drawTNV", "V", 0x2, NULL, NULL },
    { "drawNCrWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:", "drawNCr", "V", 0x2, NULL, NULL },
    { "drawNCrmWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:", "drawNCrm", "V", 0x2, NULL, NULL },
    { "drawNVWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "drawNV", "V", 0x2, NULL, NULL },
    { "getTextureCoordWithInt:withInt:withFloat:withFloat:", "getTextureCoord", "F", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "manager_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.Manager;", NULL, NULL,  },
    { "index_", NULL, 0x2, "I", NULL, NULL,  },
    { "functional2Var_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Functional2Var;", NULL, NULL,  },
    { "function_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "uMin_", NULL, 0x2, "F", NULL, NULL,  },
    { "uMax_", NULL, 0x2, "F", NULL, NULL,  },
    { "vMin_", NULL, 0x2, "F", NULL, NULL,  },
    { "vMax_", NULL, 0x2, "F", NULL, NULL,  },
    { "uNb_", NULL, 0x2, "I", NULL, NULL,  },
    { "vNb_", NULL, 0x2, "I", NULL, NULL,  },
    { "du_", NULL, 0x2, "F", NULL, NULL,  },
    { "dv_", NULL, 0x2, "F", NULL, NULL,  },
    { "uMinFade_", NULL, 0x2, "F", NULL, NULL,  },
    { "uMaxFade_", NULL, 0x2, "F", NULL, NULL,  },
    { "vMinFade_", NULL, 0x2, "F", NULL, NULL,  },
    { "vMaxFade_", NULL, 0x2, "F", NULL, NULL,  },
    { "uMinFadeNb_", NULL, 0x2, "F", NULL, NULL,  },
    { "uMaxFadeNb_", NULL, 0x2, "F", NULL, NULL,  },
    { "vMinFadeNb_", NULL, 0x2, "F", NULL, NULL,  },
    { "vMaxFadeNb_", NULL, 0x2, "F", NULL, NULL,  },
    { "TEXTURE_FADE_OUT_", NULL, 0x1a, "F", NULL, NULL, .constantValue.asFloat = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_OUT },
    { "TEXTURE_FADE_IN_", NULL, 0x1a, "F", NULL, NULL, .constantValue.asFloat = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_IN },
    { "coordsArray_", NULL, 0x2, "[Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "m_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords3_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "center1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "center2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "coords1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "normal2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface = { 2, "PlotterSurface", "org.geogebra.common.geogebra3D.euclidian3D.openGL", NULL, 0x1, 49, methods, 32, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  NSObject_init(self);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_coordsArray_(self, [IOSObjectArray newArrayWithLength:0 type:OrgGeogebraCommonKernelMatrixCoords_class_()]);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_m_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_tmpCoords_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_tmpCoords2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_tmpCoords3_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_center1_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_center2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_n_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_coords1_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_setAndConsume_normal2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_set_manager_(self, manager);
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_cosSinWithInt_withInt_withDoubleArray_(jint vi, jint latitude, IOSDoubleArray *ret) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initialize();
  jdouble v = ((jdouble) vi / latitude) * JavaLangMath_PI / 2;
  *IOSDoubleArray_GetRef(nil_chk(ret), 0) = JavaLangMath_cosWithDouble_(v);
  *IOSDoubleArray_GetRef(ret, 1) = JavaLangMath_sinWithDouble_(v);
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withDouble_withDoubleArray_withOrgGeogebraCommonKernelMatrixCoords_(jint ui, jint longitude, jdouble longitudeStart, IOSDoubleArray *cosSinV, OrgGeogebraCommonKernelMatrixCoords *n) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initialize();
  jdouble u = ((jdouble) ui / longitude) * 2 * JavaLangMath_PI + longitudeStart;
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n)) setXWithDouble:JavaLangMath_cosWithDouble_(u) * IOSDoubleArray_Get(nil_chk(cosSinV), 0)];
  [n setYWithDouble:JavaLangMath_sinWithDouble_(u) * IOSDoubleArray_Get(cosSinV, 0)];
  [n setZWithDouble:IOSDoubleArray_Get(cosSinV, 1)];
}

OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_sphericalCoordsWithInt_withInt_withInt_withInt_(jint ui, jint vi, jint longitude, jint latitude) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initialize();
  jdouble u = ((jdouble) ui / longitude) * 2 * JavaLangMath_PI;
  jdouble v = ((jdouble) vi / latitude) * JavaLangMath_PI / 2;
  return [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(JavaLangMath_cosWithDouble_(u) * JavaLangMath_cosWithDouble_(v), JavaLangMath_sinWithDouble_(u) * JavaLangMath_cosWithDouble_(v), JavaLangMath_sinWithDouble_(v), 0) autorelease];
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawQuadWithInt_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, jint ui, jint vi) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(self, ui, vi);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(self, ui + 1, vi);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(self, ui + 1, vi + 1);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(self, ui, vi);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(self, ui + 1, vi + 1);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(self, ui, vi + 1);
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawTNVWithInt_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, jint ui, jint vi) {
  jfloat uT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(ui, self->uNb_, self->uMinFadeNb_, self->uMaxFadeNb_);
  jfloat vT = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(vi, self->vNb_, self->vMinFadeNb_, self->vMaxFadeNb_);
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(self->manager_)) textureWithDouble:uT withDouble:vT];
  jfloat u = self->uMin_ + ui * self->du_;
  jfloat v = self->vMin_ + vi * self->dv_;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, [((id<OrgGeogebraCommonKernelArithmeticFunctional2Var>) nil_chk(self->functional2Var_)) evaluateNormalWithDouble:u withDouble:v], [self->functional2Var_ evaluatePointWithDouble:u withDouble:v]);
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, OrgGeogebraCommonKernelMatrixCoords *normal, OrgGeogebraCommonKernelMatrixCoords *center, jdouble radius) {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(normal)) mulWithDouble:radius withOrgGeogebraCommonKernelMatrixCoords:self->coords1_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:self->coords1_ withOrgGeogebraCommonKernelMatrixCoords:self->coords1_];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, normal, self->coords1_);
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrmWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, OrgGeogebraCommonKernelMatrixCoords *normal, OrgGeogebraCommonKernelMatrixCoords *center, jdouble radius) {
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->normal2_)) setXWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(normal)) getX]];
  [self->normal2_ setYWithDouble:[normal getY]];
  [self->normal2_ setZWithDouble:-[normal getZ]];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNCrWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_(self, self->normal2_, center, radius);
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_drawNVWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *self, OrgGeogebraCommonKernelMatrixCoords *normal, OrgGeogebraCommonKernelMatrixCoords *point) {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(self->manager_)) normalWithOrgGeogebraCommonKernelMatrixCoords:normal];
  [self->manager_ vertexWithOrgGeogebraCommonKernelMatrixCoords:point];
}

jfloat OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_getTextureCoordWithInt_withInt_withFloat_withFloat_(jint i, jint n, jfloat fadeMin, jfloat fadeMax) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_initialize();
  jfloat t;
  if (fadeMin != 0) {
    if (i <= n / 2) {
      t = i / fadeMin;
      return OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_OUT * (1 - t) + OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_IN * t;
    }
  }
  if (fadeMax != 0) {
    if (i >= n / 2) {
      t = (n - i) / fadeMax;
      return OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_OUT * (1 - t) + OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_IN * t;
    }
  }
  return OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface_TEXTURE_FADE_IN;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface)
