//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShadersBindBuffers.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/GLBuffer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/GLFactory.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/GPUBuffers.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Manager.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShaders.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShadersBindBuffers.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShadersNoTriangleFan.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrush.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrushElements.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Renderer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/RendererShadersInterface.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers () {
 @public
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *this$1_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers, this$1_, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *)

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers () {
 @public
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *this$1_;
  id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers> buffers_;
  IOSShortArray *bufferI_;
  jboolean indicesDone_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers, this$1_, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers, buffers_, id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers, bufferI_, IOSShortArray *)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
                   withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3d {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, renderer, view3d);
  return self;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *)newGeometriesSet {
  return [new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_(self) autorelease];
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)newPlotterBrush {
  return [new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self) autorelease];
}

- (IOSShortArray *)getCurrentGeometryIndicesWithInt:(jint)size {
  return [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers *) check_class_cast(((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk(currentGeometriesSet_))->currentGeometry_, [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers class])))) getBufferIWithInt:size];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "ManagerShadersBindBuffers", NULL, 0x1, NULL, NULL },
    { "newGeometriesSet", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$GeometriesSet;", 0x4, NULL, NULL },
    { "newPlotterBrush", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrush;", 0x4, NULL, NULL },
    { "getCurrentGeometryIndicesWithInt:", "getCurrentGeometryIndices", "[S", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "GLSL_ATTRIB_POSITION_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_POSITION },
    { "GLSL_ATTRIB_COLOR_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_COLOR },
    { "GLSL_ATTRIB_NORMAL_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_NORMAL },
    { "GLSL_ATTRIB_TEXTURE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_TEXTURE },
    { "GLSL_ATTRIB_INDEX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_INDEX },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShadersBindBuffers$GeometriesSetBindBuffers;", "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShadersBindBuffers$GeometryBindBuffers;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers = { 2, "ManagerShadersBindBuffers", "org.geogebra.common.geogebra3D.euclidian3D.openGL", NULL, 0x1, 4, methods, 5, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *renderer, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersNoTriangleFan_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, renderer, view3d);
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *renderer, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, renderer, view3d);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *)newGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type {
  return [new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(this$1_, type) autorelease];
}

- (void)bindGeometry {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers *) check_class_cast(currentGeometry_, [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers class])))) bind];
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *)outer$ {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$1_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:", "newGeometry", "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$Geometry;", 0x4, NULL, NULL },
    { "bindGeometry", NULL, "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShadersBindBuffers;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers = { 2, "GeometriesSetBindBuffers", "org.geogebra.common.geogebra3D.euclidian3D.openGL", "ManagerShadersBindBuffers", 0x4, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *outer$) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers_set_this$1_(self, outer$);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_(self, outer$);
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *outer$) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometriesSetBindBuffers)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *)outer$
                             withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(self, outer$, type);
  return self;
}

- (void)bind {
  if (buffers_ == nil) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_set_buffers_(self, [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLFactory *) nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLFactory_get_prototype_())) newGPUBuffers]);
    [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(this$1_->renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) createBuffersWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_];
  }
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(this$1_->renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) storeBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getVertices] withInt:[self getLength] withInt:3 withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_POSITION];
  if ([self getNormals] != nil && ![((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk([self getNormals])) isEmpty] && [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk([self getNormals])) capacity] != 3) {
    [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(this$1_->renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) storeBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getNormals] withInt:[self getLength] withInt:3 withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_NORMAL];
  }
  if ([self getColors] != nil && ![((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk([self getColors])) isEmpty]) {
    [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(this$1_->renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) storeBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getColors] withInt:[self getLength] withInt:4 withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_COLOR];
  }
  if ([self getTextures] != nil && ![((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk([self getTextures])) isEmpty]) {
    [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(this$1_->renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) storeBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getTextures] withInt:[self getLength] withInt:2 withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_TEXTURE];
  }
  if (bufferI_ == nil || (!indicesDone_ && bufferI_->size_ != [self getLength])) {
    OrgGeogebraCommonMainApp_debugWithNSString_(@"NEW index buffer");
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_setAndConsume_bufferI_(self, [IOSShortArray newArrayWithLength:[self getLength]]);
    for (jshort i = 0; i < [self getLength]; i++) {
      *IOSShortArray_GetRef(bufferI_, i) = i;
    }
  }
  else {
    OrgGeogebraCommonMainApp_debugWithNSString_(@"keep same index buffer");
  }
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(this$1_->renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) storeElementBufferWithShortArray:bufferI_ withInt:((IOSShortArray *) nil_chk(bufferI_))->size_ withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_];
}

- (void)drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface:(id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>)r {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(r)) bindBufferForVerticesWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_POSITION withInt:3];
  [r bindBufferForNormalsWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_NORMAL withInt:3 withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getNormals]];
  [r bindBufferForColorsWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_COLOR withInt:4 withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getColors]];
  [r bindBufferForTexturesWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_ withInt:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GLSL_ATTRIB_TEXTURE withInt:2 withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getTextures]];
  [r bindBufferForIndicesWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGPUBuffers:buffers_];
  [r drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:[self getType] withInt:((IOSShortArray *) nil_chk(bufferI_))->size_];
}

- (IOSShortArray *)getBufferIWithInt:(jint)size {
  indicesDone_ = YES;
  if (bufferI_ == nil || bufferI_->size_ != size) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_setAndConsume_bufferI_(self, [IOSShortArray newArrayWithLength:size]);
  }
  return bufferI_;
}

- (void)dealloc {
  RELEASE_(this$1_);
  RELEASE_(buffers_);
  RELEASE_(bufferI_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers:withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:", "GeometryBindBuffers", NULL, 0x1, NULL, NULL },
    { "bind", NULL, "V", 0x1, NULL, NULL },
    { "drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface:", "draw", "V", 0x1, NULL, NULL },
    { "getBufferIWithInt:", "getBufferI", "[S", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShadersBindBuffers;", NULL, NULL,  },
    { "buffers_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GPUBuffers;", NULL, NULL,  },
    { "bufferI_", NULL, 0x2, "[S", NULL, NULL,  },
    { "indicesDone_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers = { 2, "GeometryBindBuffers", "org.geogebra.common.geogebra3D.euclidian3D.openGL", "ManagerShadersBindBuffers", 0x4, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *outer$, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *type) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_set_this$1_(self, outer$);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(self, outer$, type);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_set_buffers_(self, nil);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_set_bufferI_(self, nil);
  self->indicesDone_ = NO;
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *outer$, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *type) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(self, outer$, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers_GeometryBindBuffers)
