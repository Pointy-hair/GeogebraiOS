//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrushElements.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Manager.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShadersBindBuffers.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrush.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrushElements.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrushSection.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements () {
 @public
  jboolean useStartCurve_;
}

- (void)startCurveWithInt:(jint)size;

- (void)endCurveWithInt:(jint)size;

@end

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_startCurveWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements *self, jint size);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_endCurveWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements *self, jint size);

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)manager {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

- (void)arcWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
           withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
           withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                        withDouble:(jdouble)radius
                                        withDouble:(jdouble)start
                                        withDouble:(jdouble)extent
                                           withInt:(jint)longitude {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_startCurveWithInt_(self, longitude);
  [super arcWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:v1 withOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:radius withDouble:start withDouble:extent withInt:longitude];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_endCurveWithInt_(self, longitude);
}

- (void)startCurveWithInt:(jint)size {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_startCurveWithInt_(self, size);
}

- (void)endCurveWithInt:(jint)size {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_endCurveWithInt_(self, size);
}

- (void)join {
  if (useStartCurve_) {
    for (jint i = 0; i < OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES; i++) {
      [self drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:start__ withDouble:IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_get_SINUS_()), i) withDouble:IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_get_COSINUS_()), i) withInt:0];
    }
  }
  else {
    [super join];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:", "PlotterBrushElements", NULL, 0x1, NULL, NULL },
    { "arcWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withInt:", "arc", "V", 0x1, NULL, NULL },
    { "startCurveWithInt:", "startCurve", "V", 0x2, NULL, NULL },
    { "endCurveWithInt:", "endCurve", "V", 0x2, NULL, NULL },
    { "join", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "useStartCurve_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements = { 2, "PlotterBrushElements", "org.geogebra.common.geogebra3D.euclidian3D.openGL", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  self->useStartCurve_ = NO;
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_startCurveWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements *self, jint size) {
  self->useStartCurve_ = YES;
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(self->manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements_endCurveWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements *self, jint size) {
  for (jint i = 0; i < OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES; i++) {
    [self drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:self->end__ withDouble:IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_get_SINUS_()), i) withDouble:IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_get_COSINUS_()), i) withInt:1];
  }
  IOSShortArray *bufferI = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *) nil_chk(((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers *) check_class_cast(self->manager_, [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShadersBindBuffers class])))) getCurrentGeometryIndicesWithInt:3 * 2 * size * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES];
  jint index = 0;
  for (jint k = 0; k < size; k++) {
    for (jint i = 0; i < OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES; i++) {
      jint iNext = (i + 1) % OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES;
      *IOSShortArray_GetRef(nil_chk(bufferI), index) = (jshort) (i + k * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
      index++;
      *IOSShortArray_GetRef(bufferI, index) = (jshort) (i + (k + 1) * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
      index++;
      *IOSShortArray_GetRef(bufferI, index) = (jshort) (iNext + (k + 1) * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
      index++;
      *IOSShortArray_GetRef(bufferI, index) = (jshort) (i + k * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
      index++;
      *IOSShortArray_GetRef(bufferI, index) = (jshort) (iNext + (k + 1) * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
      index++;
      *IOSShortArray_GetRef(bufferI, index) = (jshort) (iNext + k * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
      index++;
    }
  }
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(self->manager_)) endGeometry];
  self->useStartCurve_ = NO;
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("I", size));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushElements)
