//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrush.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/euclidian/draw/DrawVector.h"
#include "org/geogebra/common/euclidian/plot/CurvePlotter.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Manager.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrush.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrushSection.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian3DInterface.h"

#define OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_ID 1
#define OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE 2
#define OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_LINEAR 3
#define OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE_FACTOR 0.05f

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush () {
 @public
  jint index_;
  jboolean justStarted_;
  jboolean notStarted_;
  jfloat thickness_;
  jint lineThickness_;
  jfloat scale__;
  jfloat length_;
  jfloat red_, green_, blue_, alpha_;
  jboolean hasColor_;
  jfloat texturePosZero_, textureValZero_;
  IOSFloatArray *textureX_;
  jint textureTypeX_;
  jint textureTypeY_;
  jfloat curvePos_;
  jint arrowType_;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *ticks_;
  jfloat ticksDistance_;
  jfloat ticksOffset_;
  OrgGeogebraCommonKernelMatrixCoords *drawNormal_, *drawPos_;
  OrgGeogebraCommonKernelMatrixCoords *m_, *vn1_;
  OrgGeogebraCommonKernelMatrixCoords *tmpCoords_, *tmpCoords2_, *tmpCoords3_, *tmpCoords4_;
  OrgGeogebraCommonKernelMatrixCoords *f1_, *f2_, *vn2_;
}

- (void)downWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockU
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockV;

- (void)moveToWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockU
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockV;

- (void)vertexWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v;

- (void)setTextureTypeWithInt:(jint)type;

- (void)setTextureXWithFloat:(jfloat)x0
                   withFloat:(jfloat)x1;

- (void)setTextureXWithFloat:(jfloat)x;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, textureX_, IOSFloatArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, ticks_, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, drawNormal_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, drawPos_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, m_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, vn1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, tmpCoords_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, tmpCoords2_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, tmpCoords3_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, tmpCoords4_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, f1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, f2_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, vn2_, OrgGeogebraCommonKernelMatrixCoords *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, TEXTURE_ID, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, TEXTURE_AFFINE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, TEXTURE_LINEAR, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, TEXTURE_AFFINE_FACTOR, jfloat)

static jfloat OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_LENGTH_ = 3.0f;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, ARROW_LENGTH_, jfloat)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, ARROW_LENGTH_, jfloat)

static jfloat OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_WIDTH_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, ARROW_WIDTH_, jfloat)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush, ARROW_WIDTH_, jfloat)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, OrgGeogebraCommonKernelMatrixCoords *point, OrgGeogebraCommonKernelMatrixCoords *clockU, OrgGeogebraCommonKernelMatrixCoords *clockV);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_moveToWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, OrgGeogebraCommonKernelMatrixCoords *point, OrgGeogebraCommonKernelMatrixCoords *clockU, OrgGeogebraCommonKernelMatrixCoords *clockV);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_vertexWithOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, OrgGeogebraCommonKernelMatrixCoords *v);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, jint type);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_withFloat_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, jfloat x0, jfloat x1);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, jfloat x);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush)

IOSDoubleArray *OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_COSINUS_;
IOSDoubleArray *OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_SINUS_;

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)manager {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

- (void)startWithInt:(jint)old {
  index_ = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startNewListWithInt:old];
  hasColor_ = NO;
  notStarted_ = YES;
}

- (jint)end {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) endList];
  return index_;
}

- (void)downWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(start__)) setWithOrgGeogebraCommonKernelMatrixCoords:point withFloat:thickness_];
  justStarted_ = YES;
  notStarted_ = NO;
}

- (void)downWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockU
            withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockV {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, point, clockU, clockV);
}

- (void)moveToWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  if (justStarted_) {
    [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(end__)) setWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:start__ withOrgGeogebraCommonKernelMatrixCoords:point withFloat:thickness_ withBoolean:YES];
    justStarted_ = NO;
  }
  else {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *tmp = start__;
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_start__(self, end__);
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_end__(self, tmp);
    [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(end__)) setWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:start__ withOrgGeogebraCommonKernelMatrixCoords:point withFloat:thickness_ withBoolean:NO];
  }
  [self join];
}

- (void)curveToWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  if (notStarted_) {
    notStarted_ = NO;
    [self setCurvePosWithFloat:0];
    [self downWithOrgGeogebraCommonKernelMatrixCoords:point];
    return;
  }
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) equalsForKernelWithOrgGeogebraCommonKernelMatrixCoords:((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(start__))->center_ withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) {
    return;
  }
  if (justStarted_) {
    justStarted_ = NO;
  }
  else {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *tmp = start__;
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_start__(self, end__);
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_end__(self, tmp);
  }
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(end__)) setWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:start__ withOrgGeogebraCommonKernelMatrixCoords:point withFloat:thickness_];
  [self addCurvePosWithFloat:(jfloat) end__->length_];
  [self join];
}

- (void)moveToWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockU
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)clockV {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_moveToWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, point, clockU, clockV);
}

- (void)join {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  jdouble u, v;
  for (jint i = 0; i <= OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES; i++) {
    u = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_SINUS_), i);
    v = IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_COSINUS_), i);
    [self drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:start__ withDouble:u withDouble:v withInt:0];
    [self drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:end__ withDouble:u withDouble:v withInt:1];
  }
  [manager_ endGeometry];
}

- (void)drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *)s
                                                                     withDouble:(jdouble)u
                                                                     withDouble:(jdouble)v
                                                                        withInt:(jint)texture {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(s)) getNormalAndPositionWithDouble:u withDouble:v withOrgGeogebraCommonKernelMatrixCoords:drawNormal_ withOrgGeogebraCommonKernelMatrixCoords:drawPos_];
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) normalWithOrgGeogebraCommonKernelMatrixCoords:drawNormal_];
  jfloat pos = IOSFloatArray_Get(nil_chk(textureX_), texture);
  {
    jfloat factor;
    switch (textureTypeX_) {
      case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_ID:
      default:
      [manager_ textureWithDouble:pos withDouble:0];
      break;
      case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_CONSTANT_0:
      [manager_ textureWithDouble:0 withDouble:0];
      break;
      case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE:
      factor = (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE_FACTOR * length_ * scale__);
      [manager_ textureWithDouble:factor * (pos - texturePosZero_) + textureValZero_ withDouble:0];
      break;
      case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_LINEAR:
      [manager_ textureWithDouble:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE_FACTOR * scale__ * pos withDouble:0];
      break;
    }
  }
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_vertexWithOrgGeogebraCommonKernelMatrixCoords_(self, drawPos_);
}

- (void)vertexWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_vertexWithOrgGeogebraCommonKernelMatrixCoords_(self, v);
}

- (void)segmentWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p1
               withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p2 {
  length_ = (jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(p1)) distanceWithOrgGeogebraCommonKernelMatrixCoords:p2];
  if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(length_, 0, OrgGeogebraCommonKernelKernel_STANDARD_PRECISION)) return;
  [self downWithOrgGeogebraCommonKernelMatrixCoords:p1];
  jfloat factor, arrowPos;
  OrgGeogebraCommonKernelMatrixCoords *arrowBase;
  switch (arrowType_) {
    case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_TYPE_NONE:
    default:
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_withFloat_(self, 0, 1);
    [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p2];
    break;
    case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_TYPE_SIMPLE:
    factor = (jfloat) (OrgGeogebraCommonEuclidianDrawDrawVector_getFactorWithDouble_(lineThickness_) * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LINE3D_THICKNESS / scale__);
    if (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_LENGTH_ * factor > 0.9f * length_) {
      factor = 0.9f * length_ / OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_LENGTH_;
    }
    arrowPos = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_LENGTH_ / length_ * factor;
    arrowBase = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(start__)) getCenter])) mulWithDouble:arrowPos])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(p2)) mulWithDouble:1 - arrowPos]];
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(self, 0);
    if (ticksDistance_ > 0) {
      {
        OrgGeogebraCommonKernelMatrixCoords *d;
        jfloat thickness;
        jfloat i;
        jfloat ticksDelta;
        jfloat ticksThickness;
        jfloat ticksMinorThickness;
        jboolean minor;
        switch ([ticks_ ordinal]) {
          case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_Ticks_MAJOR:
          default:
          d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([p2 subWithOrgGeogebraCommonKernelMatrixCoords:p1])) normalized];
          thickness = self->thickness_;
          i = ticksOffset_ * length_ - (J2ObjCFpToInt((ticksOffset_ * length_ / ticksDistance_))) * ticksDistance_;
          ticksDelta = thickness;
          ticksThickness = 4 * thickness;
          if (i <= ticksDelta) i += ticksDistance_;
          for (; i <= length_ * (1 - arrowPos); i += ticksDistance_) {
            OrgGeogebraCommonKernelMatrixCoords *p1b = [p1 addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) mulWithDouble:i - ticksDelta]];
            OrgGeogebraCommonKernelMatrixCoords *p2b = [p1 addWithOrgGeogebraCommonKernelMatrixCoords:[d mulWithDouble:i + ticksDelta]];
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(self, i / length_);
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p1b];
            [self setThicknessWithFloat:ticksThickness];
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_CONSTANT_0);
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p1b];
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p2b];
            [self setThicknessWithFloat:thickness];
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p2b];
          }
          break;
          case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_Ticks_MAJOR_AND_MINOR:
          d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([p2 subWithOrgGeogebraCommonKernelMatrixCoords:p1])) normalized];
          thickness = self->thickness_;
          i = ticksOffset_ * length_ - (J2ObjCFpToInt((ticksOffset_ * length_ / ticksDistance_))) * ticksDistance_;
          ticksDelta = thickness;
          ticksThickness = 4 * thickness;
          ticksMinorThickness = 2.5f * thickness;
          minor = NO;
          if (i > ticksDistance_ / 2 + ticksDelta) {
            minor = YES;
            i -= ticksDistance_ / 2;
          }
          else if (i <= ticksDelta) {
            i += ticksDistance_ / 2;
            minor = YES;
          }
          for (; i <= length_ * (1 - arrowPos); i += ticksDistance_ / 2) {
            OrgGeogebraCommonKernelMatrixCoords *p1b = [p1 addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) mulWithDouble:i - ticksDelta]];
            OrgGeogebraCommonKernelMatrixCoords *p2b = [p1 addWithOrgGeogebraCommonKernelMatrixCoords:[d mulWithDouble:i + ticksDelta]];
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE);
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(self, i / length_);
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p1b];
            if (minor) {
              [self setThicknessWithFloat:ticksMinorThickness];
            }
            else {
              [self setThicknessWithFloat:ticksThickness];
            }
            OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_CONSTANT_0);
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p1b];
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p2b];
            [self setThicknessWithFloat:thickness];
            [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p2b];
            minor = !minor;
          }
          break;
          case OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_Ticks_NONE:
          break;
        }
      }
    }
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE);
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(self, 1 - arrowPos);
    [self moveToWithOrgGeogebraCommonKernelMatrixCoords:arrowBase];
    textureTypeX_ = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_ID;
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_withFloat_(self, 0, 0);
    [self setThicknessWithFloat:factor * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_WIDTH_];
    [self moveToWithOrgGeogebraCommonKernelMatrixCoords:arrowBase];
    [self setThicknessWithFloat:0];
    [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p2];
    break;
  }
  if (arrowType_ == OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_TYPE_CLOSED) {
    [self setThicknessWithFloat:0];
    [self moveToWithOrgGeogebraCommonKernelMatrixCoords:p2];
  }
}

- (void)circleWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
              withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                           withDouble:(jdouble)radius
                                              withInt:(jint)longitude {
  [self arcWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:v1 withOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:radius withDouble:0 withDouble:2 * JavaLangMath_PI withInt:longitude];
}

- (jint)calcArcLongitudesNeededWithDouble:(jdouble)radius
                               withDouble:(jdouble)halfExtent
                               withDouble:(jdouble)viewScale {
  jint longitude;
  jdouble size = radius * halfExtent * viewScale;
  if (size > 262144) {
    longitude = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) getLongitudeMax];
  }
  else {
    longitude = 8;
    while (longitude * longitude <= 4 * size && longitude < [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) getLongitudeMax]) {
      longitude *= 2;
    }
  }
  return longitude;
}

- (void)arcWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
           withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
           withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                        withDouble:(jdouble)radius
                                        withDouble:(jdouble)start
                                        withDouble:(jdouble)extent
                                           withInt:(jint)longitude {
  length_ = (jfloat) (extent * radius);
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn2_)) setCrossProductWithOrgGeogebraCommonKernelMatrixCoords:v2 withOrgGeogebraCommonKernelMatrixCoords:v1];
  jfloat dt = (jfloat) 1 / longitude;
  jfloat da = (jfloat) (extent * dt);
  jfloat u, v;
  u = (jfloat) JavaLangMath_cosWithDouble_(start);
  v = (jfloat) JavaLangMath_sinWithDouble_(start);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_withFloat_(self, 0, 0);
  [vn1_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v1 withDouble:u] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn1_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:v]];
  [tmpCoords_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords_ setMulWithOrgGeogebraCommonKernelMatrixCoords:vn1_ withDouble:radius]];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, tmpCoords_, vn1_, vn2_);
  for (jint i = 1; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_cosWithDouble_(start + i * da);
    v = (jfloat) JavaLangMath_sinWithDouble_(start + i * da);
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(self, i * dt);
    [vn1_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords_ setMulWithOrgGeogebraCommonKernelMatrixCoords:v1 withDouble:u] withOrgGeogebraCommonKernelMatrixCoords:[vn1_ setMulWithOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:v]];
    [tmpCoords_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords_ setMulWithOrgGeogebraCommonKernelMatrixCoords:vn1_ withDouble:radius]];
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_moveToWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, tmpCoords_, vn1_, vn2_);
  }
}

- (void)arcEllipseWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                  withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                  withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                               withDouble:(jdouble)a
                                               withDouble:(jdouble)b
                                               withDouble:(jdouble)start
                                               withDouble:(jdouble)extent {
  length_ = 1;
  [self setCurvePosWithFloat:0];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_LINEAR);
  jdouble f = JavaLangMath_sqrtWithDouble_(a * a - b * b);
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(f1_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v1 withDouble:f];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(f2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v1 withDouble:-f];
  jint longitude = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) getLongitudeDefault];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn2_)) setCrossProductWithOrgGeogebraCommonKernelMatrixCoords:v2 withOrgGeogebraCommonKernelMatrixCoords:v1];
  jfloat dt = (jfloat) 1 / longitude;
  jfloat da = (jfloat) (extent * dt);
  jfloat u, v;
  u = (jfloat) JavaLangMath_cosWithDouble_(start);
  v = (jfloat) JavaLangMath_sinWithDouble_(start);
  [m_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v1 withDouble:a * u] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:b * v]];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn1_)) setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords3_)) setSubWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:f1_])) normalize] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords4_)) setSubWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:f2_])) normalize]])) normalize];
  [tmpCoords_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:m_];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, tmpCoords_, vn1_, vn2_);
  for (jint i = 1; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_cosWithDouble_(start + i * da);
    v = (jfloat) JavaLangMath_sinWithDouble_(start + i * da);
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setWithOrgGeogebraCommonKernelMatrixCoords:m_];
    [m_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[m_ setMulWithOrgGeogebraCommonKernelMatrixCoords:v1 withDouble:a * u] withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords_ setMulWithOrgGeogebraCommonKernelMatrixCoords:v2 withDouble:b * v]];
    [self addCurvePosWithFloat:(jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([tmpCoords2_ setSubWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_])) norm]];
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([vn1_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([tmpCoords3_ setSubWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:f1_])) normalize] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([tmpCoords4_ setSubWithOrgGeogebraCommonKernelMatrixCoords:m_ withOrgGeogebraCommonKernelMatrixCoords:f2_])) normalize]])) normalize];
    [tmpCoords_ setAddWithOrgGeogebraCommonKernelMatrixCoords:center withOrgGeogebraCommonKernelMatrixCoords:m_];
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_moveToWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, tmpCoords_, vn1_, vn2_);
  }
}

- (void)hyperbolaBranchWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                                    withDouble:(jdouble)a
                                                    withDouble:(jdouble)b
                                                    withDouble:(jdouble)tMin
                                                    withDouble:(jdouble)tMax {
  jdouble f = JavaLangMath_sqrtWithDouble_(a * a + b * b);
  OrgGeogebraCommonKernelMatrixCoords *f1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) mulWithDouble:f];
  OrgGeogebraCommonKernelMatrixCoords *f2 = [v1 mulWithDouble:-f];
  length_ = 1;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_LINEAR);
  [self setCurvePosWithFloat:0.75f / (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE_FACTOR * scale__)];
  jint longitude = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) getLongitudeDefault];
  OrgGeogebraCommonKernelMatrixCoords *m, *mold, *vn1;
  OrgGeogebraCommonKernelMatrixCoords *vn2 = [v1 crossProductWithOrgGeogebraCommonKernelMatrixCoords:v2];
  jfloat dt = (jfloat) (tMax - tMin) / longitude;
  jfloat u, v;
  u = (jfloat) JavaLangMath_coshWithDouble_(tMin);
  v = (jfloat) JavaLangMath_sinhWithDouble_(tMin);
  m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:a * u])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) mulWithDouble:b * v]];
  vn1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) subWithOrgGeogebraCommonKernelMatrixCoords:f1])) normalized]))) subWithOrgGeogebraCommonKernelMatrixCoords:([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([m subWithOrgGeogebraCommonKernelMatrixCoords:f2])) normalized])])) normalized];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:m], vn1, vn2);
  for (jint i = 1; i <= longitude; i++) {
    u = (jfloat) JavaLangMath_coshWithDouble_(tMin + i * dt);
    v = (jfloat) JavaLangMath_sinhWithDouble_(tMin + i * dt);
    mold = m;
    m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:a * u])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:b * v]];
    [self addCurvePosWithFloat:(jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) subWithOrgGeogebraCommonKernelMatrixCoords:mold])) norm]];
    vn1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([m subWithOrgGeogebraCommonKernelMatrixCoords:f1])) normalized]))) subWithOrgGeogebraCommonKernelMatrixCoords:([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([m subWithOrgGeogebraCommonKernelMatrixCoords:f2])) normalized])])) normalized];
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_moveToWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, [center addWithOrgGeogebraCommonKernelMatrixCoords:m], vn1, vn2);
  }
}

- (void)parabolaWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v2
                                             withDouble:(jdouble)p
                                             withDouble:(jdouble)tMin
                                             withDouble:(jdouble)tMax
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p1
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p2 {
  OrgGeogebraCommonKernelMatrixCoords *f1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) mulWithDouble:p / 2];
  OrgGeogebraCommonKernelMatrixCoords *vn2 = [v1 crossProductWithOrgGeogebraCommonKernelMatrixCoords:v2];
  jint longitude = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) getLongitudeDefault];
  length_ = 1;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_LINEAR);
  [self setCurvePosWithFloat:0.75f / (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE_FACTOR * scale__)];
  OrgGeogebraCommonKernelMatrixCoords *m, *vn1, *mold;
  jfloat dt = (jfloat) (tMax - tMin) / longitude;
  jfloat u, v;
  jdouble t;
  t = tMin;
  u = (jfloat) (p * t * t / 2);
  v = (jfloat) (p * t);
  m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:u])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) mulWithDouble:v]];
  vn1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) subWithOrgGeogebraCommonKernelMatrixCoords:f1])) normalized]))) subWithOrgGeogebraCommonKernelMatrixCoords:v1])) normalized];
  if (p1 != nil) {
    [p1 setWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:m]];
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, p1, vn1, vn2);
  }
  else {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:m], vn1, vn2);
  }
  for (jint i = 1; i <= longitude; i++) {
    t = tMin + i * dt;
    u = (jfloat) (p * t * t / 2);
    v = (jfloat) (p * t);
    mold = m;
    m = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([v1 mulWithDouble:u])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:v]];
    [self addCurvePosWithFloat:(jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) subWithOrgGeogebraCommonKernelMatrixCoords:mold])) norm]];
    vn1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([m subWithOrgGeogebraCommonKernelMatrixCoords:f1])) normalized]))) subWithOrgGeogebraCommonKernelMatrixCoords:v1])) normalized];
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_moveToWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:m], vn1, vn2);
  }
  if (p2 != nil) {
    [p2 setWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(center)) addWithOrgGeogebraCommonKernelMatrixCoords:m]];
  }
}

- (jfloat)setThicknessWithInt:(jint)thickness
                    withFloat:(jfloat)scale_ {
  self->lineThickness_ = thickness;
  self->scale__ = scale_;
  jfloat t = lineThickness_ * OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LINE3D_THICKNESS / scale_;
  [self setThicknessWithFloat:t];
  return t;
}

- (void)setThicknessWithFloat:(jfloat)thickness {
  self->thickness_ = thickness;
}

- (jfloat)getThickness {
  return thickness_;
}

- (void)setColorWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color
                                     withFloat:(jfloat)alpha {
  self->red_ = [((OrgGeogebraCommonAwtGColor *) nil_chk(color)) getRed] / 255.0f;
  self->green_ = [color getGreen] / 255.0f;
  self->blue_ = [color getBlue] / 255.0f;
  self->alpha_ = alpha;
  hasColor_ = YES;
}

- (void)setColorWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color {
  [self setColorWithOrgGeogebraCommonAwtGColor:color withFloat:1];
}

- (void)setCurvePosWithFloat:(jfloat)pos {
  curvePos_ = pos;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(self, pos);
}

- (void)addCurvePosWithFloat:(jfloat)distance {
  [self setCurvePosWithFloat:curvePos_ + distance];
}

- (void)setAffineTextureWithFloat:(jfloat)posZero
                        withFloat:(jfloat)valZero {
  texturePosZero_ = posZero;
  textureValZero_ = valZero;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE);
}

- (void)setPlainTexture {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_CONSTANT_0);
}

- (void)setTextureTypeWithInt:(jint)type {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(self, type);
}

- (void)setTextureXWithFloat:(jfloat)x0
                   withFloat:(jfloat)x1 {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_withFloat_(self, x0, x1);
}

- (void)setTextureXWithFloat:(jfloat)x {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(self, x);
}

- (void)setArrowTypeWithInt:(jint)arrowType {
  self->arrowType_ = arrowType;
}

- (void)setTicksWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *)ticks {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_ticks_(self, ticks);
}

- (void)setTicksDistanceWithFloat:(jfloat)distance {
  self->ticksDistance_ = distance;
}

- (void)setTicksOffsetWithFloat:(jfloat)offset {
  self->ticksOffset_ = offset;
}

- (void)drawToWithDoubleArray:(IOSDoubleArray *)pos
                  withBoolean:(jboolean)lineTo {
  OrgGeogebraCommonKernelMatrixCoords *p = [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, 0, 1) autorelease];
  [p setWithDoubleArray:pos];
  if (lineTo) {
    [self curveToWithOrgGeogebraCommonKernelMatrixCoords:p];
  }
  else {
    [self setCurvePosWithFloat:0];
    [self downWithOrgGeogebraCommonKernelMatrixCoords:p];
  }
}

- (void)lineToWithDoubleArray:(IOSDoubleArray *)pos {
  [self drawToWithDoubleArray:pos withBoolean:YES];
}

- (void)moveToWithDoubleArray:(IOSDoubleArray *)pos {
  [self drawToWithDoubleArray:pos withBoolean:NO];
}

- (void)corner {
}

- (void)cornerWithDoubleArray:(IOSDoubleArray *)pos {
}

- (void)firstPointWithDoubleArray:(IOSDoubleArray *)pos
withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *)moveToAllowed {
  [self moveToWithDoubleArray:pos];
}

- (IOSDoubleArray *)newDoubleArray {
  return [IOSDoubleArray arrayWithLength:3];
}

- (jboolean)copyCoordsWithOrgGeogebraCommonKernelMyPoint:(OrgGeogebraCommonKernelMyPoint *)point
                                         withDoubleArray:(IOSDoubleArray *)ret {
  *IOSDoubleArray_GetRef(nil_chk(ret), 0) = ((OrgGeogebraCommonKernelMyPoint *) nil_chk(point))->x_;
  *IOSDoubleArray_GetRef(ret, 1) = point->y_;
  *IOSDoubleArray_GetRef(ret, 2) = [point getZ];
  return YES;
}

- (void)setLengthWithFloat:(jfloat)length {
  self->length_ = length;
}

- (void)dealloc {
  RELEASE_(manager_);
  RELEASE_(start__);
  RELEASE_(end__);
  RELEASE_(textureX_);
  RELEASE_(ticks_);
  RELEASE_(curve_);
  RELEASE_(drawNormal_);
  RELEASE_(drawPos_);
  RELEASE_(m_);
  RELEASE_(vn1_);
  RELEASE_(tmpCoords_);
  RELEASE_(tmpCoords2_);
  RELEASE_(tmpCoords3_);
  RELEASE_(tmpCoords4_);
  RELEASE_(f1_);
  RELEASE_(f2_);
  RELEASE_(vn2_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush class]) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_WIDTH_ = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_LENGTH_ / 4.0f;
    {
      JreStrongAssignAndConsume(&OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_COSINUS_, nil, [IOSDoubleArray newArrayWithLength:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES + 1]);
      JreStrongAssignAndConsume(&OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_SINUS_, nil, [IOSDoubleArray newArrayWithLength:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES + 1]);
      for (jint i = 0; i <= OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES; i++) {
        *IOSDoubleArray_GetRef(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_COSINUS_, i) = JavaLangMath_cosWithDouble_(2 * i * JavaLangMath_PI / OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
        *IOSDoubleArray_GetRef(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_SINUS_, i) = JavaLangMath_sinWithDouble_(2 * i * JavaLangMath_PI / OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES);
      }
    }
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:", "PlotterBrush", NULL, 0x1, NULL, NULL },
    { "startWithInt:", "start", "V", 0x1, NULL, NULL },
    { "end", NULL, "I", 0x1, NULL, NULL },
    { "downWithOrgGeogebraCommonKernelMatrixCoords:", "down", "V", 0x1, NULL, NULL },
    { "downWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "down", "V", 0x2, NULL, NULL },
    { "moveToWithOrgGeogebraCommonKernelMatrixCoords:", "moveTo", "V", 0x1, NULL, NULL },
    { "curveToWithOrgGeogebraCommonKernelMatrixCoords:", "curveTo", "V", 0x1, NULL, NULL },
    { "moveToWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "moveTo", "V", 0x2, NULL, NULL },
    { "join", NULL, "V", 0x1, NULL, NULL },
    { "drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection:withDouble:withDouble:withInt:", "draw", "V", 0x4, NULL, NULL },
    { "vertexWithOrgGeogebraCommonKernelMatrixCoords:", "vertex", "V", 0x2, NULL, NULL },
    { "segmentWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "segment", "V", 0x1, NULL, NULL },
    { "circleWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withInt:", "circle", "V", 0x1, NULL, NULL },
    { "calcArcLongitudesNeededWithDouble:withDouble:withDouble:", "calcArcLongitudesNeeded", "I", 0x1, NULL, NULL },
    { "arcWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withInt:", "arc", "V", 0x1, NULL, NULL },
    { "arcEllipseWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:", "arcEllipse", "V", 0x1, NULL, NULL },
    { "hyperbolaBranchWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withDouble:", "hyperbolaBranch", "V", 0x1, NULL, NULL },
    { "parabolaWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "parabola", "V", 0x1, NULL, NULL },
    { "setThicknessWithInt:withFloat:", "setThickness", "F", 0x1, NULL, NULL },
    { "setThicknessWithFloat:", "setThickness", "V", 0x1, NULL, NULL },
    { "getThickness", NULL, "F", 0x1, NULL, NULL },
    { "setColorWithOrgGeogebraCommonAwtGColor:withFloat:", "setColor", "V", 0x1, NULL, NULL },
    { "setColorWithOrgGeogebraCommonAwtGColor:", "setColor", "V", 0x1, NULL, NULL },
    { "setCurvePosWithFloat:", "setCurvePos", "V", 0x1, NULL, NULL },
    { "addCurvePosWithFloat:", "addCurvePos", "V", 0x1, NULL, NULL },
    { "setAffineTextureWithFloat:withFloat:", "setAffineTexture", "V", 0x1, NULL, NULL },
    { "setPlainTexture", NULL, "V", 0x1, NULL, NULL },
    { "setTextureTypeWithInt:", "setTextureType", "V", 0x2, NULL, NULL },
    { "setTextureXWithFloat:withFloat:", "setTextureX", "V", 0x2, NULL, NULL },
    { "setTextureXWithFloat:", "setTextureX", "V", 0x2, NULL, NULL },
    { "setArrowTypeWithInt:", "setArrowType", "V", 0x1, NULL, NULL },
    { "setTicksWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum:", "setTicks", "V", 0x1, NULL, NULL },
    { "setTicksDistanceWithFloat:", "setTicksDistance", "V", 0x1, NULL, NULL },
    { "setTicksOffsetWithFloat:", "setTicksOffset", "V", 0x1, NULL, NULL },
    { "drawToWithDoubleArray:withBoolean:", "drawTo", "V", 0x1, NULL, NULL },
    { "lineToWithDoubleArray:", "lineTo", "V", 0x1, NULL, NULL },
    { "moveToWithDoubleArray:", "moveTo", "V", 0x1, NULL, NULL },
    { "corner", NULL, "V", 0x1, NULL, NULL },
    { "cornerWithDoubleArray:", "corner", "V", 0x1, NULL, NULL },
    { "firstPointWithDoubleArray:withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:", "firstPoint", "V", 0x1, NULL, NULL },
    { "newDoubleArray", NULL, "[D", 0x1, NULL, NULL },
    { "copyCoordsWithOrgGeogebraCommonKernelMyPoint:withDoubleArray:", "copyCoords", "Z", 0x1, NULL, NULL },
    { "setLengthWithFloat:", "setLength", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LINE3D_THICKNESS_", NULL, 0x19, "F", NULL, NULL, .constantValue.asFloat = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LINE3D_THICKNESS },
    { "manager_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.Manager;", NULL, NULL,  },
    { "index_", NULL, 0x2, "I", NULL, NULL,  },
    { "start__", "start", 0x4, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrushSection;", NULL, NULL,  },
    { "end__", "end", 0x4, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrushSection;", NULL, NULL,  },
    { "justStarted_", NULL, 0x2, "Z", NULL, NULL,  },
    { "notStarted_", NULL, 0x2, "Z", NULL, NULL,  },
    { "thickness_", NULL, 0x2, "F", NULL, NULL,  },
    { "lineThickness_", NULL, 0x2, "I", NULL, NULL,  },
    { "scale__", "scale", 0x2, "F", NULL, NULL,  },
    { "length_", NULL, 0x2, "F", NULL, NULL,  },
    { "red_", NULL, 0x2, "F", NULL, NULL,  },
    { "green_", NULL, 0x2, "F", NULL, NULL,  },
    { "blue_", NULL, 0x2, "F", NULL, NULL,  },
    { "alpha_", NULL, 0x2, "F", NULL, NULL,  },
    { "hasColor_", NULL, 0x2, "Z", NULL, NULL,  },
    { "texturePosZero_", NULL, 0x2, "F", NULL, NULL,  },
    { "textureValZero_", NULL, 0x2, "F", NULL, NULL,  },
    { "textureX_", NULL, 0x2, "[F", NULL, NULL,  },
    { "TEXTURE_CONSTANT_0_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_CONSTANT_0 },
    { "TEXTURE_ID_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_ID },
    { "TEXTURE_AFFINE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE },
    { "TEXTURE_LINEAR_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_LINEAR },
    { "textureTypeX_", NULL, 0x2, "I", NULL, NULL,  },
    { "textureTypeY_", NULL, 0x2, "I", NULL, NULL,  },
    { "TEXTURE_AFFINE_FACTOR_", NULL, 0x1a, "F", NULL, NULL, .constantValue.asFloat = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_AFFINE_FACTOR },
    { "curvePos_", NULL, 0x2, "F", NULL, NULL,  },
    { "ARROW_TYPE_NONE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_TYPE_NONE },
    { "ARROW_TYPE_SIMPLE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_TYPE_SIMPLE },
    { "ARROW_TYPE_CLOSED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_TYPE_CLOSED },
    { "arrowType_", NULL, 0x2, "I", NULL, NULL,  },
    { "ARROW_LENGTH_", NULL, 0xa, "F", &OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_LENGTH_, NULL,  },
    { "ARROW_WIDTH_", NULL, 0xa, "F", &OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_WIDTH_, NULL,  },
    { "ticks_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrush$Ticks;", NULL, NULL,  },
    { "ticksDistance_", NULL, 0x2, "F", NULL, NULL,  },
    { "ticksOffset_", NULL, 0x2, "F", NULL, NULL,  },
    { "curve_", NULL, 0x0, "Lorg.geogebra.common.kernel.geos.GeoCurveCartesian3DInterface;", NULL, NULL,  },
    { "LATITUDES_", NULL, 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_LATITUDES },
    { "COSINUS_", NULL, 0x1c, "[D", &OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_COSINUS_, NULL,  },
    { "SINUS_", NULL, 0x1c, "[D", &OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_SINUS_, NULL,  },
    { "drawNormal_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "drawPos_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "m_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "vn1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords3_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords4_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "f1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "f2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "vn2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrush$Ticks;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush = { 2, "PlotterBrush", "org.geogebra.common.geogebra3D.euclidian3D.openGL", NULL, 0x1, 43, methods, 51, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  NSObject_init(self);
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_start__(self, new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection_init());
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_end__(self, new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection_init());
  self->justStarted_ = NO;
  self->notStarted_ = NO;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_textureX_(self, [IOSFloatArray newArrayWithLength:2]);
  self->textureTypeX_ = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_ID;
  self->textureTypeY_ = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TEXTURE_CONSTANT_0;
  self->arrowType_ = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_ARROW_TYPE_NONE;
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_ticks_(self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_get_NONE());
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_drawNormal_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_drawPos_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_m_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_vn1_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_tmpCoords_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_tmpCoords2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_tmpCoords3_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_tmpCoords4_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_f1_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_f2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setAndConsume_vn2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3));
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_manager_(self, manager);
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_downWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, OrgGeogebraCommonKernelMatrixCoords *point, OrgGeogebraCommonKernelMatrixCoords *clockU, OrgGeogebraCommonKernelMatrixCoords *clockV) {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(self->start__)) setWithOrgGeogebraCommonKernelMatrixCoords:point withFloat:self->thickness_ withOrgGeogebraCommonKernelMatrixCoords:clockU withOrgGeogebraCommonKernelMatrixCoords:clockV];
  self->justStarted_ = YES;
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_moveToWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, OrgGeogebraCommonKernelMatrixCoords *point, OrgGeogebraCommonKernelMatrixCoords *clockU, OrgGeogebraCommonKernelMatrixCoords *clockV) {
  if (self->justStarted_) {
    self->justStarted_ = NO;
  }
  else {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *tmp = self->start__;
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_start__(self, self->end__);
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_set_end__(self, tmp);
  }
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrushSection *) nil_chk(self->end__)) setWithOrgGeogebraCommonKernelMatrixCoords:point withFloat:self->thickness_ withOrgGeogebraCommonKernelMatrixCoords:clockU withOrgGeogebraCommonKernelMatrixCoords:clockV];
  [self join];
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_vertexWithOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, OrgGeogebraCommonKernelMatrixCoords *v) {
  if (self->hasColor_) {
    [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(self->manager_)) colorWithDouble:self->red_ withDouble:self->green_ withDouble:self->blue_ withDouble:self->alpha_];
  }
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(self->manager_)) vertexWithOrgGeogebraCommonKernelMatrixCoords:v];
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureTypeWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, jint type) {
  self->textureTypeX_ = type;
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_withFloat_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, jfloat x0, jfloat x1) {
  *IOSFloatArray_GetRef(nil_chk(self->textureX_), 0) = x0;
  *IOSFloatArray_GetRef(self->textureX_, 1) = x1;
}

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *self, jfloat x) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_setTextureXWithFloat_withFloat_(self, IOSFloatArray_Get(nil_chk(self->textureX_), 1), x);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum)

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_values_[3];

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_values() {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_values_ count:3 type:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_values();
}

+ (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initialize();
  for (int i = 0; i < 3; i++) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *e = OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum class]) {
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_NONE = new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(@"NONE", 0);
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_MAJOR = new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(@"MAJOR", 1);
    OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_MAJOR_AND_MINOR = new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(@"MAJOR_AND_MINOR", 2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "NONE", 0x4019, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrush$Ticks;", &OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_NONE, NULL,  },
    { "MAJOR", "MAJOR", 0x4019, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrush$Ticks;", &OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_MAJOR, NULL,  },
    { "MAJOR_AND_MINOR", "MAJOR_AND_MINOR", 0x4019, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrush$Ticks;", &OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_MAJOR_AND_MINOR, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.PlotterBrush$Ticks;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum = { 2, "Ticks", "org.geogebra.common.geogebra3D.euclidian3D.openGL", "PlotterBrush", 0x4019, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterBrush$Ticks;>;" };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush_TicksEnum)
