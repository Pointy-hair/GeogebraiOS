//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShaders.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Stack.h"
#include "java/util/TreeMap.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/GLBuffer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/GLFactory.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Manager.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShaders.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/Renderer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/openGL/RendererShadersInterface.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders () {
 @public
  JavaUtilArrayList *vertices__, *normals_, *textures_, *colors_;
  jint verticesLength_, verticesSize_, normalsLength_, normalsSize_, texturesLength_, texturesSize_, colorsLength_, colorsSize_;
  jint geometriesSetMaxIndex_;
  JavaUtilStack *indicesRemoved_;
  jint currentOld_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders, vertices__, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders, normals_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders, textures_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders, colors_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders, indicesRemoved_, JavaUtilStack *)

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry () {
 @public
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *type_;
  id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer> v_, n_, t_, c_;
  jint length_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry, type_, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry, v_, id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry, n_, id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry, t_, id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry, c_, id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)

@interface OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet () {
 @public
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *this$0_;
  jint currentGeometryIndex_;
  jint geometriesLength_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet, this$0_, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
                   withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, renderer, view3D);
  return self;
}

- (void)initGeometriesList {
  geometriesSetList_ = new_JavaUtilTreeMap_init();
  geometriesSetMaxIndex_ = -1;
  indicesRemoved_ = new_JavaUtilStack_init();
  vertices__ = new_JavaUtilArrayList_init();
  verticesSize_ = 0;
  normals_ = new_JavaUtilArrayList_init();
  normalsSize_ = 0;
  textures_ = new_JavaUtilArrayList_init();
  texturesSize_ = 0;
  colors_ = new_JavaUtilArrayList_init();
  colorsSize_ = 0;
}

- (void)setRendererWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
  self->renderer_ = renderer;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)getRenderer {
  return renderer_;
}

- (jint)startNewListWithInt:(jint)old {
  currentOld_ = old;
  if (currentOld_ >= 0) {
    currentGeometriesSet_ = [((JavaUtilTreeMap *) nil_chk(geometriesSetList_)) getWithId:JavaLangInteger_valueOfWithInt_(old)];
  }
  else {
    currentGeometriesSet_ = nil;
  }
  jint index = currentOld_;
  if (currentGeometriesSet_ == nil) {
    currentOld_ = -1;
    if ([((JavaUtilStack *) nil_chk(indicesRemoved_)) empty]) {
      geometriesSetMaxIndex_++;
      index = geometriesSetMaxIndex_;
    }
    else {
      index = [((JavaLangInteger *) nil_chk([indicesRemoved_ pop])) intValue];
    }
    currentGeometriesSet_ = [self newGeometriesSet];
    (void) [((JavaUtilTreeMap *) nil_chk(geometriesSetList_)) putWithId:JavaLangInteger_valueOfWithInt_(index) withId:currentGeometriesSet_];
  }
  else {
    [currentGeometriesSet_ reset];
  }
  return index;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *)newGeometriesSet {
  return new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_(self);
}

- (void)endList {
}

- (void)startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk(currentGeometriesSet_)) startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:type];
  verticesLength_ = 0;
  normalsLength_ = 0;
  texturesLength_ = 0;
  colorsLength_ = 0;
}

- (void)endGeometry {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk(currentGeometriesSet_)) setVerticesWithJavaUtilArrayList:vertices__ withInt:verticesLength_];
  [currentGeometriesSet_ setNormalsWithJavaUtilArrayList:normals_ withInt:normalsLength_];
  [currentGeometriesSet_ setTexturesWithJavaUtilArrayList:textures_ withInt:texturesLength_];
  [currentGeometriesSet_ setColorsWithJavaUtilArrayList:colors_ withInt:colorsLength_];
  [currentGeometriesSet_ bindGeometry];
}

- (jint)startPolygonsWithInt:(jint)old {
  jint index = [self startNewListWithInt:old];
  return index;
}

- (void)drawPolygonWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)n
              withOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)v {
  [self startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [self normalWithOrgGeogebraCommonKernelMatrixCoords:n];
  for (jint i = 0; i < 3; i++) {
    [self vertexWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(v), i)];
  }
  [self endGeometry];
}

- (void)endPolygons {
  [self endList];
}

- (void)removeWithInt:(jint)index {
  if (index >= 0 && index != currentOld_) {
    (void) [((JavaUtilStack *) nil_chk(indicesRemoved_)) pushWithId:JavaLangInteger_valueOfWithInt_(index)];
    (void) [((JavaUtilTreeMap *) nil_chk(geometriesSetList_)) removeWithId:JavaLangInteger_valueOfWithInt_(index)];
  }
  currentOld_ = -1;
}

- (void)drawWithInt:(jint)index {
  currentGeometriesSet_ = [((JavaUtilTreeMap *) nil_chk(geometriesSetList_)) getWithId:JavaLangInteger_valueOfWithInt_(index)];
  if (currentGeometriesSet_ != nil) {
    for (jint i = 0; i < [currentGeometriesSet_ getGeometriesLength]; i++) {
      [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk([currentGeometriesSet_ getWithInt:i])) drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface:(id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))];
    }
  }
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *)getGeometryWithInt:(jint)index {
  return [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk([((JavaUtilTreeMap *) nil_chk(geometriesSetList_)) getWithId:JavaLangInteger_valueOfWithInt_(index)])) getWithInt:0];
}

- (void)drawLabelWithInt:(jint)index {
  currentGeometriesSet_ = [((JavaUtilTreeMap *) nil_chk(geometriesSetList_)) getWithId:JavaLangInteger_valueOfWithInt_(index)];
  if (currentGeometriesSet_ != nil) {
    for (jint i = 0; i < [currentGeometriesSet_ getGeometriesLength]; i++) {
      OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *geometry = [currentGeometriesSet_ getWithInt:i];
      [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) loadVertexBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(geometry)) getVertices] withInt:[geometry getLength]];
      if ([((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) areTexturesEnabled]) {
        [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) loadTextureBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[geometry getTextures] withInt:[geometry getLength]];
      }
      [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) check_protocol_cast(renderer_, @protocol(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface))))) drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:[geometry getType] withInt:[geometry getLength]];
    }
  }
}

- (void)textureWithDouble:(jdouble)x
               withDouble:(jdouble)y {
  if (texturesLength_ == texturesSize_) {
    [((JavaUtilArrayList *) nil_chk(textures_)) addWithId:JavaLangDouble_valueOfWithDouble_(x)];
    [textures_ addWithId:JavaLangDouble_valueOfWithDouble_(y)];
    texturesSize_ += 2;
  }
  else {
    (void) [((JavaUtilArrayList *) nil_chk(textures_)) setWithInt:texturesLength_ withId:JavaLangDouble_valueOfWithDouble_(x)];
    (void) [textures_ setWithInt:texturesLength_ + 1 withId:JavaLangDouble_valueOfWithDouble_(y)];
  }
  texturesLength_ += 2;
}

- (void)setDummyTexture {
}

- (void)normalWithDouble:(jdouble)x
              withDouble:(jdouble)y
              withDouble:(jdouble)z {
  if (normalsLength_ == normalsSize_) {
    [((JavaUtilArrayList *) nil_chk(normals_)) addWithId:JavaLangDouble_valueOfWithDouble_(x)];
    [normals_ addWithId:JavaLangDouble_valueOfWithDouble_(y)];
    [normals_ addWithId:JavaLangDouble_valueOfWithDouble_(z)];
    normalsSize_ += 3;
  }
  else {
    (void) [((JavaUtilArrayList *) nil_chk(normals_)) setWithInt:normalsLength_ withId:JavaLangDouble_valueOfWithDouble_(x)];
    (void) [normals_ setWithInt:normalsLength_ + 1 withId:JavaLangDouble_valueOfWithDouble_(y)];
    (void) [normals_ setWithInt:normalsLength_ + 2 withId:JavaLangDouble_valueOfWithDouble_(z)];
  }
  normalsLength_ += 3;
}

- (void)vertexWithDouble:(jdouble)x
              withDouble:(jdouble)y
              withDouble:(jdouble)z {
  if (verticesLength_ == verticesSize_) {
    [((JavaUtilArrayList *) nil_chk(vertices__)) addWithId:JavaLangDouble_valueOfWithDouble_(x)];
    [vertices__ addWithId:JavaLangDouble_valueOfWithDouble_(y)];
    [vertices__ addWithId:JavaLangDouble_valueOfWithDouble_(z)];
    verticesSize_ += 3;
  }
  else {
    (void) [((JavaUtilArrayList *) nil_chk(vertices__)) setWithInt:verticesLength_ withId:JavaLangDouble_valueOfWithDouble_(x)];
    (void) [vertices__ setWithInt:verticesLength_ + 1 withId:JavaLangDouble_valueOfWithDouble_(y)];
    (void) [vertices__ setWithInt:verticesLength_ + 2 withId:JavaLangDouble_valueOfWithDouble_(z)];
  }
  verticesLength_ += 3;
}

- (void)vertexIntWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z {
  [self vertexWithDouble:x withDouble:y withDouble:z];
}

- (void)colorWithDouble:(jdouble)r
             withDouble:(jdouble)g
             withDouble:(jdouble)b {
  [self colorWithDouble:r withDouble:g withDouble:b withDouble:1.0f];
}

- (void)colorWithDouble:(jdouble)r
             withDouble:(jdouble)g
             withDouble:(jdouble)b
             withDouble:(jdouble)a {
  if (colorsLength_ == colorsSize_) {
    [((JavaUtilArrayList *) nil_chk(colors_)) addWithId:JavaLangDouble_valueOfWithDouble_(r)];
    [colors_ addWithId:JavaLangDouble_valueOfWithDouble_(g)];
    [colors_ addWithId:JavaLangDouble_valueOfWithDouble_(b)];
    [colors_ addWithId:JavaLangDouble_valueOfWithDouble_(a)];
    colorsSize_ += 4;
  }
  else {
    (void) [((JavaUtilArrayList *) nil_chk(colors_)) setWithInt:colorsLength_ withId:JavaLangDouble_valueOfWithDouble_(r)];
    (void) [colors_ setWithInt:colorsLength_ + 1 withId:JavaLangDouble_valueOfWithDouble_(g)];
    (void) [colors_ setWithInt:colorsLength_ + 2 withId:JavaLangDouble_valueOfWithDouble_(b)];
    (void) [colors_ setWithInt:colorsLength_ + 3 withId:JavaLangDouble_valueOfWithDouble_(a)];
  }
  colorsLength_ += 4;
}

- (void)pointSizeWithDouble:(jdouble)size {
}

- (void)verticesWithDoubleArray:(IOSDoubleArray *)vertices {
}

- (void)rectangleGeometryWithDouble:(jdouble)x
                         withDouble:(jdouble)y
                         withDouble:(jdouble)z
                         withDouble:(jdouble)width
                         withDouble:(jdouble)height {
  [self startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLE_STRIP()];
  [self textureWithDouble:0 withDouble:0];
  [self vertexIntWithDouble:x withDouble:y withDouble:z];
  [self textureWithDouble:1 withDouble:0];
  [self vertexIntWithDouble:x + width withDouble:y withDouble:z];
  [self textureWithDouble:0 withDouble:1];
  [self vertexIntWithDouble:x withDouble:y + height withDouble:z];
  [self textureWithDouble:1 withDouble:1];
  [self vertexIntWithDouble:x + width withDouble:y + height withDouble:z];
  [self endGeometry];
}

- (void)startGeometryDirectWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type
                                                                                    withInt:(jint)size {
  [self startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:type];
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk(currentGeometriesSet_)) allocateWithInt:size];
}

- (void)vertexDirectWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk(currentGeometriesSet_)) vertexDirectWithDouble:x withDouble:y withDouble:z];
}

- (void)normalDirectWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk(currentGeometriesSet_)) normalDirectWithDouble:x withDouble:y withDouble:z];
}

- (void)endGeometryDirect {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *) nil_chk(currentGeometriesSet_)) endGeometry];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "ManagerShaders", NULL, 0x1, NULL, NULL },
    { "initGeometriesList", NULL, "V", 0x4, NULL, NULL },
    { "setRendererWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "setRenderer", "V", 0x4, NULL, NULL },
    { "getRenderer", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.Renderer;", 0x4, NULL, NULL },
    { "startNewListWithInt:", "startNewList", "I", 0x1, NULL, NULL },
    { "newGeometriesSet", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$GeometriesSet;", 0x4, NULL, NULL },
    { "endList", NULL, "V", 0x1, NULL, NULL },
    { "startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:", "startGeometry", "V", 0x1, NULL, NULL },
    { "endGeometry", NULL, "V", 0x1, NULL, NULL },
    { "startPolygonsWithInt:", "startPolygons", "I", 0x1, NULL, NULL },
    { "drawPolygonWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoordsArray:", "drawPolygon", "V", 0x1, NULL, NULL },
    { "endPolygons", NULL, "V", 0x1, NULL, NULL },
    { "removeWithInt:", "remove", "V", 0x1, NULL, NULL },
    { "drawWithInt:", "draw", "V", 0x1, NULL, NULL },
    { "getGeometryWithInt:", "getGeometry", "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$Geometry;", 0x1, NULL, NULL },
    { "drawLabelWithInt:", "drawLabel", "V", 0x1, NULL, NULL },
    { "textureWithDouble:withDouble:", "texture", "V", 0x4, NULL, NULL },
    { "setDummyTexture", NULL, "V", 0x4, NULL, NULL },
    { "normalWithDouble:withDouble:withDouble:", "normal", "V", 0x4, NULL, NULL },
    { "vertexWithDouble:withDouble:withDouble:", "vertex", "V", 0x4, NULL, NULL },
    { "vertexIntWithDouble:withDouble:withDouble:", "vertexInt", "V", 0x4, NULL, NULL },
    { "colorWithDouble:withDouble:withDouble:", "color", "V", 0x4, NULL, NULL },
    { "colorWithDouble:withDouble:withDouble:withDouble:", "color", "V", 0x4, NULL, NULL },
    { "pointSizeWithDouble:", "pointSize", "V", 0x4, NULL, NULL },
    { "verticesWithDoubleArray:", "vertices", "V", 0x4, NULL, NULL },
    { "rectangleGeometryWithDouble:withDouble:withDouble:withDouble:withDouble:", "rectangleGeometry", "V", 0x1, NULL, NULL },
    { "startGeometryDirectWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:withInt:", "startGeometryDirect", "V", 0x1, NULL, NULL },
    { "vertexDirectWithDouble:withDouble:withDouble:", "vertexDirect", "V", 0x4, NULL, NULL },
    { "normalDirectWithDouble:withDouble:withDouble:", "normalDirect", "V", 0x4, NULL, NULL },
    { "endGeometryDirect", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "renderer_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.Renderer;", NULL, NULL,  },
    { "vertices__", "vertices", 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Double;>;",  },
    { "normals_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Double;>;",  },
    { "textures_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Double;>;",  },
    { "colors_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Double;>;",  },
    { "verticesLength_", NULL, 0x2, "I", NULL, NULL,  },
    { "verticesSize_", NULL, 0x2, "I", NULL, NULL,  },
    { "normalsLength_", NULL, 0x2, "I", NULL, NULL,  },
    { "normalsSize_", NULL, 0x2, "I", NULL, NULL,  },
    { "texturesLength_", NULL, 0x2, "I", NULL, NULL,  },
    { "texturesSize_", NULL, 0x2, "I", NULL, NULL,  },
    { "colorsLength_", NULL, 0x2, "I", NULL, NULL,  },
    { "colorsSize_", NULL, 0x2, "I", NULL, NULL,  },
    { "geometriesSetList_", NULL, 0x4, "Ljava.util.TreeMap;", NULL, "Ljava/util/TreeMap<Ljava/lang/Integer;Lorg/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShaders$GeometriesSet;>;",  },
    { "geometriesSetMaxIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "currentGeometriesSet_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$GeometriesSet;", NULL, NULL,  },
    { "indicesRemoved_", NULL, 0x2, "Ljava.util.Stack;", NULL, "Ljava/util/Stack<Ljava/lang/Integer;>;",  },
    { "currentOld_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$Geometry;", "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$GeometriesSet;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders = { 2, "ManagerShaders", "org.geogebra.common.geogebra3D.euclidian3D.openGL", NULL, 0x1, 30, methods, 18, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *renderer, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D) {
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, renderer, view3D);
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *renderer, OrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withOrgGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, renderer, view3D);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *)outer$
                  withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(self, outer$, type);
  return self;
}

- (void)setTypeWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type {
  self->type_ = type;
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->v_)) setEmpty];
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->n_)) setEmpty];
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->t_)) setEmpty];
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->c_)) setEmpty];
}

- (void)allocateBuffersWithInt:(jint)size {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(v_)) allocateWithInt:size * 3];
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(n_)) allocateWithInt:size * 3];
  length_ = 0;
}

- (void)vertexDirectWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(v_)) putWithDouble:x];
  [v_ putWithDouble:y];
  [v_ putWithDouble:z];
  length_++;
}

- (void)normalDirectWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(n_)) putWithDouble:x];
  [n_ putWithDouble:y];
  [n_ putWithDouble:z];
}

- (void)end {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(v_)) setLimitWithInt:length_ * 3];
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(n_)) setLimitWithInt:length_ * 3];
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)getType {
  return type_;
}

- (void)setVerticesWithJavaUtilArrayList:(JavaUtilArrayList *)array
                                 withInt:(jint)length {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->v_)) setWithJavaUtilArrayList:array withInt:length];
}

- (id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)getVertices {
  return v_;
}

- (void)setNormalsWithJavaUtilArrayList:(JavaUtilArrayList *)array
                                withInt:(jint)length {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->n_)) setWithJavaUtilArrayList:array withInt:length];
}

- (id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)getNormals {
  return n_;
}

- (void)setTexturesWithJavaUtilArrayList:(JavaUtilArrayList *)array
                                 withInt:(jint)length {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->t_)) setWithJavaUtilArrayList:array withInt:length];
}

- (void)setTexturesEmpty {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->t_)) setEmpty];
}

- (id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)getTextures {
  return t_;
}

- (void)setColorsWithJavaUtilArrayList:(JavaUtilArrayList *)array
                               withInt:(jint)length {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>) nil_chk(self->c_)) setWithJavaUtilArrayList:array withInt:length];
}

- (id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer>)getColors {
  return c_;
}

- (void)setLengthWithInt:(jint)l {
  self->length_ = l;
}

- (jint)getLength {
  return length_;
}

- (void)drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface:(id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>)r {
  [((id<OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface>) nil_chk(r)) loadVertexBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getVertices] withInt:[self getLength]];
  [r loadNormalBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getNormals] withInt:[self getLength]];
  [r loadColorBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getColors] withInt:[self getLength]];
  if ([r areTexturesEnabled]) {
    [r loadTextureBufferWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLBuffer:[self getTextures] withInt:[self getLength]];
  }
  [r drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:[self getType] withInt:[self getLength]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders:withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:", "Geometry", NULL, 0x1, NULL, NULL },
    { "setTypeWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:", "setType", "V", 0x1, NULL, NULL },
    { "allocateBuffersWithInt:", "allocateBuffers", "V", 0x1, NULL, NULL },
    { "vertexDirectWithDouble:withDouble:withDouble:", "vertexDirect", "V", 0x1, NULL, NULL },
    { "normalDirectWithDouble:withDouble:withDouble:", "normalDirect", "V", 0x1, NULL, NULL },
    { "end", NULL, "V", 0x1, NULL, NULL },
    { "getType", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.Manager$Type;", 0x1, NULL, NULL },
    { "setVerticesWithJavaUtilArrayList:withInt:", "setVertices", "V", 0x1, NULL, NULL },
    { "getVertices", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", 0x1, NULL, NULL },
    { "setNormalsWithJavaUtilArrayList:withInt:", "setNormals", "V", 0x1, NULL, NULL },
    { "getNormals", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", 0x1, NULL, NULL },
    { "setTexturesWithJavaUtilArrayList:withInt:", "setTextures", "V", 0x1, NULL, NULL },
    { "setTexturesEmpty", NULL, "V", 0x1, NULL, NULL },
    { "getTextures", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", 0x1, NULL, NULL },
    { "setColorsWithJavaUtilArrayList:withInt:", "setColors", "V", 0x1, NULL, NULL },
    { "getColors", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", 0x1, NULL, NULL },
    { "setLengthWithInt:", "setLength", "V", 0x1, NULL, NULL },
    { "getLength", NULL, "I", 0x1, NULL, NULL },
    { "drawWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLRendererShadersInterface:", "draw", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.Manager$Type;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", NULL, NULL,  },
    { "t_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", NULL, NULL,  },
    { "c_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.GLBuffer;", NULL, NULL,  },
    { "length_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry = { 2, "Geometry", "org.geogebra.common.geogebra3D.euclidian3D.openGL", "ManagerShaders", 0x1, 19, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *outer$, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *type) {
  (void) NSObject_init(self);
  self->type_ = type;
  self->v_ = [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLFactory *) nil_chk(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLFactory_get_prototype_())) newBuffer];
  self->n_ = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLFactory_get_prototype_() newBuffer];
  self->t_ = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLFactory_get_prototype_() newBuffer];
  self->c_ = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLGLFactory_get_prototype_() newBuffer];
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *outer$, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *type) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(self, outer$, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry)

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet

- (instancetype)initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *)outer$ {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_(self, outer$);
  return self;
}

- (void)reset {
  currentGeometryIndex_ = 0;
  geometriesLength_ = 0;
}

- (jint)getGeometriesLength {
  return geometriesLength_;
}

- (void)startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type {
  if (currentGeometryIndex_ < [self size]) {
    currentGeometry_ = [self getWithInt:currentGeometryIndex_];
  }
  else {
    currentGeometry_ = [self newGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:type];
    [self addWithId:currentGeometry_];
  }
  currentGeometryIndex_++;
  geometriesLength_++;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *)newGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum *)type {
  return new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_withOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_(this$0_, type);
}

- (void)allocateWithInt:(jint)size {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) allocateBuffersWithInt:size];
}

- (void)vertexDirectWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) vertexDirectWithDouble:x withDouble:y withDouble:z];
}

- (void)normalDirectWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) normalDirectWithDouble:x withDouble:y withDouble:z];
}

- (void)endGeometry {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) end];
}

- (void)bindGeometry {
}

- (void)setVerticesWithJavaUtilArrayList:(JavaUtilArrayList *)vertices
                                 withInt:(jint)length {
  [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) setVerticesWithJavaUtilArrayList:vertices withInt:length];
  [currentGeometry_ setLengthWithInt:length / 3];
}

- (void)setNormalsWithJavaUtilArrayList:(JavaUtilArrayList *)normals
                                withInt:(jint)length {
  if (length == 3) {
    [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) setNormalsWithJavaUtilArrayList:normals withInt:length];
  }
  else if (length == 3 * [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) getLength]) {
    [currentGeometry_ setNormalsWithJavaUtilArrayList:normals withInt:length];
  }
}

- (void)setTexturesWithJavaUtilArrayList:(JavaUtilArrayList *)textures
                                 withInt:(jint)length {
  if (length == 2 * [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) getLength]) {
    [currentGeometry_ setTexturesWithJavaUtilArrayList:textures withInt:length];
  }
  else {
    [currentGeometry_ setTexturesEmpty];
  }
}

- (void)setColorsWithJavaUtilArrayList:(JavaUtilArrayList *)colors
                               withInt:(jint)length {
  if (length == 4 * [((OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_Geometry *) nil_chk(currentGeometry_)) getLength]) {
    [currentGeometry_ setColorsWithJavaUtilArrayList:colors withInt:length];
  }
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders:", "GeometriesSet", NULL, 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "getGeometriesLength", NULL, "I", 0x1, NULL, NULL },
    { "startGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:", "startGeometry", "V", 0x1, NULL, NULL },
    { "newGeometryWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:", "newGeometry", "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$Geometry;", 0x4, NULL, NULL },
    { "allocateWithInt:", "allocate", "V", 0x1, NULL, NULL },
    { "vertexDirectWithDouble:withDouble:withDouble:", "vertexDirect", "V", 0x1, NULL, NULL },
    { "normalDirectWithDouble:withDouble:withDouble:", "normalDirect", "V", 0x1, NULL, NULL },
    { "endGeometry", NULL, "V", 0x1, NULL, NULL },
    { "bindGeometry", NULL, "V", 0x1, NULL, NULL },
    { "setVerticesWithJavaUtilArrayList:withInt:", "setVertices", "V", 0x1, NULL, NULL },
    { "setNormalsWithJavaUtilArrayList:withInt:", "setNormals", "V", 0x1, NULL, NULL },
    { "setTexturesWithJavaUtilArrayList:withInt:", "setTextures", "V", 0x1, NULL, NULL },
    { "setColorsWithJavaUtilArrayList:withInt:", "setColors", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders;", NULL, NULL,  },
    { "currentGeometry_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$Geometry;", NULL, NULL,  },
    { "currentGeometryIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "geometriesLength_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.geogebra3D.euclidian3D.openGL.ManagerShaders$Geometry;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet = { 2, "GeometriesSet", "org.geogebra.common.geogebra3D.euclidian3D.openGL", "ManagerShaders", 0x4, 14, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/geogebra3D/euclidian3D/openGL/ManagerShaders$Geometry;>;" };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *self, OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *outer$) {
  self->this$0_ = outer$;
  (void) JavaUtilArrayList_init(self);
  [self reset];
}

OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *new_OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders *outer$) {
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet *self = [OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet alloc];
  OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet_initWithOrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DOpenGLManagerShaders_GeometriesSet)
