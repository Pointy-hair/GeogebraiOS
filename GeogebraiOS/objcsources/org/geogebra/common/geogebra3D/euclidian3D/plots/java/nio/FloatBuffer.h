//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/FloatBuffer.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"

@class IOSFloatArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer : OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBuffer < JavaLangComparable >

#pragma mark Public

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)allocateWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (IOSFloatArray *)array;

- (jint)arrayOffset;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)asReadOnlyBuffer;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)compact;

- (jint)compareToWithId:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)otherBuffer;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)duplicate;

- (jboolean)isEqual:(id)other;

- (jfloat)get;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)getWithFloatArray:(IOSFloatArray *)dest;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)getWithFloatArray:(IOSFloatArray *)dest
                                                                             withInt:(jint)off
                                                                             withInt:(jint)len;

- (jfloat)getWithInt:(jint)index;

- (jboolean)hasArray;

- (jboolean)isDirect;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithFloat:(jfloat)f;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithFloatArray:(IOSFloatArray *)src;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithFloatArray:(IOSFloatArray *)src
                                                                             withInt:(jint)off
                                                                             withInt:(jint)len;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)src;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithInt:(jint)index
                                                                    withFloat:(jfloat)f;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)slice;

- (NSString *)description;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)wrapWithFloatArray:(IOSFloatArray *)array;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)wrapWithFloatArray:(IOSFloatArray *)array
                                                                              withInt:(jint)start
                                                                              withInt:(jint)len;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity;

- (IOSFloatArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer)

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_allocateWithInt_(jint capacity);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_wrapWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_wrapWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint start, jint len);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_initWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_H_
