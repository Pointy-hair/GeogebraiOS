//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntBuffer.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/BufferFactory.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/BufferOverflowException.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/BufferUnderflowException.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ByteOrder.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntBuffer.h"

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_putWithIntArray_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *self, IOSIntArray *src);

@implementation OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)allocateWithInt:(jint)capacity {
  return OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_allocateWithInt_(capacity);
}

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)wrapWithIntArray:(IOSIntArray *)array {
  return OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_wrapWithIntArray_(array);
}

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)wrapWithIntArray:(IOSIntArray *)array
                                                                          withInt:(jint)start
                                                                          withInt:(jint)len {
  return OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_wrapWithIntArray_withInt_withInt_(array, start, len);
}

- (instancetype)initWithInt:(jint)capacity {
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_initWithInt_(self, capacity);
  return self;
}

- (IOSIntArray *)array {
  return [self protectedArray];
}

- (jint)arrayOffset {
  return [self protectedArrayOffset];
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)asReadOnlyBuffer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)compact {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)compareToWithId:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)otherBuffer {
  (void) check_class_cast(otherBuffer, [OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer class]);
  jint compareRemaining = ([self remaining] < [((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *) nil_chk(otherBuffer)) remaining]) ? [self remaining] : [otherBuffer remaining];
  jint thisPos = position__;
  jint otherPos = otherBuffer->position__;
  jint thisInt, otherInt;
  while (compareRemaining > 0) {
    thisInt = [self getWithInt:thisPos];
    otherInt = [otherBuffer getWithInt:otherPos];
    if (thisInt != otherInt) {
      return thisInt < otherInt ? -1 : 1;
    }
    thisPos++;
    otherPos++;
    compareRemaining--;
  }
  return [self remaining] - [otherBuffer remaining];
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)duplicate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isEqual:(id)other {
  if (!([other isKindOfClass:[OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer class]])) {
    return NO;
  }
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *otherBuffer = (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *) check_class_cast(other, [OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer class]);
  if ([self remaining] != [((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *) nil_chk(otherBuffer)) remaining]) {
    return NO;
  }
  jint myPosition = position__;
  jint otherPosition = otherBuffer->position__;
  jboolean equalSoFar = YES;
  while (equalSoFar && (myPosition < limit__)) {
    equalSoFar = ([self getWithInt:myPosition++] == [otherBuffer getWithInt:otherPosition++]);
  }
  return equalSoFar;
}

- (jint)get {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)getWithIntArray:(IOSIntArray *)dest {
  return [self getWithIntArray:dest withInt:0 withInt:((IOSIntArray *) nil_chk(dest))->size_];
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)getWithIntArray:(IOSIntArray *)dest
                                                                         withInt:(jint)off
                                                                         withInt:(jint)len {
  jint length = ((IOSIntArray *) nil_chk(dest))->size_;
  if (off < 0 || len < 0 || (jlong) len + (jlong) off > length) {
    @throw new_JavaLangIndexOutOfBoundsException_init();
  }
  if (len > [self remaining]) {
    @throw new_OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferUnderflowException_init();
  }
  for (jint i = off; i < off + len; i++) {
    *IOSIntArray_GetRef(dest, i) = [self get];
  }
  return self;
}

- (jint)getWithInt:(jint)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)hasArray {
  return [self protectedHasArray];
}

- (NSUInteger)hash {
  jint myPosition = position__;
  jint hash_ = 0;
  while (myPosition < limit__) {
    hash_ = hash_ + [self getWithInt:myPosition++];
  }
  return hash_;
}

- (jboolean)isDirect {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)protectedArray {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)protectedArrayOffset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)protectedHasArray {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithInt:(jint)i {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithIntArray:(IOSIntArray *)src {
  return OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_putWithIntArray_(self, src);
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithIntArray:(IOSIntArray *)src
                                                                         withInt:(jint)off
                                                                         withInt:(jint)len {
  jint length = ((IOSIntArray *) nil_chk(src))->size_;
  if (off < 0 || len < 0 || (jlong) len + (jlong) off > length) {
    @throw new_JavaLangIndexOutOfBoundsException_init();
  }
  if (len > [self remaining]) {
    @throw new_OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferOverflowException_init();
  }
  for (jint i = off; i < off + len; i++) {
    (void) [self putWithInt:IOSIntArray_Get(src, i)];
  }
  return self;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)src {
  if (src == self) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  if ([((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *) nil_chk(src)) remaining] > [self remaining]) {
    @throw new_OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferOverflowException_init();
  }
  IOSIntArray *contents = [IOSIntArray newArrayWithLength:[src remaining]];
  (void) [src getWithIntArray:contents];
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_putWithIntArray_(self, contents);
  return self;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithInt:(jint)index
                                                                    withInt:(jint)i {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)slice {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  (void) [buf appendWithNSString:[[self getClass] getName]];
  (void) [buf appendWithNSString:@", status: capacity="];
  (void) [buf appendWithInt:[self capacity]];
  (void) [buf appendWithNSString:@" position="];
  (void) [buf appendWithInt:[self position]];
  (void) [buf appendWithNSString:@" limit="];
  (void) [buf appendWithInt:[self limit]];
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "allocateWithInt:", "allocate", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x9, NULL, NULL },
    { "wrapWithIntArray:", "wrap", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x9, NULL, NULL },
    { "wrapWithIntArray:withInt:withInt:", "wrap", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x9, NULL, NULL },
    { "initWithInt:", "IntBuffer", NULL, 0x0, NULL, NULL },
    { "array", NULL, "[I", 0x11, NULL, NULL },
    { "arrayOffset", NULL, "I", 0x11, NULL, NULL },
    { "asReadOnlyBuffer", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x401, NULL, NULL },
    { "compact", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x401, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "duplicate", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x401, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "get", NULL, "I", 0x401, NULL, NULL },
    { "getWithIntArray:", "get", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "getWithIntArray:withInt:withInt:", "get", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "getWithInt:", "get", "I", 0x401, NULL, NULL },
    { "hasArray", NULL, "Z", 0x11, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isDirect", NULL, "Z", 0x401, NULL, NULL },
    { "order", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.ByteOrder;", 0x401, NULL, NULL },
    { "protectedArray", NULL, "[I", 0x404, NULL, NULL },
    { "protectedArrayOffset", NULL, "I", 0x404, NULL, NULL },
    { "protectedHasArray", NULL, "Z", 0x404, NULL, NULL },
    { "putWithInt:", "put", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x401, NULL, NULL },
    { "putWithIntArray:", "put", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x11, NULL, NULL },
    { "putWithIntArray:withInt:withInt:", "put", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "putWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer:", "put", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x1, NULL, NULL },
    { "putWithInt:withInt:", "put", "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x401, NULL, NULL },
    { "slice", NULL, "Lorg.geogebra.common.geogebra3D.euclidian3D.plots.java.nio.IntBuffer;", 0x401, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer = { 2, "IntBuffer", "org.geogebra.common.geogebra3D.euclidian3D.plots.java.nio", NULL, 0x401, 29, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Lorg/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer;Ljava/lang/Comparable<Lorg/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntBuffer;>;" };
  return &_OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer;
}

@end

OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_allocateWithInt_(jint capacity) {
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_initialize();
  if (capacity < 0) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  return OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferFactory_newIntBufferWithInt_(capacity);
}

OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_wrapWithIntArray_(IOSIntArray *array) {
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_initialize();
  return OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_wrapWithIntArray_withInt_withInt_(array, 0, ((IOSIntArray *) nil_chk(array))->size_);
}

OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_wrapWithIntArray_withInt_withInt_(IOSIntArray *array, jint start, jint len) {
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_initialize();
  if (array == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  if (start < 0 || len < 0 || (jlong) len + (jlong) start > ((IOSIntArray *) nil_chk(array))->size_) {
    @throw new_JavaLangIndexOutOfBoundsException_init();
  }
  OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *buf = OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferFactory_newIntBufferWithIntArray_(array);
  ((OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *) nil_chk(buf))->position__ = start;
  buf->limit__ = start + len;
  return buf;
}

void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_initWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *self, jint capacity) {
  (void) OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBuffer_initWithInt_(self, capacity);
}

OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_putWithIntArray_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *self, IOSIntArray *src) {
  return [self putWithIntArray:src withInt:0 withInt:((IOSIntArray *) nil_chk(src))->size_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer)
