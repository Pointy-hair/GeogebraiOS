//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntArrayBuffer.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntBuffer.h"

@class IOSIntArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer : OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer {
 @public
  IOSIntArray *backingArray_;
  jint offset_;
}

#pragma mark Public

- (jint)get;

- (jint)getWithInt:(jint)index;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)getWithIntArray:(IOSIntArray *)dest
                                                                         withInt:(jint)off
                                                                         withInt:(jint)len;

- (jboolean)isDirect;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
               withIntArray:(IOSIntArray *)backingArray
                    withInt:(jint)offset;

- (instancetype)initWithIntArray:(IOSIntArray *)array;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer, backingArray_, IOSIntArray *)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_initWithIntArray_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer *self, IOSIntArray *array);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_initWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer *self, jint capacity);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_initWithInt_withIntArray_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer *self, jint capacity, IOSIntArray *backingArray, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntArrayBuffer_H_
