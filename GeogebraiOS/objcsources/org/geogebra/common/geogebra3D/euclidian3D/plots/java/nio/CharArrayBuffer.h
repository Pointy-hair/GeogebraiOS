//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/CharArrayBuffer.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/CharBuffer.h"

@class IOSCharArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;
@protocol JavaLangCharSequence;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer : OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer {
 @public
  IOSCharArray *backingArray_;
  jint offset_;
}

#pragma mark Public

- (jchar)get;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)getWithCharArray:(IOSCharArray *)dest
                                                                           withInt:(jint)off
                                                                           withInt:(jint)len;

- (jchar)getWithInt:(jint)index;

- (jboolean)isDirect;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

- (id<JavaLangCharSequence>)subSequenceFrom:(jint)start
                                         to:(jint)end;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithCharArray:(IOSCharArray *)array;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
              withCharArray:(IOSCharArray *)backingArray
                    withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer, backingArray_, IOSCharArray *)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer_initWithCharArray_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer *self, IOSCharArray *array);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer_initWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer *self, jint capacity);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer_initWithInt_withCharArray_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer *self, jint capacity, IOSCharArray *backingArray, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharArrayBuffer_H_
