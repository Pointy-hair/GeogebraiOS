//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/CharBuffer.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_H_

#include "J2ObjC_header.h"
#include "java/lang/Appendable.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Comparable.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"

@class IOSCharArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer : OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBuffer < JavaLangComparable, JavaLangCharSequence, JavaLangAppendable >

#pragma mark Public

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)allocateWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)appendWithChar:(jchar)c;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq
                                                                                         withInt:(jint)start
                                                                                         withInt:(jint)end;

- (IOSCharArray *)array;

- (jint)arrayOffset;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)asReadOnlyBuffer;

- (jchar)charAtWithInt:(jint)index;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)compact;

- (jint)compareToWithId:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)otherBuffer;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)duplicate;

- (jboolean)isEqual:(id)other;

- (jchar)get;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)getWithCharArray:(IOSCharArray *)dest;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)getWithCharArray:(IOSCharArray *)dest
                                                                           withInt:(jint)off
                                                                           withInt:(jint)len;

- (jchar)getWithInt:(jint)index;

- (jboolean)hasArray;

- (NSUInteger)hash;

- (jboolean)isDirect;

- (jint)length;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithChar:(jchar)c;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithCharArray:(IOSCharArray *)src;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithCharArray:(IOSCharArray *)src
                                                                           withInt:(jint)off
                                                                           withInt:(jint)len;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)src;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithInt:(jint)index
                                                                    withChar:(jchar)c;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithNSString:(NSString *)str;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithNSString:(NSString *)str
                                                                          withInt:(jint)start
                                                                          withInt:(jint)end;

- (jint)readWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)target;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)slice;

- (id<JavaLangCharSequence>)subSequenceFrom:(jint)start
                                         to:(jint)end;

- (NSString *)description;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)wrapWithCharArray:(IOSCharArray *)array;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)wrapWithCharArray:(IOSCharArray *)array
                                                                            withInt:(jint)start
                                                                            withInt:(jint)len;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)wrapWithJavaLangCharSequence:(id<JavaLangCharSequence>)chseq;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)wrapWithJavaLangCharSequence:(id<JavaLangCharSequence>)chseq
                                                                                       withInt:(jint)start
                                                                                       withInt:(jint)end;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity;

- (IOSCharArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer)

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_allocateWithInt_(jint capacity);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_wrapWithCharArray_(IOSCharArray *array);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_wrapWithCharArray_withInt_withInt_(IOSCharArray *array, jint start, jint len);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_wrapWithJavaLangCharSequence_(id<JavaLangCharSequence> chseq);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_wrapWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> chseq, jint start, jint end);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_initWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_H_
