//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ReadOnlyShortArrayBuffer.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ShortArrayBuffer.h"

@class IOSShortArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer : OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortArrayBuffer

#pragma mark Public

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)asReadOnlyBuffer;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)compact;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)duplicate;

- (jboolean)isReadOnly;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)putWithInt:(jint)index
                                                                    withShort:(jshort)c;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)putWithShort:(jshort)c;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)putWithShortArray:(IOSShortArray *)src
                                                                             withInt:(jint)off
                                                                             withInt:(jint)len;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)putWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)buf;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortBuffer *)slice;

#pragma mark Protected

- (IOSShortArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity
             withShortArray:(IOSShortArray *)backingArray
                    withInt:(jint)arrayOffset;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer *)copy__WithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortArrayBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortArrayBuffer *)other
                                                                                                                                                     withInt:(jint)markOfOther OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer)

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer_copy__WithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortArrayBuffer_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioShortArrayBuffer *other, jint markOfOther);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer_initWithInt_withShortArray_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer *self, jint capacity, IOSShortArray *backingArray, jint arrayOffset);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer *new_OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer_initWithInt_withShortArray_withInt_(jint capacity, IOSShortArray *backingArray, jint arrayOffset) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyShortArrayBuffer_H_
