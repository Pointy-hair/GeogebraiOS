//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ReadOnlyDoubleArrayBuffer.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/DoubleArrayBuffer.h"

@class IOSDoubleArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer : OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer

#pragma mark Public

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)asReadOnlyBuffer;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)compact;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)duplicate;

- (jboolean)isReadOnly;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithDouble:(jdouble)c;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithDoubleArray:(IOSDoubleArray *)src
                                                                               withInt:(jint)off
                                                                               withInt:(jint)len;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)buf;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithInt:(jint)index
                                                                    withDouble:(jdouble)c;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)slice;

#pragma mark Protected

- (IOSDoubleArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity
            withDoubleArray:(IOSDoubleArray *)backingArray
                    withInt:(jint)arrayOffset;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer *)copy__WithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer *)other
                                                                                                                                                       withInt:(jint)markOfOther OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer)

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer_copy__WithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer *other, jint markOfOther);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer_initWithInt_withDoubleArray_withInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer *self, jint capacity, IOSDoubleArray *backingArray, jint arrayOffset);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer *new_OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer_initWithInt_withDoubleArray_withInt_(jint capacity, IOSDoubleArray *backingArray, jint arrayOffset) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyDoubleArrayBuffer_H_
