//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/IntBuffer.java
//

#ifndef _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_H_
#define _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"
#include "org/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"

@class IOSIntArray;
@class OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;

@interface OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer : OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBuffer < JavaLangComparable >

#pragma mark Public

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)allocateWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (IOSIntArray *)array;

- (jint)arrayOffset;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)asReadOnlyBuffer;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)compact;

- (jint)compareToWithId:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)otherBuffer;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)duplicate;

- (jboolean)isEqual:(id)other;

- (jint)get;

- (jint)getWithInt:(jint)index;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)getWithIntArray:(IOSIntArray *)dest;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)getWithIntArray:(IOSIntArray *)dest
                                                                         withInt:(jint)off
                                                                         withInt:(jint)len;

- (jboolean)hasArray;

- (NSUInteger)hash;

- (jboolean)isDirect;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithInt:(jint)i;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithInt:(jint)index
                                                                    withInt:(jint)i;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithIntArray:(IOSIntArray *)src;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithIntArray:(IOSIntArray *)src
                                                                         withInt:(jint)off
                                                                         withInt:(jint)len;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)putWithOrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer:(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)src;

- (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)slice;

- (NSString *)description;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)wrapWithIntArray:(IOSIntArray *)array;

+ (OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *)wrapWithIntArray:(IOSIntArray *)array
                                                                          withInt:(jint)start
                                                                          withInt:(jint)len;

#pragma mark Protected

- (IOSIntArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer)

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_allocateWithInt_(jint capacity);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_wrapWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_wrapWithIntArray_withInt_withInt_(IOSIntArray *array, jint start, jint len);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_initWithInt_(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer)

#endif // _OrgGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioIntBuffer_H_
