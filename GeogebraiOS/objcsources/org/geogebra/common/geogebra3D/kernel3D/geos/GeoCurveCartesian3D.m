//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/geos/GeoCurveCartesian3D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/Geo3DVec.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoCurveCartesian3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/DistanceFunction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Matrix/Coords3D.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/PathMover.h"
#include "org/geogebra/common/kernel/PathMoverGeneric.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoMacro.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/Function.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoCurveCartesianND.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/optimization/ExtremumFinder.h"
#include "org/geogebra/common/kernel/roots/RealRootFunction.h"
#include "org/geogebra/common/kernel/roots/RealRootUtil.h"
#include "org/geogebra/common/plugin/GeoClass.h"
#include "org/geogebra/common/plugin/Operation.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D () {
 @public
  jboolean trace_;
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *tmpMatrix4x4_;
}

- (void)updateDerivatives;

- (void)transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:(OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)m;

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                     withBoolean:(jboolean)changePoint;

- (jdouble)adjustRangeWithDouble:(jdouble)startValResult;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D, tmpMatrix4x4_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_updateDerivatives(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *m);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, jboolean changePoint);

__attribute__((unused)) static jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_adjustRangeWithDouble_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, jdouble startValResult);

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction : NSObject < OrgGeogebraCommonKernelDistanceFunction > {
 @public
  OrgGeogebraCommonKernelMatrixCoords *distCoords_, *distDirection_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *curve_;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)outer$
                    withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)curve;

- (void)setDistantPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p;

- (jdouble)evaluateWithDouble:(jdouble)t;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction, distCoords_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction, distDirection_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction, curve_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *outer$, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *curve);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *outer$, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *curve) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction)

@implementation OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
         withOrgGeogebraCommonKernelArithmeticFunctionArray:(IOSObjectArray *)fun {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionArray_(self, c, fun);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)curve {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, curve);
  return self;
}

- (OrgGeogebraCommonKernelArithmeticFunction *)getFunWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(fun_), i);
}

- (OrgGeogebraCommonKernelMatrixCoords *)evaluateTangentWithDouble:(jdouble)t {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_updateDerivatives(self);
  OrgGeogebraCommonKernelMatrixCoords *v = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3);
  for (jint i = 0; i < 3; i++) [v setWithInt:i + 1 withDouble:[((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(funD1_), i))) evaluateWithDouble:t]];
  return [v normalized];
}

- (void)evaluateCurveWithDouble:(jdouble)t
                withDoubleArray:(IOSDoubleArray *)outArg {
  for (jint i = 0; i < 3; i++) {
    *IOSDoubleArray_GetRef(nil_chk(outArg), i) = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(fun_), i))) evaluateWithDouble:t];
  }
}

- (IOSDoubleArray *)newDoubleArray {
  return [IOSDoubleArray newArrayWithLength:3];
}

- (OrgGeogebraCommonKernelMatrixCoords *)evaluateCurve3DWithDouble:(jdouble)t {
  return new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(fun_), 0))) evaluateWithDouble:t], [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(fun_, 1))) evaluateWithDouble:t], [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(fun_, 2))) evaluateWithDouble:t], 1);
}

- (OrgGeogebraCommonKernelMatrixCoords3D *)evaluateTangent3DWithDouble:(jdouble)t {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_updateDerivatives(self);
  return [new_OrgGeogebraCommonKernelMatrixCoords3D_initWithDouble_withDouble_withDouble_withDouble_([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(funD1_), 0))) evaluateWithDouble:t], [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(funD1_, 1))) evaluateWithDouble:t], [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(funD1_, 2))) evaluateWithDouble:t], 1) normalize];
}

- (jdouble)evaluateCurvatureWithDouble:(jdouble)t {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_updateDerivatives(self);
  OrgGeogebraCommonKernelMatrixCoords *D1 = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3);
  OrgGeogebraCommonKernelMatrixCoords *D2 = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3);
  for (jint i = 0; i < 3; i++) [D1 setWithInt:i + 1 withDouble:[((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(funD1_), i))) evaluateWithDouble:t]];
  for (jint i = 0; i < 3; i++) [D2 setWithInt:i + 1 withDouble:[((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(funD2_), i))) evaluateWithDouble:t]];
  OrgGeogebraCommonKernelMatrixCoords *cross = [D1 crossProductWithOrgGeogebraCommonKernelMatrixCoords:D2];
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(cross)) norm] / JavaLangMath_powWithDouble_withDouble_([D1 norm], 3);
}

- (void)updateDerivatives {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_updateDerivatives(self);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self);
}

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)Geo {
  return NO;
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (!([geo isKindOfClass:[OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND class]])) {
    return;
  }
  OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *geoCurve = (OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *) check_class_cast(geo, [OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND class]);
  for (jint i = 0; i < 2; i++) {
    (void) IOSObjectArray_Set(nil_chk(fun_), i, new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticFunction_withOrgGeogebraCommonKernelKernel_([((OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *) nil_chk(geoCurve)) getFunWithInt:i], kernel_));
  }
  if ([((OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *) nil_chk(geoCurve)) isGeoElement3D]) {
    (void) IOSObjectArray_Set(nil_chk(fun_), 2, new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticFunction_withOrgGeogebraCommonKernelKernel_([geoCurve getFunWithInt:2], kernel_));
  }
  else {
    (void) IOSObjectArray_Set(nil_chk(fun_), 2, new_OrgGeogebraCommonKernelArithmeticFunction_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariable_(new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, 0), new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(kernel_, @"t")));
  }
  startParam_ = [geoCurve getMinParameter];
  endParam_ = [geoCurve getMaxParameter];
  isDefined__ = [geoCurve isDefined];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getConstruction] != cons_ && [self isAlgoMacroOutput]) {
    if (![geo isIndependent]) {
      OrgGeogebraCommonKernelAlgosAlgoMacro *algoMacro = (OrgGeogebraCommonKernelAlgosAlgoMacro *) check_class_cast([self getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoMacro class]);
      for (jint i = 0; i < 3; i++) [((OrgGeogebraCommonKernelAlgosAlgoMacro *) nil_chk(algoMacro)) initFunctionWithOrgGeogebraCommonKernelArithmeticFunctionNVar:IOSObjectArray_Get(nil_chk(fun_), i)];
    }
  }
}

- (jboolean)showInAlgebraView {
  return YES;
}

- (jboolean)showInEuclidianView {
  return YES;
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return OrgGeogebraCommonPluginGeoClassEnum_get_CURVE_CARTESIAN3D();
}

- (OrgGeogebraCommonKernelMatrixCoords *)getLabelPosition {
  return new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
}

- (jboolean)isGeoElement3D {
  return YES;
}

- (jboolean)isTraceable {
  return YES;
}

- (void)setTraceWithBoolean:(jboolean)trace {
  self->trace_ = trace;
}

- (jboolean)getTrace {
  return trace_;
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S {
  if (tmpMatrix4x4_ == nil) {
    tmpMatrix4x4_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Rotation4x4WithDouble_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(r)) getDouble], [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(S)) getInhomCoordsInD3], tmpMatrix4x4_);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self, tmpMatrix4x4_);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r {
  if (tmpMatrix4x4_ == nil) {
    tmpMatrix4x4_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Rotation4x4WithDouble_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(r)) getDouble], tmpMatrix4x4_);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self, tmpMatrix4x4_);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S
             withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  if (tmpMatrix4x4_ == nil) {
    tmpMatrix4x4_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Rotation4x4WithOrgGeogebraCommonKernelMatrixCoords_withDouble_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation)) getDirectionInD3])) normalized], [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(r)) getDouble], [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(S)) getInhomCoordsInD3], tmpMatrix4x4_);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self, tmpMatrix4x4_);
}

- (void)transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:(OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)m {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self, m);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                  withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  if (tmpMatrix4x4_ == nil) {
    tmpMatrix4x4_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Rotation4x4WithOrgGeogebraCommonKernelMatrixCoords_withDouble_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix4x4_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getDirectionInD3])) normalized], [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(r)) getDouble], [line getStartInhomCoords], tmpMatrix4x4_);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self, tmpMatrix4x4_);
}

- (IOSDoubleArray *)getDefinedIntervalWithDouble:(jdouble)a
                                      withDouble:(jdouble)b {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_getDefinedIntervalWithDouble_withDouble_withOrgGeogebraCommonKernelRootsRealRootFunction_withOrgGeogebraCommonKernelRootsRealRootFunction_withOrgGeogebraCommonKernelRootsRealRootFunction_(a, b, IOSObjectArray_Get(nil_chk(fun_), 0), IOSObjectArray_Get(fun_, 1), IOSObjectArray_Get(fun_, 2));
}

+ (IOSDoubleArray *)getDefinedIntervalWithDouble:(jdouble)a
                                      withDouble:(jdouble)b
withOrgGeogebraCommonKernelRootsRealRootFunction:(id<OrgGeogebraCommonKernelRootsRealRootFunction>)funX
withOrgGeogebraCommonKernelRootsRealRootFunction:(id<OrgGeogebraCommonKernelRootsRealRootFunction>)funY
withOrgGeogebraCommonKernelRootsRealRootFunction:(id<OrgGeogebraCommonKernelRootsRealRootFunction>)funZ {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_getDefinedIntervalWithDouble_withDouble_withOrgGeogebraCommonKernelRootsRealRootFunction_withOrgGeogebraCommonKernelRootsRealRootFunction_withOrgGeogebraCommonKernelRootsRealRootFunction_(a, b, funX, funY, funZ);
}

- (jboolean)isClosedPath {
  return NO;
}

- (id<OrgGeogebraCommonKernelPathMover>)createPathMover {
  return new_OrgGeogebraCommonKernelPathMoverGeneric_initWithOrgGeogebraCommonKernelPath_(self);
}

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  OrgGeogebraCommonKernelPathParameter *pp = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) getPathParameter];
  jdouble t = [self getClosestParameterWithOrgGeogebraCommonKernelKernelNDGeoPointND:P withDouble:((OrgGeogebraCommonKernelPathParameter *) nil_chk(pp))->t_];
  pp->t_ = t;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(self, P, NO);
}

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(PI)) getPath] == self) return YES;
  OrgGeogebraCommonKernelPathParameter *pp = [PI getPathParameter];
  jdouble t = [self getClosestParameterWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI withDouble:((OrgGeogebraCommonKernelPathParameter *) nil_chk(pp))->t_];
  OrgGeogebraCommonKernelMatrixCoords *coords = [PI getInhomCoordsInD3];
  jboolean onPath = JavaLangMath_absWithDouble_([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(fun_), 0))) evaluateWithDouble:t] - [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX]) <= eps && JavaLangMath_absWithDouble_([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(fun_, 1))) evaluateWithDouble:t] - [coords getY]) <= eps && JavaLangMath_absWithDouble_([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(fun_, 2))) evaluateWithDouble:t] - [coords getZ]) <= eps;
  return onPath;
}

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(self, PI, ![((OrgGeogebraCommonKernelKernel *) nil_chk([self getKernel])) usePathAndRegionParametersWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI]);
}

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                     withBoolean:(jboolean)changePoint {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(self, P, changePoint);
}

- (jdouble)getClosestParameterWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                                 withDouble:(jdouble)startValue {
  jdouble startVal = startValue;
  if (distFun_ == nil) distFun_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, self);
  [((id<OrgGeogebraCommonKernelDistanceFunction>) nil_chk(distFun_)) setDistantPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:P];
  {
    OrgGeogebraCommonKernelPathParameter *pp = [P getPathParameter];
    jdouble pathParam = ((OrgGeogebraCommonKernelPathParameter *) nil_chk(pp))->t_;
    if ([distFun_ evaluateWithDouble:pathParam] < OrgGeogebraCommonKernelKernel_MIN_PRECISION * OrgGeogebraCommonKernelKernel_MIN_PRECISION) return pathParam;
    if (JavaLangDouble_isNaNWithDouble_(startVal)) startVal = pathParam;
  }
  jdouble step = (endParam_ - startParam_) / OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_CLOSEST_PARAMETER_SAMPLES;
  jdouble minVal = [distFun_ evaluateWithDouble:startParam_];
  jdouble minParam = startParam_;
  jdouble t = startParam_;
  for (jint i = 0; i < OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_CLOSEST_PARAMETER_SAMPLES; i++) {
    t = t + step;
    jdouble ft = [distFun_ evaluateWithDouble:t];
    if (ft < minVal) {
      minVal = ft;
      minParam = t;
    }
  }
  jdouble left = minParam - step;
  jdouble right = minParam + step;
  OrgGeogebraCommonKernelOptimizationExtremumFinder *extFinder = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getExtremumFinder];
  jdouble sampleResult = [((OrgGeogebraCommonKernelOptimizationExtremumFinder *) nil_chk(extFinder)) findMinimumWithDouble:left withDouble:right withOrgGeogebraCommonKernelRootsRealRootFunction:distFun_ withDouble:OrgGeogebraCommonKernelKernel_MIN_PRECISION];
  sampleResult = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_adjustRangeWithDouble_(self, sampleResult);
  if (!JavaLangDouble_isNaNWithDouble_(startVal) && (startVal < left || right < startVal)) {
    left = startVal - step;
    right = startVal + step;
    jdouble startValResult = [extFinder findMinimumWithDouble:left withDouble:right withOrgGeogebraCommonKernelRootsRealRootFunction:distFun_ withDouble:OrgGeogebraCommonKernelKernel_MIN_PRECISION];
    startValResult = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_adjustRangeWithDouble_(self, startValResult);
    if ([distFun_ evaluateWithDouble:startValResult] < [distFun_ evaluateWithDouble:sampleResult] + OrgGeogebraCommonKernelKernel_MIN_PRECISION / 2) {
      return startValResult;
    }
  }
  return sampleResult;
}

- (jdouble)adjustRangeWithDouble:(jdouble)startValResult {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_adjustRangeWithDouble_(self, startValResult);
}

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  for (jint i = 0; i < 3; i++) {
    OrgGeogebraCommonKernelArithmeticExpressionNode *expr = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(fun_), i))) deepCopyWithOrgGeogebraCommonKernelKernel:kernel_]))) getExpression];
    OrgGeogebraCommonKernelArithmeticExpressionNode *trans = [((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(expr)) plusWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) getWithInt:i + 1]];
    [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(fun_, i))) setExpressionWithOrgGeogebraCommonKernelArithmeticExpressionNode:trans];
  }
}

- (jboolean)isTranslateable {
  return YES;
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q {
  [self dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, -1.0) withOrgGeogebraCommonKernelMatrixCoords:Q];
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_AxialSymetryWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getDirectionInD3])) normalized], [line getStartInhomCoords]));
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane {
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *m = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(plane)) getCoordSys])) getMatrixOrthonormal];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(self, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_PlaneSymetryWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_([((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(m)) getVz], [m getOrigin]));
}

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)ratio
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)P {
  [self translateWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(P)) mulWithDouble:-1]];
  for (jint i = 0; i < 3; i++) {
    OrgGeogebraCommonKernelArithmeticExpressionNode *expr = [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(fun_), i))) deepCopyWithOrgGeogebraCommonKernelKernel:kernel_]))) getExpression];
    [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(fun_, i))) setExpressionWithOrgGeogebraCommonKernelArithmeticExpressionNode:new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, ratio, OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), expr)];
  }
  [self translateWithOrgGeogebraCommonKernelMatrixCoords:P];
}

- (void)clearCasEvalMapWithNSString:(NSString *)string {
}

- (jboolean)isFunctionInX {
  return NO;
}

- (jdouble)distanceMaxWithDoubleArray:(IOSDoubleArray *)p1
                      withDoubleArray:(IOSDoubleArray *)p2 {
  return JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_absWithDouble_(IOSDoubleArray_Get(nil_chk(p1), 0) - IOSDoubleArray_Get(nil_chk(p2), 0)), JavaLangMath_absWithDouble_(IOSDoubleArray_Get(p1, 1) - IOSDoubleArray_Get(p2, 1))), JavaLangMath_absWithDouble_(IOSDoubleArray_Get(p1, 2) - IOSDoubleArray_Get(p2, 2)));
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)evaluateCurveWithDouble:(jdouble)t {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(self->kernel_, [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([self getFunWithInt:0])) evaluateWithDouble:t], [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([self getFunWithInt:1])) evaluateWithDouble:t], [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([self getFunWithInt:2])) evaluateWithDouble:t]);
}

- (OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND *)newGeoCurveCartesianWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
}

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType {
  return OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum_get_ON_BOUNDARY();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoCurveCartesian3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticFunctionArray:", "GeoCurveCartesian3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:", "GeoCurveCartesian3D", NULL, 0x1, NULL, NULL },
    { "getFunWithInt:", "getFun", "Lorg.geogebra.common.kernel.arithmetic.Function;", 0x1, NULL, NULL },
    { "evaluateTangentWithDouble:", "evaluateTangent", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "evaluateCurveWithDouble:withDoubleArray:", "evaluateCurve", "V", 0x1, NULL, NULL },
    { "newDoubleArray", NULL, "[D", 0x1, NULL, NULL },
    { "evaluateCurve3DWithDouble:", "evaluateCurve3D", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "evaluateTangent3DWithDouble:", "evaluateTangent3D", "Lorg.geogebra.common.kernel.Matrix.Coords3D;", 0x1, NULL, NULL },
    { "evaluateCurvatureWithDouble:", "evaluateCurvature", "D", 0x1, NULL, NULL },
    { "updateDerivatives", NULL, "V", 0x2, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "isEqualWithOrgGeogebraCommonKernelGeosGeoElement:", "isEqual", "Z", 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "showInAlgebraView", NULL, "Z", 0x1, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x4, NULL, NULL },
    { "getGeoClassType", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "getLabelPosition", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "isGeoElement3D", NULL, "Z", 0x1, NULL, NULL },
    { "isTraceable", NULL, "Z", 0x1, NULL, NULL },
    { "setTraceWithBoolean:", "setTrace", "V", 0x1, NULL, NULL },
    { "getTrace", NULL, "Z", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "rotate", "V", 0x1, NULL, NULL },
    { "transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:", "transform", "V", 0x2, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "rotate", "V", 0x1, NULL, NULL },
    { "getDefinedIntervalWithDouble:withDouble:", "getDefinedInterval", "[D", 0x1, NULL, NULL },
    { "getDefinedIntervalWithDouble:withDouble:withOrgGeogebraCommonKernelRootsRealRootFunction:withOrgGeogebraCommonKernelRootsRealRootFunction:withOrgGeogebraCommonKernelRootsRealRootFunction:", "getDefinedInterval", "[D", 0x9, NULL, NULL },
    { "isClosedPath", NULL, "Z", 0x1, NULL, NULL },
    { "createPathMover", NULL, "Lorg.geogebra.common.kernel.PathMover;", 0x1, NULL, NULL },
    { "pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pointChanged", "V", 0x1, NULL, NULL },
    { "isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:withDouble:", "isOnPath", "Z", 0x1, NULL, NULL },
    { "pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pathChanged", "V", 0x1, NULL, NULL },
    { "pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:withBoolean:", "pathChanged", "V", 0x2, NULL, NULL },
    { "getClosestParameterWithOrgGeogebraCommonKernelKernelNDGeoPointND:withDouble:", "getClosestParameter", "D", 0x1, NULL, NULL },
    { "adjustRangeWithDouble:", "adjustRange", "D", 0x2, NULL, NULL },
    { "translateWithOrgGeogebraCommonKernelMatrixCoords:", "translate", "V", 0x1, NULL, NULL },
    { "isTranslateable", NULL, "Z", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "mirror", "V", 0x1, NULL, NULL },
    { "dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:", "dilate", "V", 0x1, NULL, NULL },
    { "clearCasEvalMapWithNSString:", "clearCasEvalMap", "V", 0x1, NULL, NULL },
    { "isFunctionInX", NULL, "Z", 0x1, NULL, NULL },
    { "distanceMaxWithDoubleArray:withDoubleArray:", "distanceMax", "D", 0x1, NULL, NULL },
    { "evaluateCurveWithDouble:", "evaluateCurve", "Lorg.geogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "newGeoCurveCartesianWithOrgGeogebraCommonKernelConstruction:", "newGeoCurveCartesian", "Lorg.geogebra.common.kernel.kernelND.GeoCurveCartesianND;", 0x4, NULL, NULL },
    { "getLastHitType", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement$HitType;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "trace_", NULL, 0x2, "Z", NULL, NULL,  },
    { "tmpMatrix4x4_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoCurveCartesian3D$CurveCartesian3DDistanceFunction;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D = { 2, "GeoCurveCartesian3D", "org.geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x1, 49, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, c, 3);
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionArray_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *fun) {
  (void) OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionArray_(self, c, fun);
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionArray_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *fun) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionArray_(self, c, fun);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *curve) {
  (void) OrgGeogebraCommonKernelKernelNDGeoCurveCartesianND_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(curve))->cons_, 3);
  [self setWithOrgGeogebraCommonKernelGeosGeoElement:curve];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *curve) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, curve);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_updateDerivatives(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self) {
  jint dim = 3;
  self->funD1_ = [IOSObjectArray newArrayWithLength:dim type:OrgGeogebraCommonKernelArithmeticFunction_class_()];
  self->funD2_ = [IOSObjectArray newArrayWithLength:dim type:OrgGeogebraCommonKernelArithmeticFunction_class_()];
  for (jint i = 0; i < dim; i++) {
    (void) IOSObjectArray_Set(self->funD1_, i, [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([self getFunWithInt:i])) getDerivativeWithInt:1 withBoolean:YES]);
    (void) IOSObjectArray_Set(self->funD2_, i, [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk([self getFunWithInt:i])) getDerivativeWithInt:2 withBoolean:YES]);
  }
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_transformWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *m) {
  IOSObjectArray *expr = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelArithmeticExpressionNode_class_()];
  for (jint i = 0; i < 3; i++) {
    (void) IOSObjectArray_Set(expr, i, [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(([((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(self->fun_), i))) deepCopyWithOrgGeogebraCommonKernelKernel:self->kernel_]))) getExpression]);
  }
  for (jint row = 0; row < 3; row++) {
    IOSObjectArray *coeff = [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelArithmeticMyDouble_class_()];
    for (jint i = 0; i < 4; i++) {
      (void) IOSObjectArray_Set(coeff, i, new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(self->kernel_, [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(m)) getWithInt:row + 1 withInt:i + 1]));
    }
    OrgGeogebraCommonKernelArithmeticExpressionNode *trans = new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, IOSObjectArray_Get(coeff, 3));
    for (jint i = 0; i < 3; i++) {
      trans = [trans plusWithOrgGeogebraCommonKernelArithmeticExpressionValue:[((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(IOSObjectArray_Get(expr, i))) multiplyWithOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(coeff, i)]];
    }
    [((OrgGeogebraCommonKernelArithmeticFunction *) nil_chk(IOSObjectArray_Get(nil_chk(self->fun_), row))) setExpressionWithOrgGeogebraCommonKernelArithmeticExpressionNode:trans];
  }
}

IOSDoubleArray *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_getDefinedIntervalWithDouble_withDouble_withOrgGeogebraCommonKernelRootsRealRootFunction_withOrgGeogebraCommonKernelRootsRealRootFunction_withOrgGeogebraCommonKernelRootsRealRootFunction_(jdouble a, jdouble b, id<OrgGeogebraCommonKernelRootsRealRootFunction> funX, id<OrgGeogebraCommonKernelRootsRealRootFunction> funY, id<OrgGeogebraCommonKernelRootsRealRootFunction> funZ) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_initialize();
  IOSDoubleArray *interval = OrgGeogebraCommonKernelRootsRealRootUtil_getDefinedIntervalWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_(funX, a, b);
  OrgGeogebraCommonKernelRootsRealRootUtil_updateDefinedIntervalIntersectingWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDoubleArray_(funY, a, b, interval);
  OrgGeogebraCommonKernelRootsRealRootUtil_updateDefinedIntervalIntersectingWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDoubleArray_(funZ, a, b, interval);
  return interval;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, jboolean changePoint) {
  if (changePoint) {
    [self pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:P];
    return;
  }
  OrgGeogebraCommonKernelPathParameter *pp = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) getPathParameter];
  if (((OrgGeogebraCommonKernelPathParameter *) nil_chk(pp))->t_ < self->startParam_) pp->t_ = self->startParam_;
  else if (pp->t_ > self->endParam_) pp->t_ = self->endParam_;
  [P setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[self evaluateCurve3DWithDouble:pp->t_] withBoolean:NO];
}

jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_adjustRangeWithDouble_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *self, jdouble startValResult) {
  if (startValResult < self->startParam_) {
    return startValResult + (self->endParam_ - self->startParam_);
  }
  if (startValResult > self->endParam_) {
    return startValResult - (self->endParam_ - self->startParam_);
  }
  return startValResult;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D)

@implementation OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)outer$
                    withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)curve {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, outer$, curve);
  return self;
}

- (void)setDistantPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p)) isGeoElement3D]) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p3D = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(p, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class]);
    if ([p3D hasWillingCoords]) {
      distCoords_ = [p3D getWillingCoords];
    }
    else {
      distCoords_ = [p3D getInhomCoordsInD3];
    }
    distDirection_ = [p3D getWillingDirection];
  }
  else {
    distCoords_ = [p getInhomCoordsInD3];
    distDirection_ = nil;
  }
}

- (jdouble)evaluateWithDouble:(jdouble)t {
  OrgGeogebraCommonKernelMatrixCoords *eval = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(curve_)) evaluateCurve3DWithDouble:t];
  if (distDirection_ == nil || ![distDirection_ isDefined]) {
    return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(eval)) squareDistance3WithOrgGeogebraCommonKernelMatrixCoords:distCoords_];
  }
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(eval)) squareDistLine3WithOrgGeogebraCommonKernelMatrixCoords:distCoords_ withOrgGeogebraCommonKernelMatrixCoords:distDirection_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:", "CurveCartesian3DDistanceFunction", NULL, 0x1, NULL, NULL },
    { "setDistantPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "setDistantPoint", "V", 0x1, NULL, NULL },
    { "evaluateWithDouble:", "evaluate", "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "distCoords_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "distDirection_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "curve_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoCurveCartesian3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction = { 2, "CurveCartesian3DDistanceFunction", "org.geogebra.common.geogebra3D.kernel3D.geos", "GeoCurveCartesian3D", 0x2, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *outer$, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *curve) {
  (void) NSObject_init(self);
  self->curve_ = curve;
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *outer$, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *curve) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, outer$, curve);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_CurveCartesian3DDistanceFunction)
