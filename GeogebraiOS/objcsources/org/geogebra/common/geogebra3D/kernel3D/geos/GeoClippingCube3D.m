//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/geos/GeoClippingCube3D.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoClippingCube3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/plugin/GeoClass.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D () {
 @public
  jint reduction_;
}

@end

@implementation OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getLabelPosition {
  return nil;
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return OrgGeogebraCommonPluginGeoClassEnum_get_CLIPPINGCUBE3D();
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ {
  return nil;
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
}

- (jboolean)isDefined {
  return YES;
}

- (void)setUndefined {
}

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return nil;
}

- (jboolean)showInAlgebraView {
  return NO;
}

- (jboolean)showInEuclidianView {
  return YES;
}

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)Geo {
  return NO;
}

- (void)setReductionWithInt:(jint)value {
  reduction_ = value;
}

- (jint)getReduction {
  return reduction_;
}

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType {
  return OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum_get_NONE();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoClippingCube3D", NULL, 0x1, NULL, NULL },
    { "getLabelPosition", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getGeoClassType", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "isDefined", NULL, "Z", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x1, NULL, NULL },
    { "toValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "showInAlgebraView", NULL, "Z", 0x1, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x4, NULL, NULL },
    { "isEqualWithOrgGeogebraCommonKernelGeosGeoElement:", "isEqual", "Z", 0x1, NULL, NULL },
    { "setReductionWithInt:", "setReduction", "V", 0x1, NULL, NULL },
    { "getReduction", NULL, "I", 0x1, NULL, NULL },
    { "getLastHitType", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement$HitType;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "REDUCTION_SMALL_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_REDUCTION_SMALL },
    { "REDUCTION_MEDIUM_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_REDUCTION_MEDIUM },
    { "REDUCTION_LARGE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_REDUCTION_LARGE },
    { "REDUCTION_MIN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_REDUCTION_MIN },
    { "REDUCTION_MAX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_REDUCTION_MAX },
    { "reduction_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D = { 2, "GeoClippingCube3D", "org.geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x1, 14, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->reduction_ = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_REDUCTION_MEDIUM;
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D)
