//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron.java
//

#ifndef _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_H_
#define _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/transform/MirrorableAtPlane.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/geos/Dilateable.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/Traceable.h"
#include "org/geogebra/common/kernel/geos/Transformable.h"
#include "org/geogebra/common/kernel/geos/Translateable.h"
#include "org/geogebra/common/kernel/kernelND/GeoPolyhedronInterface.h"
#include "org/geogebra/common/kernel/kernelND/HasHeight.h"
#include "org/geogebra/common/kernel/kernelND/HasSegments.h"
#include "org/geogebra/common/kernel/kernelND/HasVolume.h"
#include "org/geogebra/common/kernel/kernelND/RotateableND.h"

@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class JavaUtilTreeMap;
@class OrgGeogebraCommonAwtGColor;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D;
@class OrgGeogebraCommonKernelArithmeticMyDouble;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelConstructionElementCycle;
@class OrgGeogebraCommonKernelGeosGeoBoolean;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum;
@class OrgGeogebraCommonKernelGeosGeoList;
@class OrgGeogebraCommonKernelGeosGeoPolygon;
@class OrgGeogebraCommonKernelMatrixCoords;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonPluginGeoClassEnum;
@protocol JavaUtilCollection;
@protocol OrgGeogebraCommonKernelArithmeticNumberValue;
@protocol OrgGeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol OrgGeogebraCommonKernelKernelNDGeoDirectionND;
@protocol OrgGeogebraCommonKernelKernelNDGeoLineND;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;
@protocol OrgGeogebraCommonKernelKernelNDGeoSegmentND;
@protocol OrgGeogebraCommonKernelPathMover;

#define OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_PYRAMID 1
#define OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_PRISM 3
#define OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_TETRAHEDRON 4
#define OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_CUBE 5
#define OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_OCTAHEDRON 6
#define OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_DODECAHEDRON 7
#define OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_ICOSAHEDRON 8

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron : OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D < OrgGeogebraCommonKernelKernelNDHasSegments, OrgGeogebraCommonKernelKernelNDHasVolume, OrgGeogebraCommonKernelGeosTraceable, OrgGeogebraCommonKernelKernelNDRotateableND, OrgGeogebraCommonKernelGeosTranslateable, OrgGeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane, OrgGeogebraCommonKernelGeosTransformable, OrgGeogebraCommonKernelGeosDilateable, OrgGeogebraCommonKernelKernelNDHasHeight, OrgGeogebraCommonKernelPath, OrgGeogebraCommonKernelKernelNDGeoPolyhedronInterface, OrgGeogebraCommonKernelGeosGeoNumberValue > {
 @public
  jint type_;
  JavaUtilTreeMap *segmentsIndex_;
  jlong segmentsIndexMax_;
  JavaUtilTreeMap *segments_;
  JavaUtilTreeMap *polygonsIndex_;
  JavaUtilArrayList *polygonsDescriptions_;
  jint polygonsIndexMax_;
  JavaUtilTreeMap *polygons_;
  JavaUtilArrayList *polygonsLinked_;
  JavaUtilArrayList *pointsCreated_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c;

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)polyhedron;

- (void)addPointCreatedWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)point;

- (void)addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point;

- (void)addPolygonLinkedWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)polygon;

- (void)addSegmentLinkedWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment;

- (jboolean)allLabelsAreSet;

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)createFaces;

- (id<OrgGeogebraCommonKernelPathMover>)createPathMover;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)createPolygonWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                                                                                                                 withInt:(jint)index;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)createPolygonWithInt:(jint)index;

- (id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)createSegmentWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
                                                                withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)endPoint;

- (void)defaultLabelsWithNSStringArray:(IOSObjectArray *)labels;

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)rval
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)S;

- (void)endCurrentFace;

- (jdouble)getArea;

- (OrgGeogebraCommonKernelGeosGeoPolygon *)getBottomFace;

- (jdouble)getDouble;

- (OrgGeogebraCommonKernelGeosGeoPolygon *)getFaceWithInt:(jint)index;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)getFace3DWithInt:(jint)index;

- (IOSObjectArray *)getFaces;

- (IOSObjectArray *)getFaces3D;

- (id<JavaUtilCollection>)getFacesCollection;

- (jint)getFacesSize;

- (OrgGeogebraCommonKernelGeosGeoPolygon *)getFirstSideFace;

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (OrgGeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (OrgGeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (jdouble)getOrientedHeight;

- (id<JavaUtilCollection>)getPolygons;

- (id<JavaUtilCollection>)getPolygonsLinked;

- (id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)getSegmentWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
                                                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)endPoint;

- (IOSObjectArray *)getSegments;

- (IOSObjectArray *)getSegments3D;

- (id<JavaUtilCollection>)getSegmentsLinked;

- (OrgGeogebraCommonKernelGeosGeoPolygon *)getTopFace;

- (OrgGeogebraCommonKernelMatrixCoords *)getTopPoint;

- (jboolean)getTrace;

- (jint)getType;

- (NSString *)getTypeString;

- (jdouble)getVolume;

- (jboolean)hasFiniteArea;

- (jboolean)hasFiniteVolume;

- (void)initLabelsWithNSStringArray:(IOSObjectArray *)labels OBJC_METHOD_FAMILY_NONE;

- (jboolean)isClosedPath;

- (jboolean)isDefined;

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)Geo;

- (jboolean)isFillable;

- (jboolean)isGeoPolyhedron;

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps;

- (jboolean)isPath;

- (jboolean)isTraceable;

- (jboolean)isTranslateable;

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane;

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g;

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)remove;

- (void)removeColorFunction;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                  withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S
             withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setAllLabelsAreSetWithBoolean:(jboolean)flag;

- (void)setAlphaValueWithFloat:(jfloat)alpha;

- (void)setAreaWithDouble:(jdouble)area;

- (void)setColorFunctionWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)col;

- (void)setCurrentFaceIsTopFace;

- (void)setDefined;

- (void)setEuclidianVisibleWithBoolean:(jboolean)visible;

- (void)setLayerWithInt:(jint)layer2;

- (void)setLineThicknessWithInt:(jint)th;

- (void)setLineThicknessOrVisibilityWithInt:(jint)th;

- (void)setLineTypeWithInt:(jint)type;

- (void)setLineTypeHiddenWithInt:(jint)type;

- (void)setObjColorWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color;

- (void)setOrientedHeightWithDouble:(jdouble)height;

- (void)setPointSizeOrVisibilityWithInt:(jint)size;

- (void)setReverseNormals;

- (void)setReverseNormalsForDrawingWithBoolean:(jboolean)flag;

- (void)setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)cond;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setTypeWithInt:(jint)type;

- (void)setUndefined;

- (void)setVolumeWithDouble:(jdouble)volume;

- (jboolean)showInAlgebraView;

- (void)startNewFace;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringMinimalWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v;

- (void)updateFacesDeprecated;

- (void)updateSegmentsLinked;

- (void)updateVisualStyle;

#pragma mark Protected

- (id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)createNewSegmentWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
                                                                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)endPoint
                                                             withOrgGeogebraCommonKernelConstructionElementCycle:(OrgGeogebraCommonKernelConstructionElementCycle *)key;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)showInEuclidianView;

- (void)storeSegmentWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *)segment
                        withOrgGeogebraCommonKernelConstructionElementCycle:(OrgGeogebraCommonKernelConstructionElementCycle *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, segmentsIndex_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, segments_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, polygonsIndex_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, polygonsDescriptions_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, polygons_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, polygonsLinked_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, pointsCreated_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, TYPE_PYRAMID, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, TYPE_PRISM, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, TYPE_TETRAHEDRON, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, TYPE_CUBE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, TYPE_OCTAHEDRON, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, TYPE_DODECAHEDRON, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron, TYPE_ICOSAHEDRON, jint)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *self, OrgGeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *polyhedron);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *polyhedron) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron)

#endif // _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_H_
