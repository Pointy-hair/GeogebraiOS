//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/geos/Geo3DVec.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/HashSet.h"
#include "org/apache/commons/math/complex/Complex.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/Geo3DVec.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/MyList.h"
#include "org/geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "org/geogebra/common/kernel/arithmetic/VectorNDValue.h"
#include "org/geogebra/common/kernel/geos/GeoVec2D.h"
#include "org/geogebra/common/kernel/geos/GeoVec3D.h"
#include "org/geogebra/common/kernel/kernelND/Geo3DVec.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoVecInterface.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec () {
 @public
  jint mode_;
  OrgGeogebraCommonKernelKernel *kernel_;
  JavaLangStringBuilder *sbToString_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec, kernel_, OrgGeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec, sbToString_, JavaLangStringBuilder *)

__attribute__((unused)) static jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static NSString *OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonKernelStringTemplate *tpl);

__attribute__((unused)) static NSString *OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonKernelStringTemplate *tpl);

@implementation OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                           withDouble:(jdouble)x
                                           withDouble:(jdouble)y
                                           withDouble:(jdouble)z {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(self, kernel, x, y, z);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)v {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(self, v);
  return self;
}

- (id<OrgGeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel1 {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(self);
}

- (void)resolveVariables {
}

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)p
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)q {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(self, kernel, p, q);
  return self;
}

- (void)setXWithDouble:(jdouble)x {
  self->x_ = x;
}

- (void)setYWithDouble:(jdouble)y {
  self->y_ = y;
}

- (void)setZWithDouble:(jdouble)z {
  self->z_ = z;
}

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z {
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

- (void)setCoordsWithDoubleArray:(IOSDoubleArray *)a {
  x_ = IOSDoubleArray_Get(nil_chk(a), 0);
  y_ = IOSDoubleArray_Get(a, 1);
  z_ = IOSDoubleArray_Get(a, 2);
}

- (void)setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoVec3D *)v {
  x_ = ((OrgGeogebraCommonKernelGeosGeoVec3D *) nil_chk(v))->x_;
  y_ = v->y_;
  z_ = v->z_;
}

- (jdouble)getX {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(self);
}

- (jdouble)getY {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(self);
}

- (jdouble)getZ {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(self);
}

- (IOSDoubleArray *)getCoords {
  IOSDoubleArray *res = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ x_, y_, z_ } count:3];
  return res;
}

- (jdouble)length {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(self);
}

+ (jdouble)lengthWithDoubleArray:(IOSDoubleArray *)a {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDoubleArray_(a);
}

+ (jdouble)lengthWithDouble:(jdouble)a
                 withDouble:(jdouble)b
                 withDouble:(jdouble)c {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(a, b, c);
}

- (void)makeUnitVector {
  jdouble len = OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(self);
  x_ = x_ / len;
  y_ = y_ / len;
}

- (jboolean)equalsWithOrgGeogebraCommonKernelGeosGeoVec2D:(OrgGeogebraCommonKernelGeosGeoVec2D *)v {
  return OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x_, [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(v)) getX]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(y_, [v getY]);
}

+ (void)addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                       withOrgGeogebraCommonKernelGeosGeoVec2D:(OrgGeogebraCommonKernelGeosGeoVec2D *)b
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)addWithOrgGeogebraCommonKernelGeosGeoVec2D:(OrgGeogebraCommonKernelGeosGeoVec2D *)a
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)vectorProductWithOrgGeogebraCommonKernelKernelNDGeoVecInterface:(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>)a
                     withOrgGeogebraCommonKernelKernelNDGeoVecInterface:(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>)b
                    withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_vectorProductWithOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                       withOrgGeogebraCommonKernelGeosGeoVec2D:(OrgGeogebraCommonKernelGeosGeoVec2D *)b
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)subWithOrgGeogebraCommonKernelGeosGeoVec2D:(OrgGeogebraCommonKernelGeosGeoVec2D *)a
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)multWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                                                     withDouble:(jdouble)b
            withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)innerWithOrgGeogebraCommonKernelKernelNDGeoVecInterface:(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>)a
             withOrgGeogebraCommonKernelKernelNDGeoVecInterface:(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>)b
                  withOrgGeogebraCommonKernelArithmeticMyDouble:(OrgGeogebraCommonKernelArithmeticMyDouble *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_innerWithOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelArithmeticMyDouble_(a, b, c);
}

+ (void)complexMultiplyWithOrgGeogebraCommonKernelKernelNDGeoVecInterface:(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>)a
                       withOrgGeogebraCommonKernelKernelNDGeoVecInterface:(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>)b
                                  withOrgGeogebraCommonKernelGeosGeoVec2D:(OrgGeogebraCommonKernelGeosGeoVec2D *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_complexMultiplyWithOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)divWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                                                    withDouble:(jdouble)b
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_divWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithOrgGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)getVector {
  return self;
}

- (jboolean)isConstant {
  return YES;
}

- (jboolean)isLeaf {
  return YES;
}

- (JavaUtilHashSet *)getVariables {
  return nil;
}

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithOrgGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithOrgGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (jboolean)isNumberValue {
  return NO;
}

- (jboolean)containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:(id<OrgGeogebraCommonKernelArithmeticExpressionValue>)ev {
  return ev == self;
}

- (jboolean)evaluatesTo3DVector {
  return YES;
}

- (IOSDoubleArray *)getPointAsDouble {
  return [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(self), OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(self), OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(self) } count:3];
}

- (NSString *)toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithOrgGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (OrgGeogebraCommonKernelKernel *)getKernel {
  return kernel_;
}

- (jboolean)isEqualWithOrgGeogebraCommonKernelKernelNDGeo3DVec:(id<OrgGeogebraCommonKernelKernelNDGeo3DVec>)vec {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *v = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) check_class_cast(vec, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec class]);
  return OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x_, ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(v))->x_) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(y_, v->y_) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(z_, v->z_);
}

- (void)multiplyMatrix3x3WithOrgGeogebraCommonKernelArithmeticMyList:(OrgGeogebraCommonKernelArithmeticMyList *)list
                  withOrgGeogebraCommonKernelArithmeticVectorNDValue:(id<OrgGeogebraCommonKernelArithmeticVectorNDValue>)rt {
  jdouble a, b, c, d, e, f, g, h, i, xx, yy, zz;
  id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<OrgGeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
  xx = [((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
  yy = [v getY];
  zz = [v getZ];
  a = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 0))) evaluateDouble];
  d = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  e = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  f = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 1))) evaluateDouble];
  g = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 2))) evaluateDouble];
  h = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 2))) evaluateDouble];
  i = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 2))) evaluateDouble];
  x_ = a * xx + b * yy + c * zz;
  y_ = d * xx + e * yy + f * zz;
  z_ = g * xx + h * yy + i * zz;
  return;
}

- (void)multiplyMatrix4x4WithOrgGeogebraCommonKernelArithmeticMyList:(OrgGeogebraCommonKernelArithmeticMyList *)list
                  withOrgGeogebraCommonKernelArithmeticVectorNDValue:(id<OrgGeogebraCommonKernelArithmeticVectorNDValue>)rt {
  jdouble m, n, o, p, xx, yy, zz, ww;
  jboolean vector = NO;
  if ([OrgGeogebraCommonKernelKernelNDGeoPointND_class_() isInstance:rt]) {
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> point = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(rt, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    OrgGeogebraCommonKernelMatrixCoords *coords = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getCoordsInD3];
    xx = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX];
    yy = [coords getY];
    zz = [coords getZ];
    ww = [coords getW];
  }
  else {
    id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<OrgGeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
    xx = [((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
    yy = [v getY];
    zz = [v getZ];
    ww = 0;
    vector = YES;
  }
  m = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 3))) evaluateDouble];
  n = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 3))) evaluateDouble];
  o = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 3))) evaluateDouble];
  p = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 3))) evaluateDouble];
  jdouble w = m * xx + n * yy + o * zz + p * ww;
  if (vector && !OrgGeogebraCommonKernelKernel_isZeroWithDouble_(w)) {
    x_ = JavaLangDouble_NaN;
    y_ = JavaLangDouble_NaN;
    z_ = JavaLangDouble_NaN;
    return;
  }
  jdouble a, b, c, d, e, f, g, h, i, j, k, l;
  a = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 0))) evaluateDouble];
  d = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 0))) evaluateDouble];
  e = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  f = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  g = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 1))) evaluateDouble];
  h = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 1))) evaluateDouble];
  i = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 2))) evaluateDouble];
  j = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 2))) evaluateDouble];
  k = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 2))) evaluateDouble];
  l = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 2))) evaluateDouble];
  x_ = a * xx + b * yy + c * zz + d * ww;
  y_ = e * xx + f * yy + g * zz + h * ww;
  z_ = i * xx + j * yy + k * zz + l * ww;
  if (!vector) {
    x_ = x_ / w;
    y_ = y_ / w;
    z_ = z_ / w;
  }
}

- (void)multiplyMatrix3x2WithOrgGeogebraCommonKernelArithmeticMyList:(OrgGeogebraCommonKernelArithmeticMyList *)list
                  withOrgGeogebraCommonKernelArithmeticVectorNDValue:(id<OrgGeogebraCommonKernelArithmeticVectorNDValue>)rt {
  jdouble a, b, d, e, g, h, xx, yy;
  id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<OrgGeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
  xx = [((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
  yy = [v getY];
  a = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  d = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  e = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  g = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 2))) evaluateDouble];
  h = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 2))) evaluateDouble];
  x_ = a * xx + b * yy;
  y_ = d * xx + e * yy;
  z_ = g * xx + h * yy;
  return;
}

+ (void)multiplyMatrixWithOrgGeogebraCommonKernelArithmeticMyList:(OrgGeogebraCommonKernelArithmeticMyList *)list
               withOrgGeogebraCommonKernelArithmeticVectorNDValue:(id<OrgGeogebraCommonKernelArithmeticVectorNDValue>)rt
                          withOrgGeogebraCommonKernelGeosGeoVec2D:(OrgGeogebraCommonKernelGeosGeoVec2D *)ret {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multiplyMatrixWithOrgGeogebraCommonKernelArithmeticMyList_withOrgGeogebraCommonKernelArithmeticVectorNDValue_withOrgGeogebraCommonKernelGeosGeoVec2D_(list, rt, ret);
}

- (jint)getMode {
  return self->mode_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)round {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(kernel_, JavaLangMath_roundWithDouble_(x_), JavaLangMath_roundWithDouble_(y_), JavaLangMath_roundWithDouble_(z_));
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)floor {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(kernel_, JavaLangMath_floorWithDouble_(x_), JavaLangMath_floorWithDouble_(y_), JavaLangMath_floorWithDouble_(z_));
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)ceil {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(kernel_, JavaLangMath_ceilWithDouble_(x_), JavaLangMath_ceilWithDouble_(y_), JavaLangMath_ceilWithDouble_(z_));
}

- (OrgGeogebraCommonKernelArithmeticExpressionNode *)wrap {
  return new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, self);
}

- (jdouble)arg {
  return JavaLangMath_atan2WithDouble_withDouble_(y_, x_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernel:withDouble:withDouble:withDouble:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "deepCopyWithOrgGeogebraCommonKernelKernel:", "deepCopy", "Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "resolveVariables", NULL, "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernel:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "setXWithDouble:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithDouble:", "setY", "V", 0x1, NULL, NULL },
    { "setZWithDouble:", "setZ", "V", 0x1, NULL, NULL },
    { "setCoordsWithDouble:withDouble:withDouble:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithDoubleArray:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:", "setCoords", "V", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x11, NULL, NULL },
    { "getY", NULL, "D", 0x11, NULL, NULL },
    { "getZ", NULL, "D", 0x11, NULL, NULL },
    { "getCoords", NULL, "[D", 0x11, NULL, NULL },
    { "length", NULL, "D", 0x11, NULL, NULL },
    { "lengthWithDoubleArray:", "length", "D", 0x19, NULL, NULL },
    { "lengthWithDouble:withDouble:withDouble:", "length", "D", 0x19, NULL, NULL },
    { "makeUnitVector", NULL, "V", 0x11, NULL, NULL },
    { "equalsWithOrgGeogebraCommonKernelGeosGeoVec2D:", "equals", "Z", 0x11, NULL, NULL },
    { "addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "add", "V", 0x19, NULL, NULL },
    { "addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonKernelGeosGeoVec2D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "add", "V", 0x19, NULL, NULL },
    { "addWithOrgGeogebraCommonKernelGeosGeoVec2D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "add", "V", 0x19, NULL, NULL },
    { "vectorProductWithOrgGeogebraCommonKernelKernelNDGeoVecInterface:withOrgGeogebraCommonKernelKernelNDGeoVecInterface:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "vectorProduct", "V", 0x19, NULL, NULL },
    { "subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "sub", "V", 0x19, NULL, NULL },
    { "subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonKernelGeosGeoVec2D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "sub", "V", 0x19, NULL, NULL },
    { "subWithOrgGeogebraCommonKernelGeosGeoVec2D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "sub", "V", 0x19, NULL, NULL },
    { "multWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withDouble:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "mult", "V", 0x19, NULL, NULL },
    { "innerWithOrgGeogebraCommonKernelKernelNDGeoVecInterface:withOrgGeogebraCommonKernelKernelNDGeoVecInterface:withOrgGeogebraCommonKernelArithmeticMyDouble:", "inner", "V", 0x19, NULL, NULL },
    { "complexMultiplyWithOrgGeogebraCommonKernelKernelNDGeoVecInterface:withOrgGeogebraCommonKernelKernelNDGeoVecInterface:withOrgGeogebraCommonKernelGeosGeoVec2D:", "complexMultiply", "V", 0x19, NULL, NULL },
    { "divWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withDouble:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "div", "V", 0x19, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getVector", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x11, NULL, NULL },
    { "isConstant", NULL, "Z", 0x11, NULL, NULL },
    { "isLeaf", NULL, "Z", 0x11, NULL, NULL },
    { "getVariables", NULL, "Ljava.util.HashSet;", 0x11, NULL, NULL },
    { "toValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "toLaTeXStringWithBoolean:withOrgGeogebraCommonKernelStringTemplate:", "toLaTeXString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isNumberValue", NULL, "Z", 0x11, NULL, NULL },
    { "containsWithOrgGeogebraCommonKernelArithmeticExpressionValue:", "contains", "Z", 0x11, NULL, NULL },
    { "evaluatesTo3DVector", NULL, "Z", 0x1, NULL, NULL },
    { "getPointAsDouble", NULL, "[D", 0x1, NULL, NULL },
    { "toOutputValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toOutputValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getKernel", NULL, "Lorg.geogebra.common.kernel.Kernel;", 0x1, NULL, NULL },
    { "isEqualWithOrgGeogebraCommonKernelKernelNDGeo3DVec:", "isEqual", "Z", 0x1, NULL, NULL },
    { "multiplyMatrix3x3WithOrgGeogebraCommonKernelArithmeticMyList:withOrgGeogebraCommonKernelArithmeticVectorNDValue:", "multiplyMatrix3x3", "V", 0x1, NULL, NULL },
    { "multiplyMatrix4x4WithOrgGeogebraCommonKernelArithmeticMyList:withOrgGeogebraCommonKernelArithmeticVectorNDValue:", "multiplyMatrix4x4", "V", 0x1, NULL, NULL },
    { "multiplyMatrix3x2WithOrgGeogebraCommonKernelArithmeticMyList:withOrgGeogebraCommonKernelArithmeticVectorNDValue:", "multiplyMatrix3x2", "V", 0x1, NULL, NULL },
    { "multiplyMatrixWithOrgGeogebraCommonKernelArithmeticMyList:withOrgGeogebraCommonKernelArithmeticVectorNDValue:withOrgGeogebraCommonKernelGeosGeoVec2D:", "multiplyMatrix", "V", 0x9, NULL, NULL },
    { "getMode", NULL, "I", 0x1, NULL, NULL },
    { "round", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "floor", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "ceil", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "wrap", NULL, "Lorg.geogebra.common.kernel.arithmetic.ExpressionNode;", 0x1, NULL, NULL },
    { "arg", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "D", NULL, NULL,  },
    { "y_", NULL, 0x1, "D", NULL, NULL,  },
    { "z_", NULL, 0x1, "D", NULL, NULL,  },
    { "mode_", NULL, 0x2, "I", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "sbToString_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec = { 2, "Geo3DVec", "org.geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x11, 56, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) OrgGeogebraCommonKernelArithmeticValidExpression_init(self);
  self->x_ = JavaLangDouble_NaN;
  self->y_ = JavaLangDouble_NaN;
  self->z_ = JavaLangDouble_NaN;
  self->mode_ = OrgGeogebraCommonKernelKernel_COORD_CARTESIAN_3D;
  self->sbToString_ = new_JavaLangStringBuilder_initWithInt_(50);
  self->kernel_ = kernel;
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonKernelKernel *kernel, jdouble x, jdouble y, jdouble z) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelKernel *kernel, jdouble x, jdouble y, jdouble z) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(self, kernel, x, y, z);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *v) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_(self, ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(v))->kernel_);
  self->x_ = v->x_;
  self->y_ = v->y_;
  self->z_ = v->z_;
  self->mode_ = v->mode_;
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *v) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(self, v);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *q) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  self->x_ = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(q)) getX] - [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(p)) getX];
  self->y_ = [q getY] - [p getY];
  self->z_ = [q getZ] - [p getZ];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *q) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(self, kernel, p, q);
  return self;
}

jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return self->x_;
}

jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return self->y_;
}

jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return self->z_;
}

jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(self->x_, self->y_, self->z_);
}

jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDoubleArray_(IOSDoubleArray *a) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(a), 0), IOSDoubleArray_Get(a, 1), IOSDoubleArray_Get(a, 2));
}

jdouble OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(jdouble a, jdouble b, jdouble c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  return JavaLangMath_sqrtWithDouble_(a * a + b * b + c * c);
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ + ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = a->y_ + b->y_;
  c->z_ = a->z_ + b->z_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, OrgGeogebraCommonKernelGeosGeoVec2D *b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ + [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(b)) getX];
  c->y_ = a->y_ + [b getY];
  c->z_ = a->z_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonKernelGeosGeoVec2D *a, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(a)) getX] + ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = [a getY] + b->y_;
  c->z_ = b->z_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_vectorProductWithOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> a, id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  jdouble tempX = [((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(a)) getY] * [((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getZ] - [a getZ] * [b getY];
  jdouble tempY = -[a getX] * [b getZ] + [a getZ] * [b getX];
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->z_ = [a getX] * [b getY] - [a getY] * [b getX];
  c->x_ = tempX;
  c->y_ = tempY;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ - ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = a->y_ - b->y_;
  c->z_ = a->z_ - b->z_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, OrgGeogebraCommonKernelGeosGeoVec2D *b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ - [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(b)) getX];
  c->y_ = a->y_ - [b getY];
  c->z_ = a->z_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithOrgGeogebraCommonKernelGeosGeoVec2D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonKernelGeosGeoVec2D *a, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(a)) getX] - ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = [a getY] - b->y_;
  c->z_ = -b->z_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, jdouble b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ * b;
  c->y_ = a->y_ * b;
  c->z_ = a->z_ * b;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_innerWithOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelArithmeticMyDouble_(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> a, id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> b, OrgGeogebraCommonKernelArithmeticMyDouble *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  [((OrgGeogebraCommonKernelArithmeticMyDouble *) nil_chk(c)) setWithDouble:[((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(a)) getX] * [((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getX] + [a getY] * [b getY] + [a getZ] * [b getZ]];
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_complexMultiplyWithOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelKernelNDGeoVecInterface_withOrgGeogebraCommonKernelGeosGeoVec2D_(id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> a, id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> b, OrgGeogebraCommonKernelGeosGeoVec2D *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(a)) getZ]) || !OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getZ])) {
    [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(c)) setXWithDouble:JavaLangDouble_NaN];
    [c setYWithDouble:JavaLangDouble_NaN];
    [c setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_COMPLEX];
    return;
  }
  OrgApacheCommonsMathComplexComplex *out = new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_([a getX], [a getY]);
  out = [out multiplyWithId:new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_([((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getX], [b getY])];
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(c)) setXWithDouble:[((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal]];
  [c setYWithDouble:[out getImaginary]];
  [c setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_COMPLEX];
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_divWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, jdouble b, OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ / b;
  c->y_ = a->y_ / b;
  c->z_ = a->z_ / b;
}

NSString *OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonKernelStringTemplate *tpl) {
  [((JavaLangStringBuilder *) nil_chk(self->sbToString_)) setLengthWithInt:0];
  (void) [self->sbToString_ appendWithChar:'('];
  (void) [self->sbToString_ appendWithNSString:[((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) formatWithDouble:self->x_ withOrgGeogebraCommonKernelStringTemplate:tpl]];
  (void) [self->sbToString_ appendWithNSString:@", "];
  (void) [self->sbToString_ appendWithNSString:[self->kernel_ formatWithDouble:self->y_ withOrgGeogebraCommonKernelStringTemplate:tpl]];
  (void) [self->sbToString_ appendWithChar:')'];
  return [self->sbToString_ description];
}

NSString *OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithOrgGeogebraCommonKernelStringTemplate_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, OrgGeogebraCommonKernelStringTemplate *tpl) {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithOrgGeogebraCommonKernelStringTemplate_(self, tpl);
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multiplyMatrixWithOrgGeogebraCommonKernelArithmeticMyList_withOrgGeogebraCommonKernelArithmeticVectorNDValue_withOrgGeogebraCommonKernelGeosGeoVec2D_(OrgGeogebraCommonKernelArithmeticMyList *list, id<OrgGeogebraCommonKernelArithmeticVectorNDValue> rt, OrgGeogebraCommonKernelGeosGeoVec2D *ret) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  jdouble a, b, c, d, e, f, xx, yy, zz;
  id<OrgGeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<OrgGeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
  xx = [((id<OrgGeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
  yy = [v getY];
  zz = [v getZ];
  a = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 0))) evaluateDouble];
  d = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  e = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  f = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(OrgGeogebraCommonKernelArithmeticMyList_getCellWithOrgGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 1))) evaluateDouble];
  [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk(ret)) setCoordsWithDouble:a * xx + b * yy + c * zz withDouble:d * xx + e * yy + f * zz];
  return;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec)
