//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DLimited.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DLimited.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DPart.h"
#include "org/geogebra/common/geogebra3D/kernel3D/transform/MirrorableAtPlane.h"
#include "org/geogebra/common/kernel/CircularDefinitionException.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/MyDouble.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "org/geogebra/common/plugin/GeoClass.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited () {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *side_;
  OrgGeogebraCommonKernelKernelNDGeoConicND *bottom_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *top_;
  jdouble bottomParameter_, topParameter_;
  OrgGeogebraCommonKernelMatrixCoords *direction_;
  OrgGeogebraCommonKernelMatrixCoords *origin_;
  jdouble radius_;
  jdouble volume_;
  jboolean silentTop_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited, side_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited, bottom_, OrgGeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited, top_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited, direction_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited, origin_, OrgGeogebraCommonKernelMatrixCoords *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (void)setBottomTopWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)bottom2
            withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *)top {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_bottom_(self, bottom2);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_top_(self, top);
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) addMetaWithOrgGeogebraCommonKernelGeosGeoElement:self];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top)) addMetaWithOrgGeogebraCommonKernelGeosGeoElement:self];
}

- (void)setSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *)side {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_side_(self, side);
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side)) setFromMetaWithOrgGeogebraCommonKernelGeosGeoElement:self];
}

- (void)remove {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) removeMetaWithOrgGeogebraCommonKernelGeosGeoElement:self];
  [super remove];
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *)quadric {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(self, quadric);
  return self;
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)getBottom {
  return bottom_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *)getTop {
  return top_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *)getSide {
  return side_;
}

- (void)updatePartsVisualStyle {
  [self setObjColorWithOrgGeogebraCommonAwtGColor:[self getObjectColor]];
  [self setLineThicknessWithInt:[self getLineThickness]];
  [self setAlphaValueWithFloat:[self getAlphaValue]];
  [self setEuclidianVisibleWithBoolean:[self isEuclidianVisible]];
}

- (void)initLabelsIncludingBottomWithNSStringArray:(IOSObjectArray *)labels {
  if ([((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) isSuppressLabelsActive]) {
    return;
  }
  if (labels == nil || labels->size_ == 0) {
    labels = [IOSObjectArray arrayWithLength:1 type:NSString_class_()];
  }
  [self setLabelWithNSString:IOSObjectArray_Get(nil_chk(labels), 0)];
  if (labels->size_ < 3) {
    [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setLabelWithNSString:nil];
    if (!silentTop_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setLabelWithNSString:nil];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setLabelWithNSString:nil];
    return;
  }
  else if (labels->size_ == 3) {
    [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setLabelWithNSString:IOSObjectArray_Get(labels, 1)];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setLabelWithNSString:IOSObjectArray_Get(labels, 2)];
  }
  else {
    [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setLabelWithNSString:IOSObjectArray_Get(labels, 1)];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setLabelWithNSString:IOSObjectArray_Get(labels, 2)];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setLabelWithNSString:IOSObjectArray_Get(labels, 3)];
  }
}

- (void)initLabelsNoBottomWithNSStringArray:(IOSObjectArray *)labels {
  if ([((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) isSuppressLabelsActive]) {
    return;
  }
  if (labels == nil || labels->size_ == 0) {
    labels = [IOSObjectArray arrayWithLength:1 type:NSString_class_()];
  }
  [self setLabelWithNSString:IOSObjectArray_Get(nil_chk(labels), 0)];
  if (labels->size_ < 3) {
    if (!silentTop_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setLabelWithNSString:nil];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setLabelWithNSString:nil];
    return;
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setLabelWithNSString:IOSObjectArray_Get(labels, 1)];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setLabelWithNSString:IOSObjectArray_Get(labels, 2)];
}

- (jdouble)getBottomParameter {
  return bottomParameter_;
}

- (jdouble)getTopParameter {
  return topParameter_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirection {
  return direction_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getOrigin {
  return origin_;
}

- (void)setCylinderWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)origin
                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)direction
                                                withDouble:(jdouble)r
                                                withDouble:(jdouble)bottomParameter
                                                withDouble:(jdouble)topParameter {
  [self setLimitsWithDouble:bottomParameter withDouble:topParameter];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, origin);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, direction);
  self->radius_ = r;
  [self setTypeWithInt:OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CYLINDER];
}

- (void)setLimitsWithDouble:(jdouble)bottomParameter
                 withDouble:(jdouble)topParameter {
  self->bottomParameter_ = bottomParameter;
  self->topParameter_ = topParameter;
}

- (jdouble)getRadius {
  return radius_;
}

- (void)setConeWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)origin
               withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)direction
                                            withDouble:(jdouble)r
                                            withDouble:(jdouble)bottomParameter
                                            withDouble:(jdouble)topParameter {
  [self setLimitsWithDouble:bottomParameter withDouble:topParameter];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, origin);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, direction);
  self->radius_ = r;
  type_ = OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CONE;
}

- (void)setWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)origin
           withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)direction
                                        withDouble:(jdouble)r
                                        withDouble:(jdouble)min
                                        withDouble:(jdouble)max {
  switch (type_) {
    case OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CYLINDER:
    [self setCylinderWithOrgGeogebraCommonKernelMatrixCoords:origin withOrgGeogebraCommonKernelMatrixCoords:direction withDouble:r withDouble:min withDouble:max];
    break;
    case OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CONE:
    [self setConeWithOrgGeogebraCommonKernelMatrixCoords:origin withOrgGeogebraCommonKernelMatrixCoords:direction withDouble:r withDouble:min withDouble:max];
    break;
  }
}

- (void)setObjColorWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color {
  [super setObjColorWithOrgGeogebraCommonAwtGColor:color];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setObjColorWithOrgGeogebraCommonAwtGColor:color];
  if (!silentTop_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setObjColorWithOrgGeogebraCommonAwtGColor:color];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setObjColorWithOrgGeogebraCommonAwtGColor:color];
}

- (void)setTraceWithBoolean:(jboolean)trace {
  [super setTraceWithBoolean:trace];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setTraceWithBoolean:trace];
  if (!silentTop_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setTraceWithBoolean:trace];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setTraceWithBoolean:trace];
}

- (jboolean)isFillable {
  return YES;
}

- (void)setEuclidianVisibleWithBoolean:(jboolean)visible {
  [super setEuclidianVisibleWithBoolean:visible];
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setEuclidianVisibleWithBoolean:visible];
  if (!silentTop_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setEuclidianVisibleWithBoolean:visible];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setEuclidianVisibleWithBoolean:visible];
}

- (void)setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)cond {
  [super setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:cond];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:cond];
  if (!silentTop_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:cond];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:cond];
}

- (void)updateVisualStyle {
  [super updateVisualStyle];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) updateVisualStyle];
  if (!silentTop_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) updateVisualStyle];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) updateVisualStyle];
}

- (void)setLineTypeWithInt:(jint)type {
  [super setLineTypeWithInt:type];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setLineTypeWithInt:type];
  [bottom_ update];
  if (!silentTop_) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setLineTypeWithInt:type];
    [top_ update];
  }
}

- (void)setLineTypeHiddenWithInt:(jint)type {
  [super setLineTypeHiddenWithInt:type];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setLineTypeHiddenWithInt:type];
  [bottom_ update];
  if (!silentTop_) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setLineTypeHiddenWithInt:type];
    [top_ update];
  }
}

- (void)setLineThicknessWithInt:(jint)th {
  [super setLineThicknessWithInt:th];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setLineThicknessWithInt:th];
  [bottom_ update];
  if (!silentTop_) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setLineThicknessWithInt:th];
    [top_ update];
  }
}

- (void)setAlphaValueWithFloat:(jfloat)alpha {
  [super setAlphaValueWithFloat:alpha];
  if (bottom_ == nil) return;
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setAlphaValueWithFloat:alpha];
  [bottom_ updateVisualStyle];
  if (!silentTop_) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setAlphaValueWithFloat:alpha];
    [top_ updateVisualStyle];
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setAlphaValueWithFloat:alpha];
  [side_ updateVisualStyle];
  [((OrgGeogebraCommonKernelKernel *) nil_chk([self getKernel])) notifyRepaint];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)copy__ {
  return [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(self) autorelease];
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return OrgGeogebraCommonPluginGeoClassEnum_get_QUADRIC_LIMITED();
}

- (NSString *)getTypeString {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getQuadricTypeString];
}

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)Geo {
  return NO;
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if ([geo isKindOfClass:[OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited class]]) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *quadric = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) check_class_cast(geo, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited class]);
    bottomParameter_ = ((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk(quadric))->bottomParameter_;
    topParameter_ = quadric->topParameter_;
    volume_ = quadric->volume_;
    [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) setWithOrgGeogebraCommonKernelGeosGeoElement:quadric->bottom_];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) setWithOrgGeogebraCommonKernelGeosGeoElement:quadric->top_];
    silentTop_ = quadric->silentTop_;
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) setWithOrgGeogebraCommonKernelGeosGeoElement:quadric->side_];
    toStringMode_ = quadric->toStringMode_;
    type_ = quadric->type_;
    radius_ = [quadric getRadius];
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
    defined_ = quadric->defined_;
    [super setWithOrgGeogebraCommonKernelGeosGeoElement:geo];
  }
}

- (jboolean)showInAlgebraView {
  return YES;
}

- (jboolean)showInEuclidianView {
  return YES;
}

- (void)calcVolume {
  if (bottom_ == nil) {
    volume_ = JavaLangDouble_NaN;
    return;
  }
  {
    jdouble h;
    jdouble r;
    switch (type_) {
      case OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CYLINDER:
      volume_ = radius_ * radius_ * JavaLangMath_PI * JavaLangMath_absWithDouble_(topParameter_ - bottomParameter_);
      break;
      case OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CONE:
      h = JavaLangMath_absWithDouble_(topParameter_ - bottomParameter_);
      r = radius_ * h;
      volume_ = r * r * JavaLangMath_PI * h / 3;
      break;
    }
  }
}

- (jdouble)getVolume {
  if (defined_) return volume_;
  return JavaLangDouble_NaN;
}

- (jboolean)hasFiniteVolume {
  return YES;
}

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  switch (type_) {
    case OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CYLINDER:
    case OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_CONE:
    return [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:volume_ withOrgGeogebraCommonKernelStringTemplate:tpl];
    case OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_EMPTY:
    return [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) formatWithDouble:0 withOrgGeogebraCommonKernelStringTemplate:tpl];
  }
  return @"todo-GeoQuadric3DLimited";
}

- (JavaLangStringBuilder *)buildValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [new_JavaLangStringBuilder_initWithNSString_([self toValueStringWithOrgGeogebraCommonKernelStringTemplate:tpl]) autorelease];
}

- (void)setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
                 withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
}

- (void)setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
}

- (OrgGeogebraCommonKernelArithmeticMyDouble *)getNumber {
  return [new_OrgGeogebraCommonKernelArithmeticMyDouble_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, [self getDouble]) autorelease];
}

- (jdouble)getDouble {
  return [self getVolume];
}

- (jboolean)isNumberValue {
  return YES;
}

- (void)setSilentTop {
  silentTop_ = YES;
}

- (jdouble)getOrientedHeight {
  return topParameter_ - bottomParameter_;
}

- (jboolean)isGeoElement3D {
  return YES;
}

- (void)setColorVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [self setObjColorWithOrgGeogebraCommonAwtGColor:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getObjectColor]];
  [self setAlphaValueWithFloat:[geo getAlphaValue]];
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoPointND:S];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoPointND:S];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoPointND:S];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S
             withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) check_class_cast(bottom_, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D class])))) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoPointND:S withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoPointND:S withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoPointND:S withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                  withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) check_class_cast(bottom_, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D class])))) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoLineND:line];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoLineND:line];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:r withOrgGeogebraCommonKernelKernelNDGeoLineND:line];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (jboolean)isTranslateable {
  return YES;
}

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) translateWithOrgGeogebraCommonKernelMatrixCoords:v];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) translateWithOrgGeogebraCommonKernelMatrixCoords:v];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) translateWithOrgGeogebraCommonKernelMatrixCoords:v];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) mirrorWithOrgGeogebraCommonKernelMatrixCoords:Q];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) mirrorWithOrgGeogebraCommonKernelMatrixCoords:Q];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) mirrorWithOrgGeogebraCommonKernelMatrixCoords:Q];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:g];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:g];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:g];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane {
  [((id<OrgGeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane>) nil_chk(((id<OrgGeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane>) check_protocol_cast(bottom_, @protocol(OrgGeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane))))) mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:plane];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:plane];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:plane];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)rval
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)S {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(bottom_)) dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:rval withOrgGeogebraCommonKernelMatrixCoords:S];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk(top_)) dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:rval withOrgGeogebraCommonKernelMatrixCoords:S];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:rval withOrgGeogebraCommonKernelMatrixCoords:S];
  jdouble r = JavaLangMath_absWithDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(rval)) getDouble]);
  volume_ *= r * r * r;
  bottomParameter_ *= r;
  topParameter_ *= r;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_origin_(self, [side_ getMidpoint3D]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_set_direction_(self, [side_ getEigenvec3DWithInt:2]);
}

- (void)singlePoint {
  type_ = OrgGeogebraCommonKernelKernelNDGeoQuadricNDConstants_QUADRIC_SINGLE_POINT;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMidpoint2D {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getMidpoint2D];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMidpoint {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getMidpoint];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMidpoint3D {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getMidpoint3D];
}

- (OrgGeogebraCommonKernelMatrixCoordMatrix *)getSymetricMatrix {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getSymetricMatrix];
}

- (jdouble)getHalfAxisWithInt:(jint)i {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getHalfAxisWithInt:i];
}

- (jint)getDimension {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getDimension];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getEigenvec3DWithInt:(jint)i {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getEigenvec3DWithInt:i];
}

- (IOSDoubleArray *)getFlatMatrix {
  return [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(side_)) getFlatMatrix];
}

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType {
  return OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum_get_ON_FILLING();
}

- (void)dealloc {
  RELEASE_(side_);
  RELEASE_(bottom_);
  RELEASE_(top_);
  RELEASE_(direction_);
  RELEASE_(origin_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoQuadric3DLimited", NULL, 0x1, NULL, NULL },
    { "setBottomTopWithOrgGeogebraCommonKernelKernelNDGeoConicND:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D:", "setBottomTop", "V", 0x1, NULL, NULL },
    { "setSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart:", "setSide", "V", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited:", "GeoQuadric3DLimited", NULL, 0x1, NULL, NULL },
    { "getBottom", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x1, NULL, NULL },
    { "getTop", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoConic3D;", 0x1, NULL, NULL },
    { "getSide", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3DPart;", 0x1, NULL, NULL },
    { "updatePartsVisualStyle", NULL, "V", 0x1, NULL, NULL },
    { "initLabelsIncludingBottomWithNSStringArray:", "initLabelsIncludingBottom", "V", 0x1, NULL, NULL },
    { "initLabelsNoBottomWithNSStringArray:", "initLabelsNoBottom", "V", 0x1, NULL, NULL },
    { "getBottomParameter", NULL, "D", 0x1, NULL, NULL },
    { "getTopParameter", NULL, "D", 0x1, NULL, NULL },
    { "getDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getOrigin", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "setCylinderWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:", "setCylinder", "V", 0x1, NULL, NULL },
    { "setLimitsWithDouble:withDouble:", "setLimits", "V", 0x1, NULL, NULL },
    { "getRadius", NULL, "D", 0x1, NULL, NULL },
    { "setConeWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:", "setCone", "V", 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:", "set", "V", 0x1, NULL, NULL },
    { "setObjColorWithOrgGeogebraCommonAwtGColor:", "setObjColor", "V", 0x1, NULL, NULL },
    { "setTraceWithBoolean:", "setTrace", "V", 0x1, NULL, NULL },
    { "isFillable", NULL, "Z", 0x1, NULL, NULL },
    { "setEuclidianVisibleWithBoolean:", "setEuclidianVisible", "V", 0x1, NULL, NULL },
    { "setShowObjectConditionWithOrgGeogebraCommonKernelGeosGeoBoolean:", "setShowObjectCondition", "V", 0x1, "Lorg.geogebra.common.kernel.CircularDefinitionException;", NULL },
    { "updateVisualStyle", NULL, "V", 0x1, NULL, NULL },
    { "setLineTypeWithInt:", "setLineType", "V", 0x1, NULL, NULL },
    { "setLineTypeHiddenWithInt:", "setLineTypeHidden", "V", 0x1, NULL, NULL },
    { "setLineThicknessWithInt:", "setLineThickness", "V", 0x1, NULL, NULL },
    { "setAlphaValueWithFloat:", "setAlphaValue", "V", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getGeoClassType", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "getTypeString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEqualWithOrgGeogebraCommonKernelGeosGeoElement:", "isEqual", "Z", 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "showInAlgebraView", NULL, "Z", 0x1, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x4, NULL, NULL },
    { "calcVolume", NULL, "V", 0x1, NULL, NULL },
    { "getVolume", NULL, "D", 0x1, NULL, NULL },
    { "hasFiniteVolume", NULL, "Z", 0x1, NULL, NULL },
    { "toValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "buildValueStringWithOrgGeogebraCommonKernelStringTemplate:", "buildValueString", "Ljava.lang.StringBuilder;", 0x4, NULL, NULL },
    { "setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "setSphereND", "V", 0x1, NULL, NULL },
    { "setSphereNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "setSphereND", "V", 0x1, NULL, NULL },
    { "getNumber", NULL, "Lorg.geogebra.common.kernel.arithmetic.MyDouble;", 0x1, NULL, NULL },
    { "getDouble", NULL, "D", 0x1, NULL, NULL },
    { "isNumberValue", NULL, "Z", 0x1, NULL, NULL },
    { "setSilentTop", NULL, "V", 0x1, NULL, NULL },
    { "getOrientedHeight", NULL, "D", 0x1, NULL, NULL },
    { "isGeoElement3D", NULL, "Z", 0x1, NULL, NULL },
    { "setColorVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:", "setColorVisualStyle", "V", 0x4, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "rotate", "V", 0x1, NULL, NULL },
    { "isTranslateable", NULL, "Z", 0x11, NULL, NULL },
    { "translateWithOrgGeogebraCommonKernelMatrixCoords:", "translate", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "mirror", "V", 0x1, NULL, NULL },
    { "dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:", "dilate", "V", 0x1, NULL, NULL },
    { "singlePoint", NULL, "V", 0x14, NULL, NULL },
    { "getMidpoint2D", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getMidpoint", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getMidpoint3D", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getSymetricMatrix", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix;", 0x1, NULL, NULL },
    { "getHalfAxisWithInt:", "getHalfAxis", "D", 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "getEigenvec3DWithInt:", "getEigenvec3D", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getFlatMatrix", NULL, "[D", 0x1, NULL, NULL },
    { "getLastHitType", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement$HitType;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "side_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3DPart;", NULL, NULL,  },
    { "bottom_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
    { "top_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoConic3D;", NULL, NULL,  },
    { "bottomParameter_", NULL, 0x2, "D", NULL, NULL,  },
    { "topParameter_", NULL, 0x2, "D", NULL, NULL,  },
    { "direction_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "origin_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "radius_", NULL, 0x2, "D", NULL, NULL,  },
    { "volume_", NULL, 0x2, "D", NULL, NULL,  },
    { "silentTop_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited = { 2, "GeoQuadric3DLimited", "org.geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x1, 71, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *self, OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonKernelKernelNDGeoQuadricND_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->silentTop_ = NO;
  [self setConstructionDefaults];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *quadric) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonKernelConstruction_(self, [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk(quadric)) getConstruction]);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_setAndConsume_bottom_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_initWithOrgGeogebraCommonKernelConstruction_([quadric getConstruction]));
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_setAndConsume_top_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_initWithOrgGeogebraCommonKernelConstruction_([quadric getConstruction]));
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_setAndConsume_side_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart_initWithOrgGeogebraCommonKernelConstruction_([quadric getConstruction]));
  [self setWithOrgGeogebraCommonKernelGeosGeoElement:quadric];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *quadric) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(self, quadric);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited)
