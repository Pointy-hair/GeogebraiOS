//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrixUtil.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D () {
 @public
  jboolean isIntersection__;
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *tmpMatrix4x4_;
  jboolean trace_;
  OrgGeogebraCommonKernelMatrixCoords *tmpCoords1_, *tmpCoords2_;
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o1
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vn;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, tmpMatrix4x4_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, tmpCoords1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, tmpCoords2_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> phiValue, OrgGeogebraCommonKernelMatrixCoords *o1, OrgGeogebraCommonKernelMatrixCoords *vn);

@implementation OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                withBoolean:(jboolean)isIntersection {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, c, isIntersection);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)O
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)V {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, c, O, V);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)O
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)I {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, O, I);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)O
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)I
                                                withBoolean:(jboolean)isIntersection {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(self, c, O, I, isIntersection);
  return self;
}

- (jboolean)isDefined {
  return [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) isDefined];
}

- (void)setUndefined {
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) setUndefined];
}

- (void)setCoordFromPointsWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)a_O
                          withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)a_I {
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:a_O withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(a_I)) subWithOrgGeogebraCommonKernelMatrixCoords:a_O]];
}

- (void)setCoordWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) resetCoordSys];
  [coordsys_ addPointWithOrgGeogebraCommonKernelMatrixCoords:o];
  [coordsys_ addVectorWithOrgGeogebraCommonKernelMatrixCoords:v];
  [coordsys_ makeOrthoMatrixWithBoolean:NO withBoolean:NO];
}

- (void)setLineThroughWithDouble:(jdouble)pointX
                      withDouble:(jdouble)pointY {
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:[new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(pointX, pointY, 0, 1) autorelease] withOrgGeogebraCommonKernelMatrixCoords:[self getDirectionInD3]];
}

- (void)setCoordWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)O
                withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)I {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_startPoint_(self, O);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_endPoint_(self, I);
  if ((O == nil) || (I == nil)) return;
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(I)) isInfinite]) if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(O)) isInfinite]) [self setUndefined];
  else [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:[O getInhomCoordsInD3] withOrgGeogebraCommonKernelMatrixCoords:[I getCoordsInD3]];
  else if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(O)) isInfinite]) [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:[I getInhomCoordsInD3] withOrgGeogebraCommonKernelMatrixCoords:[O getCoordsInD3]];
  else [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:[O getInhomCoordsInD3] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([I getInhomCoordsInD3])) subWithOrgGeogebraCommonKernelMatrixCoords:[O getInhomCoordsInD3]]];
}

- (void)setCoordWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)geo {
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(geo)) getCoordSys])) getOrigin] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([geo getCoordSys])) getVx]];
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if ([geo isKindOfClass:[OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D class]]) {
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefined]) [self setUndefined];
    else [self setCoordWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) check_class_cast(geo, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D class])];
  }
  else if ([OrgGeogebraCommonKernelKernelNDGeoLineND_class_() isInstance:geo]) {
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefined]) [self setUndefined];
    else {
      [self setCoordWithOrgGeogebraCommonKernelKernelNDGeoPointND:[((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND))) getStartPoint] withOrgGeogebraCommonKernelKernelNDGeoPointND:[((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND))) getEndPoint]];
    }
  }
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)createWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)copy__ {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *geo = [self createWithOrgGeogebraCommonKernelConstruction:cons_];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *) nil_chk(geo)) setCoordWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D:self];
  return geo;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPointWithDouble:(jdouble)lambda {
  return [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) getPointWithDouble:lambda];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPointInDWithInt:(jint)dimension
                                                 withDouble:(jdouble)lambda {
  OrgGeogebraCommonKernelMatrixCoords *v = [self getPointWithDouble:lambda];
  switch (dimension) {
    case 3:
    return v;
    case 2:
    return [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) getX], [v getY], [v getW]) autorelease];
    default:
    return nil;
  }
}

- (jdouble)getUnit {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx])) norm];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMainDirection {
  return [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getMatrixOrthonormal])) getVx];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirectionForEquation {
  return [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx];
}

- (jboolean)isPath {
  return YES;
}

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  jdouble t = [self getParamOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:P];
  if (t < [self getMinParameter]) t = [self getMinParameter];
  else if (t > [self getMaxParameter]) t = [self getMaxParameter];
  OrgGeogebraCommonKernelPathParameter *pp = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) getPathParameter];
  [((OrgGeogebraCommonKernelPathParameter *) nil_chk(pp)) setTWithDouble:t];
  [P setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[self getPointWithDouble:t] withBoolean:NO];
}

- (jdouble)getParamOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  jboolean done = NO;
  jdouble t = 0;
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    if ([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(P, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) hasWillingCoords]) {
      if ([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(P, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) hasWillingDirection]) {
        if (tmpCoords1_ == nil) {
          OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpCoords1_(self, OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3());
        }
        t = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(P, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) getWillingCoords])) projectedParameterOnLineWithDirectionWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) getOrigin] withOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getVx] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(P, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) getWillingDirection] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
        done = YES;
      }
      else {
        OrgGeogebraCommonKernelMatrixCoords *preDirection = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(P, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) getWillingCoords])) subWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) getOrigin]])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getVx]];
        if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(preDirection)) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) preDirection = [coordsys_ getVy];
        if (tmpCoords1_ == nil) {
          OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpCoords1_(self, OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3());
        }
        t = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(P, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) getWillingCoords])) projectedParameterOnLineWithDirectionWithOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getOrigin] withOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getVx] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(preDirection)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getVx]] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
        done = YES;
      }
    }
  }
  if (!done) {
    OrgGeogebraCommonKernelMatrixCoords *preDirection = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) getInhomCoordsInD3])) subWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) getOrigin]])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getVx]];
    if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(preDirection)) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) preDirection = [coordsys_ getVy];
    if (tmpCoords1_ == nil) {
      OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpCoords1_(self, OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3());
    }
    t = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([P getInhomCoordsInD3])) projectedParameterOnLineWithDirectionWithOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getOrigin] withOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getVx] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(preDirection)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:[coordsys_ getVx]] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  }
  return t;
}

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  if (![((OrgGeogebraCommonKernelKernel *) nil_chk([self getKernel])) usePathAndRegionParametersWithOrgGeogebraCommonKernelKernelNDGeoPointND:P]) {
    [self pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:P];
    return;
  }
  OrgGeogebraCommonKernelPathParameter *pp = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) getPathParameter];
  [P setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[self getPointWithDouble:[((OrgGeogebraCommonKernelPathParameter *) nil_chk(pp)) getT]] withBoolean:NO];
}

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(PI)) getPath] == self) return YES;
  return [self isOnPathWithOrgGeogebraCommonKernelMatrixCoords:[PI getCoordsInD3] withDouble:eps];
}

- (jboolean)isOnPathWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords
                                                 withDouble:(jdouble)eps {
  return [self isOnFullLineWithOrgGeogebraCommonKernelMatrixCoords:coords withDouble:eps];
}

- (jboolean)isOnFullLineWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p
                                                     withDouble:(jdouble)eps {
  OrgGeogebraCommonKernelMatrixCoords *cross;
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(p)) getW])) {
    cross = [p crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getDirectionInD3]];
    return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(cross)) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_MIN_PRECISION];
  }
  OrgGeogebraCommonKernelMatrixCoords *d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getDirectionInD3])) normalized];
  OrgGeogebraCommonKernelMatrixCoords *v = [p subWithOrgGeogebraCommonKernelMatrixCoords:[self getStartInhomCoords]];
  OrgGeogebraCommonKernelMatrixCoords *n = [v subWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) mulWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:d]]];
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:n] < eps * eps;
}

- (jboolean)respectLimitedPathWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords
                                                           withDouble:(jdouble)eps {
  return YES;
}

- (jboolean)isValidCoordWithDouble:(jdouble)x {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  [super getXMLtagsWithJavaLangStringBuilder:sb];
  [self getLineStyleXMLWithJavaLangStringBuilder:sb];
}

- (OrgGeogebraCommonKernelMatrixCoordSys *)getCoordSys {
  return coordsys_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getLabelPosition {
  return [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys_)) getPointWithDouble:0.5];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getCartesianEquationVectorWithOrgGeogebraCommonKernelMatrixCoordMatrix:(OrgGeogebraCommonKernelMatrixCoordMatrix *)m {
  if (m == nil) {
    return OrgGeogebraCommonKernelMatrixCoordMatrixUtil_lineEquationVectorWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin], [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx]);
  }
  return OrgGeogebraCommonKernelMatrixCoordMatrixUtil_lineEquationVectorWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoordMatrix_([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin], [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx], m);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getStartInhomCoords {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin])) getInhomCoordsInSameDimension];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getEndInhomCoords {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getPointWithDouble:1])) getInhomCoordsInSameDimension];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirectionInD3 {
  return [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getStartPoint {
  return startPoint_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getEndPoint {
  return endPoint_;
}

- (jboolean)isIntersection {
  return isIntersection__;
}

- (jboolean)isTranslateable {
  return YES;
}

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) addInsideWithOrgGeogebraCommonKernelMatrixCoords:v];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:o withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx]];
}

- (JavaUtilArrayList *)getPointsOnLine {
  return pointsOnLine_;
}

- (void)setPointsOnLineWithJavaUtilArrayList:(JavaUtilArrayList *)points {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_pointsOnLine_(self, points);
}

- (void)addPointOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p {
  if (pointsOnLine_ == nil) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_setAndConsume_pointsOnLine_(self, new_JavaUtilArrayList_init());
  if (![((JavaUtilArrayList *) nil_chk(pointsOnLine_)) containsWithId:p]) [pointsOnLine_ addWithId:p];
}

- (jdouble)distanceWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g {
  jdouble dist;
  OrgGeogebraCommonKernelMatrixCoords *cVector = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getDirectionInD3])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g)) getDirectionInD3]];
  OrgGeogebraCommonKernelMatrixCoords *diffPoints = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension])) subWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([g getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension]];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(cVector)) isZero]) {
    OrgGeogebraCommonKernelMatrixCoords *n = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(diffPoints)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getDirectionInD3]])) crossProductWithOrgGeogebraCommonKernelMatrixCoords:[self getDirectionInD3]];
    dist = JavaLangMath_absWithDouble_([diffPoints dotproductWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(n)) normalize]]);
  }
  else {
    dist = JavaLangMath_absWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(diffPoints)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:[cVector normalize]]);
  }
  return dist;
}

- (void)setToImplicit {
}

- (void)setToExplicit {
}

- (void)setToParametricWithNSString:(NSString *)parameter {
}

- (jboolean)isMatrixTransformable {
  return YES;
}

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11 {
  if (tmpMatrix4x4_ == nil) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpMatrix4x4_(self, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity());
  }
  else {
    [tmpMatrix4x4_ setWithInt:1 withInt:3 withDouble:0];
    [tmpMatrix4x4_ setWithInt:1 withInt:4 withDouble:0];
    [tmpMatrix4x4_ setWithInt:2 withInt:3 withDouble:0];
    [tmpMatrix4x4_ setWithInt:2 withInt:4 withDouble:0];
    [tmpMatrix4x4_ setWithInt:3 withInt:1 withDouble:0];
    [tmpMatrix4x4_ setWithInt:3 withInt:2 withDouble:0];
    [tmpMatrix4x4_ setWithInt:3 withInt:3 withDouble:0];
    [tmpMatrix4x4_ setWithInt:3 withInt:4 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:1 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:2 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:3 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:4 withDouble:1];
  }
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(tmpMatrix4x4_)) setWithInt:1 withInt:1 withDouble:a00];
  [tmpMatrix4x4_ setWithInt:1 withInt:2 withDouble:a01];
  [tmpMatrix4x4_ setWithInt:2 withInt:1 withDouble:a10];
  [tmpMatrix4x4_ setWithInt:2 withInt:2 withDouble:a11];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:[tmpMatrix4x4_ mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin]] withOrgGeogebraCommonKernelMatrixCoords:[tmpMatrix4x4_ mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx]]];
}

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22 {
  if (tmpMatrix4x4_ == nil) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpMatrix4x4_(self, OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity());
  }
  else {
    [tmpMatrix4x4_ setWithInt:1 withInt:4 withDouble:0];
    [tmpMatrix4x4_ setWithInt:2 withInt:4 withDouble:0];
    [tmpMatrix4x4_ setWithInt:3 withInt:4 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:1 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:2 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:3 withDouble:0];
    [tmpMatrix4x4_ setWithInt:4 withInt:4 withDouble:1];
  }
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(tmpMatrix4x4_)) setWithInt:1 withInt:1 withDouble:a00];
  [tmpMatrix4x4_ setWithInt:1 withInt:2 withDouble:a01];
  [tmpMatrix4x4_ setWithInt:1 withInt:3 withDouble:a02];
  [tmpMatrix4x4_ setWithInt:2 withInt:1 withDouble:a10];
  [tmpMatrix4x4_ setWithInt:2 withInt:2 withDouble:a11];
  [tmpMatrix4x4_ setWithInt:2 withInt:3 withDouble:a12];
  [tmpMatrix4x4_ setWithInt:3 withInt:1 withDouble:a20];
  [tmpMatrix4x4_ setWithInt:3 withInt:2 withDouble:a21];
  [tmpMatrix4x4_ setWithInt:3 withInt:3 withDouble:a22];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:[tmpMatrix4x4_ mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin]] withOrgGeogebraCommonKernelMatrixCoords:[tmpMatrix4x4_ mulWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx]]];
}

- (jboolean)isTraceable {
  return YES;
}

- (void)setTraceWithBoolean:(jboolean)trace {
  self->trace_ = trace;
}

- (jboolean)getTrace {
  return trace_;
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue {
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin];
  jdouble z = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) getZ];
  OrgGeogebraCommonKernelMatrixCoords *v = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx];
  jdouble vz = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) getZ];
  jdouble phi = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(phiValue)) getDouble];
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble x = [o getX];
  jdouble y = [o getY];
  jdouble w = [o getW];
  OrgGeogebraCommonKernelMatrixCoords *oRot = [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(x * cos - y * sin, x * sin + y * cos, z, w) autorelease];
  jdouble vx = [v getX];
  jdouble vy = [v getY];
  jdouble vw = [v getW];
  OrgGeogebraCommonKernelMatrixCoords *vRot = [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(vx * cos - vy * sin, vx * sin + vy * cos, vz, vw) autorelease];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:oRot withOrgGeogebraCommonKernelMatrixCoords:vRot];
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin];
  jdouble z = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) getZ];
  OrgGeogebraCommonKernelMatrixCoords *v = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx];
  jdouble vz = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) getZ];
  jdouble phi = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(phiValue)) getDouble];
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble x = [o getX];
  jdouble y = [o getY];
  jdouble w = [o getW];
  OrgGeogebraCommonKernelMatrixCoords *Q = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getInhomCoords];
  jdouble qx = w * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Q)) getX];
  jdouble qy = w * [Q getY];
  OrgGeogebraCommonKernelMatrixCoords *oRot = [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_((x - qx) * cos + (qy - y) * sin + qx, (x - qx) * sin + (y - qy) * cos + qy, z, w) autorelease];
  jdouble vx = [v getX];
  jdouble vy = [v getY];
  jdouble vw = [v getW];
  OrgGeogebraCommonKernelMatrixCoords *vRot = [new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(vx * cos - vy * sin, vx * sin + vy * cos, vz, vw) autorelease];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:oRot withOrgGeogebraCommonKernelMatrixCoords:vRot];
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o1
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vn {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, phiValue, o1, vn);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S
             withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(S)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *vn = [((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation)) getDirectionInD3];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, phiValue, o1, vn);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                  withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getStartInhomCoords];
  OrgGeogebraCommonKernelMatrixCoords *vn = [line getDirectionInD3];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, phiValue, o1, vn);
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q {
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin])) mulWithDouble:-1];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) addInsideWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Q)) mulWithDouble:2]];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:o withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx])) mulWithDouble:-1]];
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getStartInhomCoords];
  OrgGeogebraCommonKernelMatrixCoords *vn = [line getDirectionInD3];
  OrgGeogebraCommonKernelMatrixCoords *point = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin];
  if (tmpCoords1_ == nil) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpCoords1_(self, OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3());
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) projectLineWithOrgGeogebraCommonKernelMatrixCoords:o1 withOrgGeogebraCommonKernelMatrixCoords:vn withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_ withDoubleArray:nil];
  point = [point mulWithDouble:-1];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) addInsideWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) mulWithDouble:2]];
  jdouble l = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) getNorm];
  OrgGeogebraCommonKernelMatrixCoords *v = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:point withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([vn mulWithDouble:2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn] / (l * l)])) addWithOrgGeogebraCommonKernelMatrixCoords:[v mulWithDouble:-1]]];
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane {
  OrgGeogebraCommonKernelMatrixCoords *point = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin];
  if (tmpCoords1_ == nil) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpCoords1_(self, OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3());
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(plane)) getCoordSys])) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  [point mulInsideWithDouble:-1];
  [point addInsideWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) mulInsideWithDouble:2]];
  OrgGeogebraCommonKernelMatrixCoords *vn = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([plane getDirectionInD3])) normalized];
  OrgGeogebraCommonKernelMatrixCoords *v = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx];
  if (tmpCoords2_ == nil) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_setAndConsume_tmpCoords2_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  }
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:point withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords1_ setAddWithOrgGeogebraCommonKernelMatrixCoords:v withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:vn withDouble:-2 * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn]]]];
}

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)rval
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)S {
  jdouble r = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(rval)) getDouble];
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin])) mulWithDouble:r];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) addInsideWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(S)) mulWithDouble:1 - r]];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:o withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx])) mulWithDouble:r]];
}

- (void)dealloc {
  RELEASE_(coordsys_);
  RELEASE_(startPoint_);
  RELEASE_(endPoint_);
  RELEASE_(pointsOnLine_);
  RELEASE_(tmpMatrix4x4_);
  RELEASE_(tmpCoords1_);
  RELEASE_(tmpCoords2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withBoolean:", "GeoCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "GeoCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "GeoCoordSys1D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withBoolean:", "GeoCoordSys1D", NULL, 0x1, NULL, NULL },
    { "isDefined", NULL, "Z", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x1, NULL, NULL },
    { "setCoordFromPointsWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "setCoordFromPoints", "V", 0x1, NULL, NULL },
    { "setCoordWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "setCoord", "V", 0x1, NULL, NULL },
    { "setLineThroughWithDouble:withDouble:", "setLineThrough", "V", 0x11, NULL, NULL },
    { "setCoordWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "setCoord", "V", 0x1, NULL, NULL },
    { "setCoordWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D:", "setCoord", "V", 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "createWithOrgGeogebraCommonKernelConstruction:", "create", "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoCoordSys1D;", 0x404, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoCoordSys1D;", 0x11, NULL, NULL },
    { "getPointWithDouble:", "getPoint", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getPointInDWithInt:withDouble:", "getPointInD", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getUnit", NULL, "D", 0x1, NULL, NULL },
    { "getMainDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getDirectionForEquation", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "isPath", NULL, "Z", 0x1, NULL, NULL },
    { "pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pointChanged", "V", 0x1, NULL, NULL },
    { "getParamOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "getParamOnLine", "D", 0x1, NULL, NULL },
    { "pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pathChanged", "V", 0x1, NULL, NULL },
    { "isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:withDouble:", "isOnPath", "Z", 0x1, NULL, NULL },
    { "isOnPathWithOrgGeogebraCommonKernelMatrixCoords:withDouble:", "isOnPath", "Z", 0x1, NULL, NULL },
    { "isOnFullLineWithOrgGeogebraCommonKernelMatrixCoords:withDouble:", "isOnFullLine", "Z", 0x1, NULL, NULL },
    { "respectLimitedPathWithOrgGeogebraCommonKernelMatrixCoords:withDouble:", "respectLimitedPath", "Z", 0x1, NULL, NULL },
    { "isValidCoordWithDouble:", "isValidCoord", "Z", 0x401, NULL, NULL },
    { "getXMLtagsWithJavaLangStringBuilder:", "getXMLtags", "V", 0x4, NULL, NULL },
    { "getCoordSys", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordSys;", 0x1, NULL, NULL },
    { "getLabelPosition", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCartesianEquationVectorWithOrgGeogebraCommonKernelMatrixCoordMatrix:", "getCartesianEquationVector", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getStartInhomCoords", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getEndInhomCoords", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getDirectionInD3", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getStartPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getEndPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "isIntersection", NULL, "Z", 0x1, NULL, NULL },
    { "isTranslateable", NULL, "Z", 0x11, NULL, NULL },
    { "translateWithOrgGeogebraCommonKernelMatrixCoords:", "translate", "V", 0x11, NULL, NULL },
    { "getPointsOnLine", NULL, "Ljava.util.ArrayList;", 0x11, NULL, NULL },
    { "setPointsOnLineWithJavaUtilArrayList:", "setPointsOnLine", "V", 0x11, NULL, NULL },
    { "addPointOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "addPointOnLine", "V", 0x11, NULL, NULL },
    { "distanceWithOrgGeogebraCommonKernelKernelNDGeoLineND:", "distance", "D", 0x11, NULL, NULL },
    { "setToImplicit", NULL, "V", 0x1, NULL, NULL },
    { "setToExplicit", NULL, "V", 0x1, NULL, NULL },
    { "setToParametricWithNSString:", "setToParametric", "V", 0x1, NULL, NULL },
    { "isMatrixTransformable", NULL, "Z", 0x1, NULL, NULL },
    { "matrixTransformWithDouble:withDouble:withDouble:withDouble:", "matrixTransform", "V", 0x1, NULL, NULL },
    { "matrixTransformWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "matrixTransform", "V", 0x1, NULL, NULL },
    { "isTraceable", NULL, "Z", 0x1, NULL, NULL },
    { "setTraceWithBoolean:", "setTrace", "V", 0x1, NULL, NULL },
    { "getTrace", NULL, "Z", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotate", "V", 0x11, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x12, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "rotate", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "mirror", "V", 0x1, NULL, NULL },
    { "dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:", "dilate", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coordsys_", NULL, 0x4, "Lorg.geogebra.common.kernel.Matrix.CoordSys;", NULL, NULL,  },
    { "startPoint_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "endPoint_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "isIntersection__", "isIntersection", 0x2, "Z", NULL, NULL,  },
    { "pointsOnLine_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/kernelND/GeoPointND;>;",  },
    { "tmpMatrix4x4_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", NULL, NULL,  },
    { "trace_", NULL, 0x2, "Z", NULL, NULL,  },
    { "tmpCoords1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D = { 2, "GeoCoordSys1D", "org.geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x401, 63, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, c, NO);
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, jboolean isIntersection) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->isIntersection__ = isIntersection;
  [self setConstructionDefaults];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_setAndConsume_coordsys_(self, new_OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(1));
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelMatrixCoords *O, OrgGeogebraCommonKernelMatrixCoords *V) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:O withOrgGeogebraCommonKernelMatrixCoords:V];
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelKernelNDGeoPointND> O, id<OrgGeogebraCommonKernelKernelNDGeoPointND> I) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(self, c, O, I, NO);
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelKernelNDGeoPointND> O, id<OrgGeogebraCommonKernelKernelNDGeoPointND> I, jboolean isIntersection) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, c, isIntersection);
  [self setCoordWithOrgGeogebraCommonKernelKernelNDGeoPointND:O withOrgGeogebraCommonKernelKernelNDGeoPointND:I];
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> phiValue, OrgGeogebraCommonKernelMatrixCoords *o1, OrgGeogebraCommonKernelMatrixCoords *vn) {
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) isZero]) {
    [self setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoords *vn2 = [vn normalized];
  OrgGeogebraCommonKernelMatrixCoords *point = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getOrigin];
  if (self->tmpCoords1_ == nil) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_set_tmpCoords1_(self, OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3());
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) projectLineWithOrgGeogebraCommonKernelMatrixCoords:o1 withOrgGeogebraCommonKernelMatrixCoords:vn withOrgGeogebraCommonKernelMatrixCoords:self->tmpCoords1_ withDoubleArray:nil];
  OrgGeogebraCommonKernelMatrixCoords *v1 = [point subWithOrgGeogebraCommonKernelMatrixCoords:self->tmpCoords1_];
  OrgGeogebraCommonKernelMatrixCoords *v = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self getCoordSys])) getVx];
  jdouble phi = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(phiValue)) getDouble];
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  OrgGeogebraCommonKernelMatrixCoords *v2 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn2)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:v1];
  OrgGeogebraCommonKernelMatrixCoords *oRot = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->tmpCoords1_)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) mulWithDouble:cos]])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) mulWithDouble:sin]];
  v2 = [vn2 crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:v];
  v1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:vn2];
  OrgGeogebraCommonKernelMatrixCoords *vRot = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) mulWithDouble:cos])) addWithOrgGeogebraCommonKernelMatrixCoords:[v2 mulWithDouble:sin]])) addWithOrgGeogebraCommonKernelMatrixCoords:[vn2 mulWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn2]]];
  [self setCoordWithOrgGeogebraCommonKernelMatrixCoords:oRot withOrgGeogebraCommonKernelMatrixCoords:vRot];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D)
