//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/Geo3DVec.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoVec.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoVec4D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/LocateableList.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/PathMover.h"
#include "org/geogebra/common/kernel/PathNormalizer.h"
#include "org/geogebra/common/kernel/PathOrPoint.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/Region.h"
#include "org/geogebra/common/kernel/RegionParameters.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/MyStringBuffer.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/kernel/geos/GeoVec3D.h"
#include "org/geogebra/common/kernel/geos/PointProperties.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/Region3D.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/plugin/GeoClass.h"
#include "org/geogebra/common/plugin/Operation.h"
#include "org/geogebra/common/util/StringUtil.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D () {
 @public
  jboolean isInfinite__, isDefined__;
  jint pointSize_;
  OrgGeogebraCommonKernelMatrixCoords *willingCoords_;
  OrgGeogebraCommonKernelMatrixCoords *willingDirection_;
  id<OrgGeogebraCommonKernelPath> path_;
  OrgGeogebraCommonKernelPathParameter *pp_;
  id<OrgGeogebraCommonKernelRegion> region_;
  OrgGeogebraCommonKernelRegionParameters *regionParameters_;
  jdouble x2D_;
  jdouble y2D_;
  jdouble z2D_;
  OrgGeogebraCommonKernelLocateableList *locateableList_;
  OrgGeogebraCommonKernelMatrixCoords *inhom2D_;
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *tmpMatrix4x4_;
  OrgGeogebraCommonKernelMatrixCoords *tmpCoordsLength3_;
  OrgGeogebraCommonKernelMatrixCoords *moveNormalDirection_;
  jboolean showUndefinedInAlgebraView__;
  jboolean setEuclidianVisibleBySetParentAlgorithm_;
  OrgGeogebraCommonKernelMatrixCoords *tmpCoords1_, *tmpCoords2_, *tmpCoords3_;
  OrgGeogebraCommonKernelMatrixCoords *tmpWillingCoords_, *tmpWillingDirection_;
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *m_drawingMatrix_;
  jboolean trace_;
  JavaUtilArrayList *incidenceList_;
  JavaUtilArrayList *nonIncidenceList_;
  jdouble animationValue_;
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o1
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vn;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, willingCoords_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, willingDirection_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, path_, id<OrgGeogebraCommonKernelPath>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, pp_, OrgGeogebraCommonKernelPathParameter *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, region_, id<OrgGeogebraCommonKernelRegion>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, regionParameters_, OrgGeogebraCommonKernelRegionParameters *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, locateableList_, OrgGeogebraCommonKernelLocateableList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, inhom2D_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tmpMatrix4x4_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tmpCoordsLength3_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, moveNormalDirection_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tmpCoords1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tmpCoords2_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tmpCoords3_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tmpWillingCoords_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tmpWillingDirection_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, m_drawingMatrix_, OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, incidenceList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, nonIncidenceList_, JavaUtilArrayList *)

static JavaUtilTreeSet *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_tempSet_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tempSet_, JavaUtilTreeSet *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D, tempSet_, JavaUtilTreeSet *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, OrgGeogebraCommonKernelMatrixCoords *v);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, jdouble x, jdouble y, jdouble z, jdouble w);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self);

__attribute__((unused)) static OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isPointOnPath(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self);

__attribute__((unused)) static OrgGeogebraCommonKernelPathParameter *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getPathParameter(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_hasRegion(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self);

__attribute__((unused)) static OrgGeogebraCommonKernelRegionParameters *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getRegionParameters(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self);

__attribute__((unused)) static jboolean OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isAbsoluteStartPoint(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> phiValue, OrgGeogebraCommonKernelMatrixCoords *point);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> phiValue, OrgGeogebraCommonKernelMatrixCoords *o1, OrgGeogebraCommonKernelMatrixCoords *vn);

@implementation OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
                                                 withDouble:(jdouble)x
                                                 withDouble:(jdouble)y
                                                 withDouble:(jdouble)z
                                                 withDouble:(jdouble)w {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_withDouble_(self, c, label, x, y, z, w);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelMatrixCoords_(self, c, label, v);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_(self, c, path);
  return self;
}

- (void)setVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  [super setVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:geo];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint]) {
    [self setPointSizeWithInt:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND))) getPointSize]];
    [self setPointStyleWithInt:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND))) getPointStyle]];
  }
  else if ([OrgGeogebraCommonKernelGeosPointProperties_class_() isInstance:geo]) {
    [self setPointSizeWithInt:[((id<OrgGeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosPointProperties))) getPointSize]];
    [self setPointStyleWithInt:[((id<OrgGeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosPointProperties))) getPointStyle]];
  }
}

- (void)setPathWithOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path {
  self->path_ = path;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                          withOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)region {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelRegion_(self, c, region);
  return self;
}

- (void)setRegionWithOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)region {
  self->region_ = region;
}

- (jdouble)distanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getInhomCoordsInD3])) distanceWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) getInhomCoordsInD3]];
}

- (jdouble)getX {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getCoords])) getWithInt:1];
}

- (jdouble)getY {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getCoords])) getWithInt:2];
}

- (jdouble)getZ {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getCoords])) getWithInt:3];
}

- (void)setCoordsWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v
                                             withBoolean:(jboolean)doPathOrRegion {
  [super setCoordsWithOrgGeogebraCommonKernelMatrixCoords:v];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(self);
  if (doPathOrRegion) {
    if (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_hasRegion(self)) {
      [((id<OrgGeogebraCommonKernelRegion>) nil_chk(region_)) pointChangedForRegionWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
    }
    if ([self hasPath]) {
      [((id<OrgGeogebraCommonKernelPath>) nil_chk(path_)) pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
      animationValue_ = OrgGeogebraCommonKernelPathNormalizer_toNormalizedPathParameterWithDouble_withDouble_withDouble_(((OrgGeogebraCommonKernelPathParameter *) nil_chk(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getPathParameter(self)))->t_, [path_ getMinParameter], [path_ getMaxParameter]);
    }
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(self);
  }
}

- (void)setCoordsWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(self, v);
}

- (void)setCoordsFromPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(self, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getInhomCoordsInD3]);
}

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z
                 withDouble:(jdouble)w {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, x, y, z, w);
}

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, x, y, 0, z);
}

- (void)updateCoords {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(self);
}

- (void)setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoVec3D *)v {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, ((OrgGeogebraCommonKernelGeosGeoVec3D *) nil_chk(v))->x_, v->y_, v->z_, 1.0);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getInhomCoords {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getInhomCoordsInDWithInt:(jint)dimension {
  OrgGeogebraCommonKernelMatrixCoords *v;
  switch (dimension) {
    case 3:
    return [self getInhomCoordsInD3];
    case 2:
    return [self getInhomCoordsInD2];
    default:
    return nil;
  }
}

- (OrgGeogebraCommonKernelMatrixCoords *)getInhomCoordsInD2 {
  if (inhom2D_ == nil) {
    inhom2D_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(2);
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(inhom2D_)) setXWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(inhom_)) getX]];
  [inhom2D_ setYWithDouble:[inhom_ getY]];
  return inhom2D_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getInhomCoordsInD3 {
  return inhom_;
}

- (jdouble)getInhomX {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(inhom_)) getX];
}

- (jdouble)getInhomY {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(inhom_)) getY];
}

- (jdouble)getInhomZ {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(inhom_)) getZ];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsInD2WithOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)coordSys {
  OrgGeogebraCommonKernelMatrixCoords *coords;
  if (tmpCoords1_ == nil) {
    tmpCoords1_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  if ([self hasWillingCoords]) coords = [self getWillingCoords];
  else coords = [self getCoords];
  if (tmpMatrix4x4_ == nil) {
    tmpMatrix4x4_ = new_OrgGeogebraCommonKernelMatrixCoordMatrix4x4_init();
  }
  if (coordSys == nil) {
    OrgGeogebraCommonKernelMatrixCoordMatrix4x4_IdentityWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4_(tmpMatrix4x4_);
  }
  else {
    [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(tmpMatrix4x4_)) setWithOrgGeogebraCommonKernelMatrixCoordMatrix:[coordSys getMatrixOrthonormal]];
  }
  if (![self hasWillingDirection]) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:tmpMatrix4x4_ withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  else [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) projectPlaneThruVIfPossibleInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:tmpMatrix4x4_ withOrgGeogebraCommonKernelMatrixCoords:[self getWillingDirection] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  if (tmpCoordsLength3_ == nil) {
    tmpCoordsLength3_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(3);
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoordsLength3_)) setXWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) getX]];
  [tmpCoordsLength3_ setYWithDouble:[tmpCoords1_ getY]];
  [tmpCoordsLength3_ setZWithDouble:[tmpCoords1_ getW]];
  return tmpCoordsLength3_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsInDWithInt:(jint)dimension {
  switch (dimension) {
    case 3:
    return [self getCoords];
    case 2:
    return [self getCoordsInD2];
    default:
    return nil;
  }
}

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsInD2 {
  return [self getCoordsInD2WithOrgGeogebraCommonKernelMatrixCoordSys:OrgGeogebraCommonKernelMatrixCoordSys_get_Identity3D_()];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getCoordsInD3 {
  return [self getCoords];
}

- (void)getInhomCoordsWithDoubleArray:(IOSDoubleArray *)d {
  IOSDoubleArray *coords = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self))) get];
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(d))->size_; i++) *IOSDoubleArray_GetRef(d, i) = IOSDoubleArray_Get(nil_chk(coords), i);
}

- (IOSDoubleArray *)vectorToWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)QI {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *Q = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(QI, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class]);
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(Q)) getCoords])) subWithOrgGeogebraCommonKernelMatrixCoords:[self getCoords]])) get];
}

- (jboolean)movePointWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)rwTransVec
                     withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)endPosition {
  jboolean movedGeo = NO;
  if (endPosition != nil) {
  }
  else {
    OrgGeogebraCommonKernelMatrixCoords *coords;
    OrgGeogebraCommonKernelMatrixCoords *current = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self);
    if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(current)) getLength] < [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(rwTransVec)) getLength]) {
      coords = [current addWithOrgGeogebraCommonKernelMatrixCoords:rwTransVec];
    }
    else {
      coords = [current addSmallerWithOrgGeogebraCommonKernelMatrixCoords:rwTransVec];
    }
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(self, coords);
    movedGeo = YES;
  }
  return movedGeo;
}

- (jboolean)hasPath {
  return path_ != nil;
}

- (jboolean)isPointOnPath {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isPointOnPath(self);
}

- (id<OrgGeogebraCommonKernelPath>)getPath {
  return path_;
}

- (OrgGeogebraCommonKernelPathParameter *)getPathParameter {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getPathParameter(self);
}

- (void)doPath {
  [((id<OrgGeogebraCommonKernelPath>) nil_chk(path_)) pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
  if (!([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([path_ toGeoElement])) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([path_ toGeoElement])) isGeoList])) [self updateCoordsFrom2DWithBoolean:NO withOrgGeogebraCommonKernelMatrixCoordSys:nil];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(self);
}

- (jboolean)isChangeable {
  return OrgGeogebraCommonKernelGeosGeoPoint_isPointChangeableWithOrgGeogebraCommonKernelGeosGeoElement_(self);
}

- (jboolean)hasRegion {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_hasRegion(self);
}

- (jboolean)isPointInRegion {
  return region_ != nil;
}

- (void)doRegion {
  [((id<OrgGeogebraCommonKernelRegion>) nil_chk(region_)) pointChangedForRegionWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(self);
}

- (OrgGeogebraCommonKernelRegionParameters *)getRegionParameters {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getRegionParameters(self);
}

- (id<OrgGeogebraCommonKernelRegion>)getRegion {
  return region_;
}

- (void)updateCoords2D {
  if (region_ != nil) {
    [self updateCoords2DWithOrgGeogebraCommonKernelRegion:region_ withBoolean:YES];
  }
  else {
    x2D_ = [self getX];
    y2D_ = [self getY];
    z2D_ = [self getZ];
  }
}

- (void)updateCoords2DWithOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)region
                                            withBoolean:(jboolean)updateParameters {
  OrgGeogebraCommonKernelMatrixCoords *coords;
  IOSObjectArray *project;
  if ([self hasWillingCoords]) coords = [self getWillingCoords];
  else coords = [self getCoords];
  if (![self hasWillingDirection]) {
    project = [((id<OrgGeogebraCommonKernelKernelNDRegion3D>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDRegion3D>) check_protocol_cast(region, @protocol(OrgGeogebraCommonKernelKernelNDRegion3D))))) getNormalProjectionWithOrgGeogebraCommonKernelMatrixCoords:coords];
  }
  else {
    project = [((id<OrgGeogebraCommonKernelKernelNDRegion3D>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDRegion3D>) check_protocol_cast(region, @protocol(OrgGeogebraCommonKernelKernelNDRegion3D))))) getProjectionWithOrgGeogebraCommonKernelMatrixCoords:[self getCoords] withOrgGeogebraCommonKernelMatrixCoords:coords withOrgGeogebraCommonKernelMatrixCoords:[self getWillingDirection]];
  }
  x2D_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(project), 1))) getWithInt:1];
  y2D_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(project, 1))) getWithInt:2];
  z2D_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(project, 1))) getWithInt:3];
  if (updateParameters) {
    OrgGeogebraCommonKernelRegionParameters *rp = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getRegionParameters(self);
    [((OrgGeogebraCommonKernelRegionParameters *) nil_chk(rp)) setT1WithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(project, 1))) getWithInt:1]];
    [rp setT2WithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(project, 1))) getWithInt:2]];
    [rp setNormalWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(region, [OrgGeogebraCommonKernelGeosGeoElement class])))) getMainDirection]];
  }
}

- (void)setCoords2DWithDouble:(jdouble)x
                   withDouble:(jdouble)y
                   withDouble:(jdouble)z {
  x2D_ = x / z;
  y2D_ = y / z;
}

- (jdouble)getX2D {
  return x2D_;
}

- (jdouble)getY2D {
  return y2D_;
}

- (jdouble)getZ2D {
  return z2D_;
}

- (void)updateCoordsFrom2DWithBoolean:(jboolean)doPathOrRegion
withOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)coordsys {
  if (coordsys != nil) [self setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[coordsys getPointWithDouble:[self getX2D] withDouble:[self getY2D]] withBoolean:doPathOrRegion];
  else if (region_ != nil) {
    [self setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDRegion3D>) check_protocol_cast(region_, @protocol(OrgGeogebraCommonKernelKernelNDRegion3D))) getPointWithDouble:[self getX2D] withDouble:[self getY2D]] withBoolean:doPathOrRegion];
  }
  else [self setCoordsWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_([self getX2D], [self getY2D], 0, 1) withBoolean:doPathOrRegion];
}

- (void)updateCoordsFrom2DWithBoolean:(jboolean)doPathOrRegion {
  [self updateCoordsFrom2DWithBoolean:doPathOrRegion withOrgGeogebraCommonKernelMatrixCoordSys:OrgGeogebraCommonKernelMatrixCoordSys_get_Identity3D_()];
}

- (void)setWillingCoordsWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)willingCoords {
  if (self->willingCoords_ == nil) {
    self->willingCoords_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  if (willingCoords == nil) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->willingCoords_)) setUndefined];
  }
  else {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->willingCoords_)) setWithOrgGeogebraCommonKernelMatrixCoords:willingCoords];
  }
}

- (void)setWillingCoordsUndefined {
  if (self->willingCoords_ == nil) {
    self->willingCoords_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->willingCoords_)) setUndefined];
}

- (void)setWillingCoordsWithDouble:(jdouble)x
                        withDouble:(jdouble)y
                        withDouble:(jdouble)z
                        withDouble:(jdouble)w {
  if (self->willingCoords_ == nil) {
    self->willingCoords_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(willingCoords_)) setXWithDouble:x];
  [willingCoords_ setYWithDouble:y];
  [willingCoords_ setZWithDouble:z];
  [willingCoords_ setWWithDouble:w];
}

- (void)setWillingDirectionWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)willingDirection {
  if (self->willingDirection_ == nil) {
    self->willingDirection_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  }
  if (willingDirection == nil) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->willingDirection_)) setUndefined];
  }
  else {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->willingDirection_)) setWithOrgGeogebraCommonKernelMatrixCoords:willingDirection];
  }
}

- (void)setWillingDirectionUndefined {
  if (self->willingDirection_ == nil) {
    self->willingDirection_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->willingDirection_)) setUndefined];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getWillingCoords {
  return willingCoords_;
}

- (jboolean)hasWillingCoords {
  return willingCoords_ != nil && [willingCoords_ isDefined];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getWillingDirection {
  return willingDirection_;
}

- (jboolean)hasWillingDirection {
  return willingDirection_ != nil && [willingDirection_ isDefined];
}

- (OrgGeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return OrgGeogebraCommonPluginGeoClassEnum_get_POINT3D();
}

- (instancetype)initWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_(self, point);
  return self;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)copy__ {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_(self);
}

- (jboolean)isGeoPoint {
  return YES;
}

- (jboolean)isDefined {
  return isDefined__;
}

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint]) {
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> p = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    if ([p getPathParameter] != nil) {
      OrgGeogebraCommonKernelPathParameter *pathParameter = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getPathParameter(self);
      [((OrgGeogebraCommonKernelPathParameter *) nil_chk(pathParameter)) setWithOrgGeogebraCommonKernelPathParameter:[p getPathParameter]];
    }
    animationValue_ = [p getAnimationValue];
    [self setCoordsWithOrgGeogebraCommonKernelKernelNDGeoPointND:p];
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(self);
    [self setModeWithInt:[p getMode]];
  }
}

- (void)setUndefined {
  [self setCoordsWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(JavaLangDouble_NaN, JavaLangDouble_NaN, JavaLangDouble_NaN, JavaLangDouble_NaN) withBoolean:NO];
  [self setWillingCoordsUndefined];
  isDefined__ = NO;
}

- (jboolean)showInEuclidianView {
  return isDefined__ && !isInfinite__;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  JavaLangStringBuilder *sbToString = [self getSbToString];
  [((JavaLangStringBuilder *) nil_chk(sbToString)) setLengthWithInt:0];
  (void) [sbToString appendWithNSString:label_];
  OrgGeogebraCommonKernelGeosGeoPoint_addEqualSignToStringWithJavaLangStringBuilder_withInt_withInt_(sbToString, toStringMode_, [((OrgGeogebraCommonKernelStringTemplate *) nil_chk(tpl)) getCoordStyleWithInt:[((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getCoordStyle]]);
  (void) [sbToString appendWithNSString:[self toValueStringWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  return [sbToString description];
}

- (jboolean)hasValueStringChangeableRegardingView {
  return YES;
}

- (NSString *)toValueStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  if ([self isInfinite]) return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"Undefined"];
  JavaLangStringBuilder *sbToString = [self getSbBuildValueString];
  OrgGeogebraCommonKernelMatrixCoords *p = [self getInhomCoordsInD3];
  [((JavaLangStringBuilder *) nil_chk(sbToString)) setLengthWithInt:0];
  if ([self getMode] == OrgGeogebraCommonKernelKernel_COORD_CARTESIAN_3D) {
    OrgGeogebraCommonKernelGeosGeoPoint_buildValueStringCoordCartesian3DWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelStringTemplate_withDouble_withDouble_withDouble_withJavaLangStringBuilder_(kernel_, tpl, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(p)) getX], [p getY], [p getZ], sbToString);
  }
  else if ([self getMode] == OrgGeogebraCommonKernelKernel_COORD_SPHERICAL) {
    OrgGeogebraCommonKernelGeosGeoPoint_buildValueStringCoordSphericalWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelStringTemplate_withDouble_withDouble_withDouble_withJavaLangStringBuilder_(kernel_, tpl, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(p)) getX], [p getY], [p getZ], sbToString);
  }
  else if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(p)) getZ])) {
    if ([self getMode] == OrgGeogebraCommonKernelKernel_COORD_POLAR) {
      OrgGeogebraCommonKernelGeosGeoPoint_buildValueStringCoordSphericalWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelStringTemplate_withDouble_withDouble_withDouble_withJavaLangStringBuilder_(kernel_, tpl, [p getX], [p getY], [p getZ], sbToString);
    }
    else {
      OrgGeogebraCommonKernelGeosGeoPoint_buildValueStringCoordCartesian3DWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelStringTemplate_withDouble_withDouble_withDouble_withJavaLangStringBuilder_(kernel_, tpl, [p getX], [p getY], [p getZ], sbToString);
    }
  }
  else {
    OrgGeogebraCommonKernelGeosGeoPoint_buildValueStringWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelStringTemplate_withInt_withDouble_withDouble_withJavaLangStringBuilder_(kernel_, tpl, [self getMode], [p getX], [p getY], sbToString);
  }
  return [sbToString description];
}

- (jboolean)isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint]) return NO;
  return [self isEqualPointNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND))];
}

- (jboolean)isEqualPointNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  if (!([self isDefined] && [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) isDefined])) return NO;
  if ([self isFinite] && [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) isFinite]) {
    OrgGeogebraCommonKernelMatrixCoords *c1 = OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self);
    OrgGeogebraCommonKernelMatrixCoords *c2 = [P getInhomCoordsInD3];
    return OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(c1)) getX], [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(c2)) getX]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([c1 getY], [c2 getY]) && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([c1 getZ], [c2 getZ]);
  }
  else if ([self isInfinite] && [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) isInfinite]) {
    OrgGeogebraCommonKernelMatrixCoords *c1 = [self getCoords];
    OrgGeogebraCommonKernelMatrixCoords *c2 = [P getCoordsInD3];
    return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(c1)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:c2])) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION];
  }
  else return NO;
}

- (jboolean)hasChangeableCoordParentNumbers {
  return NO;
}

- (jint)getPointSize {
  return pointSize_;
}

- (jint)getPointStyle {
  return 0;
}

- (void)setPointSizeWithInt:(jint)size {
  pointSize_ = size;
}

- (void)setPointStyleWithInt:(jint)type {
}

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  [super getXMLtagsWithJavaLangStringBuilder:sb];
  switch (toStringMode_) {
    case OrgGeogebraCommonKernelKernel_COORD_POLAR:
    (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\t<coordStyle style=\"polar\"/>\n"];
    break;
    case OrgGeogebraCommonKernelKernel_COORD_COMPLEX:
    (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\t<coordStyle style=\"complex\"/>\n"];
    break;
    case OrgGeogebraCommonKernelKernel_COORD_CARTESIAN:
    (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\t<coordStyle style=\"cartesian\"/>\n"];
    break;
    case OrgGeogebraCommonKernelKernel_COORD_SPHERICAL:
    (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\t<coordStyle style=\"spherical\"/>\n"];
    break;
    default:
    ;
  }
  (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\t<pointSize val=\""];
  (void) [sb appendWithInt:pointSize_];
  (void) [sb appendWithNSString:@"\"/>\n"];
}

- (NSString *)getStartPointXML {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:@"\t<startPoint "];
  if (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isAbsoluteStartPoint(self)) {
    (void) [sb appendWithNSString:JreStrcat("$DC", @" x=\"", [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getCoords])) getWithInt:1], '"')];
    (void) [sb appendWithNSString:JreStrcat("$DC", @" y=\"", [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getCoords])) getWithInt:2], '"')];
    (void) [sb appendWithNSString:JreStrcat("$DC", @" z=\"", [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getCoords])) getWithInt:3], '"')];
    (void) [sb appendWithNSString:JreStrcat("$DC", @" w=\"", [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getCoords])) getWithInt:4], '"')];
  }
  else {
    (void) [sb appendWithNSString:@"exp=\""];
    OrgGeogebraCommonUtilStringUtil_encodeXMLWithJavaLangStringBuilder_withNSString_(sb, [self getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_xmlTemplate_()]);
    (void) [sb appendWithNSString:@"\""];
  }
  (void) [sb appendWithNSString:@"/>\n"];
  return [sb description];
}

- (jboolean)isAbsoluteStartPoint {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isAbsoluteStartPoint(self);
}

- (OrgGeogebraCommonKernelLocateableList *)getLocateableList {
  if (locateableList_ == nil) locateableList_ = new_OrgGeogebraCommonKernelLocateableList_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_(self);
  return locateableList_;
}

- (jboolean)hasLocateableList {
  return locateableList_ != nil;
}

- (void)setLocateableListWithOrgGeogebraCommonKernelLocateableList:(OrgGeogebraCommonKernelLocateableList *)locateableList {
  self->locateableList_ = locateableList;
}

- (void)doRemove {
  if (locateableList_ != nil) {
    [locateableList_ doRemove];
  }
  [super doRemove];
}

- (void)update {
  [super update];
  if (locateableList_ != nil) {
    OrgGeogebraCommonKernelGeosGeoElement_updateCascadeLocationWithJavaUtilArrayList_withOrgGeogebraCommonKernelConstruction_(locateableList_, cons_);
  }
}

+ (JavaUtilTreeSet *)getTempSet {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getTempSet();
}

- (jboolean)isFinite {
  return isDefined__ && !isInfinite__;
}

- (jboolean)isInfinite {
  return isInfinite__;
}

- (IOSDoubleArray *)getPointAsDouble {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self))) get];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)getVector {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithOrgGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(kernel_, [self getX], [self getY], [self getZ]);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getLabelPosition {
  return [self getInhomCoordsInD3];
}

- (void)switchMoveModeWithInt:(jint)mode {
  switch (moveMode_) {
    case OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_XY:
    moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_Z;
    break;
    case OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_Z:
    moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_XY;
    break;
    case OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_TOOL_DEFAULT:
    if (mode == OrgGeogebraCommonEuclidianEuclidianConstants_MODE_MOVE) {
      moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_Z;
    }
    else {
      moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_XY;
    }
    break;
  }
}

- (void)setMoveModeWithInt:(jint)flag {
  moveMode_ = flag;
}

- (jint)getMoveMode {
  if (![self isIndependent] || [self isFixed]) return OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_NONE;
  else if ([self hasPath]) return OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_NONE;
  else if (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_hasRegion(self)) return OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_XY;
  else return moveMode_;
}

- (jint)getRealMoveMode {
  return moveMode_;
}

- (void)setMoveNormalDirectionWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)d {
  moveNormalDirection_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) copyVector];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getMoveNormalDirection {
  return moveNormalDirection_;
}

- (void)showUndefinedInAlgebraViewWithBoolean:(jboolean)flag {
  showUndefinedInAlgebraView__ = flag;
}

- (jboolean)showInAlgebraView {
  return (isDefined__ || showUndefinedInAlgebraView__);
}

- (void)setWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p {
  [self setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p, [OrgGeogebraCommonKernelGeosGeoElement class])];
}

- (void)setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:(OrgGeogebraCommonKernelAlgosAlgoElement *)algorithm {
  [super setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:algorithm];
  if (algorithm != nil) [self setConstructionDefaultsWithBoolean:setEuclidianVisibleBySetParentAlgorithm_];
}

- (void)dontSetEuclidianVisibleBySetParentAlgorithm {
  setEuclidianVisibleBySetParentAlgorithm_ = NO;
}

- (void)updateColumnHeadingsForTraceValues {
  [self resetSpreadsheetColumnHeadings];
  [((JavaUtilArrayList *) nil_chk(spreadsheetColumnHeadings_)) addWithId:[self getColumnHeadingTextWithOrgGeogebraCommonKernelArithmeticExpressionNode:new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgebraProcessor])) getXBracket], OrgGeogebraCommonPluginOperationEnum_get_PLUS(), new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [self getNameGeo], OrgGeogebraCommonPluginOperationEnum_get_PLUS(), [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel_ getAlgebraProcessor])) getCloseBracket]))]];
  [spreadsheetColumnHeadings_ addWithId:[self getColumnHeadingTextWithOrgGeogebraCommonKernelArithmeticExpressionNode:new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel_ getAlgebraProcessor])) getYBracket], OrgGeogebraCommonPluginOperationEnum_get_PLUS(), new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [self getNameGeo], OrgGeogebraCommonPluginOperationEnum_get_PLUS(), [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel_ getAlgebraProcessor])) getCloseBracket]))]];
  [spreadsheetColumnHeadings_ addWithId:[self getColumnHeadingTextWithOrgGeogebraCommonKernelArithmeticExpressionNode:new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel_ getAlgebraProcessor])) getZBracket], OrgGeogebraCommonPluginOperationEnum_get_PLUS(), new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [self getNameGeo], OrgGeogebraCommonPluginOperationEnum_get_PLUS(), [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([kernel_ getAlgebraProcessor])) getCloseBracket]))]];
}

- (OrgGeogebraCommonKernelGeosGeoElement_TraceModesEnumEnum *)getTraceModes {
  return OrgGeogebraCommonKernelGeosGeoElement_TraceModesEnumEnum_get_SEVERAL_VALUES_OR_COPY();
}

- (NSString *)getTraceDialogAsValues {
  NSString *name = [self getLabelTextOrHTMLWithBoolean:NO];
  JavaLangStringBuilder *sb1 = new_JavaLangStringBuilder_init();
  (void) [sb1 appendWithNSString:@"x("];
  (void) [sb1 appendWithNSString:name];
  (void) [sb1 appendWithNSString:@"), y("];
  (void) [sb1 appendWithNSString:name];
  (void) [sb1 appendWithNSString:@"), z("];
  (void) [sb1 appendWithNSString:name];
  (void) [sb1 appendWithNSString:@")"];
  return [sb1 description];
}

- (void)addToSpreadsheetTraceListWithJavaUtilArrayList:(JavaUtilArrayList *)spreadsheetTraceList {
  OrgGeogebraCommonKernelGeosGeoNumeric *xx = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(cons_, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(inhom_)) getX]);
  [((JavaUtilArrayList *) nil_chk(spreadsheetTraceList)) addWithId:xx];
  OrgGeogebraCommonKernelGeosGeoNumeric *yy = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(cons_, [inhom_ getY]);
  [spreadsheetTraceList addWithId:yy];
  OrgGeogebraCommonKernelGeosGeoNumeric *zz = new_OrgGeogebraCommonKernelGeosGeoNumeric_initWithOrgGeogebraCommonKernelConstruction_withDouble_(cons_, [inhom_ getZ]);
  [spreadsheetTraceList addWithId:zz];
}

- (void)matrixTransformWithDouble:(jdouble)a
                       withDouble:(jdouble)b
                       withDouble:(jdouble)c
                       withDouble:(jdouble)d {
  jdouble x = [self getX];
  jdouble y = [self getY];
  JavaLangDouble *x1 = JavaLangDouble_valueOfWithDouble_(a * x + b * y);
  JavaLangDouble *y1 = JavaLangDouble_valueOfWithDouble_(c * x + d * y);
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, [x1 doubleValue], [y1 doubleValue], [self getZ], [self getW]);
}

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22 {
  jdouble x = [self getX];
  jdouble y = [self getY];
  jdouble z = [self getZ];
  jdouble x1 = a00 * x + a01 * y + a02 * z;
  jdouble y1 = a10 * x + a11 * y + a12 * z;
  jdouble z1 = a20 * x + a21 * y + a22 * z;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, x1, y1, z1, [self getW]);
}

- (jboolean)isMatrixTransformable {
  return YES;
}

- (jint)getDimension {
  return 3;
}

- (jboolean)isCasEvaluableObject {
  return YES;
}

- (void)setCartesian {
  [self setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_CARTESIAN];
}

- (void)setCartesian3D {
  [self setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_CARTESIAN_3D];
}

- (void)setSpherical {
  [self setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_SPHERICAL];
}

- (void)setPolar {
  [self setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_POLAR];
}

- (void)setComplex {
  [self setModeWithInt:OrgGeogebraCommonKernelKernel_COORD_COMPLEX];
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue {
  jdouble phi = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(phiValue)) getDouble];
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble x = [self getX];
  jdouble y = [self getY];
  jdouble z = [self getZ];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, x * cos - y * sin, x * sin + y * cos, z, [self getW]);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_(self, phiValue, [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getInhomCoords]);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)point {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_(self, phiValue, point);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S
             withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(S)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *vn = [((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation)) getDirectionInD3];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, phiValue, o1, vn);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o1
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vn {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(self, phiValue, o1, vn);
}

- (void)rotateWithDouble:(jdouble)phi
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o1
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)vn {
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) isZero] || JavaLangDouble_isNaNWithDouble_(phi)) {
    [self setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoords *point = [self getInhomCoordsInD3];
  if (tmpCoords1_ == nil) {
    tmpCoords1_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) projectLineWithOrgGeogebraCommonKernelMatrixCoords:o1 withOrgGeogebraCommonKernelMatrixCoords:vn withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_ withDoubleArray:nil];
  if (tmpCoords2_ == nil) {
    tmpCoords2_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  }
  (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setSubWithOrgGeogebraCommonKernelMatrixCoords:point withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble l = [vn calcNorm];
  if (tmpCoords3_ == nil) {
    tmpCoords3_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords3_)) setCrossProductWithOrgGeogebraCommonKernelMatrixCoords:vn withOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
  [tmpCoords3_ setWWithDouble:0];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords1_)) setAddWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_ withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ setAddWithOrgGeogebraCommonKernelMatrixCoords:[tmpCoords2_ mulInsideWithDouble:cos] withOrgGeogebraCommonKernelMatrixCoords:[tmpCoords3_ mulInsideWithDouble:sin / l]]]);
}

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                  withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  [self rotateWithDouble:[((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(phiValue)) getDouble] withOrgGeogebraCommonKernelKernelNDGeoLineND:line];
}

- (void)rotateWithDouble:(jdouble)phi
withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getStartInhomCoords];
  OrgGeogebraCommonKernelMatrixCoords *vn = [line getDirectionInD3];
  [self rotateWithDouble:phi withOrgGeogebraCommonKernelMatrixCoords:o1 withOrgGeogebraCommonKernelMatrixCoords:vn];
}

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p)) isGeoElement3D]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(p, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])) setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[self getCoords] withBoolean:NO];
  }
  else {
    OrgGeogebraCommonKernelMatrixCoords *coords = [self getCoords];
    if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getZ])) {
      [p setUndefined];
    }
    else {
      OrgGeogebraCommonKernelGeosGeoPoint_pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND_withDouble_withDouble_withDouble_(p, [coords getX], [coords getY], [coords getW]);
    }
  }
  [((OrgGeogebraCommonKernelPathParameter *) nil_chk([p getPathParameter])) setTWithDouble:0];
}

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI {
  [self pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:PI];
}

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps {
  return [self isEqualWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(PI, [OrgGeogebraCommonKernelGeosGeoElement class])];
}

- (jdouble)getMinParameter {
  return 0;
}

- (jdouble)getMaxParameter {
  return 0;
}

- (jboolean)isClosedPath {
  return NO;
}

- (id<OrgGeogebraCommonKernelPathMover>)createPathMover {
  return nil;
}

- (jdouble)distanceToPathWithOrgGeogebraCommonKernelPathOrPoint:(id<OrgGeogebraCommonKernelPathOrPoint>)path {
  OrgGeogebraCommonKernelMatrixCoords *coordsOld = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self))) copyVector];
  if (tmpWillingCoords_ == nil) {
    tmpWillingCoords_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  if (tmpWillingDirection_ == nil) {
    tmpWillingDirection_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  }
  if ([self hasWillingCoords]) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpWillingCoords_)) setWithOrgGeogebraCommonKernelMatrixCoords:[self getWillingCoords]];
  }
  else {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpWillingCoords_)) setWithOrgGeogebraCommonKernelMatrixCoords:coordsOld];
  }
  if ([self hasWillingDirection]) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpWillingDirection_)) setWithOrgGeogebraCommonKernelMatrixCoords:[self getWillingDirection]];
  }
  else {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpWillingDirection_)) setUndefined];
  }
  [((id<OrgGeogebraCommonKernelPathOrPoint>) nil_chk(path)) pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
  jdouble d;
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpWillingDirection_)) isDefined]) {
    d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self))) distanceWithOrgGeogebraCommonKernelMatrixCoords:tmpWillingCoords_];
  }
  else {
    d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(self))) distLineWithOrgGeogebraCommonKernelMatrixCoords:tmpWillingCoords_ withOrgGeogebraCommonKernelMatrixCoords:tmpWillingDirection_];
    [self setWillingDirectionWithOrgGeogebraCommonKernelMatrixCoords:tmpWillingDirection_];
  }
  [self setWillingCoordsWithOrgGeogebraCommonKernelMatrixCoords:tmpWillingCoords_];
  [self setCoordsWithOrgGeogebraCommonKernelMatrixCoords:coordsOld withBoolean:NO];
  return d;
}

- (OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)getDrawingMatrix {
  return m_drawingMatrix_;
}

- (void)setDrawingMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:(OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *)a_drawingMatrix {
  self->m_drawingMatrix_ = a_drawingMatrix;
}

- (jboolean)isTraceable {
  return YES;
}

- (void)setTraceWithBoolean:(jboolean)trace {
  self->trace_ = trace;
}

- (jboolean)getTrace {
  return trace_;
}

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q {
  jdouble w = [self getW];
  jdouble qx = w * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Q)) getX];
  jdouble qy = w * [Q getY];
  jdouble qz = w * [Q getZ];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, 2.0 * qx - [self getX], 2.0 * qy - [self getY], 2.0 * qz - [self getZ], w);
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getStartInhomCoords];
  OrgGeogebraCommonKernelMatrixCoords *vn = [line getDirectionInD3];
  OrgGeogebraCommonKernelMatrixCoords *point = [self getInhomCoordsInD3];
  if (tmpCoords1_ == nil) {
    tmpCoords1_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(point)) projectLineWithOrgGeogebraCommonKernelMatrixCoords:o1 withOrgGeogebraCommonKernelMatrixCoords:vn withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_ withDoubleArray:nil];
  [self mirrorWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
}

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane {
  if (tmpCoords1_ == nil) {
    tmpCoords1_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getInhomCoordsInD3])) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(plane)) getCoordSys])) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
  [self mirrorWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords1_];
}

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)rval
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)S {
  jdouble r = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(rval)) getDouble];
  jdouble temp = (1 - r);
  jdouble w = [self getW];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, r * [self getX] + temp * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(S)) getX] * w, r * [self getY] + temp * [S getY] * w, r * [self getZ] + temp * [S getZ] * w, w);
}

- (JavaUtilArrayList *)getIncidenceList {
  return incidenceList_;
}

- (JavaUtilArrayList *)getNonIncidenceList {
  return nonIncidenceList_;
}

- (void)setIncidenceListWithJavaUtilArrayList:(JavaUtilArrayList *)list {
  if (list == nil) incidenceList_ = new_JavaUtilArrayList_init();
  else incidenceList_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(list);
}

- (void)createIncidenceList {
  incidenceList_ = new_JavaUtilArrayList_init();
  [incidenceList_ addWithId:self];
}

- (void)createNonIncidenceList {
  nonIncidenceList_ = new_JavaUtilArrayList_init();
}

- (void)addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                  withBoolean:(jboolean)isStartPoint {
  if (incidenceList_ == nil) [self createIncidenceList];
  if (![((JavaUtilArrayList *) nil_chk(incidenceList_)) containsWithId:geo]) [incidenceList_ addWithId:geo];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoConic]) [((OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(geo, [OrgGeogebraCommonKernelKernelNDGeoConicND class])) addPointOnConicWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
  else if ([geo isGeoLine] && !isStartPoint) [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND))) addPointOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
}

- (void)addNonIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (nonIncidenceList_ == nil) [self createNonIncidenceList];
  if (![((JavaUtilArrayList *) nil_chk(nonIncidenceList_)) containsWithId:geo]) [nonIncidenceList_ addWithId:geo];
}

- (void)removeIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (incidenceList_ != nil) [incidenceList_ removeWithId:geo];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoConic]) [((OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(geo, [OrgGeogebraCommonKernelKernelNDGeoConicND class])) removePointOnConicWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
  else if ([geo isGeoLine]) [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND))) removePointOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:self];
}

- (jboolean)addIncidenceWithProbabilisticCheckingWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  jboolean incident = NO;
  if (([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint] && [self isEqualWithOrgGeogebraCommonKernelGeosGeoElement:geo]) || ([geo isPath] && [((id<OrgGeogebraCommonKernelPath>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelPath))) isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:self withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION])) {
    incident = YES;
    JavaUtilTreeSet *pred = [self getAllRandomizablePredecessors];
    JavaUtilArrayList *predList = new_JavaUtilArrayList_init();
    JavaUtilTreeSet *tmpSet = OrgGeogebraCommonKernelGeosGeoElement_getTempSet();
    [predList addAllWithJavaUtilCollection:pred];
    [((JavaUtilTreeSet *) nil_chk(pred)) addAllWithJavaUtilCollection:[geo getAllRandomizablePredecessors]];
    id<JavaUtilIterator> it = [pred iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      OrgGeogebraCommonKernelGeosGeoElement *predGeo = [it next];
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(predGeo)) storeClone];
    }
    for (jint i = 0; i < 5; ++i) {
      it = [pred iterator];
      while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
        OrgGeogebraCommonKernelGeosGeoElement *predGeo = [it next];
        [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(predGeo)) randomizeForProbabilisticChecking];
      }
      OrgGeogebraCommonKernelGeosGeoElement_updateCascadeUntilWithJavaUtilArrayList_withJavaUtilTreeSet_withOrgGeogebraCommonKernelAlgosAlgoElement_(predList, new_JavaUtilTreeSet_init(), self->algoParent_);
      OrgGeogebraCommonKernelGeosGeoElement_updateCascadeUntilWithJavaUtilArrayList_withJavaUtilTreeSet_withOrgGeogebraCommonKernelAlgosAlgoElement_(predList, new_JavaUtilTreeSet_init(), [geo getParentAlgorithm]);
      if ([geo isGeoPoint]) {
        if (![self isEqualWithOrgGeogebraCommonKernelGeosGeoElement:geo]) incident = NO;
      }
      else if ([geo isPath]) {
        if (![((id<OrgGeogebraCommonKernelPath>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelPath))) isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:self withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) incident = NO;
      }
      else {
        incident = NO;
      }
      if (!incident) break;
    }
    it = [pred iterator];
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      OrgGeogebraCommonKernelGeosGeoElement *predGeo = [it next];
      if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(predGeo)) isIndependent]) {
        OrgGeogebraCommonKernelGeosGeoElement_updateCascadeUntilWithJavaUtilArrayList_withJavaUtilTreeSet_withOrgGeogebraCommonKernelAlgosAlgoElement_(predList, tmpSet, [predGeo getParentAlgorithm]);
      }
      [predGeo recoverFromClone];
    }
    OrgGeogebraCommonKernelGeosGeoElement_updateCascadeWithJavaUtilArrayList_withJavaUtilTreeSet_withBoolean_(predList, tmpSet, NO);
    if (incident) [self addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:geo withBoolean:NO];
    else [self addNonIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:geo];
  }
  return incident;
}

- (jboolean)evaluatesTo3DVector {
  return YES;
}

- (void)setWithDouble:(jdouble)param1
           withDouble:(jdouble)param2
withOrgGeogebraCommonKernelMyPoint:(OrgGeogebraCommonKernelMyPoint *)leftPoint
withOrgGeogebraCommonKernelMyPoint:(OrgGeogebraCommonKernelMyPoint *)rightPoint {
  [self setCoordsWithOrgGeogebraCommonKernelMatrixCoords:new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(param2 * ((OrgGeogebraCommonKernelMyPoint *) nil_chk(leftPoint))->x_ + param1 * ((OrgGeogebraCommonKernelMyPoint *) nil_chk(rightPoint))->x_, param2 * leftPoint->y_ + param1 * rightPoint->y_, param2 * [leftPoint getZ] + param1 * [rightPoint getZ], 1.0) withBoolean:NO];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(self);
}

- (OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType {
  return OrgGeogebraCommonKernelGeosGeoElement_HitTypeEnum_get_ON_BOUNDARY();
}

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v0 {
  if (tmpCoords2_ == nil) {
    tmpCoords2_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  }
  (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(tmpCoords2_)) setMulWithOrgGeogebraCommonKernelMatrixCoords:v0 withDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v_)) getW]];
  [v_ addInsideWithOrgGeogebraCommonKernelMatrixCoords:tmpCoords2_];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(self, v_);
}

- (jboolean)doAnimationStepWithDouble:(jdouble)frameRate {
  return OrgGeogebraCommonKernelGeosGeoPoint_doAnimationStepWithDouble_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelPath_(frameRate, self, path_);
}

- (jboolean)isAnimatable {
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isPointOnPath(self) && [self isChangeable];
}

- (jdouble)getAnimationValue {
  return animationValue_;
}

- (void)setAnimationValueWithDouble:(jdouble)val {
  animationValue_ = val;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:", "GeoPoint3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withDouble:withDouble:withDouble:withDouble:", "GeoPoint3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelMatrixCoords:", "GeoPoint3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelPath:", "GeoPoint3D", NULL, 0x1, NULL, NULL },
    { "setVisualStyleWithOrgGeogebraCommonKernelGeosGeoElement:", "setVisualStyle", "V", 0x1, NULL, NULL },
    { "setPathWithOrgGeogebraCommonKernelPath:", "setPath", "V", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelRegion:", "GeoPoint3D", NULL, 0x1, NULL, NULL },
    { "setRegionWithOrgGeogebraCommonKernelRegion:", "setRegion", "V", 0x1, NULL, NULL },
    { "distanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "distance", "D", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "getZ", NULL, "D", 0x1, NULL, NULL },
    { "setCoordsWithOrgGeogebraCommonKernelMatrixCoords:withBoolean:", "setCoords", "V", 0x11, NULL, NULL },
    { "setCoordsWithOrgGeogebraCommonKernelMatrixCoords:", "setCoords", "V", 0x11, NULL, NULL },
    { "setCoordsFromPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "setCoordsFromPoint", "V", 0x1, NULL, NULL },
    { "setCoordsWithDouble:withDouble:withDouble:withDouble:", "setCoords", "V", 0x11, NULL, NULL },
    { "setCoordsWithDouble:withDouble:withDouble:", "setCoords", "V", 0x11, NULL, NULL },
    { "updateCoords", NULL, "V", 0x11, NULL, NULL },
    { "setCoordsWithOrgGeogebraCommonKernelGeosGeoVec3D:", "setCoords", "V", 0x11, NULL, NULL },
    { "getInhomCoords", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x11, NULL, NULL },
    { "getInhomCoordsInDWithInt:", "getInhomCoordsInD", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getInhomCoordsInD2", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getInhomCoordsInD3", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getInhomX", NULL, "D", 0x11, NULL, NULL },
    { "getInhomY", NULL, "D", 0x11, NULL, NULL },
    { "getInhomZ", NULL, "D", 0x11, NULL, NULL },
    { "getCoordsInD2WithOrgGeogebraCommonKernelMatrixCoordSys:", "getCoordsInD2", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInDWithInt:", "getCoordsInD", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD2", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD3", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getInhomCoordsWithDoubleArray:", "getInhomCoords", "V", 0x11, NULL, NULL },
    { "vectorToWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "vectorTo", "[D", 0x11, NULL, NULL },
    { "movePointWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "movePoint", "Z", 0x4, NULL, NULL },
    { "hasPath", NULL, "Z", 0x1, NULL, NULL },
    { "isPointOnPath", NULL, "Z", 0x11, NULL, NULL },
    { "getPath", NULL, "Lorg.geogebra.common.kernel.Path;", 0x1, NULL, NULL },
    { "getPathParameter", NULL, "Lorg.geogebra.common.kernel.PathParameter;", 0x11, NULL, NULL },
    { "doPath", NULL, "V", 0x11, NULL, NULL },
    { "isChangeable", NULL, "Z", 0x1, NULL, NULL },
    { "hasRegion", NULL, "Z", 0x11, NULL, NULL },
    { "isPointInRegion", NULL, "Z", 0x11, NULL, NULL },
    { "doRegion", NULL, "V", 0x11, NULL, NULL },
    { "getRegionParameters", NULL, "Lorg.geogebra.common.kernel.RegionParameters;", 0x11, NULL, NULL },
    { "getRegion", NULL, "Lorg.geogebra.common.kernel.Region;", 0x11, NULL, NULL },
    { "updateCoords2D", NULL, "V", 0x1, NULL, NULL },
    { "updateCoords2DWithOrgGeogebraCommonKernelRegion:withBoolean:", "updateCoords2D", "V", 0x1, NULL, NULL },
    { "setCoords2DWithDouble:withDouble:withDouble:", "setCoords2D", "V", 0x1, NULL, NULL },
    { "getX2D", NULL, "D", 0x1, NULL, NULL },
    { "getY2D", NULL, "D", 0x1, NULL, NULL },
    { "getZ2D", NULL, "D", 0x1, NULL, NULL },
    { "updateCoordsFrom2DWithBoolean:withOrgGeogebraCommonKernelMatrixCoordSys:", "updateCoordsFrom2D", "V", 0x1, NULL, NULL },
    { "updateCoordsFrom2DWithBoolean:", "updateCoordsFrom2D", "V", 0x1, NULL, NULL },
    { "setWillingCoordsWithOrgGeogebraCommonKernelMatrixCoords:", "setWillingCoords", "V", 0x1, NULL, NULL },
    { "setWillingCoordsUndefined", NULL, "V", 0x1, NULL, NULL },
    { "setWillingCoordsWithDouble:withDouble:withDouble:withDouble:", "setWillingCoords", "V", 0x1, NULL, NULL },
    { "setWillingDirectionWithOrgGeogebraCommonKernelMatrixCoords:", "setWillingDirection", "V", 0x1, NULL, NULL },
    { "setWillingDirectionUndefined", NULL, "V", 0x1, NULL, NULL },
    { "getWillingCoords", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "hasWillingCoords", NULL, "Z", 0x1, NULL, NULL },
    { "getWillingDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "hasWillingDirection", NULL, "Z", 0x1, NULL, NULL },
    { "getGeoClassType", NULL, "Lorg.geogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "GeoPoint3D", NULL, 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x1, NULL, NULL },
    { "isGeoPoint", NULL, "Z", 0x11, NULL, NULL },
    { "isDefined", NULL, "Z", 0x1, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x1, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "hasValueStringChangeableRegardingView", NULL, "Z", 0x1, NULL, NULL },
    { "toValueStringWithOrgGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEqualWithOrgGeogebraCommonKernelGeosGeoElement:", "isEqual", "Z", 0x1, NULL, NULL },
    { "isEqualPointNDWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "isEqualPointND", "Z", 0x1, NULL, NULL },
    { "hasChangeableCoordParentNumbers", NULL, "Z", 0x1, NULL, NULL },
    { "getPointSize", NULL, "I", 0x1, NULL, NULL },
    { "getPointStyle", NULL, "I", 0x1, NULL, NULL },
    { "setPointSizeWithInt:", "setPointSize", "V", 0x1, NULL, NULL },
    { "setPointStyleWithInt:", "setPointStyle", "V", 0x1, NULL, NULL },
    { "getXMLtagsWithJavaLangStringBuilder:", "getXMLtags", "V", 0x4, NULL, NULL },
    { "getStartPointXML", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isAbsoluteStartPoint", NULL, "Z", 0x11, NULL, NULL },
    { "getLocateableList", NULL, "Lorg.geogebra.common.kernel.LocateableList;", 0x1, NULL, NULL },
    { "hasLocateableList", NULL, "Z", 0x1, NULL, NULL },
    { "setLocateableListWithOrgGeogebraCommonKernelLocateableList:", "setLocateableList", "V", 0x1, NULL, NULL },
    { "doRemove", NULL, "V", 0x1, NULL, NULL },
    { "update", NULL, "V", 0x1, NULL, NULL },
    { "getTempSet", NULL, "Ljava.util.TreeSet;", 0xc, NULL, NULL },
    { "isFinite", NULL, "Z", 0x1, NULL, NULL },
    { "isInfinite", NULL, "Z", 0x1, NULL, NULL },
    { "getPointAsDouble", NULL, "[D", 0x1, NULL, NULL },
    { "getVector", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "getLabelPosition", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "switchMoveModeWithInt:", "switchMoveMode", "V", 0x1, NULL, NULL },
    { "setMoveModeWithInt:", "setMoveMode", "V", 0x1, NULL, NULL },
    { "getMoveMode", NULL, "I", 0x1, NULL, NULL },
    { "getRealMoveMode", NULL, "I", 0x1, NULL, NULL },
    { "setMoveNormalDirectionWithOrgGeogebraCommonKernelMatrixCoords:", "setMoveNormalDirection", "V", 0x1, NULL, NULL },
    { "getMoveNormalDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "showUndefinedInAlgebraViewWithBoolean:", "showUndefinedInAlgebraView", "V", 0x1, NULL, NULL },
    { "showInAlgebraView", NULL, "Z", 0x11, NULL, NULL },
    { "setWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "set", "V", 0x1, NULL, NULL },
    { "setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:", "setParentAlgorithm", "V", 0x1, NULL, NULL },
    { "dontSetEuclidianVisibleBySetParentAlgorithm", NULL, "V", 0x1, NULL, NULL },
    { "updateColumnHeadingsForTraceValues", NULL, "V", 0x1, NULL, NULL },
    { "getTraceModes", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement$TraceModesEnum;", 0x1, NULL, NULL },
    { "getTraceDialogAsValues", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "addToSpreadsheetTraceListWithJavaUtilArrayList:", "addToSpreadsheetTraceList", "V", 0x1, NULL, NULL },
    { "matrixTransformWithDouble:withDouble:withDouble:withDouble:", "matrixTransform", "V", 0x1, NULL, NULL },
    { "matrixTransformWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "matrixTransform", "V", 0x1, NULL, NULL },
    { "isMatrixTransformable", NULL, "Z", 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "isCasEvaluableObject", NULL, "Z", 0x11, NULL, NULL },
    { "setCartesian", NULL, "V", 0x1, NULL, NULL },
    { "setCartesian3D", NULL, "V", 0x1, NULL, NULL },
    { "setSpherical", NULL, "V", 0x1, NULL, NULL },
    { "setPolar", NULL, "V", 0x1, NULL, NULL },
    { "setComplex", NULL, "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:", "rotate", "V", 0x11, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotate", "V", 0x11, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x11, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x2, NULL, NULL },
    { "rotateWithDouble:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "rotate", "V", 0x1, NULL, NULL },
    { "rotateWithDouble:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "rotate", "V", 0x1, NULL, NULL },
    { "pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pointChanged", "V", 0x1, NULL, NULL },
    { "pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "pathChanged", "V", 0x1, NULL, NULL },
    { "isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:withDouble:", "isOnPath", "Z", 0x1, NULL, NULL },
    { "getMinParameter", NULL, "D", 0x1, NULL, NULL },
    { "getMaxParameter", NULL, "D", 0x1, NULL, NULL },
    { "isClosedPath", NULL, "Z", 0x1, NULL, NULL },
    { "createPathMover", NULL, "Lorg.geogebra.common.kernel.PathMover;", 0x1, NULL, NULL },
    { "distanceToPathWithOrgGeogebraCommonKernelPathOrPoint:", "distanceToPath", "D", 0x1, NULL, NULL },
    { "getDrawingMatrix", NULL, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", 0x1, NULL, NULL },
    { "setDrawingMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:", "setDrawingMatrix", "V", 0x1, NULL, NULL },
    { "isTraceable", NULL, "Z", 0x1, NULL, NULL },
    { "setTraceWithBoolean:", "setTrace", "V", 0x1, NULL, NULL },
    { "getTrace", NULL, "Z", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelMatrixCoords:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:", "mirror", "V", 0x1, NULL, NULL },
    { "mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "mirror", "V", 0x1, NULL, NULL },
    { "dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelMatrixCoords:", "dilate", "V", 0x1, NULL, NULL },
    { "getIncidenceList", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "getNonIncidenceList", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "setIncidenceListWithJavaUtilArrayList:", "setIncidenceList", "V", 0x1, NULL, NULL },
    { "createIncidenceList", NULL, "V", 0x1, NULL, NULL },
    { "createNonIncidenceList", NULL, "V", 0x1, NULL, NULL },
    { "addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "addIncidence", "V", 0x1, NULL, NULL },
    { "addNonIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:", "addNonIncidence", "V", 0x1, NULL, NULL },
    { "removeIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:", "removeIncidence", "V", 0x11, NULL, NULL },
    { "addIncidenceWithProbabilisticCheckingWithOrgGeogebraCommonKernelGeosGeoElement:", "addIncidenceWithProbabilisticChecking", "Z", 0x1, NULL, NULL },
    { "evaluatesTo3DVector", NULL, "Z", 0x1, NULL, NULL },
    { "setWithDouble:withDouble:withOrgGeogebraCommonKernelMyPoint:withOrgGeogebraCommonKernelMyPoint:", "set", "V", 0x1, NULL, NULL },
    { "getLastHitType", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement$HitType;", 0x11, NULL, NULL },
    { "translateWithOrgGeogebraCommonKernelMatrixCoords:", "translate", "V", 0x1, NULL, NULL },
    { "doAnimationStepWithDouble:", "doAnimationStep", "Z", 0x1, NULL, NULL },
    { "isAnimatable", NULL, "Z", 0x1, NULL, NULL },
    { "getAnimationValue", NULL, "D", 0x1, NULL, NULL },
    { "setAnimationValueWithDouble:", "setAnimationValue", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "isInfinite__", "isInfinite", 0x2, "Z", NULL, NULL,  },
    { "isDefined__", "isDefined", 0x2, "Z", NULL, NULL,  },
    { "pointSize_", NULL, 0x2, "I", NULL, NULL,  },
    { "willingCoords_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "willingDirection_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "path_", NULL, 0x2, "Lorg.geogebra.common.kernel.Path;", NULL, NULL,  },
    { "pp_", NULL, 0x2, "Lorg.geogebra.common.kernel.PathParameter;", NULL, NULL,  },
    { "region_", NULL, 0x2, "Lorg.geogebra.common.kernel.Region;", NULL, NULL,  },
    { "regionParameters_", NULL, 0x2, "Lorg.geogebra.common.kernel.RegionParameters;", NULL, NULL,  },
    { "x2D_", NULL, 0x2, "D", NULL, NULL,  },
    { "y2D_", NULL, 0x2, "D", NULL, NULL,  },
    { "z2D_", NULL, 0x2, "D", NULL, NULL,  },
    { "inhom_", NULL, 0x1, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "locateableList_", NULL, 0x2, "Lorg.geogebra.common.kernel.LocateableList;", NULL, NULL,  },
    { "inhom2D_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpMatrix4x4_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", NULL, NULL,  },
    { "tmpCoordsLength3_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tempSet_", NULL, 0xa, "Ljava.util.TreeSet;", &OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_tempSet_, "Ljava/util/TreeSet<Lorg/geogebra/common/kernel/algos/AlgoElement;>;",  },
    { "moveMode_", NULL, 0x4, "I", NULL, NULL,  },
    { "moveNormalDirection_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "showUndefinedInAlgebraView__", "showUndefinedInAlgebraView", 0x2, "Z", NULL, NULL,  },
    { "setEuclidianVisibleBySetParentAlgorithm_", NULL, 0x2, "Z", NULL, NULL,  },
    { "tmpCoords1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpCoords3_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpWillingCoords_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "tmpWillingDirection_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "m_drawingMatrix_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.CoordMatrix4x4;", NULL, NULL,  },
    { "trace_", NULL, 0x2, "Z", NULL, NULL,  },
    { "incidenceList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
    { "nonIncidenceList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/geos/GeoElement;>;",  },
    { "animationValue_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D = { 2, "GeoPoint3D", "org.geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x1, 160, methods, 32, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, OrgGeogebraCommonKernelConstruction *c) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoVec4D_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, c, 4);
  self->willingCoords_ = nil;
  self->willingDirection_ = nil;
  self->x2D_ = 0;
  self->y2D_ = 0;
  self->z2D_ = 0;
  self->inhom_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  self->moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_TOOL_DEFAULT;
  self->showUndefinedInAlgebraView__ = YES;
  self->setEuclidianVisibleBySetParentAlgorithm_ = YES;
  self->m_drawingMatrix_ = nil;
  [self setDrawingMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity()];
  [self setCartesian3D];
  [self setUndefined];
  [self setIncidenceListWithJavaUtilArrayList:nil];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelConstruction *c) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, jdouble x, jdouble y, jdouble z, jdouble w) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoVec4D_initWithOrgGeogebraCommonKernelConstruction_withDouble_withDouble_withDouble_withDouble_(self, c, x, y, z, w);
  self->willingCoords_ = nil;
  self->willingDirection_ = nil;
  self->x2D_ = 0;
  self->y2D_ = 0;
  self->z2D_ = 0;
  self->inhom_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  self->moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_TOOL_DEFAULT;
  self->showUndefinedInAlgebraView__ = YES;
  self->setEuclidianVisibleBySetParentAlgorithm_ = YES;
  self->m_drawingMatrix_ = nil;
  [self setDrawingMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity()];
  [self setLabelWithNSString:label];
  [self setCartesian3D];
  [self setIncidenceListWithJavaUtilArrayList:nil];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelConstruction *c, NSString *label, jdouble x, jdouble y, jdouble z, jdouble w) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_withDouble_(self, c, label, x, y, z, w);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelMatrixCoords *v) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_withDouble_(self, c, label, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) getWithInt:1], [v getWithInt:2], [v getWithInt:3], [v getWithInt:4]);
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonKernelMatrixCoords *v) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelMatrixCoords_(self, c, label, v);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelPath> path) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoVec4D_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, c, 4);
  self->willingCoords_ = nil;
  self->willingDirection_ = nil;
  self->x2D_ = 0;
  self->y2D_ = 0;
  self->z2D_ = 0;
  self->inhom_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  self->moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_TOOL_DEFAULT;
  self->showUndefinedInAlgebraView__ = YES;
  self->setEuclidianVisibleBySetParentAlgorithm_ = YES;
  self->m_drawingMatrix_ = nil;
  [self setDrawingMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity()];
  [self setCartesian3D];
  [self setPathWithOrgGeogebraCommonKernelPath:path];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_(OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelPath> path) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelPath_(self, c, path);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelRegion_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelRegion> region) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoVec4D_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, c, 4);
  self->willingCoords_ = nil;
  self->willingDirection_ = nil;
  self->x2D_ = 0;
  self->y2D_ = 0;
  self->z2D_ = 0;
  self->inhom_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  self->moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_TOOL_DEFAULT;
  self->showUndefinedInAlgebraView__ = YES;
  self->setEuclidianVisibleBySetParentAlgorithm_ = YES;
  self->m_drawingMatrix_ = nil;
  [self setDrawingMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity()];
  [self setCartesian3D];
  [self setRegionWithOrgGeogebraCommonKernelRegion:region];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelRegion_(OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelRegion> region) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelRegion_(self, c, region);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, OrgGeogebraCommonKernelMatrixCoords *v) {
  [self setCoordsWithOrgGeogebraCommonKernelMatrixCoords:v withBoolean:YES];
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, jdouble x, jdouble y, jdouble z, jdouble w) {
  [self setWillingCoordsUndefined];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithOrgGeogebraCommonKernelMatrixCoords_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(x, y, z, w));
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_updateCoords(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self) {
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->v_)) getWithInt:4])) {
    self->isInfinite__ = YES;
    self->isDefined__ = !(JavaLangDouble_isNaNWithDouble_([self->v_ getWithInt:1]) || JavaLangDouble_isNaNWithDouble_([self->v_ getWithInt:2]) || JavaLangDouble_isNaNWithDouble_([self->v_ getWithInt:3]));
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->inhom_)) setXWithDouble:JavaLangDouble_NaN];
  }
  else {
    self->isInfinite__ = NO;
    self->isDefined__ = [self->v_ isDefined];
    if (self->isDefined__) {
      if ([self->v_ getWithInt:4] < 0) {
        for (jint i = 1; i <= 4; i++) [self->v_ setWithInt:i withDouble:([self->v_ getWithInt:i]) * (-1.0)];
      }
      if ([self->v_ getWithInt:4] == 1.0) {
        [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->inhom_)) setWithInt:1 withDouble:[self->v_ getWithInt:1]];
        [self->inhom_ setWithInt:2 withDouble:[self->v_ getWithInt:2]];
        [self->inhom_ setWithInt:3 withDouble:[self->v_ getWithInt:3]];
      }
      else {
        [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->inhom_)) setWithInt:1 withDouble:[self->v_ getWithInt:1] / [self->v_ getWithInt:4]];
        [self->inhom_ setWithInt:2 withDouble:[self->v_ getWithInt:2] / [self->v_ getWithInt:4]];
        [self->inhom_ setWithInt:3 withDouble:[self->v_ getWithInt:3] / [self->v_ getWithInt:4]];
      }
    }
    else {
      [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->inhom_)) setXWithDouble:JavaLangDouble_NaN];
    }
  }
  [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk([self getDrawingMatrix])) setOriginWithOrgGeogebraCommonKernelMatrixCoords:[self getCoords]];
}

OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getInhomCoords(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self) {
  return self->inhom_;
}

jboolean OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isPointOnPath(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self) {
  return self->path_ != nil;
}

OrgGeogebraCommonKernelPathParameter *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getPathParameter(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self) {
  if (self->pp_ == nil) self->pp_ = new_OrgGeogebraCommonKernelPathParameter_initWithDouble_(0);
  return self->pp_;
}

jboolean OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_hasRegion(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self) {
  return self->region_ != nil;
}

OrgGeogebraCommonKernelRegionParameters *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getRegionParameters(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self) {
  if (self->regionParameters_ == nil) self->regionParameters_ = new_OrgGeogebraCommonKernelRegionParameters_init();
  return self->regionParameters_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DGeosGeoVec4D_initWithOrgGeogebraCommonKernelConstruction_(self, [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoElement class])))) getConstruction]);
  self->willingCoords_ = nil;
  self->willingDirection_ = nil;
  self->x2D_ = 0;
  self->y2D_ = 0;
  self->z2D_ = 0;
  self->inhom_ = OrgGeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
  self->moveMode_ = OrgGeogebraCommonKernelKernelNDGeoPointND_MOVE_MODE_TOOL_DEFAULT;
  self->showUndefinedInAlgebraView__ = YES;
  self->setEuclidianVisibleBySetParentAlgorithm_ = YES;
  self->m_drawingMatrix_ = nil;
  [self setDrawingMatrixWithOrgGeogebraCommonKernelMatrixCoordMatrix4x4:OrgGeogebraCommonKernelMatrixCoordMatrix4x4_Identity()];
  [self setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoElement class])];
}

OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_(id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelKernelNDGeoPointND_(self, point);
  return self;
}

jboolean OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_isAbsoluteStartPoint(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self) {
  return [self isIndependent] && ![self isLabelSet];
}

JavaUtilTreeSet *OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_getTempSet() {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initialize();
  if (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_tempSet_ == nil) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_tempSet_ = new_JavaUtilTreeSet_init();
  }
  return OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_tempSet_;
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> phiValue, OrgGeogebraCommonKernelMatrixCoords *point) {
  jdouble phi = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(phiValue)) getDouble];
  jdouble cos = JavaLangMath_cosWithDouble_(phi);
  jdouble sin = JavaLangMath_sinWithDouble_(phi);
  jdouble x = [self getX];
  jdouble y = [self getY];
  jdouble z = [self getZ];
  jdouble w = [self getW];
  OrgGeogebraCommonKernelMatrixCoords *Q = point;
  jdouble qx = w * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Q)) getX];
  jdouble qy = w * [Q getY];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_setCoordsWithDouble_withDouble_withDouble_withDouble_(self, (x - qx) * cos + (qy - y) * sin + qx, (x - qx) * sin + (y - qy) * cos + qy, z, w);
}

void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_rotateWithOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *self, id<OrgGeogebraCommonKernelArithmeticNumberValue> phiValue, OrgGeogebraCommonKernelMatrixCoords *o1, OrgGeogebraCommonKernelMatrixCoords *vn) {
  [self rotateWithDouble:[((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(phiValue)) getDouble] withOrgGeogebraCommonKernelMatrixCoords:o1 withOrgGeogebraCommonKernelMatrixCoords:vn];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D)
