//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.java
//

#ifndef _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_H_
#define _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/transform/MirrorableAtPlane.h"
#include "org/geogebra/common/kernel/MatrixTransformable.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/geos/Dilateable.h"
#include "org/geogebra/common/kernel/geos/Traceable.h"
#include "org/geogebra/common/kernel/geos/Transformable.h"
#include "org/geogebra/common/kernel/geos/Translateable.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys1DInterface.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/RotateableND.h"

@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelMatrixCoordMatrix;
@class OrgGeogebraCommonKernelMatrixCoordSys;
@class OrgGeogebraCommonKernelMatrixCoords;
@protocol OrgGeogebraCommonKernelArithmeticNumberValue;
@protocol OrgGeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol OrgGeogebraCommonKernelKernelNDGeoDirectionND;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;

@interface OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D : OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D < OrgGeogebraCommonKernelPath, OrgGeogebraCommonKernelKernelNDGeoLineND, OrgGeogebraCommonKernelKernelNDGeoCoordSys, OrgGeogebraCommonKernelKernelNDGeoCoordSys1DInterface, OrgGeogebraCommonKernelGeosTranslateable, OrgGeogebraCommonKernelMatrixTransformable, OrgGeogebraCommonKernelGeosTraceable, OrgGeogebraCommonKernelKernelNDRotateableND, OrgGeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane, OrgGeogebraCommonKernelGeosTransformable, OrgGeogebraCommonKernelGeosDilateable > {
 @public
  OrgGeogebraCommonKernelMatrixCoordSys *coordsys_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint_;
  JavaUtilArrayList *pointsOnLine_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                                withBoolean:(jboolean)isIntersection;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)O
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)V;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)O
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)I;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)O
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)I
                                                withBoolean:(jboolean)isIntersection;

- (void)addPointOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)dilateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)rval
                       withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)S;

- (jdouble)distanceWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g;

- (OrgGeogebraCommonKernelMatrixCoords *)getCartesianEquationVectorWithOrgGeogebraCommonKernelMatrixCoordMatrix:(OrgGeogebraCommonKernelMatrixCoordMatrix *)m;

- (OrgGeogebraCommonKernelMatrixCoordSys *)getCoordSys;

- (OrgGeogebraCommonKernelMatrixCoords *)getDirectionForEquation;

- (OrgGeogebraCommonKernelMatrixCoords *)getDirectionInD3;

- (OrgGeogebraCommonKernelMatrixCoords *)getEndInhomCoords;

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getEndPoint;

- (OrgGeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (OrgGeogebraCommonKernelMatrixCoords *)getMainDirection;

- (jdouble)getParamOnLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P;

- (OrgGeogebraCommonKernelMatrixCoords *)getPointWithDouble:(jdouble)lambda;

- (OrgGeogebraCommonKernelMatrixCoords *)getPointInDWithInt:(jint)dimension
                                                 withDouble:(jdouble)lambda;

- (JavaUtilArrayList *)getPointsOnLine;

- (OrgGeogebraCommonKernelMatrixCoords *)getStartInhomCoords;

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getStartPoint;

- (jboolean)getTrace;

- (jdouble)getUnit;

- (jboolean)isDefined;

- (jboolean)isIntersection;

- (jboolean)isMatrixTransformable;

- (jboolean)isOnFullLineWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)p
                                                     withDouble:(jdouble)eps;

- (jboolean)isOnPathWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords
                                                 withDouble:(jdouble)eps;

- (jboolean)isOnPathWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)PI
                                                       withDouble:(jdouble)eps;

- (jboolean)isPath;

- (jboolean)isTraceable;

- (jboolean)isTranslateable;

- (jboolean)isValidCoordWithDouble:(jdouble)x;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22;

- (void)mirrorWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane;

- (void)mirrorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)pointChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P;

- (jboolean)respectLimitedPathWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords
                                                           withDouble:(jdouble)eps;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                  withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point;

- (void)rotateWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)S
             withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setCoordWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o
                withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v;

- (void)setCoordWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)geo;

- (void)setCoordWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)O
                withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)I;

- (void)setCoordFromPointsWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)a_O
                          withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)a_I;

- (void)setLineThroughWithDouble:(jdouble)pointX
                      withDouble:(jdouble)pointY;

- (void)setPointsOnLineWithJavaUtilArrayList:(JavaUtilArrayList *)points;

- (void)setToExplicit;

- (void)setToImplicit;

- (void)setToParametricWithNSString:(NSString *)parameter;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (void)translateWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v;

#pragma mark Protected

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)createWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, coordsys_, OrgGeogebraCommonKernelMatrixCoordSys *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, startPoint_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, endPoint_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, pointsOnLine_, JavaUtilArrayList *)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, jboolean isIntersection);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonKernelMatrixCoords *O, OrgGeogebraCommonKernelMatrixCoords *V);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelKernelNDGeoPointND> O, id<OrgGeogebraCommonKernelKernelNDGeoPointND> I);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelKernelNDGeoPointND> O, id<OrgGeogebraCommonKernelKernelNDGeoPointND> I, jboolean isIntersection);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D)

#endif // _OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_H_
