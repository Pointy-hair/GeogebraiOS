//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/commands/CmdArchimedeanSolid.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CmdArchimedeanSolid.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CommandProcessor.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/MyError.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid () {
 @public
  OrgGeogebraCommonKernelCommandsCommandsEnum *name_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid, name_, OrgGeogebraCommonKernelCommandsCommandsEnum *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
      withOrgGeogebraCommonKernelCommandsCommandsEnum:(OrgGeogebraCommonKernelCommandsCommandsEnum *)name {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelCommandsCommandsEnum_(self, kernel, name);
  return self;
}

- (IOSObjectArray *)processWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray newArrayWithLength:n];
  IOSObjectArray *arg;
  switch (n) {
    case 2:
    arg = [self resArgsWithOrgGeogebraCommonKernelArithmeticCommand:c];
    if ((*IOSBooleanArray_GetRef(ok, 0) = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoPoint]) && (*IOSBooleanArray_GetRef(ok, 1) = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint])) {
      IOSObjectArray *ret = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) ArchimedeanSolidWithNSStringArray:[c getLabels] withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelCommandsCommandsEnum:name_];
      return ret;
    }
    for (jint i = 0; i < 2; i++) {
      if (!IOSBooleanArray_Get(ok, i)) @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, i)];
    }
    break;
    case 3:
    arg = [self resArgsWithOrgGeogebraCommonKernelArithmeticCommand:c];
    if ((*IOSBooleanArray_GetRef(ok, 0) = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoPoint]) && (*IOSBooleanArray_GetRef(ok, 1) = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint])) {
      if ([OrgGeogebraCommonKernelKernelNDGeoDirectionND_class_() isInstance:IOSObjectArray_Get(arg, 2)]) {
        IOSObjectArray *ret = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) ArchimedeanSolidWithNSStringArray:[c getLabels] withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(OrgGeogebraCommonKernelKernelNDGeoDirectionND)) withOrgGeogebraCommonKernelCommandsCommandsEnum:name_];
        return ret;
      }
      if ([OrgGeogebraCommonKernelKernelNDGeoPointND_class_() isInstance:IOSObjectArray_Get(arg, 2)]) {
        IOSObjectArray *ret = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) ArchimedeanSolidWithNSStringArray:[c getLabels] withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelCommandsCommandsEnum:name_];
        return ret;
      }
      *IOSBooleanArray_GetRef(ok, 2) = NO;
    }
    for (jint i = 0; i < 3; i++) {
      if (!IOSBooleanArray_Get(ok, i)) @throw [self argErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, i)];
    }
    break;
  }
  @throw [self argNumErrWithOrgGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:withOrgGeogebraCommonKernelCommandsCommandsEnum:", "CmdArchimedeanSolid", NULL, 0x1, NULL, NULL },
    { "processWithOrgGeogebraCommonKernelArithmeticCommand:", "process", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, "Lorg.geogebra.common.main.MyError;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x2, "Lorg.geogebra.common.kernel.commands.Commands;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid = { 2, "CmdArchimedeanSolid", "org.geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelCommandsCommandsEnum_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid *self, OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonKernelCommandsCommandsEnum *name) {
  (void) OrgGeogebraCommonKernelCommandsCommandProcessor_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  self->name_ = name;
}

OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid *new_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelCommandsCommandsEnum_(OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonKernelCommandsCommandsEnum *name) {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid *self = [OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid alloc];
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelCommandsCommandsEnum_(self, kernel, name);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArchimedeanSolid)
