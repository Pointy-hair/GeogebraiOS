//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/commands/CmdArcSector3D.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartConicParameters3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartConicPoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CmdArcSector3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/commands/CmdArcSector.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                              withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_initWithOrgGeogebraCommonKernelKernel_withInt_(self, kernel, type);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)arcSectorWithNSString:(NSString *)label
                   withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)conic
                   withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)start
                   withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)end {
  if ([((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic)) isGeoElement3D]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartConicParameters3D *algo = [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartConicParameters3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withInt_(cons_, label, conic, start, end, type_) autorelease];
    return [algo getConicPart];
  }
  return [super arcSectorWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoConicND:conic withOrgGeogebraCommonKernelGeosGeoNumberValue:start withOrgGeogebraCommonKernelGeosGeoNumberValue:end];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)arcSectorWithNSString:(NSString *)label
                   withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)conic
                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)start
                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)end {
  if ([((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(start)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(end)) isGeoElement3D]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartConicPoints3D *algo = [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartConicPoints3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(cons_, label, conic, start, end, type_) autorelease];
    return [algo getConicPart];
  }
  return [super arcSectorWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoConicND:conic withOrgGeogebraCommonKernelKernelNDGeoPointND:start withOrgGeogebraCommonKernelKernelNDGeoPointND:end];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:withInt:", "CmdArcSector3D", NULL, 0x1, NULL, NULL },
    { "arcSectorWithNSString:withOrgGeogebraCommonKernelKernelNDGeoConicND:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelGeosGeoNumberValue:", "arcSector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "arcSectorWithNSString:withOrgGeogebraCommonKernelKernelNDGeoConicND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "arcSector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D = { 2, "CmdArcSector3D", "org.geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_initWithOrgGeogebraCommonKernelKernel_withInt_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D *self, OrgGeogebraCommonKernelKernel *kernel, jint type) {
  OrgGeogebraCommonKernelCommandsCmdArcSector_initWithOrgGeogebraCommonKernelKernel_withInt_(self, kernel, type);
}

OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D *new_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_initWithOrgGeogebraCommonKernelKernel_withInt_(OrgGeogebraCommonKernelKernel *kernel, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D *self = [OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_initWithOrgGeogebraCommonKernelKernel_withInt_(self, kernel, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D)
