//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/commands/CmdPolygon3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CmdPolygon3D.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CmdPolygon.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/MyError.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D ()

- (IOSObjectArray *)regularPolygonWithNSStringArray:(IOSObjectArray *)labels
      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
      withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)n
  withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)direction;

@end

__attribute__((unused)) static IOSObjectArray *OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_regularPolygonWithNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D *self, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelGeosGeoNumberValue> n, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> direction);

@implementation OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c
                                                                withInt:(jint)n
                         withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)arg {
  if (n == 4) {
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoPoint] && [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint] && [OrgGeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(arg, 2)] && [OrgGeogebraCommonKernelKernelNDGeoDirectionND_class_() isInstance:IOSObjectArray_Get(arg, 3)]) return OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_regularPolygonWithNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, [((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabels], (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)), (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)), (id<OrgGeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(OrgGeogebraCommonKernelGeosGeoNumberValue)), (id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) check_protocol_cast(IOSObjectArray_Get(arg, 3), @protocol(OrgGeogebraCommonKernelKernelNDGeoDirectionND)));
  }
  return [super processWithOrgGeogebraCommonKernelArithmeticCommand:c withInt:n withOrgGeogebraCommonKernelGeosGeoElementArray:arg];
}

- (jboolean)checkIs3DWithBoolean:(jboolean)is3D
withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (is3D) {
    return YES;
  }
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D];
}

- (IOSObjectArray *)polygonWithNSStringArray:(IOSObjectArray *)labels
withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                                 withBoolean:(jboolean)is3D {
  if (is3D) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) Polygon3DWithNSStringArray:labels withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:points];
  }
  return [super polygonWithNSStringArray:labels withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:points withBoolean:is3D];
}

- (IOSObjectArray *)regularPolygonWithNSStringArray:(IOSObjectArray *)labels
      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
      withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)n {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B)) isGeoElement3D]) {
    return OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_regularPolygonWithNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, labels, A, B, n, [((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getXOYPlane]);
  }
  return [super regularPolygonWithNSStringArray:labels withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelGeosGeoNumberValue:n];
}

- (IOSObjectArray *)regularPolygonWithNSStringArray:(IOSObjectArray *)labels
      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
      withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)n
  withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)direction {
  return OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_regularPolygonWithNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, labels, A, B, n, direction);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdPolygon3D", NULL, 0x1, NULL, NULL },
    { "processWithOrgGeogebraCommonKernelArithmeticCommand:withInt:withOrgGeogebraCommonKernelGeosGeoElementArray:", "process", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, "Lorg.geogebra.common.main.MyError;", NULL },
    { "checkIs3DWithBoolean:withOrgGeogebraCommonKernelGeosGeoElement:", "checkIs3D", "Z", 0x4, NULL, NULL },
    { "polygonWithNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withBoolean:", "polygon", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "regularPolygonWithNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:", "regularPolygon", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "regularPolygonWithNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "regularPolygon", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D = { 2, "CmdPolygon3D", "org.geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) OrgGeogebraCommonKernelCommandsCmdPolygon_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D *new_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D *self = [OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

IOSObjectArray *OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D_regularPolygonWithNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D *self, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelGeosGeoNumberValue> n, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> direction) {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernelA_)) getManager3D])) RegularPolygonWithNSStringArray:labels withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelArithmeticNumberValue:n withOrgGeogebraCommonKernelKernelNDGeoDirectionND:direction];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdPolygon3D)
