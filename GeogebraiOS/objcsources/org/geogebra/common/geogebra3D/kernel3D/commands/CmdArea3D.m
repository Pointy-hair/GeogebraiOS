//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/commands/CmdArea3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAreaPoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CmdArea3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoAreaPoints.h"
#include "org/geogebra/common/kernel/commands/CmdArea.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgoAreaPoints *)getAlgoAreaPointsWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                                                            withNSString:(NSString *)label
                                                      withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                                                                                             withBoolean:(jboolean)is3D {
  if (is3D) {
    return [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAreaPoints3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(cons, label, points) autorelease];
  }
  return [new_OrgGeogebraCommonKernelAlgosAlgoAreaPoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(cons, label, points) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdArea3D", NULL, 0x1, NULL, NULL },
    { "getAlgoAreaPointsWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withBoolean:", "getAlgoAreaPoints", "Lorg.geogebra.common.kernel.algos.AlgoAreaPoints;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D = { 2, "CmdArea3D", "org.geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D *self, OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelCommandsCmdArea_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D *new_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D *self = [OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdArea3D)
