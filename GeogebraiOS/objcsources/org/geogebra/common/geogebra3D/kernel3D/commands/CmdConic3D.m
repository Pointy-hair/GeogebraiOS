//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/commands/CmdConic3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CmdConic3D.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/commands/CmdConic.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)ConicWithNSString:(NSString *)label
              withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)arg {
  IOSObjectArray *points = [IOSObjectArray arrayWithLength:5 type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()];
  jboolean is3D = NO;
  for (jint i = 0; i < 5; i++) {
    IOSObjectArray_Set(points, i, (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(nil_chk(arg), i), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)));
    if (!is3D && [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(points, i))) isGeoElement3D]) {
      is3D = YES;
    }
  }
  if (is3D) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) Conic3DWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:points];
  }
  return [super ConicWithNSString:label withOrgGeogebraCommonKernelGeosGeoElementArray:arg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdConic3D", NULL, 0x1, NULL, NULL },
    { "ConicWithNSString:withOrgGeogebraCommonKernelGeosGeoElementArray:", "Conic", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D = { 2, "CmdConic3D", "org.geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D *self, OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonKernelCommandsCmdConic_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D *new_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D *self = [OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdConic3D)
