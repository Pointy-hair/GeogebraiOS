//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/commands/CmdMidpoint3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CmdMidpoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DPart.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CmdMidpoint.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "org/geogebra/common/main/MyError.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)process1WithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c
                               withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)arg {
  if (([arg isKindOfClass:[OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D class]]) && !([arg isKindOfClass:[OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart class]])) {
    IOSObjectArray *ret = [IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) CenterQuadricWithNSString:[((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel] withOrgGeogebraCommonKernelKernelNDGeoQuadricND:(OrgGeogebraCommonKernelKernelNDGeoQuadricND *) check_class_cast(arg, [OrgGeogebraCommonKernelKernelNDGeoQuadricND class])], [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  return [super process1WithOrgGeogebraCommonKernelArithmeticCommand:c withOrgGeogebraCommonKernelGeosGeoElement:arg];
}

- (IOSObjectArray *)segmentWithNSString:(NSString *)label
withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segment)) isGeoElement3D]) {
    IOSObjectArray *ret = [IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) MidpointWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoSegmentND:segment], [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  return [super segmentWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoSegmentND:segment];
}

- (IOSObjectArray *)conicWithNSString:(NSString *)label
withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)conic {
  if ([((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic)) isGeoElement3D]) {
    IOSObjectArray *ret = [IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) CenterWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoConicND:conic], [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  return [super conicWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoConicND:conic];
}

- (IOSObjectArray *)twoPointsWithNSString:(NSString *)label
withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2 {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p1)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p2)) isGeoElement3D]) {
    IOSObjectArray *ret = [IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) MidpointWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2], [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  return [super twoPointsWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:", "CmdMidpoint3D", NULL, 0x1, NULL, NULL },
    { "process1WithOrgGeogebraCommonKernelArithmeticCommand:withOrgGeogebraCommonKernelGeosGeoElement:", "process1", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, "Lorg.geogebra.common.main.MyError;", NULL },
    { "segmentWithNSString:withOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "segment", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "conicWithNSString:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "conic", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "twoPointsWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "twoPoints", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D = { 2, "CmdMidpoint3D", "org.geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D *self, OrgGeogebraCommonKernelKernel *kernel) {
  (void) OrgGeogebraCommonKernelCommandsCmdMidpoint_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
}

OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D_initWithOrgGeogebraCommonKernelKernel_(OrgGeogebraCommonKernelKernel *kernel) {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D_initWithOrgGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdMidpoint3D)
