//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/commands/CmdEllipseHyperbola3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicFociLength3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoEllipseFociLength3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoHyperbolaFociLength3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CmdEllipseHyperbola3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/commands/CommandProcessor3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/arithmetic/Command.h"
#include "org/geogebra/common/kernel/commands/CmdEllipseHyperbola.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/MyError.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D ()

- (OrgGeogebraCommonKernelGeosGeoElement *)ellipseHyperbolaWithNSString:(NSString *)label
                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b
                          withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)v
                      withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

@end

@implementation OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
                                              withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithOrgGeogebraCommonKernelKernel_withInt_(self, kernel, type);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)ellipseWithNSString:(NSString *)label
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b
                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)c {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(b)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(c)) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) EllipseHyperbola3DWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelKernelNDGeoPointND:c withInt:type_];
  }
  return [super ellipseWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelKernelNDGeoPointND:c];
}

- (IOSObjectArray *)process4WithOrgGeogebraCommonKernelArithmeticCommand:(OrgGeogebraCommonKernelArithmeticCommand *)c
                          withOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)arg
                                                        withBooleanArray:(IOSBooleanArray *)ok {
  if ((*IOSBooleanArray_GetRef(nil_chk(ok), 0) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 2) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 3) = ([OrgGeogebraCommonKernelKernelNDGeoDirectionND_class_() isInstance:IOSObjectArray_Get(arg, 3)]))) {
    IOSObjectArray *ret = [IOSObjectArray newArrayWithObjects:(id[]){ [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) EllipseHyperbola3DWithNSString:[((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel] withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) check_protocol_cast(IOSObjectArray_Get(arg, 3), @protocol(OrgGeogebraCommonKernelKernelNDGeoDirectionND)) withInt:type_] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  if ((*IOSBooleanArray_GetRef(ok, 0) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 2) = ([OrgGeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(arg, 2)])) && (*IOSBooleanArray_GetRef(ok, 3) = ([OrgGeogebraCommonKernelKernelNDGeoDirectionND_class_() isInstance:IOSObjectArray_Get(arg, 3)]))) {
    IOSObjectArray *ret = [IOSObjectArray newArrayWithObjects:(id[]){ [self ellipseHyperbolaWithNSString:[((OrgGeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel] withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND)) withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(OrgGeogebraCommonKernelGeosGeoNumberValue)) withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) check_protocol_cast(IOSObjectArray_Get(arg, 3), @protocol(OrgGeogebraCommonKernelKernelNDGeoDirectionND))] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  return nil;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)ellipseHyperbolaWithNSString:(NSString *)label
                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b
                          withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)v
                      withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  if (![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] && ![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(b)) isGeoElement3D] && orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getXOYPlane]) {
    return [super ellipseHyperbolaWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelGeosGeoNumberValue:v];
  }
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D *algo;
  if (type_ == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_HYPERBOLA) {
    algo = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoHyperbolaFociLength3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getConstruction], label, a, b, v, orientation);
  }
  else {
    algo = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseFociLength3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getConstruction], label, a, b, v, orientation);
  }
  return [((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D *) nil_chk(algo)) getConic];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)ellipseHyperbolaWithNSString:(NSString *)label
                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b
                          withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)v {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation = OrgGeogebraCommonGeogebra3DKernel3DCommandsCommandProcessor3D_getCurrentViewOrientationWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonMainApp_(kernelA_, app_);
  if (orientation == nil) {
    if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(b)) isGeoElement3D]) {
      orientation = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA_)) getXOYPlane];
    }
    else {
      return [super ellipseHyperbolaWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelGeosGeoNumberValue:v];
    }
  }
  return [self ellipseHyperbolaWithNSString:label withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelGeosGeoNumberValue:v withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:withInt:", "CmdEllipseHyperbola3D", NULL, 0x1, NULL, NULL },
    { "ellipseWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "ellipse", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "process4WithOrgGeogebraCommonKernelArithmeticCommand:withOrgGeogebraCommonKernelGeosGeoElementArray:withBooleanArray:", "process4", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, "Lorg.geogebra.common.main.MyError;", NULL },
    { "ellipseHyperbolaWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "ellipseHyperbola", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x12, NULL, NULL },
    { "ellipseHyperbolaWithNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:", "ellipseHyperbola", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D = { 2, "CmdEllipseHyperbola3D", "org.geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithOrgGeogebraCommonKernelKernel_withInt_(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D *self, OrgGeogebraCommonKernelKernel *kernel, jint type) {
  (void) OrgGeogebraCommonKernelCommandsCmdEllipseHyperbola_initWithOrgGeogebraCommonKernelKernel_withInt_(self, kernel, type);
}

OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D *new_OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithOrgGeogebraCommonKernelKernel_withInt_(OrgGeogebraCommonKernelKernel *kernel, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D *self = [OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithOrgGeogebraCommonKernelKernel_withInt_(self, kernel, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D)
