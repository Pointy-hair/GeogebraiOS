//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/transform/Transform3D.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/transform/Transform3D.h"
#include "org/geogebra/common/kernel/Transform.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DTransformTransform3D

- (instancetype)init {
  OrgGeogebraCommonGeogebra3DKernel3DTransformTransform3D_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DTransformTransform3D = { 2, "Transform3D", "org.geogebra.common.geogebra3D.kernel3D.transform", NULL, 0x401, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DTransformTransform3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DTransformTransform3D_init(OrgGeogebraCommonGeogebra3DKernel3DTransformTransform3D *self) {
  (void) OrgGeogebraCommonKernelTransform_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DTransformTransform3D)
