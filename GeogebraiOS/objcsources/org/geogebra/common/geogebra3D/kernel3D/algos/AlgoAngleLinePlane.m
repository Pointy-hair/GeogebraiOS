//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleLinePlane.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/euclidian/draw/DrawAngle.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleLinePlane.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoAngle3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoAngle.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoLineND> g_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p_;
  OrgGeogebraCommonKernelGeosGeoAngle *angle_;
  OrgGeogebraCommonKernelMatrixCoords *vn_, *o_, *v1_, *v2_;
}

- (instancetype)initWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane, g_, id<OrgGeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane, p_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane, angle_, OrgGeogebraCommonKernelGeosGeoAngle *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane, vn_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane, o_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane, v1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane, v2_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoAngle *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self, OrgGeogebraCommonKernelConstruction *cons);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, g, p);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(self, cons);
}

- (instancetype)initWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
           withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, g, p);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, label, g, p);
  return self;
}

- (OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *)copy__ {
  return [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g_)) copy__], [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(p_)) copy__]) autorelease];
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, p_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:angle_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)getAngle {
  return angle_;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"AngleBetweenAB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(p_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)initCoords {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_setAndConsume_o_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_compute(self);
}

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
withOrgGeogebraCommonEuclidianDrawDrawAngle:(OrgGeogebraCommonEuclidianDrawDrawAngle *)drawable {
  if (drawable == nil) {
    return NO;
  }
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o_)) isDefined]) {
    return NO;
  }
  OrgGeogebraCommonKernelMatrixCoords *ov = [((OrgGeogebraCommonEuclidianDrawDrawAngle *) nil_chk(drawable)) getCoordsInViewWithOrgGeogebraCommonKernelMatrixCoords:o_];
  if (![drawable inViewWithOrgGeogebraCommonKernelMatrixCoords:ov]) {
    return NO;
  }
  *IOSDoubleArray_GetRef(nil_chk(m), 0) = IOSDoubleArray_Get(nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ov)) get]), 0);
  *IOSDoubleArray_GetRef(m, 1) = IOSDoubleArray_Get(nil_chk([ov get]), 1);
  OrgGeogebraCommonKernelMatrixCoords *v1v = [drawable getCoordsInViewWithOrgGeogebraCommonKernelMatrixCoords:v2_];
  if (![drawable inViewWithOrgGeogebraCommonKernelMatrixCoords:v1v]) {
    return NO;
  }
  OrgGeogebraCommonKernelMatrixCoords *v2v = [drawable getCoordsInViewWithOrgGeogebraCommonKernelMatrixCoords:v1_];
  if (![drawable inViewWithOrgGeogebraCommonKernelMatrixCoords:v2v]) {
    return NO;
  }
  *IOSDoubleArray_GetRef(nil_chk(firstVec), 0) = IOSDoubleArray_Get(nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1v)) get]), 0);
  *IOSDoubleArray_GetRef(firstVec, 1) = IOSDoubleArray_Get(nil_chk([v1v get]), 1);
  return YES;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVn {
  return vn_;
}

- (jboolean)getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o_)) isDefined]) {
    return NO;
  }
  IOSObjectArray_Set(nil_chk(drawCoords), 0, o_);
  IOSObjectArray_Set(drawCoords, 1, v2_);
  IOSObjectArray_Set(drawCoords, 2, v1_);
  return YES;
}

- (void)dealloc {
  RELEASE_(g_);
  RELEASE_(p_);
  RELEASE_(angle_);
  RELEASE_(vn_);
  RELEASE_(o_);
  RELEASE_(v1_);
  RELEASE_(v2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:", "AlgoAngleLinePlane", NULL, 0x0, NULL, NULL },
    { "newGeoAngleWithOrgGeogebraCommonKernelConstruction:", "newGeoAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x14, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:", "AlgoAngleLinePlane", NULL, 0x2, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:", "AlgoAngleLinePlane", NULL, 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoAngleLinePlane;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getAngle", NULL, "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "updateDrawInfoWithDoubleArray:withDoubleArray:withOrgGeogebraCommonEuclidianDrawDrawAngle:", "updateDrawInfo", "Z", 0x1, NULL, NULL },
    { "getVn", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "g_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "p_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", NULL, NULL,  },
    { "angle_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoAngle;", NULL, NULL,  },
    { "vn_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "o_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane = { 2, "AlgoAngleLinePlane", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 13, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p) {
  OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_g_(self, g);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_p_(self, p);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_angle_(self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(self, cons));
  [self setInputOutput];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_compute(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, g, p);
  return self;
}

OrgGeogebraCommonKernelGeosGeoAngle *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self, OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelGeosGeoAngle *ret = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAngle3D_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  [ret setDrawableWithBoolean:YES];
  return ret;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p) {
  OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(g, [OrgGeogebraCommonKernelGeosGeoElement class])))) getConstruction], NO);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_g_(self, g);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_p_(self, p);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, g, p);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, g, p);
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(self->angle_)) setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, label, g, p);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane *self) {
  OrgGeogebraCommonKernelMatrixCoords *o2 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(self->g_)) getStartInhomCoords];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_v2_(self, [self->g_ getDirectionInD3]);
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *pMat = [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(self->p_)) getCoordSys])) getMatrixOrthonormal];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o2)) projectPlaneThruVWithOrgGeogebraCommonKernelMatrixCoordMatrix:pMat withOrgGeogebraCommonKernelMatrixCoords:self->v2_ withOrgGeogebraCommonKernelMatrixCoords:self->o_];
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->o_)) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:0];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoords *vx = [((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk(pMat)) getVx];
  OrgGeogebraCommonKernelMatrixCoords *vy = [pMat getVy];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_v1_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vx)) mulWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->v2_)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vx]])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vy)) mulWithDouble:[self->v2_ dotproductWithOrgGeogebraCommonKernelMatrixCoords:vy]]]);
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->v1_)) isZero]) {
    [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:JavaLangMath_PI / 2];
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_v1_(self, vx);
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_vn_(self, [vy mulWithDouble:-1]);
    return;
  }
  [self->v1_ calcNorm];
  jdouble l1 = [self->v1_ getNorm];
  [self->v2_ calcNorm];
  jdouble l2 = [self->v2_ getNorm];
  jdouble c = [self->v1_ dotproductWithOrgGeogebraCommonKernelMatrixCoords:self->v2_] / (l1 * l2);
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_acosWithDouble_(c)];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane_set_vn_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self->v2_ crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:self->v1_])) normalize]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLinePlane)
