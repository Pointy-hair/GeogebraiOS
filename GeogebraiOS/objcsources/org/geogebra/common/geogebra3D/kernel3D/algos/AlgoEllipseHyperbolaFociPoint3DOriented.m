//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoEllipseHyperbolaFociPoint3DOriented.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoEllipseHyperbolaFociPoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoEllipseHyperbolaFociPoint3DOriented.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented, orientation_, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, A, B, C, orientation, type);
  return self;
}

- (void)setOrientationWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  self->orientation_ = orientation;
}

- (void)setInput {
  input_ = [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(B_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 2, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(C_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 3, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(orientation_, [OrgGeogebraCommonKernelGeosGeoElement class]));
}

- (jboolean)setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)cs
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Ac
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Bc
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Cc {
  OrgGeogebraCommonKernelMatrixCoords *vn = [((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getDirectionInD3];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) isZero]) {
    return NO;
  }
  OrgGeogebraCommonKernelMatrixCoords *d1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Bc)) subWithOrgGeogebraCommonKernelMatrixCoords:Ac];
  if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d1)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn])) {
    return NO;
  }
  if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Cc)) subWithOrgGeogebraCommonKernelMatrixCoords:Ac])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn])) {
    return NO;
  }
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) addPointWithOrgGeogebraCommonKernelMatrixCoords:Ac];
  [cs addVectorWithOrgGeogebraCommonKernelMatrixCoords:d1];
  [cs addVectorWithOrgGeogebraCommonKernelMatrixCoords:[vn crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:d1]];
  return [cs makeOrthoMatrixWithBoolean:NO withBoolean:NO];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  if ([OrgGeogebraCommonKernelKernelNDGeoCoordSys2D_class_() isInstance:orientation_]) {
    if (type_ == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_HYPERBOLA) {
      return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"HyperbolaWithFociABPassingThroughCParallelToD" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
    }
    return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"EllipseWithFociABPassingThroughCParallelToD" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  }
  if (type_ == OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_HYPERBOLA) {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"HyperbolaWithFociABPassingThroughCPerpendicularToD" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
  }
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"EllipseWithFociABPassingThroughCPerpendicularToD" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:withInt:", "AlgoEllipseHyperbolaFociPoint3DOriented", NULL, 0x1, NULL, NULL },
    { "setOrientationWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "setOrientation", "V", 0x4, NULL, NULL },
    { "setInput", NULL, "V", 0x4, NULL, NULL },
    { "setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "setCoordSys", "Z", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "orientation_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoDirectionND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented = { 2, "AlgoEllipseHyperbolaFociPoint3DOriented", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, A, B, C, orientation, type);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, A, B, C, orientation, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3DOriented)
