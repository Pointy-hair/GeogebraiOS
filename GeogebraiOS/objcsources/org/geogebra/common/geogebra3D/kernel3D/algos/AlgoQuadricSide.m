//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricSide.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadric.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricComputer.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricComputerSide.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricSide.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DLimited.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DPart.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide () {
 @public
  jboolean isHelperAlgo_;
}

@end

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *)inputQuadric
                                                withBoolean:(jboolean)isHelperAlgo {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_withBoolean_(self, c, inputQuadric, isHelperAlgo);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *)inputQuadric {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(self, c, label, inputQuadric);
  return self;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *)getInputQuadric {
  return (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) check_class_cast([self getSecondInput], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited class]);
}

- (void)compute {
  if (![((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) isDefined]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setUndefined];
    return;
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setDefined];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setTypeWithInt:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) getType]];
  [((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer *) nil_chk([self getComputer])) setQuadricWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D:[self getQuadric] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) getOrigin] withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) getDirection] withDouble:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) getRadius]];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) check_class_cast([self getQuadric], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart class])))) setLimitsWithDouble:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) getBottomParameter] withDouble:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) getTopParameter]];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) check_class_cast([self getQuadric], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart class])))) calcArea];
}

- (void)remove {
  if (removed_) return;
  [super remove];
  if (isHelperAlgo_) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getInputQuadric])) remove];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirection {
  return nil;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_QuadricSide();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited:withBoolean:", "AlgoQuadricSide", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited:", "AlgoQuadricSide", NULL, 0x1, NULL, NULL },
    { "getInputQuadric", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3DLimited;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "getDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "isHelperAlgo_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide = { 2, "AlgoQuadricSide", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_withBoolean_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide *self, OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *inputQuadric, jboolean isHelperAlgo) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadric_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer_(self, c, inputQuadric, nil, new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerSide_init());
  self->isHelperAlgo_ = isHelperAlgo;
  [self setInputOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ inputQuadric } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()] withOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ [self getQuadric] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]];
  [self compute];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_withBoolean_(OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *inputQuadric, jboolean isHelperAlgo) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_withBoolean_(self, c, inputQuadric, isHelperAlgo);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *inputQuadric) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_withBoolean_(self, c, inputQuadric, NO);
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(OrgGeogebraCommonKernelConstruction *c, NSString *label, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *inputQuadric) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(self, c, label, inputQuadric);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide)
