//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentQuadric3D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentQuadric3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/Algos.h"
#include "org/geogebra/common/kernel/arithmetic/Equation.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/Inspecting.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/arithmetic/Polynomial.h"

#define OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_serialVersionUID 1LL

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D () {
 @public
  OrgGeogebraCommonKernelArithmeticEquation *equation_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> num_;
  IOSObjectArray *ev_;
  OrgGeogebraCommonKernelArithmeticExpressionNode *root_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *quadric_;
  IOSDoubleArray *coeffs_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D, equation_, OrgGeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D, num_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D, ev_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D, root_, OrgGeogebraCommonKernelArithmeticExpressionNode *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D, quadric_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D, coeffs_, IOSDoubleArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return OrgGeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_set_input_(self, [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) getGeoElementVariables]);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:quadric_];
  [self setDependencies];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *)getQuadric {
  return quadric_;
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
}

- (void)dealloc {
  RELEASE_(equation_);
  RELEASE_(num_);
  RELEASE_(ev_);
  RELEASE_(root_);
  RELEASE_(quadric_);
  RELEASE_(coeffs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticEquation:", "AlgoDependentQuadric3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getQuadric", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_serialVersionUID },
    { "equation_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "ev_", NULL, 0x2, "[Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", NULL, NULL,  },
    { "root_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
    { "quadric_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3D;", NULL, NULL,  },
    { "coeffs_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D = { 2, "AlgoDependentQuadric3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons, NO);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_setAndConsume_ev_(self, [IOSObjectArray newArrayWithLength:10 type:OrgGeogebraCommonKernelArithmeticExpressionValue_class_()]);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_set_equation_(self, equ);
  OrgGeogebraCommonKernelArithmeticPolynomial *lhs = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equ)) getNormalForm];
  IOSObjectArray_Set(self->ev_, 0, [((OrgGeogebraCommonKernelArithmeticPolynomial *) nil_chk(lhs)) getCoefficientWithNSString:@"xx"]);
  IOSObjectArray_Set(self->ev_, 1, [lhs getCoefficientWithNSString:@"yy"]);
  IOSObjectArray_Set(self->ev_, 2, [lhs getCoefficientWithNSString:@"zz"]);
  IOSObjectArray_Set(self->ev_, 3, [lhs getConstantCoefficient]);
  IOSObjectArray_Set(self->ev_, 4, [lhs getCoefficientWithNSString:@"xy"]);
  IOSObjectArray_Set(self->ev_, 5, [lhs getCoefficientWithNSString:@"xz"]);
  IOSObjectArray_Set(self->ev_, 6, [lhs getCoefficientWithNSString:@"yz"]);
  IOSObjectArray_Set(self->ev_, 7, [lhs getCoefficientWithNSString:@"x"]);
  IOSObjectArray_Set(self->ev_, 8, [lhs getCoefficientWithNSString:@"y"]);
  IOSObjectArray_Set(self->ev_, 9, [lhs getCoefficientWithNSString:@"z"]);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_setAndConsume_coeffs_(self, [IOSDoubleArray newArrayWithLength:10]);
  for (jint i = 0; i < 10; i++) {
    if (![((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) inspectWithOrgGeogebraCommonKernelArithmeticInspecting:OrgGeogebraCommonKernelArithmeticInspecting_get_dynamicGeosFinder_()]) {
      IOSObjectArray_Set(self->ev_, i, [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
    }
    id<OrgGeogebraCommonKernelArithmeticExpressionValue> eval = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(eval, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble];
  }
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) addToConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self withBoolean:NO];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_setAndConsume_quadric_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_compute(self);
  [self->quadric_ setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D *self) {
  @try {
    for (jint i = 0; i < 4; i++) {
      *IOSDoubleArray_GetRef(nil_chk(self->coeffs_), i) = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(self->ev_), i))) evaluateDouble];
    }
    for (jint i = 4; i < 10; i++) {
      *IOSDoubleArray_GetRef(nil_chk(self->coeffs_), i) = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(self->ev_), i))) evaluateDouble] / 2;
    }
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk(self->quadric_)) setMatrixWithDoubleArray:self->coeffs_];
  }
  @catch (JavaLangThrowable *e) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk(self->quadric_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentQuadric3D)
