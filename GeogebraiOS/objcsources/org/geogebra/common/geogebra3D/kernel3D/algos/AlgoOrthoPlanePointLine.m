//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlanePointLine.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlanePoint.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlanePointLine.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, point, line);
  return self;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getNormal {
  return [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast([self getSecondInput], @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND))))) getDirectionForEquation];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "AlgoOrthoPlanePointLine", NULL, 0x1, NULL, NULL },
    { "getNormal", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine = { 2, "AlgoOrthoPlanePointLine", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point, id<OrgGeogebraCommonKernelKernelNDGeoLineND> line) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, point, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(line, [OrgGeogebraCommonKernelGeosGeoElement class]));
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point, id<OrgGeogebraCommonKernelKernelNDGeoLineND> line) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, point, line);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointLine)
