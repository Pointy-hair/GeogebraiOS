//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectCS1D2D.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectCS1D2D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectCoordSys.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs1
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs2 {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, cs1, cs2);
  return self;
}

- (void)setCoordSysWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs1
                   withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs2 {
  if ([OrgGeogebraCommonKernelKernelNDGeoLineND_class_() isInstance:cs1]) [super setCoordSysWithOrgGeogebraCommonKernelGeosGeoElement:cs1 withOrgGeogebraCommonKernelGeosGeoElement:cs2];
  else [super setCoordSysWithOrgGeogebraCommonKernelGeosGeoElement:cs2 withOrgGeogebraCommonKernelGeosGeoElement:cs1];
}

- (void)compute {
  id<OrgGeogebraCommonKernelKernelNDGeoLineND> line = (id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast([self getCS1], @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND));
  id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> cs2D = (id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) check_protocol_cast([self getCS2], @protocol(OrgGeogebraCommonKernelKernelNDGeoCoordSys2D));
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension];
  OrgGeogebraCommonKernelMatrixCoords *d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([line getPointInDWithInt:3 withDouble:1])) getInhomCoordsInSameDimension])) subWithOrgGeogebraCommonKernelMatrixCoords:o];
  OrgGeogebraCommonKernelMatrixCoords *globalCoords = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  OrgGeogebraCommonKernelMatrixCoords *inPlaneCoords = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) projectPlaneThruVWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(cs2D)) getCoordSys])) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:d withOrgGeogebraCommonKernelMatrixCoords:globalCoords withOrgGeogebraCommonKernelMatrixCoords:inPlaneCoords];
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast([self getIntersection], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class]);
  if (-[inPlaneCoords getWithInt:3] > [line getMinParameter] - OrgGeogebraCommonKernelKernel_MAX_PRECISION && -[inPlaneCoords getWithInt:3] < [line getMaxParameter] + OrgGeogebraCommonKernelKernel_MAX_PRECISION && [cs2D isInRegionWithDouble:[inPlaneCoords getWithInt:1] withDouble:[inPlaneCoords getWithInt:2]]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(p)) setCoordsWithOrgGeogebraCommonKernelMatrixCoords:globalCoords];
  }
  else [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(p)) setUndefined];
}

+ (OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *)getConfigLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line
                                                                                                   withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_getConfigLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(line, plane);
}

+ (OrgGeogebraCommonKernelMatrixCoords *)getIntersectLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line
                                                          withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)cs2D
                                                                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)globalCoords
                                                                   withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_getIntersectLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(line, cs2D, globalCoords, inPlaneCoords);
}

- (NSString *)getIntersectionTypeString {
  return @"IntersectionPointOfAB";
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Intersect();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoIntersectCS1D2D", NULL, 0x1, NULL, NULL },
    { "setCoordSysWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "setCoordSys", "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getConfigLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "getConfigLinePlane", "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoIntersectCS1D2D$ConfigLinePlane;", 0x9, NULL, NULL },
    { "getIntersectLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "getIntersectLinePlane", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x9, NULL, NULL },
    { "getIntersectionTypeString", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x11, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoIntersectCS1D2D$ConfigLinePlane;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D = { 2, "AlgoIntersectCS1D2D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 7, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *cs1, OrgGeogebraCommonKernelGeosGeoElement *cs2) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, cs1, cs2);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *cs1, OrgGeogebraCommonKernelGeosGeoElement *cs2) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, cs1, cs2);
  return self;
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_getConfigLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(id<OrgGeogebraCommonKernelKernelNDGeoLineND> line, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> plane) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_initialize();
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getDirectionInD3])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(plane)) getDirectionInD3]])) {
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([line getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension])) subWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([plane getCoordSys])) getOrigin]])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:[plane getDirectionInD3]])) {
      return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_get_CONTAINED();
    }
    return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_get_PARALLEL();
  }
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_get_GENERAL();
}

OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_getIntersectLinePlaneWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(id<OrgGeogebraCommonKernelKernelNDGeoLineND> line, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> cs2D, OrgGeogebraCommonKernelMatrixCoords *globalCoords, OrgGeogebraCommonKernelMatrixCoords *inPlaneCoords) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_initialize();
  OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line)) getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension];
  OrgGeogebraCommonKernelMatrixCoords *d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([line getPointInDWithInt:3 withDouble:1])) getInhomCoordsInSameDimension])) subWithOrgGeogebraCommonKernelMatrixCoords:o];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o)) projectPlaneThruVWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(cs2D)) getCoordSys])) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:d withOrgGeogebraCommonKernelMatrixCoords:globalCoords withOrgGeogebraCommonKernelMatrixCoords:inPlaneCoords];
  if ([line respectLimitedPathWithDouble:-[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(inPlaneCoords)) getWithInt:3]] && [cs2D isInRegionWithDouble:[inPlaneCoords getWithInt:1] withDouble:[inPlaneCoords getWithInt:2]]) {
    return globalCoords;
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum)

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_values_[3];

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_values() {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_values_ count:3 type:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_values();
}

+ (OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initialize();
  for (int i = 0; i < 3; i++) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *e = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum class]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_GENERAL = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(@"GENERAL", 0);
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_PARALLEL = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(@"PARALLEL", 1);
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_CONTAINED = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(@"CONTAINED", 2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "GENERAL", "GENERAL", 0x4019, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoIntersectCS1D2D$ConfigLinePlane;", &OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_GENERAL, NULL,  },
    { "PARALLEL", "PARALLEL", 0x4019, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoIntersectCS1D2D$ConfigLinePlane;", &OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_PARALLEL, NULL,  },
    { "CONTAINED", "CONTAINED", 0x4019, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoIntersectCS1D2D$ConfigLinePlane;", &OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_CONTAINED, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoIntersectCS1D2D$ConfigLinePlane;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum = { 2, "ConfigLinePlane", "org.geogebra.common.geogebra3D.kernel3D.algos", "AlgoIntersectCS1D2D", 0x4019, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectCS1D2D$ConfigLinePlane;>;" };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCS1D2D_ConfigLinePlaneEnum)
