//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePlanes.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/draw/DrawAngle.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePlanes.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoAngle3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoAngle.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes () {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p_, *q_;
  OrgGeogebraCommonKernelGeosGeoAngle *angle_;
  OrgGeogebraCommonKernelMatrixCoords *vn_, *o_, *v1_, *v2_;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p
                    withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)q;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes, p_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes, q_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes, angle_, OrgGeogebraCommonKernelGeosGeoAngle *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes, vn_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes, o_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes, v1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes, v2_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoAngle *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self, OrgGeogebraCommonKernelConstruction *cons);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)q {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, p, q);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(self, cons);
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p
                    withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)q {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, p, q);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)p
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)q {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, label, p, q);
  return self;
}

- (OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *)copy__ {
  return new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(p_)) copy__], [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(q_)) copy__]);
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, p_);
  (void) IOSObjectArray_Set(input_, 1, q_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:angle_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)getAngle {
  return angle_;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"AngleBetweenAB" withNSString:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(p_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(q_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)initCoords {
  o_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_compute(self);
}

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
withOrgGeogebraCommonEuclidianDrawDrawAngle:(OrgGeogebraCommonEuclidianDrawDrawAngle *)drawable {
  return NO;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVn {
  return vn_;
}

- (jboolean)getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o_)) isDefined]) {
    return NO;
  }
  (void) IOSObjectArray_Set(nil_chk(drawCoords), 0, o_);
  (void) IOSObjectArray_Set(drawCoords, 1, v2_);
  (void) IOSObjectArray_Set(drawCoords, 2, v1_);
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:", "AlgoAnglePlanes", NULL, 0x0, NULL, NULL },
    { "newGeoAngleWithOrgGeogebraCommonKernelConstruction:", "newGeoAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x14, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:", "AlgoAnglePlanes", NULL, 0x2, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:", "AlgoAnglePlanes", NULL, 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoAnglePlanes;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getAngle", NULL, "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "updateDrawInfoWithDoubleArray:withDoubleArray:withOrgGeogebraCommonEuclidianDrawDrawAngle:", "updateDrawInfo", "Z", 0x1, NULL, NULL },
    { "getVn", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", NULL, NULL,  },
    { "q_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", NULL, NULL,  },
    { "angle_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoAngle;", NULL, NULL,  },
    { "vn_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "o_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes = { 2, "AlgoAnglePlanes", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 13, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q) {
  (void) OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->p_ = p;
  self->q_ = q;
  self->angle_ = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(self, cons);
  [self setInputOutput];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_compute(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, p, q);
  return self;
}

OrgGeogebraCommonKernelGeosGeoAngle *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_newGeoAngleWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self, OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonKernelGeosGeoAngle *ret = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAngle3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [ret setDrawableWithBoolean:YES];
  return ret;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q) {
  (void) OrgGeogebraCommonKernelAlgosAlgoAngle_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(p)) getConstruction], NO);
  self->p_ = p;
  self->q_ = q;
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, p, q);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, p, q);
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk(self->angle_)) setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *q) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_(self, cons, label, p, q);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes *self) {
  OrgGeogebraCommonKernelMatrixCoords *vn1 = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(self->p_)) getDirectionInD3];
  OrgGeogebraCommonKernelMatrixCoords *vn2 = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(self->q_)) getDirectionInD3];
  self->vn_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn1)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:vn2])) normalize];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->vn_)) isZero]) {
    [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:0];
    self->o_ = OrgGeogebraCommonKernelMatrixCoords_get_UNDEFINED_();
    return;
  }
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_acosWithDouble_([vn1 dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn2])];
  self->v2_ = [vn1 crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:self->vn_];
  self->v1_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn2)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:self->vn_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self->p_ getCoordSys])) getMatrixOrthonormal])) getOrigin])) projectPlaneThruVWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([self->q_ getCoordSys])) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:self->v2_ withOrgGeogebraCommonKernelMatrixCoords:self->o_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePlanes)
