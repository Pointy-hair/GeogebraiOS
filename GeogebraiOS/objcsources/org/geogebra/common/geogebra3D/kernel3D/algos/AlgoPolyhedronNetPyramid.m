//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetPyramid.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNet.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetPyramid.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedronNet.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid () {
 @public
  OrgGeogebraCommonKernelMatrixCoords *p1_;
}

- (void)createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)net
                                                                          withInt:(jint)index
                                                                          withInt:(jint)newBottomPointsLength;

- (void)setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)polygon;

- (void)updateSideWithInt:(jint)index
                  withInt:(jint)newBottomPointsLength;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid, p1_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net, jint index, jint newBottomPointsLength);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *polygon);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_updateSideWithInt_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self, jint index, jint newBottomPointsLength);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
   withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)v {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, p, v);
  return self;
}

- (jint)getPointLengthFromLabelsLengthWithInt:(jint)length {
  return (length - 2) / 6;
}

- (void)createNetWithInt:(jint)n {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net = [self getNet];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) adjustOutputSizeWithInt:n withBoolean:NO];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) adjustOutputSizeWithInt:n withBoolean:NO];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) startNewFace];
  for (jint i = 0; i < n; i++) {
    [net addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:[outputPointsBottom_ getElementWithInt:i]];
  }
  [net endCurrentFace];
  for (jint i = 0; i < n; i++) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(self, net, i, n);
  }
}

- (void)createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)net
                                                                          withInt:(jint)index
                                                                          withInt:(jint)newBottomPointsLength {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(self, net, index, newBottomPointsLength);
}

- (void)setOutputSideTopWithInt:(jint)n
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)polygon
                        withInt:(jint)step
withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)segments {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(self, polygon);
}

- (void)setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)polygon {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(self, polygon);
}

- (void)adjustOutputSizeWithInt:(jint)newBottomPointsLength {
  [super adjustOutputSizeWithInt:newBottomPointsLength];
  jint nOld = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) size];
  if (newBottomPointsLength > bottomPointsLength_) {
    for (jint i = bottomPointsLength_; i < newBottomPointsLength && i <= nOld; i++) {
      id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segmentBottom = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) getElementWithInt:i - 1];
      [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentBottom)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:[((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) getElementWithInt:i - 1] withOrgGeogebraCommonKernelKernelNDGeoPointND:[outputPointsBottom_ getElementWithInt:i]];
    }
    for (jint i = bottomPointsLength_ - 1; i < newBottomPointsLength && i < nOld; i++) {
      OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_updateSideWithInt_withInt_(self, i, newBottomPointsLength);
    }
  }
  if (newBottomPointsLength > nOld) {
    [outputPointsSide_ adjustOutputSizeWithInt:newBottomPointsLength withBoolean:NO];
    [outputPointsSide_ setLabelsWithNSStringArray:nil];
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net = [self getNet];
    for (jint i = nOld; i < newBottomPointsLength; i++) {
      OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(self, net, i, newBottomPointsLength);
      OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *polygon = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) createPolygonWithInt:i + 1];
      OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(self, polygon);
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) nil_chk(polygon)) getSegments]), 0), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
    }
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) setLabelsWithNSStringArray:nil];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) setLabelsWithNSStringArray:nil];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) setLabelsWithNSStringArray:nil];
    [self refreshOutput];
  }
  if (newBottomPointsLength > bottomPointsLength_) {
    [self updateBottomWithInt:newBottomPointsLength];
  }
  else if (newBottomPointsLength < bottomPointsLength_) {
    for (jint i = newBottomPointsLength; i < bottomPointsLength_; i++) {
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([outputPointsSide_ getElementWithInt:i])) setUndefined];
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) getElementWithInt:i])) setUndefined];
    }
    id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segmentBottom = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) getElementWithInt:newBottomPointsLength - 1];
    [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentBottom)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:[((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsBottom_)) getElementWithInt:newBottomPointsLength - 1] withOrgGeogebraCommonKernelKernelNDGeoPointND:[outputPointsBottom_ getElementWithInt:0]];
    [self updateBottomWithInt:newBottomPointsLength];
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_updateSideWithInt_withInt_(self, newBottomPointsLength - 1, newBottomPointsLength);
  }
  bottomPointsLength_ = newBottomPointsLength;
}

- (void)updateSideWithInt:(jint)index
                  withInt:(jint)newBottomPointsLength {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_updateSideWithInt_withInt_(self, index, newBottomPointsLength);
}

- (void)computeWithDouble:(jdouble)f
withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)bottomPolygon
withOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)points {
  if (p1_ == nil) {
    p1_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
  }
  OrgGeogebraCommonKernelMatrixCoords *topCoords = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(p_)) getTopPoint];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(topCoords)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(bottomPolygon)) getCoordSys])) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:p1_];
  jdouble d1 = [p_ getOrientedHeight];
  OrgGeogebraCommonKernelMatrixCoords *faceDirection = [bottomPolygon getDirectionInD3];
  if (d1 < 0) {
    f *= -1;
    d1 *= -1;
  }
  if ([bottomPolygon isConvexInverseDirection]) {
    f *= -1;
    faceDirection = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(faceDirection)) mulWithDouble:-1];
  }
  jint n = ((IOSObjectArray *) nil_chk(points))->size_;
  OrgGeogebraCommonKernelMatrixCoords *o2 = IOSObjectArray_Get(points, 0);
  for (jint i = 0; i < n; i++) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *wpoint = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsSide_)) getElementWithInt:i];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(wpoint)) setCoordsWithOrgGeogebraCommonKernelMatrixCoords:topCoords withBoolean:NO];
    OrgGeogebraCommonKernelMatrixCoords *o = o2;
    o2 = IOSObjectArray_Get(points, (i + 1) % n);
    OrgGeogebraCommonKernelMatrixCoords *vs = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o2)) subWithOrgGeogebraCommonKernelMatrixCoords:o])) normalized];
    [self rotateWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:wpoint withOrgGeogebraCommonKernelMatrixCoords:topCoords withOrgGeogebraCommonKernelMatrixCoords:p1_ withOrgGeogebraCommonKernelMatrixCoords:o withOrgGeogebraCommonKernelMatrixCoords:vs withDouble:f withOrgGeogebraCommonKernelMatrixCoords:faceDirection withDouble:d1 withBoolean:NO];
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) setAreaWithDouble:[p_ getArea]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoPolyhedronNetPyramid", NULL, 0x1, NULL, NULL },
    { "getPointLengthFromLabelsLengthWithInt:", "getPointLengthFromLabelsLength", "I", 0x4, NULL, NULL },
    { "createNetWithInt:", "createNet", "V", 0x4, NULL, NULL },
    { "createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet:withInt:withInt:", "createSideFace", "V", 0x2, NULL, NULL },
    { "setOutputSideTopWithInt:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:withInt:withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:", "setOutputSideTop", "V", 0x4, NULL, NULL },
    { "setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:", "setOutputSide", "V", 0x2, NULL, NULL },
    { "adjustOutputSizeWithInt:", "adjustOutputSize", "V", 0x4, NULL, NULL },
    { "updateSideWithInt:withInt:", "updateSide", "V", 0x2, NULL, NULL },
    { "computeWithDouble:withOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelMatrixCoordsArray:", "compute", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid = { 2, "AlgoPolyhedronNetPyramid", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, p, v);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, p, v);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_createSideFaceWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_withInt_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net, jint index, jint newBottomPointsLength) {
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) startNewFace];
  [net addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:[((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsBottom_)) getElementWithInt:index]];
  [net addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:[self->outputPointsBottom_ getElementWithInt:(index + 1) % newBottomPointsLength]];
  [net addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:[((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsSide_)) getElementWithInt:index]];
  [net endCurrentFace];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_setOutputSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *polygon) {
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygonsSide_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:polygon withBoolean:NO];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsSide_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) nil_chk(polygon)) getSegments]), 2), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
  [self->outputSegmentsSide_ addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([polygon getSegments]), 1), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid_updateSideWithInt_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid *self, jint index, jint newBottomPointsLength) {
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> pointBottom1 = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsBottom_)) getElementWithInt:index];
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> pointBottom2 = [self->outputPointsBottom_ getElementWithInt:(index + 1) % newBottomPointsLength];
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> pointSide = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsSide_)) getElementWithInt:index];
  id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segmentBottom = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsBottom_)) getElementWithInt:index];
  id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segmentSide1 = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsSide_)) getElementWithInt:2 * index];
  id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segmentSide2 = [self->outputSegmentsSide_ getElementWithInt:(2 * index + 1) % (2 * newBottomPointsLength)];
  [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentSide2)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:pointBottom2 withOrgGeogebraCommonKernelKernelNDGeoPointND:pointSide];
  [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segmentSide1)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:pointSide withOrgGeogebraCommonKernelKernelNDGeoPointND:pointBottom1];
  OrgGeogebraCommonKernelGeosGeoPolygon *polygon = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygonsSide_)) getElementWithInt:index];
  IOSObjectArray *points = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()];
  (void) IOSObjectArray_Set(points, 0, pointBottom1);
  (void) IOSObjectArray_Set(points, 1, pointBottom2);
  (void) IOSObjectArray_Set(points, 2, pointSide);
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:points];
  IOSObjectArray *s = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonKernelKernelNDGeoSegmentND_class_()];
  (void) IOSObjectArray_Set(s, 0, segmentBottom);
  (void) IOSObjectArray_Set(s, 1, segmentSide2);
  (void) IOSObjectArray_Set(s, 2, segmentSide1);
  [polygon setSegmentsWithOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:s];
  [polygon calcArea];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetPyramid)
