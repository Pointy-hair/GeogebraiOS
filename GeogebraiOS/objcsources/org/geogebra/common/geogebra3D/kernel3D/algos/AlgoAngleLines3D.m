//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleLines3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/euclidian/draw/DrawAngle.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleLines3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoAngle3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrixUtil.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoAngleLinesND.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D () {
 @public
  OrgGeogebraCommonKernelMatrixCoords *o_;
  OrgGeogebraCommonKernelMatrixCoords *v1_;
  OrgGeogebraCommonKernelMatrixCoords *v2_;
}

- (instancetype)initWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
                    withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D, o_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D, v1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D, v2_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *self, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, g, h, orientation);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, g, h);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelGeosGeoAngle *ret = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAngle3D_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  [ret setDrawableWithBoolean:YES];
  return ret;
}

- (void)compute {
  if (![((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self getg])) isDefined] || ![((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self geth])) isDefined]) {
    [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self getg])) getStartInhomCoords];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_set_v1_(self, [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self getg])) getDirectionInD3]);
  OrgGeogebraCommonKernelMatrixCoords *o2 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self geth])) getStartInhomCoords];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_set_v2_(self, [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self geth])) getDirectionInD3]);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_set_vn_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1_)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:v2_]);
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn_)) isDefined] || [vn_ isZero]) {
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([self getg], [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoRay] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([self geth], [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoRay] || OrgGeogebraCommonKernelKernel_isGreaterEqualWithDouble_withDouble_([v1_ dotproductWithOrgGeogebraCommonKernelMatrixCoords:v2_], 0)) {
      [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:0];
      OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_set_o_(self, OrgGeogebraCommonKernelMatrixCoords_get_UNDEFINED_());
      return;
    }
    [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:JavaLangMath_PI];
    if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o1)) equalsForKernelWithOrgGeogebraCommonKernelMatrixCoords:o2]) {
      OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_set_o_(self, [o1 copyVector]);
      [v1_ completeOrthonormalWithOrgGeogebraCommonKernelMatrixCoords:vn_];
    }
    else {
      OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_set_o_(self, OrgGeogebraCommonKernelMatrixCoords_get_UNDEFINED_());
      return;
    }
  }
  else {
    IOSObjectArray *points = OrgGeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(o1, v1_, o2, v2_);
    if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(points), 0))) equalsForKernelWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points, 1)]) {
      [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setUndefined];
      return;
    }
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_set_o_(self, IOSObjectArray_Get(points, 0));
    [vn_ normalize];
  }
  [v1_ calcNorm];
  jdouble l1 = [v1_ getNorm];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2_)) calcNorm];
  jdouble l2 = [v2_ getNorm];
  jdouble c = [v1_ dotproductWithOrgGeogebraCommonKernelMatrixCoords:v2_] / (l1 * l2);
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_acosWithDouble_(c)];
}

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
withOrgGeogebraCommonEuclidianDrawDrawAngle:(OrgGeogebraCommonEuclidianDrawDrawAngle *)drawable {
  if (drawable == nil) {
    return NO;
  }
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o_)) isDefined]) {
    return NO;
  }
  OrgGeogebraCommonKernelMatrixCoords *ov = [((OrgGeogebraCommonEuclidianDrawDrawAngle *) nil_chk(drawable)) getCoordsInViewWithOrgGeogebraCommonKernelMatrixCoords:o_];
  if (![drawable inViewWithOrgGeogebraCommonKernelMatrixCoords:ov]) {
    return NO;
  }
  *IOSDoubleArray_GetRef(nil_chk(m), 0) = IOSDoubleArray_Get(nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ov)) get]), 0);
  *IOSDoubleArray_GetRef(m, 1) = IOSDoubleArray_Get(nil_chk([ov get]), 1);
  OrgGeogebraCommonKernelMatrixCoords *v1v = [drawable getCoordsInViewWithOrgGeogebraCommonKernelMatrixCoords:v1_];
  if (![drawable inViewWithOrgGeogebraCommonKernelMatrixCoords:v1v]) {
    return NO;
  }
  OrgGeogebraCommonKernelMatrixCoords *v2v = [drawable getCoordsInViewWithOrgGeogebraCommonKernelMatrixCoords:v2_];
  if (![drawable inViewWithOrgGeogebraCommonKernelMatrixCoords:v2v]) {
    return NO;
  }
  *IOSDoubleArray_GetRef(nil_chk(firstVec), 0) = IOSDoubleArray_Get(nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1v)) get]), 0);
  *IOSDoubleArray_GetRef(firstVec, 1) = IOSDoubleArray_Get(nil_chk([v1v get]), 1);
  return YES;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVn {
  return vn_;
}

- (jboolean)getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o_)) isDefined]) {
    return NO;
  }
  IOSObjectArray_Set(nil_chk(drawCoords), 0, o_);
  IOSObjectArray_Set(drawCoords, 1, v1_);
  IOSObjectArray_Set(drawCoords, 2, v2_);
  return YES;
}

- (instancetype)initWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
                    withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, g, h);
  return self;
}

- (OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *)copy__ {
  return [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g_)) copy__], [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(h_)) copy__]) autorelease];
}

- (void)dealloc {
  RELEASE_(vn_);
  RELEASE_(o_);
  RELEASE_(v1_);
  RELEASE_(v2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAngleLines3D", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "AlgoAngleLines3D", NULL, 0x0, NULL, NULL },
    { "newGeoAngleWithOrgGeogebraCommonKernelConstruction:", "newGeoAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "updateDrawInfoWithDoubleArray:withDoubleArray:withOrgGeogebraCommonEuclidianDrawDrawAngle:", "updateDrawInfo", "Z", 0x1, NULL, NULL },
    { "getVn", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "AlgoAngleLines3D", NULL, 0x2, NULL, NULL },
    { "copy__", "copy", "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoAngleLines3D;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vn_", NULL, 0x4, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "o_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D = { 2, "AlgoAngleLines3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonKernelAlgosAlgoAngleLinesND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, g, h, orientation);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, g, h, orientation);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, g, h, nil);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, g, h);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *self, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  OrgGeogebraCommonKernelAlgosAlgoAngleLinesND_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, g, h);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D_initWithOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, g, h);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleLines3D)
