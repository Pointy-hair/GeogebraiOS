//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngularBisectorLines3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngularBisectorLines3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrixUtil.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoLineND> g_, h_;
  IOSObjectArray *bisector_;
  IOSObjectArray *wv_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *B_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D, g_, id<OrgGeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D, h_, id<OrgGeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D, bisector_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D, wv_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D, B_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, labels, g, h);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_AngularBisector();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ANGULAR_BISECTOR;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, g, h);
  return self;
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(g_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(h_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [super setOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:bisector_];
  [self setDependencies];
}

- (IOSObjectArray *)getLines {
  return bisector_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoLineND>)getg {
  return g_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoLineND>)geth {
  return h_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)getB {
  return B_;
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"AngleBisectorOfAB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(h_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "AlgoAngularBisectorLines3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "AlgoAngularBisectorLines3D", NULL, 0x0, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x1, NULL, NULL },
    { "getLines", NULL, "[Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", 0x1, NULL, NULL },
    { "getg", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoLineND;", 0x1, NULL, NULL },
    { "geth", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoLineND;", 0x1, NULL, NULL },
    { "getB", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "g_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "h_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "bisector_", NULL, 0x2, "[Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", NULL, NULL,  },
    { "wv_", NULL, 0x2, "[Lorg.geogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D = { 2, "AlgoAngularBisectorLines3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 11, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, g, h);
  OrgGeogebraCommonKernelGeosGeoElement_setLabelsWithNSStringArray_withOrgGeogebraCommonKernelGeosGeoElementArray_(labels, self->bisector_);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, labels, g, h);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->g_ = g;
  self->h_ = h;
  self->bisector_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_class_()];
  (void) IOSObjectArray_Set(self->bisector_, 0, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithOrgGeogebraCommonKernelConstruction_(cons));
  (void) IOSObjectArray_Set(self->bisector_, 1, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  self->wv_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoVector_class_()];
  (void) IOSObjectArray_Set(self->wv_, 0, new_OrgGeogebraCommonKernelGeosGeoVector_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(IOSObjectArray_Get(self->wv_, 0))) setCoordsWithDouble:0 withDouble:0 withDouble:0];
  (void) IOSObjectArray_Set(self->wv_, 1, new_OrgGeogebraCommonKernelGeosGeoVector_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [((OrgGeogebraCommonKernelGeosGeoVector *) nil_chk(IOSObjectArray_Get(self->wv_, 1))) setCoordsWithDouble:0 withDouble:0 withDouble:0];
  self->B_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(self->bisector_, 0))) setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->B_];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(self->bisector_, 1))) setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:self->B_];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_compute(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoLineND> g, id<OrgGeogebraCommonKernelKernelNDGeoLineND> h) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, g, h);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D *self) {
  OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self getg])) getStartInhomCoords];
  OrgGeogebraCommonKernelMatrixCoords *v1 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self getg])) getDirectionInD3];
  OrgGeogebraCommonKernelMatrixCoords *o2 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self geth])) getStartInhomCoords];
  OrgGeogebraCommonKernelMatrixCoords *v2 = [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk([self geth])) getDirectionInD3];
  OrgGeogebraCommonKernelMatrixCoords *vn = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:v2])) normalized];
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) isDefined]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(nil_chk(self->bisector_), 0))) setCoordWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o1)) addWithOrgGeogebraCommonKernelMatrixCoords:o2])) mulWithDouble:0.5] withOrgGeogebraCommonKernelMatrixCoords:v1];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(self->bisector_, 1))) setUndefined];
  }
  else {
    IOSObjectArray *points = OrgGeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(o1, v1, o2, v2);
    if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(points), 0))) equalsForKernelWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points, 1)]) {
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(nil_chk(self->bisector_), 0))) setUndefined];
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(self->bisector_, 1))) setUndefined];
    }
    else {
      v1 = [v1 copyVector];
      (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) normalize];
      v2 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) copyVector];
      (void) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) normalize];
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(nil_chk(self->bisector_), 0))) setCoordWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points, 0) withOrgGeogebraCommonKernelMatrixCoords:[v1 addWithOrgGeogebraCommonKernelMatrixCoords:v2]];
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(IOSObjectArray_Get(self->bisector_, 1))) setCoordWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points, 0) withOrgGeogebraCommonKernelMatrixCoords:[v1 subWithOrgGeogebraCommonKernelMatrixCoords:v2]];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngularBisectorLines3D)
