//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentPlane3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentPlane3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/Algos.h"
#include "org/geogebra/common/kernel/arithmetic/Equation.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/Inspecting.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/arithmetic/Polynomial.h"
#include "org/geogebra/common/plugin/Operation.h"

#define OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_serialVersionUID 1LL

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D () {
 @public
  OrgGeogebraCommonKernelArithmeticEquation *equation_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> num_;
  IOSObjectArray *ev_;
  OrgGeogebraCommonKernelArithmeticExpressionNode *root_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p_;
  OrgGeogebraCommonKernelArithmeticExpressionNode *lhs0z_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, equation_, OrgGeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, num_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, ev_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, root_, OrgGeogebraCommonKernelArithmeticExpressionNode *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, p_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, lhs0z_, OrgGeogebraCommonKernelArithmeticExpressionNode *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelArithmeticEquation:(OrgGeogebraCommonKernelArithmeticEquation *)equ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return OrgGeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_set_input_(self, [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) getGeoElementVariables]);
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:p_];
  [self setDependencies];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)getPlane {
  return p_;
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(self);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  if ([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(p_)) isLabelSet] || [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) containsZ]) {
    return [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl];
  }
  if (lhs0z_ == nil) {
    OrgGeogebraCommonKernelArithmeticExpressionNode *lhs = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) getLHS];
    OrgGeogebraCommonKernelArithmeticFunctionVariable *z = [new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_withNSString_(kernel_, @"z") autorelease];
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_setAndConsume_lhs0z_(self, new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, lhs, OrgGeogebraCommonPluginOperationEnum_get_PLUS(), [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonKernelArithmeticExpressionValue_withOrgGeogebraCommonPluginOperationEnum_withOrgGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [new_OrgGeogebraCommonKernelArithmeticExpressionNode_initWithOrgGeogebraCommonKernelKernel_withDouble_(kernel_, 0) autorelease], OrgGeogebraCommonPluginOperationEnum_get_MULTIPLY(), z) autorelease]));
  }
  return [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithOrgGeogebraCommonKernelStringTemplate:tpl withOrgGeogebraCommonKernelArithmeticExpressionNode:lhs0z_];
}

- (void)dealloc {
  RELEASE_(equation_);
  RELEASE_(num_);
  RELEASE_(ev_);
  RELEASE_(root_);
  RELEASE_(p_);
  RELEASE_(lhs0z_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticEquation:", "AlgoDependentPlane3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getPlane", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_serialVersionUID },
    { "equation_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "ev_", NULL, 0x2, "[Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", NULL, NULL,  },
    { "root_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
    { "p_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", NULL, NULL,  },
    { "lhs0z_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D = { 2, "AlgoDependentPlane3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_withBoolean_(self, cons, NO);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_setAndConsume_ev_(self, [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelArithmeticExpressionValue_class_()]);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_set_lhs0z_(self, nil);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_set_equation_(self, equ);
  OrgGeogebraCommonKernelArithmeticPolynomial *lhs = [((OrgGeogebraCommonKernelArithmeticEquation *) nil_chk(equ)) getNormalForm];
  IOSObjectArray_Set(self->ev_, 0, [((OrgGeogebraCommonKernelArithmeticPolynomial *) nil_chk(lhs)) getCoefficientWithNSString:@"x"]);
  IOSObjectArray_Set(self->ev_, 1, [lhs getCoefficientWithNSString:@"y"]);
  IOSObjectArray_Set(self->ev_, 2, [lhs getCoefficientWithNSString:@"z"]);
  IOSObjectArray_Set(self->ev_, 3, [lhs getConstantCoefficient]);
  for (jint i = 0; i < 4; i++) {
    if (![((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) inspectWithOrgGeogebraCommonKernelArithmeticInspecting:OrgGeogebraCommonKernelArithmeticInspecting_get_dynamicGeosFinder_()]) {
      IOSObjectArray_Set(self->ev_, i, [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
    }
    id<OrgGeogebraCommonKernelArithmeticExpressionValue> eval = [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<OrgGeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(eval, @protocol(OrgGeogebraCommonKernelArithmeticNumberValue))))) getDouble];
  }
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) addToConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:self withBoolean:NO];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_setAndConsume_p_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithOrgGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(self);
  [self->p_ setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelArithmeticEquation *equ) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self) {
  @try {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(self->p_)) setEquationWithDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(self->ev_), 0))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 1))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 2))) evaluateDouble] withDouble:[((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 3))) evaluateDouble]];
  }
  @catch (JavaLangThrowable *e) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(self->p_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D)
