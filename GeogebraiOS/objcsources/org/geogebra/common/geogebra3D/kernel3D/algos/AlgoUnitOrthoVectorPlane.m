//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoUnitOrthoVectorPlane.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoVectorPlane.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoUnitOrthoVectorPlane.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)plane {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, cons, label, plane);
  return self;
}

- (void)updateCoords {
  if ([plane_ isKindOfClass:[OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D class]]) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vCoords_)) setValuesWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(plane_)) getCoordSys])) getEquationVector] withInt:3];
    [vCoords_ normalize];
  }
  else {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(plane_)) getCoordSys])) getVz])) normalizedWithOrgGeogebraCommonKernelMatrixCoords:vCoords_];
  }
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_UnitOrthogonalVector();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "AlgoUnitOrthoVectorPlane", NULL, 0x0, NULL, NULL },
    { "updateCoords", NULL, "V", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane = { 2, "AlgoUnitOrthoVectorPlane", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> plane) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoVectorPlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, cons, label, plane);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> plane) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, cons, label, plane);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoUnitOrthoVectorPlane)
