//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPlaneCS2D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPlaneCS2D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> csInput_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D, csInput_, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)csInput {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, c, label, csInput);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
           withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)csInput {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, c, csInput);
  return self;
}

- (void)compute {
  OrgGeogebraCommonKernelMatrixCoordSys *coordsys = [((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(cs_)) getCoordSys];
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(csInput_, [OrgGeogebraCommonKernelGeosGeoElement class])))) isDefined]) {
    [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys)) setUndefined];
    return;
  }
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys)) setWithOrgGeogebraCommonKernelMatrixCoordSys:[((id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(csInput_)) getCoordSys]];
  if ([coordsys isDefined]) [coordsys makeEquationVector];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D>)getCoordSys {
  return cs_;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Plane();
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"PlaneContainingA" withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(csInput_, [OrgGeogebraCommonKernelGeosGeoElement class])))) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(cs_);
  RELEASE_(csInput_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "AlgoPlaneCS2D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D:", "AlgoPlaneCS2D", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getCoordSys", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoCoordSys2D;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cs_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoCoordSys2D;", NULL, NULL,  },
    { "csInput_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoCoordSys2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D = { 2, "AlgoPlaneCS2D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> csInput) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, c, csInput);
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(self->cs_, [OrgGeogebraCommonKernelGeosGeoElement class])))) setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(OrgGeogebraCommonKernelConstruction *c, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> csInput) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, c, label, csInput);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D *self, OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> csInput) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_set_csInput_(self, csInput);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_setAndConsume_cs_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithOrgGeogebraCommonKernelConstruction_(c));
  [self setInputOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(csInput, [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()] withOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(self->cs_, [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(OrgGeogebraCommonKernelConstruction *c, id<OrgGeogebraCommonKernelKernelNDGeoCoordSys2D> csInput) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, c, csInput);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneCS2D)
