//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConePointLineAngle.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConePointLineAngle.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadric.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricComputerCone.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricPointNumber.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"

__attribute__((unused)) static NSString *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_getPlainName(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)origin
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)axis
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)angle {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, label, origin, axis, angle);
  return self;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirection {
  id<OrgGeogebraCommonKernelKernelNDGeoLineND> axis = (id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast([self getSecondInput], @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND));
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(axis)) getPointInDWithInt:3 withDouble:1])) getInhomCoordsInSameDimension])) subWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([axis getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension]];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_getPlainName(self) withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getOrigin])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getSecondInput])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getNumber])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (NSString *)getPlainName {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_getPlainName(self);
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ConeInfinite();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoConePointLineAngle", NULL, 0x1, NULL, NULL },
    { "getDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getPlainName", NULL, "Ljava.lang.String;", 0x14, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle = { 2, "AlgoConePointLineAngle", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> origin, id<OrgGeogebraCommonKernelKernelNDGeoLineND> axis, id<OrgGeogebraCommonKernelArithmeticNumberValue> angle) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer_(self, c, label, origin, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(axis, [OrgGeogebraCommonKernelGeosGeoElement class]), angle, new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCone_init());
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *c, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> origin, id<OrgGeogebraCommonKernelKernelNDGeoLineND> axis, id<OrgGeogebraCommonKernelArithmeticNumberValue> angle) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, label, origin, axis, angle);
  return self;
}

NSString *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle_getPlainName(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle *self) {
  return @"ConeWithCenterAAxisParallelToBAngleC";
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConePointLineAngle)
