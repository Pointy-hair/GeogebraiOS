//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartCircle3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoCircle3DCenterPointPoint.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartCircle3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConicPart3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/LocusEquation.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/algos/AlgoConicPart.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/EquationElementInterface.h"
#include "org/geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicPartND.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> center_, startPoint_, endPoint_;
  OrgGeogebraCommonKernelPathParameter *paramP_, *paramQ_;
  OrgGeogebraCommonKernelMatrixCoords *p2d_;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)endPoint
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                    withInt:(jint)type;

- (void)setIncidence;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, center_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, startPoint_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, endPoint_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, paramP_, OrgGeogebraCommonKernelPathParameter *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, paramQ_, OrgGeogebraCommonKernelPathParameter *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D, p2d_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)endPoint
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)endPoint
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, center, startPoint, endPoint, orientation, type);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)endPoint
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, center, startPoint, endPoint, orientation, type);
  return self;
}

- (void)initCoords {
  p2d_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
}

- (void)setOrientationWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
}

- (void)setIncidence {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(self);
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getStartPoint {
  return startPoint_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getEndPoint {
  return endPoint_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getCenter {
  return center_;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch (type_) {
    case OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CircleArc();
    default:
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CircleSector();
  }
}

- (jint)getRelatedModeID {
  switch (type_) {
    case OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_ARC_THREE_POINTS;
    default:
    return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_SECTOR_THREE_POINTS;
  }
}

- (void)setInputOutput {
  [self setInput];
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:conicPart_];
  [self setDependencies];
}

- (void)setInput {
  [self setInputWithInt:3];
}

- (void)setInputWithInt:(jint)n {
  input_ = [IOSObjectArray newArrayWithLength:n type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(center_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(startPoint_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  (void) IOSObjectArray_Set(input_, 2, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(endPoint_, [OrgGeogebraCommonKernelGeosGeoElement class]));
}

- (void)semiCircleWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)center1
                  withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)v1 {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conicPart_)) setUndefined];
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(self);
}

- (void)setConicPartWithDouble:(jdouble)start
                    withDouble:(jdouble)end {
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conicPart_)) setWithOrgGeogebraCommonKernelGeosGeoElement:conic_];
  [((id<OrgGeogebraCommonKernelKernelNDGeoConicPartND>) check_protocol_cast(conicPart_, @protocol(OrgGeogebraCommonKernelKernelNDGeoConicPartND))) setParametersWithDouble:start withDouble:end withBoolean:[self getPositiveOrientation]];
}

- (jboolean)getPositiveOrientation {
  return YES;
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return OrgGeogebraCommonKernelLocusEquation_eqnCircleArcWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *)getConicPart {
  return (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *) check_class_cast([super getConicPart], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "AlgoConicPartCircle3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:withInt:", "AlgoConicPartCircle3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:withInt:", "AlgoConicPartCircle3D", NULL, 0x2, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "setOrientationWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "setOrientation", "V", 0x4, NULL, NULL },
    { "setIncidence", NULL, "V", 0x2, NULL, NULL },
    { "getStartPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getEndPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getCenter", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "setInput", NULL, "V", 0x4, NULL, NULL },
    { "setInputWithInt:", "setInput", "V", 0x4, NULL, NULL },
    { "semiCircleWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "semiCircle", "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setConicPartWithDouble:withDouble:", "setConicPart", "V", 0x4, NULL, NULL },
    { "getPositiveOrientation", NULL, "Z", 0x4, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lorg.geogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
    { "getConicPart", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoConicPart3D;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "center_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "startPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "endPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "paramP_", NULL, 0x2, "Lorg.geogebra.common.kernel.PathParameter;", NULL, NULL,  },
    { "paramQ_", NULL, 0x2, "Lorg.geogebra.common.kernel.PathParameter;", NULL, NULL,  },
    { "p2d_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D = { 2, "AlgoConicPartCircle3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 21, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, jint type) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, center, startPoint, endPoint, nil, type);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, center, startPoint, endPoint, orientation, type);
  [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, center, startPoint, endPoint, orientation, type);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  (void) OrgGeogebraCommonKernelAlgosAlgoConicPart_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, cons, type);
  self->center_ = center;
  self->startPoint_ = startPoint;
  self->endPoint_ = endPoint;
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DCenterPointPoint *algo = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DCenterPointPoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(cons, center, startPoint, endPoint);
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:algo];
  self->conic_ = [algo getCircle];
  [self setOrientationWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  self->paramP_ = new_OrgGeogebraCommonKernelPathParameter_init();
  self->paramQ_ = new_OrgGeogebraCommonKernelPathParameter_init();
  self->conicPart_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D_initWithOrgGeogebraCommonKernelConstruction_withInt_(cons, type);
  [self->conicPart_ addPointOnConicWithOrgGeogebraCommonKernelKernelNDGeoPointND:startPoint];
  [self setInputOutput];
  [self initCoords];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(self);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> center, id<OrgGeogebraCommonKernelKernelNDGeoPointND> startPoint, id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, center, startPoint, endPoint, orientation, type);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_setIncidence(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self) {
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->startPoint_)) addIncidenceWithOrgGeogebraCommonKernelGeosGeoElement:self->conicPart_ withBoolean:NO];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D *self) {
  OrgGeogebraCommonKernelMatrixCoordSys *cs = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conic_)) getCoordSys];
  if (![((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) isDefined]) {
    OrgGeogebraCommonKernelMatrixCoords *centerCoords = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->center_)) getInhomCoordsInD3];
    OrgGeogebraCommonKernelMatrixCoords *startCoords = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->startPoint_)) getInhomCoordsInD3];
    OrgGeogebraCommonKernelMatrixCoords *v1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(startCoords)) subWithOrgGeogebraCommonKernelMatrixCoords:centerCoords];
    OrgGeogebraCommonKernelMatrixCoords *v2 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->endPoint_)) getInhomCoordsInD3])) subWithOrgGeogebraCommonKernelMatrixCoords:centerCoords];
    if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(0, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:v2])) {
      [self semiCircleWithOrgGeogebraCommonKernelMatrixCoords:centerCoords withOrgGeogebraCommonKernelMatrixCoords:v1];
      return;
    }
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_setSinglePointWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_withOrgGeogebraCommonKernelMatrixCoords_((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) check_class_cast(self->conicPart_, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D class]), startCoords);
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *) check_class_cast(self->conicPart_, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D class])))) setParametersToSinglePoint];
    [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setTypeWithInt:OrgGeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_SINGLE_POINT];
    return;
  }
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->startPoint_)) getInhomCoordsInD3])) projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:[cs getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:self->p2d_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->p2d_)) setZWithDouble:1];
  [self->conic_ pointChangedWithOrgGeogebraCommonKernelMatrixCoords:self->p2d_ withOrgGeogebraCommonKernelPathParameter:self->paramP_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->endPoint_)) getInhomCoordsInD3])) projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:[cs getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:self->p2d_];
  [self->p2d_ setZWithDouble:1];
  [self->conic_ pointChangedWithOrgGeogebraCommonKernelMatrixCoords:self->p2d_ withOrgGeogebraCommonKernelPathParameter:self->paramQ_];
  [self setConicPartWithDouble:((OrgGeogebraCommonKernelPathParameter *) nil_chk(self->paramP_))->t_ withDouble:((OrgGeogebraCommonKernelPathParameter *) nil_chk(self->paramQ_))->t_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircle3D)
