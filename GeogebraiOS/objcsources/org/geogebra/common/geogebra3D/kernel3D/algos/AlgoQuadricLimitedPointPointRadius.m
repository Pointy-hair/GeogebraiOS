//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricLimitedPointPointRadius.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricLimitedPointPointRadius.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricSide.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DLimited.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DPart.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Transform.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoRadius.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> origin_, secondPoint_;
  id<OrgGeogebraCommonKernelArithmeticNumberValue> radius_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *side_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *quadric_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius, origin_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius, secondPoint_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius, radius_, id<OrgGeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius, side_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius, quadric_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)origin
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)secondPoint
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withInt_(self, c, labels, origin, secondPoint, r, type);
  return self;
}

- (void)setOutput {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)createEnds {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)compute {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(origin_, [OrgGeogebraCommonKernelGeosGeoElement class])))) isDefined] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(origin_)) isInfinite] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(secondPoint_, [OrgGeogebraCommonKernelGeosGeoElement class])))) isDefined] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(secondPoint_)) isInfinite] || ![((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(radius_)) isDefined]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getQuadric])) setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoords *o = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(origin_)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *o2 = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(secondPoint_)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *d = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o2)) subWithOrgGeogebraCommonKernelMatrixCoords:o];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getQuadric])) setUndefined];
    return;
  }
  jdouble r = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(radius_)) getDouble];
  [d calcNorm];
  jdouble altitude = [d getNorm];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk(quadric_)) setDefined];
  [self setQuadricWithOrgGeogebraCommonKernelMatrixCoords:o withOrgGeogebraCommonKernelMatrixCoords:o2 withOrgGeogebraCommonKernelMatrixCoords:[d mulWithDouble:1 / altitude] withDouble:r withDouble:0 withDouble:altitude];
  [quadric_ calcVolume];
}

- (void)setQuadricWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o1
                  withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)o2
                  withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)d
                                               withDouble:(jdouble)r
                                               withDouble:(jdouble)min
                                               withDouble:(jdouble)max {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *)getQuadric {
  return quadric_;
}

- (OrgGeogebraCommonKernelAlgosAlgoElement *)getTransformedAlgoWithNSStringArray:(IOSObjectArray *)labels
                                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2
                                       withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)r {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSObjectArray *)getTransformedOutputWithOrgGeogebraCommonKernelTransform:(OrgGeogebraCommonKernelTransform *)t {
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> p1 = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelTransform *) nil_chk(t)) transformWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(origin_, [OrgGeogebraCommonKernelGeosGeoElement class]) withNSString:OrgGeogebraCommonKernelTransform_transformedGeoLabelWithOrgGeogebraCommonKernelGeosGeoElement_((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(origin_, [OrgGeogebraCommonKernelGeosGeoElement class]))]), 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> p2 = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(nil_chk([t transformWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(secondPoint_, [OrgGeogebraCommonKernelGeosGeoElement class]) withNSString:OrgGeogebraCommonKernelTransform_transformedGeoLabelWithOrgGeogebraCommonKernelGeosGeoElement_((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(secondPoint_, [OrgGeogebraCommonKernelGeosGeoElement class]))]), 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
  OrgGeogebraCommonKernelTransform_setVisualStyleForTransformationsWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(origin_, [OrgGeogebraCommonKernelGeosGeoElement class]), (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoElement class]));
  OrgGeogebraCommonKernelTransform_setVisualStyleForTransformationsWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(secondPoint_, [OrgGeogebraCommonKernelGeosGeoElement class]), (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoElement class]));
  OrgGeogebraCommonKernelGeosGeoNumeric *r = [(new_OrgGeogebraCommonKernelAlgosAlgoRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(self->cons_, nil, [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getQuadric])) getBottom])) getRadius];
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(r)) setAuxiliaryObjectWithBoolean:YES];
  IOSObjectArray *output = [self getOutput];
  IOSObjectArray *labels = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(output))->size_ type:NSString_class_()];
  for (jint i = 0; i < output->size_; i++) {
    (void) IOSObjectArray_Set(labels, i, OrgGeogebraCommonKernelTransform_transformedGeoLabelWithOrgGeogebraCommonKernelGeosGeoElement_(IOSObjectArray_Get(output, i)));
  }
  OrgGeogebraCommonKernelAlgosAlgoElement *algo = [self getTransformedAlgoWithNSStringArray:labels withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelGeosGeoNumeric:r];
  IOSObjectArray *ret = [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) getOutput];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(ret))->size_; i++) {
    OrgGeogebraCommonKernelTransform_setVisualStyleForTransformationsWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(IOSObjectArray_Get(output, i), IOSObjectArray_Get(ret, i));
  }
  [algo update];
  return ret;
}

- (void)update {
  if (stopUpdateCascade_) {
    return;
  }
  [self compute];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk(quadric_)) update];
  if (![((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getQuadric])) isLabelSet]) {
    [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk([((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getQuadric])) getBottom])) getParentAlgorithm])) update];
    [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getQuadric])) getTop])) getParentAlgorithm])) update];
    [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *) nil_chk([self getQuadric])) getSide])) getParentAlgorithm])) update];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:withInt:", "AlgoQuadricLimitedPointPointRadius", NULL, 0x1, NULL, NULL },
    { "setOutput", NULL, "V", 0x404, NULL, NULL },
    { "createEnds", NULL, "V", 0x404, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "setQuadricWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:", "setQuadric", "V", 0x404, NULL, NULL },
    { "getQuadric", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3DLimited;", 0x1, NULL, NULL },
    { "getTransformedAlgoWithNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumeric:", "getTransformedAlgo", "Lorg.geogebra.common.kernel.algos.AlgoElement;", 0x404, NULL, NULL },
    { "getTransformedOutputWithOrgGeogebraCommonKernelTransform:", "getTransformedOutput", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "update", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "origin_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "secondPoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "radius_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "side_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3DPart;", NULL, NULL,  },
    { "bottom_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoConic3D;", NULL, NULL,  },
    { "top_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoConic3D;", NULL, NULL,  },
    { "quadric_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3DLimited;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius = { 2, "AlgoQuadricLimitedPointPointRadius", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 9, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, id<OrgGeogebraCommonKernelKernelNDGeoPointND> origin, id<OrgGeogebraCommonKernelKernelNDGeoPointND> secondPoint, id<OrgGeogebraCommonKernelArithmeticNumberValue> r, jint type) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->origin_ = origin;
  self->secondPoint_ = secondPoint;
  self->radius_ = r;
  self->quadric_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithOrgGeogebraCommonKernelConstruction_(c);
  [self->quadric_ setTypeWithInt:type];
  self->input_ = [IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(origin, [OrgGeogebraCommonKernelGeosGeoElement class]), (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(secondPoint, [OrgGeogebraCommonKernelGeosGeoElement class]), (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(r, [OrgGeogebraCommonKernelGeosGeoElement class]) } count:3 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(origin, [OrgGeogebraCommonKernelGeosGeoElement class])))) addAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(secondPoint, [OrgGeogebraCommonKernelGeosGeoElement class])))) addAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(r, [OrgGeogebraCommonKernelGeosGeoElement class])))) addAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  [self->quadric_ setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(self->cons_)) addToAlgorithmListWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  [self compute];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide *algo = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricSide_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_withBoolean_(self->cons_, self->quadric_, YES);
  [self->cons_ removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:algo];
  self->side_ = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *) check_class_cast([algo getQuadric], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart class]);
  [self->quadric_ setSideWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart:self->side_];
  [self createEnds];
  [self->quadric_ setBottomTopWithOrgGeogebraCommonKernelKernelNDGeoConicND:self->bottom_ withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D:self->top_];
  [self setOutput];
  [self->quadric_ initLabelsIncludingBottomWithNSStringArray:labels];
  [self->quadric_ updatePartsVisualStyle];
  [self update];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricLimitedPointPointRadius)
