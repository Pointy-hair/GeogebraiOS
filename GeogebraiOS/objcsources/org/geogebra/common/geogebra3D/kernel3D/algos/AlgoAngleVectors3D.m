//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleVectors3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleVectors3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoAngle3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoAngle.h"
#include "org/geogebra/common/kernel/algos/AlgoAngleVectorsND.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoVectorND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D () {
 @public
  OrgGeogebraCommonKernelMatrixCoords *o_;
  OrgGeogebraCommonKernelMatrixCoords *v1_;
  OrgGeogebraCommonKernelMatrixCoords *v2_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D, o_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D, v1_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D, v2_, OrgGeogebraCommonKernelMatrixCoords *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
             withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v
             withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)w {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, v, w);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
             withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v
             withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)w
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, orientation);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelGeosGeoAngle *ret = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAngle3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [ret setDrawableWithBoolean:YES];
  return ret;
}

- (void)compute {
  v1_ = [((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk([self getv])) getCoordsInD3];
  v2_ = [((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk([self getw])) getCoordsInD3];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v1_)) calcNorm];
  jdouble l1 = [v1_ getNorm];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2_)) calcNorm];
  jdouble l2 = [v2_ getNorm];
  jdouble c = [v1_ dotproductWithOrgGeogebraCommonKernelMatrixCoords:v2_] / (l1 * l2);
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_acosWithDouble_(c)];
  vn_ = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_forceNormalVectorWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(v1_, v2_);
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> start = [((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk([self getv])) getStartPoint];
  if (OrgGeogebraCommonKernelAlgosAlgoAngle_centerIsNotDrawableWithOrgGeogebraCommonKernelKernelNDGeoPointND_(start)) {
    o_ = OrgGeogebraCommonKernelMatrixCoords_get_UNDEFINED_();
  }
  else {
    o_ = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(start)) getInhomCoordsInD3];
  }
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVn {
  return vn_;
}

- (jboolean)getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o_)) isDefined]) {
    return NO;
  }
  (void) IOSObjectArray_Set(nil_chk(drawCoords), 0, o_);
  (void) IOSObjectArray_Set(drawCoords, 1, v1_);
  (void) IOSObjectArray_Set(drawCoords, 2, v2_);
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoVectorND:", "AlgoAngleVectors3D", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAngleVectors3D", NULL, 0x0, NULL, NULL },
    { "newGeoAngleWithOrgGeogebraCommonKernelConstruction:", "newGeoAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getVn", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vn_", NULL, 0x4, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "o_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v1_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D = { 2, "AlgoAngleVectors3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> v, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> w) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, nil);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> v, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> w) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, v, w);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> v, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> w, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  (void) OrgGeogebraCommonKernelAlgosAlgoAngleVectorsND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, orientation);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> v, id<OrgGeogebraCommonKernelKernelNDGeoVectorND> w, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoVectorND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, v, w, orientation);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleVectors3D)
