//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoEllipseHyperbolaFociPoint3D.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoEllipseHyperbolaFociPoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoEllipseHyperbolaFociPointND.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *A2d_, *B2d_, *C2d_;
  OrgGeogebraCommonKernelMatrixCoords *project_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D, A2d_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D, B2d_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D, C2d_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D, project_, OrgGeogebraCommonKernelMatrixCoords *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, A, B, C, orientation, type);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, A, B, C, type);
  return self;
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)newGeoConicWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *ret = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [ret setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:new_OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(2)];
  return ret;
}

- (void)setInputOutput {
  [super setInputOutput];
  A2d_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_);
  B2d_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_);
  C2d_ = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_);
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getA2d {
  return A2d_;
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getB2d {
  return B2d_;
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getC2d {
  return C2d_;
}

- (jboolean)setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:(OrgGeogebraCommonKernelMatrixCoordSys *)cs
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Ac
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Bc
                         withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)Cc {
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) addPointWithOrgGeogebraCommonKernelMatrixCoords:Ac];
  [cs addPointWithOrgGeogebraCommonKernelMatrixCoords:Bc];
  [cs addPointWithOrgGeogebraCommonKernelMatrixCoords:Cc];
  return [cs makeOrthoMatrixWithBoolean:NO withBoolean:NO];
}

- (void)compute {
  OrgGeogebraCommonKernelMatrixCoordSys *cs = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) getCoordSys];
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) resetCoordSys];
  OrgGeogebraCommonKernelMatrixCoords *Ac = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *Bc = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *Cc = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getInhomCoordsInD3];
  if (![self setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:cs withOrgGeogebraCommonKernelMatrixCoords:Ac withOrgGeogebraCommonKernelMatrixCoords:Bc withOrgGeogebraCommonKernelMatrixCoords:Cc]) {
    [conic_ setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *matrix = [cs getMatrixOrthonormal];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Ac)) projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrix withOrgGeogebraCommonKernelMatrixCoords:project_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A2d_)) setCoordsWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(project_)) getX] withDouble:[project_ getY] withDouble:[project_ getW]];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Bc)) projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrix withOrgGeogebraCommonKernelMatrixCoords:project_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(B2d_)) setCoordsWithDouble:[project_ getX] withDouble:[project_ getY] withDouble:[project_ getW]];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Cc)) projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrix withOrgGeogebraCommonKernelMatrixCoords:project_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(C2d_)) setCoordsWithDouble:[project_ getX] withDouble:[project_ getY] withDouble:[project_ getW]];
  [super compute];
}

- (void)initCoords {
  project_ = new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:withInt:", "AlgoEllipseHyperbolaFociPoint3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "AlgoEllipseHyperbolaFociPoint3D", NULL, 0x1, NULL, NULL },
    { "newGeoConicWithOrgGeogebraCommonKernelConstruction:", "newGeoConic", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getA2d", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x4, NULL, NULL },
    { "getB2d", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x4, NULL, NULL },
    { "getC2d", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x4, NULL, NULL },
    { "setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:", "setCoordSys", "Z", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A2d_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "B2d_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "C2d_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "project_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D = { 2, "AlgoEllipseHyperbolaFociPoint3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  (void) OrgGeogebraCommonKernelAlgosAlgoEllipseHyperbolaFociPointND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, A, B, C, orientation, type);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, A, B, C, orientation, type);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, jint type) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_withInt_(self, cons, label, A, B, C, nil, type);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, A, B, C, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseHyperbolaFociPoint3D)
