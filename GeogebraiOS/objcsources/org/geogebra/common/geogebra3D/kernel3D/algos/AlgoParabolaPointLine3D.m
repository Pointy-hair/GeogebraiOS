//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoParabolaPointLine3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoParabolaPointLine3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/LocusEquation.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoParabolaPointLineND.h"
#include "org/geogebra/common/kernel/algos/EquationElementInterface.h"
#include "org/geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)F
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, F, l);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)F
               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, F, l);
  return self;
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)newGeoConicWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *ret = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  [ret setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:[new_OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(2) autorelease]];
  return ret;
}

- (void)compute {
  OrgGeogebraCommonKernelMatrixCoords *Fc = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(F_)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *lo = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(l_)) getStartInhomCoords])) getInhomCoordsInSameDimension];
  OrgGeogebraCommonKernelMatrixCoords *ld = [l_ getDirectionInD3];
  OrgGeogebraCommonKernelMatrixCoordSys *cs = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(parabola_)) getCoordSys];
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) resetCoordSys];
  [cs addPointWithOrgGeogebraCommonKernelMatrixCoords:Fc];
  [cs addVectorWithOrgGeogebraCommonKernelMatrixCoords:ld];
  [cs addPointWithOrgGeogebraCommonKernelMatrixCoords:lo];
  if (![cs makeOrthoMatrixWithBoolean:NO withBoolean:NO]) {
    [parabola_ setUndefined];
    return;
  }
  jdouble y0 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk([cs getNormalProjectionWithOrgGeogebraCommonKernelMatrixCoords:lo]), 1))) getY];
  [parabola_ setParabolaWithDouble:y0];
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<OrgGeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                         withOrgGeogebraCommonKernelAlgosEquationScopeInterface:(id<OrgGeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return OrgGeogebraCommonKernelLocusEquation_eqnParabolaPointLineWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "AlgoParabolaPointLine3D", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "AlgoParabolaPointLine3D", NULL, 0x1, NULL, NULL },
    { "newGeoConicWithOrgGeogebraCommonKernelConstruction:", "newGeoConic", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lorg.geogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D = { 2, "AlgoParabolaPointLine3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> F, id<OrgGeogebraCommonKernelKernelNDGeoLineND> l) {
  OrgGeogebraCommonKernelAlgosAlgoParabolaPointLineND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, F, l);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> F, id<OrgGeogebraCommonKernelKernelNDGeoLineND> l) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, F, l);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> F, id<OrgGeogebraCommonKernelKernelNDGeoLineND> l) {
  OrgGeogebraCommonKernelAlgosAlgoParabolaPointLineND_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, F, l);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> F, id<OrgGeogebraCommonKernelKernelNDGeoLineND> l) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoLineND_(self, cons, F, l);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoParabolaPointLine3D)
