//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlaneBisectorSegment.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlane.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlaneBisectorSegment.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segment_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment, segment_, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
            withOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(self, cons, label, segment);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_PlaneBisector();
}

- (OrgGeogebraCommonKernelMatrixCoords *)getNormal {
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(segment_, [OrgGeogebraCommonKernelGeosGeoElement class])))) getMainDirection];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getPoint {
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(segment_)) getPointInDWithInt:3 withDouble:0.5])) getInhomCoordsInSameDimension];
}

- (void)dealloc {
  RELEASE_(segment_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "AlgoOrthoPlaneBisectorSegment", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getNormal", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "segment_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoSegmentND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment = { 2, "AlgoOrthoPlaneBisectorSegment", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segment) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlane_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment_set_segment_(self, segment);
  [self setInputOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(segment, [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()] withOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ [self getPlane] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]];
  [self compute];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk([self getPlane])) setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> segment) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoSegmentND_(self, cons, label, segment);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlaneBisectorSegment)
