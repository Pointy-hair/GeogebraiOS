//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoSpherePointRadius.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoSpherePointRadius.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoSphereNDPointRadius.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "org/geogebra/common/main/Localization.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, M, r);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)M
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)r {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, M, r);
  return self;
}

- (OrgGeogebraCommonKernelKernelNDGeoQuadricND *)createSphereNDWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Sphere();
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *)getSphere {
  return (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) check_class_cast([self getSphereND], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D class]);
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"SphereWithCenterAandRadiusB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getM])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getRGeo])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoSpherePointRadius", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoSpherePointRadius", NULL, 0x1, NULL, NULL },
    { "createSphereNDWithOrgGeogebraCommonKernelConstruction:", "createSphereND", "Lorg.geogebra.common.kernel.kernelND.GeoQuadricND;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getSphere", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3D;", 0x1, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius = { 2, "AlgoSpherePointRadius", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelArithmeticNumberValue> r) {
  (void) OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, M, r);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelArithmeticNumberValue> r) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, M, r);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelArithmeticNumberValue> r) {
  (void) OrgGeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, M, r);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelKernelNDGeoPointND> M, id<OrgGeogebraCommonKernelArithmeticNumberValue> r) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, M, r);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSpherePointRadius)
