//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleElement3D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/draw/DrawAngle.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAngleElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoAngle3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoAngleVectorND.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D () {
 @public
  OrgGeogebraCommonKernelMatrixCoords *vn_, *v2_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D, vn_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D, v2_, OrgGeogebraCommonKernelMatrixCoords *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)vec {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, vec);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonKernelGeosGeoAngle *ret = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAngle3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [ret setDrawableWithBoolean:YES];
  return ret;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVectorCoords {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getOrigin {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setOrigin {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)compute {
  v2_ = [self getVectorCoords];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2_)) calcNorm];
  jdouble l2 = [v2_ getNorm];
  jdouble c = [v2_ getX] / l2;
  [((OrgGeogebraCommonKernelGeosGeoAngle *) nil_chk([self getAngle])) setValueWithDouble:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_acosWithDouble_(c)];
  vn_ = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3D_forceNormalVectorWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonKernelMatrixCoords_get_VX_(), v2_);
  [self setOrigin];
}

- (OrgGeogebraCommonKernelMatrixCoords *)getVn {
  return vn_;
}

- (jboolean)getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords {
  if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getOrigin])) isDefined]) {
    return NO;
  }
  (void) IOSObjectArray_Set(nil_chk(drawCoords), 0, [self getOrigin]);
  (void) IOSObjectArray_Set(drawCoords, 1, OrgGeogebraCommonKernelMatrixCoords_get_VX_());
  (void) IOSObjectArray_Set(drawCoords, 2, v2_);
  return YES;
}

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
withOrgGeogebraCommonEuclidianDrawDrawAngle:(OrgGeogebraCommonEuclidianDrawDrawAngle *)drawable {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(vec_)) isGeoVector]) {
    if (![((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getOrigin])) isDefined]) {
      return NO;
    }
    if (![((OrgGeogebraCommonEuclidianDrawDrawAngle *) nil_chk(drawable)) inViewWithOrgGeogebraCommonKernelMatrixCoords:[self getOrigin]]) {
      return NO;
    }
  }
  if (![((OrgGeogebraCommonEuclidianDrawDrawAngle *) nil_chk(drawable)) inViewWithOrgGeogebraCommonKernelMatrixCoords:v2_]) {
    return NO;
  }
  *IOSDoubleArray_GetRef(nil_chk(m), 0) = IOSDoubleArray_Get(nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getOrigin])) get]), 0);
  *IOSDoubleArray_GetRef(m, 1) = IOSDoubleArray_Get(nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([self getOrigin])) get]), 1);
  *IOSDoubleArray_GetRef(nil_chk(firstVec), 0) = 1;
  *IOSDoubleArray_GetRef(firstVec, 1) = 0;
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoAngleElement3D", NULL, 0x1, NULL, NULL },
    { "newGeoAngleWithOrgGeogebraCommonKernelConstruction:", "newGeoAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x14, NULL, NULL },
    { "getVectorCoords", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x404, NULL, NULL },
    { "getOrigin", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x404, NULL, NULL },
    { "setOrigin", NULL, "V", 0x404, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getVn", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getCoordsInD3WithOrgGeogebraCommonKernelMatrixCoordsArray:", "getCoordsInD3", "Z", 0x1, NULL, NULL },
    { "updateDrawInfoWithDoubleArray:withDoubleArray:withOrgGeogebraCommonEuclidianDrawDrawAngle:", "updateDrawInfo", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vn_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "v2_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D = { 2, "AlgoAngleElement3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *vec) {
  (void) OrgGeogebraCommonKernelAlgosAlgoAngleVectorND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, vec);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAngleElement3D)
