//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoTangentCurve3D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentPoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoLinePoint.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoTangentCurve3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoCurveCartesian3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoPointOnPath.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/cas/AlgoDerivative.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/plugin/Operation.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> P_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *f_, *df_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *tangent_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> T_;
  jboolean pointOnCurve_;
  jboolean pointOnCurveSpecial_;
  id<OrgGeogebraCommonKernelArithmeticExpressionValue> pointOnCurveSpecialParam_;
  OrgGeogebraCommonKernelCasAlgoDerivative *algo_;
  OrgGeogebraCommonKernelMatrixCoords *direction_;
  IOSDoubleArray *feval_;
  IOSDoubleArray *dfeval_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, P_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, f_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, df_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, tangent_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, T_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, pointOnCurveSpecialParam_, id<OrgGeogebraCommonKernelArithmeticExpressionValue>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, algo_, OrgGeogebraCommonKernelCasAlgoDerivative *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, direction_, OrgGeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, feval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D, dfeval_, IOSDoubleArray *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)f {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, cons, label, P, f);
  return self;
}

- (void)initialize__WithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)f1 {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_set_f_(self, f1);
  pointOnCurve_ = NO;
  if ([[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) getParentAlgorithm] isKindOfClass:[OrgGeogebraCommonKernelAlgosAlgoPointOnPath class]]) {
    OrgGeogebraCommonKernelAlgosAlgoPointOnPath *algoPOP = (OrgGeogebraCommonKernelAlgosAlgoPointOnPath *) check_class_cast([P_ getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoPointOnPath class]);
    pointOnCurve_ = ([((OrgGeogebraCommonKernelAlgosAlgoPointOnPath *) nil_chk(algoPOP)) getPath] == f_);
  }
  else if ([[P_ getParentAlgorithm] isKindOfClass:[OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D class]]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *algoDP = (OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *) check_class_cast([P_ getParentAlgorithm], [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D class]);
    OrgGeogebraCommonKernelArithmeticExpressionNode *en = [((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPoint3D *) nil_chk(algoDP)) getExpressionNode];
    if ([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(en)) getOperation] == OrgGeogebraCommonPluginOperationEnum_get_VEC_FUNCTION() && [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([en getLeft])) unwrap] == f_) {
      pointOnCurveSpecial_ = YES;
      OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_set_pointOnCurveSpecialParam_(self, [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([en getRight])) unwrap]);
    }
  }
  if (pointOnCurve_ || pointOnCurveSpecial_) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_set_T_(self, P_);
  }
  else {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_setAndConsume_T_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(cons_));
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(tangent_)) setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:T_];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_setAndConsume_algo_(self, new_OrgGeogebraCommonKernelCasAlgoDerivative_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(cons_, f_, YES));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_set_df_(self, (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) check_class_cast([algo_ getResult], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D class]));
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) removeFromConstructionListWithOrgGeogebraCommonKernelAlgosConstructionElement:algo_];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Tangent();
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_TANGENTS;
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, f_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:tangent_];
  [self setDependencies];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getTangent {
  return tangent_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)getCurve {
  return f_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getLine {
  return tangent_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPoint {
  return T_;
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirection {
  if (!([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(f_)) isDefined] && [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) isDefined])) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(direction_)) setXWithDouble:JavaLangDouble_NaN];
    [direction_ setYWithDouble:JavaLangDouble_NaN];
    [direction_ setZWithDouble:JavaLangDouble_NaN];
    return direction_;
  }
  if (df_ == nil || ![df_ isDefined]) {
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(direction_)) setXWithDouble:JavaLangDouble_NaN];
    [direction_ setYWithDouble:JavaLangDouble_NaN];
    [direction_ setZWithDouble:JavaLangDouble_NaN];
    return direction_;
  }
  jdouble tvalue;
  if (pointOnCurve_) {
    tvalue = ((OrgGeogebraCommonKernelPathParameter *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) getPathParameter]))->t_;
  }
  else if (pointOnCurveSpecialParam_ != nil) {
    tvalue = [pointOnCurveSpecialParam_ evaluateDouble];
  }
  else {
    tvalue = [f_ getClosestParameterWithOrgGeogebraCommonKernelKernelNDGeoPointND:P_ withDouble:[f_ getMinParameter]];
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(df_)) evaluateCurveWithDouble:tvalue withDoubleArray:dfeval_];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(direction_)) setXWithDouble:IOSDoubleArray_Get(nil_chk(dfeval_), 0)];
  [direction_ setYWithDouble:IOSDoubleArray_Get(dfeval_, 1)];
  [direction_ setZWithDouble:IOSDoubleArray_Get(dfeval_, 2)];
  if (!pointOnCurve_ && !pointOnCurveSpecial_) {
    [f_ evaluateCurveWithDouble:tvalue withDoubleArray:feval_];
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(T_)) setCoordsWithDouble:IOSDoubleArray_Get(nil_chk(feval_), 0) withDouble:IOSDoubleArray_Get(feval_, 1) withDouble:IOSDoubleArray_Get(feval_, 2) withDouble:1.0];
  }
  return direction_;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"TangentToAatB" withNSString:[((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *) nil_chk(f_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(P_);
  RELEASE_(f_);
  RELEASE_(df_);
  RELEASE_(tangent_);
  RELEASE_(T_);
  RELEASE_(pointOnCurveSpecialParam_);
  RELEASE_(algo_);
  RELEASE_(direction_);
  RELEASE_(feval_);
  RELEASE_(dfeval_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:", "AlgoTangentCurve3D", NULL, 0x1, NULL, NULL },
    { "initialize__WithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:", "initialize", "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getTangent", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", 0x1, NULL, NULL },
    { "getCurve", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoCurveCartesian3D;", 0x0, NULL, NULL },
    { "getLine", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", 0x1, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "P_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoCurveCartesian3D;", NULL, NULL,  },
    { "df_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoCurveCartesian3D;", NULL, NULL,  },
    { "tangent_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", NULL, NULL,  },
    { "T_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "pointOnCurve_", NULL, 0x2, "Z", NULL, NULL,  },
    { "pointOnCurveSpecial_", NULL, 0x2, "Z", NULL, NULL,  },
    { "pointOnCurveSpecialParam_", NULL, 0x2, "Lorg.geogebra.common.kernel.arithmetic.ExpressionValue;", NULL, NULL,  },
    { "algo_", NULL, 0x2, "Lorg.geogebra.common.kernel.cas.AlgoDerivative;", NULL, NULL,  },
    { "direction_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "feval_", NULL, 0x2, "[D", NULL, NULL,  },
    { "dfeval_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D = { 2, "AlgoTangentCurve3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 11, methods, 12, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *f) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_setAndConsume_direction_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, 0, 1));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_setAndConsume_feval_(self, [IOSDoubleArray newArrayWithLength:3]);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_setAndConsume_dfeval_(self, [IOSDoubleArray newArrayWithLength:3]);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_setAndConsume_tangent_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithOrgGeogebraCommonKernelConstruction_(cons));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_set_P_(self, P);
  [self initialize__WithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:f];
  [self setInputOutput];
  [self compute];
  [self->tangent_ setLabelWithNSString:label];
  [self update];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *f) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(self, cons, label, P, f);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D)
