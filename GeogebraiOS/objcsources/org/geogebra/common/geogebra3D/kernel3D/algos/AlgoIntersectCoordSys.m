//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectCoordSys.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectCoordSys.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys () {
 @public
  OrgGeogebraCommonKernelGeosGeoElement *cs1_;
  OrgGeogebraCommonKernelGeosGeoElement *cs2_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D *intersection_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys, cs1_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys, cs2_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys, intersection_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs1
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs2 {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, cs1, cs2);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs1
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs2 {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, cs1, cs2);
  return self;
}

- (void)setCoordSysWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs1
                   withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)cs2 {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_set_cs1_(self, cs1);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_set_cs2_(self, cs2);
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D *)createIntersectionWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getCS1 {
  return cs1_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getCS2 {
  return cs2_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D *)getIntersection {
  return intersection_;
}

- (jboolean)outputIsDefined {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(cs1_)) isDefined] || ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(cs2_)) isDefined]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D *) nil_chk(intersection_)) setUndefined];
    return NO;
  }
  return YES;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:[self getIntersectionTypeString] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getCS1])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getCS2])) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

- (NSString *)getIntersectionTypeString {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(cs1_);
  RELEASE_(cs2_);
  RELEASE_(intersection_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoIntersectCoordSys", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoIntersectCoordSys", NULL, 0x0, NULL, NULL },
    { "setCoordSysWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:", "setCoordSys", "V", 0x4, NULL, NULL },
    { "createIntersectionWithOrgGeogebraCommonKernelConstruction:", "createIntersection", "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoElement3D;", 0x4, NULL, NULL },
    { "getCS1", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x0, NULL, NULL },
    { "getCS2", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x0, NULL, NULL },
    { "getIntersection", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoElement3D;", 0x1, NULL, NULL },
    { "outputIsDefined", NULL, "Z", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getIntersectionTypeString", NULL, "Ljava.lang.String;", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cs1_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "cs2_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "intersection_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoElement3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys = { 2, "AlgoIntersectCoordSys", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelGeosGeoElement *cs1, OrgGeogebraCommonKernelGeosGeoElement *cs2) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, cs1, cs2);
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoElement3D *) nil_chk(self->intersection_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys *self, OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoElement *cs1, OrgGeogebraCommonKernelGeosGeoElement *cs2) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  [self setCoordSysWithOrgGeogebraCommonKernelGeosGeoElement:cs1 withOrgGeogebraCommonKernelGeosGeoElement:cs2];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys_set_intersection_(self, [self createIntersectionWithOrgGeogebraCommonKernelConstruction:cons]);
  [self setInputOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ cs1, cs2 } count:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()] withOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ self->intersection_ } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys)
