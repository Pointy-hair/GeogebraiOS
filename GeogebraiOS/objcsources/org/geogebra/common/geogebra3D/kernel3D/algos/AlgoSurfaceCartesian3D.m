//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoSurfaceCartesian3D.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoSurfaceCartesian3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoSurfaceCartesian3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "org/geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "org/geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/kernelND/GeoSurfaceCartesianND.h"

#define OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_serialVersionUID 1LL

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D () {
 @public
  IOSObjectArray *coords_;
  IOSObjectArray *from_, *to_;
  IOSObjectArray *localVar_;
  OrgGeogebraCommonKernelKernelNDGeoSurfaceCartesianND *surface_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D, coords_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D, from_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D, to_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D, localVar_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D, surface_, OrgGeogebraCommonKernelKernelNDGeoSurfaceCartesianND *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D, serialVersionUID, jlong)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
      withOrgGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)coords
             withOrgGeogebraCommonKernelGeosGeoNumericArray:(IOSObjectArray *)localVar
      withOrgGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)from
      withOrgGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)to {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelGeosGeoNumericArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, label, coords, localVar, from, to);
  return self;
}

- (OrgGeogebraCommonKernelKernelNDGeoSurfaceCartesianND *)createCurveWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                      withOrgGeogebraCommonKernelArithmeticFunctionNVarArray:(IOSObjectArray *)fun {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelArithmeticFunctionNVarArray_(cons, fun);
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Surface();
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(coords_))->size_ + 3 * ((IOSObjectArray *) nil_chk(localVar_))->size_ type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  for (jint i = 0; i < coords_->size_; i++) (void) IOSObjectArray_Set(input_, i, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(coords_, i))) toGeoElement]);
  for (jint i = 0; i < localVar_->size_; i++) {
    (void) IOSObjectArray_Set(input_, coords_->size_ + 3 * i, IOSObjectArray_Get(localVar_, i));
    (void) IOSObjectArray_Set(input_, coords_->size_ + 3 * i + 1, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(nil_chk(from_), i))) toGeoElement]);
    (void) IOSObjectArray_Set(input_, coords_->size_ + 3 * i + 2, [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(nil_chk(to_), i))) toGeoElement]);
  }
  [self setOnlyOutputWithOrgGeogebraCommonKernelGeosToGeoElement:surface_];
  [self setDependencies];
}

- (OrgGeogebraCommonKernelKernelNDGeoSurfaceCartesianND *)getSurface {
  return surface_;
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_compute(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValueArray:withOrgGeogebraCommonKernelGeosGeoNumericArray:withOrgGeogebraCommonKernelArithmeticNumberValueArray:withOrgGeogebraCommonKernelArithmeticNumberValueArray:", "AlgoSurfaceCartesian3D", NULL, 0x1, NULL, NULL },
    { "createCurveWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelArithmeticFunctionNVarArray:", "createCurve", "Lorg.geogebra.common.kernel.kernelND.GeoSurfaceCartesianND;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getSurface", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoSurfaceCartesianND;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_serialVersionUID },
    { "coords_", NULL, 0x2, "[Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "from_", NULL, 0x2, "[Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "to_", NULL, 0x2, "[Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "localVar_", NULL, 0x2, "[Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "surface_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoSurfaceCartesianND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D = { 2, "AlgoSurfaceCartesian3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelGeosGeoNumericArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *coords, IOSObjectArray *localVar, IOSObjectArray *from, IOSObjectArray *to) {
  (void) OrgGeogebraCommonKernelAlgosAlgoElement_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->coords_ = coords;
  self->from_ = from;
  self->to_ = to;
  self->localVar_ = localVar;
  IOSObjectArray *funVar = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(localVar))->size_ type:OrgGeogebraCommonKernelArithmeticFunctionVariable_class_()];
  for (jint i = 0; i < localVar->size_; i++) {
    (void) IOSObjectArray_Set(funVar, i, new_OrgGeogebraCommonKernelArithmeticFunctionVariable_initWithOrgGeogebraCommonKernelKernel_(self->kernel_));
    [((OrgGeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(funVar, i))) setVarStringWithNSString:[((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(localVar, i))) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]];
  }
  IOSObjectArray *exp = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(coords))->size_ type:OrgGeogebraCommonKernelArithmeticExpressionNode_class_()];
  IOSObjectArray *fun = [IOSObjectArray newArrayWithLength:coords->size_ type:OrgGeogebraCommonKernelArithmeticFunctionNVar_class_()];
  for (jint i = 0; i < coords->size_; i++) {
    (void) IOSObjectArray_Set(exp, i, [((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) convertNumberValueToExpressionNodeWithOrgGeogebraCommonKernelGeosGeoElement:[((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(coords, i))) toGeoElement]]);
    for (jint j = 0; j < localVar->size_; j++) {
      (void) IOSObjectArray_Set(exp, i, [((id<OrgGeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((OrgGeogebraCommonKernelArithmeticExpressionNode *) nil_chk(IOSObjectArray_Get(exp, i))) replaceWithOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(localVar, j) withOrgGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(funVar, j)])) wrap]);
    }
    (void) IOSObjectArray_Set(fun, i, new_OrgGeogebraCommonKernelArithmeticFunctionNVar_initWithOrgGeogebraCommonKernelArithmeticExpressionNode_withOrgGeogebraCommonKernelArithmeticFunctionVariableArray_(IOSObjectArray_Get(exp, i), funVar));
  }
  self->surface_ = [self createCurveWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelArithmeticFunctionNVarArray:fun];
  [self setInputOutput];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_compute(self);
  [((OrgGeogebraCommonKernelKernelNDGeoSurfaceCartesianND *) nil_chk(self->surface_)) setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelGeosGeoNumericArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *coords, IOSObjectArray *localVar, IOSObjectArray *from, IOSObjectArray *to) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelGeosGeoNumericArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_withOrgGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, label, coords, localVar, from, to);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D *self) {
  for (jint i = 0; i < 3; i++) {
    OrgGeogebraCommonKernelAlgosAlgoElement *algo = nil;
    if ([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(nil_chk(self->coords_), i))) toGeoElement] != nil) algo = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(self->coords_, i))) toGeoElement]))) getParentAlgorithm];
    if (algo != nil) {
      {
        IOSObjectArray *a__ = [algo getInput];
        OrgGeogebraCommonKernelGeosGeoElement * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        OrgGeogebraCommonKernelGeosGeoElement * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          OrgGeogebraCommonKernelGeosGeoElement *geo = *b__++;
          if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefined]) {
            [((OrgGeogebraCommonKernelKernelNDGeoSurfaceCartesianND *) nil_chk(self->surface_)) setUndefined];
            return;
          }
        }
      }
    }
  }
  [((OrgGeogebraCommonKernelKernelNDGeoSurfaceCartesianND *) nil_chk(self->surface_)) setDefinedWithBoolean:YES];
  IOSDoubleArray *min = [IOSDoubleArray newArrayWithLength:((IOSObjectArray *) nil_chk(self->from_))->size_];
  IOSDoubleArray *max = [IOSDoubleArray newArrayWithLength:((IOSObjectArray *) nil_chk(self->to_))->size_];
  for (jint i = 0; i < self->from_->size_; i++) {
    *IOSDoubleArray_GetRef(min, i) = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(self->from_, i))) getDouble];
    *IOSDoubleArray_GetRef(max, i) = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(self->to_, i))) getDouble];
  }
  [self->surface_ setIntervalsWithDoubleArray:min withDoubleArray:max];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoSurfaceCartesian3D)
