//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoLinePoint.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoLinePoint.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> point_;
  OrgGeogebraCommonKernelGeosGeoElement *inputParallel_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *line_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint, point_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint, inputParallel_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint, line_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint *self);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)inputParallel {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, point, inputParallel);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)createLineWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getLine {
  return line_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPoint {
  return point_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getInputParallel {
  return inputParallel_;
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_compute(self);
}

- (OrgGeogebraCommonKernelMatrixCoords *)getDirection {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"LineThroughAParallelToB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(inputParallel_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoLinePoint", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:", "AlgoLinePoint", NULL, 0x1, NULL, NULL },
    { "createLineWithOrgGeogebraCommonKernelConstruction:", "createLine", "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", 0x4, NULL, NULL },
    { "getLine", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", 0x1, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getInputParallel", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getDirection", NULL, "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x404, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "point_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "inputParallel_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "line_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint = { 2, "AlgoLinePoint", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 9, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point, OrgGeogebraCommonKernelGeosGeoElement *inputParallel) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->point_ = point;
  self->inputParallel_ = inputParallel;
  self->line_ = [self createLineWithOrgGeogebraCommonKernelConstruction:cons];
  [self setInputOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoElement class]), inputParallel } count:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()] withOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ self->line_ } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_compute(self);
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(self->line_)) setLabelWithNSString:label];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_initWithOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint *self, OrgGeogebraCommonKernelConstruction *cons) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint_compute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint *self) {
  OrgGeogebraCommonKernelMatrixCoords *v = [self getDirection];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v)) equalsForKernelWithDouble:0 withDouble:OrgGeogebraCommonKernelKernel_STANDARD_PRECISION]) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk([self getLine])) setUndefined];
  }
  else {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk([self getLine])) setCoordWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getPoint])) getInhomCoordsInD3] withOrgGeogebraCommonKernelMatrixCoords:[v normalize]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint)
