//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartCircumcircle3D.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoCircle3DThreePoints.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicPartCircumcircle3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConicPart3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoCircleThreePoints.h"
#include "org/geogebra/common/kernel/algos/AlgoConicPartCircumcircleND.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D () {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *algo_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D, algo_, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C
                                                    withInt:(jint)type {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, A, B, C, type);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgoCircleThreePoints *)getAlgo {
  algo_ = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(cons_, A_, B_, C_);
  return algo_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *)createConicPartWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                                                                          withInt:(jint)type {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D_initWithOrgGeogebraCommonKernelConstruction_withInt_(cons, type);
}

- (void)computeSinglePoint {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_setSinglePointWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_withOrgGeogebraCommonKernelMatrixCoords_((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *) check_class_cast(conicPart_, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D class]), [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getInhomCoordsInDWithInt:3]);
  [super computeSinglePoint];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getA {
  return [((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *) nil_chk(algo_)) getPoint2DWithInt:0];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getB {
  return [((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *) nil_chk(algo_)) getPoint2DWithInt:1];
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getC {
  return [((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DThreePoints *) nil_chk(algo_)) getPoint2DWithInt:2];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *)getConicPart {
  return (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D *) check_class_cast([super getConicPart], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConicPart3D class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "AlgoConicPartCircumcircle3D", NULL, 0x1, NULL, NULL },
    { "getAlgo", NULL, "Lorg.geogebra.common.kernel.algos.AlgoCircleThreePoints;", 0x4, NULL, NULL },
    { "createConicPartWithOrgGeogebraCommonKernelConstruction:withInt:", "createConicPart", "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoConicPart3D;", 0x4, NULL, NULL },
    { "computeSinglePoint", NULL, "V", 0x4, NULL, NULL },
    { "getA", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x11, NULL, NULL },
    { "getB", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x11, NULL, NULL },
    { "getC", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x11, NULL, NULL },
    { "getConicPart", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoConicPart3D;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "algo_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoCircle3DThreePoints;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D = { 2, "AlgoConicPartCircumcircle3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, jint type) {
  (void) OrgGeogebraCommonKernelAlgosAlgoConicPartCircumcircleND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, A, B, C, type);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelKernelNDGeoPointND> C, jint type) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, A, B, C, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicPartCircumcircle3D)
