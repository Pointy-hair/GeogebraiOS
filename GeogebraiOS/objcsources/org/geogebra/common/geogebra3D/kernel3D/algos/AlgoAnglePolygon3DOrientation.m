//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3DOrientation.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3DOrientation.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3DOrientation.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoAnglePointsND.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/main/Localization.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation () {
 @public
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation, orientation_, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
                  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)poly
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

- (OrgGeogebraCommonKernelAlgosAlgoAnglePointsND *)newAlgoAnglePointsWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons1 {
  return new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3DOrientation_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(cons1, orientation_);
}

- (void)setPolyAndOrientationWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)p
                     withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  [super setPolyAndOrientationWithOrgGeogebraCommonKernelGeosGeoPolygon:p withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  self->orientation_ = orientation;
}

- (void)setInputOutput {
  input_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  (void) IOSObjectArray_Set(input_, 0, poly_);
  (void) IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(orientation_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [self setDependencies];
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"AngleOfAOrientedByB" withNSString:[((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(poly_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAnglePolygon3DOrientation", NULL, 0x1, NULL, NULL },
    { "newAlgoAnglePointsWithOrgGeogebraCommonKernelConstruction:", "newAlgoAnglePoints", "Lorg.geogebra.common.kernel.algos.AlgoAnglePointsND;", 0x4, NULL, NULL },
    { "setPolyAndOrientationWithOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "setPolyAndOrientation", "V", 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "orientation_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoDirectionND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation = { 2, "AlgoAnglePolygon3DOrientation", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *poly, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *poly, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3DOrientation)
