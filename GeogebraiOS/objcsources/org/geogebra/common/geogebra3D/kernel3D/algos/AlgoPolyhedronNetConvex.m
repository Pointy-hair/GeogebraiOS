//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetConvex.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetConvex.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedronNet.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/GetCommand.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex () {
 @public
  OrgGeogebraCommonKernelGeosGeoPolygon *bottomFace_;
  IOSObjectArray *userCutSegments_;
  JavaUtilArrayList *netMap_;
  JavaUtilArrayList *polygonInfo_;
  JavaUtilArrayList *polygonChildSegsList_;
  jboolean netComplete_;
  OrgGeogebraCommonKernelMatrixCoords *projCoord_;
}

- (void)netFacesCompute;

- (void)setSegmentsToFacesLinkWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p;

- (jboolean)makeNetMapWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p;

- (JavaUtilArrayList *)rotateFaceWithInt:(jint)iFace
                              withDouble:(jdouble)f;

- (OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPoints;

- (void)createFaceWithInt:(jint)faceNumber;

- (OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputSegments;

- (OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPolygons;

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels;

- (void)updateOutputSegmentsAndPolygonsParentAlgorithms;

- (void)setUndefined;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex, bottomFace_, OrgGeogebraCommonKernelGeosGeoPolygon *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex, userCutSegments_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex, netMap_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex, polygonInfo_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex, polygonChildSegsList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex, projCoord_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_netFacesCompute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setSegmentsToFacesLinkWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p);

__attribute__((unused)) static jboolean OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_makeNetMapWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p);

__attribute__((unused)) static JavaUtilArrayList *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_rotateFaceWithInt_withDouble_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, jint iFace, jdouble f);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPoints(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createFaceWithInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, jint faceNumber);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputSegments(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self);

__attribute__((unused)) static OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPolygons(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setLabelsWithNSStringArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, IOSObjectArray *labels);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_updateOutputSegmentsAndPolygonsParentAlgorithms(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setUndefined(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self);

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo : NSObject {
 @public
  jint segmentParent1_;
  jint segmentParent2_;
  jint pointIndex1_;
  jint pointIndex2_;
  jboolean userCut_;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo)

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement : NSObject {
 @public
  jint linkSegNumber_;
  jint rank_;
  jint segShift_;
  JavaUtilArrayList *pointIndex_;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement, pointIndex_, JavaUtilArrayList *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement)

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *this$0_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1, this$0_, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1)

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *this$0_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2, this$0_, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2)

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *this$0_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3, this$0_, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3)

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 : NSObject < OrgGeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *this$0_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4, this$0_, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
   withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)v
                  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)bottomFace
       withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)pivotSegments {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(self, c, labels, p, v, bottomFace, pivotSegments);
  return self;
}

- (void)netFacesCompute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_netFacesCompute(self);
}

- (void)setSegmentsToFacesLinkWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setSegmentsToFacesLinkWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(self, p);
}

- (jboolean)makeNetMapWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_makeNetMapWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(self, p);
}

- (void)compute {
  if (![((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(p_)) isDefined]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setUndefined(self);
    return;
  }
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_netFacesCompute(self);
  if (iBottom_ == -1) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setUndefined(self);
    return;
  }
  if (!netComplete_) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setUndefined(self);
    return;
  }
  jdouble f = [((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(v_)) getDouble];
  if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(f, 1) || OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_(0, f)) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setUndefined(self);
    return;
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) setDefined];
  for (jint iPoly = 0; iPoly < [((JavaUtilArrayList *) nil_chk(polygonInfo_)) size]; iPoly++) {
    OrgGeogebraCommonKernelGeosGeoPolygon *currentFace = [p_ getFaceWithInt:iPoly];
    IOSObjectArray *points = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_getPointsCoordsWithOrgGeogebraCommonKernelGeosGeoPolygon_(currentFace);
    jint iBegin = 2;
    if (iPoly == iBottom_) {
      iBegin = 0;
    }
    for (jint i = iBegin; i < ((IOSObjectArray *) nil_chk(points))->size_; i++) {
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsNet_)) getElementWithInt:[((JavaLangInteger *) nil_chk([((JavaUtilArrayList *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([polygonInfo_ getWithInt:iPoly]))->pointIndex_)) getWithInt:i])) intValue]])) setCoordsWithOrgGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(points, (i + ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([polygonInfo_ getWithInt:iPoly]))->segShift_) % (points->size_))];
    }
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) setAreaWithDouble:[p_ getArea]];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_rotateFaceWithInt_withDouble_(self, iBottom_, f);
}

- (JavaUtilArrayList *)rotateFaceWithInt:(jint)iFace
                              withDouble:(jdouble)f {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_rotateFaceWithInt_withDouble_(self, iFace, f);
}

- (OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPoints {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPoints(self);
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)getNet {
  return [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputNet_)) getElementWithInt:0];
}

- (id<OrgGeogebraCommonKernelAlgosGetCommand>)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Net();
}

- (void)createNet {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net = [self getNet];
  jint iNetPoints = 0;
  for (jint i = 0; i < [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(p_)) getFacesSize]; i++) {
    iNetPoints = iNetPoints + [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk([p_ getFaceWithInt:i])) getPointsLength];
    if (i != iBottom_) {
      iNetPoints -= 2;
    }
  }
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPointsNet_)) adjustOutputSizeWithInt:iNetPoints withBoolean:NO];
  [outputPointsNet_ setLabelsWithNSStringArray:nil];
  pointsCounter_ = 0;
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createFaceWithInt_(self, iBottom_);
  for (jint pNum = 0; pNum < [((JavaUtilArrayList *) nil_chk(polygonInfo_)) size]; pNum++) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) startNewFace];
    for (JavaLangInteger *boxed__ in nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([polygonInfo_ getWithInt:pNum]))->pointIndex_)) {
      jint i = [((JavaLangInteger *) nil_chk(boxed__)) intValue];
      [net addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:[outputPointsNet_ getElementWithInt:i]];
    }
    [net endCurrentFace];
  }
}

- (void)createFaceWithInt:(jint)faceNumber {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createFaceWithInt_(self, faceNumber);
}

- (OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputSegments {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputSegments(self);
}

- (OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPolygons {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPolygons(self);
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setLabelsWithNSStringArray_(self, labels);
}

- (void)updateOutputSegmentsAndPolygonsParentAlgorithms {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_updateOutputSegmentsAndPolygonsParentAlgorithms(self);
}

+ (IOSObjectArray *)getPointsCoordsWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)polygon {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_getPointsCoordsWithOrgGeogebraCommonKernelGeosGeoPolygon_(polygon);
}

- (void)setUndefined {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setUndefined(self);
}

- (jint)getRelatedModeID {
  return OrgGeogebraCommonEuclidianEuclidianConstants_MODE_NET;
}

- (void)dealloc {
  RELEASE_(p_);
  RELEASE_(v_);
  RELEASE_(bottomFace_);
  RELEASE_(userCutSegments_);
  RELEASE_(outputNet_);
  RELEASE_(outputPointsNet_);
  RELEASE_(outputSegments_);
  RELEASE_(outputPolygons_);
  RELEASE_(netMap_);
  RELEASE_(polygonInfo_);
  RELEASE_(polygonChildSegsList_);
  RELEASE_(segmentList_);
  RELEASE_(segmentInfoList_);
  RELEASE_(projCoord_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:", "AlgoPolyhedronNetConvex", NULL, 0x1, NULL, NULL },
    { "netFacesCompute", NULL, "V", 0x2, NULL, NULL },
    { "setSegmentsToFacesLinkWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:", "setSegmentsToFacesLink", "V", 0x2, NULL, NULL },
    { "makeNetMapWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:", "makeNetMap", "Z", 0x2, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "rotateFaceWithInt:withDouble:", "rotateFace", "Ljava.util.ArrayList;", 0x2, NULL, NULL },
    { "createOutputPoints", NULL, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x2, NULL, NULL },
    { "getNet", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPolyhedronNet;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.algos.GetCommand;", 0x1, NULL, NULL },
    { "createNet", NULL, "V", 0x4, NULL, NULL },
    { "createFaceWithInt:", "createFace", "V", 0x2, NULL, NULL },
    { "createOutputSegments", NULL, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x2, NULL, NULL },
    { "createOutputPolygons", NULL, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x2, NULL, NULL },
    { "setLabelsWithNSStringArray:", "setLabels", "V", 0x2, NULL, NULL },
    { "updateOutputSegmentsAndPolygonsParentAlgorithms", NULL, "V", 0x2, NULL, NULL },
    { "getPointsCoordsWithOrgGeogebraCommonKernelGeosGeoPolygon:", "getPointsCoords", "[Lorg.geogebra.common.kernel.Matrix.Coords;", 0x1c, NULL, NULL },
    { "setUndefined", NULL, "V", 0x2, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPolyhedron;", NULL, NULL,  },
    { "v_", NULL, 0x4, "Lorg.geogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "bottomFace_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPolygon;", NULL, NULL,  },
    { "iBottom_", NULL, 0x4, "I", NULL, NULL,  },
    { "userCutSegments_", NULL, 0x2, "[Lorg.geogebra.common.kernel.kernelND.GeoSegmentND;", NULL, NULL,  },
    { "outputNet_", NULL, 0x4, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedronNet;>;",  },
    { "outputPointsNet_", NULL, 0x4, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D;>;",  },
    { "pointsCounter_", NULL, 0x0, "I", NULL, NULL,  },
    { "outputSegments_", NULL, 0x4, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D;>;",  },
    { "outputPolygons_", NULL, 0x4, "Lorg.geogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lorg/geogebra/common/kernel/algos/AlgoElement$OutputHandler<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D;>;",  },
    { "netMap_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/util/ArrayList<Ljava/lang/Integer;>;>;",  },
    { "polygonInfo_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetConvex$PolygonInfoElement;>;",  },
    { "polygonChildSegsList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/util/ArrayList<Ljava/lang/Integer;>;>;",  },
    { "segmentList_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/kernelND/GeoSegmentND;>;",  },
    { "segmentInfoList_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNetConvex$SegmentInfo;>;",  },
    { "netComplete_", NULL, 0x2, "Z", NULL, NULL,  },
    { "projCoord_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedronNetConvex$SegmentInfo;", "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedronNetConvex$PolygonInfoElement;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex = { 2, "AlgoPolyhedronNetConvex", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 18, methods, 17, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v, OrgGeogebraCommonKernelGeosGeoPolygon *bottomFace, IOSObjectArray *pivotSegments) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  self->pointsCounter_ = 0;
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setAndConsume_netMap_(self, new_JavaUtilArrayList_init());
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setAndConsume_polygonInfo_(self, new_JavaUtilArrayList_init());
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setAndConsume_polygonChildSegsList_(self, new_JavaUtilArrayList_init());
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setAndConsume_segmentList_(self, new_JavaUtilArrayList_init());
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setAndConsume_segmentInfoList_(self, new_JavaUtilArrayList_init());
  self->netComplete_ = YES;
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setAndConsume_projCoord_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_set_p_(self, p);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_set_v_(self, v);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_set_bottomFace_(self, bottomFace);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_set_userCutSegments_(self, pivotSegments);
  jint pivotSegmentsLength = 0;
  if (pivotSegments != nil) {
    pivotSegmentsLength = pivotSegments->size_;
  }
  if (bottomFace == nil) {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 + pivotSegmentsLength type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(self->input_, 0, p);
    IOSObjectArray_Set(self->input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(v, [OrgGeogebraCommonKernelGeosGeoElement class]));
    for (jint i = 0; i < pivotSegmentsLength; i++) {
      IOSObjectArray_Set(self->input_, 2 + i, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(nil_chk(pivotSegments), i), [OrgGeogebraCommonKernelGeosGeoElement class]));
    }
  }
  else {
    OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 + pivotSegmentsLength type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(self->input_, 0, p);
    IOSObjectArray_Set(self->input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(v, [OrgGeogebraCommonKernelGeosGeoElement class]));
    IOSObjectArray_Set(self->input_, 2, bottomFace);
    for (jint i = 0; i < pivotSegmentsLength; i++) {
      IOSObjectArray_Set(self->input_, 3 + i, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(nil_chk(pivotSegments), i), [OrgGeogebraCommonKernelGeosGeoElement class]));
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->input_))->size_; i++) {
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(self->input_, i))) addAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:self];
  }
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setAndConsume_outputNet_(self, new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self) autorelease]));
  [self->outputNet_ adjustOutputSizeWithInt:1];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_set_outputPointsNet_(self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPoints(self));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_set_outputPolygons_(self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPolygons(self));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_set_outputSegments_(self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputSegments(self));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_netFacesCompute(self);
  if (self->iBottom_ != -1) {
    if (self->netComplete_) {
      OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *net = [self getNet];
      id<JavaUtilCollection> faces = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk(net)) getFacesCollection];
      for (OrgGeogebraCommonKernelGeosGeoPolygon * __strong polygon in nil_chk([net getFacesCollection])) {
        [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygons_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) check_class_cast(polygon, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D class]) withBoolean:NO];
      }
      {
        IOSObjectArray *a__ = [net getSegments3D];
        OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *segment = *b__++;
          [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:segment withBoolean:NO];
        }
      }
    }
    [self refreshOutput];
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setLabelsWithNSStringArray_(self, labels);
    [self update];
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_updateOutputSegmentsAndPolygonsParentAlgorithms(self);
  }
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, id<OrgGeogebraCommonKernelArithmeticNumberValue> v, OrgGeogebraCommonKernelGeosGeoPolygon *bottomFace, IOSObjectArray *pivotSegments) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(self, c, labels, p, v, bottomFace, pivotSegments);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_netFacesCompute(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setSegmentsToFacesLinkWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(self, self->p_);
  if (self->iBottom_ != -1) {
    self->netComplete_ = OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_makeNetMapWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(self, self->p_);
    if (self->netComplete_) {
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) clearIndexes];
      [self createNet];
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) createFaces];
    }
  }
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setSegmentsToFacesLinkWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p) {
  [((JavaUtilArrayList *) nil_chk(self->segmentInfoList_)) clear];
  [((JavaUtilArrayList *) nil_chk(self->segmentList_)) clear];
  [((JavaUtilArrayList *) nil_chk(self->polygonChildSegsList_)) clear];
  if (self->bottomFace_ != nil) {
    self->iBottom_ = -1;
  }
  else {
    self->iBottom_ = 0;
  }
  IOSObjectArray *polygonList = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(p)) getFaces];
  for (jint iP = 0; iP < ((IOSObjectArray *) nil_chk(polygonList))->size_; iP++) {
    JavaUtilArrayList *segsList = [new_JavaUtilArrayList_init() autorelease];
    OrgGeogebraCommonKernelGeosGeoPolygon *thisPolygon = IOSObjectArray_Get(polygonList, iP);
    if (self->iBottom_ < 0) {
      if ([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(self->bottomFace_)) isEqualWithOrgGeogebraCommonKernelGeosGeoElement:thisPolygon]) {
        self->iBottom_ = iP;
      }
    }
    {
      IOSObjectArray *a__ = [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(thisPolygon)) getSegments];
      id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> thisSegment = *b__++;
        jboolean found = NO;
        for (jint i = 0; i < [self->segmentList_ size]; i++) {
          if ([((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk([self->segmentList_ getWithInt:i])) isEqualWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:thisSegment]) {
            found = YES;
            ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:i]))->segmentParent2_ = iP;
            [segsList addWithId:JavaLangInteger_valueOfWithInt_(i)];
            break;
          }
        }
        if (!found) {
          [self->segmentList_ addWithId:thisSegment];
          OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *newSegParent = [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self) autorelease];
          newSegParent->segmentParent1_ = iP;
          if (self->userCutSegments_ != nil) {
            {
              IOSObjectArray *a__ = self->userCutSegments_;
              id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> const *b__ = a__->buffer_;
              id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> const *e__ = b__ + a__->size_;
              while (b__ < e__) {
                id<OrgGeogebraCommonKernelKernelNDGeoSegmentND> pSeg = *b__++;
                if ([((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk(pSeg)) isEqualWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:thisSegment]) {
                  newSegParent->userCut_ = YES;
                }
              }
            }
          }
          [self->segmentInfoList_ addWithId:newSegParent];
          [segsList addWithId:JavaLangInteger_valueOfWithInt_([self->segmentInfoList_ size] - 1)];
        }
      }
    }
    [self->polygonChildSegsList_ addWithId:segsList];
  }
}

jboolean OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_makeNetMapWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p) {
  [((JavaUtilArrayList *) nil_chk(self->netMap_)) clear];
  [((JavaUtilArrayList *) nil_chk(self->polygonInfo_)) clear];
  IOSObjectArray *polygonList = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(p)) getFaces];
  for (jint iP = 0; iP < ((IOSObjectArray *) nil_chk(polygonList))->size_; iP++) {
    JavaUtilArrayList *linkedPolygonList = [new_JavaUtilArrayList_init() autorelease];
    [self->netMap_ addWithId:linkedPolygonList];
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *infoElt = [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self) autorelease];
    [self->polygonInfo_ addWithId:infoElt];
  }
  [((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:self->iBottom_])) addWithId:JavaLangInteger_valueOfWithInt_(-1)];
  ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:self->iBottom_]))->rank_ = 0;
  ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:self->iBottom_]))->linkSegNumber_ = -1;
  jboolean newFaceFound = YES;
  jint nbFoundedFaces = 1;
  jint maxRank = 0;
  while ((nbFoundedFaces < polygonList->size_) && (newFaceFound)) {
    maxRank++;
    newFaceFound = NO;
    for (jint iP = 0; iP < polygonList->size_; iP++) {
      if (([((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:iP])) size] == 1) && (((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iP]))->rank_) < maxRank) {
        for (JavaLangInteger *boxed__ in nil_chk([((JavaUtilArrayList *) nil_chk(self->polygonChildSegsList_)) getWithInt:iP])) {
          jint iSeg = [((JavaLangInteger *) nil_chk(boxed__)) intValue];
          if (!((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([((JavaUtilArrayList *) nil_chk(self->segmentInfoList_)) getWithInt:iSeg]))->userCut_) {
            jint iChildPoly = 0;
            if (((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:iSeg]))->segmentParent1_ == iP) {
              iChildPoly = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:iSeg]))->segmentParent2_;
            }
            else {
              iChildPoly = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:iSeg]))->segmentParent1_;
            }
            if ([((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:iChildPoly])) size] == 0) {
              [((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:iChildPoly])) addWithId:JavaLangInteger_valueOfWithInt_(iP)];
              ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iChildPoly]))->rank_ = maxRank;
              ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iChildPoly]))->linkSegNumber_ = iSeg;
              nbFoundedFaces++;
              newFaceFound = YES;
              [((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:iP])) addWithId:JavaLangInteger_valueOfWithInt_(iChildPoly)];
            }
          }
        }
      }
    }
  }
  return newFaceFound;
}

JavaUtilArrayList *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_rotateFaceWithInt_withDouble_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, jint iFace, jdouble f) {
  JavaUtilArrayList *pointsToRotate = [new_JavaUtilArrayList_init() autorelease];
  for (jint i = 1; i < [((JavaUtilArrayList *) nil_chk([((JavaUtilArrayList *) nil_chk(self->netMap_)) getWithInt:iFace])) size]; i++) {
    [pointsToRotate addAllWithJavaUtilCollection:OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_rotateFaceWithInt_withDouble_(self, [((JavaLangInteger *) nil_chk([((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:iFace])) getWithInt:i])) intValue], f)];
  }
  if (iFace != self->iBottom_) {
    for (jint index = 2; index < [((JavaUtilArrayList *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([((JavaUtilArrayList *) nil_chk(self->polygonInfo_)) getWithInt:iFace]))->pointIndex_)) size]; index++) {
      [pointsToRotate addWithId:[((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iFace]))->pointIndex_ getWithInt:index]];
    }
    OrgGeogebraCommonKernelGeosGeoPolygon *face = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(self->p_)) getFaceWithInt:[((JavaLangInteger *) nil_chk([((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:iFace])) getWithInt:0])) intValue]];
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *facePoint = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsNet_)) getElementWithInt:[((JavaLangInteger *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iFace]))->pointIndex_ getWithInt:2])) intValue]];
    OrgGeogebraCommonKernelMatrixCoords *cCoord = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(facePoint)) getInhomCoordsInD3];
    [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(cCoord)) projectPlaneWithOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(face)) getCoordSys])) getMatrixOrthonormal] withOrgGeogebraCommonKernelMatrixCoords:self->projCoord_];
    jdouble dist = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(self->projCoord_)) distanceWithOrgGeogebraCommonKernelMatrixCoords:cCoord];
    OrgGeogebraCommonKernelMatrixCoords *o = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(([self->outputPointsNet_ getElementWithInt:[((JavaLangInteger *) nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iFace]))->pointIndex_ getWithInt:1])) intValue]]))) getInhomCoordsInD3];
    OrgGeogebraCommonKernelMatrixCoords *o1 = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk([((JavaUtilArrayList *) nil_chk(self->segmentList_)) getWithInt:((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iFace]))->linkSegNumber_])) getStartPoint])) getInhomCoordsInD3];
    OrgGeogebraCommonKernelMatrixCoords *vs = [((id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>) nil_chk([self->segmentList_ getWithInt:((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:iFace]))->linkSegNumber_])) getDirectionInD3];
    jint sgn = 1;
    if (OrgGeogebraCommonKernelKernel_isGreaterWithDouble_withDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(o1)) distanceWithOrgGeogebraCommonKernelMatrixCoords:o], 0)) {
      sgn = -1;
    }
    OrgGeogebraCommonKernelMatrixCoords *faceDirection = [face getDirectionInD3];
    if ([face isConvexInverseDirection]) {
      f *= -1;
      sgn *= -1;
    }
    OrgGeogebraCommonKernelMatrixCoords *v2 = [self->projCoord_ subWithOrgGeogebraCommonKernelMatrixCoords:o];
    jdouble d2 = [cCoord distLineWithOrgGeogebraCommonKernelMatrixCoords:o withOrgGeogebraCommonKernelMatrixCoords:vs];
    jdouble angle;
    if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(dist, d2)) {
      angle = JavaLangMath_PI / 2;
    }
    else {
      angle = JavaLangMath_asinWithDouble_(dist / d2);
    }
    if (sgn * [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(v2)) crossProductWithOrgGeogebraCommonKernelMatrixCoords:vs])) dotproductWithOrgGeogebraCommonKernelMatrixCoords:faceDirection] < 0) {
      angle = JavaLangMath_PI - angle;
    }
    for (jint iPoint = 0; iPoint < [pointsToRotate size]; iPoint++) {
      facePoint = [self->outputPointsNet_ getElementWithInt:[((JavaLangInteger *) nil_chk([pointsToRotate getWithInt:iPoint])) intValue]];
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(facePoint)) rotateWithDouble:f * sgn * angle withOrgGeogebraCommonKernelMatrixCoords:o withOrgGeogebraCommonKernelMatrixCoords:vs];
    }
  }
  return pointsToRotate;
}

OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPoints(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self) {
  return [new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self) autorelease]) autorelease];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createFaceWithInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, jint faceNumber) {
  jint linkSegNumber = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([((JavaUtilArrayList *) nil_chk(self->polygonInfo_)) getWithInt:faceNumber]))->linkSegNumber_;
  JavaUtilArrayList *currentPolygonSegList = [((JavaUtilArrayList *) nil_chk(self->polygonChildSegsList_)) getWithInt:faceNumber];
  if (linkSegNumber != -1) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *linkSeg = [((JavaUtilArrayList *) nil_chk(self->segmentInfoList_)) getWithInt:linkSegNumber];
    jint linkSegIndex;
    for (linkSegIndex = 0; ([((JavaLangInteger *) nil_chk([((JavaUtilArrayList *) nil_chk(currentPolygonSegList)) getWithInt:linkSegIndex])) intValue] != linkSegNumber); linkSegIndex++) {
      if ([((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue] != linkSegNumber) {
        ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex1_ = -1;
        ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex2_ = -1;
      }
    }
    ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:faceNumber]))->segShift_ = linkSegIndex;
    if (linkSegIndex == 0) {
      ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:1])) intValue]]))->pointIndex1_ = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:0])) intValue]]))->pointIndex1_;
      ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:[currentPolygonSegList size] - 1])) intValue]]))->pointIndex2_ = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:0])) intValue]]))->pointIndex2_;
    }
    else {
      ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:(linkSegIndex + 1) % [currentPolygonSegList size]])) intValue]]))->pointIndex1_ = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex1_;
      ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex - 1])) intValue]]))->pointIndex2_ = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex2_;
    }
    jint temp = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex1_;
    ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex1_ = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex2_;
    ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex])) intValue]]))->pointIndex2_ = temp;
    for (jint linkSegIndex2 = linkSegIndex + 1; linkSegIndex2 < [currentPolygonSegList size]; linkSegIndex2++) {
      if (linkSegIndex2 > linkSegIndex + 1) {
        ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex2])) intValue]]))->pointIndex1_ = -1;
      }
      if ((linkSegIndex2 < [currentPolygonSegList size] - 1) || (linkSegIndex != 0)) {
        ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:linkSegIndex2])) intValue]]))->pointIndex2_ = -1;
      }
    }
    for (jint segNumber = 0; segNumber < [currentPolygonSegList size]; segNumber++) {
      if (((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:segNumber])) intValue]]))->pointIndex1_ == -1) {
        ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:segNumber])) intValue]]))->pointIndex1_ = self->pointsCounter_;
        if (segNumber > 0) {
          ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:(segNumber - 1)])) intValue]]))->pointIndex2_ = self->pointsCounter_;
        }
        else {
          ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:([currentPolygonSegList size] - 1)])) intValue]]))->pointIndex2_ = self->pointsCounter_;
        }
        self->pointsCounter_++;
      }
      if (((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:segNumber])) intValue]]))->pointIndex2_ == -1) {
        ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:segNumber])) intValue]]))->pointIndex2_ = self->pointsCounter_;
        ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:(segNumber + 1) % ([currentPolygonSegList size])])) intValue]]))->pointIndex1_ = self->pointsCounter_;
        self->pointsCounter_++;
      }
    }
    for (jint segNumber = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:faceNumber]))->segShift_; segNumber < ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:faceNumber]))->segShift_ + [currentPolygonSegList size]; segNumber++) {
      [((JavaUtilArrayList *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:faceNumber]))->pointIndex_)) addWithId:JavaLangInteger_valueOfWithInt_(((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:(segNumber) % ([currentPolygonSegList size])])) intValue]]))->pointIndex1_)];
    }
  }
  else {
    jint segNumber;
    for (segNumber = 0; segNumber < [((JavaUtilArrayList *) nil_chk(currentPolygonSegList)) size]; segNumber++) {
      ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([((JavaUtilArrayList *) nil_chk(self->segmentInfoList_)) getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:segNumber])) intValue]]))->pointIndex2_ = self->pointsCounter_;
      ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([self->segmentInfoList_ getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:(segNumber + 1) % ([currentPolygonSegList size])])) intValue]]))->pointIndex1_ = self->pointsCounter_;
      self->pointsCounter_++;
    }
    for (segNumber = ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:faceNumber]))->segShift_; segNumber < ((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:faceNumber]))->segShift_ + [currentPolygonSegList size]; segNumber++) {
      [((JavaUtilArrayList *) nil_chk(((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *) nil_chk([self->polygonInfo_ getWithInt:faceNumber]))->pointIndex_)) addWithId:JavaLangInteger_valueOfWithInt_(((OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *) nil_chk([((JavaUtilArrayList *) nil_chk(self->segmentInfoList_)) getWithInt:[((JavaLangInteger *) nil_chk([currentPolygonSegList getWithInt:(segNumber) % ([currentPolygonSegList size])])) intValue]]))->pointIndex1_)];
    }
  }
  for (jint childPolygonIndex = 1; childPolygonIndex < [((JavaUtilArrayList *) nil_chk([((JavaUtilArrayList *) nil_chk(self->netMap_)) getWithInt:faceNumber])) size]; childPolygonIndex++) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createFaceWithInt_(self, [((JavaLangInteger *) nil_chk([((JavaUtilArrayList *) nil_chk([self->netMap_ getWithInt:faceNumber])) getWithInt:childPolygonIndex])) intValue]);
  }
}

OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputSegments(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self) {
  return [new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self) autorelease]) autorelease];
}

OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_createOutputPolygons(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self) {
  return [new_OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithOrgGeogebraCommonKernelAlgosAlgoElement_withOrgGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self) autorelease]) autorelease];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setLabelsWithNSStringArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self, IOSObjectArray *labels) {
  if (labels == nil || labels->size_ <= 1) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) initLabelsWithNSStringArray:labels];
  else {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) setAllLabelsAreSetWithBoolean:YES];
    for (jint i = 0; i < labels->size_; i++) {
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([self getOutputWithInt:i])) setLabelWithNSString:IOSObjectArray_Get(labels, i)];
    }
  }
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_updateOutputSegmentsAndPolygonsParentAlgorithms(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self) {
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegments_)) updateParentAlgorithm];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygons_)) updateParentAlgorithm];
}

IOSObjectArray *OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_getPointsCoordsWithOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonKernelGeosGeoPolygon *polygon) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_initialize();
  jint l = [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) getPointsLength];
  IOSObjectArray *points = [IOSObjectArray arrayWithLength:l type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  for (jint i = 0; i < l; i++) {
    IOSObjectArray_Set(points, i, [polygon getPoint3DWithInt:i]);
  }
  return points;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_setUndefined(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *self) {
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([self getNet])) setUndefined];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPointsNet_)) setUndefined];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "segmentParent1_", NULL, 0x0, "I", NULL, NULL,  },
    { "segmentParent2_", NULL, 0x0, "I", NULL, NULL,  },
    { "pointIndex1_", NULL, 0x0, "I", NULL, NULL,  },
    { "pointIndex2_", NULL, 0x0, "I", NULL, NULL,  },
    { "userCut_", NULL, 0x0, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo = { 2, "SegmentInfo", "org.geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedronNetConvex", 0x2, 1, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  NSObject_init(self);
  self->pointIndex1_ = -1;
  self->pointIndex2_ = -1;
  self->userCut_ = NO;
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_SegmentInfo)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(pointIndex_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "linkSegNumber_", NULL, 0x0, "I", NULL, NULL,  },
    { "rank_", NULL, 0x0, "I", NULL, NULL,  },
    { "segShift_", NULL, 0x0, "I", NULL, NULL,  },
    { "pointIndex_", NULL, 0x0, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Integer;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement = { 2, "PolygonInfoElement", "org.geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedronNetConvex", 0x2, 1, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  NSObject_init(self);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_setAndConsume_pointIndex_(self, new_JavaUtilArrayList_init());
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_PolygonInfoElement)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)newElement {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *p = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_initWithOrgGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  [p setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:this$0_];
  return p;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPolyhedronNet;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedronNetConvex;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex", "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:" };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 = { 2, "", "org.geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedronNetConvex", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedronNet;>;" };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1 alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$1)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)newElement {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  [p setCoordsWithDouble:0 withDouble:0 withDouble:0 withDouble:1];
  [p setParentAlgorithmWithOrgGeogebraCommonKernelAlgosAlgoElement:this$0_];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *) nil_chk([this$0_ getNet])) addPointCreatedWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:p];
  [p setLabelVisibleWithBoolean:NO];
  return p;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedronNetConvex;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex", "createOutputPoints" };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 = { 2, "", "org.geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedronNetConvex", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D;>;" };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2 alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$2)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *)newElement {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *s = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithOrgGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  return s;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoSegment3D;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedronNetConvex;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex", "createOutputSegments" };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 = { 2, "", "org.geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedronNetConvex", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D;>;" };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3 alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$3)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)newElement {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *p = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_initWithOrgGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  return p;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *)outer$ {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPolygon3D;", 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.geogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedronNetConvex;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex", "createOutputPolygons" };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 = { 2, "", "org.geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedronNetConvex", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lorg/geogebra/common/kernel/algos/AlgoElement$elementFactory<Lorg/geogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D;>;" };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 *self, OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_set_this$0_(self, outer$);
  NSObject_init(self);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex *outer$) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4 alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4_initWithOrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNetConvex_$4)
