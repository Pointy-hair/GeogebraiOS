//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectRegionPlanePolyhedron.java
//

#ifndef _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_H_
#define _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectPathPlanePolygon3D.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilTreeSet;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron;
@class OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelMatrixCoords;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol JavaUtilComparator;
@protocol OrgGeogebraCommonKernelKernelNDGeoElementND;

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron : OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPathPlanePolygon3D {
 @public
  OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputSegments_AlgoIntersectRegionPlanePolyhedron_;
  JavaUtilTreeSet *newCoords_AlgoIntersectRegionPlanePolyhedron_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)plane
   withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)plane
   withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p
                                               withIntArray:(IOSIntArray *)outputSizes;

- (void)compute;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (void)addCoordsWithDouble:(jdouble)parameter
withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords
withOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)parent;

- (jboolean)checkParameterWithDouble:(jdouble)t1;

- (void)getCmdOutputXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
       withOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

- (OrgGeogebraCommonKernelGeosGeoElement *)getSecondInput;

- (void)setInputOutput;

- (void)setNewCoords;

- (void)setSecondInputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron, outputSegments_AlgoIntersectRegionPlanePolyhedron_, OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron, newCoords_AlgoIntersectRegionPlanePolyhedron_, JavaUtilTreeSet *)

FOUNDATION_EXPORT id<JavaUtilComparator> OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_COORDS_COMPARATOR_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron, COORDS_COMPARATOR_, id<JavaUtilComparator>)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron *self, OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *plane, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_(OrgGeogebraCommonKernelConstruction *c, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *plane, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withIntArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *plane, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, IOSIntArray *outputSizes);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withIntArray_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *plane, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, IOSIntArray *outputSizes) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron)

#endif // _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectRegionPlanePolyhedron_H_
