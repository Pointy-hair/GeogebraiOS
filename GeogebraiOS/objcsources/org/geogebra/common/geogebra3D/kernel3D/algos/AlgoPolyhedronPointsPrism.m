//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronPointsPrism.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedron.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronPoints.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronPointsPrism.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism () {
 @public
  OrgGeogebraCommonKernelMatrixCoords *uptranslation_;
}

- (void)updateTopWithInt:(jint)n;

- (void)updateSideWithInt:(jint)index
withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)bottomPoints
withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)bottomSegments;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism, uptranslation_, OrgGeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateTopWithInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self, jint n);

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateSideWithInt_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self, jint index, IOSObjectArray *bottomPoints, IOSObjectArray *bottomSegments);

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
                  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)polygon
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, labels, polygon, point);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
         withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(self, c, labels, points);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
                  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)polygon
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)height {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, polygon, height);
  return self;
}

- (void)createPolyhedronWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)bottomPoints {
  [self setBottomWithOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:polyhedron_];
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> topPoint = [self getTopPoint];
  bottomPointsLength_ = ((IOSObjectArray *) nil_chk(bottomPoints))->size_;
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) augmentOutputSizeWithInt:bottomPointsLength_ - 1];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPoints_setAndConsume_points_(self, [IOSObjectArray newArrayWithLength:bottomPointsLength_ * 2 type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()]);
  for (jint i = 0; i < bottomPointsLength_; i++) IOSObjectArray_Set(points_, i, IOSObjectArray_Get(bottomPoints, i));
  IOSObjectArray_Set(points_, bottomPointsLength_, topPoint);
  for (jint i = 0; i < bottomPointsLength_ - 1; i++) {
    OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *point = [outputPoints_ getElementWithInt:i + 1 - [self getShift]];
    IOSObjectArray_Set(points_, bottomPointsLength_ + 1 + i, point);
  }
  for (jint i = 0; i < bottomPointsLength_; i++) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(polyhedron_)) startNewFace];
    [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points_, i)];
    [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points_, (i + 1) % (bottomPointsLength_))];
    [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points_, bottomPointsLength_ + ((i + 1) % (bottomPointsLength_)))];
    [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points_, bottomPointsLength_ + i)];
    [polyhedron_ endCurrentFace];
  }
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(polyhedron_)) startNewFace];
  for (jint i = 0; i < bottomPointsLength_; i++) [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(points_, bottomPointsLength_ + i)];
  [polyhedron_ endCurrentFace];
  [polyhedron_ setCurrentFaceIsTopFace];
  [polyhedron_ setTypeWithInt:OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_TYPE_PRISM];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getTopPointWithInt:(jint)index {
  if (index == 0) return [self getTopPoint];
  return [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) getElementWithInt:index - [self getShift]];
}

- (void)updateOutputWithInt:(jint)newBottomPointsLength {
  jint nOld = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) size] + [self getShift];
  IOSObjectArray *bottomPoints = [self getBottomPoints];
  IOSObjectArray *bottomSegments = [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk([self getBottom])) getSegments];
  if (newBottomPointsLength > nOld) {
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(polyhedron_)) updateSegmentsLinked];
    jint length = newBottomPointsLength - nOld;
    [outputPoints_ augmentOutputSizeWithInt:length withBoolean:NO];
    if ([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([self getPolyhedron])) allLabelsAreSet]) {
      [outputPoints_ setLabelsWithNSStringArray:nil];
    }
    [self updateOutputPoints];
    jint l = nOld + length;
    for (jint i = nOld; i < l; i++) {
      [polyhedron_ startNewFace];
      [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(nil_chk(bottomPoints), i)];
      [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(bottomPoints, (i + 1) % l)];
      [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:[self getTopPointWithInt:(i + 1) % l]];
      [polyhedron_ addPointToCurrentFaceWithOrgGeogebraCommonKernelKernelNDGeoPointND:[self getTopPointWithInt:i]];
      [polyhedron_ endCurrentFace];
      OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *polygon = [polyhedron_ createPolygonWithInt:i + 1];
      if ([polyhedron_ allLabelsAreSet]) {
        [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) nil_chk(polygon)) setLabelWithNSString:nil];
      }
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:polygon withBoolean:NO];
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) nil_chk(polygon)) getSegments]), 3), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([polygon getSegments]), 2), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
    }
    if ([((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([self getPolyhedron])) allLabelsAreSet]) {
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) setLabelsWithNSStringArray:nil];
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) setLabelsWithNSStringArray:nil];
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) setLabelsWithNSStringArray:nil];
    }
    [self refreshOutput];
  }
  else if (newBottomPointsLength < nOld) {
    for (jint i = newBottomPointsLength; i < bottomPointsLength_; i++) {
      [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([outputPoints_ getElementWithInt:i - [self getShift]])) setUndefined];
    }
    [self updateOutputPoints];
    [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) getElementWithInt:newBottomPointsLength - 1])) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:[self getTopPointWithInt:newBottomPointsLength - 1] withOrgGeogebraCommonKernelKernelNDGeoPointND:[self getTopPoint]];
    OrgGeogebraCommonKernelGeosGeoPolygon *polygon = [self getTopFace];
    IOSObjectArray *p = [IOSObjectArray arrayWithLength:newBottomPointsLength type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()];
    IOSObjectArray_Set(p, 0, [self getTopPoint]);
    for (jint i = 0; i < newBottomPointsLength - 1; i++) IOSObjectArray_Set(p, 1 + i, [self getTopPointWithInt:i + 1]);
    [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:p];
    [polygon setSegmentsWithOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:[outputSegmentsTop_ getOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithLength:newBottomPointsLength type:OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_class_()]]];
    [polygon calcArea];
    polygon = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) getElementWithInt:newBottomPointsLength - 1];
    p = [IOSObjectArray arrayWithLength:4 type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()];
    IOSObjectArray_Set(p, 0, IOSObjectArray_Get(nil_chk(bottomPoints), newBottomPointsLength - 1));
    IOSObjectArray_Set(p, 1, IOSObjectArray_Get(bottomPoints, 0));
    IOSObjectArray_Set(p, 2, [self getTopPoint]);
    IOSObjectArray_Set(p, 3, [self getTopPointWithInt:newBottomPointsLength - 1]);
    [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) setPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:p withOrgGeogebraCommonKernelMatrixCoordSys:nil withBoolean:NO];
    IOSObjectArray *s = [IOSObjectArray arrayWithLength:4 type:OrgGeogebraCommonKernelKernelNDGeoSegmentND_class_()];
    IOSObjectArray_Set(s, 0, IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk([self getBottom])) getSegments]), newBottomPointsLength - 1));
    IOSObjectArray_Set(s, 1, [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) getElementWithInt:0]);
    IOSObjectArray_Set(s, 2, [outputSegmentsTop_ getElementWithInt:newBottomPointsLength - 1]);
    IOSObjectArray_Set(s, 3, [outputSegmentsSide_ getElementWithInt:newBottomPointsLength - 1]);
    [polygon setSegmentsWithOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:s];
    [polygon calcArea];
  }
  else [self updateOutputPoints];
  if (bottomPointsLength_ < newBottomPointsLength) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateTopWithInt_(self, newBottomPointsLength);
    for (jint i = bottomPointsLength_; i < newBottomPointsLength; i++) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateSideWithInt_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(self, i, bottomPoints, bottomSegments);
  }
  bottomPointsLength_ = newBottomPointsLength;
}

- (void)updateTopWithInt:(jint)n {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateTopWithInt_(self, n);
}

- (void)updateSideWithInt:(jint)index
withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)bottomPoints
withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)bottomSegments {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateSideWithInt_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(self, index, bottomPoints, bottomSegments);
}

- (void)removeBottomPointsWithInt:(jint)length {
  for (jint i = bottomPointsLength_; i < bottomPointsLength_ + length; i++) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) getElementWithInt:i - [self getShift]])) setUndefined];
}

- (void)updateOutputPoints {
  if (height_ == nil) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_set_uptranslation_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getTopPoint])) getInhomCoordsInD3])) subWithOrgGeogebraCommonKernelMatrixCoords:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk([self getBottomPoints]), 0))) getInhomCoordsInD3]]);
  else OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_set_uptranslation_(self, [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(bottom_)) getMainDirection])) normalized])) mulWithDouble:[height_ getDouble]]);
  IOSObjectArray *bottomPoints = [self getBottomPoints];
  if (bottomPoints != nil) {
    for (jint i = 0; i < [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) size] && i + [self getShift] < bottomPoints->size_; i++) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([outputPoints_ getElementWithInt:i])) setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(bottomPoints, i + [self getShift]))) getInhomCoordsInD3])) addWithOrgGeogebraCommonKernelMatrixCoords:uptranslation_] withBoolean:YES];
  }
}

- (void)compute {
  if (![self preCompute]) {
    for (jint i = 0; i < bottomPointsLength_ - [self getShift]; i++) [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) getElementWithInt:i])) setUndefined];
    return;
  }
  if (!bottomAsInput_) [self updateOutputPoints];
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_Prism();
}

- (void)updateOutput {
  id<JavaUtilCollection> faces = [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(polyhedron_)) getFacesCollection];
  jint top = [((id<JavaUtilCollection>) nil_chk(faces)) size];
  jint step = 1;
  for (OrgGeogebraCommonKernelGeosGeoPolygon * __strong polygon in faces) {
    IOSObjectArray *segments = [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) getSegments];
    if (step == 1 && !bottomAsInput_) {
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsBottom_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) check_class_cast(polygon, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D class]) withBoolean:NO];
      for (jint i = 0; i < ((IOSObjectArray *) nil_chk(segments))->size_; i++) [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(segments, i), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
      step++;
      continue;
    }
    else if (step == top) {
      [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsTop_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) check_class_cast(polygon, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D class]) withBoolean:NO];
      for (jint i = 0; i < ((IOSObjectArray *) nil_chk(segments))->size_; i++) [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(segments, i), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
      step++;
      continue;
    }
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *) check_class_cast(polygon, [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D class]) withBoolean:NO];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) addOutputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) check_class_cast(IOSObjectArray_Get(nil_chk([polygon getSegments]), 3), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D class]) withBoolean:NO];
    step++;
  }
  [self refreshOutput];
}

- (jint)getSideLengthFromLabelsLengthWithInt:(jint)length {
  if (bottomAsInput_) return (length + [self getShift] - 2) / 4;
  return (length + [self getShift] - 3) / 5;
}

- (void)updateVolumeWithDouble:(jdouble)height {
  [super updateVolumeWithDouble:height];
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([self getPolyhedron])) setVolumeWithDouble:[((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk([self getBottom])) getArea] * height];
}

- (void)updateDependentGeos {
  [super updateDependentGeos];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) update];
  if (![((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([self getPolyhedron])) allLabelsAreSet]) {
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) updateParentAlgorithm];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) updateParentAlgorithm];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) updateParentAlgorithm];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsBottom_)) updateParentAlgorithm];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) updateParentAlgorithm];
    [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsTop_)) updateParentAlgorithm];
  }
}

- (void)updateOutputSegmentsAndPolygonsParentAlgorithms {
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsBottom_)) updateParentAlgorithm];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsSide_)) updateParentAlgorithm];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputSegmentsTop_)) updateParentAlgorithm];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsBottom_)) updateParentAlgorithm];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsSide_)) updateParentAlgorithm];
  [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolygonsTop_)) updateParentAlgorithm];
}

- (void)dealloc {
  RELEASE_(uptranslation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoPolyhedronPointsPrism", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:", "AlgoPolyhedronPointsPrism", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoPolyhedronPointsPrism", NULL, 0x1, NULL, NULL },
    { "createPolyhedronWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:", "createPolyhedron", "V", 0x4, NULL, NULL },
    { "getTopPointWithInt:", "getTopPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "updateOutputWithInt:", "updateOutput", "V", 0x4, NULL, NULL },
    { "updateTopWithInt:", "updateTop", "V", 0x2, NULL, NULL },
    { "updateSideWithInt:withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:", "updateSide", "V", 0x2, NULL, NULL },
    { "removeBottomPointsWithInt:", "removeBottomPoints", "V", 0x4, NULL, NULL },
    { "updateOutputPoints", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "updateOutput", NULL, "V", 0x4, NULL, NULL },
    { "getSideLengthFromLabelsLengthWithInt:", "getSideLengthFromLabelsLength", "I", 0x4, NULL, NULL },
    { "updateVolumeWithDouble:", "updateVolume", "V", 0x4, NULL, NULL },
    { "updateDependentGeos", NULL, "V", 0x4, NULL, NULL },
    { "updateOutputSegmentsAndPolygonsParentAlgorithms", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "uptranslation_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism = { 2, "AlgoPolyhedronPointsPrism", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 17, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *polygon, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPoints_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, labels, polygon, point);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *polygon, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, labels, polygon, point);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, IOSObjectArray *points) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPoints_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(self, c, labels, points);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, IOSObjectArray *points) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_(self, c, labels, points);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *polygon, id<OrgGeogebraCommonKernelArithmeticNumberValue> height) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPoints_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, polygon, height);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonKernelGeosGeoPolygon *polygon, id<OrgGeogebraCommonKernelArithmeticNumberValue> height) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelGeosGeoPolygon_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, c, labels, polygon, height);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateTopWithInt_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self, jint n) {
  OrgGeogebraCommonKernelGeosGeoPolygon *polygon = [self getTopFace];
  IOSObjectArray *p = [IOSObjectArray arrayWithLength:n type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()];
  IOSObjectArray_Set(p, 0, [self getTopPoint]);
  for (jint i = 0; i < n - 1; i++) IOSObjectArray_Set(p, 1 + i, [self getTopPointWithInt:i + 1]);
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:p];
  [polygon setSegmentsWithOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:[((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsTop_)) getOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithLength:n type:OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_class_()]]];
  [polygon calcArea];
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism_updateSideWithInt_withOrgGeogebraCommonKernelKernelNDGeoPointNDArray_withOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism *self, jint index, IOSObjectArray *bottomPoints, IOSObjectArray *bottomSegments) {
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsTop_)) getElementWithInt:index - 1])) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointND:[self getTopPointWithInt:index - 1] withOrgGeogebraCommonKernelKernelNDGeoPointND:[self getTopPointWithInt:index]];
  OrgGeogebraCommonKernelGeosGeoPolygon *polygon = [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPolygonsSide_)) getElementWithInt:index - 1];
  IOSObjectArray *p = [IOSObjectArray arrayWithLength:4 type:OrgGeogebraCommonKernelKernelNDGeoPointND_class_()];
  IOSObjectArray_Set(p, 0, IOSObjectArray_Get(nil_chk(bottomPoints), index - 1));
  IOSObjectArray_Set(p, 1, IOSObjectArray_Get(bottomPoints, index));
  IOSObjectArray_Set(p, 2, [self getTopPointWithInt:index]);
  IOSObjectArray_Set(p, 3, [self getTopPointWithInt:index - 1]);
  [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) modifyInputPointsWithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:p];
  IOSObjectArray *s = [IOSObjectArray arrayWithLength:4 type:OrgGeogebraCommonKernelKernelNDGeoSegmentND_class_()];
  IOSObjectArray_Set(s, 0, IOSObjectArray_Get(nil_chk(bottomSegments), index - 1));
  IOSObjectArray_Set(s, 1, [((OrgGeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputSegmentsSide_)) getElementWithInt:index]);
  IOSObjectArray_Set(s, 2, [self->outputSegmentsTop_ getElementWithInt:index - 1]);
  IOSObjectArray_Set(s, 3, [self->outputSegmentsSide_ getElementWithInt:index - 1]);
  [polygon setSegmentsWithOrgGeogebraCommonKernelKernelNDGeoSegmentNDArray:s];
  [polygon calcArea];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronPointsPrism)
