//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoDrawingPadCorner3D.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian3D/EuclidianView3DInterface.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoDrawingPadCorner3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoDrawingPadCorner.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/App.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)number
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)evNum {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, number, evNum);
  return self;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
}

+ (jboolean)is3DWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)nv {
  return OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_is3DWithOrgGeogebraCommonKernelArithmeticNumberValue_(nv);
}

- (void)compute {
  OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons_)) getApplication];
  if (evNum_ != nil && OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_is3DWithOrgGeogebraCommonKernelArithmeticNumberValue_(evNum_)) {
    if (![((OrgGeogebraCommonMainApp *) nil_chk(app)) hasEuclidianView3D] || ![((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) isGeoElement3D]) {
      [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setUndefined];
      return;
    }
    id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface> ev = [app getEuclidianView3D];
    {
      OrgGeogebraCommonKernelMatrixCoords *eye;
      switch (J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(number_)) getDouble])) {
        case 1:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmin] withDouble:[ev getYmin] withDouble:[ev getZmin] withDouble:1.0];
        break;
        case 2:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmax] withDouble:[ev getYmin] withDouble:[ev getZmin] withDouble:1.0];
        break;
        case 3:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmax] withDouble:[ev getYmax] withDouble:[ev getZmin] withDouble:1.0];
        break;
        case 4:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmin] withDouble:[ev getYmax] withDouble:[ev getZmin] withDouble:1.0];
        break;
        case 5:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmin] withDouble:[ev getYmin] withDouble:[ev getZmax] withDouble:1.0];
        break;
        case 6:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmax] withDouble:[ev getYmin] withDouble:[ev getZmax] withDouble:1.0];
        break;
        case 7:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmax] withDouble:[ev getYmax] withDouble:[ev getZmax] withDouble:1.0];
        break;
        case 8:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getXmin] withDouble:[ev getYmax] withDouble:[ev getZmax] withDouble:1.0];
        break;
        case 9:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getWidth] withDouble:[ev getHeight] withDouble:1.0];
        break;
        case 10:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[app getWidth] withDouble:[app getHeight] withDouble:1.0];
        break;
        case 11:
        eye = [((id<OrgGeogebraCommonEuclidian3DEuclidianView3DInterface>) nil_chk(ev)) getEyePosition];
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setCoordsWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(eye)) getX] withDouble:[eye getY] withDouble:[eye getZ] withDouble:1.0];
        break;
        default:
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) setUndefined];
        break;
      }
    }
  }
  else {
    [super compute];
  }
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(corner_)) isGeoElement3D] && ([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) isSaving] || [kernel_ isGettingUndo] || [((OrgGeogebraCommonKernelConstruction *) nil_chk([self getConstruction])) isGettingXMLForReplace])) {
    return OrgGeogebraCommonKernelCommandsCommandsEnum_get_CornerThreeD();
  }
  return [super getClassName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelArithmeticNumberValue:", "AlgoDrawingPadCorner3D", NULL, 0x1, NULL, NULL },
    { "newGeoPointWithOrgGeogebraCommonKernelConstruction:", "newGeoPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "is3DWithOrgGeogebraCommonKernelArithmeticNumberValue:", "is3D", "Z", 0x19, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D = { 2, "AlgoDrawingPadCorner3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> number, id<OrgGeogebraCommonKernelArithmeticNumberValue> evNum) {
  (void) OrgGeogebraCommonKernelAlgosAlgoDrawingPadCorner_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(self, cons, label, number, evNum, 9);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelArithmeticNumberValue> number, id<OrgGeogebraCommonKernelArithmeticNumberValue> evNum) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, number, evNum);
  return self;
}

jboolean OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_is3DWithOrgGeogebraCommonKernelArithmeticNumberValue_(id<OrgGeogebraCommonKernelArithmeticNumberValue> nv) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_initialize();
  return OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(nv)) getDouble], -1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D)
