//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectPlanePolygon.java
//

#ifndef _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon_H_
#define _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectLinePolygon3D.h"

@class IOSObjectArray;
@class JavaUtilTreeMap;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoPolygon;
@protocol OrgGeogebraCommonKernelKernelNDHasSegments;

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon : OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectLinePolygon3D

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                          withNSStringArray:(IOSObjectArray *)labels
      withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)plane
                  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)p;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

#pragma mark Protected

- (jboolean)checkParameterWithDouble:(jdouble)t1;

- (OrgGeogebraCommonKernelGeosGeoElement *)getFirstInput;

- (void)intersectionsCoordsWithOrgGeogebraCommonKernelKernelNDHasSegments:(id<OrgGeogebraCommonKernelKernelNDHasSegments>)p
                                                      withJavaUtilTreeMap:(JavaUtilTreeMap *)newCoords;

- (void)setFirstInputWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setIntersectionLine;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon *self, OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *plane, OrgGeogebraCommonKernelGeosGeoPolygon *p);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonKernelConstruction *c, IOSObjectArray *labels, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *plane, OrgGeogebraCommonKernelGeosGeoPolygon *p) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon)

#endif // _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanePolygon_H_
