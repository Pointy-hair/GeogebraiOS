//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicFociLength3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoConicFociLength3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "org/geogebra/common/kernel/Matrix/CoordSys.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoConicFociLengthND.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D () {
 @public
  OrgGeogebraCommonKernelGeosGeoPoint *A2d_, *B2d_;
  OrgGeogebraCommonKernelMatrixCoords *project_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D, A2d_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D, B2d_, OrgGeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D, project_, OrgGeogebraCommonKernelMatrixCoords *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
           withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)a
          withOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, A, B, a, orientation);
  return self;
}

- (void)setOrientationWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:(id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D_set_orientation_(self, orientation);
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)newGeoConicWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *ret = [new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_initWithOrgGeogebraCommonKernelConstruction_(cons) autorelease];
  [ret setCoordSysWithOrgGeogebraCommonKernelMatrixCoordSys:[new_OrgGeogebraCommonKernelMatrixCoordSys_initWithInt_(2) autorelease]];
  return ret;
}

- (void)setInput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(B_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 2, ageo_);
  IOSObjectArray_Set(input_, 3, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(orientation_, [OrgGeogebraCommonKernelGeosGeoElement class]));
}

- (void)setInputOutput {
  [super setInputOutput];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D_setAndConsume_A2d_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_));
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D_setAndConsume_B2d_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(cons_));
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getA2d {
  return A2d_;
}

- (OrgGeogebraCommonKernelGeosGeoPoint *)getB2d {
  return B2d_;
}

- (void)compute {
  if (orientation_ == [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getSpace]) {
    [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoords *vn = [((id<OrgGeogebraCommonKernelKernelNDGeoDirectionND>) nil_chk(orientation_)) getDirectionInD3];
  if ([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(vn)) isZero]) {
    [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoordSys *cs = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) getCoordSys];
  [((OrgGeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) resetCoordSys];
  OrgGeogebraCommonKernelMatrixCoords *Ac = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *Bc = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getInhomCoordsInD3];
  OrgGeogebraCommonKernelMatrixCoords *d1 = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Bc)) subWithOrgGeogebraCommonKernelMatrixCoords:Ac];
  if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d1)) dotproductWithOrgGeogebraCommonKernelMatrixCoords:vn])) {
    [conic_ setUndefined];
    return;
  }
  [cs addPointWithOrgGeogebraCommonKernelMatrixCoords:Ac];
  [cs addVectorWithOrgGeogebraCommonKernelMatrixCoords:d1];
  [cs addVectorWithOrgGeogebraCommonKernelMatrixCoords:[vn crossProduct4WithOrgGeogebraCommonKernelMatrixCoords:d1]];
  if (![cs makeOrthoMatrixWithBoolean:NO withBoolean:NO]) {
    [conic_ setUndefined];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoordMatrix4x4 *matrix = [cs getMatrixOrthonormal];
  [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(Ac)) projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrix withOrgGeogebraCommonKernelMatrixCoords:project_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(A2d_)) setCoordsWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(project_)) getX] withDouble:[project_ getY] withDouble:[project_ getW]];
  [Bc projectPlaneInPlaneCoordsWithOrgGeogebraCommonKernelMatrixCoordMatrix:matrix withOrgGeogebraCommonKernelMatrixCoords:project_];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(B2d_)) setCoordsWithDouble:[project_ getX] withDouble:[project_ getY] withDouble:[project_ getW]];
  [super compute];
}

- (void)initCoords {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D_setAndConsume_project_(self, new_OrgGeogebraCommonKernelMatrixCoords_initWithInt_(4));
}

- (void)dealloc {
  RELEASE_(orientation_);
  RELEASE_(A2d_);
  RELEASE_(B2d_);
  RELEASE_(project_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoConicFociLength3D", NULL, 0x1, NULL, NULL },
    { "setOrientationWithOrgGeogebraCommonKernelKernelNDGeoDirectionND:", "setOrientation", "V", 0x4, NULL, NULL },
    { "newGeoConicWithOrgGeogebraCommonKernelConstruction:", "newGeoConic", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "setInput", NULL, "V", 0x4, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getA2d", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x4, NULL, NULL },
    { "getB2d", NULL, "Lorg.geogebra.common.kernel.geos.GeoPoint;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "orientation_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoDirectionND;", NULL, NULL,  },
    { "A2d_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "B2d_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "project_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D = { 2, "AlgoConicFociLength3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> A, id<OrgGeogebraCommonKernelKernelNDGeoPointND> B, id<OrgGeogebraCommonKernelArithmeticNumberValue> a, id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  OrgGeogebraCommonKernelAlgosAlgoConicFociLengthND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelArithmeticNumberValue_withOrgGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, A, B, a, orientation);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D)
