//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrtho.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrtho.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/ConstructionElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrtho

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                  withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)ortho {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrtho_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(self, cons, label, point, ortho);
  return self;
}

- (void)setSpecificInputOutput {
  [self setInputOutputWithOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(point_, [OrgGeogebraCommonKernelGeosGeoElement class]), inputOrtho_ } count:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()] withOrgGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray newArrayWithObjects:(id[]){ line_ } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getLine {
  return line_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPoint {
  return point_;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getInputOrtho {
  return inputOrtho_;
}

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl {
  return [((OrgGeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"LineThroughAPerpendicularToB" withNSString:[((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl] withNSString:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(inputOrtho_)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoElement:", "AlgoOrtho", NULL, 0x1, NULL, NULL },
    { "setSpecificInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getLine", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", 0x1, NULL, NULL },
    { "getPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getInputOrtho", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "toStringWithOrgGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "point_", NULL, 0x4, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "inputOrtho_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "line_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrtho = { 2, "AlgoOrtho", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrtho;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrtho_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrtho *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelKernelNDGeoPointND> point, OrgGeogebraCommonKernelGeosGeoElement *ortho) {
  (void) OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, cons);
  self->point_ = point;
  self->inputOrtho_ = ortho;
  self->line_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithOrgGeogebraCommonKernelConstruction_(cons);
  [self setSpecificInputOutput];
  [self compute];
  [self->line_ setLabelWithNSString:label];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoOrtho)
