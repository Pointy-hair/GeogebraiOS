//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoClosestPointToRegion3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoClosestPointToRegion3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Region.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/commands/Commands.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D () {
 @public
  id<OrgGeogebraCommonKernelRegion> r_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> P_;
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> geoPointOnRegion_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D, r_, id<OrgGeogebraCommonKernelRegion>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D, P_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D, geoPointOnRegion_, id<OrgGeogebraCommonKernelKernelNDGeoPointND>)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)c
                                               withNSString:(NSString *)label
                          withOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)r
              withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, label, r, P);
  return self;
}

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return OrgGeogebraCommonKernelCommandsCommandsEnum_get_ClosestPointRegion();
}

- (void)setInputOutput {
  OrgGeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(r_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [OrgGeogebraCommonKernelGeosGeoElement class]));
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(geoPointOnRegion_, [OrgGeogebraCommonKernelGeosGeoElement class])];
  [self setDependencies];
}

- (id<OrgGeogebraCommonKernelRegion>)getInputRegion {
  return r_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getInputPoint {
  return P_;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getOutputPoint {
  return geoPointOnRegion_;
}

- (void)compute {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 0))) isDefined] && [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P_)) isDefined]) {
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(geoPointOnRegion_)) setCoordsWithOrgGeogebraCommonKernelMatrixCoords:[P_ getInhomCoordsInD3] withBoolean:NO];
    [((id<OrgGeogebraCommonKernelRegion>) nil_chk(r_)) pointChangedForRegionWithOrgGeogebraCommonKernelKernelNDGeoPointND:geoPointOnRegion_];
    [geoPointOnRegion_ updateCoords];
  }
  else {
    [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(geoPointOnRegion_)) setUndefined];
  }
}

- (void)dealloc {
  RELEASE_(r_);
  RELEASE_(P_);
  RELEASE_(geoPointOnRegion_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelRegion:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "AlgoClosestPointToRegion3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lorg.geogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getInputRegion", NULL, "Lorg.geogebra.common.kernel.Region;", 0x0, NULL, NULL },
    { "getInputPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x0, NULL, NULL },
    { "getOutputPoint", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "r_", NULL, 0x2, "Lorg.geogebra.common.kernel.Region;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "geoPointOnRegion_", NULL, 0x2, "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D = { 2, "AlgoClosestPointToRegion3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D *self, OrgGeogebraCommonKernelConstruction *c, NSString *label, id<OrgGeogebraCommonKernelRegion> r, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithOrgGeogebraCommonKernelConstruction_(self, c);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_set_r_(self, r);
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_set_P_(self, P);
  if ([((id<OrgGeogebraCommonKernelRegion>) nil_chk(r)) isGeoElement3D]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_setAndConsume_geoPointOnRegion_(self, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithOrgGeogebraCommonKernelConstruction_(c));
  }
  else {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_setAndConsume_geoPointOnRegion_(self, new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_(c));
  }
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->geoPointOnRegion_)) setRegionWithOrgGeogebraCommonKernelRegion:r];
  [self setInputOutput];
  [self compute];
  [self->geoPointOnRegion_ setLabelWithNSString:label];
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonKernelConstruction *c, NSString *label, id<OrgGeogebraCommonKernelRegion> r, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, c, label, r, P);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoClosestPointToRegion3D)
