//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPoint3DInRegion.java
//

#ifndef _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_H_
#define _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"

@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D;
@class OrgGeogebraCommonKernelCommandsCommandsEnum;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelMatrixCoords;
@class OrgGeogebraCommonKernelStringTemplate;
@protocol OrgGeogebraCommonKernelRegion;

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion : OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                          withOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)region
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords;

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
                          withOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)region
                    withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)coords;

- (void)compute;

- (OrgGeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)getP;

- (NSString *)toStringWithOrgGeogebraCommonKernelStringTemplate:(OrgGeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (void)setInputOutput;

#pragma mark Package-Private

- (id<OrgGeogebraCommonKernelRegion>)getRegion;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self, OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelRegion> region, OrgGeogebraCommonKernelMatrixCoords *coords);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonKernelConstruction *cons, id<OrgGeogebraCommonKernelRegion> region, OrgGeogebraCommonKernelMatrixCoords *coords) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelRegion> region, OrgGeogebraCommonKernelMatrixCoords *coords);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelRegion_withOrgGeogebraCommonKernelMatrixCoords_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, id<OrgGeogebraCommonKernelRegion> region, OrgGeogebraCommonKernelMatrixCoords *coords) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion)

#endif // _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_H_
