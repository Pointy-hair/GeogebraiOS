//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAxes3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoAxes3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/algos/AlgoAxesQuadricND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoQuadricND.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D () {
 @public
  OrgGeogebraCommonKernelMatrixCoords *midpoint_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D, midpoint_, OrgGeogebraCommonKernelMatrixCoords *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withNSString:(NSString *)label
            withOrgGeogebraCommonKernelKernelNDGeoQuadricND:(OrgGeogebraCommonKernelKernelNDGeoQuadricND *)c {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(self, cons, label, c);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                          withNSStringArray:(IOSObjectArray *)labels
            withOrgGeogebraCommonKernelKernelNDGeoQuadricND:(OrgGeogebraCommonKernelKernelNDGeoQuadricND *)c {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(self, cons, labels, c);
  return self;
}

- (void)createInput {
  jint d = [((OrgGeogebraCommonKernelKernelNDGeoQuadricND *) nil_chk(c_)) getDimension];
  OrgGeogebraCommonKernelAlgosAlgoAxesQuadricND_setAndConsume_axes_(self, [IOSObjectArray newArrayWithLength:d type:OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_class_()]);
  for (jint i = 0; i < d; i++) {
    IOSObjectArray_SetAndConsume(axes_, i, new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithOrgGeogebraCommonKernelConstruction_(cons_));
  }
}

- (void)compute {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_set_midpoint_(self, [((OrgGeogebraCommonKernelKernelNDGeoQuadricND *) nil_chk(c_)) getMidpoint3D]);
  [super compute];
}

- (void)setAxisCoordsWithInt:(jint)i {
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *axis = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(nil_chk(axes_), i), [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class]);
  [((OrgGeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(axis)) setCoordWithOrgGeogebraCommonKernelMatrixCoords:midpoint_ withOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelKernelNDGeoQuadricND *) nil_chk(c_)) getEigenvec3DWithInt:i]];
}

- (void)dealloc {
  RELEASE_(midpoint_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelConstruction:withNSString:withOrgGeogebraCommonKernelKernelNDGeoQuadricND:", "AlgoAxes3D", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonKernelConstruction:withNSStringArray:withOrgGeogebraCommonKernelKernelNDGeoQuadricND:", "AlgoAxes3D", NULL, 0x1, NULL, NULL },
    { "createInput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setAxisCoordsWithInt:", "setAxisCoords", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "midpoint_", NULL, 0x2, "Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D = { 2, "AlgoAxes3D", "org.geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D *self, OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelKernelNDGeoQuadricND *c) {
  OrgGeogebraCommonKernelAlgosAlgoAxesQuadricND_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(self, cons, label, c);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(OrgGeogebraCommonKernelConstruction *cons, NSString *label, OrgGeogebraCommonKernelKernelNDGeoQuadricND *c) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(self, cons, label, c);
  return self;
}

void OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D *self, OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelKernelNDGeoQuadricND *c) {
  OrgGeogebraCommonKernelAlgosAlgoAxesQuadricND_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(self, cons, labels, c);
}

OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D *new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(OrgGeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, OrgGeogebraCommonKernelKernelNDGeoQuadricND *c) {
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D *self = [OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D_initWithOrgGeogebraCommonKernelConstruction_withNSStringArray_withOrgGeogebraCommonKernelKernelNDGeoQuadricND_(self, cons, labels, c);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoAxes3D)
