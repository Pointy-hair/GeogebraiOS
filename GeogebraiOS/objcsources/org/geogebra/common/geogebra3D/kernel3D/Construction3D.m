//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/kernel3D/Construction3D.java
//


#include "J2ObjC_source.h"
#include "java/util/HashMap.h"
#include "org/geogebra/common/geogebra3D/kernel3D/Construction3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/ConstructionDefaults3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/Kernel3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoAxis3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoClippingCube3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3DConstant.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoSpace.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoAxisND.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonGeogebra3DKernel3DConstruction3D () {
 @public
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *zAxis3D_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3DConstant *xOyPlane_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSpace *space_;
  OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D *clippingCube_;
  NSString *zAxis3DLocalName_, *xOyPlaneLocalName_, *spaceLocalName_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D, zAxis3D_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D, xOyPlane_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3DConstant *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D, space_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSpace *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D, clippingCube_, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D, zAxis3DLocalName_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D, xOyPlaneLocalName_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D, spaceLocalName_, NSString *)

@implementation OrgGeogebraCommonGeogebra3DKernel3DConstruction3D

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D:(OrgGeogebraCommonGeogebra3DKernel3DKernel3D *)kernel3D {
  OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D_(self, kernel3D);
  return self;
}

- (void)initAxis {
  [super initAxis];
  zAxis3D_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, OrgGeogebraCommonKernelKernelNDGeoAxisND_Z_AXIS_3D);
  xOyPlane_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3DConstant_initWithOrgGeogebraCommonKernelConstruction_withInt_(self, OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3DConstant_XOY_PLANE);
  space_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSpace_initWithOrgGeogebraCommonKernelConstruction_(self);
  clippingCube_ = new_OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D_initWithOrgGeogebraCommonKernelConstruction_(self);
}

- (id<OrgGeogebraCommonKernelKernelNDGeoAxisND>)getXAxis3D {
  return [super getXAxis];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoAxisND>)getYAxis3D {
  return [super getYAxis];
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *)getZAxis3D {
  return zAxis3D_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3DConstant *)getXOYPlane {
  return xOyPlane_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSpace *)getSpace {
  return space_;
}

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D *)getClippingCube {
  return clippingCube_;
}

- (void)newConstructionDefaults {
  consDefaults_ = new_OrgGeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_initWithOrgGeogebraCommonKernelConstruction_(self);
}

- (void)initGeoTables {
  [super initGeoTables];
  (void) [((JavaUtilHashMap *) nil_chk(geoTable_)) putWithId:@"zAxis" withId:zAxis3D_];
  (void) [geoTable_ putWithId:@"xOyPlane" withId:xOyPlane_];
  (void) [geoTable_ putWithId:@"space" withId:space_];
  if (zAxis3DLocalName_ != nil) {
    (void) [geoTable_ putWithId:zAxis3DLocalName_ withId:zAxis3D_];
    (void) [geoTable_ putWithId:xOyPlaneLocalName_ withId:xOyPlane_];
    (void) [geoTable_ putWithId:spaceLocalName_ withId:space_];
  }
}

- (void)updateLocalAxesNames {
  [super updateLocalAxesNames];
  (void) [((JavaUtilHashMap *) nil_chk(geoTable_)) removeWithId:zAxis3DLocalName_];
  (void) [geoTable_ removeWithId:xOyPlaneLocalName_];
  (void) [geoTable_ removeWithId:spaceLocalName_];
  OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonKernelKernel *) nil_chk([self getKernel])) getApplication];
  zAxis3DLocalName_ = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getPlainWithNSString:@"zAxis"];
  xOyPlaneLocalName_ = [app getPlainWithNSString:@"xOyPlane"];
  spaceLocalName_ = [app getPlainWithNSString:@"space"];
  (void) [geoTable_ putWithId:zAxis3DLocalName_ withId:zAxis3D_];
  (void) [geoTable_ putWithId:xOyPlaneLocalName_ withId:xOyPlane_];
  (void) [geoTable_ putWithId:spaceLocalName_ withId:space_];
}

- (OrgGeogebraCommonKernelConstruction_ConstantsEnum *)isConstantElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  if (geo == zAxis3D_) return OrgGeogebraCommonKernelConstruction_ConstantsEnum_get_Z_AXIS();
  if (geo == xOyPlane_) return OrgGeogebraCommonKernelConstruction_ConstantsEnum_get_XOY_PLANE();
  if (geo == space_) return OrgGeogebraCommonKernelConstruction_ConstantsEnum_get_SPACE();
  return [super isConstantElementWithOrgGeogebraCommonKernelGeosGeoElement:geo];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D:", "Construction3D", NULL, 0x1, NULL, NULL },
    { "initAxis", NULL, "V", 0x4, NULL, NULL },
    { "getXAxis3D", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoAxisND;", 0x1, NULL, NULL },
    { "getYAxis3D", NULL, "Lorg.geogebra.common.kernel.kernelND.GeoAxisND;", 0x1, NULL, NULL },
    { "getZAxis3D", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoAxis3D;", 0x1, NULL, NULL },
    { "getXOYPlane", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPlane3DConstant;", 0x1, NULL, NULL },
    { "getSpace", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoSpace;", 0x1, NULL, NULL },
    { "getClippingCube", NULL, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoClippingCube3D;", 0x1, NULL, NULL },
    { "newConstructionDefaults", NULL, "V", 0x1, NULL, NULL },
    { "initGeoTables", NULL, "V", 0x4, NULL, NULL },
    { "updateLocalAxesNames", NULL, "V", 0x1, NULL, NULL },
    { "isConstantElementWithOrgGeogebraCommonKernelGeosGeoElement:", "isConstantElement", "Lorg.geogebra.common.kernel.Construction$Constants;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "zAxis3D_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoAxis3D;", NULL, NULL,  },
    { "xOyPlane_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoPlane3DConstant;", NULL, NULL,  },
    { "space_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoSpace;", NULL, NULL,  },
    { "clippingCube_", NULL, 0x2, "Lorg.geogebra.common.geogebra3D.kernel3D.geos.GeoClippingCube3D;", NULL, NULL,  },
    { "zAxis3DLocalName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "xOyPlaneLocalName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "spaceLocalName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DKernel3DConstruction3D = { 2, "Construction3D", "org.geogebra.common.geogebra3D.kernel3D", NULL, 0x1, 12, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DKernel3DConstruction3D;
}

@end

void OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D_(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D *self, OrgGeogebraCommonGeogebra3DKernel3DKernel3D *kernel3D) {
  (void) OrgGeogebraCommonKernelConstruction_initWithOrgGeogebraCommonKernelKernel_(self, kernel3D);
}

OrgGeogebraCommonGeogebra3DKernel3DConstruction3D *new_OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D_(OrgGeogebraCommonGeogebra3DKernel3DKernel3D *kernel3D) {
  OrgGeogebraCommonGeogebra3DKernel3DConstruction3D *self = [OrgGeogebraCommonGeogebra3DKernel3DConstruction3D alloc];
  OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D_(self, kernel3D);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D)
