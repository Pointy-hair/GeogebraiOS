//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/kernel3D/Construction3D.java
//

#ifndef _OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_H_
#define _OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/kernel/Construction.h"

@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3DConstant;
@class OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSpace;
@class OrgGeogebraCommonGeogebra3DKernel3DKernel3D;
@class OrgGeogebraCommonKernelGeosGeoElement;
@protocol OrgGeogebraCommonKernelKernelNDGeoAxisND;

@interface OrgGeogebraCommonGeogebra3DKernel3DConstruction3D : OrgGeogebraCommonKernelConstruction

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D:(OrgGeogebraCommonGeogebra3DKernel3DKernel3D *)kernel3D;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoClippingCube3D *)getClippingCube;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoSpace *)getSpace;

- (id<OrgGeogebraCommonKernelKernelNDGeoAxisND>)getXAxis3D;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3DConstant *)getXOYPlane;

- (id<OrgGeogebraCommonKernelKernelNDGeoAxisND>)getYAxis3D;

- (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *)getZAxis3D;

- (OrgGeogebraCommonKernelConstruction_ConstantsEnum *)isConstantElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)newConstructionDefaults OBJC_METHOD_FAMILY_NONE;

- (void)updateLocalAxesNames;

#pragma mark Protected

- (void)initAxis OBJC_METHOD_FAMILY_NONE;

- (void)initGeoTables OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D)

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D_(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D *self, OrgGeogebraCommonGeogebra3DKernel3DKernel3D *kernel3D);

FOUNDATION_EXPORT OrgGeogebraCommonGeogebra3DKernel3DConstruction3D *new_OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_initWithOrgGeogebraCommonGeogebra3DKernel3DKernel3D_(OrgGeogebraCommonGeogebra3DKernel3DKernel3D *kernel3D) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DKernel3DConstruction3D)

#endif // _OrgGeogebraCommonGeogebra3DKernel3DConstruction3D_H_
