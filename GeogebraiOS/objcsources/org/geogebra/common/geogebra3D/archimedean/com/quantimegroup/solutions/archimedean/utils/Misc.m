//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Misc.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/geom/IFacet.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Misc.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/OrderedTriple.h"

@interface OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_init(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc *self);

__attribute__((unused)) static OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_init() NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc

- (instancetype)init {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_init(self);
  return self;
}

+ (jint)arrayCompareWithIntArray:(IOSIntArray *)a
                    withIntArray:(IOSIntArray *)b {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(a, b);
}

+ (void)arrayRotateWithIntArray:(IOSIntArray *)a
                        withInt:(jint)d {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayRotateWithIntArray_withInt_(a, d);
}

+ (IOSIntArray *)cloneWithIntArray:(IOSIntArray *)a {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_cloneWithIntArray_(a);
}

+ (void)arrayReverseWithIntArray:(IOSIntArray *)a {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithIntArray_(a);
}

+ (void)arrayReverseWithNSObjectArray:(IOSObjectArray *)a {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithNSObjectArray_(a);
}

+ (jdouble)roundWithDouble:(jdouble)d
                   withInt:(jint)mantissaLength {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_roundWithDouble_withInt_(d, mantissaLength);
}

+ (NSString *)joinStringsWithNSStringArray:(IOSObjectArray *)strings
                              withNSString:(NSString *)joinString {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_joinStringsWithNSStringArray_withNSString_(strings, joinString);
}

+ (NSString *)joinStringsWithNSStringArray:(IOSObjectArray *)strings
                                   withInt:(jint)beginIndex
                                   withInt:(jint)endIndex
                              withNSString:(NSString *)joinString {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_joinStringsWithNSStringArray_withInt_withInt_withNSString_(strings, beginIndex, endIndex, joinString);
}

+ (jdouble)clampWithDouble:(jdouble)value
                withDouble:(jdouble)min
                withDouble:(jdouble)max {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_clampWithDouble_withDouble_withDouble_(value, min, max);
}

+ (jint)countOccurencesWithIntArray:(IOSIntArray *)array
                            withInt:(jint)value {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_countOccurencesWithIntArray_withInt_(array, value);
}

+ (jboolean)betweenExclusiveWithDouble:(jdouble)value
                            withDouble:(jdouble)rangeStart
                            withDouble:(jdouble)rangeEnd {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenExclusiveWithDouble_withDouble_withDouble_(value, rangeStart, rangeEnd);
}

+ (jboolean)betweenInclusiveWithDouble:(jdouble)value
                            withDouble:(jdouble)rangeStart
                            withDouble:(jdouble)rangeEnd
                            withDouble:(jdouble)epsilon {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenInclusiveWithDouble_withDouble_withDouble_withDouble_(value, rangeStart, rangeEnd, epsilon);
}

+ (jboolean)betweenInclusiveWithDouble:(jdouble)value
                            withDouble:(jdouble)rangeStart
                            withDouble:(jdouble)rangeEnd {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenInclusiveWithDouble_withDouble_withDouble_(value, rangeStart, rangeEnd);
}

+ (IOSObjectArray *)threeDistinctPointsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet:(id<OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet>)facet {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_threeDistinctPointsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet_(facet);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Misc", NULL, 0x2, NULL, NULL },
    { "arrayCompareWithIntArray:withIntArray:", "arrayCompare", "I", 0x9, NULL, NULL },
    { "arrayRotateWithIntArray:withInt:", "arrayRotate", "V", 0x9, NULL, NULL },
    { "cloneWithIntArray:", "clone", "[I", 0x19, NULL, NULL },
    { "arrayReverseWithIntArray:", "arrayReverse", "V", 0x9, NULL, NULL },
    { "arrayReverseWithNSObjectArray:", "arrayReverse", "V", 0x9, NULL, NULL },
    { "roundWithDouble:withInt:", "round", "D", 0x9, NULL, NULL },
    { "joinStringsWithNSStringArray:withNSString:", "joinStrings", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "joinStringsWithNSStringArray:withInt:withInt:withNSString:", "joinStrings", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "clampWithDouble:withDouble:withDouble:", "clamp", "D", 0x9, NULL, NULL },
    { "countOccurencesWithIntArray:withInt:", "countOccurences", "I", 0x9, NULL, NULL },
    { "betweenExclusiveWithDouble:withDouble:withDouble:", "betweenExclusive", "Z", 0x9, NULL, NULL },
    { "betweenInclusiveWithDouble:withDouble:withDouble:withDouble:", "betweenInclusive", "Z", 0x9, NULL, NULL },
    { "betweenInclusiveWithDouble:withDouble:withDouble:", "betweenInclusive", "Z", 0x9, NULL, NULL },
    { "threeDistinctPointsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet:", "threeDistinctPoints", "[Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.OrderedTriple;", 0x9, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc = { 2, "Misc", "org.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils", NULL, 0x1, 15, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc;
}

@end

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_init(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_init() {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_init(self);
  return self;
}

jint OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(IOSIntArray *a, IOSIntArray *b) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  if (((IOSIntArray *) nil_chk(a))->size_ < ((IOSIntArray *) nil_chk(b))->size_) return -1;
  if (a->size_ > b->size_) return 1;
  for (jint i = 0; i < a->size_; ++i) {
    if (IOSIntArray_Get(a, i) < IOSIntArray_Get(b, i)) return -1;
    if (IOSIntArray_Get(a, i) > IOSIntArray_Get(b, i)) return 1;
  }
  return 0;
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayRotateWithIntArray_withInt_(IOSIntArray *a, jint d) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  if (d >= 0) {
    d %= ((IOSIntArray *) nil_chk(a))->size_;
    if (d == 0) {
      return;
    }
    IOSIntArray *copy_ = OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_cloneWithIntArray_(a);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, a, d, a->size_ - d);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(copy_, a->size_ - d, a, 0, d);
  }
  else {
    d *= -1;
    d %= ((IOSIntArray *) nil_chk(a))->size_;
    IOSIntArray *copy_ = OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_cloneWithIntArray_(a);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, d, a, 0, a->size_ - d);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(copy_, 0, a, a->size_ - d, d);
  }
}

IOSIntArray *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_cloneWithIntArray_(IOSIntArray *a) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  IOSIntArray *ret = [IOSIntArray newArrayWithLength:((IOSIntArray *) nil_chk(a))->size_];
  for (jint index = 0; index < a->size_; index++) {
    *IOSIntArray_GetRef(ret, index) = IOSIntArray_Get(a, index);
  }
  return ret;
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithIntArray_(IOSIntArray *a) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(a))->size_ / 2; ++i) {
    jint temp = IOSIntArray_Get(a, i);
    *IOSIntArray_GetRef(a, i) = IOSIntArray_Get(a, a->size_ - i - 1);
    *IOSIntArray_GetRef(a, a->size_ - i - 1) = temp;
  }
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithNSObjectArray_(IOSObjectArray *a) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(a))->size_ / 2; ++i) {
    id temp = IOSObjectArray_Get(a, i);
    (void) IOSObjectArray_Set(a, i, IOSObjectArray_Get(a, a->size_ - i - 1));
    (void) IOSObjectArray_Set(a, a->size_ - i - 1, temp);
  }
}

jdouble OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_roundWithDouble_withInt_(jdouble d, jint mantissaLength) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  for (jint i = 0; i < mantissaLength; ++i) {
    d *= 10;
  }
  d = JavaLangMath_roundWithDouble_(d);
  for (jint i = 0; i < mantissaLength; ++i) {
    d /= 10;
  }
  return d;
}

NSString *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_joinStringsWithNSStringArray_withNSString_(IOSObjectArray *strings, NSString *joinString) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_joinStringsWithNSStringArray_withInt_withInt_withNSString_(strings, 0, ((IOSObjectArray *) nil_chk(strings))->size_, joinString);
}

NSString *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_joinStringsWithNSStringArray_withInt_withInt_withNSString_(IOSObjectArray *strings, jint beginIndex, jint endIndex, NSString *joinString) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  if (endIndex - beginIndex <= 0) {
    return @"";
  }
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithNSString_(IOSObjectArray_Get(nil_chk(strings), beginIndex));
  for (jint i = beginIndex + 1; i < endIndex; ++i) {
    (void) [buf appendWithNSString:joinString];
    (void) [buf appendWithNSString:IOSObjectArray_Get(strings, i)];
  }
  return [buf description];
}

jdouble OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_clampWithDouble_withDouble_withDouble_(jdouble value, jdouble min, jdouble max) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  if (value < min) {
    return min;
  }
  else if (value > max) {
    return max;
  }
  else {
    return value;
  }
}

jint OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_countOccurencesWithIntArray_withInt_(IOSIntArray *array, jint value) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  jint count = 0;
  {
    IOSIntArray *a__ = array;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint i = *b__++;
      if (i == value) {
        count++;
      }
    }
  }
  return count;
}

jboolean OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenExclusiveWithDouble_withDouble_withDouble_(jdouble value, jdouble rangeStart, jdouble rangeEnd) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  if (rangeEnd < rangeStart) {
    jdouble temp = rangeStart;
    rangeStart = rangeEnd;
    rangeEnd = temp;
  }
  return value > rangeStart && value < rangeEnd;
}

jboolean OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenInclusiveWithDouble_withDouble_withDouble_withDouble_(jdouble value, jdouble rangeStart, jdouble rangeEnd, jdouble epsilon) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  if (rangeEnd < rangeStart) {
    jdouble temp = rangeStart;
    rangeStart = rangeEnd;
    rangeEnd = temp;
  }
  return (value >= rangeStart && value <= rangeEnd) || OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_isApproxWithDouble_withDouble_withDouble_(value, rangeStart, epsilon) || OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_isApproxWithDouble_withDouble_withDouble_(value, rangeEnd, epsilon);
}

jboolean OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenInclusiveWithDouble_withDouble_withDouble_(jdouble value, jdouble rangeStart, jdouble rangeEnd) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  if (rangeEnd < rangeStart) {
    jdouble temp = rangeStart;
    rangeStart = rangeEnd;
    rangeEnd = temp;
  }
  return value >= rangeStart && value <= rangeEnd;
}

IOSObjectArray *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_threeDistinctPointsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet_(id<OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet> facet) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_initialize();
  IOSObjectArray *p = [IOSObjectArray newArrayWithLength:3 type:OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_class_()];
  jdouble epsilon = 1e-10;
  (void) IOSObjectArray_Set(p, 0, [((id<OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet>) nil_chk(facet)) getPointWithInt:0]);
  jint i;
  for (i = 1; i < [facet getVertexCount]; ++i) {
    (void) IOSObjectArray_Set(p, 1, [facet getPointWithInt:i]);
    if (![((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(IOSObjectArray_Get(p, 1))) isApproxWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:IOSObjectArray_Get(p, 0) withDouble:epsilon]) break;
  }
  for (i = i + 1; i < [facet getVertexCount]; ++i) {
    (void) IOSObjectArray_Set(p, 2, [facet getPointWithInt:i]);
    if (![((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(IOSObjectArray_Get(p, 2))) isApproxWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:IOSObjectArray_Get(p, 1) withDouble:epsilon] && ![((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(IOSObjectArray_Get(p, 2))) isApproxWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:IOSObjectArray_Get(p, 0) withDouble:epsilon]) break;
  }
  if (IOSObjectArray_Get(p, 0) == nil || IOSObjectArray_Get(p, 1) == nil || IOSObjectArray_Get(p, 2) == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  return p;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc)
