//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Misc.java
//

#ifndef _OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_H_
#define _OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_H_

#include "J2ObjC_header.h"

@class IOSIntArray;
@class IOSObjectArray;
@protocol OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet;

@interface OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc : NSObject

#pragma mark Public

+ (jint)arrayCompareWithIntArray:(IOSIntArray *)a
                    withIntArray:(IOSIntArray *)b;

+ (void)arrayReverseWithIntArray:(IOSIntArray *)a;

+ (void)arrayReverseWithNSObjectArray:(IOSObjectArray *)a;

+ (void)arrayRotateWithIntArray:(IOSIntArray *)a
                        withInt:(jint)d;

+ (jboolean)betweenExclusiveWithDouble:(jdouble)value
                            withDouble:(jdouble)rangeStart
                            withDouble:(jdouble)rangeEnd;

+ (jboolean)betweenInclusiveWithDouble:(jdouble)value
                            withDouble:(jdouble)rangeStart
                            withDouble:(jdouble)rangeEnd;

+ (jboolean)betweenInclusiveWithDouble:(jdouble)value
                            withDouble:(jdouble)rangeStart
                            withDouble:(jdouble)rangeEnd
                            withDouble:(jdouble)epsilon;

+ (jdouble)clampWithDouble:(jdouble)value
                withDouble:(jdouble)min
                withDouble:(jdouble)max;

+ (IOSIntArray *)cloneWithIntArray:(IOSIntArray *)a;

+ (jint)countOccurencesWithIntArray:(IOSIntArray *)array
                            withInt:(jint)value;

+ (NSString *)joinStringsWithNSStringArray:(IOSObjectArray *)strings
                                   withInt:(jint)beginIndex
                                   withInt:(jint)endIndex
                              withNSString:(NSString *)joinString;

+ (NSString *)joinStringsWithNSStringArray:(IOSObjectArray *)strings
                              withNSString:(NSString *)joinString;

+ (jdouble)roundWithDouble:(jdouble)d
                   withInt:(jint)mantissaLength;

+ (IOSObjectArray *)threeDistinctPointsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet:(id<OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet>)facet;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc)

FOUNDATION_EXPORT jint OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(IOSIntArray *a, IOSIntArray *b);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayRotateWithIntArray_withInt_(IOSIntArray *a, jint d);

FOUNDATION_EXPORT IOSIntArray *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_cloneWithIntArray_(IOSIntArray *a);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithIntArray_(IOSIntArray *a);

FOUNDATION_EXPORT void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithNSObjectArray_(IOSObjectArray *a);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_roundWithDouble_withInt_(jdouble d, jint mantissaLength);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_joinStringsWithNSStringArray_withNSString_(IOSObjectArray *strings, NSString *joinString);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_joinStringsWithNSStringArray_withInt_withInt_withNSString_(IOSObjectArray *strings, jint beginIndex, jint endIndex, NSString *joinString);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_clampWithDouble_withDouble_withDouble_(jdouble value, jdouble min, jdouble max);

FOUNDATION_EXPORT jint OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_countOccurencesWithIntArray_withInt_(IOSIntArray *array, jint value);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenExclusiveWithDouble_withDouble_withDouble_(jdouble value, jdouble rangeStart, jdouble rangeEnd);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenInclusiveWithDouble_withDouble_withDouble_withDouble_(jdouble value, jdouble rangeStart, jdouble rangeEnd, jdouble epsilon);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_betweenInclusiveWithDouble_withDouble_withDouble_(jdouble value, jdouble rangeStart, jdouble rangeEnd);

FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_threeDistinctPointsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet_(id<OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomIFacet> facet);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc)

#endif // _OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_H_
