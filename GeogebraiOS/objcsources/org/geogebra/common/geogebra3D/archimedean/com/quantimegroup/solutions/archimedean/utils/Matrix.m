//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Matrix.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Matrix.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/OrderedTriple.h"

@implementation OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix

- (instancetype)init {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)numRow
                    withInt:(jint)numCol {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(self, numRow, numCol);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)X
                    withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)Y
                    withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)Z {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(self, X, Y, Z);
  return self;
}

- (instancetype)initWithDoubleArray2:(IOSObjectArray *)m {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithDoubleArray2_(self, m);
  return self;
}

+ (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)identityWithInt:(jint)r {
  return OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_identityWithInt_(r);
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)m {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_(self, m);
  return self;
}

- (jint)numRows {
  return ((IOSObjectArray *) nil_chk(mat__))->size_;
}

- (jint)numColumns {
  return ((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(mat__), 0)))->size_;
}

- (IOSObjectArray *)mat {
  return mat__;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)timesWithDouble:(jdouble)x {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *A = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_([self numRows], [self numColumns]) autorelease];
  for (jint r = 0; r < [self numRows]; ++r) {
    for (jint c = 0; c < [self numColumns]; ++c) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(A->mat__), r)), c) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(mat__, r)), c) * x;
    }
  }
  return A;
}

- (void)timesEqualsWithDouble:(jdouble)x {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *A = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_([self numRows], [self numColumns]) autorelease];
  for (jint r = 0; r < [self numRows]; ++r) {
    for (jint c = 0; c < [self numColumns]; ++c) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(A->mat__), r)), c) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(mat__, r)), c) * x;
    }
  }
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_set_mat__(self, A->mat__);
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)dividedByWithDouble:(jdouble)x {
  return [self timesWithDouble:1 / x];
}

- (void)dividedByEqualsWithDouble:(jdouble)x {
  [self timesEqualsWithDouble:1 / x];
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)plusWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *A = self;
  if ([((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(B)) numRows] != [A numRows] || [B numColumns] != [A numColumns]) return nil;
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *C = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_([A numRows], [A numColumns]) autorelease];
  for (jint r = 0; r < [C numRows]; ++r) {
    for (jint c = 0; c < [C numColumns]; ++c) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(C->mat__), r)), c) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(A->mat__, r)), c) + IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(B->mat__, r)), c);
    }
  }
  return C;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)minusWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B {
  return [self plusWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:[((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(B)) timesWithDouble:-1]];
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)timesWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)p {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *M = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_init() autorelease];
  IOSDoubleArray *mx = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ ((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(p))->x_ } count:1];
  IOSDoubleArray *my = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ p->y_ } count:1];
  IOSDoubleArray *mz = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ p->z_ } count:1];
  IOSObjectArray *m = [IOSObjectArray arrayWithObjects:(id[]){ mx, my, mz } count:3 type:IOSClass_doubleArray(1)];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_set_mat__(M, m);
  [M timesEqualsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:self];
  return [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_initWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(M->mat__, 0)), 0), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(M->mat__, 1)), 0), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(M->mat__, 2)), 0)) autorelease];
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)timesWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *A = self;
  if ([((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(B)) numRows] != [A numColumns]) return nil;
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *C = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_([A numRows], [B numColumns]) autorelease];
  for (jint r = 0; r < [C numRows]; ++r) {
    for (jint c = 0; c < [C numColumns]; ++c) {
      for (jint x = 0; x < [A numColumns]; ++x) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(C->mat__), r)), c) += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(A->mat__, r)), x) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(B->mat__, x)), c);
      }
    }
  }
  return C;
}

- (void)timesEqualsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_set_mat__(self, ((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk([((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(B)) timesWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:self]))->mat__);
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)dividedByWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B {
  @try {
    return [self timesWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:[((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(B)) inverse]];
  }
  @catch (JavaLangException *e) {
    return nil;
  }
}

- (jdouble)determinant {
  if ([self numRows] != [self numColumns]) @throw [new_JavaLangException_initWithNSString_(@"numRows != numColumns") autorelease];
  jdouble result = 0;
  if ([self numRows] == 2) {
    result = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(mat__), 0)), 0) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(mat__, 1)), 1) - IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(mat__, 0)), 1) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(mat__, 1)), 0);
  }
  else {
    for (jint j = 0; j < [self numRows]; ++j) {
      OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *M = [self minorWithInt:0 withInt:j];
      result += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(mat__), 0)), j) * (j % 2 == 0 ? [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(M)) determinant] : -[((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(M)) determinant]);
    }
  }
  return result;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)minorWithInt:(jint)r
                                                                                                withInt:(jint)c {
  if ([self numRows] != [self numColumns]) return nil;
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *M = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_([self numRows] - 1, [self numColumns] - 1) autorelease];
  for (jint i = 0, Mi = 0; i < [self numRows]; ++i) {
    if (i == r) continue;
    for (jint j = 0, Mj = 0; j < [self numColumns]; ++j) {
      if (j == c) continue;
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(M->mat__), Mi)), Mj) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(mat__, i)), j);
      Mj++;
    }
    Mi++;
  }
  return M;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)adjoint {
  if ([self numRows] != [self numColumns]) return nil;
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *A = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_([self numRows], [self numColumns]) autorelease];
  for (jint r = 0; r < [A numRows]; ++r) {
    for (jint c = 0; c < [A numColumns]; ++c) {
      @try {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(A->mat__), c)), r) = (r + c) % 2 == 0 ? [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk([self minorWithInt:r withInt:c])) determinant] : -[((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk([self minorWithInt:r withInt:c])) determinant];
      }
      @catch (JavaLangException *e) {
        return nil;
      }
    }
  }
  return A;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)transpose {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *T = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_([self numColumns], [self numRows]) autorelease];
  for (jint r = 0; r < [T numRows]; ++r) {
    for (jint c = 0; c < [T numColumns]; ++c) {
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(T->mat__), r)), c) = IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(mat__, c)), r);
    }
  }
  return T;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)inverse {
  if ([self numRows] != [self numColumns]) return nil;
  @try {
    return [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk([self adjoint])) dividedByWithDouble:[self determinant]];
  }
  @catch (JavaLangException *e) {
    return nil;
  }
}

- (jboolean)equalsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)m {
  for (jint i = 0; i < [self numRows]; ++i) {
    for (jint j = 0; j < [self numColumns]; ++j) {
      if (IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(mat__), i)), j) != IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(m))->mat__, i)), j)) return NO;
    }
  }
  return YES;
}

- (void)dealloc {
  RELEASE_(mat__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Matrix", NULL, 0x0, NULL, NULL },
    { "initWithInt:withInt:", "Matrix", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:", "Matrix", NULL, 0x0, NULL, NULL },
    { "initWithDoubleArray2:", "Matrix", NULL, 0x0, NULL, NULL },
    { "identityWithInt:", "identity", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x8, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:", "Matrix", NULL, 0x0, NULL, NULL },
    { "numRows", NULL, "I", 0x0, NULL, NULL },
    { "numColumns", NULL, "I", 0x0, NULL, NULL },
    { "mat", NULL, "[[D", 0x0, NULL, NULL },
    { "timesWithDouble:", "times", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "timesEqualsWithDouble:", "timesEquals", "V", 0x0, NULL, NULL },
    { "dividedByWithDouble:", "dividedBy", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "dividedByEqualsWithDouble:", "dividedByEquals", "V", 0x0, NULL, NULL },
    { "plusWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:", "plus", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "minusWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:", "minus", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "timesWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:", "times", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.OrderedTriple;", 0x0, NULL, NULL },
    { "timesWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:", "times", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x4, NULL, NULL },
    { "timesEqualsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:", "timesEquals", "V", 0x0, NULL, NULL },
    { "dividedByWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:", "dividedBy", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "determinant", NULL, "D", 0x0, "Ljava.lang.Exception;", NULL },
    { "minorWithInt:withInt:", "minor", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "adjoint", NULL, "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "transpose", NULL, "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "inverse", NULL, "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.Matrix;", 0x0, NULL, NULL },
    { "equalsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:", "equals", "Z", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mat__", "mat", 0x1, "[[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix = { 2, "Matrix", "org.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils", NULL, 0x1, 25, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix;
}

@end

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_init(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self) {
  NSObject_init(self);
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_init() {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_init(self);
  return self;
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, jint numRow, jint numCol) {
  NSObject_init(self);
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_setAndConsume_mat__(self, [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ numRow, numCol }]);
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(jint numRow, jint numCol) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(self, numRow, numCol);
  return self;
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *X, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Y, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Z) {
  NSObject_init(self);
  IOSDoubleArray *mx = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ ((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(X))->x_, ((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(Y))->x_, ((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(Z))->x_ } count:3];
  IOSDoubleArray *my = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ X->y_, Y->y_, Z->y_ } count:3];
  IOSDoubleArray *mz = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ X->z_, Y->z_, Z->z_ } count:3];
  IOSObjectArray *m = [IOSObjectArray arrayWithObjects:(id[]){ mx, my, mz } count:3 type:IOSClass_doubleArray(1)];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_set_mat__(self, m);
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *X, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Y, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Z) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(self, X, Y, Z);
  return self;
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithDoubleArray2_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, IOSObjectArray *m) {
  NSObject_init(self);
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_set_mat__(self, m);
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithDoubleArray2_(IOSObjectArray *m) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithDoubleArray2_(self, m);
  return self;
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_identityWithInt_(jint r) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initialize();
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *M = [new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(r, r) autorelease];
  for (jint i = 0; i < r; ++i) {
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(M->mat__), i)), i) = 1;
  }
  return M;
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *m) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(self, [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *) nil_chk(m)) numRows], [m numColumns]);
  for (jint i = 0; i < [self numColumns]; ++i) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(nil_chk(m->mat__), i), 0, IOSObjectArray_Get(self->mat__, i), 0, [self numRows]);
  }
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *m) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_(self, m);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix)
