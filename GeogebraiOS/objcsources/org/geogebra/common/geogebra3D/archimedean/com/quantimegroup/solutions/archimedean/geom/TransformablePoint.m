//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/geom/TransformablePoint.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/geom/TransformablePoint.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Misc.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/ObjectList.h"
#include "org/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/OrderedTriple.h"

@interface OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint () {
 @public
  IOSIntArray *goalIndices_;
  IOSDoubleArray *transformPercents_;
  IOSObjectArray *states_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint, goalIndices_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint, transformPercents_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint, states_, IOSObjectArray *)

@interface OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State () {
 @public
  jboolean real_;
}

@end

@implementation OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint

- (instancetype)initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *)points
                                                                                                          withInt:(jint)firstGoalIndex
       withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *)state {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_(self, points, firstGoalIndex, state);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *)points
                                                                                                          withInt:(jint)firstGoalIndex {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_(self, points, firstGoalIndex);
  return self;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)getGoalPointWithInt:(jint)i {
  return [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(points_)) getWithInt:IOSIntArray_Get(nil_chk(goalIndices_), i)];
}

- (jboolean)equalsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)T {
  IOSClass *tClass = [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk(T)) getClass];
  if ([self getClass] != tClass) return NO;
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *t = (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *) check_class_cast(T, [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint class]);
  if ([super equalsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:t] && points_ == t->points_) {
    if (((IOSIntArray *) nil_chk(goalIndices_))->size_ == t->goalIndices_->size_ && ((IOSDoubleArray *) nil_chk(transformPercents_))->size_ == t->transformPercents_->size_) {
      for (jint i = 0; i < goalIndices_->size_; ++i) if (IOSIntArray_Get(goalIndices_, i) != IOSIntArray_Get(t->goalIndices_, i)) return NO;
      for (jint i = 0; i < transformPercents_->size_; ++i) if (IOSDoubleArray_Get(transformPercents_, i) != IOSDoubleArray_Get(t->transformPercents_, i)) return NO;
      return YES;
    }
  }
  return NO;
}

- (OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *)getStateWithDouble:(jdouble)truncPercent {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *state = nil;
  if (truncPercent < 0) {
    truncPercent = 0;
  }
  else if (truncPercent >= IOSDoubleArray_Get(transformPercents_, ((IOSDoubleArray *) nil_chk(transformPercents_))->size_ - 1)) {
    truncPercent = IOSDoubleArray_Get(transformPercents_, transformPercents_->size_ - 1);
  }
  if (truncPercent < IOSDoubleArray_Get(nil_chk(transformPercents_), 0)) {
    state = IOSObjectArray_Get(nil_chk(states_), 0);
  }
  else {
    for (jint i = transformPercents_->size_ - 1; i >= 0; --i) {
      if (truncPercent >= IOSDoubleArray_Get(transformPercents_, i)) {
        state = IOSObjectArray_Get(nil_chk(states_), i);
        break;
      }
    }
  }
  return state;
}

- (void)transformWithDouble:(jdouble)truncPercent {
  truncPercent = OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_clampWithDouble_withDouble_withDouble_(truncPercent, IOSDoubleArray_Get(nil_chk(transformPercents_), 0), IOSDoubleArray_Get(transformPercents_, transformPercents_->size_ - 1));
  if (truncPercent == IOSDoubleArray_Get(transformPercents_, 0)) {
    [self becomeWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:[self getGoalPointWithInt:0]];
    return;
  }
  for (jint i = 1; i < transformPercents_->size_; ++i) {
    if (truncPercent <= IOSDoubleArray_Get(transformPercents_, i)) {
      truncPercent -= IOSDoubleArray_Get(transformPercents_, i - 1);
      [self becomeWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:[((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *) nil_chk([self getGoalPointWithInt:i - 1])) midWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:[self getGoalPointWithInt:i] withDouble:truncPercent * 100 / (IOSDoubleArray_Get(transformPercents_, i) - IOSDoubleArray_Get(transformPercents_, i - 1))]];
      return;
    }
  }
}

- (void)addStageWithInt:(jint)goalIndex
             withDouble:(jdouble)truncPercent {
  [self addStageWithInt:goalIndex withDouble:truncPercent withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State:new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_init()];
}

- (void)addStageWithInt:(jint)goalIndex
             withDouble:(jdouble)truncPercent
withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State:(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *)state {
  if (goalIndices_ == nil) {
    goalIndices_ = [IOSIntArray newArrayWithInts:(jint[]){ goalIndex } count:1];
    transformPercents_ = [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ truncPercent } count:1];
  }
  else {
    IOSIntArray *tempGoals = [IOSIntArray newArrayWithLength:goalIndices_->size_ + 1];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(goalIndices_, 0, tempGoals, 0, goalIndices_->size_);
    *IOSIntArray_GetRef(tempGoals, tempGoals->size_ - 1) = goalIndex;
    goalIndices_ = tempGoals;
    IOSDoubleArray *tempTruncPercents = [IOSDoubleArray newArrayWithLength:((IOSDoubleArray *) nil_chk(transformPercents_))->size_ + 1];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(transformPercents_, 0, tempTruncPercents, 0, transformPercents_->size_);
    *IOSDoubleArray_GetRef(tempTruncPercents, tempTruncPercents->size_ - 1) = truncPercent;
    transformPercents_ = tempTruncPercents;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList:withInt:withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State:", "TransformablePoint", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList:withInt:", "TransformablePoint", NULL, 0x0, NULL, NULL },
    { "getGoalPointWithInt:", "getGoalPoint", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.OrderedTriple;", 0x0, NULL, NULL },
    { "equalsWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:", "equals", "Z", 0x1, NULL, NULL },
    { "getStateWithDouble:", "getState", "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom.TransformablePoint$State;", 0x11, NULL, NULL },
    { "transformWithDouble:", "transform", "V", 0x11, NULL, NULL },
    { "addStageWithInt:withDouble:", "addStage", "V", 0x1, NULL, NULL },
    { "addStageWithInt:withDouble:withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State:", "addStage", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "points_", NULL, 0x4, "Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.ObjectList;", NULL, "Lorg/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/ObjectList<Lorg/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/OrderedTriple;>;",  },
    { "goalIndices_", NULL, 0x2, "[I", NULL, NULL,  },
    { "transformPercents_", NULL, 0x2, "[D", NULL, NULL,  },
    { "states_", NULL, 0x2, "[Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom.TransformablePoint$State;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom.TransformablePoint$State;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint = { 2, "TransformablePoint", "org.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom", NULL, 0x0, 8, methods, 4, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint;
}

@end

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *self, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *points, jint firstGoalIndex, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *state) {
  (void) OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(self, [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(points)) getWithInt:firstGoalIndex]);
  self->points_ = points;
  [self addStageWithInt:firstGoalIndex withDouble:0 withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State:state];
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *points, jint firstGoalIndex, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *state) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_(self, points, firstGoalIndex, state);
  return self;
}

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *self, OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *points, jint firstGoalIndex) {
  (void) OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(self, [((OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(points)) getWithInt:firstGoalIndex]);
  self->points_ = points;
  [self addStageWithInt:firstGoalIndex withDouble:0 withOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State:new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_init()];
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *points, jint firstGoalIndex) {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_initWithOrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_withInt_(self, points, firstGoalIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint)

@implementation OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State

- (jboolean)isReal {
  return real_;
}

- (instancetype)init {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isReal", NULL, "Z", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "real_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State = { 2, "State", "org.geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom", "TransformablePoint", 0x9, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State;
}

@end

void OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_init(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *self) {
  (void) NSObject_init(self);
  self->real_ = YES;
}

OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *new_OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_init() {
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State *self = [OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State alloc];
  OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomTransformablePoint_State)
