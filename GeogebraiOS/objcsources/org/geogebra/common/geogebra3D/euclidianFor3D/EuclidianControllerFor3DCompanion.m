//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/geogebra3D/euclidianFor3D/EuclidianControllerFor3DCompanion.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/EuclidianControllerCompanion.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/geogebra3D/euclidianFor3D/EuclidianControllerFor3DCompanion.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoJoinPoints3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoMidpoint3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolarLine3D.h"
#include "org/geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Manager3DInterface.h"
#include "org/geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicPartND.h"
#include "org/geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "org/geogebra/common/kernel/kernelND/GeoVectorND.h"
#include "org/geogebra/common/plugin/GeoClass.h"

@implementation OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getDirection];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(A, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(B, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(C, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getSpace]) {
      return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C];
    }
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  }
  if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getXOYPlane]) {
    return [super createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C];
  }
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
}

- (IOSObjectArray *)createAnglesWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)p {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getDirection];
  if ([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(p)) isGeoElement3D]) {
    if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getSpace]) {
      return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angles3DWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoPolygon:p];
    }
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angles3DWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoPolygon:p withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  }
  if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getXOYPlane]) {
    return [super createAnglesWithOrgGeogebraCommonKernelGeosGeoPolygon:p];
  }
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angles3DWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoPolygon:p withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createAngleWithOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v1
                                                    withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v2 {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getDirection];
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(v1)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(v2)) isGeoElement3D]) {
    if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getSpace]) {
      return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoVectorND:v1 withOrgGeogebraCommonKernelKernelNDGeoVectorND:v2];
    }
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoVectorND:v1 withOrgGeogebraCommonKernelKernelNDGeoVectorND:v2 withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  }
  if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getXOYPlane]) {
    return [super createAngleWithOrgGeogebraCommonKernelKernelNDGeoVectorND:v1 withOrgGeogebraCommonKernelKernelNDGeoVectorND:v2];
  }
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Angle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoVectorND:v1 withOrgGeogebraCommonKernelKernelNDGeoVectorND:v2 withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2
                                                    withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)a
                                                                                      withBoolean:(jboolean)clockWise {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> direction = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getDirection];
  if (direction == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getXOYPlane] || direction == [ec_->kernel_ getSpace]) {
    if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p1)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p2)) isGeoElement3D]) {
      return (OrgGeogebraCommonKernelGeosGeoAngle *) check_class_cast(IOSObjectArray_Get(nil_chk([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) AngleWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelGeosGeoNumberValue:a withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[ec_->kernel_ getXOYPlane] withBoolean:!clockWise]), 0), [OrgGeogebraCommonKernelGeosGeoAngle class]);
    }
    return [super createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelGeosGeoNumberValue:a withBoolean:clockWise];
  }
  return (OrgGeogebraCommonKernelGeosGeoAngle *) check_class_cast(IOSObjectArray_Get(nil_chk([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) AngleWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelGeosGeoNumberValue:a withOrgGeogebraCommonKernelKernelNDGeoDirectionND:direction withBoolean:!clockWise]), 0), [OrgGeogebraCommonKernelGeosGeoAngle class]);
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
                                                        withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getDirection];
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(h)) isGeoElement3D]) {
    if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getSpace]) {
      return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:g withOrgGeogebraCommonKernelKernelNDGeoLineND:h];
    }
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:g withOrgGeogebraCommonKernelKernelNDGeoLineND:h withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  }
  if (orientation == [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getXOYPlane]) {
    return [super createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:g withOrgGeogebraCommonKernelKernelNDGeoLineND:h];
  }
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:g withOrgGeogebraCommonKernelKernelNDGeoLineND:h withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
}

- (IOSObjectArray *)translateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                        withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)vec {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(vec, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Translate3DWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelKernelNDGeoVectorND:vec];
  }
  return [super translateWithOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelKernelNDGeoVectorND:vec];
}

- (IOSObjectArray *)mirrorAtPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Mirror3DWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelKernelNDGeoPointND:point];
  }
  return [super mirrorAtPointWithOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelKernelNDGeoPointND:point];
}

- (IOSObjectArray *)mirrorAtLineWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                             withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(line, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Mirror3DWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelKernelNDGeoLineND:line];
  }
  return [super mirrorAtLineWithOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelKernelNDGeoLineND:line];
}

- (IOSObjectArray *)dilateFromPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                            withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)num
                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Dilate3DWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelArithmeticNumberValue:num withOrgGeogebraCommonKernelKernelNDGeoPointND:point];
  }
  return [super dilateFromPointWithOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelArithmeticNumberValue:num withOrgGeogebraCommonKernelKernelNDGeoPointND:point];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getSingleIntersectionPointFrom2DWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                                                                                 withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                                                                               withBoolean:(jboolean)coords2D {
  return [super getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b withBoolean:coords2D];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                                                                           withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                                                                         withBoolean:(jboolean)coords2D {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) isGeoElement3D] && ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isGeoElement3D]) return [self getSingleIntersectionPointFrom2DWithOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b withBoolean:coords2D];
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> point = nil;
  if ([a isGeoLine]) {
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isGeoLine]) {
      point = (OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) IntersectWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:a withOrgGeogebraCommonKernelGeosGeoElement:b], [OrgGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class]);
    }
    else if ([b isGeoConic]) {
      point = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) IntersectLineConicSingleWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast(a, @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND)) withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(b, [OrgGeogebraCommonKernelKernelNDGeoConicND class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_ withOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getInverseMatrix]];
    }
    else {
      return nil;
    }
  }
  else if ([a isGeoConic]) {
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isGeoLine]) {
      point = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) IntersectLineConicSingleWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>) check_protocol_cast(b, @protocol(OrgGeogebraCommonKernelKernelNDGeoLineND)) withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(a, [OrgGeogebraCommonKernelKernelNDGeoConicND class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_ withOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getInverseMatrix]];
    }
    else if ([b isGeoConic] && ![a isEqualWithOrgGeogebraCommonKernelGeosGeoElement:b]) {
      point = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) IntersectConicsSingleWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(a, [OrgGeogebraCommonKernelKernelNDGeoConicND class]) withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(b, [OrgGeogebraCommonKernelKernelNDGeoConicND class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_ withOrgGeogebraCommonKernelMatrixCoordMatrix:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getInverseMatrix]];
    }
    else {
      return nil;
    }
  }
  if (point != nil) {
    if (coords2D) {
      [point setCartesian];
    }
    else {
      [point setCartesian3D];
    }
    [point update];
  }
  return point;
}

- (IOSObjectArray *)orthogonalWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  return [IOSObjectArray newArrayWithObjects:(id[]){ (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) OrthogonalLine3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:point withOrgGeogebraCommonKernelKernelNDGeoDirectionND:line withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection]], [OrgGeogebraCommonKernelGeosGeoElement class]) } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithNSString:(NSString *)label
                                                                withBoolean:(jboolean)forPreviewable
                                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                                 withDouble:(jdouble)x
                                                                 withDouble:(jdouble)y
                                                                 withDouble:(jdouble)z
                                                                withBoolean:(jboolean)complex
                                                                withBoolean:(jboolean)coords2D {
  OrgGeogebraCommonKernelGeosGeoElement *geo = [((id<OrgGeogebraCommonKernelPath>) nil_chk(path)) toGeoElement];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoElement3D] || ([geo isGeoList] && [((OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoList class])) containsGeoElement3D])) {
    [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) checkZoomingWithBoolean:forPreviewable];
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> point = [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getManager3D])) Point3DWithNSString:label withOrgGeogebraCommonKernelPath:path withDouble:x withDouble:y withDouble:z withBoolean:!forPreviewable withBoolean:coords2D];
    return point;
  }
  return [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) createNewPoint2DWithNSString:label withBoolean:forPreviewable withOrgGeogebraCommonKernelPath:path withDouble:x withDouble:y withBoolean:complex withBoolean:coords2D];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)midpointWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(segment, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) MidpointWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoSegmentND:segment], [OrgGeogebraCommonKernelGeosGeoElement class]);
  }
  return [super midpointWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:segment];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)midpointWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)conic {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk((conic))) isGeoElement3D]) {
    return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) CenterWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:conic], [OrgGeogebraCommonKernelGeosGeoElement class]);
  }
  return [super midpointWithOrgGeogebraCommonKernelKernelNDGeoConicND:conic];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)midpointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2 {
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoElement3D]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *algo = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getConstruction], p1, p2);
    return [algo getPoint];
  }
  return [super midpointWithOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2];
}

- (IOSObjectArray *)regularPolygonWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint1
                                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint2
                                  withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)value {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(geoPoint1)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(geoPoint2)) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) RegularPolygonWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint1 withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint2 withOrgGeogebraCommonKernelArithmeticNumberValue:value withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection]];
  }
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getAlgoDispatcher])) RegularPolygonWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint1 withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint2 withOrgGeogebraCommonKernelArithmeticNumberValue:value];
}

- (OrgGeogebraCommonKernelAlgosAlgoElement *)segmentAlgoWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2 {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p1)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p2)) isGeoElement3D]) {
    return new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonPluginGeoClassEnum_(cons, p1, p2, nil, OrgGeogebraCommonPluginGeoClassEnum_get_SEGMENT3D());
  }
  return [super segmentAlgoWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2];
}

- (IOSObjectArray *)createCircle2WithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p0
                                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1 {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p0)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p1)) isGeoElement3D]) {
    return [self createCircle2For3DWithOrgGeogebraCommonKernelKernelNDGeoPointND:p0 withOrgGeogebraCommonKernelKernelNDGeoPointND:p1];
  }
  return [super createCircle2WithOrgGeogebraCommonKernelKernelNDGeoPointND:p0 withOrgGeogebraCommonKernelKernelNDGeoPointND:p1];
}

- (IOSObjectArray *)createCircle2For3DWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p0
                                      withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1 {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Circle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:p0 withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection]] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)circleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
                                            withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)radius {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(center)) isGeoElement3D]) {
    return [self circleFor3DWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelKernelNDGeoPointND:center withOrgGeogebraCommonKernelArithmeticNumberValue:radius];
  }
  return [super circleWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelKernelNDGeoPointND:center withOrgGeogebraCommonKernelArithmeticNumberValue:radius];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)circleFor3DWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
                                                 withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)radius {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Circle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:center withOrgGeogebraCommonKernelArithmeticNumberValue:radius withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection]];
}

- (IOSObjectArray *)angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
                                   withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(g)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(h)) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) AngularBisector3DWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:g withOrgGeogebraCommonKernelKernelNDGeoLineND:h];
  }
  return [super angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoLineND:g withOrgGeogebraCommonKernelKernelNDGeoLineND:h];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C)) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) AngularBisector3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C];
  }
  return [super angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)circleArcSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C
                                                                                                withInt:(jint)type {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getDirection];
  return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getManager3D])) CircleArcSector3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoPointND:C withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation withInt:type], [OrgGeogebraCommonKernelGeosGeoElement class]);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)semicircleWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                     withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B {
  id<OrgGeogebraCommonKernelKernelNDGeoDirectionND> orientation = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->view_)) getDirection];
  return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) getManager3D])) Semicircle3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:A withOrgGeogebraCommonKernelKernelNDGeoPointND:B withOrgGeogebraCommonKernelKernelNDGeoDirectionND:orientation], [OrgGeogebraCommonKernelGeosGeoElement class]);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)circumcircleArcWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p3 {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p1)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p2)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p3)) isGeoElement3D]) {
    return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) CircumcircleArc3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelKernelNDGeoPointND:p3], [OrgGeogebraCommonKernelGeosGeoElement class]);
  }
  return [super circumcircleArcWithOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelKernelNDGeoPointND:p3];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)circumcircleSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2
                                                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p3 {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p1)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p2)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p3)) isGeoElement3D]) {
    return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) CircumcircleSector3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelKernelNDGeoPointND:p3], [OrgGeogebraCommonKernelGeosGeoElement class]);
  }
  return [super circumcircleSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:p1 withOrgGeogebraCommonKernelKernelNDGeoPointND:p2 withOrgGeogebraCommonKernelKernelNDGeoPointND:p3];
}

- (IOSObjectArray *)tangentWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                           withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Tangent3DWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (IOSObjectArray *)tangentWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l
                          withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Tangent3DWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:l withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (IOSObjectArray *)tangentWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c1
                           withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c2 {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) CommonTangents3DWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:c1 withOrgGeogebraCommonKernelKernelNDGeoConicND:c2];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)polarLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                    withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(P)) isGeoElement3D] || [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c)) isGeoElement3D]) {
    OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolarLine3D *algo = new_OrgGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolarLine3D_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_withOrgGeogebraCommonKernelKernelNDGeoPointND_([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getConstruction], nil, c, P);
    return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([algo getLine], [OrgGeogebraCommonKernelGeosGeoElement class]);
  }
  return [super polarLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:P withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)diameterLineWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l
                                                      withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) DiameterLine3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:l withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)diameterLineWithOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v
                                                        withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) DiameterLine3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoVectorND:v withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) LineBisector3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoSegmentND:segment withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection]];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                       withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) LineBisector3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection]];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)conic5WithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points {
  for (jint i = 0; i < 5; i++) {
    if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(points), i))) isGeoElement3D]) {
      return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Conic3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointNDArray:points];
    }
  }
  return [super conic5WithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:points];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)ellipseHyperbolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b
                                                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)c
                                                                                                     withInt:(jint)type {
  return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) EllipseHyperbola3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelKernelNDGeoPointND:c withOrgGeogebraCommonKernelKernelNDGeoDirectionND:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ec_->view_)) getDirection] withInt:type];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)parabolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                        withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoLineND>) nil_chk(l)) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Parabola3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoLineND:l];
  }
  return [super parabolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoLineND:l];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)vectorPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                     withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(v)) isGeoElement3D]) {
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> endPoint = (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(nil_chk([((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Translate3DWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoElement class]) withOrgGeogebraCommonKernelKernelNDGeoVectorND:v]), 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([ec_->kernel_ getManager3D])) Vector3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:endPoint];
  }
  return [super vectorPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoVectorND:v];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)locusWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b {
  if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] || [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(b)) isGeoElement3D]) {
    return [((id<OrgGeogebraCommonKernelManager3DInterface>) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getManager3D])) Locus3DWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b];
  }
  return [super locusWithOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianController:", "EuclidianControllerFor3DCompanion", NULL, 0x1, NULL, NULL },
    { "createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "createAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "createAnglesWithOrgGeogebraCommonKernelGeosGeoPolygon:", "createAngles", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "createAngleWithOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoVectorND:", "createAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:withBoolean:", "createAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x1, NULL, NULL },
    { "createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "createLineAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "translateWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoVectorND:", "translate", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "mirrorAtPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "mirrorAtPoint", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "mirrorAtLineWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "mirrorAtLine", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "dilateFromPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "dilateFromPoint", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getSingleIntersectionPointFrom2DWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "getSingleIntersectionPointFrom2D", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "getSingleIntersectionPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "orthogonalWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "orthogonal", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "createNewPointWithNSString:withBoolean:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withDouble:withBoolean:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "midpointWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "midpoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "midpointWithOrgGeogebraCommonKernelKernelNDGeoConicND:", "midpoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "midpointWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "midpoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "regularPolygonWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:", "regularPolygon", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "segmentAlgoWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "segmentAlgo", "Lorg.geogebra.common.kernel.algos.AlgoElement;", 0x4, NULL, NULL },
    { "createCircle2WithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "createCircle2", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "createCircle2For3DWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "createCircle2For3D", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circleWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "circle", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "circleFor3DWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "circleFor3D", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "angularBisector", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "angularBisector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circleArcSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "circleArcSector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "semicircleWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "semicircle", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circumcircleArcWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "circumcircleArc", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circumcircleSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "circumcircleSector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentWithOrgGeogebraCommonKernelKernelNDGeoConicND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "polarLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "polarLine", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "diameterLineWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "diameterLine", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "diameterLineWithOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "diameterLine", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "lineBisector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "lineBisector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "conic5WithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:", "conic5", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "ellipseHyperbolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "ellipseHyperbola", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "parabolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "parabola", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "vectorPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoVectorND:", "vectorPoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "locusWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "locus", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion = { 2, "EuclidianControllerFor3DCompanion", "org.geogebra.common.geogebra3D.euclidianFor3D", NULL, 0x1, 42, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion;
}

@end

void OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion *self, OrgGeogebraCommonEuclidianEuclidianController *ec) {
  (void) OrgGeogebraCommonEuclidianEuclidianControllerCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
}

OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion *new_OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonEuclidianEuclidianController *ec) {
  OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion *self = [OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion alloc];
  OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonGeogebra3DEuclidianFor3DEuclidianControllerFor3DCompanion)
