//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/euclidian/draw/DrawButton.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/awt/GFont.h"
#include "org/geogebra/common/awt/GGraphics2D.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/euclidian/Drawable.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/MyButton.h"
#include "org/geogebra/common/euclidian/draw/DrawButton.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/geos/GeoButton.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonEuclidianDrawDrawButton () {
 @public
  OrgGeogebraCommonKernelGeosGeoButton *geoButton_;
  jboolean isVisible_;
  NSString *oldCaption_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawButton, geoButton_, OrgGeogebraCommonKernelGeosGeoButton *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawButton, oldCaption_, NSString *)

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawButton_update(OrgGeogebraCommonEuclidianDrawDrawButton *self);

@implementation OrgGeogebraCommonEuclidianDrawDrawButton

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                       withOrgGeogebraCommonKernelGeosGeoButton:(OrgGeogebraCommonKernelGeosGeoButton *)geoButton {
  OrgGeogebraCommonEuclidianDrawDrawButton_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoButton_(self, view, geoButton);
  return self;
}

- (void)update {
  OrgGeogebraCommonEuclidianDrawDrawButton_update(self);
}

- (void)drawWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2 {
  if (isVisible_) {
    [((OrgGeogebraCommonEuclidianMyButton *) nil_chk(myButton_)) setSelectedWithBoolean:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) doHighlighting]];
    [myButton_ paintComponentWithOrgGeogebraCommonAwtGGraphics2D:g2];
  }
}

- (void)remove {
}

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold {
  return [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk([((OrgGeogebraCommonEuclidianMyButton *) nil_chk(myButton_)) getBounds])) containsWithInt:x withInt:y] && isVisible_;
}

- (jboolean)isInsideWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect {
  return [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(rect)) containsWithOrgGeogebraCommonAwtGRectangle2D:labelRectangle_];
}

- (jboolean)intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect {
  return [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk([((OrgGeogebraCommonEuclidianMyButton *) nil_chk(myButton_)) getBounds])) intersectsWithOrgGeogebraCommonAwtGRectangle2D:rect] && isVisible_;
}

- (jboolean)hitLabelWithInt:(jint)x
                    withInt:(jint)y {
  return NO;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeoElement {
  return geo_;
}

- (void)setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  OrgGeogebraCommonEuclidianDrawable_set_geo_(self, geo);
}

- (void)dealloc {
  RELEASE_(geoButton_);
  RELEASE_(oldCaption_);
  RELEASE_(myButton_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonKernelGeosGeoButton:", "DrawButton", NULL, 0x1, NULL, NULL },
    { "update", NULL, "V", 0x11, NULL, NULL },
    { "drawWithOrgGeogebraCommonAwtGGraphics2D:", "draw", "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x11, NULL, NULL },
    { "hitWithInt:withInt:withInt:", "hit", "Z", 0x11, NULL, NULL },
    { "isInsideWithOrgGeogebraCommonAwtGRectangle:", "isInside", "Z", 0x11, NULL, NULL },
    { "intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:", "intersectsRectangle", "Z", 0x1, NULL, NULL },
    { "hitLabelWithInt:withInt:", "hitLabel", "Z", 0x1, NULL, NULL },
    { "getGeoElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x11, NULL, NULL },
    { "setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:", "setGeoElement", "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoButton_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoButton;", NULL, NULL,  },
    { "isVisible_", NULL, 0x2, "Z", NULL, NULL,  },
    { "oldCaption_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "myButton_", NULL, 0x1, "Lorg.geogebra.common.euclidian.MyButton;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawButton = { 2, "DrawButton", "org.geogebra.common.euclidian.draw", NULL, 0x11, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianDrawDrawButton;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawButton_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoButton_(OrgGeogebraCommonEuclidianDrawDrawButton *self, OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoButton *geoButton) {
  OrgGeogebraCommonEuclidianDrawable_init(self);
  OrgGeogebraCommonEuclidianDrawable_set_view_(self, view);
  OrgGeogebraCommonEuclidianDrawDrawButton_set_geoButton_(self, geoButton);
  OrgGeogebraCommonEuclidianDrawable_set_geo_(self, geoButton);
  OrgGeogebraCommonEuclidianDrawDrawButton_setAndConsume_myButton_(self, new_OrgGeogebraCommonEuclidianMyButton_initWithOrgGeogebraCommonKernelGeosGeoButton_withOrgGeogebraCommonEuclidianEuclidianView_(geoButton, view));
  OrgGeogebraCommonEuclidianDrawDrawButton_update(self);
}

OrgGeogebraCommonEuclidianDrawDrawButton *new_OrgGeogebraCommonEuclidianDrawDrawButton_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoButton_(OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoButton *geoButton) {
  OrgGeogebraCommonEuclidianDrawDrawButton *self = [OrgGeogebraCommonEuclidianDrawDrawButton alloc];
  OrgGeogebraCommonEuclidianDrawDrawButton_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoButton_(self, view, geoButton);
  return self;
}

void OrgGeogebraCommonEuclidianDrawDrawButton_update(OrgGeogebraCommonEuclidianDrawDrawButton *self) {
  self->isVisible_ = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geo_)) isEuclidianVisible];
  if (!self->isVisible_) return;
  NSString *caption = [self->geo_ getCaptionWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
  if (![((NSString *) nil_chk(caption)) isEqual:self->oldCaption_]) {
    OrgGeogebraCommonEuclidianDrawDrawButton_set_oldCaption_(self, caption);
    OrgGeogebraCommonEuclidianDrawable_set_labelDesc_(self, OrgGeogebraCommonKernelGeosGeoElement_indicesToHTMLWithNSString_withBoolean_(caption, YES));
  }
  [((OrgGeogebraCommonEuclidianMyButton *) nil_chk(self->myButton_)) setTextWithNSString:self->labelDesc_];
  jint fontSize = J2ObjCFpToInt(([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) getFontSize] * [((OrgGeogebraCommonKernelGeosGeoButton *) nil_chk(self->geoButton_)) getFontSizeMultiplier]));
  OrgGeogebraCommonMainApp *app = [self->view_ getApplication];
  [self->myButton_ setFontWithOrgGeogebraCommonAwtGFont:[((OrgGeogebraCommonMainApp *) nil_chk(app)) getFontCanDisplayWithNSString:[self->myButton_ getText] withBoolean:[self->geoButton_ isSerifFont] withInt:[self->geoButton_ getFontStyle] withInt:fontSize]];
  self->xLabel_ = self->geo_->labelOffsetX_;
  self->yLabel_ = self->geo_->labelOffsetY_;
  [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(self->labelRectangle_)) setBoundsWithInt:self->xLabel_ withInt:self->yLabel_ withInt:[self->myButton_ getWidth] withInt:[self->myButton_ getHeight]];
  [self->myButton_ setBoundsWithOrgGeogebraCommonAwtGRectangle:self->labelRectangle_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawButton)
