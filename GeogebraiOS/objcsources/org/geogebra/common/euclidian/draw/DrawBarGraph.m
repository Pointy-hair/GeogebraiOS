//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/draw/DrawBarGraph.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GFont.h"
#include "org/geogebra/common/awt/GGraphics2D.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/euclidian/Drawable.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/GeneralPathClipped.h"
#include "org/geogebra/common/euclidian/draw/DrawBarGraph.h"
#include "org/geogebra/common/euclidian/draw/DrawPoint.h"
#include "org/geogebra/common/factories/AwtFactory.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/algos/AlgoBarChart.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/EuclidianStyleConstants.h"

@interface OrgGeogebraCommonEuclidianDrawDrawBarGraph () {
 @public
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *drawType_;
  jint pointType_;
  jboolean isVisible_, labelVisible_;
  IOSDoubleArray *coords_;
  IOSObjectArray *gp_;
  OrgGeogebraCommonKernelGeosGeoNumeric *sum_;
  OrgGeogebraCommonKernelAlgosAlgoBarChart *algo_;
  JavaUtilArrayList *pts_;
  JavaUtilArrayList *drawPoints_;
}

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (void)updatePointLists;

- (void)addPt;

- (void)setToolTipWithInt:(jint)barIndex;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBarGraph, drawType_, OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBarGraph, coords_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBarGraph, gp_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBarGraph, sum_, OrgGeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBarGraph, algo_, OrgGeogebraCommonKernelAlgosAlgoBarChart *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBarGraph, pts_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBarGraph, drawPoints_, JavaUtilArrayList *)

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawBarGraph_init__(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self);

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawBarGraph_updatePointLists(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self);

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawBarGraph_addPt(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self);

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawBarGraph_setToolTipWithInt_(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self, jint barIndex);

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *new_OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonEuclidianDrawDrawBarGraph

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                      withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)n {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, view, n);
  return self;
}

- (void)init__ {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_init__(self);
}

- (id<OrgGeogebraCommonAwtGRectangle>)getBounds {
  if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) isDefined] || ![geo_ isEuclidianVisible]) {
    return nil;
  }
  id<OrgGeogebraCommonAwtGRectangle> rect = [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(nil_chk(gp_), 0))) getBounds];
  for (jint i = 1; i < gp_->size_; i++) {
    [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(rect)) addWithOrgGeogebraCommonAwtGRectangle:[((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) getBounds]];
  }
  return rect;
}

- (void)drawWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2 {
  OrgGeogebraCommonAwtGColor *color = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) getSelColor];
  OrgGeogebraCommonKernelGeosGeoElement_FillTypeEnum *fillType = [geo_ getFillType];
  jint hatchingDistance = [geo_ getHatchingDistance];
  NSString *symbol = [geo_ getFillSymbol];
  jdouble hatchingAngle = [geo_ getHatchingAngle];
  NSString *fileName = [geo_ getImageFileName];
  jfloat alpha = [geo_ getAlphaValue];
  OrgGeogebraCommonKernelAlgosAlgoBarChart *algop = (OrgGeogebraCommonKernelAlgosAlgoBarChart *) check_class_cast([geo_ getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoBarChart class]);
  jint k;
  if (isVisible_) {
    @try {
      if ([geo_ doHighlighting]) {
        [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setPaintWithOrgGeogebraCommonAwtGPaint:[((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(sum_)) getSelColor]];
        [g2 setStrokeWithOrgGeogebraCommonAwtGBasicStroke:selStroke_];
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(gp_))->size_; i++) {
          k = i + 1;
          if ([((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(algop)) getBarColorWithInt:k] != nil) {
            OrgGeogebraCommonAwtGColor *col = [algop getBarColorWithInt:k];
            [g2 setPaintWithOrgGeogebraCommonAwtGPaint:[((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newColorWithInt:[((OrgGeogebraCommonAwtGColor *) nil_chk(col)) getRed] withInt:[col getGreen] withInt:[col getBlue] withInt:[col getAlpha]]];
          }
          [g2 drawWithOrgGeogebraCommonAwtGShape:IOSObjectArray_Get(gp_, i)];
        }
        [g2 setPaintWithOrgGeogebraCommonAwtGPaint:color];
      }
    }
    @catch (JavaLangException *e) {
      OrgGeogebraCommonMainApp_debugWithNSString_([((JavaLangException *) nil_chk(e)) getMessage]);
    }
    @try {
      if ([((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(algo_)) getDrawType] != OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_get_STEP_GRAPH_CONTINUOUS()) {
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(gp_))->size_; i++) {
          k = i + 1;
          if ([((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(algop)) getBarColorWithInt:k] != nil) {
            OrgGeogebraCommonAwtGColor *col = [algop getBarColorWithInt:k];
            [geo_ setObjColorWithOrgGeogebraCommonAwtGColor:col];
            [geo_ setAlphaValueWithFloat:[((OrgGeogebraCommonAwtGColor *) nil_chk(col)) getAlpha]];
          }
          if ([algop getBarAlphaWithInt:k] != -1.0) {
            [geo_ setAlphaValueWithFloat:[algop getBarAlphaWithInt:k]];
          }
          [geo_ setFillTypeWithOrgGeogebraCommonKernelGeosGeoElement_FillTypeEnum:[algop getBarFillTypeWithInt:k]];
          if ([algop getBarSymbolWithInt:k] != nil) {
            [geo_ setFillSymbolWithNSString:[algop getBarSymbolWithInt:k]];
          }
          if ([algop getBarImageWithInt:k] != nil) {
            [geo_ setImageFileNameWithNSString:[algop getBarImageWithInt:k]];
          }
          if ([algop getBarHatchDistanceWithInt:k] != -1) {
            [geo_ setHatchingDistanceWithInt:[algop getBarHatchDistanceWithInt:k]];
          }
          if ([algop getBarHatchAngleWithInt:k] != -1) {
            [geo_ setHatchingAngleWithInt:[algop getBarHatchAngleWithInt:k]];
          }
          [self fillWithOrgGeogebraCommonAwtGGraphics2D:g2 withOrgGeogebraCommonAwtGShape:IOSObjectArray_Get(gp_, i) withBoolean:NO];
          [geo_ setObjColorWithOrgGeogebraCommonAwtGColor:color];
          [geo_ setFillTypeWithOrgGeogebraCommonKernelGeosGeoElement_FillTypeEnum:fillType];
          [geo_ setHatchingAngleWithInt:J2ObjCFpToInt(hatchingAngle)];
          [geo_ setHatchingDistanceWithInt:hatchingDistance];
          [geo_ setFillSymbolWithNSString:symbol];
          [geo_ setImageFileNameWithNSString:fileName];
          [geo_ setAlphaValueWithFloat:alpha];
        }
      }
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
    }
    @try {
      if (geo_->lineThickness_ > 0) {
        [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setPaintWithOrgGeogebraCommonAwtGPaint:[self getObjectColor]];
        [g2 setStrokeWithOrgGeogebraCommonAwtGBasicStroke:objStroke_];
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(gp_))->size_; i++) {
          k = i + 1;
          if ([((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(algop)) getBarColorWithInt:k] != nil) {
            OrgGeogebraCommonAwtGColor *col = [algop getBarColorWithInt:k];
            [g2 setPaintWithOrgGeogebraCommonAwtGPaint:[((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newColorWithInt:[((OrgGeogebraCommonAwtGColor *) nil_chk(col)) getRed] withInt:[col getGreen] withInt:[col getBlue] withInt:[geo_ getLineOpacity]]];
          }
          [g2 drawWithOrgGeogebraCommonAwtGShape:IOSObjectArray_Get(gp_, i)];
        }
        [g2 setPaintWithOrgGeogebraCommonAwtGPaint:color];
      }
    }
    @catch (JavaLangException *e) {
      OrgGeogebraCommonMainApp_debugWithNSString_([((JavaLangException *) nil_chk(e)) getMessage]);
    }
    if (labelVisible_) {
      [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setFontWithOrgGeogebraCommonAwtGFont:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getFontConic]];
      [g2 setPaintWithOrgGeogebraCommonAwtGPaint:[geo_ getLabelColor]];
      [self drawLabelWithOrgGeogebraCommonAwtGGraphics2D:g2];
    }
    if ([((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(algo_)) hasPoints]) {
      for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(drawPoints_)) size]; i++) {
        [((OrgGeogebraCommonEuclidianDrawDrawPoint *) nil_chk([drawPoints_ getWithInt:i])) drawWithOrgGeogebraCommonAwtGGraphics2D:g2];
      }
    }
  }
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeoElement {
  return geo_;
}

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold {
  if (gp_ != nil) {
    for (jint i = 0; i < gp_->size_; i++) {
      if (([((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) containsWithInt:x withInt:y] || [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) intersectsWithInt:x withInt:y withInt:hitThreshold])) {
        OrgGeogebraCommonEuclidianDrawDrawBarGraph_setToolTipWithInt_(self, i);
        return YES;
      }
    }
  }
  return NO;
}

- (jboolean)intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect {
  if (gp_ != nil) {
    for (jint i = 0; i < gp_->size_; i++) {
      if ([((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) intersectsWithOrgGeogebraCommonAwtGRectangle2D:rect]) {
        return YES;
      }
    }
  }
  return NO;
}

- (jboolean)isInsideWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect {
  return NO;
}

- (void)setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  self->geo_ = geo;
}

- (void)update {
  isVisible_ = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) isEuclidianVisible];
  if (!isVisible_) return;
  if (![((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk([geo_ getDrawAlgorithm])) isEqual:[geo_ getParentAlgorithm]]) OrgGeogebraCommonEuclidianDrawDrawBarGraph_init__(self);
  labelVisible_ = [geo_ isLabelVisible];
  [self updateStrokesWithOrgGeogebraCommonKernelKernelNDGeoElementND:sum_];
  gp_ = [IOSObjectArray newArrayWithLength:[((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(algo_)) getIntervals] type:OrgGeogebraCommonEuclidianGeneralPathClipped_class_()];
  for (jint i = 0; i < gp_->size_; i++) {
    (void) IOSObjectArray_Set(gp_, i, new_OrgGeogebraCommonEuclidianGeneralPathClipped_initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(view_));
    [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) reset];
  }
  IOSDoubleArray *xVal = [algo_ getLeftBorder];
  IOSDoubleArray *yVal = [algo_ getValues];
  jdouble width = [algo_ getWidth];
  jint N = [algo_ getIntervals];
  if ([algo_ hasPoints]) {
    OrgGeogebraCommonEuclidianDrawDrawBarGraph_updatePointLists(self);
  }
  drawType_ = [algo_ getDrawType];
  pointType_ = [algo_ getPointType];
  jint pointStyle;
  if ([algo_ hasPoints] && pointType_ != OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_NONE) {
    if (pointType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_LEFT || pointType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_LEFT_OPEN_RIGHT) {
      pointStyle = OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_STYLE_DOT;
    }
    else {
      pointStyle = OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_STYLE_CIRCLE;
    }
    for (jint i = 0; i < N; i++) {
      *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = IOSDoubleArray_Get(nil_chk(xVal), i);
      *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([((JavaUtilArrayList *) nil_chk(pts_)) getWithInt:i])) setCoordsWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1) withDouble:1.0];
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:i])) setObjColorWithOrgGeogebraCommonAwtGColor:[geo_ getObjectColor]];
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:i])) setPointSizeWithInt:2 + (geo_->lineThickness_ + 1) / 3];
      [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:i])) setPointStyleWithInt:pointStyle];
      if (pointType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_RIGHT) {
        [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:i])) setEuclidianVisibleWithBoolean:NO];
      }
      [((OrgGeogebraCommonEuclidianDrawDrawPoint *) nil_chk([((JavaUtilArrayList *) nil_chk(drawPoints_)) getWithInt:i])) update];
    }
    if (drawType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_get_STEP_GRAPH_CONTINUOUS() || drawType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_get_STEP_GRAPH_JUMP()) {
      if (pointType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_LEFT || pointType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_LEFT_OPEN_RIGHT) {
        pointStyle = OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_STYLE_CIRCLE;
      }
      else {
        pointStyle = OrgGeogebraCommonPluginEuclidianStyleConstants_POINT_STYLE_DOT;
      }
      for (jint i = 0; i < N - 1; i++) {
        *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = IOSDoubleArray_Get(nil_chk(xVal), i + 1);
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
        [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([((JavaUtilArrayList *) nil_chk(pts_)) getWithInt:N + i])) setCoordsWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1) withDouble:1.0];
        [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:N + i])) setObjColorWithOrgGeogebraCommonAwtGColor:[geo_ getObjectColor]];
        [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:N + i])) setPointSizeWithInt:2 + (geo_->lineThickness_ + 1) / 3];
        [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:N + i])) setPointStyleWithInt:pointStyle];
        if (pointType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_LEFT) {
          [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk([pts_ getWithInt:N + i])) setEuclidianVisibleWithBoolean:NO];
        }
        [((OrgGeogebraCommonEuclidianDrawDrawPoint *) nil_chk([((JavaUtilArrayList *) nil_chk(drawPoints_)) getWithInt:N + i])) update];
      }
    }
  }
  jdouble halfWidth = width / 2;
  switch ([drawType_ ordinal]) {
    case OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawType_VERTICAL_BAR:
    if (width <= 0) {
      for (jint i = 0; i < N; i++) {
        *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = IOSDoubleArray_Get(nil_chk(xVal), i);
        *IOSDoubleArray_GetRef(coords_, 1) = 0;
        [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) moveToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i);
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
      }
    }
    else {
      for (jint i = 0; i < N; i++) {
        *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = IOSDoubleArray_Get(nil_chk(xVal), i);
        *IOSDoubleArray_GetRef(coords_, 1) = 0;
        [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) moveToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i);
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i) + width;
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i);
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i) + width;
        *IOSDoubleArray_GetRef(coords_, 1) = 0;
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i);
        *IOSDoubleArray_GetRef(coords_, 1) = 0;
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
      }
    }
    break;
    case OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawType_HORIZONTAL_BAR:
    if (width <= 0) {
      for (jint i = 0; i < N; i++) {
        *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = 0;
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
        [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) moveToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(nil_chk(xVal), i);
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i);
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
      }
    }
    else {
      for (jint i = 0; i < N; i++) {
        *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = 0;
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
        [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) moveToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(nil_chk(xVal), i);
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i);
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i);
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i) + width;
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = 0;
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i) + width;
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
        *IOSDoubleArray_GetRef(coords_, 0) = 0;
        *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i);
        [view_ toScreenCoordsWithDoubleArray:coords_];
        [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
      }
    }
    break;
    case OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawType_STEP_GRAPH_CONTINUOUS:
    for (jint i = 0; i < N - 1; i++) {
      *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = IOSDoubleArray_Get(nil_chk(xVal), i) + halfWidth;
      *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
      [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toScreenCoordsWithDoubleArray:coords_];
      [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) moveToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
      *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i + 1) + halfWidth;
      *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i);
      [view_ toScreenCoordsWithDoubleArray:coords_];
      [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
      *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i + 1) + halfWidth;
      *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i + 1);
      [view_ toScreenCoordsWithDoubleArray:coords_];
      [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
    }
    *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = IOSDoubleArray_Get(nil_chk(xVal), N - 1) + halfWidth;
    *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), N - 1);
    [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toScreenCoordsWithDoubleArray:coords_];
    [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, gp_->size_ - 1))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
    break;
    case OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawType_STEP_GRAPH_JUMP:
    for (jint i = 0; i < N - 1; i++) {
      *IOSDoubleArray_GetRef(nil_chk(coords_), 0) = IOSDoubleArray_Get(nil_chk(xVal), i) + halfWidth;
      *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(nil_chk(yVal), i);
      [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toScreenCoordsWithDoubleArray:coords_];
      [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) moveToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
      *IOSDoubleArray_GetRef(coords_, 0) = IOSDoubleArray_Get(xVal, i + 1) + halfWidth;
      *IOSDoubleArray_GetRef(coords_, 1) = IOSDoubleArray_Get(yVal, i);
      [view_ toScreenCoordsWithDoubleArray:coords_];
      [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) lineToWithDouble:IOSDoubleArray_Get(coords_, 0) withDouble:IOSDoubleArray_Get(coords_, 1)];
    }
    break;
  }
  isVisible_ = NO;
  for (jint i = 0; i < gp_->size_; i++) {
    if ([((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(IOSObjectArray_Get(gp_, i))) intersectsWithInt:0 withInt:0 withInt:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getWidth] withInt:[view_ getHeight]]) {
      isVisible_ = YES;
      break;
    }
  }
  if (labelVisible_) {
    xLabel_ = J2ObjCFpToInt(IOSDoubleArray_Get(nil_chk(coords_), 0));
    yLabel_ = J2ObjCFpToInt(IOSDoubleArray_Get(coords_, 1)) - [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getFontSize];
    labelDesc_ = [geo_ getLabelDescription];
    [self addLabelOffset];
  }
}

- (void)updatePointLists {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_updatePointLists(self);
}

- (void)addPt {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_addPt(self);
}

- (void)setToolTipWithInt:(jint)barIndex {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_setToolTipWithInt_(self, barIndex);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonKernelGeosGeoNumeric:", "DrawBarGraph", NULL, 0x1, NULL, NULL },
    { "init__", "init", "V", 0x2, NULL, NULL },
    { "getBounds", NULL, "Lorg.geogebra.common.awt.GRectangle;", 0x11, NULL, NULL },
    { "drawWithOrgGeogebraCommonAwtGGraphics2D:", "draw", "V", 0x1, NULL, NULL },
    { "getGeoElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "hitWithInt:withInt:withInt:", "hit", "Z", 0x1, NULL, NULL },
    { "intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:", "intersectsRectangle", "Z", 0x1, NULL, NULL },
    { "isInsideWithOrgGeogebraCommonAwtGRectangle:", "isInside", "Z", 0x1, NULL, NULL },
    { "setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:", "setGeoElement", "V", 0x1, NULL, NULL },
    { "update", NULL, "V", 0x1, NULL, NULL },
    { "updatePointLists", NULL, "V", 0x2, NULL, NULL },
    { "addPt", NULL, "V", 0x2, NULL, NULL },
    { "setToolTipWithInt:", "setToolTip", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "drawType_", NULL, 0x2, "Lorg.geogebra.common.euclidian.draw.DrawBarGraph$DrawType;", NULL, NULL,  },
    { "POINT_RIGHT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_RIGHT },
    { "POINT_RIGHT_OPEN_LEFT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_RIGHT_OPEN_LEFT },
    { "POINT_NONE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_NONE },
    { "POINT_LEFT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_LEFT },
    { "POINT_LEFT_OPEN_RIGHT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_LEFT_OPEN_RIGHT },
    { "pointType_", NULL, 0x2, "I", NULL, NULL,  },
    { "isVisible_", NULL, 0x2, "Z", NULL, NULL,  },
    { "labelVisible_", NULL, 0x2, "Z", NULL, NULL,  },
    { "coords_", NULL, 0x2, "[D", NULL, NULL,  },
    { "gp_", NULL, 0x2, "[Lorg.geogebra.common.euclidian.GeneralPathClipped;", NULL, NULL,  },
    { "sum_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "algo_", NULL, 0x2, "Lorg.geogebra.common.kernel.algos.AlgoBarChart;", NULL, NULL,  },
    { "pts_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/kernel/geos/GeoPoint;>;",  },
    { "drawPoints_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/euclidian/draw/DrawPoint;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.euclidian.draw.DrawBarGraph$DrawType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawBarGraph = { 2, "DrawBarGraph", "org.geogebra.common.euclidian.draw", NULL, 0x1, 13, methods, 15, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianDrawDrawBarGraph;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawBarGraph_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self, OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoNumeric *n) {
  (void) OrgGeogebraCommonEuclidianDrawable_init(self);
  self->drawType_ = OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_get_VERTICAL_BAR();
  self->pointType_ = OrgGeogebraCommonEuclidianDrawDrawBarGraph_POINT_NONE;
  self->coords_ = [IOSDoubleArray newArrayWithLength:2];
  self->view_ = view;
  self->sum_ = n;
  self->geo_ = n;
  [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(n)) setDrawableWithBoolean:YES];
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_init__(self);
  [self update];
}

OrgGeogebraCommonEuclidianDrawDrawBarGraph *new_OrgGeogebraCommonEuclidianDrawDrawBarGraph_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoNumeric_(OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoNumeric *n) {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph *self = [OrgGeogebraCommonEuclidianDrawDrawBarGraph alloc];
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoNumeric_(self, view, n);
  return self;
}

void OrgGeogebraCommonEuclidianDrawDrawBarGraph_init__(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self) {
  self->algo_ = (OrgGeogebraCommonKernelAlgosAlgoBarChart *) check_class_cast([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geo_)) getDrawAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoBarChart class]);
  self->drawType_ = [((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(self->algo_)) getDrawType];
  if ([self->algo_ hasPoints]) {
    self->pts_ = new_JavaUtilArrayList_init();
    self->drawPoints_ = new_JavaUtilArrayList_init();
    OrgGeogebraCommonEuclidianDrawDrawBarGraph_updatePointLists(self);
  }
}

void OrgGeogebraCommonEuclidianDrawDrawBarGraph_updatePointLists(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self) {
  jint n;
  if (self->drawType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_get_STEP_GRAPH_CONTINUOUS() || self->drawType_ == OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_get_STEP_GRAPH_JUMP()) {
    n = 2 * [((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(self->algo_)) getIntervals] - 1;
  }
  else {
    n = [((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(self->algo_)) getIntervals];
  }
  if (n > [((JavaUtilArrayList *) nil_chk(self->pts_)) size]) {
    for (jint i = [self->pts_ size]; i < n; i++) {
      OrgGeogebraCommonEuclidianDrawDrawBarGraph_addPt(self);
    }
  }
  else if (n < [self->pts_ size]) {
    for (jint i = n; n < [self->pts_ size]; i++) {
      (void) [self->pts_ removeWithInt:i];
      (void) [((JavaUtilArrayList *) nil_chk(self->drawPoints_)) removeWithInt:i];
    }
  }
}

void OrgGeogebraCommonEuclidianDrawDrawBarGraph_addPt(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self) {
  OrgGeogebraCommonKernelGeosGeoPoint *p = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) getKernel])) getConstruction]);
  [p setLabelVisibleWithBoolean:NO];
  OrgGeogebraCommonEuclidianDrawDrawPoint *d = new_OrgGeogebraCommonEuclidianDrawDrawPoint_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self->view_, p);
  [d setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:p];
  [((JavaUtilArrayList *) nil_chk(self->pts_)) addWithId:p];
  [((JavaUtilArrayList *) nil_chk(self->drawPoints_)) addWithId:d];
}

void OrgGeogebraCommonEuclidianDrawDrawBarGraph_setToolTipWithInt_(OrgGeogebraCommonEuclidianDrawDrawBarGraph *self, jint barIndex) {
  [((OrgGeogebraCommonKernelAlgosAlgoBarChart *) nil_chk(self->algo_)) setToolTipTextWithInt:barIndex];
  [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) setToolTipTextWithNSString:nil];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawBarGraph)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum)

OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_values_[4];

@implementation OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_values() {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_values_ count:4 type:OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_values();
}

+ (OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initialize();
  for (int i = 0; i < 4; i++) {
    OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *e = OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum class]) {
    OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_VERTICAL_BAR = new_OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(@"VERTICAL_BAR", 0);
    OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_HORIZONTAL_BAR = new_OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(@"HORIZONTAL_BAR", 1);
    OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_STEP_GRAPH_CONTINUOUS = new_OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(@"STEP_GRAPH_CONTINUOUS", 2);
    OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_STEP_GRAPH_JUMP = new_OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(@"STEP_GRAPH_JUMP", 3);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "VERTICAL_BAR", "VERTICAL_BAR", 0x4019, "Lorg.geogebra.common.euclidian.draw.DrawBarGraph$DrawType;", &OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_VERTICAL_BAR, NULL,  },
    { "HORIZONTAL_BAR", "HORIZONTAL_BAR", 0x4019, "Lorg.geogebra.common.euclidian.draw.DrawBarGraph$DrawType;", &OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_HORIZONTAL_BAR, NULL,  },
    { "STEP_GRAPH_CONTINUOUS", "STEP_GRAPH_CONTINUOUS", 0x4019, "Lorg.geogebra.common.euclidian.draw.DrawBarGraph$DrawType;", &OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_STEP_GRAPH_CONTINUOUS, NULL,  },
    { "STEP_GRAPH_JUMP", "STEP_GRAPH_JUMP", 0x4019, "Lorg.geogebra.common.euclidian.draw.DrawBarGraph$DrawType;", &OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_STEP_GRAPH_JUMP, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.euclidian.draw.DrawBarGraph$DrawType;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum = { 2, "DrawType", "org.geogebra.common.euclidian.draw", "DrawBarGraph", 0x4019, 0, NULL, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/euclidian/draw/DrawBarGraph$DrawType;>;" };
  return &_OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *new_OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum *self = [OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum alloc];
  OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawBarGraph_DrawTypeEnum)
