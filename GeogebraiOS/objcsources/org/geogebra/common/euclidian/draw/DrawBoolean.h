//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/draw/DrawBoolean.java
//

#ifndef _OrgGeogebraCommonEuclidianDrawDrawBoolean_H_
#define _OrgGeogebraCommonEuclidianDrawDrawBoolean_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/euclidian/Drawable.h"

@class OrgGeogebraCommonAwtGColor;
@class OrgGeogebraCommonEuclidianEuclidianView;
@class OrgGeogebraCommonKernelGeosGeoBoolean;
@class OrgGeogebraCommonKernelGeosGeoElement;
@protocol OrgGeogebraCommonAwtGGraphics2D;
@protocol OrgGeogebraCommonAwtGRectangle;

@interface OrgGeogebraCommonEuclidianDrawDrawBoolean : OrgGeogebraCommonEuclidianDrawable

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                      withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)geoBool;

- (void)drawWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2;

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeoElement;

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold;

- (jboolean)hitLabelWithInt:(jint)x
                    withInt:(jint)y;

- (jboolean)intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect;

- (jboolean)isInsideWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect;

- (void)remove;

- (void)setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)update;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonEuclidianDrawDrawBoolean)

FOUNDATION_EXPORT void OrgGeogebraCommonEuclidianDrawDrawBoolean_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonEuclidianDrawDrawBoolean *self, OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoBoolean *geoBool);

FOUNDATION_EXPORT OrgGeogebraCommonEuclidianDrawDrawBoolean *new_OrgGeogebraCommonEuclidianDrawDrawBoolean_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoBoolean *geoBool) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonEuclidianDrawDrawBoolean)

@interface OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon : NSObject

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)ev;

- (jint)getIconHeight;

- (jint)getIconWidth;

- (void)paintIconWithBoolean:(jboolean)checked
                 withBoolean:(jboolean)highlighted
withOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g
                     withInt:(jint)x
                     withInt:(jint)y;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon)

FOUNDATION_EXPORT OrgGeogebraCommonAwtGColor *OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_highlightBackground_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon, highlightBackground_, OrgGeogebraCommonAwtGColor *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon, highlightBackground_, OrgGeogebraCommonAwtGColor *)

FOUNDATION_EXPORT void OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_initWithOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *self, OrgGeogebraCommonEuclidianEuclidianView *ev);

FOUNDATION_EXPORT OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *new_OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_initWithOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonEuclidianEuclidianView *ev) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon)

#endif // _OrgGeogebraCommonEuclidianDrawDrawBoolean_H_
