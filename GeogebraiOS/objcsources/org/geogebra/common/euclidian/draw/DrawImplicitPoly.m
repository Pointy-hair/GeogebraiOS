//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/euclidian/draw/DrawImplicitPoly.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/awt/GArea.h"
#include "org/geogebra/common/euclidian/Drawable.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/draw/DrawImplicitPoly.h"
#include "org/geogebra/common/euclidian/draw/DrawLocus.h"
#include "org/geogebra/common/factories/AwtFactory.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLocus.h"
#include "org/geogebra/common/kernel/implicit/GeoImplicitPoly.h"

@interface OrgGeogebraCommonEuclidianDrawDrawImplicitPoly () {
 @public
  OrgGeogebraCommonKernelImplicitGeoImplicitPoly *implicitPoly_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawImplicitPoly, implicitPoly_, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)

@implementation OrgGeogebraCommonEuclidianDrawDrawImplicitPoly

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
             withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)implicitPoly {
  OrgGeogebraCommonEuclidianDrawDrawImplicitPoly_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(self, view, implicitPoly);
  return self;
}

- (id<OrgGeogebraCommonAwtGArea>)getShape {
  return [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newArea];
}

- (OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)getPoly {
  return implicitPoly_;
}

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold {
  if ([((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(implicitPoly_)) getDeg] == 0) {
    return NO;
  }
  return [super hitWithInt:x withInt:y withInt:hitThreshold];
}

- (void)dealloc {
  RELEASE_(implicitPoly_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonKernelImplicitGeoImplicitPoly:", "DrawImplicitPoly", NULL, 0x1, NULL, NULL },
    { "getShape", NULL, "Lorg.geogebra.common.awt.GArea;", 0x1, NULL, NULL },
    { "getPoly", NULL, "Lorg.geogebra.common.kernel.implicit.GeoImplicitPoly;", 0x1, NULL, NULL },
    { "hitWithInt:withInt:withInt:", "hit", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "implicitPoly_", NULL, 0x2, "Lorg.geogebra.common.kernel.implicit.GeoImplicitPoly;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawImplicitPoly = { 2, "DrawImplicitPoly", "org.geogebra.common.euclidian.draw", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianDrawDrawImplicitPoly;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawImplicitPoly_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(OrgGeogebraCommonEuclidianDrawDrawImplicitPoly *self, OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *implicitPoly) {
  OrgGeogebraCommonEuclidianDrawDrawLocus_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoLocusND_(self, view, [((OrgGeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(implicitPoly)) getLocus]);
  OrgGeogebraCommonEuclidianDrawable_set_view_(self, view);
  OrgGeogebraCommonEuclidianDrawDrawImplicitPoly_set_implicitPoly_(self, implicitPoly);
  OrgGeogebraCommonEuclidianDrawable_set_geo_(self, implicitPoly);
  [self update];
}

OrgGeogebraCommonEuclidianDrawDrawImplicitPoly *new_OrgGeogebraCommonEuclidianDrawDrawImplicitPoly_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelImplicitGeoImplicitPoly *implicitPoly) {
  OrgGeogebraCommonEuclidianDrawDrawImplicitPoly *self = [OrgGeogebraCommonEuclidianDrawDrawImplicitPoly alloc];
  OrgGeogebraCommonEuclidianDrawDrawImplicitPoly_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelImplicitGeoImplicitPoly_(self, view, implicitPoly);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawImplicitPoly)
