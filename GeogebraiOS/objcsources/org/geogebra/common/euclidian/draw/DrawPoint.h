//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/draw/DrawPoint.java
//

#ifndef _OrgGeogebraCommonEuclidianDrawDrawPoint_H_
#define _OrgGeogebraCommonEuclidianDrawDrawPoint_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/euclidian/Drawable.h"

@class IOSDoubleArray;
@class OrgGeogebraCommonEuclidianEuclidianView;
@class OrgGeogebraCommonKernelGeosGeoElement;
@protocol OrgGeogebraCommonAwtGArea;
@protocol OrgGeogebraCommonAwtGGraphics2D;
@protocol OrgGeogebraCommonAwtGRectangle;
@protocol OrgGeogebraCommonKernelKernelNDGeoPointND;

@interface OrgGeogebraCommonEuclidianDrawDrawPoint : OrgGeogebraCommonEuclidianDrawable

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P;

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                    withBoolean:(jboolean)isPreview;

- (void)drawWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2;

- (id<OrgGeogebraCommonAwtGRectangle>)getBounds;

- (id<OrgGeogebraCommonAwtGArea>)getDot;

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeoElement;

+ (jint)getSelectionThresholdWithInt:(jint)threshold;

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold;

- (jboolean)intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect;

- (jboolean)isInsideWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect;

- (void)setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setPointStyleWithInt:(jint)pointType;

- (void)update;

- (void)updateWithDoubleArray:(IOSDoubleArray *)coords2;

#pragma mark Protected

- (void)drawTraceWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonEuclidianDrawDrawPoint)

FOUNDATION_EXPORT jint OrgGeogebraCommonEuclidianDrawDrawPoint_getSelectionThresholdWithInt_(jint threshold);

FOUNDATION_EXPORT void OrgGeogebraCommonEuclidianDrawDrawPoint_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonEuclidianDrawDrawPoint *self, OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P);

FOUNDATION_EXPORT OrgGeogebraCommonEuclidianDrawDrawPoint *new_OrgGeogebraCommonEuclidianDrawDrawPoint_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonEuclidianDrawDrawPoint_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(OrgGeogebraCommonEuclidianDrawDrawPoint *self, OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, jboolean isPreview);

FOUNDATION_EXPORT OrgGeogebraCommonEuclidianDrawDrawPoint *new_OrgGeogebraCommonEuclidianDrawDrawPoint_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, jboolean isPreview) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonEuclidianDrawDrawPoint)

#endif // _OrgGeogebraCommonEuclidianDrawDrawPoint_H_
