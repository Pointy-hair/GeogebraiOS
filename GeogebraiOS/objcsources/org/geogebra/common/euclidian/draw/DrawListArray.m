//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/draw/DrawListArray.java
//


#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/euclidian/DrawableND.h"
#include "org/geogebra/common/euclidian/EuclidianViewInterfaceSlim.h"
#include "org/geogebra/common/euclidian/draw/DrawListArray.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"

#define OrgGeogebraCommonEuclidianDrawDrawListArray_serialVersionUID 1LL

@interface OrgGeogebraCommonEuclidianDrawDrawListArray ()

- (OrgGeogebraCommonEuclidianDrawableND *)getDrawableWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)listElement
                                                      withOrgGeogebraCommonEuclidianDrawableND:(OrgGeogebraCommonEuclidianDrawableND *)drawList;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianDrawDrawListArray, serialVersionUID, jlong)

__attribute__((unused)) static OrgGeogebraCommonEuclidianDrawableND *OrgGeogebraCommonEuclidianDrawDrawListArray_getDrawableWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonEuclidianDrawableND_(OrgGeogebraCommonEuclidianDrawDrawListArray *self, OrgGeogebraCommonKernelGeosGeoElement *listElement, OrgGeogebraCommonEuclidianDrawableND *drawList);

@implementation OrgGeogebraCommonEuclidianDrawDrawListArray

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim:(id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim>)view {
  OrgGeogebraCommonEuclidianDrawDrawListArray_initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(self, view);
  return self;
}

- (jboolean)addToDrawableListWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)listElement
                                                               withInt:(jint)drawablePos
                                                               withInt:(jint)oldDrawableSize
                              withOrgGeogebraCommonEuclidianDrawableND:(OrgGeogebraCommonEuclidianDrawableND *)drawList {
  OrgGeogebraCommonEuclidianDrawableND *d = nil;
  jboolean inOldDrawableRange = drawablePos < oldDrawableSize;
  if (inOldDrawableRange) {
    OrgGeogebraCommonEuclidianDrawableND *oldDrawable = [self getWithInt:drawablePos];
    if ([((OrgGeogebraCommonEuclidianDrawableND *) nil_chk(oldDrawable)) getGeoElement] == listElement) {
      d = oldDrawable;
      [self updateWithOrgGeogebraCommonEuclidianDrawableND:d];
    }
    else {
      d = [self getDrawableWithOrgGeogebraCommonEuclidianDrawableND:oldDrawable withOrgGeogebraCommonKernelGeosGeoElement:listElement withOrgGeogebraCommonEuclidianDrawableND:drawList];
    }
  }
  else {
    d = OrgGeogebraCommonEuclidianDrawDrawListArray_getDrawableWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonEuclidianDrawableND_(self, listElement, drawList);
  }
  if (d != nil) {
    if (inOldDrawableRange) {
      (void) [self setWithInt:drawablePos withId:d];
    }
    else {
      [self addWithInt:drawablePos withId:d];
    }
    return YES;
  }
  return NO;
}

- (OrgGeogebraCommonEuclidianDrawableND *)getDrawableWithOrgGeogebraCommonEuclidianDrawableND:(OrgGeogebraCommonEuclidianDrawableND *)oldDrawable
                                                    withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)listElement
                                                     withOrgGeogebraCommonEuclidianDrawableND:(OrgGeogebraCommonEuclidianDrawableND *)drawList {
  return OrgGeogebraCommonEuclidianDrawDrawListArray_getDrawableWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonEuclidianDrawableND_(self, listElement, drawList);
}

- (void)updateWithOrgGeogebraCommonEuclidianDrawableND:(OrgGeogebraCommonEuclidianDrawableND *)d {
  [((OrgGeogebraCommonEuclidianDrawableND *) nil_chk(d)) update];
}

- (OrgGeogebraCommonEuclidianDrawableND *)getDrawableWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)listElement
                                                      withOrgGeogebraCommonEuclidianDrawableND:(OrgGeogebraCommonEuclidianDrawableND *)drawList {
  return OrgGeogebraCommonEuclidianDrawDrawListArray_getDrawableWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonEuclidianDrawableND_(self, listElement, drawList);
}

- (OrgGeogebraCommonEuclidianDrawableND *)createDrawableNDWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)listElement {
  return [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim>) nil_chk(view_)) newDrawableWithOrgGeogebraCommonKernelGeosGeoElement:listElement];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim:", "DrawListArray", NULL, 0x1, NULL, NULL },
    { "addToDrawableListWithOrgGeogebraCommonKernelGeosGeoElement:withInt:withInt:withOrgGeogebraCommonEuclidianDrawableND:", "addToDrawableList", "Z", 0x1, NULL, NULL },
    { "getDrawableWithOrgGeogebraCommonEuclidianDrawableND:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonEuclidianDrawableND:", "getDrawable", "Lorg.geogebra.common.euclidian.DrawableND;", 0x4, NULL, NULL },
    { "updateWithOrgGeogebraCommonEuclidianDrawableND:", "update", "V", 0x4, NULL, NULL },
    { "getDrawableWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonEuclidianDrawableND:", "getDrawable", "Lorg.geogebra.common.euclidian.DrawableND;", 0x2, NULL, NULL },
    { "createDrawableNDWithOrgGeogebraCommonKernelGeosGeoElement:", "createDrawableND", "Lorg.geogebra.common.euclidian.DrawableND;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraCommonEuclidianDrawDrawListArray_serialVersionUID },
    { "view_", NULL, 0x4, "Lorg.geogebra.common.euclidian.EuclidianViewInterfaceSlim;", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.euclidian.DrawableND;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawListArray = { 2, "DrawListArray", "org.geogebra.common.euclidian.draw", NULL, 0x1, 6, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/ArrayList<Lorg/geogebra/common/euclidian/DrawableND;>;" };
  return &_OrgGeogebraCommonEuclidianDrawDrawListArray;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawListArray_initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(OrgGeogebraCommonEuclidianDrawDrawListArray *self, id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim> view) {
  (void) JavaUtilArrayList_init(self);
  self->view_ = view;
}

OrgGeogebraCommonEuclidianDrawDrawListArray *new_OrgGeogebraCommonEuclidianDrawDrawListArray_initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim> view) {
  OrgGeogebraCommonEuclidianDrawDrawListArray *self = [OrgGeogebraCommonEuclidianDrawDrawListArray alloc];
  OrgGeogebraCommonEuclidianDrawDrawListArray_initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(self, view);
  return self;
}

OrgGeogebraCommonEuclidianDrawableND *OrgGeogebraCommonEuclidianDrawDrawListArray_getDrawableWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonEuclidianDrawableND_(OrgGeogebraCommonEuclidianDrawDrawListArray *self, OrgGeogebraCommonKernelGeosGeoElement *listElement, OrgGeogebraCommonEuclidianDrawableND *drawList) {
  OrgGeogebraCommonEuclidianDrawableND *d = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim>) nil_chk(self->view_)) getDrawableNDWithOrgGeogebraCommonKernelGeosGeoElement:listElement];
  if (d == nil) {
    d = [self createDrawableNDWithOrgGeogebraCommonKernelGeosGeoElement:listElement];
    if (d != nil) [d setCreatedByDrawListWithOrgGeogebraCommonEuclidianDrawableND:drawList];
  }
  else {
    [self updateWithOrgGeogebraCommonEuclidianDrawableND:d];
  }
  return d;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawListArray)
