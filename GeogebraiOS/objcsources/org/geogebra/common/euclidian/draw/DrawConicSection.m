//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/draw/DrawConicSection.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/awt/GAffineTransform.h"
#include "org/geogebra/common/awt/GArc2D.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GFont.h"
#include "org/geogebra/common/awt/GGeneralPath.h"
#include "org/geogebra/common/awt/GGraphics2D.h"
#include "org/geogebra/common/awt/GLine2D.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/awt/GShape.h"
#include "org/geogebra/common/euclidian/Drawable.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/EuclidianViewCompanion.h"
#include "org/geogebra/common/euclidian/GeneralPathClipped.h"
#include "org/geogebra/common/euclidian/clipping/ClipShape.h"
#include "org/geogebra/common/euclidian/draw/DrawConic.h"
#include "org/geogebra/common/euclidian/draw/DrawConicSection.h"
#include "org/geogebra/common/factories/AwtFactory.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicSectionInterface.h"

@interface OrgGeogebraCommonEuclidianDrawDrawConicSection () {
 @public
  id<OrgGeogebraCommonAwtGArc2D> arc_DrawConicSection_;
  id<OrgGeogebraCommonAwtGLine2D> line_;
  IOSObjectArray *lines_DrawConicSection_;
  OrgGeogebraCommonEuclidianGeneralPathClipped *hyp_;
  jboolean onlyEdge_;
  IOSObjectArray *endPoints_;
  jboolean drawLeft_;
}

- (void)updateEllipseEdge;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawConicSection, arc_DrawConicSection_, id<OrgGeogebraCommonAwtGArc2D>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawConicSection, line_, id<OrgGeogebraCommonAwtGLine2D>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawConicSection, lines_DrawConicSection_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawConicSection, hyp_, OrgGeogebraCommonEuclidianGeneralPathClipped *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawConicSection, endPoints_, IOSObjectArray *)

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawConicSection_updateEllipseEdge(OrgGeogebraCommonEuclidianDrawDrawConicSection *self);

@implementation OrgGeogebraCommonEuclidianDrawDrawConicSection

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                  withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  OrgGeogebraCommonEuclidianDrawDrawConicSection_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, view, c);
  return self;
}

- (jdouble)getStartWithInt:(jint)i {
  return [((id<OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface>) check_protocol_cast([self getGeoElement], @protocol(OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface))))) getParameterStartWithInt:i];
}

- (jdouble)getExtentWithInt:(jint)i {
  return [((id<OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface>) check_protocol_cast([self getGeoElement], @protocol(OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface))))) getParameterExtentWithInt:i];
}

- (jdouble)getEndWithInt:(jint)i {
  return [((id<OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface>) nil_chk(((id<OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface>) check_protocol_cast([self getGeoElement], @protocol(OrgGeogebraCommonKernelKernelNDGeoConicSectionInterface))))) getParameterEndWithInt:i];
}

+ (OrgGeogebraCommonKernelMatrixCoords *)ellipsePointWithOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)m
                                                     withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)ev0
                                                     withOrgGeogebraCommonKernelMatrixCoords:(OrgGeogebraCommonKernelMatrixCoords *)ev1
                                                                                  withDouble:(jdouble)r0
                                                                                  withDouble:(jdouble)r1
                                                                                  withDouble:(jdouble)parameter {
  return OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m, ev0, ev1, r0, r1, parameter);
}

- (void)updateEllipseEdge {
  OrgGeogebraCommonEuclidianDrawDrawConicSection_updateEllipseEdge(self);
}

- (void)updateCircle {
  onlyEdge_ = NO;
  [super updateCircle];
}

- (void)updateHyperbola {
  onlyEdge_ = NO;
  [super updateHyperbola];
}

- (void)updateParabola {
  onlyEdge_ = NO;
  [super updateParabola];
}

- (jboolean)checkIsOnFilling {
  return [super checkIsOnFilling] && !onlyEdge_;
}

- (jboolean)hitEllipseWithInt:(jint)hitX
                      withInt:(jint)hitY
                      withInt:(jint)hitThreshold {
  if (onlyEdge_) {
    return [((id<OrgGeogebraCommonAwtGShape>) nil_chk(shape_DrawConic_)) intersectsWithInt:hitX - hitThreshold withInt:hitY - hitThreshold withInt:2 * hitThreshold withInt:2 * hitThreshold];
  }
  return [super hitEllipseWithInt:hitX withInt:hitY withInt:hitThreshold];
}

- (void)updateEllipse {
  onlyEdge_ = NO;
  JavaLangDouble *start0 = JavaLangDouble_valueOfWithDouble_([self getStartWithInt:0]);
  if (JavaLangDouble_isNaNWithDouble_([start0 doubleValue])) {
    [super updateEllipse];
    return;
  }
  OrgGeogebraCommonKernelMatrixCoords *M = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) getMidpoint3D]];
  if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(M)) getZ])) {
    OrgGeogebraCommonEuclidianDrawDrawConicSection_updateEllipseEdge(self);
    onlyEdge_ = YES;
    return;
  }
  if (ev_ == nil) {
    ev_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  }
  for (jint j = 0; j < 2; j++) {
    (void) IOSObjectArray_Set(nil_chk(ev_), j, [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[conic_ getEigenvec3DWithInt:j]]);
    if (!OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(ev_, j))) getZ])) {
      OrgGeogebraCommonEuclidianDrawDrawConicSection_updateEllipseEdge(self);
      onlyEdge_ = YES;
      return;
    }
  }
  jdouble xradius = IOSDoubleArray_Get(nil_chk(halfAxes_), 0) * [view_ getXscale];
  jdouble yradius = IOSDoubleArray_Get(halfAxes_, 1) * [view_ getYscale];
  id<OrgGeogebraCommonAwtGShape> arcs;
  if (arc_DrawConicSection_ == nil) {
    arc_DrawConicSection_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newArc2D];
  }
  JavaLangDouble *extent0 = JavaLangDouble_valueOfWithDouble_([self getExtentWithInt:0]);
  JavaLangDouble *start1 = JavaLangDouble_valueOfWithDouble_([self getStartWithInt:1]);
  jint type;
  if (JavaLangDouble_isNaNWithDouble_([start1 doubleValue])) {
    type = OrgGeogebraCommonAwtGArc2D_CHORD;
  }
  else {
    type = OrgGeogebraCommonAwtGArc2D_OPEN;
  }
  [((id<OrgGeogebraCommonAwtGArc2D>) nil_chk(arc_DrawConicSection_)) setArcWithDouble:-IOSDoubleArray_Get(halfAxes_, 0) withDouble:-IOSDoubleArray_Get(halfAxes_, 1) withDouble:2 * IOSDoubleArray_Get(halfAxes_, 0) withDouble:2 * IOSDoubleArray_Get(halfAxes_, 1) withDouble:-JavaLangMath_toDegreesWithDouble_([start0 doubleValue]) withDouble:-JavaLangMath_toDegreesWithDouble_([extent0 doubleValue]) withInt:type];
  if (JavaLangDouble_isNaNWithDouble_([start1 doubleValue])) {
    arcs = arc_DrawConicSection_;
  }
  else {
    arcs = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newGeneralPath];
    [((id<OrgGeogebraCommonAwtGGeneralPath>) nil_chk(((id<OrgGeogebraCommonAwtGGeneralPath>) check_protocol_cast(arcs, @protocol(OrgGeogebraCommonAwtGGeneralPath))))) appendWithOrgGeogebraCommonAwtGShape:arc_DrawConicSection_ withBoolean:YES];
    JavaLangDouble *extent1 = JavaLangDouble_valueOfWithDouble_([self getExtentWithInt:1]);
    [arc_DrawConicSection_ setArcWithDouble:-IOSDoubleArray_Get(halfAxes_, 0) withDouble:-IOSDoubleArray_Get(halfAxes_, 1) withDouble:2 * IOSDoubleArray_Get(halfAxes_, 0) withDouble:2 * IOSDoubleArray_Get(halfAxes_, 1) withDouble:-JavaLangMath_toDegreesWithDouble_([start1 doubleValue]) withDouble:-JavaLangMath_toDegreesWithDouble_([extent1 doubleValue]) withInt:OrgGeogebraCommonAwtGArc2D_OPEN];
    [((id<OrgGeogebraCommonAwtGGeneralPath>) nil_chk(((id<OrgGeogebraCommonAwtGGeneralPath>) check_protocol_cast(arcs, @protocol(OrgGeogebraCommonAwtGGeneralPath))))) appendWithOrgGeogebraCommonAwtGShape:arc_DrawConicSection_ withBoolean:YES];
    [((id<OrgGeogebraCommonAwtGGeneralPath>) nil_chk(((id<OrgGeogebraCommonAwtGGeneralPath>) check_protocol_cast(arcs, @protocol(OrgGeogebraCommonAwtGGeneralPath))))) closePath];
  }
  [((id<OrgGeogebraCommonAwtGAffineTransform>) nil_chk(transform_)) setTransformWithOrgGeogebraCommonAwtGAffineTransform:[view_ getCoordTransform]];
  [transform_ concatenateWithOrgGeogebraCommonAwtGAffineTransform:[((OrgGeogebraCommonEuclidianEuclidianViewCompanion *) nil_chk([view_ getCompanion])) getTransformWithOrgGeogebraCommonKernelKernelNDGeoConicND:conic_ withOrgGeogebraCommonKernelMatrixCoords:M withOrgGeogebraCommonKernelMatrixCoordsArray:ev_]];
  jint BIG_RADIUS = [view_ getWidth] + [view_ getHeight];
  if (xradius < BIG_RADIUS && yradius < BIG_RADIUS) {
    shape_DrawConic_ = [transform_ createTransformedShapeWithOrgGeogebraCommonAwtGShape:arcs];
  }
  else {
    shape_DrawConic_ = OrgGeogebraCommonEuclidianClippingClipShape_clipToRectWithOrgGeogebraCommonAwtGShape_withOrgGeogebraCommonAwtGAffineTransform_withOrgGeogebraCommonAwtGRectangle2D_(arcs, transform_, [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newRectangleWithInt:-1 withInt:-1 withInt:[view_ getWidth] + 2 withInt:[view_ getHeight] + 2]);
  }
  *IOSDoubleArray_GetRef(nil_chk(labelCoords_), 0) = IOSDoubleArray_Get(halfAxes_, 0) * JavaLangMath_cosWithDouble_([start0 doubleValue]);
  *IOSDoubleArray_GetRef(labelCoords_, 1) = IOSDoubleArray_Get(halfAxes_, 1) * JavaLangMath_sinWithDouble_([start0 doubleValue]);
  [transform_ transformWithDoubleArray:labelCoords_ withInt:0 withDoubleArray:labelCoords_ withInt:0 withInt:1];
  xLabel_ = J2ObjCFpToInt(IOSDoubleArray_Get(labelCoords_, 0));
  yLabel_ = J2ObjCFpToInt(IOSDoubleArray_Get(labelCoords_, 1));
}

- (void)updateLines {
  if (endPoints_ == nil) {
    endPoints_ = [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonKernelMatrixCoords_class_()];
  }
  OrgGeogebraCommonKernelMatrixCoords *m = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) getOrigin3DWithInt:0];
  OrgGeogebraCommonKernelMatrixCoords *d = [conic_ getDirection3DWithInt:0];
  (void) IOSObjectArray_Set(nil_chk(endPoints_), 0, [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) mulWithDouble:[self getStartWithInt:0]]]]);
  (void) IOSObjectArray_Set(endPoints_, 1, [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[m addWithOrgGeogebraCommonKernelMatrixCoords:[d mulWithDouble:[self getEndWithInt:0]]]]);
  m = [conic_ getOrigin3DWithInt:1];
  d = [conic_ getDirection3DWithInt:1];
  (void) IOSObjectArray_Set(endPoints_, 3, [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) mulWithDouble:[self getStartWithInt:1]]]]);
  (void) IOSObjectArray_Set(endPoints_, 2, [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[m addWithOrgGeogebraCommonKernelMatrixCoords:[d mulWithDouble:[self getEndWithInt:1]]]]);
  id<OrgGeogebraCommonAwtGGeneralPath> path = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newGeneralPath];
  jint numPoints = -1;
  jint tx0 = 0, ty0 = 0, x1 = 0, y1 = 0, x2, y2;
  jfloat x, y;
  for (jint i = 0; i < 4; i++) {
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(endPoints_, i))) getZ])) {
      if (numPoints == -1) {
        x = (jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(endPoints_, i))) getX];
        y = (jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(endPoints_, i))) getY];
        [((id<OrgGeogebraCommonAwtGGeneralPath>) nil_chk(path)) moveToWithFloat:x withFloat:y];
        numPoints++;
        tx0 = [view_ toScreenCoordXWithDouble:x];
        ty0 = [view_ toScreenCoordYWithDouble:y];
        x1 = tx0;
        y1 = ty0;
      }
      else {
        x = (jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(endPoints_, i))) getX];
        y = (jfloat) [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(endPoints_, i))) getY];
        [((id<OrgGeogebraCommonAwtGGeneralPath>) nil_chk(path)) lineToWithFloat:x withFloat:y];
        x2 = [view_ toScreenCoordXWithDouble:x];
        y2 = [view_ toScreenCoordYWithDouble:y];
        if (lines_DrawConicSection_ == nil) {
          lines_DrawConicSection_ = [IOSObjectArray newArrayWithLength:4 type:OrgGeogebraCommonAwtGLine2D_class_()];
        }
        if (IOSObjectArray_Get(nil_chk(lines_DrawConicSection_), numPoints) == nil) (void) IOSObjectArray_Set(lines_DrawConicSection_, numPoints, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newLine2D]);
        [((id<OrgGeogebraCommonAwtGLine2D>) nil_chk(IOSObjectArray_Get(lines_DrawConicSection_, numPoints))) setLineWithDouble:x1 withDouble:y1 withDouble:x2 withDouble:y2];
        x1 = x2;
        y1 = y2;
        numPoints++;
      }
    }
  }
  if (numPoints > 0) {
    [((id<OrgGeogebraCommonAwtGGeneralPath>) nil_chk(path)) closePath];
    if (IOSObjectArray_Get(nil_chk(lines_DrawConicSection_), numPoints) == nil) (void) IOSObjectArray_Set(lines_DrawConicSection_, numPoints, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newLine2D]);
    [((id<OrgGeogebraCommonAwtGLine2D>) nil_chk(IOSObjectArray_Get(lines_DrawConicSection_, numPoints))) setLineWithDouble:x1 withDouble:y1 withDouble:tx0 withDouble:ty0];
  }
  [((id<OrgGeogebraCommonAwtGAffineTransform>) nil_chk(transform_)) setTransformWithOrgGeogebraCommonAwtGAffineTransform:[view_ getCoordTransform]];
  shape_DrawConic_ = [transform_ createTransformedShapeWithOrgGeogebraCommonAwtGShape:path];
}

- (void)updateDoubleLine {
  OrgGeogebraCommonKernelMatrixCoords *m = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) getOrigin3DWithInt:0];
  OrgGeogebraCommonKernelMatrixCoords *d = [conic_ getDirection3DWithInt:0];
  OrgGeogebraCommonKernelMatrixCoords *A = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(d)) mulWithDouble:[self getStartWithInt:0]]]];
  OrgGeogebraCommonKernelMatrixCoords *B = [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[m addWithOrgGeogebraCommonKernelMatrixCoords:[d mulWithDouble:[self getEndWithInt:0]]]];
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(A)) getZ]) && OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(B)) getZ])) {
    if (line_ == nil) line_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newLine2D];
    [((id<OrgGeogebraCommonAwtGLine2D>) nil_chk(line_)) setLineWithDouble:[A getX] withDouble:[A getY] withDouble:[B getX] withDouble:[B getY]];
  }
  else {
    isVisible_ = NO;
    return;
  }
  [((id<OrgGeogebraCommonAwtGAffineTransform>) nil_chk(transform_)) setTransformWithOrgGeogebraCommonAwtGAffineTransform:[view_ getCoordTransform]];
  shape_DrawConic_ = [transform_ createTransformedShapeWithOrgGeogebraCommonAwtGShape:line_];
}

- (void)drawLinesWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2 {
  [self fillWithOrgGeogebraCommonAwtGGraphics2D:g2 withOrgGeogebraCommonAwtGShape:shape_DrawConic_ withBoolean:NO];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) doHighlighting]) {
    [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setStrokeWithOrgGeogebraCommonAwtGBasicStroke:selStroke_];
    [g2 setColorWithOrgGeogebraCommonAwtGColor:[geo_ getSelColor]];
    [g2 drawWithOrgGeogebraCommonAwtGShape:shape_DrawConic_];
  }
  [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setStrokeWithOrgGeogebraCommonAwtGBasicStroke:objStroke_];
  [g2 setColorWithOrgGeogebraCommonAwtGColor:[geo_ getObjectColor]];
  [g2 drawWithOrgGeogebraCommonAwtGShape:shape_DrawConic_];
  if (labelVisible_) {
    [g2 setFontWithOrgGeogebraCommonAwtGFont:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getFontConic]];
    [g2 setColorWithOrgGeogebraCommonAwtGColor:[geo_ getLabelColor]];
    [self drawLabelWithOrgGeogebraCommonAwtGGraphics2D:g2];
  }
}

- (jboolean)hitLinesWithInt:(jint)screenx
                    withInt:(jint)screeny
                    withInt:(jint)hitThreshold {
  if (lines_DrawConicSection_ == nil) {
    return NO;
  }
  for (jint i = 0; i < 4; i++) {
    line_ = IOSObjectArray_Get(nil_chk(lines_DrawConicSection_), i);
    if (line_ != nil) {
      if ([line_ intersectsWithInt:screenx - hitThreshold withInt:screeny - hitThreshold withInt:2 * hitThreshold withInt:2 * hitThreshold]) {
        return YES;
      }
    }
  }
  return NO;
}

- (void)updateParabolaX0Y0 {
  y0_ = [self getEndWithInt:0] * ((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_))->p_;
  x0_ = y0_ * y0_ / (conic_->p_ * 2);
}

- (void)updateParabolaEdge {
  OrgGeogebraCommonKernelMatrixCoords *m = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) getMidpoint3D];
  OrgGeogebraCommonKernelMatrixCoords *ev1 = [conic_ getEigenvec3DWithInt:0];
  OrgGeogebraCommonKernelMatrixCoords *ev2 = [conic_ getEigenvec3DWithInt:1];
  jdouble t, u, v;
  t = [self getStartWithInt:0];
  u = conic_->p_ * t * t / 2;
  v = conic_->p_ * t;
  OrgGeogebraCommonKernelMatrixCoords *A = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev1)) mulWithDouble:u]])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev2)) mulWithDouble:v]]];
  t = [self getEndWithInt:0];
  u = conic_->p_ * t * t / 2;
  v = conic_->p_ * t;
  OrgGeogebraCommonKernelMatrixCoords *B = [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([m addWithOrgGeogebraCommonKernelMatrixCoords:[ev1 mulWithDouble:u]])) addWithOrgGeogebraCommonKernelMatrixCoords:[ev2 mulWithDouble:v]]];
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(A)) getZ]) && OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(B)) getZ])) {
    if (line_ == nil) line_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newLine2D];
    [((id<OrgGeogebraCommonAwtGLine2D>) nil_chk(line_)) setLineWithDouble:[A getX] withDouble:[A getY] withDouble:[B getX] withDouble:[B getY]];
  }
  else {
    isVisible_ = NO;
    return;
  }
  [((id<OrgGeogebraCommonAwtGAffineTransform>) nil_chk(transform_)) setTransformWithOrgGeogebraCommonAwtGAffineTransform:[view_ getCoordTransform]];
  shape_DrawConic_ = [transform_ createTransformedShapeWithOrgGeogebraCommonAwtGShape:line_];
}

- (void)updateParabolaPath {
  [super updateParabolaPath];
  [((id<OrgGeogebraCommonAwtGGeneralPath>) nil_chk(parabola_)) closePath];
}

- (void)updateParabolaLabelCoords {
  *IOSDoubleArray_GetRef(nil_chk(labelCoords_), 0) = 0;
  *IOSDoubleArray_GetRef(labelCoords_, 1) = 0;
}

- (void)updateHyperbolaEdge {
  OrgGeogebraCommonKernelMatrixCoords *m = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) getMidpoint3D];
  OrgGeogebraCommonKernelMatrixCoords *ev1 = [conic_ getEigenvec3DWithInt:0];
  OrgGeogebraCommonKernelMatrixCoords *ev2 = [conic_ getEigenvec3DWithInt:1];
  jdouble e1 = [conic_ getHalfAxisWithInt:0];
  jdouble e2 = [conic_ getHalfAxisWithInt:1];
  OrgGeogebraCommonKernelMatrixCoords *A = nil, *B = nil;
  jdouble start = [self getStartWithInt:0];
  jdouble end;
  if (!JavaLangDouble_isNaNWithDouble_(start)) {
    end = [self getEndWithInt:0];
    A = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev1)) mulWithDouble:e1 * JavaLangMath_coshWithDouble_(start)]])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev2)) mulWithDouble:e2 * JavaLangMath_sinhWithDouble_(start)]]];
    B = [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([m addWithOrgGeogebraCommonKernelMatrixCoords:[ev1 mulWithDouble:e1 * JavaLangMath_coshWithDouble_(end)]])) addWithOrgGeogebraCommonKernelMatrixCoords:[ev2 mulWithDouble:e2 * JavaLangMath_sinhWithDouble_(end)]]];
  }
  else {
    start = [self getStartWithInt:1];
    if (!JavaLangDouble_isNaNWithDouble_(start)) {
      end = [self getEndWithInt:1];
      A = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev1)) mulWithDouble:-e1 * JavaLangMath_coshWithDouble_(start)]])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev2)) mulWithDouble:e2 * JavaLangMath_sinhWithDouble_(start)]]];
      B = [view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([m addWithOrgGeogebraCommonKernelMatrixCoords:[ev1 mulWithDouble:-e1 * JavaLangMath_coshWithDouble_(end)]])) addWithOrgGeogebraCommonKernelMatrixCoords:[ev2 mulWithDouble:e2 * JavaLangMath_sinhWithDouble_(end)]]];
    }
  }
  if (A != nil && OrgGeogebraCommonKernelKernel_isZeroWithDouble_([A getZ]) && OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(B)) getZ])) {
    if (line_ == nil) line_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newLine2D];
    [((id<OrgGeogebraCommonAwtGLine2D>) nil_chk(line_)) setLineWithDouble:[A getX] withDouble:[A getY] withDouble:[B getX] withDouble:[B getY]];
  }
  else {
    isVisible_ = NO;
    return;
  }
  [((id<OrgGeogebraCommonAwtGAffineTransform>) nil_chk(transform_)) setTransformWithOrgGeogebraCommonAwtGAffineTransform:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getCoordTransform]];
  shape_DrawConic_ = [transform_ createTransformedShapeWithOrgGeogebraCommonAwtGShape:line_];
}

- (void)updateHyperbolaResetPaths {
  if (firstHyperbola_) {
    firstHyperbola_ = NO;
    points_ = OrgGeogebraCommonEuclidianDrawDrawConic_PLOT_POINTS;
    hyp_ = new_OrgGeogebraCommonEuclidianGeneralPathClipped_initWithOrgGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(view_);
  }
  else {
    [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(hyp_)) reset];
  }
}

- (void)updateHyperbolaX0 {
  jdouble end = [self getEndWithInt:0];
  if (JavaLangDouble_isNaNWithDouble_(end)) {
    x0_ = a_ * JavaLangMath_coshWithDouble_([self getEndWithInt:1]);
    drawLeft_ = NO;
  }
  else {
    x0_ = a_ * JavaLangMath_coshWithDouble_(end);
    drawLeft_ = YES;
  }
}

- (void)updateHyperbolaAddPointWithInt:(jint)index
                            withDouble:(jdouble)x
                            withDouble:(jdouble)y {
  if (drawLeft_) {
    [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(hyp_)) addPointWithInt:index withDouble:x withDouble:y];
  }
  else {
    [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(hyp_)) addPointWithInt:index withDouble:-x withDouble:y];
  }
}

- (void)updateHyperboalSetTransformToPaths {
  [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(hyp_)) transformWithOrgGeogebraCommonAwtGAffineTransform:transform_];
}

- (void)updateHyperbolaClosePaths {
  [((OrgGeogebraCommonEuclidianGeneralPathClipped *) nil_chk(hyp_)) closePath];
}

- (void)updateHyperbolaSetShape {
  shape_DrawConic_ = hyp_;
}

- (void)drawHyperbolaWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2 {
  [self fillWithOrgGeogebraCommonAwtGGraphics2D:g2 withOrgGeogebraCommonAwtGShape:shape_DrawConic_ withBoolean:YES];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) doHighlighting]) {
    [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setStrokeWithOrgGeogebraCommonAwtGBasicStroke:selStroke_];
    [g2 setColorWithOrgGeogebraCommonAwtGColor:[geo_ getSelColor]];
    [g2 drawWithValueStrokePureWithOrgGeogebraCommonAwtGShape:shape_DrawConic_];
  }
  [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setStrokeWithOrgGeogebraCommonAwtGBasicStroke:objStroke_];
  [g2 setColorWithOrgGeogebraCommonAwtGColor:[geo_ getObjectColor]];
  [g2 drawWithValueStrokePureWithOrgGeogebraCommonAwtGShape:shape_DrawConic_];
  if (labelVisible_) {
    [g2 setFontWithOrgGeogebraCommonAwtGFont:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getFontConic]];
    [g2 setColorWithOrgGeogebraCommonAwtGColor:[geo_ getLabelColor]];
    [self drawLabelWithOrgGeogebraCommonAwtGGraphics2D:g2];
  }
}

- (void)updateHyperbolaLabelCoords {
  if (drawLeft_) {
    *IOSDoubleArray_GetRef(nil_chk(labelCoords_), 0) = a_;
  }
  else {
    *IOSDoubleArray_GetRef(nil_chk(labelCoords_), 0) = -a_;
  }
  *IOSDoubleArray_GetRef(nil_chk(labelCoords_), 1) = 0;
}

- (jboolean)checkHyperbolaOnScreenWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)viewRect {
  return YES;
}

- (jboolean)checkCircleEllipseParabolaOnScreenWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)viewRect {
  return YES;
}

- (jboolean)hitHyperbolaWithInt:(jint)hitX
                        withInt:(jint)hitY
                        withInt:(jint)hitThreshold {
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "DrawConicSection", NULL, 0x1, NULL, NULL },
    { "getStartWithInt:", "getStart", "D", 0x4, NULL, NULL },
    { "getExtentWithInt:", "getExtent", "D", 0x4, NULL, NULL },
    { "getEndWithInt:", "getEnd", "D", 0x4, NULL, NULL },
    { "ellipsePointWithOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withOrgGeogebraCommonKernelMatrixCoords:withDouble:withDouble:withDouble:", "ellipsePoint", "Lorg.geogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "updateEllipseEdge", NULL, "V", 0x2, NULL, NULL },
    { "updateCircle", NULL, "V", 0x4, NULL, NULL },
    { "updateHyperbola", NULL, "V", 0x4, NULL, NULL },
    { "updateParabola", NULL, "V", 0x4, NULL, NULL },
    { "checkIsOnFilling", NULL, "Z", 0x4, NULL, NULL },
    { "hitEllipseWithInt:withInt:withInt:", "hitEllipse", "Z", 0x1, NULL, NULL },
    { "updateEllipse", NULL, "V", 0x4, NULL, NULL },
    { "updateLines", NULL, "V", 0x4, NULL, NULL },
    { "updateDoubleLine", NULL, "V", 0x4, NULL, NULL },
    { "drawLinesWithOrgGeogebraCommonAwtGGraphics2D:", "drawLines", "V", 0x4, NULL, NULL },
    { "hitLinesWithInt:withInt:withInt:", "hitLines", "Z", 0x1, NULL, NULL },
    { "updateParabolaX0Y0", NULL, "V", 0x4, NULL, NULL },
    { "updateParabolaEdge", NULL, "V", 0x4, NULL, NULL },
    { "updateParabolaPath", NULL, "V", 0x4, NULL, NULL },
    { "updateParabolaLabelCoords", NULL, "V", 0x4, NULL, NULL },
    { "updateHyperbolaEdge", NULL, "V", 0x4, NULL, NULL },
    { "updateHyperbolaResetPaths", NULL, "V", 0x4, NULL, NULL },
    { "updateHyperbolaX0", NULL, "V", 0x4, NULL, NULL },
    { "updateHyperbolaAddPointWithInt:withDouble:withDouble:", "updateHyperbolaAddPoint", "V", 0x4, NULL, NULL },
    { "updateHyperboalSetTransformToPaths", NULL, "V", 0x4, NULL, NULL },
    { "updateHyperbolaClosePaths", NULL, "V", 0x4, NULL, NULL },
    { "updateHyperbolaSetShape", NULL, "V", 0x4, NULL, NULL },
    { "drawHyperbolaWithOrgGeogebraCommonAwtGGraphics2D:", "drawHyperbola", "V", 0x4, NULL, NULL },
    { "updateHyperbolaLabelCoords", NULL, "V", 0x4, NULL, NULL },
    { "checkHyperbolaOnScreenWithOrgGeogebraCommonAwtGRectangle:", "checkHyperbolaOnScreen", "Z", 0x4, NULL, NULL },
    { "checkCircleEllipseParabolaOnScreenWithOrgGeogebraCommonAwtGRectangle:", "checkCircleEllipseParabolaOnScreen", "Z", 0x4, NULL, NULL },
    { "hitHyperbolaWithInt:withInt:withInt:", "hitHyperbola", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "arc_DrawConicSection_", "arc", 0x2, "Lorg.geogebra.common.awt.GArc2D;", NULL, NULL,  },
    { "line_", NULL, 0x2, "Lorg.geogebra.common.awt.GLine2D;", NULL, NULL,  },
    { "lines_DrawConicSection_", "lines", 0x2, "[Lorg.geogebra.common.awt.GLine2D;", NULL, NULL,  },
    { "hyp_", NULL, 0x2, "Lorg.geogebra.common.euclidian.GeneralPathClipped;", NULL, NULL,  },
    { "onlyEdge_", NULL, 0x2, "Z", NULL, NULL,  },
    { "endPoints_", NULL, 0x2, "[Lorg.geogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "drawLeft_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawConicSection = { 2, "DrawConicSection", "org.geogebra.common.euclidian.draw", NULL, 0x1, 32, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianDrawDrawConicSection;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawConicSection_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonEuclidianDrawDrawConicSection *self, OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelKernelNDGeoConicND *c) {
  (void) OrgGeogebraCommonEuclidianDrawDrawConic_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoConicND_withBoolean_(self, view, c, NO);
}

OrgGeogebraCommonEuclidianDrawDrawConicSection *new_OrgGeogebraCommonEuclidianDrawDrawConicSection_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoConicND_(OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelKernelNDGeoConicND *c) {
  OrgGeogebraCommonEuclidianDrawDrawConicSection *self = [OrgGeogebraCommonEuclidianDrawDrawConicSection alloc];
  OrgGeogebraCommonEuclidianDrawDrawConicSection_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelKernelNDGeoConicND_(self, view, c);
  return self;
}

OrgGeogebraCommonKernelMatrixCoords *OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(OrgGeogebraCommonKernelMatrixCoords *m, OrgGeogebraCommonKernelMatrixCoords *ev0, OrgGeogebraCommonKernelMatrixCoords *ev1, jdouble r0, jdouble r1, jdouble parameter) {
  OrgGeogebraCommonEuclidianDrawDrawConicSection_initialize();
  return [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(m)) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev0)) mulWithDouble:r0 * JavaLangMath_cosWithDouble_(parameter)]])) addWithOrgGeogebraCommonKernelMatrixCoords:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(ev1)) mulWithDouble:r1 * JavaLangMath_sinWithDouble_(parameter)]];
}

void OrgGeogebraCommonEuclidianDrawDrawConicSection_updateEllipseEdge(OrgGeogebraCommonEuclidianDrawDrawConicSection *self) {
  OrgGeogebraCommonKernelMatrixCoords *m = [((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conic_)) getMidpoint3D];
  OrgGeogebraCommonKernelMatrixCoords *ev0 = [self->conic_ getEigenvec3DWithInt:0];
  OrgGeogebraCommonKernelMatrixCoords *ev1 = [self->conic_ getEigenvec3DWithInt:1];
  jdouble r0 = [self->conic_ getHalfAxisWithInt:0];
  jdouble r1 = [self->conic_ getHalfAxisWithInt:1];
  jdouble start0 = [self getStartWithInt:0];
  jdouble end0 = [self getEndWithInt:0];
  jdouble start1 = [self getStartWithInt:1];
  jdouble end1 = [self getEndWithInt:1];
  OrgGeogebraCommonKernelMatrixCoords *A, *B;
  if (!JavaLangDouble_isNaNWithDouble_(start1)) {
    A = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m, ev0, ev1, r0, r1, end0)];
    if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(A)) getZ])) {
      B = [self->view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m, ev0, ev1, r0, r1, start1)];
    }
    else {
      A = [self->view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m, ev0, ev1, r0, r1, end1)];
      B = [self->view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m, ev0, ev1, r0, r1, start0)];
    }
  }
  else {
    A = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m, ev0, ev1, r0, r1, end0)];
    B = [self->view_ getCoordsForViewWithOrgGeogebraCommonKernelMatrixCoords:OrgGeogebraCommonEuclidianDrawDrawConicSection_ellipsePointWithOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withOrgGeogebraCommonKernelMatrixCoords_withDouble_withDouble_withDouble_(m, ev0, ev1, r0, r1, start0)];
  }
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_([((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(B)) getZ])) {
    if (self->line_ == nil) self->line_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newLine2D];
    [((id<OrgGeogebraCommonAwtGLine2D>) nil_chk(self->line_)) setLineWithDouble:[((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(A)) getX] withDouble:[A getY] withDouble:[B getX] withDouble:[B getY]];
  }
  else {
    self->isVisible_ = NO;
    return;
  }
  [((id<OrgGeogebraCommonAwtGAffineTransform>) nil_chk(self->transform_)) setTransformWithOrgGeogebraCommonAwtGAffineTransform:[((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) getCoordTransform]];
  self->shape_DrawConic_ = [self->transform_ createTransformedShapeWithOrgGeogebraCommonAwtGShape:self->line_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawConicSection)
