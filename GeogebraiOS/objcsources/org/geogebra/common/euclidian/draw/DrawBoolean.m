//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/draw/DrawBoolean.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/awt/GBasicStroke.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GDimension.h"
#include "org/geogebra/common/awt/GFont.h"
#include "org/geogebra/common/awt/GGraphics2D.h"
#include "org/geogebra/common/awt/GPoint.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/euclidian/Drawable.h"
#include "org/geogebra/common/euclidian/EuclidianStatic.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/draw/DrawBoolean.h"
#include "org/geogebra/common/factories/AwtFactory.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/geos/GeoBoolean.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/main/App.h"

@interface OrgGeogebraCommonEuclidianDrawDrawBoolean () {
 @public
  OrgGeogebraCommonKernelGeosGeoBoolean *geoBool_;
  jboolean isVisible_;
  NSString *oldCaption_;
  OrgGeogebraCommonAwtGPoint *textSize_;
  OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *checkBoxIcon_;
}

- (void)updateLabel;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean, geoBool_, OrgGeogebraCommonKernelGeosGeoBoolean *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean, oldCaption_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean, textSize_, OrgGeogebraCommonAwtGPoint *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean, checkBoxIcon_, OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *)

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawBoolean_update(OrgGeogebraCommonEuclidianDrawDrawBoolean *self);

__attribute__((unused)) static void OrgGeogebraCommonEuclidianDrawDrawBoolean_updateLabel(OrgGeogebraCommonEuclidianDrawDrawBoolean *self);

@interface OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon () {
 @public
  OrgGeogebraCommonEuclidianEuclidianView *ev_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon, ev_, OrgGeogebraCommonEuclidianEuclidianView *)

static id<OrgGeogebraCommonAwtGBasicStroke> OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke13_ = nil;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon, stroke13_, id<OrgGeogebraCommonAwtGBasicStroke>)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon, stroke13_, id<OrgGeogebraCommonAwtGBasicStroke>)

static id<OrgGeogebraCommonAwtGBasicStroke> OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke26_ = nil;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon, stroke26_, id<OrgGeogebraCommonAwtGBasicStroke>)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon, stroke26_, id<OrgGeogebraCommonAwtGBasicStroke>)

@implementation OrgGeogebraCommonEuclidianDrawDrawBoolean

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                      withOrgGeogebraCommonKernelGeosGeoBoolean:(OrgGeogebraCommonKernelGeosGeoBoolean *)geoBool {
  OrgGeogebraCommonEuclidianDrawDrawBoolean_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, view, geoBool);
  return self;
}

- (void)update {
  OrgGeogebraCommonEuclidianDrawDrawBoolean_update(self);
}

- (void)updateLabel {
  OrgGeogebraCommonEuclidianDrawDrawBoolean_updateLabel(self);
}

- (void)drawWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2 {
  if (isVisible_) {
    jint size = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getBooleanSize];
    [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g2)) setFontWithOrgGeogebraCommonAwtGFont:[view_ getFontPoint]];
    [g2 setStrokeWithOrgGeogebraCommonAwtGBasicStroke:OrgGeogebraCommonEuclidianEuclidianStatic_getDefaultStroke()];
    [((OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *) nil_chk(checkBoxIcon_)) paintIconWithBoolean:[((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(geoBool_)) getBoolean] withBoolean:[geoBool_ doHighlighting] withOrgGeogebraCommonAwtGGraphics2D:g2 withInt:geoBool_->labelOffsetX_ + 5 withInt:geoBool_->labelOffsetY_ + 5];
    [g2 setPaintWithOrgGeogebraCommonAwtGPaint:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) getObjectColor]];
    textSize_ = OrgGeogebraCommonEuclidianEuclidianStatic_drawIndexedStringWithOrgGeogebraCommonMainApp_withOrgGeogebraCommonAwtGGraphics2D_withNSString_withFloat_withFloat_withBoolean_withBoolean_([view_ getApplication], g2, labelDesc_, geoBool_->labelOffsetX_ + size + 9, geoBool_->labelOffsetY_ + (size + 9) / 2 + 5, NO, NO);
    OrgGeogebraCommonEuclidianDrawDrawBoolean_updateLabel(self);
  }
}

- (void)remove {
}

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold {
  return [super hitLabelWithInt:x withInt:y];
}

- (jboolean)isInsideWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect {
  return [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(rect)) containsWithOrgGeogebraCommonAwtGRectangle2D:labelRectangle_];
}

- (jboolean)intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect {
  return [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(rect)) intersectsWithOrgGeogebraCommonAwtGRectangle2D:labelRectangle_];
}

- (jboolean)hitLabelWithInt:(jint)x
                    withInt:(jint)y {
  return NO;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeoElement {
  return geo_;
}

- (void)setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  self->geo_ = geo;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonKernelGeosGeoBoolean:", "DrawBoolean", NULL, 0x1, NULL, NULL },
    { "update", NULL, "V", 0x11, NULL, NULL },
    { "updateLabel", NULL, "V", 0x2, NULL, NULL },
    { "drawWithOrgGeogebraCommonAwtGGraphics2D:", "draw", "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x11, NULL, NULL },
    { "hitWithInt:withInt:withInt:", "hit", "Z", 0x11, NULL, NULL },
    { "isInsideWithOrgGeogebraCommonAwtGRectangle:", "isInside", "Z", 0x11, NULL, NULL },
    { "intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:", "intersectsRectangle", "Z", 0x1, NULL, NULL },
    { "hitLabelWithInt:withInt:", "hitLabel", "Z", 0x1, NULL, NULL },
    { "getGeoElement", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x11, NULL, NULL },
    { "setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:", "setGeoElement", "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoBool_", NULL, 0x2, "Lorg.geogebra.common.kernel.geos.GeoBoolean;", NULL, NULL,  },
    { "isVisible_", NULL, 0x2, "Z", NULL, NULL,  },
    { "oldCaption_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "textSize_", NULL, 0x2, "Lorg.geogebra.common.awt.GPoint;", NULL, NULL,  },
    { "checkBoxIcon_", NULL, 0x2, "Lorg.geogebra.common.euclidian.draw.DrawBoolean$CheckBoxIcon;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.euclidian.draw.DrawBoolean$CheckBoxIcon;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawBoolean = { 2, "DrawBoolean", "org.geogebra.common.euclidian.draw", NULL, 0x11, 11, methods, 5, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianDrawDrawBoolean;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawBoolean_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonEuclidianDrawDrawBoolean *self, OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoBoolean *geoBool) {
  (void) OrgGeogebraCommonEuclidianDrawable_init(self);
  self->textSize_ = new_OrgGeogebraCommonAwtGPoint_initWithInt_withInt_(0, 0);
  self->view_ = view;
  self->geoBool_ = geoBool;
  self->geo_ = geoBool;
  self->checkBoxIcon_ = new_OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_initWithOrgGeogebraCommonEuclidianEuclidianView_(view);
  OrgGeogebraCommonEuclidianDrawDrawBoolean_update(self);
}

OrgGeogebraCommonEuclidianDrawDrawBoolean *new_OrgGeogebraCommonEuclidianDrawDrawBoolean_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoBoolean_(OrgGeogebraCommonEuclidianEuclidianView *view, OrgGeogebraCommonKernelGeosGeoBoolean *geoBool) {
  OrgGeogebraCommonEuclidianDrawDrawBoolean *self = [OrgGeogebraCommonEuclidianDrawDrawBoolean alloc];
  OrgGeogebraCommonEuclidianDrawDrawBoolean_initWithOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonKernelGeosGeoBoolean_(self, view, geoBool);
  return self;
}

void OrgGeogebraCommonEuclidianDrawDrawBoolean_update(OrgGeogebraCommonEuclidianDrawDrawBoolean *self) {
  self->isVisible_ = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geo_)) isEuclidianVisible];
  if (!self->isVisible_) {
    return;
  }
  [self updateStrokesWithOrgGeogebraCommonKernelKernelNDGeoElementND:self->geoBool_];
  if ([self->geo_ isLabelVisible]) {
    NSString *caption = [((OrgGeogebraCommonKernelGeosGeoBoolean *) nil_chk(self->geoBool_)) getCaptionWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    if (![((NSString *) nil_chk(caption)) isEqual:self->oldCaption_]) {
      self->oldCaption_ = caption;
      self->labelDesc_ = caption;
    }
  }
  else {
    self->oldCaption_ = @"";
    self->labelDesc_ = @"";
  }
  OrgGeogebraCommonEuclidianDrawDrawBoolean_updateLabel(self);
}

void OrgGeogebraCommonEuclidianDrawDrawBoolean_updateLabel(OrgGeogebraCommonEuclidianDrawDrawBoolean *self) {
  self->xLabel_ = ((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(self->geo_))->labelOffsetX_;
  self->yLabel_ = self->geo_->labelOffsetY_;
  jint size = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) getBooleanSize];
  OrgGeogebraCommonAwtGDimension *prefSize = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newDimensionWithInt:size + 12 withInt:size + 12];
  [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(self->labelRectangle_)) setBoundsWithInt:self->xLabel_ withInt:self->yLabel_ withInt:[((OrgGeogebraCommonAwtGDimension *) nil_chk(prefSize)) getWidth] + ((self->textSize_ == nil) ? 0 : self->textSize_->x_) withInt:[prefSize getHeight]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawBoolean)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon)

OrgGeogebraCommonAwtGColor *OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_highlightBackground_;

@implementation OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)ev {
  OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_initWithOrgGeogebraCommonEuclidianEuclidianView_(self, ev);
  return self;
}

- (void)paintIconWithBoolean:(jboolean)checked
                 withBoolean:(jboolean)highlighted
withOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g
                     withInt:(jint)x
                     withInt:(jint)y {
  jint csize = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ev_)) getBooleanSize];
  {
    [((id<OrgGeogebraCommonAwtGGraphics2D>) nil_chk(g)) setColorWithOrgGeogebraCommonAwtGColor:OrgGeogebraCommonAwtGColor_get_DARK_GRAY_()];
    [g drawRoundRectWithInt:x withInt:y withInt:csize withInt:csize withInt:csize / 5 withInt:csize / 5];
    if (highlighted) {
      [g setColorWithOrgGeogebraCommonAwtGColor:OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_highlightBackground_];
    }
    else {
      [g setColorWithOrgGeogebraCommonAwtGColor:OrgGeogebraCommonAwtGColor_get_WHITE_()];
    }
    [g fillRoundRectWithInt:x + 1 withInt:y + 1 withInt:csize - 2 withInt:csize - 2 withInt:csize / 5 withInt:csize / 5];
    [g setColorWithOrgGeogebraCommonAwtGColor:OrgGeogebraCommonAwtGColor_get_DARK_GRAY_()];
    if (checked) {
      if (csize == 13) {
        if (OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke13_ == nil) {
          OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke13_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newBasicStrokeWithFloat:2.0f withInt:OrgGeogebraCommonAwtGBasicStroke_CAP_ROUND withInt:OrgGeogebraCommonAwtGBasicStroke_JOIN_ROUND];
        }
        [g setStrokeWithOrgGeogebraCommonAwtGBasicStroke:OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke13_];
        [g drawLineWithInt:x + 2 withInt:y + 7 withInt:x + 5 withInt:y + 10];
        [g drawLineWithInt:x + 5 withInt:y + 10 withInt:x + 10 withInt:y + 3];
      }
      else {
        if (OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke26_ == nil) {
          OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke26_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newBasicStrokeWithFloat:4.0f withInt:OrgGeogebraCommonAwtGBasicStroke_CAP_ROUND withInt:OrgGeogebraCommonAwtGBasicStroke_JOIN_ROUND];
        }
        [g setStrokeWithOrgGeogebraCommonAwtGBasicStroke:OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke26_];
        [g drawLineWithInt:x + 5 withInt:y + 15 withInt:x + 10 withInt:y + 20];
        [g drawLineWithInt:x + 10 withInt:y + 20 withInt:x + 20 withInt:y + 6];
      }
    }
  }
}

- (jint)getIconWidth {
  return [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ev_)) getBooleanSize];
}

- (jint)getIconHeight {
  return [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(ev_)) getBooleanSize];
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon class]) {
    OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_highlightBackground_ = [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newColorWithInt:248 withInt:248 withInt:248];
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianView:", "CheckBoxIcon", NULL, 0x1, NULL, NULL },
    { "paintIconWithBoolean:withBoolean:withOrgGeogebraCommonAwtGGraphics2D:withInt:withInt:", "paintIcon", "V", 0x1, NULL, NULL },
    { "getIconWidth", NULL, "I", 0x1, NULL, NULL },
    { "getIconHeight", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ev_", NULL, 0x2, "Lorg.geogebra.common.euclidian.EuclidianView;", NULL, NULL,  },
    { "highlightBackground_", NULL, 0x9, "Lorg.geogebra.common.awt.GColor;", &OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_highlightBackground_, NULL,  },
    { "stroke13_", NULL, 0xa, "Lorg.geogebra.common.awt.GBasicStroke;", &OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke13_, NULL,  },
    { "stroke26_", NULL, 0xa, "Lorg.geogebra.common.awt.GBasicStroke;", &OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_stroke26_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon = { 2, "CheckBoxIcon", "org.geogebra.common.euclidian.draw", "DrawBoolean", 0x9, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon;
}

@end

void OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_initWithOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *self, OrgGeogebraCommonEuclidianEuclidianView *ev) {
  (void) NSObject_init(self);
  self->ev_ = ev;
}

OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *new_OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_initWithOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonEuclidianEuclidianView *ev) {
  OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon *self = [OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon alloc];
  OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon_initWithOrgGeogebraCommonEuclidianEuclidianView_(self, ev);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianDrawDrawBoolean_CheckBoxIcon)
