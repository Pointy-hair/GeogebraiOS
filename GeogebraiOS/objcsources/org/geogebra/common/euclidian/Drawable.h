//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/euclidian/Drawable.java
//

#ifndef _OrgGeogebraCommonEuclidianDrawable_H_
#define _OrgGeogebraCommonEuclidianDrawable_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/euclidian/DrawableND.h"

@class OrgGeogebraCommonAwtGColor;
@class OrgGeogebraCommonAwtGFont;
@class OrgGeogebraCommonEuclidianEuclidianView;
@class OrgGeogebraCommonKernelGeosGeoElement;
@protocol OrgGeogebraCommonAwtGArea;
@protocol OrgGeogebraCommonAwtGBasicStroke;
@protocol OrgGeogebraCommonAwtGGraphics2D;
@protocol OrgGeogebraCommonAwtGRectangle;
@protocol OrgGeogebraCommonAwtGShape;
@protocol OrgGeogebraCommonKernelKernelNDGeoElementND;

@interface OrgGeogebraCommonEuclidianDrawable : OrgGeogebraCommonEuclidianDrawableND {
 @public
  id<OrgGeogebraCommonAwtGBasicStroke> objStroke_;
  id<OrgGeogebraCommonAwtGBasicStroke> selStroke_;
  id<OrgGeogebraCommonAwtGBasicStroke> decoStroke_;
  OrgGeogebraCommonEuclidianEuclidianView *view_;
  OrgGeogebraCommonKernelGeosGeoElement *geo_;
  jint xLabel_;
  jint yLabel_;
  jint mouseX_;
  jint mouseY_;
  NSString *labelDesc_;
  id<OrgGeogebraCommonAwtGRectangle> labelRectangle_;
  id<OrgGeogebraCommonAwtGShape> strokedShape_;
  id<OrgGeogebraCommonAwtGShape> strokedShape2_;
  jboolean isTracing__;
}

#pragma mark Public

- (instancetype)init;

- (void)addLabelOffsetEnsureOnScreen;

- (void)addLabelOffsetEnsureOnScreenWithDouble:(jdouble)Xmultiplier
                                    withDouble:(jdouble)Ymultiplier;

- (void)drawWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2;

- (void)drawLabelWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2;

- (void)drawMultilineLaTeXWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2
                                withOrgGeogebraCommonAwtGFont:(OrgGeogebraCommonAwtGFont *)font
                               withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)fgColor
                               withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)bgColor;

- (void)forceLineTypeWithInt:(jint)type;

- (id<OrgGeogebraCommonAwtGRectangle>)getBounds;

- (OrgGeogebraCommonKernelGeosGeoElement *)getGeoElement;

- (id<OrgGeogebraCommonAwtGArea>)getShape;

- (OrgGeogebraCommonEuclidianEuclidianView *)getView;

- (jdouble)getxLabel;

- (jdouble)getyLabel;

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold;

- (jboolean)hitLabelWithInt:(jint)x
                    withInt:(jint)y;

- (jboolean)intersectsRectangleWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect;

- (jboolean)isEuclidianVisible;

- (jboolean)isFilled;

- (jboolean)isForceNoFill;

- (jboolean)isInsideWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)rect;

- (jboolean)isTracing;

- (void)resetHatch;

- (void)setForceNoFillWithBoolean:(jboolean)forceNoFill;

- (void)setGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)setShapeWithOrgGeogebraCommonAwtGArea:(id<OrgGeogebraCommonAwtGArea>)shape;

- (void)update;

- (void)updateFontSize;

- (void)updateStrokesWithOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)fromGeo;

- (void)updateStrokesWithOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)fromGeo
                                                             withInt:(jint)minThickness;

- (void)updateStrokesJustLineThicknessWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)fromGeo;

#pragma mark Protected

- (jboolean)addLabelOffset;

- (void)drawMultilineTextWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2
                               withOrgGeogebraCommonAwtGFont:(OrgGeogebraCommonAwtGFont *)textFont;

- (void)drawTraceWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2;

- (void)fillWithOrgGeogebraCommonAwtGGraphics2D:(id<OrgGeogebraCommonAwtGGraphics2D>)g2
                 withOrgGeogebraCommonAwtGShape:(id<OrgGeogebraCommonAwtGShape>)fillShape
                                    withBoolean:(jboolean)usePureStroke;

- (OrgGeogebraCommonAwtGColor *)getObjectColor;

#pragma mark Package-Private

- (jboolean)isSerif;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonEuclidianDrawable)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, objStroke_, id<OrgGeogebraCommonAwtGBasicStroke>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, selStroke_, id<OrgGeogebraCommonAwtGBasicStroke>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, decoStroke_, id<OrgGeogebraCommonAwtGBasicStroke>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, view_, OrgGeogebraCommonEuclidianEuclidianView *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, geo_, OrgGeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, labelDesc_, NSString *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, labelRectangle_, id<OrgGeogebraCommonAwtGRectangle>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, strokedShape_, id<OrgGeogebraCommonAwtGShape>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianDrawable, strokedShape2_, id<OrgGeogebraCommonAwtGShape>)

FOUNDATION_EXPORT void OrgGeogebraCommonEuclidianDrawable_init(OrgGeogebraCommonEuclidianDrawable *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonEuclidianDrawable)

#endif // _OrgGeogebraCommonEuclidianDrawable_H_
