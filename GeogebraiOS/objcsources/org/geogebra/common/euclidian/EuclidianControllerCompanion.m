//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/EuclidianControllerCompanion.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/EuclidianControllerCompanion.h"
#include "org/geogebra/common/euclidian/event/AbstractEvent.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/PathNormalizer.h"
#include "org/geogebra/common/kernel/PathParameter.h"
#include "org/geogebra/common/kernel/Region.h"
#include "org/geogebra/common/kernel/algos/AlgoCirclePointRadius.h"
#include "org/geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoJoinPointsSegment.h"
#include "org/geogebra/common/kernel/algos/AlgoMidpoint.h"
#include "org/geogebra/common/kernel/algos/AlgoPolarLine.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoConic.h"
#include "org/geogebra/common/kernel/geos/GeoConicPart.h"
#include "org/geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoFunction.h"
#include "org/geogebra/common/kernel/geos/GeoFunctionable.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/geos/GeoSegment.h"
#include "org/geogebra/common/kernel/geos/GeoVector.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "org/geogebra/common/kernel/kernelND/GeoVectorND.h"

@implementation OrgGeogebraCommonEuclidianEuclidianControllerCompanion

- (instancetype)initWithOrgGeogebraCommonEuclidianEuclidianController:(OrgGeogebraCommonEuclidianEuclidianController *)ec {
  OrgGeogebraCommonEuclidianEuclidianControllerCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
  return self;
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) checkZooming];
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) AngleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(C, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (IOSObjectArray *)createAnglesWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)p {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) AnglesWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoPolygon:p];
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createAngleWithOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v1
                                                    withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v2 {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) AngleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(v1, [OrgGeogebraCommonKernelGeosGeoVector class]) withOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(v2, [OrgGeogebraCommonKernelGeosGeoVector class])];
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
                                                    withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)num
                                                                                      withBoolean:(jboolean)clockWise {
  return (OrgGeogebraCommonKernelGeosGeoAngle *) check_class_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) AngleWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoNumberValue:num withBoolean:!clockWise]), 0), [OrgGeogebraCommonKernelGeosGeoAngle class]);
}

- (OrgGeogebraCommonKernelGeosGeoAngle *)createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
                                                        withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) createLineAngleWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(g, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(h, [OrgGeogebraCommonKernelGeosGeoLine class])];
}

- (IOSObjectArray *)translateWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                        withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)vec {
  [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) checkZooming];
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) TranslateWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(vec, [OrgGeogebraCommonKernelGeosGeoVector class])];
}

- (IOSObjectArray *)mirrorAtPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) MirrorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (IOSObjectArray *)mirrorAtLineWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                             withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) MirrorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(line, [OrgGeogebraCommonKernelGeosGeoLine class])];
}

- (IOSObjectArray *)dilateFromPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                            withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)num
                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getAlgoDispatcher])) DilateWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geo withOrgGeogebraCommonKernelArithmeticNumberValue:num withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)a
                                                                           withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)b
                                                                                                         withBoolean:(jboolean)coords2D {
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> point = nil;
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(a)) isGeoLine]) {
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isGeoLine]) {
      if (![((OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class])) linDepWithOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class])]) {
        point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectLinesWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelKernelNDGeoLineND:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class])];
      }
      else return nil;
    }
    else if ([b isGeoConic]) {
      point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectLineConicSingleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoConic class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_];
    }
    else if ([b isGeoCurveCartesian]) {
      return (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectLineCurveWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoCurveCartesian class])]), 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    }
    else if ([b isGeoFunctionable]) {
      OrgGeogebraCommonKernelGeosGeoFunction *f = [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast(b, @protocol(OrgGeogebraCommonKernelGeosGeoFunctionable))) getGeoFunction];
      if ([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(f)) isPolynomialFunctionWithBoolean:NO]) {
        point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectPolynomialLineSingleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoFunction:f withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_];
      }
      OrgGeogebraCommonKernelGeosGeoPoint *initPoint = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getConstruction]);
      [initPoint setCoordsWithDouble:ec_->xRW_ withDouble:ec_->yRW_ withDouble:1.0];
      point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) IntersectFunctionLineWithNSString:nil withOrgGeogebraCommonKernelGeosGeoFunction:f withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoPoint:initPoint];
    }
    else {
      return nil;
    }
  }
  else if ([a isGeoConic]) {
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isGeoLine]) {
      point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectLineConicSingleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConic class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_];
    }
    else if ([b isGeoConic] && ![a isEqualWithOrgGeogebraCommonKernelGeosGeoElement:b]) {
      point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectConicsSingleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoConic class]) withOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoConic class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_];
    }
    else {
      return nil;
    }
  }
  else if ([a isGeoFunctionable]) {
    OrgGeogebraCommonKernelGeosGeoFunction *aFun = [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast(a, @protocol(OrgGeogebraCommonKernelGeosGeoFunctionable))) getGeoFunction];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isGeoLine]) {
      if ([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(aFun)) isPolynomialFunctionWithBoolean:NO]) {
        point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectPolynomialLineSingleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoFunction:aFun withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_];
      }
      else {
        OrgGeogebraCommonKernelGeosGeoPoint *initPoint = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getConstruction]);
        [initPoint setCoordsWithDouble:ec_->xRW_ withDouble:ec_->yRW_ withDouble:1.0];
        point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) IntersectFunctionLineWithNSString:nil withOrgGeogebraCommonKernelGeosGeoFunction:aFun withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoPoint:initPoint];
      }
    }
    else if ([b isGeoFunctionable]) {
      OrgGeogebraCommonKernelGeosGeoFunction *bFun = [((id<OrgGeogebraCommonKernelGeosGeoFunctionable>) check_protocol_cast(b, @protocol(OrgGeogebraCommonKernelGeosGeoFunctionable))) getGeoFunction];
      if ([((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(aFun)) isPolynomialFunctionWithBoolean:NO] && [((OrgGeogebraCommonKernelGeosGeoFunction *) nil_chk(bFun)) isPolynomialFunctionWithBoolean:NO]) {
        return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectPolynomialsSingleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoFunction:aFun withOrgGeogebraCommonKernelGeosGeoFunction:bFun withDouble:ec_->xRW_ withDouble:ec_->yRW_];
      }
      OrgGeogebraCommonKernelGeosGeoPoint *initPoint = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getConstruction]);
      [initPoint setCoordsWithDouble:ec_->xRW_ withDouble:ec_->yRW_ withDouble:1.0];
      point = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) IntersectFunctionsWithNSString:nil withOrgGeogebraCommonKernelGeosGeoFunction:aFun withOrgGeogebraCommonKernelGeosGeoFunction:bFun withOrgGeogebraCommonKernelGeosGeoPoint:initPoint];
    }
    else {
      return nil;
    }
  }
  else if ([a isGeoCurveCartesian]) {
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(b)) isGeoCurveCartesian]) {
      return (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectCurveCurveSingleWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoCurveCartesian class]) withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoCurveCartesian class]) withDouble:ec_->xRW_ withDouble:ec_->yRW_]), 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    }
    else if ([b isGeoLine]) {
      return (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) IntersectLineCurveWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoCurveCartesian class])]), 0), @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
    }
  }
  if (point != nil) {
    if (!coords2D) {
      [point setCartesian3D];
      [point update];
    }
  }
  return point;
}

- (IOSObjectArray *)orthogonalWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                               withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) checkZooming];
  return [IOSObjectArray newArrayWithObjects:(id[]){ [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) OrthogonalLineWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(point, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(line, [OrgGeogebraCommonKernelGeosGeoLine class])] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithNSString:(NSString *)label
                                                                withBoolean:(jboolean)forPreviewable
                                            withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                                 withDouble:(jdouble)x
                                                                 withDouble:(jdouble)y
                                                                 withDouble:(jdouble)z
                                                                withBoolean:(jboolean)complex
                                                                withBoolean:(jboolean)coords2D {
  return [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) createNewPoint2DWithNSString:label withBoolean:forPreviewable withOrgGeogebraCommonKernelPath:path withDouble:x withDouble:y withBoolean:complex withBoolean:coords2D];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)midpointWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) MidpointWithNSString:nil withOrgGeogebraCommonKernelGeosGeoSegment:(OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(segment, [OrgGeogebraCommonKernelGeosGeoSegment class])];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)midpointWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)conic {
  return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) CenterWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:conic], [OrgGeogebraCommonKernelGeosGeoElement class]);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)midpointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                   withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2 {
  OrgGeogebraCommonKernelAlgosAlgoMidpoint *algo = new_OrgGeogebraCommonKernelAlgosAlgoMidpoint_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getConstruction], (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoPoint class]));
  return [algo getPoint];
}

- (IOSObjectArray *)regularPolygonWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint1
                                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)geoPoint2
                                  withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)value {
  [((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) addingPolygon];
  IOSObjectArray *elms = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) RegularPolygonWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint1 withOrgGeogebraCommonKernelKernelNDGeoPointND:geoPoint2 withOrgGeogebraCommonKernelArithmeticNumberValue:value];
  [ec_->kernel_ notifyPolygonAdded];
  return elms;
}

- (OrgGeogebraCommonKernelAlgosAlgoElement *)segmentAlgoWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                  withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2 {
  return new_OrgGeogebraCommonKernelAlgosAlgoJoinPointsSegment_initWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPolygon_(cons, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoPoint class]), (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoPoint class]), nil);
}

- (IOSObjectArray *)createCircle2WithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p0
                                 withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1 {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) CircleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p0, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoPoint class])] } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)semicircleWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                     withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) SemicircleWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)circleWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)center
                                            withOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)radius {
  OrgGeogebraCommonKernelAlgosAlgoCirclePointRadius *algo = new_OrgGeogebraCommonKernelAlgosAlgoCirclePointRadius_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelArithmeticNumberValue_(cons, nil, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(center, [OrgGeogebraCommonKernelGeosGeoPoint class]), radius);
  return [algo getCircle];
}

- (IOSObjectArray *)angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)g
                                   withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)h {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) AngularBisectorWithNSStringArray:nil withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(g, [OrgGeogebraCommonKernelGeosGeoLine class]) withOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(h, [OrgGeogebraCommonKernelGeosGeoLine class])];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)A
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)B
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)C {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) AngularBisectorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(A, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(B, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(C, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)circleArcSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p3
                                                                                                withInt:(jint)type {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) CircleArcSectorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p3, [OrgGeogebraCommonKernelGeosGeoPoint class]) withInt:type];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)circumcircleArcWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2
                                                          withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p3 {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) CircumcircleArcWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p3, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)circumcircleSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p1
                                                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p2
                                                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)p3 {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) CircumcircleSectorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p1, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p2, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(p3, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (void)movePointWithBoolean:(jboolean)repaint
withOrgGeogebraCommonEuclidianEventAbstractEvent:(OrgGeogebraCommonEuclidianEventAbstractEvent *)event {
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->movedGeoPoint_)) setCoordsWithDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(ec_->xRW_) withDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(ec_->yRW_) withDouble:1.0];
  if ([((OrgGeogebraCommonEuclidianEventAbstractEvent *) nil_chk(event)) isAltDown]) {
    jdouble multiplier = [ec_->movedGeoPoint_ getAnimationStep];
    jint n = J2ObjCFpToInt(JavaLangMath_ceilWithDouble_(1.0 / multiplier));
    if (n < 1) {
      n = 1;
    }
    if ([ec_->movedGeoPoint_ hasPath]) {
      jdouble dist = JavaLangDouble_MAX_VALUE;
      id<OrgGeogebraCommonKernelPath> path = [ec_->movedGeoPoint_ getPath];
      jdouble t = ((OrgGeogebraCommonKernelPathParameter *) nil_chk([ec_->movedGeoPoint_ getPathParameter]))->t_;
      t = OrgGeogebraCommonKernelPathNormalizer_toNormalizedPathParameterWithDouble_withDouble_withDouble_(t, [((id<OrgGeogebraCommonKernelPath>) nil_chk(path)) getMinParameter], [path getMaxParameter]);
      jdouble t_1 = t;
      for (jint i = 0; i < n; i++) {
        if (JavaLangMath_absWithDouble_(t - i * multiplier) < dist) {
          t_1 = i * multiplier;
          dist = JavaLangMath_absWithDouble_(t - i * multiplier);
        }
      }
      ((OrgGeogebraCommonKernelPathParameter *) nil_chk([ec_->movedGeoPoint_ getPathParameter]))->t_ = OrgGeogebraCommonKernelPathNormalizer_toParentPathParameterWithDouble_withDouble_withDouble_(t_1, [path getMinParameter], [path getMaxParameter]);
      [path pathChangedWithOrgGeogebraCommonKernelKernelNDGeoPointND:ec_->movedGeoPoint_];
      [ec_->movedGeoPoint_ updateCoords];
    }
  }
  [((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(ec_->movedGeoPoint_, [OrgGeogebraCommonKernelGeosGeoElement class])) updateCascade];
  ec_->movedGeoPointDragged_ = YES;
  if (repaint) {
    [((OrgGeogebraCommonKernelKernel *) nil_chk(ec_->kernel_)) notifyRepaint];
  }
}

- (void)movePlaneWithBoolean:(jboolean)repaint
withOrgGeogebraCommonEuclidianEventAbstractEvent:(OrgGeogebraCommonEuclidianEventAbstractEvent *)event {
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithBoolean:(jboolean)forPreviewable
                                                               withBoolean:(jboolean)complex {
  [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) checkZoomingWithBoolean:forPreviewable];
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> ret = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) PointWithNSString:nil withDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(ec_->xRW_) withDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(ec_->yRW_) withBoolean:complex];
  return ret;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithBoolean:(jboolean)forPreviewable
                                           withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path
                                                               withBoolean:(jboolean)complex {
  return [self createNewPointWithNSString:nil withBoolean:forPreviewable withOrgGeogebraCommonKernelPath:path withDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_) withDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(ec_->yRW_) withDouble:0 withBoolean:complex withBoolean:YES];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)createNewPointWithBoolean:(jboolean)forPreviewable
                                         withOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)region
                                                               withBoolean:(jboolean)complex {
  return [ec_ createNewPointWithNSString:nil withBoolean:forPreviewable withOrgGeogebraCommonKernelRegion:region withDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_) withDouble:OrgGeogebraCommonKernelKernel_checkDecimalFractionWithDouble_(ec_->yRW_) withDouble:0 withBoolean:complex withBoolean:YES];
}

- (void)processModeLockWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point {
  OrgGeogebraCommonKernelMatrixCoords *coords = [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getInhomCoordsInD2];
  ((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_ = [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX];
  ec_->yRW_ = [coords getY];
}

- (void)processModeLockWithOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)path {
  [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) checkZooming];
  OrgGeogebraCommonKernelGeosGeoPoint *p = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) PointWithNSString:nil withOrgGeogebraCommonKernelPath:path withDouble:ec_->xRW_ withDouble:ec_->yRW_ withBoolean:NO withBoolean:NO withBoolean:YES];
  [((OrgGeogebraCommonKernelGeosGeoPoint *) nil_chk(p)) update];
  ec_->xRW_ = p->inhomX_;
  ec_->yRW_ = p->inhomY_;
}

- (JavaUtilArrayList *)removeParentsOfViewWithJavaUtilArrayList:(JavaUtilArrayList *)list {
  return list;
}

- (jboolean)viewOrientationForClockwiseWithBoolean:(jboolean)clockwise {
  return clockwise;
}

- (IOSObjectArray *)rotateByAngleWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geoRot
                             withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)phi
                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)Q {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getAlgoDispatcher])) RotateWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:geoRot withOrgGeogebraCommonKernelGeosGeoNumberValue:phi withOrgGeogebraCommonKernelKernelNDGeoPointND:Q];
}

- (IOSObjectArray *)tangentWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                           withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) TangentWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (IOSObjectArray *)tangentWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l
                          withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) TangentWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:l withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (IOSObjectArray *)tangentWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c1
                           withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c2 {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) CommonTangentsWithNSStringArray:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:c1 withOrgGeogebraCommonKernelKernelNDGeoConicND:c2];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)polarLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                    withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  OrgGeogebraCommonKernelAlgosAlgoPolarLine *algo = new_OrgGeogebraCommonKernelAlgosAlgoPolarLine_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicND_withOrgGeogebraCommonKernelKernelNDGeoPointND_([((OrgGeogebraCommonKernelKernel *) nil_chk(((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->kernel_)) getConstruction], nil, c, P);
  return (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast([algo getLine], [OrgGeogebraCommonKernelGeosGeoElement class]);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)diameterLineWithOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l
                                                      withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) DiameterLineWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoLineND:l withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)diameterLineWithOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v
                                                        withOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)c {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) DiameterLineWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoVectorND:v withOrgGeogebraCommonKernelKernelNDGeoConicND:c];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:(id<OrgGeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) LineBisectorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoSegment:(OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(segment, [OrgGeogebraCommonKernelGeosGeoSegment class])];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                       withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) LineBisectorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(b, [OrgGeogebraCommonKernelGeosGeoPoint class])];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)conic5WithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points {
  IOSObjectArray *p = [IOSObjectArray newArrayWithLength:5 type:OrgGeogebraCommonKernelGeosGeoPoint_class_()];
  for (jint i = 0; i < 5; i++) {
    (void) IOSObjectArray_Set(p, i, (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(nil_chk(points), i), [OrgGeogebraCommonKernelGeosGeoPoint class]));
  }
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) ConicWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPointArray:p];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)ellipseHyperbolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b
                                                               withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)c
                                                                                                     withInt:(jint)type {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) EllipseHyperbolaWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b withOrgGeogebraCommonKernelKernelNDGeoPointND:c withInt:type];
}

- (OrgGeogebraCommonKernelKernelNDGeoConicND *)parabolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                        withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)l {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) ParabolaWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoLineND:l];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)vectorPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                     withOrgGeogebraCommonKernelKernelNDGeoVectorND:(id<OrgGeogebraCommonKernelKernelNDGeoVectorND>)v {
  OrgGeogebraCommonKernelGeosGeoPoint *endPoint = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) TranslateWithNSString:nil withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoVec3D:(OrgGeogebraCommonKernelGeosGeoVector *) check_class_cast(v, [OrgGeogebraCommonKernelGeosGeoVector class])]), 0), [OrgGeogebraCommonKernelGeosGeoPoint class]);
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([ec_ getAlgoDispatcher])) VectorWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(a, [OrgGeogebraCommonKernelGeosGeoPoint class]) withOrgGeogebraCommonKernelGeosGeoPoint:endPoint];
}

- (OrgGeogebraCommonKernelGeosGeoElement *)locusWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)a
                                                withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)b {
  return [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_)) getAlgoDispatcher])) LocusWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:a withOrgGeogebraCommonKernelKernelNDGeoPointND:b];
}

- (jboolean)setCoordsToMouseLocWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)loc {
  [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(loc)) setCoordsWithDouble:((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk(ec_))->xRW_ withDouble:ec_->yRW_ withDouble:1.0];
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonEuclidianEuclidianController:", "EuclidianControllerCompanion", NULL, 0x1, NULL, NULL },
    { "createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "createAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "createAnglesWithOrgGeogebraCommonKernelGeosGeoPolygon:", "createAngles", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "createAngleWithOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoVectorND:", "createAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "createAngleWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:withBoolean:", "createAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x1, NULL, NULL },
    { "createLineAngleWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "createLineAngle", "Lorg.geogebra.common.kernel.geos.GeoAngle;", 0x4, NULL, NULL },
    { "translateWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoVectorND:", "translate", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "mirrorAtPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "mirrorAtPoint", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "mirrorAtLineWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "mirrorAtLine", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "dilateFromPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelArithmeticNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "dilateFromPoint", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getSingleIntersectionPointWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoElement:withBoolean:", "getSingleIntersectionPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "orthogonalWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "orthogonal", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "createNewPointWithNSString:withBoolean:withOrgGeogebraCommonKernelPath:withDouble:withDouble:withDouble:withBoolean:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "midpointWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "midpoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "midpointWithOrgGeogebraCommonKernelKernelNDGeoConicND:", "midpoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "midpointWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "midpoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "regularPolygonWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumberValue:", "regularPolygon", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "segmentAlgoWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "segmentAlgo", "Lorg.geogebra.common.kernel.algos.AlgoElement;", 0x4, NULL, NULL },
    { "createCircle2WithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "createCircle2", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "semicircleWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "semicircle", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circleWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelArithmeticNumberValue:", "circle", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "angularBisector", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "angularBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "angularBisector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circleArcSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "circleArcSector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circumcircleArcWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "circumcircleArc", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "circumcircleSectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "circumcircleSector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "movePointWithBoolean:withOrgGeogebraCommonEuclidianEventAbstractEvent:", "movePoint", "V", 0x1, NULL, NULL },
    { "movePlaneWithBoolean:withOrgGeogebraCommonEuclidianEventAbstractEvent:", "movePlane", "V", 0x4, NULL, NULL },
    { "createNewPointWithBoolean:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "createNewPointWithBoolean:withOrgGeogebraCommonKernelPath:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "createNewPointWithBoolean:withOrgGeogebraCommonKernelRegion:withBoolean:", "createNewPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "processModeLockWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "processModeLock", "V", 0x4, NULL, NULL },
    { "processModeLockWithOrgGeogebraCommonKernelPath:", "processModeLock", "V", 0x4, NULL, NULL },
    { "removeParentsOfViewWithJavaUtilArrayList:", "removeParentsOfView", "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "viewOrientationForClockwiseWithBoolean:", "viewOrientationForClockwise", "Z", 0x1, NULL, NULL },
    { "rotateByAngleWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "rotateByAngle", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "tangentWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "tangentWithOrgGeogebraCommonKernelKernelNDGeoConicND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "tangent", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "polarLineWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "polarLine", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "diameterLineWithOrgGeogebraCommonKernelKernelNDGeoLineND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "diameterLine", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "diameterLineWithOrgGeogebraCommonKernelKernelNDGeoVectorND:withOrgGeogebraCommonKernelKernelNDGeoConicND:", "diameterLine", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoSegmentND:", "lineBisector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "lineBisectorWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "lineBisector", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "conic5WithOrgGeogebraCommonKernelKernelNDGeoPointNDArray:", "conic5", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "ellipseHyperbolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withInt:", "ellipseHyperbola", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "parabolaWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "parabola", "Lorg.geogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "vectorPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoVectorND:", "vectorPoint", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "locusWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "locus", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "setCoordsToMouseLocWithOrgGeogebraCommonKernelKernelNDGeoPointND:", "setCoordsToMouseLoc", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ec_", NULL, 0x4, "Lorg.geogebra.common.euclidian.EuclidianController;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianEuclidianControllerCompanion = { 2, "EuclidianControllerCompanion", "org.geogebra.common.euclidian", NULL, 0x1, 50, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianEuclidianControllerCompanion;
}

@end

void OrgGeogebraCommonEuclidianEuclidianControllerCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonEuclidianEuclidianControllerCompanion *self, OrgGeogebraCommonEuclidianEuclidianController *ec) {
  (void) NSObject_init(self);
  self->ec_ = ec;
}

OrgGeogebraCommonEuclidianEuclidianControllerCompanion *new_OrgGeogebraCommonEuclidianEuclidianControllerCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(OrgGeogebraCommonEuclidianEuclidianController *ec) {
  OrgGeogebraCommonEuclidianEuclidianControllerCompanion *self = [OrgGeogebraCommonEuclidianEuclidianControllerCompanion alloc];
  OrgGeogebraCommonEuclidianEuclidianControllerCompanion_initWithOrgGeogebraCommonEuclidianEuclidianController_(self, ec);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianEuclidianControllerCompanion)
