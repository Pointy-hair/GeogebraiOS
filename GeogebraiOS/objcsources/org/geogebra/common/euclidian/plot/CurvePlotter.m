//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/plot/CurvePlotter.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/awt/GPoint.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/plot/CurvePlotter.h"
#include "org/geogebra/common/euclidian/plot/PathPlotter.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/MyPoint.h"
#include "org/geogebra/common/kernel/kernelND/CurveEvaluable.h"
#include "org/geogebra/common/util/Cloner.h"

@interface OrgGeogebraCommonEuclidianPlotCurvePlotter ()

+ (OrgGeogebraCommonAwtGPoint *)plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                                   withDouble:(jdouble)t1
                                                                                   withDouble:(jdouble)t2
                                                                                      withInt:(jint)intervalDepth
                                                                                   withDouble:(jdouble)max_param_step
                                                  withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                                                withOrgGeogebraCommonEuclidianPlotPathPlotter:(id<OrgGeogebraCommonEuclidianPlotPathPlotter>)gp
                                                                                  withBoolean:(jboolean)calcLabelPos
                                       withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *)moveToAllowed;

+ (jboolean)isUndefinedWithDouble:(jdouble)x;

+ (jboolean)isUndefinedWithDoubleArray:(IOSDoubleArray *)eval;

+ (OrgGeogebraCommonAwtGPoint *)plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                                          withDouble:(jdouble)t1
                                                                                          withDouble:(jdouble)t2
                                                                                             withInt:(jint)intervalDepth
                                                                                          withDouble:(jdouble)max_param_step
                                                         withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                                                       withOrgGeogebraCommonEuclidianPlotPathPlotter:(id<OrgGeogebraCommonEuclidianPlotPathPlotter>)gp
                                                                                         withBoolean:(jboolean)calcLabelPos
                                              withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *)moveToAllowed
                                                                      withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)labelPoint;

+ (jboolean)isDefinedAroundWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                  withDouble:(jdouble)t
                                                                  withDouble:(jdouble)eps;

+ (jboolean)isDistanceOKWithDoubleArray:(IOSDoubleArray *)diff
withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view;

+ (jboolean)isAngleOKWithDoubleArray:(IOSDoubleArray *)v
                     withDoubleArray:(IOSDoubleArray *)w
                          withDouble:(jdouble)bend;

+ (jboolean)getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                     withDouble:(jdouble)a
                                                                     withDouble:(jdouble)b
                                                                withDoubleArray:(IOSDoubleArray *)borders;

@end

static jint OrgGeogebraCommonEuclidianPlotCurvePlotter_countPoints_ = 0;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianPlotCurvePlotter, countPoints_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonEuclidianPlotCurvePlotter, countPoints_, jint)

static jlong OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_ = 0;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianPlotCurvePlotter, countEvaluations_, jlong)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonEuclidianPlotCurvePlotter, countEvaluations_, jlong)

__attribute__((unused)) static OrgGeogebraCommonAwtGPoint *OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble t1, jdouble t2, jint intervalDepth, jdouble max_param_step, OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonEuclidianPlotPathPlotter> gp, jboolean calcLabelPos, OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *moveToAllowed);

__attribute__((unused)) static jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDouble_(jdouble x);

__attribute__((unused)) static jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(IOSDoubleArray *eval);

__attribute__((unused)) static OrgGeogebraCommonAwtGPoint *OrgGeogebraCommonEuclidianPlotCurvePlotter_plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_withOrgGeogebraCommonAwtGPoint_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble t1, jdouble t2, jint intervalDepth, jdouble max_param_step, OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonEuclidianPlotPathPlotter> gp, jboolean calcLabelPos, OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *moveToAllowed, OrgGeogebraCommonAwtGPoint *labelPoint);

__attribute__((unused)) static jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isDefinedAroundWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble t, jdouble eps);

__attribute__((unused)) static jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isDistanceOKWithDoubleArray_withOrgGeogebraCommonEuclidianEuclidianView_(IOSDoubleArray *diff, OrgGeogebraCommonEuclidianEuclidianView *view);

__attribute__((unused)) static jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isAngleOKWithDoubleArray_withDoubleArray_withDouble_(IOSDoubleArray *v, IOSDoubleArray *w, jdouble bend);

__attribute__((unused)) static jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withDoubleArray_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble a, jdouble b, IOSDoubleArray *borders);

__attribute__((unused)) static void OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgGeogebraCommonEuclidianPlotCurvePlotter

+ (OrgGeogebraCommonAwtGPoint *)plotCurveWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                                withDouble:(jdouble)t1
                                                                                withDouble:(jdouble)t2
                                               withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                                             withOrgGeogebraCommonEuclidianPlotPathPlotter:(id<OrgGeogebraCommonEuclidianPlotPathPlotter>)gp
                                                                               withBoolean:(jboolean)calcLabelPos
                                    withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *)moveToAllowed {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_plotCurveWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(curve, t1, t2, view, gp, calcLabelPos, moveToAllowed);
}

+ (OrgGeogebraCommonAwtGPoint *)plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                                   withDouble:(jdouble)t1
                                                                                   withDouble:(jdouble)t2
                                                                                      withInt:(jint)intervalDepth
                                                                                   withDouble:(jdouble)max_param_step
                                                  withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                                                withOrgGeogebraCommonEuclidianPlotPathPlotter:(id<OrgGeogebraCommonEuclidianPlotPathPlotter>)gp
                                                                                  withBoolean:(jboolean)calcLabelPos
                                       withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *)moveToAllowed {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(curve, t1, t2, intervalDepth, max_param_step, view, gp, calcLabelPos, moveToAllowed);
}

+ (jboolean)isUndefinedWithDouble:(jdouble)x {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDouble_(x);
}

+ (jboolean)isUndefinedWithDoubleArray:(IOSDoubleArray *)eval {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval);
}

+ (OrgGeogebraCommonAwtGPoint *)plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                                          withDouble:(jdouble)t1
                                                                                          withDouble:(jdouble)t2
                                                                                             withInt:(jint)intervalDepth
                                                                                          withDouble:(jdouble)max_param_step
                                                         withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view
                                                       withOrgGeogebraCommonEuclidianPlotPathPlotter:(id<OrgGeogebraCommonEuclidianPlotPathPlotter>)gp
                                                                                         withBoolean:(jboolean)calcLabelPos
                                              withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *)moveToAllowed
                                                                      withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)labelPoint {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_withOrgGeogebraCommonAwtGPoint_(curve, t1, t2, intervalDepth, max_param_step, view, gp, calcLabelPos, moveToAllowed, labelPoint);
}

+ (jboolean)isDefinedAroundWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                  withDouble:(jdouble)t
                                                                  withDouble:(jdouble)eps {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_isDefinedAroundWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_(curve, t, eps);
}

+ (jboolean)isDistanceOKWithDoubleArray:(IOSDoubleArray *)diff
withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_isDistanceOKWithDoubleArray_withOrgGeogebraCommonEuclidianEuclidianView_(diff, view);
}

+ (jboolean)isAngleOKWithDoubleArray:(IOSDoubleArray *)v
                     withDoubleArray:(IOSDoubleArray *)w
                          withDouble:(jdouble)bend {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_isAngleOKWithDoubleArray_withDoubleArray_withDouble_(v, w, bend);
}

+ (jboolean)isContinuousWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)c
                                                               withDouble:(jdouble)from
                                                               withDouble:(jdouble)to
                                                                  withInt:(jint)MAX_ITERATIONS {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_isContinuousWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_(c, from, to, MAX_ITERATIONS);
}

+ (jboolean)getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>)curve
                                                                     withDouble:(jdouble)a
                                                                     withDouble:(jdouble)b
                                                                withDoubleArray:(IOSDoubleArray *)borders {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withDoubleArray_(curve, a, b, borders);
}

+ (IOSDoubleArray *)drawWithOrgGeogebraCommonEuclidianPlotPathPlotter:(id<OrgGeogebraCommonEuclidianPlotPathPlotter>)gp
                                                withJavaUtilArrayList:(JavaUtilArrayList *)pointList {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_drawWithOrgGeogebraCommonEuclidianPlotPathPlotter_withJavaUtilArrayList_(gp, pointList);
}

- (instancetype)init {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "plotCurveWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:withDouble:withDouble:withOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonEuclidianPlotPathPlotter:withBoolean:withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:", "plotCurve", "Lorg.geogebra.common.awt.GPoint;", 0x19, NULL, NULL },
    { "plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:withDouble:withDouble:withInt:withDouble:withOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonEuclidianPlotPathPlotter:withBoolean:withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:", "plotInterval", "Lorg.geogebra.common.awt.GPoint;", 0xa, NULL, NULL },
    { "isUndefinedWithDouble:", "isUndefined", "Z", 0xa, NULL, NULL },
    { "isUndefinedWithDoubleArray:", "isUndefined", "Z", 0xa, NULL, NULL },
    { "plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:withDouble:withDouble:withInt:withDouble:withOrgGeogebraCommonEuclidianEuclidianView:withOrgGeogebraCommonEuclidianPlotPathPlotter:withBoolean:withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:withOrgGeogebraCommonAwtGPoint:", "plotProblemInterval", "Lorg.geogebra.common.awt.GPoint;", 0xa, NULL, NULL },
    { "isDefinedAroundWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:withDouble:withDouble:", "isDefinedAround", "Z", 0xa, NULL, NULL },
    { "isDistanceOKWithDoubleArray:withOrgGeogebraCommonEuclidianEuclidianView:", "isDistanceOK", "Z", 0xa, NULL, NULL },
    { "isAngleOKWithDoubleArray:withDoubleArray:withDouble:", "isAngleOK", "Z", 0xa, NULL, NULL },
    { "isContinuousWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:withDouble:withDouble:withInt:", "isContinuous", "Z", 0x9, NULL, NULL },
    { "getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable:withDouble:withDouble:withDoubleArray:", "getDefinedInterval", "Z", 0xa, NULL, NULL },
    { "drawWithOrgGeogebraCommonEuclidianPlotPathPlotter:withJavaUtilArrayList:", "draw", "[D", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "countPoints_", NULL, 0xa, "I", &OrgGeogebraCommonEuclidianPlotCurvePlotter_countPoints_, NULL,  },
    { "countEvaluations_", NULL, 0xa, "J", &OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianPlotCurvePlotter = { 2, "CurvePlotter", "org.geogebra.common.euclidian.plot", NULL, 0x1, 12, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianPlotCurvePlotter;
}

@end

OrgGeogebraCommonAwtGPoint *OrgGeogebraCommonEuclidianPlotCurvePlotter_plotCurveWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble t1, jdouble t2, OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonEuclidianPlotPathPlotter> gp, jboolean calcLabelPos, OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *moveToAllowed) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countPoints_ = 0;
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_ = 0;
  jdouble max_param_step = JavaLangMath_absWithDouble_(t2 - t1) / [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view)) getMinSamplePoints];
  OrgGeogebraCommonAwtGPoint *labelPoint = OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(curve, t1, t2, 0, max_param_step, view, gp, calcLabelPos, moveToAllowed);
  if (moveToAllowed == OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_get_CORNER()) {
    [((id<OrgGeogebraCommonEuclidianPlotPathPlotter>) nil_chk(gp)) corner];
  }
  return labelPoint;
}

OrgGeogebraCommonAwtGPoint *OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble t1, jdouble t2, jint intervalDepth, jdouble max_param_step, OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonEuclidianPlotPathPlotter> gp, jboolean calcLabelPos, OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *moveToAllowed) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  jboolean needLabelPos = calcLabelPos;
  OrgGeogebraCommonAwtGPoint *labelPoint = nil;
  jdouble t;
  IOSDoubleArray *move = [((id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>) nil_chk(curve)) newDoubleArray];
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(move))->size_; i++) {
    *IOSDoubleArray_GetRef(move, i) = 0;
  }
  jboolean onScreen = NO;
  jboolean nextLineToNeedsMoveToFirst = NO;
  IOSDoubleArray *eval = [curve newDoubleArray];
  IOSDoubleArray *eval0, *eval1;
  [curve evaluateCurveWithDouble:t1 withDoubleArray:eval];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  if (OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval)) {
    return OrgGeogebraCommonEuclidianPlotCurvePlotter_plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_withOrgGeogebraCommonAwtGPoint_(curve, t1, t2, intervalDepth, max_param_step, view, gp, calcLabelPos, moveToAllowed, labelPoint);
  }
  eval0 = OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(eval);
  [curve evaluateCurveWithDouble:t2 withDoubleArray:eval];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  if (OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval)) {
    return OrgGeogebraCommonEuclidianPlotCurvePlotter_plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_withOrgGeogebraCommonAwtGPoint_(curve, t1, t2, intervalDepth, max_param_step, view, gp, calcLabelPos, moveToAllowed, labelPoint);
  }
  onScreen = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view)) isOnViewWithDoubleArray:eval];
  eval1 = OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(eval);
  [((id<OrgGeogebraCommonEuclidianPlotPathPlotter>) nil_chk(gp)) firstPointWithDoubleArray:eval0 withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum:moveToAllowed];
  jint LENGTH = [view getMaxDefinedBisections] + 1;
  IOSIntArray *dyadicStack = [IOSIntArray newArrayWithLength:LENGTH];
  IOSIntArray *depthStack = [IOSIntArray newArrayWithLength:LENGTH];
  IOSObjectArray *posStack = [IOSObjectArray newArrayWithLength:LENGTH type:IOSClass_doubleArray(1)];
  IOSBooleanArray *onScreenStack = [IOSBooleanArray newArrayWithLength:LENGTH];
  IOSDoubleArray *divisors = [IOSDoubleArray newArrayWithLength:LENGTH];
  *IOSDoubleArray_GetRef(divisors, 0) = t2 - t1;
  for (jint i = 1; i < LENGTH; i++) *IOSDoubleArray_GetRef(divisors, i) = IOSDoubleArray_Get(divisors, i - 1) / 2;
  jint i = 1;
  *IOSIntArray_GetRef(dyadicStack, 0) = 1;
  *IOSIntArray_GetRef(depthStack, 0) = 0;
  *IOSBooleanArray_GetRef(onScreenStack, 0) = onScreen;
  (void) IOSObjectArray_Set(posStack, 0, OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(eval1));
  IOSDoubleArray *diff = [view getOnScreenDiffWithDoubleArray:eval0 withDoubleArray:eval1];
  jint countDiffZeros = 0;
  [curve evaluateCurveWithDouble:t1 + IOSDoubleArray_Get(divisors, LENGTH - 1) withDoubleArray:eval];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  IOSDoubleArray *prevDiff = [view getOnScreenDiffWithDoubleArray:eval0 withDoubleArray:eval];
  jint top = 1;
  jint depth = 0;
  t = t1;
  jdouble left = t1;
  jboolean distanceOK, angleOK, segOffScreen;
  do {
    segOffScreen = [view isSegmentOffViewWithDoubleArray:eval0 withDoubleArray:eval1];
    distanceOK = (segOffScreen || OrgGeogebraCommonEuclidianPlotCurvePlotter_isDistanceOKWithDoubleArray_withOrgGeogebraCommonEuclidianEuclidianView_(diff, view));
    angleOK = OrgGeogebraCommonEuclidianPlotCurvePlotter_isAngleOKWithDoubleArray_withDoubleArray_withDouble_(prevDiff, diff, segOffScreen ? [view getMaxBendOfScreen] : [view getMaxBend]);
    while (depth < [view getMaxDefinedBisections] && (!distanceOK || !angleOK || IOSDoubleArray_Get(divisors, depth) > max_param_step) && countDiffZeros < [view getMaxZeroCount]) {
      *IOSIntArray_GetRef(dyadicStack, top) = i;
      *IOSIntArray_GetRef(depthStack, top) = depth;
      *IOSBooleanArray_GetRef(onScreenStack, top) = onScreen;
      (void) IOSObjectArray_Set(posStack, top, OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(eval1));
      i = 2 * i - 1;
      top++;
      depth++;
      t = t1 + i * IOSDoubleArray_Get(divisors, depth);
      [curve evaluateCurveWithDouble:t withDoubleArray:eval];
      onScreen = [view isOnViewWithDoubleArray:eval];
      OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
      if (OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval)) {
        jboolean singularity = OrgGeogebraCommonEuclidianPlotCurvePlotter_isDefinedAroundWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_(curve, t, IOSDoubleArray_Get(divisors, LENGTH - 1));
        if (!singularity) {
          return OrgGeogebraCommonEuclidianPlotCurvePlotter_plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_withOrgGeogebraCommonAwtGPoint_(curve, left, t2, intervalDepth, max_param_step, view, gp, calcLabelPos, moveToAllowed, labelPoint);
        }
      }
      eval1 = OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(eval);
      diff = [view getOnScreenDiffWithDoubleArray:eval0 withDoubleArray:eval1];
      if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(diff), 0)) && OrgGeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(diff, 1))) {
        countDiffZeros++;
      }
      else {
        countDiffZeros = 0;
      }
      segOffScreen = [view isSegmentOffViewWithDoubleArray:eval0 withDoubleArray:eval1];
      distanceOK = (segOffScreen || OrgGeogebraCommonEuclidianPlotCurvePlotter_isDistanceOKWithDoubleArray_withOrgGeogebraCommonEuclidianEuclidianView_(diff, view));
      angleOK = OrgGeogebraCommonEuclidianPlotCurvePlotter_isAngleOKWithDoubleArray_withDoubleArray_withDouble_(prevDiff, diff, segOffScreen ? [view getMaxBendOfScreen] : [view getMaxBend]);
    }
    jboolean lineTo = YES;
    if (moveToAllowed == OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_get_MOVE_TO()) {
      if (segOffScreen) {
        lineTo = NO;
      }
      else if (!angleOK || !distanceOK) {
        lineTo = OrgGeogebraCommonEuclidianPlotCurvePlotter_isContinuousWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_(curve, left, t, [view getMaxProblemBisections]);
      }
    }
    else if (moveToAllowed == OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_get_CORNER()) {
      [gp cornerWithDoubleArray:eval1];
    }
    if (lineTo) {
      if (nextLineToNeedsMoveToFirst) {
        [gp moveToWithDoubleArray:move];
        nextLineToNeedsMoveToFirst = NO;
      }
      [gp lineToWithDoubleArray:eval1];
    }
    else {
      move = OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(eval1);
      nextLineToNeedsMoveToFirst = YES;
    }
    eval0 = OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(eval1);
    left = t;
    if (needLabelPos && onScreen) {
      jdouble xLabel = [view toScreenCoordXdWithDouble:IOSDoubleArray_Get(nil_chk(eval1), 0)] + 10;
      if (xLabel < 20) xLabel = 5;
      if (xLabel > [view getWidth] - 30) xLabel = [view getWidth] - 15;
      jdouble yLabel = [view toScreenCoordYdWithDouble:IOSDoubleArray_Get(eval1, 1)] + 15;
      if (yLabel < 40) yLabel = 15;
      else if (yLabel > [view getHeight] - 30) yLabel = [view getHeight] - 5;
      labelPoint = new_OrgGeogebraCommonAwtGPoint_initWithInt_withInt_(J2ObjCFpToInt(xLabel), J2ObjCFpToInt(yLabel));
      needLabelPos = NO;
    }
    --top;
    eval1 = IOSObjectArray_Get(posStack, top);
    onScreen = IOSBooleanArray_Get(onScreenStack, top);
    depth = IOSIntArray_Get(depthStack, top) + 1;
    i = IOSIntArray_Get(dyadicStack, top) * 2;
    prevDiff = OrgGeogebraCommonUtilCloner_cloneWithDoubleArray_(diff);
    diff = [view getOnScreenDiffWithDoubleArray:eval0 withDoubleArray:eval1];
    t = t1 + i * IOSDoubleArray_Get(divisors, depth);
  }
  while (top != 0);
  return labelPoint;
}

jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDouble_(jdouble x) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  return JavaLangDouble_isNaNWithDouble_(x) || JavaLangDouble_isInfiniteWithDouble_(x);
}

jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(IOSDoubleArray *eval) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(eval))->size_; i++) {
    if (OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDouble_(IOSDoubleArray_Get(eval, i))) return YES;
  }
  return NO;
}

OrgGeogebraCommonAwtGPoint *OrgGeogebraCommonEuclidianPlotCurvePlotter_plotProblemIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_withOrgGeogebraCommonAwtGPoint_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble t1, jdouble t2, jint intervalDepth, jdouble max_param_step, OrgGeogebraCommonEuclidianEuclidianView *view, id<OrgGeogebraCommonEuclidianPlotPathPlotter> gp, jboolean calcLabelPos, OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *moveToAllowed, OrgGeogebraCommonAwtGPoint *labelPoint) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  jboolean calcLabel = calcLabelPos;
  if (intervalDepth > [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view)) getMaxProblemBisections] || t1 == t2) {
    return labelPoint;
  }
  OrgGeogebraCommonAwtGPoint *labelPoint1, *labelPoint2;
  jdouble splitParam = (t1 + t2) / 2.0;
  jboolean intervalsTooLarge = JavaLangMath_absWithDouble_(t1 - splitParam) > max_param_step;
  if (intervalsTooLarge) {
    calcLabel = (calcLabel && labelPoint == nil);
    labelPoint1 = OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(curve, t1, splitParam, intervalDepth + 1, max_param_step, view, gp, calcLabel, moveToAllowed);
    calcLabel = (calcLabel && labelPoint1 == nil);
    labelPoint2 = OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(curve, splitParam, t2, intervalDepth + 1, max_param_step, view, gp, calcLabel, moveToAllowed);
  }
  else {
    IOSDoubleArray *borders = [IOSDoubleArray newArrayWithLength:2];
    OrgGeogebraCommonEuclidianPlotCurvePlotter_getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withDoubleArray_(curve, t1, splitParam, borders);
    calcLabel = (calcLabel && labelPoint == nil);
    labelPoint1 = OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(curve, IOSDoubleArray_Get(borders, 0), IOSDoubleArray_Get(borders, 1), intervalDepth + 1, max_param_step, view, gp, calcLabel, moveToAllowed);
    OrgGeogebraCommonEuclidianPlotCurvePlotter_getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withDoubleArray_(curve, splitParam, t2, borders);
    calcLabel = (calcLabel && labelPoint1 == nil);
    labelPoint2 = OrgGeogebraCommonEuclidianPlotCurvePlotter_plotIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_withDouble_withOrgGeogebraCommonEuclidianEuclidianView_withOrgGeogebraCommonEuclidianPlotPathPlotter_withBoolean_withOrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_(curve, IOSDoubleArray_Get(borders, 0), IOSDoubleArray_Get(borders, 1), intervalDepth + 1, max_param_step, view, gp, calcLabel, moveToAllowed);
  }
  if (labelPoint != nil) return labelPoint;
  else if (labelPoint1 != nil) return labelPoint1;
  else return labelPoint2;
}

jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isDefinedAroundWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble t, jdouble eps) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  IOSDoubleArray *eval = [((id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>) nil_chk(curve)) newDoubleArray];
  [curve evaluateCurveWithDouble:t + eps withDoubleArray:eval];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  if (!OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval)) {
    [curve evaluateCurveWithDouble:t - eps withDoubleArray:eval];
    OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
    if (!OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval)) {
      return YES;
    }
  }
  return NO;
}

jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isDistanceOKWithDoubleArray_withOrgGeogebraCommonEuclidianEuclidianView_(IOSDoubleArray *diff, OrgGeogebraCommonEuclidianEuclidianView *view) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  {
    IOSDoubleArray *a__ = diff;
    jdouble const *b__ = ((IOSDoubleArray *) nil_chk(a__))->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble d = *b__++;
      if (JavaLangMath_absWithDouble_(d) > [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view)) getMaxPixelDistance]) {
        return NO;
      }
    }
  }
  return YES;
}

jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isAngleOKWithDoubleArray_withDoubleArray_withDouble_(IOSDoubleArray *v, IOSDoubleArray *w, jdouble bend) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  jdouble innerProduct = 0;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(v))->size_; i++) {
    innerProduct += IOSDoubleArray_Get(v, i) * IOSDoubleArray_Get(nil_chk(w), i);
  }
  if (OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDouble_(innerProduct)) {
    return YES;
  }
  else if (innerProduct <= 0) {
    return NO;
  }
  else {
    jdouble det;
    if (v->size_ < 3) {
      det = JavaLangMath_absWithDouble_(IOSDoubleArray_Get(v, 0) * IOSDoubleArray_Get(nil_chk(w), 1) - IOSDoubleArray_Get(v, 1) * IOSDoubleArray_Get(w, 0));
    }
    else {
      jdouble d1 = IOSDoubleArray_Get(v, 0) * IOSDoubleArray_Get(nil_chk(w), 1) - IOSDoubleArray_Get(v, 1) * IOSDoubleArray_Get(w, 0);
      jdouble d2 = IOSDoubleArray_Get(v, 1) * IOSDoubleArray_Get(w, 2) - IOSDoubleArray_Get(v, 2) * IOSDoubleArray_Get(w, 1);
      jdouble d3 = IOSDoubleArray_Get(v, 2) * IOSDoubleArray_Get(w, 0) - IOSDoubleArray_Get(v, 0) * IOSDoubleArray_Get(w, 2);
      det = JavaLangMath_sqrtWithDouble_(d1 * d1 + d2 * d2 + d3 * d3);
    }
    return det < bend * innerProduct;
  }
}

jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_isContinuousWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withInt_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> c, jdouble from, jdouble to, jint MAX_ITERATIONS) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  jdouble t1 = from;
  jdouble t2 = to;
  if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(t1, t2, OrgGeogebraCommonKernelKernel_MAX_DOUBLE_PRECISION)) return YES;
  IOSDoubleArray *left = [((id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>) nil_chk(c)) newDoubleArray];
  [c evaluateCurveWithDouble:t1 withDoubleArray:left];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  if (OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(left)) {
    return NO;
  }
  IOSDoubleArray *right = [c newDoubleArray];
  [c evaluateCurveWithDouble:t2 withDoubleArray:right];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  if (OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(right)) {
    return NO;
  }
  jdouble initialDistance = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_absWithDouble_(IOSDoubleArray_Get(nil_chk(left), 0) - IOSDoubleArray_Get(nil_chk(right), 0)), JavaLangMath_absWithDouble_(IOSDoubleArray_Get(left, 1) - IOSDoubleArray_Get(right, 1)));
  jdouble eps = initialDistance * 0.9;
  jdouble dist = JavaLangDouble_POSITIVE_INFINITY;
  jint iterations = 0;
  IOSDoubleArray *middle = [c newDoubleArray];
  while (iterations++ < MAX_ITERATIONS && dist > eps) {
    jdouble m = (t1 + t2) / 2;
    [c evaluateCurveWithDouble:m withDoubleArray:middle];
    OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
    jdouble distLeft = [c distanceMaxWithDoubleArray:left withDoubleArray:middle];
    jdouble distRight = [c distanceMaxWithDoubleArray:right withDoubleArray:middle];
    if (distLeft > distRight) {
      dist = distLeft;
      t2 = m;
    }
    else {
      dist = distRight;
      t1 = m;
    }
    if (OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(t1, t2, OrgGeogebraCommonKernelKernel_MAX_DOUBLE_PRECISION)) return YES;
  }
  jboolean ret = dist <= eps;
  return ret;
}

jboolean OrgGeogebraCommonEuclidianPlotCurvePlotter_getDefinedIntervalWithOrgGeogebraCommonKernelKernelNDCurveEvaluable_withDouble_withDouble_withDoubleArray_(id<OrgGeogebraCommonKernelKernelNDCurveEvaluable> curve, jdouble a, jdouble b, IOSDoubleArray *borders) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  IOSDoubleArray *eval = [((id<OrgGeogebraCommonKernelKernelNDCurveEvaluable>) nil_chk(curve)) newDoubleArray];
  [curve evaluateCurveWithDouble:a withDoubleArray:eval];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  jboolean aDef = !OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval);
  [curve evaluateCurveWithDouble:b withDoubleArray:eval];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_countEvaluations_++;
  jboolean bDef = !OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(eval);
  if (aDef && bDef) {
    *IOSDoubleArray_GetRef(nil_chk(borders), 0) = a;
    *IOSDoubleArray_GetRef(borders, 1) = b;
  }
  else if ((aDef && !bDef) || (!aDef && bDef)) {
    IOSDoubleArray *interval = [curve getDefinedIntervalWithDouble:a withDouble:b];
    *IOSDoubleArray_GetRef(nil_chk(borders), 0) = OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDouble_(IOSDoubleArray_Get(nil_chk(interval), 0)) ? a : IOSDoubleArray_Get(interval, 0);
    *IOSDoubleArray_GetRef(borders, 1) = OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDouble_(IOSDoubleArray_Get(interval, 1)) ? b : IOSDoubleArray_Get(interval, 1);
  }
  else {
    *IOSDoubleArray_GetRef(nil_chk(borders), 0) = a;
    *IOSDoubleArray_GetRef(borders, 1) = b;
  }
  return !OrgGeogebraCommonEuclidianPlotCurvePlotter_isUndefinedWithDoubleArray_(borders);
}

IOSDoubleArray *OrgGeogebraCommonEuclidianPlotCurvePlotter_drawWithOrgGeogebraCommonEuclidianPlotPathPlotter_withJavaUtilArrayList_(id<OrgGeogebraCommonEuclidianPlotPathPlotter> gp, JavaUtilArrayList *pointList) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_initialize();
  IOSDoubleArray *coords = [((id<OrgGeogebraCommonEuclidianPlotPathPlotter>) nil_chk(gp)) newDoubleArray];
  jboolean linetofirst = YES;
  jint size = [((JavaUtilArrayList *) nil_chk(pointList)) size];
  for (jint i = 0; i < size; i++) {
    OrgGeogebraCommonKernelMyPoint *p = [pointList getWithInt:i];
    if ([((OrgGeogebraCommonKernelMyPoint *) nil_chk(p)) isFinite]) {
      if ([gp copyCoordsWithOrgGeogebraCommonKernelMyPoint:p withDoubleArray:coords]) {
        if (p->lineTo_ && !linetofirst) {
          [gp lineToWithDoubleArray:coords];
        }
        else {
          [gp moveToWithDoubleArray:coords];
        }
        linetofirst = NO;
      }
      else {
        linetofirst = YES;
      }
    }
    else {
      linetofirst = YES;
    }
  }
  return coords;
}

void OrgGeogebraCommonEuclidianPlotCurvePlotter_init(OrgGeogebraCommonEuclidianPlotCurvePlotter *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonEuclidianPlotCurvePlotter *new_OrgGeogebraCommonEuclidianPlotCurvePlotter_init() {
  OrgGeogebraCommonEuclidianPlotCurvePlotter *self = [OrgGeogebraCommonEuclidianPlotCurvePlotter alloc];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianPlotCurvePlotter)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum)

OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_values_[7];

@implementation OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_values() {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_values_ count:7 type:OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_values();
}

+ (OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initialize();
  for (int i = 0; i < 7; i++) {
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *e = OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum class]) {
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_LINE_TO = new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(@"LINE_TO", 0);
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_MOVE_TO = new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(@"MOVE_TO", 1);
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_XMIN = new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(@"RESET_XMIN", 2);
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_YMIN = new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(@"RESET_YMIN", 3);
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_XMAX = new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(@"RESET_XMAX", 4);
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_YMAX = new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(@"RESET_YMAX", 5);
    OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_CORNER = new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(@"CORNER", 6);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "LINE_TO", "LINE_TO", 0x4019, "Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;", &OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_LINE_TO, NULL,  },
    { "MOVE_TO", "MOVE_TO", 0x4019, "Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;", &OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_MOVE_TO, NULL,  },
    { "RESET_XMIN", "RESET_XMIN", 0x4019, "Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;", &OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_XMIN, NULL,  },
    { "RESET_YMIN", "RESET_YMIN", 0x4019, "Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;", &OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_YMIN, NULL,  },
    { "RESET_XMAX", "RESET_XMAX", 0x4019, "Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;", &OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_XMAX, NULL,  },
    { "RESET_YMAX", "RESET_YMAX", 0x4019, "Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;", &OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_RESET_YMAX, NULL,  },
    { "CORNER", "CORNER", 0x4019, "Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;", &OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_CORNER, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.euclidian.plot.CurvePlotter$Gap;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum = { 2, "Gap", "org.geogebra.common.euclidian.plot", "CurvePlotter", 0x4019, 0, NULL, 7, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/euclidian/plot/CurvePlotter$Gap;>;" };
  return &_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum;
}

@end

void OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *new_OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum *self = [OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum alloc];
  OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianPlotCurvePlotter_GapEnum)
