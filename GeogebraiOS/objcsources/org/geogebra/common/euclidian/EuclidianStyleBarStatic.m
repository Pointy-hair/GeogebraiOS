//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/EuclidianStyleBarStatic.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/euclidian/EuclidianConstants.h"
#include "org/geogebra/common/euclidian/EuclidianStyleBar.h"
#include "org/geogebra/common/euclidian/EuclidianStyleBarStatic.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/EuclidianViewInterfaceCommon.h"
#include "org/geogebra/common/euclidian3D/EuclidianView3DInterface.h"
#include "org/geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/ConstructionDefaults.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoAttachCopyToView.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoTableText.h"
#include "org/geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "org/geogebra/common/kernel/geos/AbsoluteScreenLocateable.h"
#include "org/geogebra/common/kernel/geos/AngleProperties.h"
#include "org/geogebra/common/kernel/geos/GeoAngle.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoImage.h"
#include "org/geogebra/common/kernel/geos/GeoList.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/kernel/geos/PointProperties.h"
#include "org/geogebra/common/kernel/geos/TextProperties.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/MyError.h"
#include "org/geogebra/common/main/SelectionManager.h"
#include "org/geogebra/common/main/settings/EuclidianSettings.h"
#include "org/geogebra/common/main/settings/Settings.h"
#include "org/geogebra/common/util/debug/Log.h"

@interface OrgGeogebraCommonEuclidianEuclidianStyleBarStatic ()

+ (NSString *)getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

@end

__attribute__((unused)) static NSString *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *geo);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonEuclidianEuclidianStyleBarStatic)

IOSObjectArray *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray_;
IOSObjectArray *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_;
IOSObjectArray *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_lineStyleArray_;
IOSObjectArray *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_pointStyleArray_;

@implementation OrgGeogebraCommonEuclidianEuclidianStyleBarStatic

+ (OrgGeogebraCommonKernelGeosGeoElement *)applyFixPositionWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                                                     withBoolean:(jboolean)flag
                      withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon:(id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>)ev {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixPositionWithJavaUtilArrayList_withBoolean_withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(geos, flag, ev);
}

+ (OrgGeogebraCommonKernelGeosGeoElement *)applyFixObjectWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                                                   withBoolean:(jboolean)flag
                    withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon:(id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>)ev {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixObjectWithJavaUtilArrayList_withBoolean_withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(geos, flag, ev);
}

+ (NSString *)getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement_(geo);
}

+ (OrgGeogebraCommonKernelGeosGeoElement *)redefineGeoWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                                                                   withNSString:(NSString *)cmdtext {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithOrgGeogebraCommonKernelGeosGeoElement_withNSString_(geo, cmdtext);
}

+ (void)applyTableTextFormatWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                          withInt:(jint)justifyIndex
                                      withBoolean:(jboolean)HisSelected
                                      withBoolean:(jboolean)VisSelected
                                          withInt:(jint)index
                     withOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyTableTextFormatWithJavaUtilArrayList_withInt_withBoolean_withBoolean_withInt_withOrgGeogebraCommonMainApp_(geos, justifyIndex, HisSelected, VisSelected, index, app);
}

+ (OrgGeogebraCommonKernelGeosGeoElement *)checkGeosForCaptionStyleWithNSObjectArray:(IOSObjectArray *)geos
                                                                             withInt:(jint)mode
                                                        withOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForCaptionStyleWithNSObjectArray_withInt_withOrgGeogebraCommonMainApp_(geos, mode, app);
}

+ (jboolean)applyCaptionStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                           withInt:(jint)mode
                                           withInt:(jint)index {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyCaptionStyleWithJavaUtilArrayList_withInt_withInt_(geos, mode, index);
}

+ (jboolean)applyLineStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                        withInt:(jint)lineStyleIndex
                                        withInt:(jint)lineSize {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyLineStyleWithJavaUtilArrayList_withInt_withInt_(geos, lineStyleIndex, lineSize);
}

+ (jboolean)applyPointStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                         withInt:(jint)pointStyleSelIndex
                                         withInt:(jint)pointSize {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyPointStyleWithJavaUtilArrayList_withInt_withInt_(geos, pointStyleSelIndex, pointSize);
}

+ (jboolean)applyColorWithJavaUtilArrayList:(JavaUtilArrayList *)geos
             withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color
                                  withFloat:(jfloat)alpha
               withOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyColorWithJavaUtilArrayList_withOrgGeogebraCommonAwtGColor_withFloat_withOrgGeogebraCommonMainApp_(geos, color, alpha, app);
}

+ (jboolean)applyBgColorWithJavaUtilArrayList:(JavaUtilArrayList *)geos
               withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color
                                    withFloat:(jfloat)alpha {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyBgColorWithJavaUtilArrayList_withOrgGeogebraCommonAwtGColor_withFloat_(geos, color, alpha);
}

+ (jboolean)applyTextColorWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                 withOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextColorWithJavaUtilArrayList_withOrgGeogebraCommonAwtGColor_(geos, color);
}

+ (jboolean)applyFontStyleWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                        withInt:(jint)mask
                                        withInt:(jint)add {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyFontStyleWithJavaUtilArrayList_withInt_withInt_(geos, mask, add);
}

+ (jboolean)applyTextSizeWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                       withInt:(jint)textSizeIndex {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextSizeWithJavaUtilArrayList_withInt_(geos, textSizeIndex);
}

+ (jboolean)processSourceCommonWithNSString:(NSString *)actionCommand
                      withJavaUtilArrayList:(JavaUtilArrayList *)targetGeos
withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon:(id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>)ev {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_processSourceCommonWithNSString_withJavaUtilArrayList_withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(actionCommand, targetGeos, ev);
}

+ (OrgGeogebraCommonKernelAlgosAlgoTableText *)updateTableTextWithNSObjectArray:(IOSObjectArray *)geos
                                                                        withInt:(jint)mode {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_updateTableTextWithNSObjectArray_withInt_(geos, mode);
}

+ (JavaUtilHashMap *)createDefaultMap {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_createDefaultMap();
}

+ (jboolean)checkGeosForFixPositionWithNSObjectArray:(IOSObjectArray *)geos {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForFixPositionWithNSObjectArray_(geos);
}

+ (jboolean)checkGeosForFixObjectWithNSObjectArray:(IOSObjectArray *)geos {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForFixObjectWithNSObjectArray_(geos);
}

+ (OrgGeogebraCommonKernelGeosGeoElement *)checkGeosForAngleIntervalWithNSObjectArray:(IOSObjectArray *)geos {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForAngleIntervalWithNSObjectArray_(geos);
}

+ (jboolean)checkSelectedFixPositionWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkSelectedFixPositionWithOrgGeogebraCommonKernelGeosGeoElement_(geo);
}

+ (jboolean)checkSelectedFixObjectWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkSelectedFixObjectWithOrgGeogebraCommonKernelGeosGeoElement_(geo);
}

+ (jboolean)applyAngleIntervalWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                            withInt:(jint)index {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyAngleIntervalWithJavaUtilArrayList_withInt_(geos, index);
}

+ (jint)getIndexForLabelModeWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                                         withOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  return OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_getIndexForLabelModeWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonMainApp_(geo, app);
}

- (instancetype)init {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonEuclidianEuclidianStyleBarStatic class]) {
    OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray_ = [IOSObjectArray newArrayWithObjects:(id[]){ @"\u00d8", @"{ }", @"( )", @"[ ]", @"| |", @"|| ||" } count:6 type:NSString_class_()];
    OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_ = [IOSObjectArray newArrayWithObjects:(id[]){ @"\u00d8", @"{ }", @"( )", @"[ ]", @"||", @"||||" } count:6 type:NSString_class_()];
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonEuclidianEuclidianStyleBarStatic)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "applyFixPositionWithJavaUtilArrayList:withBoolean:withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon:", "applyFixPosition", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x9, NULL, NULL },
    { "applyFixObjectWithJavaUtilArrayList:withBoolean:withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon:", "applyFixObject", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x9, NULL, NULL },
    { "getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement:", "getDefinitonString", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "redefineGeoWithOrgGeogebraCommonKernelGeosGeoElement:withNSString:", "redefineGeo", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x9, NULL, NULL },
    { "applyTableTextFormatWithJavaUtilArrayList:withInt:withBoolean:withBoolean:withInt:withOrgGeogebraCommonMainApp:", "applyTableTextFormat", "V", 0x9, NULL, NULL },
    { "checkGeosForCaptionStyleWithNSObjectArray:withInt:withOrgGeogebraCommonMainApp:", "checkGeosForCaptionStyle", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x19, NULL, NULL },
    { "applyCaptionStyleWithJavaUtilArrayList:withInt:withInt:", "applyCaptionStyle", "Z", 0x9, NULL, NULL },
    { "applyLineStyleWithJavaUtilArrayList:withInt:withInt:", "applyLineStyle", "Z", 0x9, NULL, NULL },
    { "applyPointStyleWithJavaUtilArrayList:withInt:withInt:", "applyPointStyle", "Z", 0x9, NULL, NULL },
    { "applyColorWithJavaUtilArrayList:withOrgGeogebraCommonAwtGColor:withFloat:withOrgGeogebraCommonMainApp:", "applyColor", "Z", 0x9, NULL, NULL },
    { "applyBgColorWithJavaUtilArrayList:withOrgGeogebraCommonAwtGColor:withFloat:", "applyBgColor", "Z", 0x9, NULL, NULL },
    { "applyTextColorWithJavaUtilArrayList:withOrgGeogebraCommonAwtGColor:", "applyTextColor", "Z", 0x9, NULL, NULL },
    { "applyFontStyleWithJavaUtilArrayList:withInt:withInt:", "applyFontStyle", "Z", 0x9, NULL, NULL },
    { "applyTextSizeWithJavaUtilArrayList:withInt:", "applyTextSize", "Z", 0x9, NULL, NULL },
    { "processSourceCommonWithNSString:withJavaUtilArrayList:withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon:", "processSourceCommon", "Z", 0x9, NULL, NULL },
    { "updateTableTextWithNSObjectArray:withInt:", "updateTableText", "Lorg.geogebra.common.kernel.algos.AlgoTableText;", 0x9, NULL, NULL },
    { "createDefaultMap", NULL, "Ljava.util.HashMap;", 0x9, NULL, NULL },
    { "checkGeosForFixPositionWithNSObjectArray:", "checkGeosForFixPosition", "Z", 0x19, NULL, NULL },
    { "checkGeosForFixObjectWithNSObjectArray:", "checkGeosForFixObject", "Z", 0x19, NULL, NULL },
    { "checkGeosForAngleIntervalWithNSObjectArray:", "checkGeosForAngleInterval", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x19, NULL, NULL },
    { "checkSelectedFixPositionWithOrgGeogebraCommonKernelGeosGeoElement:", "checkSelectedFixPosition", "Z", 0x19, NULL, NULL },
    { "checkSelectedFixObjectWithOrgGeogebraCommonKernelGeosGeoElement:", "checkSelectedFixObject", "Z", 0x19, NULL, NULL },
    { "applyAngleIntervalWithJavaUtilArrayList:withInt:", "applyAngleInterval", "Z", 0x9, NULL, NULL },
    { "getIndexForLabelModeWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonMainApp:", "getIndexForLabelMode", "I", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bracketArray_", NULL, 0x19, "[Ljava.lang.String;", &OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray_, NULL,  },
    { "bracketArray2_", NULL, 0x19, "[Ljava.lang.String;", &OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_, NULL,  },
    { "lineStyleArray_", NULL, 0x9, "[Ljava.lang.Integer;", &OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_lineStyleArray_, NULL,  },
    { "pointStyleArray_", NULL, 0x9, "[Ljava.lang.Integer;", &OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_pointStyleArray_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianEuclidianStyleBarStatic = { 2, "EuclidianStyleBarStatic", "org.geogebra.common.euclidian", NULL, 0x1, 25, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianEuclidianStyleBarStatic;
}

@end

OrgGeogebraCommonKernelGeosGeoElement *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixPositionWithJavaUtilArrayList_withBoolean_withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(JavaUtilArrayList *geos, jboolean flag, id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon> ev) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  OrgGeogebraCommonKernelGeosGeoElement *ret = [((JavaUtilArrayList *) nil_chk(geos)) getWithInt:0];
  id<OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable> geoASL;
  OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geos getWithInt:0])) getKernel])) getApplication];
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getSelectionManager])) clearSelectedGeosWithBoolean:NO];
  for (jint i = 0; i < [geos size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelSet]) {
      OrgGeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$$", @"applyFixPosition() called with a geo with label not set: ", [geo getLabelSimple]));
      continue;
    }
    [((OrgGeogebraCommonMainSelectionManager *) nil_chk([app getSelectionManager])) addSelectedGeoWithOrgGeogebraCommonKernelGeosGeoElement:geo withBoolean:NO withBoolean:NO];
    if ([geo isGeoSegment]) {
      if ([geo getParentAlgorithm] != nil && ((IOSObjectArray *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk([geo getParentAlgorithm])) getInput]))->size_ == 3) {
        continue;
      }
    }
    if ([[geo getParentAlgorithm] isKindOfClass:[OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView class]]) {
      OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *algo = (OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *) check_class_cast([geo getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView class]);
      if (!flag) {
        OrgGeogebraCommonKernelGeosGeoElement *geo0 = OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithOrgGeogebraCommonKernelGeosGeoElement_withNSString_(geo, OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement_(IOSObjectArray_Get(nil_chk([((OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *) nil_chk(algo)) getInput]), 0)));
        if (i == 0) {
          ret = geo0;
        }
      }
      else {
        [((OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView *) nil_chk(algo)) setEVWithInt:[((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) getEuclidianViewNo]];
      }
      [geo setEuclidianVisibleWithBoolean:YES];
      [geo updateRepaint];
    }
    else if ([OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable_class_() isInstance:geo] && ![geo isGeoList]) {
      geoASL = (id<OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable));
      if (flag) {
        jint x = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) toScreenCoordXWithDouble:[geoASL getRealWorldLocX]];
        jint y = [ev toScreenCoordYWithDouble:[geoASL getRealWorldLocY]];
        if (![geoASL isAbsoluteScreenLocActive]) [geoASL setAbsoluteScreenLocWithInt:x withInt:y];
      }
      else {
        jdouble x = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) toRealWorldCoordXWithDouble:[geoASL getAbsoluteScreenLocX]];
        jdouble y = [ev toRealWorldCoordYWithDouble:[geoASL getAbsoluteScreenLocY]];
        if ([geoASL isAbsoluteScreenLocActive]) [geoASL setRealWorldLocWithDouble:x withDouble:y];
      }
      [geoASL setAbsoluteScreenLocActiveWithBoolean:flag];
      [geo updateRepaint];
    }
    else if ([geo isPinnable]) {
      OrgGeogebraCommonKernelKernel *kernelA = [app getKernel];
      OrgGeogebraCommonKernelGeosGeoPoint *corner1 = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([((OrgGeogebraCommonKernelKernel *) nil_chk(kernelA)) getConstruction]);
      OrgGeogebraCommonKernelGeosGeoPoint *corner3 = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([kernelA getConstruction]);
      OrgGeogebraCommonKernelGeosGeoPoint *screenCorner1 = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([kernelA getConstruction]);
      OrgGeogebraCommonKernelGeosGeoPoint *screenCorner3 = new_OrgGeogebraCommonKernelGeosGeoPoint_initWithOrgGeogebraCommonKernelConstruction_([kernelA getConstruction]);
      if (ev != nil) {
        [corner1 setCoordsWithDouble:[ev getXmin] withDouble:[ev getYmin] withDouble:1];
        [corner3 setCoordsWithDouble:[ev getXmax] withDouble:[ev getYmax] withDouble:1];
        [screenCorner1 setCoordsWithDouble:0 withDouble:[ev getHeight] withDouble:1];
        [screenCorner3 setCoordsWithDouble:[ev getWidth] withDouble:0 withDouble:1];
      }
      OrgGeogebraCommonKernelGeosGeoElement *geo0 = OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithOrgGeogebraCommonKernelGeosGeoElement_withNSString_(geo, JreStrcat("$$CIC", @"AttachCopyToView[", OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement_(geo), ',', [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) getEuclidianViewNo], ']'));
      if (i == 0) {
        ret = geo0;
      }
      [geo setEuclidianVisibleWithBoolean:YES];
      [geo updateRepaint];
    }
    else {
      OrgGeogebraCommonMainApp_debugWithNSString_(@"not pinnable");
      return nil;
    }
  }
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([app getSelectionManager])) updateSelection];
  return ret;
}

OrgGeogebraCommonKernelGeosGeoElement *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixObjectWithJavaUtilArrayList_withBoolean_withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(JavaUtilArrayList *geos, jboolean flag, id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon> ev) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  OrgGeogebraCommonKernelGeosGeoElement *ret = [((JavaUtilArrayList *) nil_chk(geos)) getWithInt:0];
  OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([geos getWithInt:0])) getKernel])) getApplication];
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getSelectionManager])) clearSelectedGeosWithBoolean:NO];
  for (jint i = 0; i < [geos size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefaultGeo]) {
      if ([geo isFixable]) {
        [geo setFixedWithBoolean:flag];
        continue;
      }
    }
    if (![geo isLabelSet]) {
      OrgGeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$$", @"applyFixPosition() called with a geo with label not set: ", [geo getLabelSimple]));
      continue;
    }
    [((OrgGeogebraCommonMainSelectionManager *) nil_chk([app getSelectionManager])) addSelectedGeoWithOrgGeogebraCommonKernelGeosGeoElement:geo withBoolean:NO withBoolean:NO];
    if ([geo isFixable]) {
      [geo setFixedWithBoolean:flag];
      ret = geo;
    }
    else {
      OrgGeogebraCommonMainApp_debugWithNSString_(@"not fixable");
      return nil;
    }
  }
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([app getSelectionManager])) updateSelection];
  return ret;
}

NSString *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_getDefinitonStringWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *geo) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  NSString *definitonStr = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getCommandDescriptionWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_maxPrecision_()];
  if ([((NSString *) nil_chk(definitonStr)) isEqual:@""]) {
    definitonStr = [geo getFormulaStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_maxPrecision_() withBoolean:NO];
  }
  return definitonStr;
}

OrgGeogebraCommonKernelGeosGeoElement *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithOrgGeogebraCommonKernelGeosGeoElement_withNSString_(OrgGeogebraCommonKernelGeosGeoElement *geo, NSString *cmdtext) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  OrgGeogebraCommonKernelGeosGeoElement *newGeo = nil;
  OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getKernel])) getApplication];
  if (cmdtext == nil) return newGeo;
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("$@$$", @"redefining ", geo, @" as ", cmdtext));
  @try {
    newGeo = [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel])) getAlgebraProcessor])) changeGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:geo withNSString:cmdtext withBoolean:YES withBoolean:YES];
    [app doAfterRedefineWithOrgGeogebraCommonKernelGeosGeoElement:newGeo];
    [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(newGeo)) updateRepaint];
    return newGeo;
  }
  @catch (JavaLangException *e) {
    [((OrgGeogebraCommonMainApp *) nil_chk(app)) showErrorWithNSString:@"ReplaceFailed"];
  }
  @catch (OrgGeogebraCommonMainMyError *err) {
    [((OrgGeogebraCommonMainApp *) nil_chk(app)) showErrorWithOrgGeogebraCommonMainMyError:err];
  }
  return newGeo;
}

void OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyTableTextFormatWithJavaUtilArrayList_withInt_withBoolean_withBoolean_withInt_withOrgGeogebraCommonMainApp_(JavaUtilArrayList *geos, jint justifyIndex, jboolean HisSelected, jboolean VisSelected, jint index, OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  OrgGeogebraCommonKernelAlgosAlgoElement *algo = nil;
  IOSObjectArray *input;
  OrgGeogebraCommonKernelGeosGeoElement *geo;
  NSString *arg = nil;
  IOSObjectArray *justifyArray = [IOSObjectArray newArrayWithObjects:(id[]){ @"l", @"c", @"r" } count:3 type:NSString_class_()];
  arg = IOSObjectArray_Get(justifyArray, justifyIndex);
  if (HisSelected) arg = JreStrcat("$C", arg, '_');
  if (VisSelected) arg = JreStrcat("$C", arg, '|');
  if (index > 0) arg = JreStrcat("$$", arg, IOSObjectArray_Get(nil_chk(OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_bracketArray2_), index));
  JavaUtilArrayList *newGeos = new_JavaUtilArrayList_init();
  JavaLangStringBuilder *cmdText = new_JavaLangStringBuilder_init();
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    geo = [geos getWithInt:i];
    algo = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getParentAlgorithm];
    input = [((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) getInput];
    [cmdText setLengthWithInt:0];
    (void) [cmdText appendWithNSString:@"TableText["];
    (void) [cmdText appendWithNSString:[((OrgGeogebraCommonKernelGeosGeoList *) nil_chk(((OrgGeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(nil_chk(input), 0), [OrgGeogebraCommonKernelGeosGeoList class])))) getFormulaStringWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_() withBoolean:NO]];
    (void) [cmdText appendWithNSString:@",\""];
    (void) [cmdText appendWithNSString:arg];
    (void) [cmdText appendWithNSString:@"\"]"];
    [newGeos addWithId:OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_redefineGeoWithOrgGeogebraCommonKernelGeosGeoElement_withNSString_(geo, [cmdText description])];
  }
  [((OrgGeogebraCommonMainSelectionManager *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getSelectionManager])) setSelectedGeosWithJavaUtilArrayList:newGeos];
}

OrgGeogebraCommonKernelGeosGeoElement *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForCaptionStyleWithNSObjectArray_withInt_withOrgGeogebraCommonMainApp_(IOSObjectArray *geos, jint mode, OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  if (((IOSObjectArray *) nil_chk(geos))->size_ <= 0) {
    return nil;
  }
  OrgGeogebraCommonKernelGeosGeoElement *geo = nil;
  for (jint i = 0; i < geos->size_; i++) {
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class])))) isLabelShowable] || [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoAngle] || ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class])))) isGeoNumeric] ? [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoNumeric class])))) isSliderFixed] : NO)) {
      geo = (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class]);
      return geo;
    }
  }
  return nil;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyCaptionStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint mode, jint index) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  OrgGeogebraCommonMainApp *app = [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk([((JavaUtilArrayList *) nil_chk(geos)) getWithInt:0])) getKernel])) getApplication];
  for (jint i = 0; i < [geos size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isLabelShowable] || [geo isGeoAngle] || ([geo isGeoNumeric] ? [((OrgGeogebraCommonKernelGeosGeoNumeric *) check_class_cast(geo, [OrgGeogebraCommonKernelGeosGeoNumeric class])) isSliderFixed] : NO)) {
      [geo setLabelModeFromStylebarWithInt:index];
    }
    [geo updateVisualStyle];
    needUndo = YES;
  }
  [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel])) notifyRepaint];
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyLineStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint lineStyleIndex, jint lineSize) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jint lineStyle = [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_lineStyleArray_), lineStyleIndex))) intValue];
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getLineType] != lineStyle || [geo getLineThickness] != lineSize) {
      [geo setLineTypeWithInt:lineStyle];
      [geo setLineThicknessWithInt:lineSize];
      [geo updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyPointStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint pointStyleSelIndex, jint pointSize) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jint pointStyle = [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(nil_chk(OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_pointStyleArray_), pointStyleSelIndex))) intValue];
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([OrgGeogebraCommonKernelGeosPointProperties_class_() isInstance:geo]) {
      if ([((id<OrgGeogebraCommonKernelGeosPointProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosPointProperties))))) getPointSize] != pointSize || ([((id<OrgGeogebraCommonKernelGeosPointProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosPointProperties))))) getPointStyle] != pointStyle)) {
        [((id<OrgGeogebraCommonKernelGeosPointProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosPointProperties))))) setPointSizeWithInt:pointSize];
        [((id<OrgGeogebraCommonKernelGeosPointProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosPointProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosPointProperties))))) setPointStyleWithInt:pointStyle];
        [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyleRepaint];
        needUndo = YES;
      }
    }
  }
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyColorWithJavaUtilArrayList_withOrgGeogebraCommonAwtGColor_withFloat_withOrgGeogebraCommonMainApp_(JavaUtilArrayList *geos, OrgGeogebraCommonAwtGColor *color, jfloat alpha, OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if (!([[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getGeoElementForPropertiesDialog] isKindOfClass:[OrgGeogebraCommonKernelGeosGeoImage class]] || [[geo getGeoElementForPropertiesDialog] isKindOfClass:[OrgGeogebraCommonKernelGeosGeoText class]])) if (([geo getObjectColor] != color || [geo getAlphaValue] != alpha)) {
      [geo setObjColorWithOrgGeogebraCommonAwtGColor:color];
      if ([geo isFillable]) [geo setAlphaValueWithFloat:alpha];
      [geo updateVisualStyle];
      needUndo = YES;
    }
  }
  [((OrgGeogebraCommonKernelKernel *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app)) getKernel])) notifyRepaint];
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyBgColorWithJavaUtilArrayList_withOrgGeogebraCommonAwtGColor_withFloat_(JavaUtilArrayList *geos, OrgGeogebraCommonAwtGColor *color, jfloat alpha) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([OrgGeogebraCommonKernelGeosTextProperties_class_() isInstance:geo]) if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getBackgroundColor] != color || [geo getAlphaValue] != alpha) {
      [geo setBackgroundColorWithOrgGeogebraCommonAwtGColor:color == nil ? nil : color];
      [geo updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextColorWithJavaUtilArrayList_withOrgGeogebraCommonAwtGColor_(JavaUtilArrayList *geos, OrgGeogebraCommonAwtGColor *color) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([OrgGeogebraCommonKernelGeosTextProperties_class_() isInstance:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getGeoElementForPropertiesDialog]] && [geo getObjectColor] != color) {
      [geo setObjColorWithOrgGeogebraCommonAwtGColor:color];
      [geo updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyFontStyleWithJavaUtilArrayList_withInt_withInt_(JavaUtilArrayList *geos, jint mask, jint add) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([OrgGeogebraCommonKernelGeosTextProperties_class_() isInstance:geo]) {
      jint newStyle = ([((id<OrgGeogebraCommonKernelGeosTextProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosTextProperties))))) getFontStyle] & mask) | add;
      if ([((id<OrgGeogebraCommonKernelGeosTextProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosTextProperties))))) getFontStyle] != newStyle) {
        [((id<OrgGeogebraCommonKernelGeosTextProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosTextProperties))))) setFontStyleWithInt:newStyle];
        [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyleRepaint];
        needUndo = YES;
      }
    }
  }
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyTextSizeWithJavaUtilArrayList_withInt_(JavaUtilArrayList *geos, jint textSizeIndex) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  jdouble fontSize = OrgGeogebraCommonKernelGeosGeoText_getRelativeFontSizeWithInt_(textSizeIndex);
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([OrgGeogebraCommonKernelGeosTextProperties_class_() isInstance:geo] && [((id<OrgGeogebraCommonKernelGeosTextProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosTextProperties))))) getFontSizeMultiplier] != fontSize) {
      [((id<OrgGeogebraCommonKernelGeosTextProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosTextProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosTextProperties))))) setFontSizeMultiplierWithDouble:fontSize];
      [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyleRepaint];
      needUndo = YES;
    }
  }
  return needUndo;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_processSourceCommonWithNSString_withJavaUtilArrayList_withOrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(NSString *actionCommand, JavaUtilArrayList *targetGeos, id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon> ev) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  OrgGeogebraCommonMainApp *app = [((id<OrgGeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) getApplication];
  jboolean changed = NO;
  if ([((NSString *) nil_chk(actionCommand)) isEqual:@"showAxes"]) {
    if ([((OrgGeogebraCommonMainApp *) nil_chk(app)) getEuclidianView1] == ev) {
      changed = [((OrgGeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((OrgGeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:1])) setShowAxesWithBoolean:![ev getShowXaxis] withBoolean:![ev getShowXaxis]];
    }
    else if ([app hasEuclidianView2EitherShowingOrNotWithInt:1] && [app getEuclidianView2WithInt:1] == ev) {
      changed = [((OrgGeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((OrgGeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:2])) setShowAxesWithBoolean:![ev getShowXaxis] withBoolean:![ev getShowXaxis]];
    }
    else if ([app hasEuclidianView3D] && [app getEuclidianView3D] == ev) {
      changed = [((OrgGeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((OrgGeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:3])) setShowAxesWithBoolean:![ev getShowXaxis]];
    }
    else {
      changed = [ev setShowAxesWithBoolean:![ev getShowXaxis] withBoolean:YES];
    }
    [ev repaint];
  }
  else if ([actionCommand isEqual:@"showGrid"]) {
    if ([((OrgGeogebraCommonMainApp *) nil_chk(app)) getEuclidianView1] == ev) {
      changed = [((OrgGeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((OrgGeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:1])) showGridWithBoolean:![ev getShowGrid]];
    }
    else if ([app hasEuclidianView2EitherShowingOrNotWithInt:1] && [app getEuclidianView2WithInt:1] == ev) {
      changed = [((OrgGeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((OrgGeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:2])) showGridWithBoolean:![ev getShowGrid]];
    }
    else if ([app hasEuclidianView3D] && [app getEuclidianView3D] == ev) {
      changed = [((OrgGeogebraCommonMainSettingsEuclidianSettings *) nil_chk([((OrgGeogebraCommonMainSettingsSettings *) nil_chk([app getSettings])) getEuclidianWithInt:3])) showGridWithBoolean:![ev getShowGrid]];
    }
    else {
      changed = [ev showGridWithBoolean:![ev getShowGrid]];
    }
    [ev repaint];
  }
  else if ([actionCommand isEqual:@"standardView"]) {
    [ev setStandardViewWithBoolean:YES];
  }
  else if ([actionCommand isEqual:@"pointCapture"]) {
    jint mode = [((id<OrgGeogebraCommonEuclidianEuclidianStyleBar>) nil_chk([ev getStyleBar])) getPointCaptureSelectedIndex];
    if (mode == 3 || mode == 0) mode = 3 - mode;
    [ev setPointCapturingWithInt:mode];
    [((OrgGeogebraCommonMainApp *) nil_chk(app)) updateStyleBars];
  }
  if (changed) {
    [((OrgGeogebraCommonMainApp *) nil_chk(app)) storeUndoInfo];
  }
  else {
    return NO;
  }
  return YES;
}

OrgGeogebraCommonKernelAlgosAlgoTableText *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_updateTableTextWithNSObjectArray_withInt_(IOSObjectArray *geos, jint mode) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  OrgGeogebraCommonKernelAlgosAlgoTableText *tableText = nil;
  if (geos == nil || geos->size_ == 0 || OrgGeogebraCommonEuclidianEuclidianView_isPenModeWithInt_(mode)) return tableText;
  jboolean geosOK = YES;
  OrgGeogebraCommonKernelAlgosAlgoElement *algo;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(geos))->size_; i++) {
    algo = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class])))) getParentAlgorithm];
    if (algo == nil || !([algo isKindOfClass:[OrgGeogebraCommonKernelAlgosAlgoTableText class]])) {
      geosOK = NO;
    }
  }
  if (geosOK && IOSObjectArray_Get(geos, 0) != nil) {
    algo = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, 0), [OrgGeogebraCommonKernelGeosGeoElement class])))) getParentAlgorithm];
    tableText = (OrgGeogebraCommonKernelAlgosAlgoTableText *) check_class_cast(algo, [OrgGeogebraCommonKernelAlgosAlgoTableText class]);
  }
  return tableText;
}

JavaUtilHashMap *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_createDefaultMap() {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  JavaUtilHashMap *defaultGeoMap = new_JavaUtilHashMap_init();
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_POINT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_ALL_BUT_COMPLEX)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_COMPLEX_NUMBER) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_COMPLEX)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_POINT_ON_OBJECT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_ALL_BUT_COMPLEX)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_INTERSECT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_DEPENDENT)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_MIDPOINT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POINT_DEPENDENT)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_JOIN) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_SEGMENT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_SEGMENT)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_SEGMENT_FIXED) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_SEGMENT)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_RAY) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_RAY)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_VECTOR) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_VECTOR)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_VECTOR_FROM_POINT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_VECTOR)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ORTHOGONAL) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_PARALLEL) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_LINE_BISECTOR) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ANGULAR_BISECTOR) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_TANGENTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_POLAR_DIAMETER) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_FITLINE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CREATE_LIST) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LIST)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_LOCUS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_LOCUS)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_POLYGON) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_REGULAR_POLYGON) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_RIGID_POLYGON) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_VECTOR_POLYGON) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_POLYLINE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POLYLINE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_TWO_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_POINT_RADIUS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_COMPASSES) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_SEMICIRCLE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_ARC_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCUMCIRCLE_ARC_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_SECTOR_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC_SECTOR)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CIRCUMCIRCLE_SECTOR_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC_SECTOR)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ELLIPSE_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_HYPERBOLA_THREE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_PARABOLA) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_CONIC_FIVE_POINTS) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_CONIC)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ANGLE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_ANGLE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ANGLE_FIXED) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_ANGLE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_DISTANCE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_TEXT)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_AREA) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_TEXT)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_SLOPE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_POLYGON)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_MIRROR_AT_LINE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_MIRROR_AT_POINT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_MIRROR_AT_CIRCLE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_ROTATE_BY_ANGLE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_TRANSLATE_BY_VECTOR) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_DILATE_FROM_POINT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_TEXT) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_TEXT)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_SLIDER) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NUMBER)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_IMAGE) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_IMAGE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_SHOW_HIDE_CHECKBOX) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_BOOLEAN)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_BUTTON_ACTION) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  (void) [defaultGeoMap putWithId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonEuclidianEuclidianConstants_MODE_TEXTFIELD_ACTION) withId:JavaLangInteger_valueOfWithInt_(OrgGeogebraCommonKernelConstructionDefaults_DEFAULT_NONE)];
  return defaultGeoMap;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForFixPositionWithNSObjectArray_(IOSObjectArray *geos) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  if (((IOSObjectArray *) nil_chk(geos))->size_ <= 0) {
    return NO;
  }
  for (jint i = 0; i < geos->size_; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class]);
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isPinnable]) {
      return NO;
    }
    if ([geo isGeoSegment]) {
      if ([geo getParentAlgorithm] != nil && ((IOSObjectArray *) nil_chk([((OrgGeogebraCommonKernelAlgosAlgoElement *) nil_chk([geo getParentAlgorithm])) getInput]))->size_ == 3) {
        return NO;
      }
    }
  }
  return YES;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForFixObjectWithNSObjectArray_(IOSObjectArray *geos) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  if (((IOSObjectArray *) nil_chk(geos))->size_ <= 0) {
    return NO;
  }
  for (jint i = 0; i < geos->size_; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class]);
    if (![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isFixable]) {
      return NO;
    }
  }
  return YES;
}

OrgGeogebraCommonKernelGeosGeoElement *OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkGeosForAngleIntervalWithNSObjectArray_(IOSObjectArray *geos) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  if (((IOSObjectArray *) nil_chk(geos))->size_ <= 0) {
    return nil;
  }
  for (jint i = 0; i < geos->size_; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = (OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(geos, i), [OrgGeogebraCommonKernelGeosGeoElement class]);
    if ((([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefaultGeo] || ![geo isIndependent]) && ([OrgGeogebraCommonKernelGeosAngleProperties_class_() isInstance:geo]) && ![geo isGeoList]) || OrgGeogebraCommonGuiDialogOptionsModelOptionsModel_isAngleListWithOrgGeogebraCommonKernelGeosGeoElement_(geo)) {
      return geo;
    }
  }
  return nil;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkSelectedFixPositionWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *geo) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  if ([OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable_class_() isInstance:geo] && ![((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoList]) {
    id<OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable> locateable = (id<OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable>) check_protocol_cast([geo getGeoElementForPropertiesDialog], @protocol(OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable));
    return [((id<OrgGeogebraCommonKernelGeosAbsoluteScreenLocateable>) nil_chk(locateable)) isAbsoluteScreenLocActive];
  }
  if ([[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getParentAlgorithm] isKindOfClass:[OrgGeogebraCommonKernelAlgosAlgoAttachCopyToView class]]) {
    return YES;
  }
  return NO;
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_checkSelectedFixObjectWithOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelGeosGeoElement *geo) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  return [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isFixed];
}

jboolean OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_applyAngleIntervalWithJavaUtilArrayList_withInt_(JavaUtilArrayList *geos, jint index) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  jboolean needUndo = NO;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(geos)) size]; i++) {
    OrgGeogebraCommonKernelGeosGeoElement *geo = [geos getWithInt:i];
    if ([OrgGeogebraCommonKernelGeosAngleProperties_class_() isInstance:geo]) {
      if ([((OrgGeogebraCommonKernelGeosGeoAngle_AngleStyleEnum *) nil_chk([((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosAngleProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosAngleProperties))))) getAngleStyle])) getXmlVal] != index) {
        [((id<OrgGeogebraCommonKernelGeosAngleProperties>) nil_chk(((id<OrgGeogebraCommonKernelGeosAngleProperties>) check_protocol_cast(geo, @protocol(OrgGeogebraCommonKernelGeosAngleProperties))))) setAngleStyleWithInt:index];
        [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) updateVisualStyleRepaint];
        needUndo = YES;
      }
    }
  }
  return needUndo;
}

jint OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_getIndexForLabelModeWithOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonMainApp_(OrgGeogebraCommonKernelGeosGeoElement *geo, OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_initialize();
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefaultGeo]) {
    if ([geo getLabelMode] == OrgGeogebraCommonKernelGeosGeoElement_LABEL_DEFAULT) {
      jint labelingStyle = app == nil ? OrgGeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_USE_DEFAULTS : [app getCurrentLabelingStyle];
      switch (labelingStyle) {
        case OrgGeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_ALWAYS_ON:
        case OrgGeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_USE_DEFAULTS:
        default:
        if ([geo isGeoNumeric]) {
          return OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME_VALUE + 1;
        }
        return OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME + 1;
        case OrgGeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_ALWAYS_OFF:
        if ([geo isGeoNumeric]) {
          return OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME + 1;
        }
        return 0;
        case OrgGeogebraCommonKernelConstructionDefaults_LABEL_VISIBLE_POINTS_ONLY:
        if ([geo isGeoNumeric]) {
          return OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME_VALUE + 1;
        }
        if ([geo isGeoPoint]) {
          return OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME + 1;
        }
        return 0;
      }
    }
    if (![geo getLabelVisible]) {
      return 0;
    }
    return [geo getLabelMode] - 4;
  }
  if (![geo getLabelVisible]) {
    return 0;
  }
  return [geo getLabelMode] + 1;
}

void OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_init(OrgGeogebraCommonEuclidianEuclidianStyleBarStatic *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonEuclidianEuclidianStyleBarStatic *new_OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_init() {
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic *self = [OrgGeogebraCommonEuclidianEuclidianStyleBarStatic alloc];
  OrgGeogebraCommonEuclidianEuclidianStyleBarStatic_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianEuclidianStyleBarStatic)
