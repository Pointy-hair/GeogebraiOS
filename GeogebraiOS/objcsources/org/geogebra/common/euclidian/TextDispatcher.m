//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/euclidian/TextDispatcher.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GPoint.h"
#include "org/geogebra/common/euclidian/EuclidianController.h"
#include "org/geogebra/common/euclidian/EuclidianControllerCompanion.h"
#include "org/geogebra/common/euclidian/EuclidianView.h"
#include "org/geogebra/common/euclidian/TextDispatcher.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/Matrix/Coords.h"
#include "org/geogebra/common/kernel/Path.h"
#include "org/geogebra/common/kernel/Region.h"
#include "org/geogebra/common/kernel/StringTemplate.h"
#include "org/geogebra/common/kernel/algos/AlgoArcLength.h"
#include "org/geogebra/common/kernel/algos/AlgoClosestPoint.h"
#include "org/geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoPolygon.h"
#include "org/geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "org/geogebra/common/kernel/geos/GeoConicPart.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoNumberValue.h"
#include "org/geogebra/common/kernel/geos/GeoNumeric.h"
#include "org/geogebra/common/kernel/geos/GeoPolygon.h"
#include "org/geogebra/common/kernel/geos/GeoText.h"
#include "org/geogebra/common/kernel/geos/GeoVec2D.h"
#include "org/geogebra/common/kernel/kernelND/GeoConicND.h"
#include "org/geogebra/common/kernel/kernelND/GeoElementND.h"
#include "org/geogebra/common/kernel/kernelND/GeoLineND.h"
#include "org/geogebra/common/kernel/kernelND/GeoPointND.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/util/StringUtil.h"

@interface OrgGeogebraCommonEuclidianTextDispatcher () {
 @public
  OrgGeogebraCommonEuclidianEuclidianView *view_;
}

- (NSString *)descriptionPointsWithNSString:(NSString *)type
  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)poly;

- (OrgGeogebraCommonKernelGeosGeoText *)createDynamicTextWithNSString:(NSString *)type
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)object
                      withOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)value;

+ (void)makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)geo;

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)Q;

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)ClosestPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                                           withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)g;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianTextDispatcher, view_, OrgGeogebraCommonEuclidianEuclidianView *)

__attribute__((unused)) static NSString *OrgGeogebraCommonEuclidianTextDispatcher_descriptionPointsWithNSString_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonEuclidianTextDispatcher *self, NSString *type, OrgGeogebraCommonKernelGeosGeoPolygon *poly);

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoText *OrgGeogebraCommonEuclidianTextDispatcher_createDynamicTextWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelKernelNDGeoElementND_(OrgGeogebraCommonEuclidianTextDispatcher *self, NSString *type, OrgGeogebraCommonKernelGeosGeoElement *object, id<OrgGeogebraCommonKernelKernelNDGeoElementND> value);

__attribute__((unused)) static void OrgGeogebraCommonEuclidianTextDispatcher_makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND_(id<OrgGeogebraCommonKernelKernelNDGeoElementND> geo);

__attribute__((unused)) static id<OrgGeogebraCommonKernelKernelNDGeoPointND> OrgGeogebraCommonEuclidianTextDispatcher_MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonEuclidianTextDispatcher *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, id<OrgGeogebraCommonKernelKernelNDGeoPointND> Q);

__attribute__((unused)) static id<OrgGeogebraCommonKernelKernelNDGeoPointND> OrgGeogebraCommonEuclidianTextDispatcher_ClosestPointWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelPath_(OrgGeogebraCommonEuclidianTextDispatcher *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, id<OrgGeogebraCommonKernelPath> g);

@implementation OrgGeogebraCommonEuclidianTextDispatcher

- (instancetype)initWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel
          withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)view {
  OrgGeogebraCommonEuclidianTextDispatcher_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonEuclidianEuclidianView_(self, kernel, view);
  return self;
}

+ (NSString *)removeUnderscoresWithNSString:(NSString *)label {
  return OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(label);
}

- (void)setNoPointLocWithOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)text
                             withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc {
  [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text)) setAbsoluteScreenLocActiveWithBoolean:YES];
  [text setAbsoluteScreenLocWithInt:((OrgGeogebraCommonAwtGPoint *) nil_chk(loc))->x_ withInt:loc->y_];
}

- (IOSObjectArray *)getAreaTextWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)conic
                           withOrgGeogebraCommonKernelGeosGeoNumberValue:(id<OrgGeogebraCommonKernelGeosGeoNumberValue>)area
                                          withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc {
  OrgGeogebraCommonKernelGeosGeoText *text = [self createDynamicTextForMouseLocWithNSString:@"AreaOfA" withOrgGeogebraCommonKernelGeosGeoElement:conic withOrgGeogebraCommonKernelKernelNDGeoElementND:area withOrgGeogebraCommonAwtGPoint:loc];
  if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(conic)) isLabelSet]) {
    if (![((id<OrgGeogebraCommonKernelGeosGeoNumberValue>) nil_chk(area)) isLabelSet]) {
      [area setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getCommandWithNSString:@"Area"]), [conic getLabelSimple]))];
    }
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", [((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getPlainWithNSString:@"Text"], [conic getLabelSimple]))];
  }
  return [IOSObjectArray arrayWithObjects:(id[]){ text } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
}

- (NSString *)descriptionPointsWithNSString:(NSString *)type
  withOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)poly {
  return OrgGeogebraCommonEuclidianTextDispatcher_descriptionPointsWithNSString_withOrgGeogebraCommonKernelGeosGeoPolygon_(self, type, poly);
}

- (OrgGeogebraCommonKernelGeosGeoText *)createDynamicTextWithNSString:(NSString *)type
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)object
                      withOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)value {
  return OrgGeogebraCommonEuclidianTextDispatcher_createDynamicTextWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelKernelNDGeoElementND_(self, type, object, value);
}

- (OrgGeogebraCommonKernelGeosGeoText *)createDynamicTextForMouseLocWithNSString:(NSString *)type
                                       withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)object
                                 withOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)value
                                                  withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc {
  OrgGeogebraCommonKernelGeosGeoText *text = OrgGeogebraCommonEuclidianTextDispatcher_createDynamicTextWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelKernelNDGeoElementND_(self, type, object, value);
  if (text != nil) {
    id<OrgGeogebraCommonKernelKernelNDGeoPointND> P = nil;
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(object)) isRegion]) {
      P = [self getPointForDynamicTextWithOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>) check_protocol_cast(object, @protocol(OrgGeogebraCommonKernelRegion)) withOrgGeogebraCommonAwtGPoint:loc];
    }
    else if ([object isPath]) {
      P = [self getPointForDynamicTextWithOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>) check_protocol_cast(object, @protocol(OrgGeogebraCommonKernelPath)) withOrgGeogebraCommonAwtGPoint:loc];
    }
    else {
      P = [self getPointForDynamicTextWithOrgGeogebraCommonAwtGPoint:loc];
    }
    if (P != nil) {
      [((OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(P, [OrgGeogebraCommonKernelGeosGeoElement class])) setAuxiliaryObjectWithBoolean:YES];
      [P setEuclidianVisibleWithBoolean:NO];
      [P updateRepaint];
      @try {
        [text setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:P];
      }
      @catch (JavaLangException *e) {
        [((JavaLangException *) nil_chk(e)) printStackTrace];
        return nil;
      }
    }
    else {
      [self setNoPointLocWithOrgGeogebraCommonKernelGeosGeoText:text withOrgGeogebraCommonAwtGPoint:loc];
    }
    [text setBackgroundColorWithOrgGeogebraCommonAwtGColor:OrgGeogebraCommonAwtGColor_get_WHITE_()];
    [text updateRepaint];
  }
  return text;
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPointForDynamicTextWithOrgGeogebraCommonKernelRegion:(id<OrgGeogebraCommonKernelRegion>)object
                                                                          withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc {
  jdouble rwx = 0, rwy = 0;
  if (loc != nil) {
    rwx = [((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) toRealWorldCoordXWithDouble:loc->x_];
    rwy = [view_ toRealWorldCoordYWithDouble:loc->y_];
  }
  else if ([object isKindOfClass:[OrgGeogebraCommonKernelGeosGeoPolygon class]]) {
    IOSObjectArray *pts = [((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(((OrgGeogebraCommonKernelGeosGeoPolygon *) check_class_cast(object, [OrgGeogebraCommonKernelGeosGeoPolygon class])))) getPointsND];
    {
      IOSObjectArray *a__ = pts;
      id<OrgGeogebraCommonKernelKernelNDGeoPointND> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      id<OrgGeogebraCommonKernelKernelNDGeoPointND> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgGeogebraCommonKernelKernelNDGeoPointND> pt = *b__++;
        rwx += [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(pt)) getCoordsInD2])) getX];
        rwy += [((OrgGeogebraCommonKernelMatrixCoords *) nil_chk([pt getCoordsInD2])) getY];
      }
    }
    rwx = rwx / ((IOSObjectArray *) nil_chk(pts))->size_;
    rwy = rwy / pts->size_;
  }
  else if ([object isKindOfClass:[OrgGeogebraCommonKernelKernelNDGeoConicND class]]) {
    rwx = [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk([((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(((OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(object, [OrgGeogebraCommonKernelKernelNDGeoConicND class])))) getTranslationVector])) getX];
    rwy = [((OrgGeogebraCommonKernelGeosGeoVec2D *) nil_chk([((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(((OrgGeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(object, [OrgGeogebraCommonKernelKernelNDGeoConicND class])))) getTranslationVector])) getY];
  }
  return [((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getEuclidianController])) createNewPointWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", [((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getPlainWithNSString:@"Point"], [((id<OrgGeogebraCommonKernelRegion>) nil_chk(object)) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()])) withBoolean:NO withOrgGeogebraCommonKernelRegion:object withDouble:rwx withDouble:rwy withDouble:0 withBoolean:NO withBoolean:NO];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPointForDynamicTextWithOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)object
                                                                        withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc {
  return [((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(view_)) getEuclidianController])) getCompanion])) createNewPointWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", [((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getPlainWithNSString:@"Point"], [((id<OrgGeogebraCommonKernelPath>) nil_chk(object)) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()])) withBoolean:NO withOrgGeogebraCommonKernelPath:object withDouble:[view_ toRealWorldCoordXWithDouble:((OrgGeogebraCommonAwtGPoint *) nil_chk(loc))->x_] withDouble:[view_ toRealWorldCoordYWithDouble:loc->y_] withDouble:0 withBoolean:NO withBoolean:NO];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)getPointForDynamicTextWithOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc {
  return nil;
}

- (OrgGeogebraCommonKernelGeosGeoText *)createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)geoA
                                                          withOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)geoB
                                                            withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)textCorner
                                                                withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)length {
  OrgGeogebraCommonKernelStringTemplate *tpl = OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_();
  @try {
    NSString *strText = @"";
    jboolean useLabels = [((id<OrgGeogebraCommonKernelKernelNDGeoElementND>) nil_chk(geoA)) isLabelSet] && [((id<OrgGeogebraCommonKernelKernelNDGeoElementND>) nil_chk(geoB)) isLabelSet];
    if (useLabels) {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(length)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$$", OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getCommandWithNSString:@"Distance"]), [geoA getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl], [((id<OrgGeogebraCommonKernelKernelNDGeoElementND>) nil_chk(geoB)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]))];
      strText = JreStrcat("$$$$$$", @"Name[", [geoA getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl], @"] + Name[", [geoB getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl], @"] + \" = \" + ", [length getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]);
      OrgGeogebraCommonEuclidianTextDispatcher_makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND_(geoA);
      OrgGeogebraCommonEuclidianTextDispatcher_makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND_(geoB);
      [geoA updateRepaint];
      [geoB updateRepaint];
    }
    else {
      [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(length)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getCommandWithNSString:@"Distance"]))];
      strText = JreStrcat("$$", @"\"\"", [length getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]);
    }
    OrgGeogebraCommonKernelGeosGeoText *text = [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgebraProcessor])) evaluateToTextWithNSString:strText withBoolean:YES withBoolean:YES];
    if (useLabels) {
      [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$$", [((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getPlainWithNSString:@"Text"], [geoA getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl], [((id<OrgGeogebraCommonKernelKernelNDGeoElementND>) nil_chk(geoB)) getLabelWithOrgGeogebraCommonKernelStringTemplate:tpl]))];
    }
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text)) setStartPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:textCorner];
    [text setBackgroundColorWithOrgGeogebraCommonAwtGColor:OrgGeogebraCommonAwtGColor_get_WHITE_()];
    [text updateRepaint];
    return text;
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    return nil;
  }
}

+ (void)makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND:(id<OrgGeogebraCommonKernelKernelNDGeoElementND>)geo {
  OrgGeogebraCommonEuclidianTextDispatcher_makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND_(geo);
}

- (IOSObjectArray *)createCircumferenceTextWithOrgGeogebraCommonKernelKernelNDGeoConicND:(OrgGeogebraCommonKernelKernelNDGeoConicND *)conic
                                                          withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)loc {
  if ([((OrgGeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic)) isGeoConicPart]) {
    OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getConstruction];
    OrgGeogebraCommonKernelAlgosAlgoArcLength *algo = [new_OrgGeogebraCommonKernelAlgosAlgoArcLength_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelKernelNDGeoConicPartND_(cons, nil, (OrgGeogebraCommonKernelGeosGeoConicPart *) check_class_cast(conic, [OrgGeogebraCommonKernelGeosGeoConicPart class])) autorelease];
    OrgGeogebraCommonKernelGeosGeoNumeric *arcLength = [algo getArcLength];
    OrgGeogebraCommonKernelGeosGeoText *text = [self createDynamicTextForMouseLocWithNSString:@"ArcLengthOfA" withOrgGeogebraCommonKernelGeosGeoElement:conic withOrgGeogebraCommonKernelKernelNDGeoElementND:arcLength withOrgGeogebraCommonAwtGPoint:loc];
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", [((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getPlainWithNSString:@"Text"], [conic getLabelSimple]))];
    IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ text } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  OrgGeogebraCommonKernelGeosGeoNumeric *circumFerence = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgoDispatcher])) CircumferenceWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoConicND:conic];
  OrgGeogebraCommonKernelGeosGeoText *text = [self createDynamicTextForMouseLocWithNSString:@"CircumferenceOfA" withOrgGeogebraCommonKernelGeosGeoElement:conic withOrgGeogebraCommonKernelKernelNDGeoElementND:circumFerence withOrgGeogebraCommonAwtGPoint:loc];
  if ([conic isLabelSet]) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(circumFerence)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getCommandWithNSString:@"Circumference"]), [conic getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]))];
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", [l10n_ getPlainWithNSString:@"Text"], [conic getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]))];
  }
  IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ text } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  return ret;
}

- (IOSObjectArray *)createPerimeterTextWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)poly
                                                  withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)mouseLoc {
  OrgGeogebraCommonKernelGeosGeoNumeric *perimeter = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgoDispatcher])) PerimeterWithNSString:nil withOrgGeogebraCommonKernelGeosGeoPolygon:poly];
  OrgGeogebraCommonKernelGeosGeoText *text = [self createDynamicTextForMouseLocWithNSString:@"PerimeterOfA" withOrgGeogebraCommonKernelGeosGeoElement:poly withOrgGeogebraCommonKernelKernelNDGeoElementND:perimeter withOrgGeogebraCommonAwtGPoint:mouseLoc];
  if ([((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(poly)) isLabelSet]) {
    [((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(perimeter)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getCommandWithNSString:@"Perimeter"]), [poly getLabelSimple]))];
    [((OrgGeogebraCommonKernelGeosGeoText *) nil_chk(text)) setLabelWithNSString:OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(JreStrcat("$$", [l10n_ getPlainWithNSString:@"Text"], [poly getLabelSimple]))];
  }
  IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ text } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  return ret;
}

- (IOSObjectArray *)createSlopeTextWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)line
                                           withOrgGeogebraCommonAwtGPoint:(OrgGeogebraCommonAwtGPoint *)mouseLoc {
  OrgGeogebraCommonKernelGeosGeoNumeric *slope;
  NSString *label = [((OrgGeogebraCommonMainLocalization *) nil_chk(l10n_)) getPlainWithNSString:@"ExplicitLineGradient"];
  if ([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) lookupLabelWithNSString:label] != nil) {
    jint i = 1;
    while ([kernel_ lookupLabelWithNSString:i > 9 ? JreStrcat("$$IC", label, @"_{", i, '}') : JreStrcat("$CI", label, '_', i)] != nil) {
      i++;
    }
    label = i > 9 ? JreStrcat("$$IC", label, @"_{", i, '}') : JreStrcat("$CI", label, '_', i);
  }
  slope = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([kernel_ getAlgoDispatcher])) SlopeWithNSString:label withOrgGeogebraCommonKernelGeosGeoLine:line];
  if ([((OrgGeogebraCommonKernelGeosGeoNumeric *) nil_chk(slope)) isLabelVisible]) {
    [slope setLabelModeWithInt:OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME_VALUE];
  }
  else {
    [slope setLabelModeWithInt:OrgGeogebraCommonKernelGeosGeoElement_LABEL_VALUE];
  }
  [slope setLabelVisibleWithBoolean:YES];
  [slope updateRepaint];
  IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ slope } count:1 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
  return ret;
}

- (OrgGeogebraCommonKernelGeosGeoElement *)createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point1
                                                             withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point2 {
  OrgGeogebraCommonKernelGeosGeoNumeric *length = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgoDispatcher])) DistanceWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:point1 withOrgGeogebraCommonKernelKernelNDGeoPointND:point2];
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> midPoint = OrgGeogebraCommonEuclidianTextDispatcher_MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, point1, point2);
  return [self createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoElementND:point1 withOrgGeogebraCommonKernelKernelNDGeoElementND:point2 withOrgGeogebraCommonKernelKernelNDGeoPointND:midPoint withOrgGeogebraCommonKernelGeosGeoNumeric:length];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                                    withOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)Q {
  return OrgGeogebraCommonEuclidianTextDispatcher_MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, P, Q);
}

- (OrgGeogebraCommonKernelGeosGeoElement *)createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)point
                                                              withOrgGeogebraCommonKernelKernelNDGeoLineND:(id<OrgGeogebraCommonKernelKernelNDGeoLineND>)line {
  OrgGeogebraCommonKernelGeosGeoNumeric *length = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgoDispatcher])) DistanceWithNSString:nil withOrgGeogebraCommonKernelKernelNDGeoPointND:point withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *) check_class_cast(line, [OrgGeogebraCommonKernelGeosGeoElement class])];
  id<OrgGeogebraCommonKernelKernelNDGeoPointND> midPoint = OrgGeogebraCommonEuclidianTextDispatcher_MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(self, point, OrgGeogebraCommonEuclidianTextDispatcher_ClosestPointWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelPath_(self, point, (id<OrgGeogebraCommonKernelPath>) check_protocol_cast(line, @protocol(OrgGeogebraCommonKernelPath))));
  return [self createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoElementND:point withOrgGeogebraCommonKernelKernelNDGeoElementND:line withOrgGeogebraCommonKernelKernelNDGeoPointND:midPoint withOrgGeogebraCommonKernelGeosGeoNumeric:length];
}

- (id<OrgGeogebraCommonKernelKernelNDGeoPointND>)ClosestPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:(id<OrgGeogebraCommonKernelKernelNDGeoPointND>)P
                                                                           withOrgGeogebraCommonKernelPath:(id<OrgGeogebraCommonKernelPath>)g {
  return OrgGeogebraCommonEuclidianTextDispatcher_ClosestPointWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelPath_(self, P, g);
}

- (void)dealloc {
  RELEASE_(l10n_);
  RELEASE_(kernel_);
  RELEASE_(view_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonKernelKernel:withOrgGeogebraCommonEuclidianEuclidianView:", "TextDispatcher", NULL, 0x1, NULL, NULL },
    { "removeUnderscoresWithNSString:", "removeUnderscores", "Ljava.lang.String;", 0xc, NULL, NULL },
    { "setNoPointLocWithOrgGeogebraCommonKernelGeosGeoText:withOrgGeogebraCommonAwtGPoint:", "setNoPointLoc", "V", 0x4, NULL, NULL },
    { "getAreaTextWithOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelGeosGeoNumberValue:withOrgGeogebraCommonAwtGPoint:", "getAreaText", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "descriptionPointsWithNSString:withOrgGeogebraCommonKernelGeosGeoPolygon:", "descriptionPoints", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "createDynamicTextWithNSString:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoElementND:", "createDynamicText", "Lorg.geogebra.common.kernel.geos.GeoText;", 0x2, NULL, NULL },
    { "createDynamicTextForMouseLocWithNSString:withOrgGeogebraCommonKernelGeosGeoElement:withOrgGeogebraCommonKernelKernelNDGeoElementND:withOrgGeogebraCommonAwtGPoint:", "createDynamicTextForMouseLoc", "Lorg.geogebra.common.kernel.geos.GeoText;", 0x4, NULL, NULL },
    { "getPointForDynamicTextWithOrgGeogebraCommonKernelRegion:withOrgGeogebraCommonAwtGPoint:", "getPointForDynamicText", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getPointForDynamicTextWithOrgGeogebraCommonKernelPath:withOrgGeogebraCommonAwtGPoint:", "getPointForDynamicText", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getPointForDynamicTextWithOrgGeogebraCommonAwtGPoint:", "getPointForDynamicText", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoElementND:withOrgGeogebraCommonKernelKernelNDGeoElementND:withOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelGeosGeoNumeric:", "createDistanceText", "Lorg.geogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND:", "makeLabelNameVisible", "V", 0xa, NULL, NULL },
    { "createCircumferenceTextWithOrgGeogebraCommonKernelKernelNDGeoConicND:withOrgGeogebraCommonAwtGPoint:", "createCircumferenceText", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "createPerimeterTextWithOrgGeogebraCommonKernelGeosGeoPolygon:withOrgGeogebraCommonAwtGPoint:", "createPerimeterText", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "createSlopeTextWithOrgGeogebraCommonKernelGeosGeoLine:withOrgGeogebraCommonAwtGPoint:", "createSlopeText", "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "createDistanceText", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoPointND:", "MidpointForDistance", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x12, NULL, NULL },
    { "createDistanceTextWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelKernelNDGeoLineND:", "createDistanceText", "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "ClosestPointWithOrgGeogebraCommonKernelKernelNDGeoPointND:withOrgGeogebraCommonKernelPath:", "ClosestPoint", "Lorg.geogebra.common.kernel.kernelND.GeoPointND;", 0x12, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "l10n_", NULL, 0x4, "Lorg.geogebra.common.main.Localization;", NULL, NULL,  },
    { "kernel_", NULL, 0x4, "Lorg.geogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "view_", NULL, 0x2, "Lorg.geogebra.common.euclidian.EuclidianView;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianTextDispatcher = { 2, "TextDispatcher", "org.geogebra.common.euclidian", NULL, 0x1, 19, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianTextDispatcher;
}

@end

void OrgGeogebraCommonEuclidianTextDispatcher_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonEuclidianTextDispatcher *self, OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonEuclidianEuclidianView *view) {
  NSObject_init(self);
  OrgGeogebraCommonEuclidianTextDispatcher_set_kernel_(self, kernel);
  OrgGeogebraCommonEuclidianTextDispatcher_set_view_(self, view);
  OrgGeogebraCommonEuclidianTextDispatcher_set_l10n_(self, [((OrgGeogebraCommonKernelKernel *) nil_chk(kernel)) getLocalization]);
}

OrgGeogebraCommonEuclidianTextDispatcher *new_OrgGeogebraCommonEuclidianTextDispatcher_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonEuclidianEuclidianView_(OrgGeogebraCommonKernelKernel *kernel, OrgGeogebraCommonEuclidianEuclidianView *view) {
  OrgGeogebraCommonEuclidianTextDispatcher *self = [OrgGeogebraCommonEuclidianTextDispatcher alloc];
  OrgGeogebraCommonEuclidianTextDispatcher_initWithOrgGeogebraCommonKernelKernel_withOrgGeogebraCommonEuclidianEuclidianView_(self, kernel, view);
  return self;
}

NSString *OrgGeogebraCommonEuclidianTextDispatcher_removeUnderscoresWithNSString_(NSString *label) {
  OrgGeogebraCommonEuclidianTextDispatcher_initialize();
  return [((NSString *) nil_chk(label)) replaceAll:@"_" withReplacement:@""];
}

NSString *OrgGeogebraCommonEuclidianTextDispatcher_descriptionPointsWithNSString_withOrgGeogebraCommonKernelGeosGeoPolygon_(OrgGeogebraCommonEuclidianTextDispatcher *self, NSString *type, OrgGeogebraCommonKernelGeosGeoPolygon *poly) {
  JavaLangStringBuilder *descText = [new_JavaLangStringBuilder_init() autorelease];
  IOSObjectArray *points = nil;
  if ([[((OrgGeogebraCommonKernelGeosGeoPolygon *) nil_chk(poly)) getParentAlgorithm] isKindOfClass:[OrgGeogebraCommonKernelAlgosAlgoPolygon class]]) {
    points = [((OrgGeogebraCommonKernelAlgosAlgoPolygon *) nil_chk(((OrgGeogebraCommonKernelAlgosAlgoPolygon *) check_class_cast([poly getParentAlgorithm], [OrgGeogebraCommonKernelAlgosAlgoPolygon class])))) getPoints];
  }
  if (points != nil) {
    [descText appendWithNSString:@" \""];
    jboolean allLabelsSet = YES;
    for (jint i = 0; i < points->size_; i++) {
      if ([((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(points, i))) isLabelSet]) {
        [descText appendWithNSString:JreStrcat("$$C", @" + Name[", [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(points, i))) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()], ']')];
      }
      else {
        allLabelsSet = NO;
        i = points->size_;
      }
    }
    if (allLabelsSet) {
      [descText appendWithNSString:@" + \""];
      for (jint i = 0; i < points->size_; i++) {
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(points, i))) setLabelVisibleWithBoolean:YES];
        [((id<OrgGeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(points, i))) updateRepaint];
      }
    }
    else {
      return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->l10n_)) getPlainWithNSString:type withNSString:JreStrcat("$$$", @"\" + Name[", [poly getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()], @"] + \"")];
    }
  }
  else {
    return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->l10n_)) getPlainWithNSString:type withNSString:JreStrcat("$$$", @"\" + Name[", [poly getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()], @"] + \"")];
  }
  return [((OrgGeogebraCommonMainLocalization *) nil_chk(self->l10n_)) getPlainWithNSString:type withNSString:[descText description]];
}

OrgGeogebraCommonKernelGeosGeoText *OrgGeogebraCommonEuclidianTextDispatcher_createDynamicTextWithNSString_withOrgGeogebraCommonKernelGeosGeoElement_withOrgGeogebraCommonKernelKernelNDGeoElementND_(OrgGeogebraCommonEuclidianTextDispatcher *self, NSString *type, OrgGeogebraCommonKernelGeosGeoElement *object, id<OrgGeogebraCommonKernelKernelNDGeoElementND> value) {
  @try {
    NSString *descText;
    if ([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(object)) isGeoPolygon]) {
      descText = OrgGeogebraCommonEuclidianTextDispatcher_descriptionPointsWithNSString_withOrgGeogebraCommonKernelGeosGeoPolygon_(self, type, (OrgGeogebraCommonKernelGeosGeoPolygon *) check_class_cast(object, [OrgGeogebraCommonKernelGeosGeoPolygon class]));
    }
    else {
      descText = [((OrgGeogebraCommonMainLocalization *) nil_chk(self->l10n_)) getPlainWithNSString:type withNSString:JreStrcat("$$$", @"\" + Name[", [object getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()], @"] + \"")];
    }
    NSString *dynText = JreStrcat("C$$$", '"', descText, @" = \" + ", [((id<OrgGeogebraCommonKernelKernelNDGeoElementND>) nil_chk(value)) getLabelWithOrgGeogebraCommonKernelStringTemplate:OrgGeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
    OrgGeogebraCommonKernelGeosGeoText *text = [((OrgGeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getAlgebraProcessor])) evaluateToTextWithNSString:dynText withBoolean:YES withBoolean:YES];
    return text;
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
    return nil;
  }
}

void OrgGeogebraCommonEuclidianTextDispatcher_makeLabelNameVisibleWithOrgGeogebraCommonKernelKernelNDGeoElementND_(id<OrgGeogebraCommonKernelKernelNDGeoElementND> geo) {
  OrgGeogebraCommonEuclidianTextDispatcher_initialize();
  if (![((id<OrgGeogebraCommonKernelKernelNDGeoElementND>) nil_chk(geo)) isLabelVisible]) {
    if ([geo getLabelMode] != OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME_VALUE) [geo setLabelModeWithInt:OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME];
    [geo setLabelVisibleWithBoolean:YES];
  }
  else {
    if ([geo getLabelMode] == OrgGeogebraCommonKernelGeosGeoElement_LABEL_VALUE) [geo setLabelModeWithInt:OrgGeogebraCommonKernelGeosGeoElement_LABEL_NAME_VALUE];
  }
}

id<OrgGeogebraCommonKernelKernelNDGeoPointND> OrgGeogebraCommonEuclidianTextDispatcher_MidpointForDistanceWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelKernelNDGeoPointND_(OrgGeogebraCommonEuclidianTextDispatcher *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, id<OrgGeogebraCommonKernelKernelNDGeoPointND> Q) {
  return (id<OrgGeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([((OrgGeogebraCommonEuclidianEuclidianControllerCompanion *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianController *) nil_chk([((OrgGeogebraCommonEuclidianEuclidianView *) nil_chk(self->view_)) getEuclidianController])) getCompanion])) midpointWithOrgGeogebraCommonKernelKernelNDGeoPointND:P withOrgGeogebraCommonKernelKernelNDGeoPointND:Q], @protocol(OrgGeogebraCommonKernelKernelNDGeoPointND));
}

id<OrgGeogebraCommonKernelKernelNDGeoPointND> OrgGeogebraCommonEuclidianTextDispatcher_ClosestPointWithOrgGeogebraCommonKernelKernelNDGeoPointND_withOrgGeogebraCommonKernelPath_(OrgGeogebraCommonEuclidianTextDispatcher *self, id<OrgGeogebraCommonKernelKernelNDGeoPointND> P, id<OrgGeogebraCommonKernelPath> g) {
  OrgGeogebraCommonKernelConstruction *cons = [((OrgGeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getConstruction];
  jboolean oldMacroMode = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) isSuppressLabelsActive];
  [cons setSuppressLabelCreationWithBoolean:YES];
  OrgGeogebraCommonKernelAlgosAlgoClosestPoint *cp = [((OrgGeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([self->kernel_ getAlgoDispatcher])) getNewAlgoClosestPointWithOrgGeogebraCommonKernelConstruction:cons withOrgGeogebraCommonKernelPath:g withOrgGeogebraCommonKernelKernelNDGeoPointND:P];
  [cons setSuppressLabelCreationWithBoolean:oldMacroMode];
  return [((OrgGeogebraCommonKernelAlgosAlgoClosestPoint *) nil_chk(cp)) getP];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianTextDispatcher)
