//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/euclidian/clipping/DoubleArrayFactory.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/euclidian/clipping/DoubleArrayFactory.h"

@interface OrgGeogebraCommonEuclidianClippingDoubleArrayFactory () {
 @public
  IOSDoubleArray *double2_;
  IOSDoubleArray *double6_;
  jboolean d2free_, d6free_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianClippingDoubleArrayFactory, double2_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonEuclidianClippingDoubleArrayFactory, double6_, IOSDoubleArray *)

@implementation OrgGeogebraCommonEuclidianClippingDoubleArrayFactory

- (IOSDoubleArray *)getArrayWithInt:(jint)size {
  if (size == 2 && d2free_) {
    d2free_ = NO;
    return double2_;
  }
  else if (size == 6 && d6free_) {
    d6free_ = NO;
    return double6_;
  }
  return [IOSDoubleArray newArrayWithLength:size];
}

- (void)putArrayWithDoubleArray:(IOSDoubleArray *)array {
  if (((IOSDoubleArray *) nil_chk(array))->size_ == 2) d2free_ = YES;
  else if (array->size_ == 6) d6free_ = YES;
}

- (instancetype)init {
  OrgGeogebraCommonEuclidianClippingDoubleArrayFactory_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getArrayWithInt:", "getArray", "[D", 0x1, NULL, NULL },
    { "putArrayWithDoubleArray:", "putArray", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "double2_", NULL, 0x2, "[D", NULL, NULL,  },
    { "double6_", NULL, 0x2, "[D", NULL, NULL,  },
    { "d2free_", NULL, 0x2, "Z", NULL, NULL,  },
    { "d6free_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonEuclidianClippingDoubleArrayFactory = { 2, "DoubleArrayFactory", "org.geogebra.common.euclidian.clipping", NULL, 0x11, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonEuclidianClippingDoubleArrayFactory;
}

@end

void OrgGeogebraCommonEuclidianClippingDoubleArrayFactory_init(OrgGeogebraCommonEuclidianClippingDoubleArrayFactory *self) {
  (void) NSObject_init(self);
  self->double2_ = [IOSDoubleArray newArrayWithLength:2];
  self->double6_ = [IOSDoubleArray newArrayWithLength:6];
  self->d2free_ = YES;
  self->d6free_ = YES;
}

OrgGeogebraCommonEuclidianClippingDoubleArrayFactory *new_OrgGeogebraCommonEuclidianClippingDoubleArrayFactory_init() {
  OrgGeogebraCommonEuclidianClippingDoubleArrayFactory *self = [OrgGeogebraCommonEuclidianClippingDoubleArrayFactory alloc];
  OrgGeogebraCommonEuclidianClippingDoubleArrayFactory_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonEuclidianClippingDoubleArrayFactory)
