//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/euclidian/clipping/ClipLine.java
//

#ifndef _OrgGeogebraCommonEuclidianClippingClipLine_H_
#define _OrgGeogebraCommonEuclidianClippingClipLine_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;

#define OrgGeogebraCommonEuclidianClippingClipLine_LEFT 1
#define OrgGeogebraCommonEuclidianClippingClipLine_H_CENTER 2
#define OrgGeogebraCommonEuclidianClippingClipLine_RIGHT 4
#define OrgGeogebraCommonEuclidianClippingClipLine_BELOW 16
#define OrgGeogebraCommonEuclidianClippingClipLine_V_CENTER 32
#define OrgGeogebraCommonEuclidianClippingClipLine_ABOVE 64
#define OrgGeogebraCommonEuclidianClippingClipLine_INSIDE 34
#define OrgGeogebraCommonEuclidianClippingClipLine_OUTSIDE 85

@interface OrgGeogebraCommonEuclidianClippingClipLine : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSObjectArray *)getClippedWithDouble:(jdouble)x1
                              withDouble:(jdouble)y1
                              withDouble:(jdouble)x2
                              withDouble:(jdouble)y2
                                 withInt:(jint)xmin
                                 withInt:(jint)xmax
                                 withInt:(jint)ymin
                                 withInt:(jint)ymax;

#pragma mark Protected

+ (IOSObjectArray *)getClippedWithDouble:(jdouble)x1
                              withDouble:(jdouble)y1
                                 withInt:(jint)mask1
                              withDouble:(jdouble)x2
                              withDouble:(jdouble)y2
                                 withInt:(jint)mask2
                              withDouble:(jdouble)xmin
                              withDouble:(jdouble)xmax
                              withDouble:(jdouble)ymin
                              withDouble:(jdouble)ymax;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonEuclidianClippingClipLine)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, LEFT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, H_CENTER, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, RIGHT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, BELOW, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, V_CENTER, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, ABOVE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, INSIDE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonEuclidianClippingClipLine, OUTSIDE, jint)

FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonEuclidianClippingClipLine_getClippedWithDouble_withDouble_withDouble_withDouble_withInt_withInt_withInt_withInt_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jint xmin, jint xmax, jint ymin, jint ymax);

FOUNDATION_EXPORT IOSObjectArray *OrgGeogebraCommonEuclidianClippingClipLine_getClippedWithDouble_withDouble_withInt_withDouble_withDouble_withInt_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jint mask1, jdouble x2, jdouble y2, jint mask2, jdouble xmin, jdouble xmax, jdouble ymin, jdouble ymax);

FOUNDATION_EXPORT void OrgGeogebraCommonEuclidianClippingClipLine_init(OrgGeogebraCommonEuclidianClippingClipLine *self);

FOUNDATION_EXPORT OrgGeogebraCommonEuclidianClippingClipLine *new_OrgGeogebraCommonEuclidianClippingClipLine_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonEuclidianClippingClipLine)

#endif // _OrgGeogebraCommonEuclidianClippingClipLine_H_
