//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/util/opencsv/CSVParser.java
//

#ifndef _OrgGeogebraCommonUtilOpencsvCSVParser_H_
#define _OrgGeogebraCommonUtilOpencsvCSVParser_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@protocol JavaLangCharSequence;

#define OrgGeogebraCommonUtilOpencsvCSVParser_DEFAULT_SEPARATOR ','
#define OrgGeogebraCommonUtilOpencsvCSVParser_INITIAL_READ_SIZE 128
#define OrgGeogebraCommonUtilOpencsvCSVParser_DEFAULT_QUOTE_CHARACTER '"'
#define OrgGeogebraCommonUtilOpencsvCSVParser_DEFAULT_ESCAPE_CHARACTER '\\'
#define OrgGeogebraCommonUtilOpencsvCSVParser_DEFAULT_STRICT_QUOTES NO
#define OrgGeogebraCommonUtilOpencsvCSVParser_DEFAULT_IGNORE_LEADING_WHITESPACE YES
#define OrgGeogebraCommonUtilOpencsvCSVParser_DEFAULT_IGNORE_QUOTATIONS NO
#define OrgGeogebraCommonUtilOpencsvCSVParser_NULL_CHARACTER 0x0000

@interface OrgGeogebraCommonUtilOpencsvCSVParser : NSObject {
 @public
  jchar separator_;
  jchar quotechar_;
  jchar escape_;
  jboolean strictQuotes_;
  jboolean ignoreLeadingWhiteSpace_;
  jboolean ignoreQuotations_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithChar:(jchar)separator;

- (instancetype)initWithChar:(jchar)separator
                    withChar:(jchar)quotechar;

- (instancetype)initWithChar:(jchar)separator
                    withChar:(jchar)quotechar
                    withChar:(jchar)escape;

- (instancetype)initWithChar:(jchar)separator
                    withChar:(jchar)quotechar
                    withChar:(jchar)escape
                 withBoolean:(jboolean)strictQuotes;

- (instancetype)initWithChar:(jchar)separator
                    withChar:(jchar)quotechar
                    withChar:(jchar)escape
                 withBoolean:(jboolean)strictQuotes
                 withBoolean:(jboolean)ignoreLeadingWhiteSpace;

- (instancetype)initWithChar:(jchar)separator
                    withChar:(jchar)quotechar
                    withChar:(jchar)escape
                 withBoolean:(jboolean)strictQuotes
                 withBoolean:(jboolean)ignoreLeadingWhiteSpace
                 withBoolean:(jboolean)ignoreQuotations;

- (jboolean)isPending;

- (IOSObjectArray *)parseLineWithNSString:(NSString *)nextLine;

- (IOSObjectArray *)parseLineMultiWithNSString:(NSString *)nextLine;

#pragma mark Protected

- (jboolean)isAllWhiteSpaceWithJavaLangCharSequence:(id<JavaLangCharSequence>)sb;

- (jboolean)isNextCharacterEscapableWithNSString:(NSString *)nextLine
                                     withBoolean:(jboolean)inQuotes
                                         withInt:(jint)i;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonUtilOpencsvCSVParser)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, DEFAULT_SEPARATOR, jchar)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, INITIAL_READ_SIZE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, DEFAULT_QUOTE_CHARACTER, jchar)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, DEFAULT_ESCAPE_CHARACTER, jchar)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, DEFAULT_STRICT_QUOTES, jboolean)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, DEFAULT_IGNORE_LEADING_WHITESPACE, jboolean)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, DEFAULT_IGNORE_QUOTATIONS, jboolean)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilOpencsvCSVParser, NULL_CHARACTER, jchar)

FOUNDATION_EXPORT void OrgGeogebraCommonUtilOpencsvCSVParser_init(OrgGeogebraCommonUtilOpencsvCSVParser *self);

FOUNDATION_EXPORT OrgGeogebraCommonUtilOpencsvCSVParser *new_OrgGeogebraCommonUtilOpencsvCSVParser_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_(OrgGeogebraCommonUtilOpencsvCSVParser *self, jchar separator);

FOUNDATION_EXPORT OrgGeogebraCommonUtilOpencsvCSVParser *new_OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_(jchar separator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_(OrgGeogebraCommonUtilOpencsvCSVParser *self, jchar separator, jchar quotechar);

FOUNDATION_EXPORT OrgGeogebraCommonUtilOpencsvCSVParser *new_OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_(jchar separator, jchar quotechar) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_(OrgGeogebraCommonUtilOpencsvCSVParser *self, jchar separator, jchar quotechar, jchar escape);

FOUNDATION_EXPORT OrgGeogebraCommonUtilOpencsvCSVParser *new_OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_(jchar separator, jchar quotechar, jchar escape) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_withBoolean_(OrgGeogebraCommonUtilOpencsvCSVParser *self, jchar separator, jchar quotechar, jchar escape, jboolean strictQuotes);

FOUNDATION_EXPORT OrgGeogebraCommonUtilOpencsvCSVParser *new_OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_withBoolean_(jchar separator, jchar quotechar, jchar escape, jboolean strictQuotes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_withBoolean_withBoolean_(OrgGeogebraCommonUtilOpencsvCSVParser *self, jchar separator, jchar quotechar, jchar escape, jboolean strictQuotes, jboolean ignoreLeadingWhiteSpace);

FOUNDATION_EXPORT OrgGeogebraCommonUtilOpencsvCSVParser *new_OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_withBoolean_withBoolean_(jchar separator, jchar quotechar, jchar escape, jboolean strictQuotes, jboolean ignoreLeadingWhiteSpace) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_withBoolean_withBoolean_withBoolean_(OrgGeogebraCommonUtilOpencsvCSVParser *self, jchar separator, jchar quotechar, jchar escape, jboolean strictQuotes, jboolean ignoreLeadingWhiteSpace, jboolean ignoreQuotations);

FOUNDATION_EXPORT OrgGeogebraCommonUtilOpencsvCSVParser *new_OrgGeogebraCommonUtilOpencsvCSVParser_initWithChar_withChar_withChar_withBoolean_withBoolean_withBoolean_(jchar separator, jchar quotechar, jchar escape, jboolean strictQuotes, jboolean ignoreLeadingWhiteSpace, jboolean ignoreQuotations) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonUtilOpencsvCSVParser)

#endif // _OrgGeogebraCommonUtilOpencsvCSVParser_H_
