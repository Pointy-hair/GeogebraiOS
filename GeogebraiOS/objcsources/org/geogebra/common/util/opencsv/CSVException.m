//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/util/opencsv/CSVException.java
//


#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/geogebra/common/util/opencsv/CSVException.h"

@implementation OrgGeogebraCommonUtilOpencsvCSVException

- (instancetype)initWithNSString:(NSString *)s {
  OrgGeogebraCommonUtilOpencsvCSVException_initWithNSString_(self, s);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "CSVException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilOpencsvCSVException = { 2, "CSVException", "org.geogebra.common.util.opencsv", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonUtilOpencsvCSVException;
}

@end

void OrgGeogebraCommonUtilOpencsvCSVException_initWithNSString_(OrgGeogebraCommonUtilOpencsvCSVException *self, NSString *s) {
  JavaLangException_initWithNSString_(self, s);
}

OrgGeogebraCommonUtilOpencsvCSVException *new_OrgGeogebraCommonUtilOpencsvCSVException_initWithNSString_(NSString *s) {
  OrgGeogebraCommonUtilOpencsvCSVException *self = [OrgGeogebraCommonUtilOpencsvCSVException alloc];
  OrgGeogebraCommonUtilOpencsvCSVException_initWithNSString_(self, s);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilOpencsvCSVException)
