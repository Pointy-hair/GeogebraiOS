//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/util/Language.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/util/Country.h"
#include "org/geogebra/common/util/Language.h"
#include "org/geogebra/common/util/StringUtil.h"
#include "org/geogebra/common/util/Unicode.h"
#include "org/geogebra/common/util/debug/Log.h"

@interface OrgGeogebraCommonUtilLanguageEnum () {
 @public
  NSString *currency_;
}

+ (OrgGeogebraCommonUtilLanguageEnum *)getLanguageWithNSString:(NSString *)language;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonUtilLanguageEnum, currency_, NSString *)

static NSString *OrgGeogebraCommonUtilLanguageEnum_countryFromGeoIP_ = nil;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilLanguageEnum, countryFromGeoIP_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonUtilLanguageEnum, countryFromGeoIP_, NSString *)

__attribute__((unused)) static void OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilLanguageEnum *self, NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, IOSObjectArray *countries, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonUtilLanguageEnum *new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, IOSObjectArray *countries, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(OrgGeogebraCommonUtilLanguageEnum *self, NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, NSString *flagName, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonUtilLanguageEnum *new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, NSString *flagName, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgGeogebraCommonUtilLanguageEnum *OrgGeogebraCommonUtilLanguageEnum_getLanguageWithNSString_(NSString *language);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonUtilLanguageEnum)

OrgGeogebraCommonUtilLanguageEnum *OrgGeogebraCommonUtilLanguageEnum_values_[68];

@implementation OrgGeogebraCommonUtilLanguageEnum

- (instancetype)initWithNSString:(NSString *)currency
                    withNSString:(NSString *)testChar
                     withBoolean:(jboolean)fullyTranslated
                    withNSString:(NSString *)locale
                    withNSString:(NSString *)localeGWT
                    withNSString:(NSString *)name
withOrgGeogebraCommonUtilCountryEnumArray:(IOSObjectArray *)countries
                    withNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(self, currency, testChar, fullyTranslated, locale, localeGWT, name, countries, __name, __ordinal);
  return self;
}

- (instancetype)initWithNSString:(NSString *)currency
                    withNSString:(NSString *)testChar
                     withBoolean:(jboolean)fullyTranslated
                    withNSString:(NSString *)locale
                    withNSString:(NSString *)localeGWT
                    withNSString:(NSString *)name
                    withNSString:(NSString *)flagName
                    withNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(self, currency, testChar, fullyTranslated, locale, localeGWT, name, flagName, __name, __ordinal);
  return self;
}

+ (NSString *)getCountryWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app
                                        withNSString:(NSString *)language
                                        withNSString:(NSString *)country
                                         withBoolean:(jboolean)useGeoIP {
  return OrgGeogebraCommonUtilLanguageEnum_getCountryWithOrgGeogebraCommonMainApp_withNSString_withNSString_withBoolean_(app, language, country, useGeoIP);
}

+ (OrgGeogebraCommonUtilLanguageEnum *)getLanguageWithNSString:(NSString *)language {
  return OrgGeogebraCommonUtilLanguageEnum_getLanguageWithNSString_(language);
}

+ (NSString *)getDisplayNameWithNSString:(NSString *)ggbLangCode {
  return OrgGeogebraCommonUtilLanguageEnum_getDisplayNameWithNSString_(ggbLangCode);
}

+ (NSString *)getTestCharWithNSString:(NSString *)language {
  return OrgGeogebraCommonUtilLanguageEnum_getTestCharWithNSString_(language);
}

+ (NSString *)getClosestGWTSupportedLanguageWithNSString:(NSString *)browserLangCode {
  return OrgGeogebraCommonUtilLanguageEnum_getClosestGWTSupportedLanguageWithNSString_(browserLangCode);
}

+ (NSString *)getCurrencyWithNSString:(NSString *)language {
  return OrgGeogebraCommonUtilLanguageEnum_getCurrencyWithNSString_(language);
}

IOSObjectArray *OrgGeogebraCommonUtilLanguageEnum_values() {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonUtilLanguageEnum_values_ count:68 type:OrgGeogebraCommonUtilLanguageEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonUtilLanguageEnum_values();
}

+ (OrgGeogebraCommonUtilLanguageEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonUtilLanguageEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonUtilLanguageEnum *OrgGeogebraCommonUtilLanguageEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  for (int i = 0; i < 68; i++) {
    OrgGeogebraCommonUtilLanguageEnum *e = OrgGeogebraCommonUtilLanguageEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonUtilLanguageEnum class]) {
    OrgGeogebraCommonUtilLanguageEnum_Armenian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, @"\u0570", YES, @"hy", @"hy", @"Armenian / \u0540\u0561\u0575\u0565\u0580\u0565\u0576", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Armenia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Armenian", 0);
    OrgGeogebraCommonUtilLanguageEnum_Albanian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"sq", @"sq", @"Albanian / Gjuha Shqipe", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Albania() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Albanian", 1);
    OrgGeogebraCommonUtilLanguageEnum_Arabic = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"ar", @"ar", JreStrcat("C$C$C$C", OrgGeogebraCommonUtilUnicode_LeftToRightMark, @"Arabic", OrgGeogebraCommonUtilUnicode_LeftToRightMark, @" / ", OrgGeogebraCommonUtilUnicode_RightToLeftMark, @"\u0627\u0644\u0639\u0631\u0628\u064a\u0629", OrgGeogebraCommonUtilUnicode_RightToLeftMark), [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Egypt(), OrgGeogebraCommonUtilCountryEnum_get_Algeria(), OrgGeogebraCommonUtilCountryEnum_get_Bahrain(), OrgGeogebraCommonUtilCountryEnum_get_Chad(), OrgGeogebraCommonUtilCountryEnum_get_Comoros(), OrgGeogebraCommonUtilCountryEnum_get_Djibouti(), OrgGeogebraCommonUtilCountryEnum_get_Eritrea(), OrgGeogebraCommonUtilCountryEnum_get_Iraq(), OrgGeogebraCommonUtilCountryEnum_get_Jordan(), OrgGeogebraCommonUtilCountryEnum_get_Kuwait(), OrgGeogebraCommonUtilCountryEnum_get_Lebanon(), OrgGeogebraCommonUtilCountryEnum_get_Libya(), OrgGeogebraCommonUtilCountryEnum_get_Mauritania(), OrgGeogebraCommonUtilCountryEnum_get_Oman(), OrgGeogebraCommonUtilCountryEnum_get_Palestine(), OrgGeogebraCommonUtilCountryEnum_get_Qatar(), OrgGeogebraCommonUtilCountryEnum_get_SaudiArabia(), OrgGeogebraCommonUtilCountryEnum_get_Somalia(), OrgGeogebraCommonUtilCountryEnum_get_Sudan(), OrgGeogebraCommonUtilCountryEnum_get_Syria(), OrgGeogebraCommonUtilCountryEnum_get_UnitedArabEmirates(), OrgGeogebraCommonUtilCountryEnum_get_WesternSahara(), OrgGeogebraCommonUtilCountryEnum_get_Yemen() } count:23 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Arabic", 2);
    OrgGeogebraCommonUtilLanguageEnum_Arabic_Morocco = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"arMA", @"ar_MA", JreStrcat("C$C$C$C", OrgGeogebraCommonUtilUnicode_LeftToRightMark, @"Arabic (Morocco)", OrgGeogebraCommonUtilUnicode_LeftToRightMark, @" / ", OrgGeogebraCommonUtilUnicode_RightToLeftMark, @"\u0627\u0644\u0639\u0631\u0628\u064a\u0629 (\u0627\u0644\u0645\u063a\u0631\u0628)", OrgGeogebraCommonUtilUnicode_RightToLeftMark), [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Morocco() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Arabic_Morocco", 3);
    OrgGeogebraCommonUtilLanguageEnum_Arabic_Tunisia = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"arTN", @"ar_TN", JreStrcat("C$C$C$C", OrgGeogebraCommonUtilUnicode_LeftToRightMark, @"Arabic (Tunisia)", OrgGeogebraCommonUtilUnicode_LeftToRightMark, @" / ", OrgGeogebraCommonUtilUnicode_RightToLeftMark, @"\u0627\u0644\u0639\u0631\u0628\u064a\u0629 (\u062a\u0648\u0646\u0633)", OrgGeogebraCommonUtilUnicode_RightToLeftMark), [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Tunisia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Arabic_Tunisia", 4);
    OrgGeogebraCommonUtilLanguageEnum_Basque = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"eu", @"eu", @"Basque / Euskara", @"basque", @"Basque", 5);
    OrgGeogebraCommonUtilLanguageEnum_Bosnian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"bs", @"bs", @"Bosnian / \u0431\u043e\u0441\u0430\u043d\u0441\u043a\u0438", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_BosniaandHerzegovina() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Bosnian", 6);
    OrgGeogebraCommonUtilLanguageEnum_Bulgarian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"bg", @"bg", @"Bulgarian / \u0431\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438 \u0435\u0437\u0438\u043a", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Bulgaria() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Bulgarian", 7);
    OrgGeogebraCommonUtilLanguageEnum_Catalan = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"ca", @"ca", @"Catalan / Catal\u00e0", @"catalonia", @"Catalan", 8);
    OrgGeogebraCommonUtilLanguageEnum_Valencian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"caXV", @"ca_XV", @"Catalan (Valencia) / Catal\u00e0 (Valenci\u00e0)", @"valencia", @"Valencian", 9);
    OrgGeogebraCommonUtilLanguageEnum_Chinese_Simplified = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, @"\u984f", YES, @"zhCN", @"zh_CN", @"Chinese Simplified / \u7b80\u4f53\u4e2d\u6587", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_China(), OrgGeogebraCommonUtilCountryEnum_get_Singapore() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Chinese_Simplified", 10);
    OrgGeogebraCommonUtilLanguageEnum_Chinese_Traditional = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, @"\u984f", YES, @"zhTW", @"zh_TW", @"Chinese Traditional / \u7e41\u9ad4\u4e2d\u6587", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_TaiwanProvinceofChina() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Chinese_Traditional", 11);
    OrgGeogebraCommonUtilLanguageEnum_Croatian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"hr", @"hr", @"Croatian / Hrvatska", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Croatia(), OrgGeogebraCommonUtilCountryEnum_get_BosniaandHerzegovina() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Croatian", 12);
    OrgGeogebraCommonUtilLanguageEnum_Czech = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"cs", @"cs", @"Czech / \u010ce\u0161tina", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_CzechRepublic() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Czech", 13);
    OrgGeogebraCommonUtilLanguageEnum_Danish = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"da", @"da", @"Danish / Dansk", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Denmark() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Danish", 14);
    OrgGeogebraCommonUtilLanguageEnum_Dutch = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"nl", @"nl", @"Dutch / Nederlands (The Netherlands)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Netherlands(), OrgGeogebraCommonUtilCountryEnum_get_Suriname() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Dutch", 15);
    OrgGeogebraCommonUtilLanguageEnum_Dutch_Belgium = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"nlBE", @"nl_BE", @"Dutch / Nederlands (Belgium)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Belgium() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Dutch_Belgium", 16);
    OrgGeogebraCommonUtilLanguageEnum_English_US = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_DOLLAR_(), nil, YES, @"en", @"en", @"English (US)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_UnitedStatesofAmerica(), OrgGeogebraCommonUtilCountryEnum_get_AntiguaBarbuda(), OrgGeogebraCommonUtilCountryEnum_get_Bahamas(), OrgGeogebraCommonUtilCountryEnum_get_Barbados(), OrgGeogebraCommonUtilCountryEnum_get_Belize(), OrgGeogebraCommonUtilCountryEnum_get_Botswana(), OrgGeogebraCommonUtilCountryEnum_get_Cameroon(), OrgGeogebraCommonUtilCountryEnum_get_Canada(), OrgGeogebraCommonUtilCountryEnum_get_Dominica(), OrgGeogebraCommonUtilCountryEnum_get_Eritrea(), OrgGeogebraCommonUtilCountryEnum_get_Ethiopia(), OrgGeogebraCommonUtilCountryEnum_get_Fiji(), OrgGeogebraCommonUtilCountryEnum_get_Gambia(), OrgGeogebraCommonUtilCountryEnum_get_Ghana(), OrgGeogebraCommonUtilCountryEnum_get_Grenada(), OrgGeogebraCommonUtilCountryEnum_get_Guyana(), OrgGeogebraCommonUtilCountryEnum_get_India(), OrgGeogebraCommonUtilCountryEnum_get_Ireland(), OrgGeogebraCommonUtilCountryEnum_get_Jamaica(), OrgGeogebraCommonUtilCountryEnum_get_Kenya(), OrgGeogebraCommonUtilCountryEnum_get_Kiribati(), OrgGeogebraCommonUtilCountryEnum_get_Netherlands(), OrgGeogebraCommonUtilCountryEnum_get_Lesotho(), OrgGeogebraCommonUtilCountryEnum_get_Liberia(), OrgGeogebraCommonUtilCountryEnum_get_Malawi(), OrgGeogebraCommonUtilCountryEnum_get_Malta(), OrgGeogebraCommonUtilCountryEnum_get_MarshallIslands(), OrgGeogebraCommonUtilCountryEnum_get_Mauritius(), OrgGeogebraCommonUtilCountryEnum_get_Micronesia(), OrgGeogebraCommonUtilCountryEnum_get_Namibia(), OrgGeogebraCommonUtilCountryEnum_get_Nauru(), OrgGeogebraCommonUtilCountryEnum_get_Nigeria(), OrgGeogebraCommonUtilCountryEnum_get_Pakistan(), OrgGeogebraCommonUtilCountryEnum_get_Palau(), OrgGeogebraCommonUtilCountryEnum_get_PapuaNewGuinea(), OrgGeogebraCommonUtilCountryEnum_get_Philippines(), OrgGeogebraCommonUtilCountryEnum_get_Rwanda(), OrgGeogebraCommonUtilCountryEnum_get_StKittsandNevis(), OrgGeogebraCommonUtilCountryEnum_get_SaintLucia(), OrgGeogebraCommonUtilCountryEnum_get_StVincenttheGrenadines(), OrgGeogebraCommonUtilCountryEnum_get_Samoa(), OrgGeogebraCommonUtilCountryEnum_get_Seychelles(), OrgGeogebraCommonUtilCountryEnum_get_SierraLeone(), OrgGeogebraCommonUtilCountryEnum_get_Singapore(), OrgGeogebraCommonUtilCountryEnum_get_SolomonIslands(), OrgGeogebraCommonUtilCountryEnum_get_SouthAfrica(), OrgGeogebraCommonUtilCountryEnum_get_SouthSudan(), OrgGeogebraCommonUtilCountryEnum_get_Sudan(), OrgGeogebraCommonUtilCountryEnum_get_Swaziland(), OrgGeogebraCommonUtilCountryEnum_get_Tanzania(), OrgGeogebraCommonUtilCountryEnum_get_Tonga(), OrgGeogebraCommonUtilCountryEnum_get_TrinidadTobago(), OrgGeogebraCommonUtilCountryEnum_get_Tuvalu(), OrgGeogebraCommonUtilCountryEnum_get_Uganda(), OrgGeogebraCommonUtilCountryEnum_get_Vanuatu(), OrgGeogebraCommonUtilCountryEnum_get_Zambia(), OrgGeogebraCommonUtilCountryEnum_get_Zimbabwe() } count:57 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"English_US", 17);
    OrgGeogebraCommonUtilLanguageEnum_English_UK = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_POUND_(), nil, YES, @"enGB", @"en_GB", @"English (UK)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_UnitedKingdom() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"English_UK", 18);
    OrgGeogebraCommonUtilLanguageEnum_English_Australia = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_DOLLAR_(), nil, YES, @"enAU", @"en_AU", @"English (Australia)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Australia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"English_Australia", 19);
    OrgGeogebraCommonUtilLanguageEnum_Estonian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"et", @"et", @"Estonian / Eesti keel", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Estonia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Estonian", 20);
    OrgGeogebraCommonUtilLanguageEnum_Filipino = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"tl", @"tl", @"Filipino", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Philippines() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Filipino", 21);
    OrgGeogebraCommonUtilLanguageEnum_Finnish = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"fi", @"fi", @"Finnish / Suomi", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Finland() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Finnish", 22);
    OrgGeogebraCommonUtilLanguageEnum_French = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"fr", @"fr", @"French / Fran\u00e7ais", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_France(), OrgGeogebraCommonUtilCountryEnum_get_CongoDemocraticRepublicOf(), OrgGeogebraCommonUtilCountryEnum_get_Canada(), OrgGeogebraCommonUtilCountryEnum_get_Madagascar(), OrgGeogebraCommonUtilCountryEnum_get_Cameroon(), OrgGeogebraCommonUtilCountryEnum_get_CoteDivoire(), OrgGeogebraCommonUtilCountryEnum_get_BurkinaFaso(), OrgGeogebraCommonUtilCountryEnum_get_Niger(), OrgGeogebraCommonUtilCountryEnum_get_Senegal(), OrgGeogebraCommonUtilCountryEnum_get_Mali(), OrgGeogebraCommonUtilCountryEnum_get_Rwanda(), OrgGeogebraCommonUtilCountryEnum_get_Belgium(), OrgGeogebraCommonUtilCountryEnum_get_Guinea(), OrgGeogebraCommonUtilCountryEnum_get_Chad(), OrgGeogebraCommonUtilCountryEnum_get_Haiti(), OrgGeogebraCommonUtilCountryEnum_get_Burundi(), OrgGeogebraCommonUtilCountryEnum_get_Benin(), OrgGeogebraCommonUtilCountryEnum_get_Switzerland(), OrgGeogebraCommonUtilCountryEnum_get_Togo(), OrgGeogebraCommonUtilCountryEnum_get_CentralAfricanRepublic(), OrgGeogebraCommonUtilCountryEnum_get_Congo(), OrgGeogebraCommonUtilCountryEnum_get_Gabon(), OrgGeogebraCommonUtilCountryEnum_get_Comoros(), OrgGeogebraCommonUtilCountryEnum_get_EquatorialGuinea(), OrgGeogebraCommonUtilCountryEnum_get_Djibouti(), OrgGeogebraCommonUtilCountryEnum_get_Luxembourg(), OrgGeogebraCommonUtilCountryEnum_get_Vanuatu(), OrgGeogebraCommonUtilCountryEnum_get_Seychelles(), OrgGeogebraCommonUtilCountryEnum_get_Monaco() } count:29 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"French", 23);
    OrgGeogebraCommonUtilLanguageEnum_Galician = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"gl", @"gl", @"Galician / Galego", @"Galician", @"Galician", 24);
    OrgGeogebraCommonUtilLanguageEnum_Georgian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, @"\u10d8", YES, @"ka", @"ka", @"Georgian / \u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8 \u10d4\u10dc\u10d0", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Georgia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Georgian", 25);
    OrgGeogebraCommonUtilLanguageEnum_German = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"de", @"de", @"German / Deutsch", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Germany(), OrgGeogebraCommonUtilCountryEnum_get_Liechtenstein(), OrgGeogebraCommonUtilCountryEnum_get_Luxembourg(), OrgGeogebraCommonUtilCountryEnum_get_Switzerland(), OrgGeogebraCommonUtilCountryEnum_get_Belgium() } count:5 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"German", 26);
    OrgGeogebraCommonUtilLanguageEnum_German_Austria = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"deAT", @"de_AT", @"German (Austria) / Deutsch (\u00d6sterreich)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Austria() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"German_Austria", 27);
    OrgGeogebraCommonUtilLanguageEnum_Greek = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"el", @"el", @"Greek / \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Greece(), OrgGeogebraCommonUtilCountryEnum_get_Cyprus() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Greek", 28);
    OrgGeogebraCommonUtilLanguageEnum_Hebrew = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_SHEKEL_(), @"\u05d9", YES, @"iw", @"iw", @"Hebrew / \u05e2\u05b4\u05d1\u05b0\u05e8\u05b4\u05d9\u05ea", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Israel() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Hebrew", 29);
    OrgGeogebraCommonUtilLanguageEnum_Hindi = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_INDIAN_RUPEE_(), @"\u0be7", YES, @"hi", @"hi", @"Hindi / \u092e\u093e\u0928\u0915 \u0939\u093f\u0928\u094d\u0926\u0940", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_India() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Hindi", 30);
    OrgGeogebraCommonUtilLanguageEnum_Hungarian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"hu", @"hu", @"Hungarian / Magyar", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Hungary() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Hungarian", 31);
    OrgGeogebraCommonUtilLanguageEnum_Icelandic = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"is", @"is", @"Icelandic / \u00cdslenska", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Iceland() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Icelandic", 32);
    OrgGeogebraCommonUtilLanguageEnum_Indonesian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"in", @"in", @"Indonesian / Bahasa Indonesia", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Indonesia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Indonesian", 33);
    OrgGeogebraCommonUtilLanguageEnum_Italian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"it", @"it", @"Italian / Italiano", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Italy(), OrgGeogebraCommonUtilCountryEnum_get_Switzerland(), OrgGeogebraCommonUtilCountryEnum_get_SanMarino(), OrgGeogebraCommonUtilCountryEnum_get_VaticanCityState() } count:4 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Italian", 34);
    OrgGeogebraCommonUtilLanguageEnum_Japanese = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_YEN_(), @"\uff9d", YES, @"ja", @"ja", @"Japanese / \u65e5\u672c\u8a9e", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Japan() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Japanese", 35);
    OrgGeogebraCommonUtilLanguageEnum_Kazakh = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"kk", @"kk", @"Kazakh / \u049a\u0430\u0437\u0430\u049b \u0442\u0456\u043b\u0456", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Kazakhstan() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Kazakh", 36);
    OrgGeogebraCommonUtilLanguageEnum_Korean = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_WON_(), @"\u1103", YES, @"ko", @"ko", @"Korean / \ud55c\uad6d\ub9d0", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_KoreaRepublicof(), OrgGeogebraCommonUtilCountryEnum_get_KoreaDemocraticPeoplesRepublicof() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Korean", 37);
    OrgGeogebraCommonUtilLanguageEnum_Latvian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"lv", @"lv", @"Latvian / Latvie\u0161u valoda", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Latvia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Latvian", 38);
    OrgGeogebraCommonUtilLanguageEnum_Lithuanian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"lt", @"lt", @"Lithuanian / Lietuvi\u0173 kalba", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Lithuania() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Lithuanian", 39);
    OrgGeogebraCommonUtilLanguageEnum_Malay = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"ms", @"ms", @"Malay / Bahasa Malaysia", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Malaysia(), OrgGeogebraCommonUtilCountryEnum_get_Singapore(), OrgGeogebraCommonUtilCountryEnum_get_Indonesia(), OrgGeogebraCommonUtilCountryEnum_get_BruneiDarussalam() } count:4 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Malay", 40);
    OrgGeogebraCommonUtilLanguageEnum_Macedonian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"mk", @"mk", @"Macedonian / \u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438 \u0458\u0430\u0437\u0438\u043a", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Macedonia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Macedonian", 41);
    OrgGeogebraCommonUtilLanguageEnum_Mongolian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_TUGHRIK_(), nil, YES, @"mn", @"mn", @"Mongolian / \u041c\u043e\u043d\u0433\u043e\u043b \u0445\u044d\u043b", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Mongolia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Mongolian", 42);
    OrgGeogebraCommonUtilLanguageEnum_Nepalese = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_RUPEE_(), @"\u0947", YES, @"ne", @"ne", @"Nepalese / \u0928\u0947\u092a\u093e\u0932\u0940", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Nepal() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Nepalese", 43);
    OrgGeogebraCommonUtilLanguageEnum_Norwegian_Bokmal = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"noNO", @"no_NB", @"Norwegian / Bokm\u00e5l", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Norway() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Norwegian_Bokmal", 44);
    OrgGeogebraCommonUtilLanguageEnum_Norwegian_Nynorsk = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"noNONY", @"no_NN", @"Norwegian / Nynorsk", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Norway() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Norwegian_Nynorsk", 45);
    OrgGeogebraCommonUtilLanguageEnum_Persian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"fa", @"fa", @"Persian / \u0641\u0627\u0631\u0633\u06cc", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_IranIslamicRepublicof(), OrgGeogebraCommonUtilCountryEnum_get_Afghanistan(), OrgGeogebraCommonUtilCountryEnum_get_Tajikistan() } count:3 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Persian", 46);
    OrgGeogebraCommonUtilLanguageEnum_Polish = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"pl", @"pl", @"Polish / J\u0119zyk polski", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Poland() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Polish", 47);
    OrgGeogebraCommonUtilLanguageEnum_Portuguese_Brazil = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"pt", @"pt", @"Portuguese (Brazil) / Portugu\u00eas (Brasil)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Brazil() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Portuguese_Brazil", 48);
    OrgGeogebraCommonUtilLanguageEnum_Portuguese_Portugal = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"ptPT", @"pt_PT", @"Portuguese (Portugal) / Portugu\u00eas (Portugal)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Portugal(), OrgGeogebraCommonUtilCountryEnum_get_Mozambique(), OrgGeogebraCommonUtilCountryEnum_get_Angola(), OrgGeogebraCommonUtilCountryEnum_get_CapeVerde(), OrgGeogebraCommonUtilCountryEnum_get_GuineaBissau(), OrgGeogebraCommonUtilCountryEnum_get_SaoTomePrincipe(), OrgGeogebraCommonUtilCountryEnum_get_Macau(), OrgGeogebraCommonUtilCountryEnum_get_EastTimor() } count:8 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Portuguese_Portugal", 49);
    OrgGeogebraCommonUtilLanguageEnum_Romanian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"ro", @"ro", @"Romanian /  Rom\u00e2n\u0103", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Romania(), OrgGeogebraCommonUtilCountryEnum_get_MoldovaRepublicof() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Romanian", 50);
    OrgGeogebraCommonUtilLanguageEnum_Russian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, @"\u0439", YES, @"ru", @"ru", @"Russian / \u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_RussianFederation(), OrgGeogebraCommonUtilCountryEnum_get_Kazakhstan(), OrgGeogebraCommonUtilCountryEnum_get_Belarus(), OrgGeogebraCommonUtilCountryEnum_get_Kyrgyzstan(), OrgGeogebraCommonUtilCountryEnum_get_Tajikistan() } count:5 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Russian", 51);
    OrgGeogebraCommonUtilLanguageEnum_Sinhala = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_RUPEE_(), @"\u0d9a", YES, @"si", @"si", @"Sinhala / \u0dc3\u0dd2\u0d82\u0dc4\u0dbd", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_SriLanka() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Sinhala", 52);
    OrgGeogebraCommonUtilLanguageEnum_Serbian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"sr", @"sr", @"Serbian / \u0441\u0440\u043f\u0441\u043a\u0438", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Serbia(), OrgGeogebraCommonUtilCountryEnum_get_BosniaandHerzegovina() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Serbian", 53);
    OrgGeogebraCommonUtilLanguageEnum_Slovak = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"sk", @"sk", @"Slovak / Slovensk\u00fd jazyk", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Slovakia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Slovak", 54);
    OrgGeogebraCommonUtilLanguageEnum_Slovenian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"sl", @"sl", @"Slovenian / Sloven\u0161\u010dina", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Slovenia() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Slovenian", 55);
    OrgGeogebraCommonUtilLanguageEnum_Spanish = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_DOLLAR_(), nil, YES, @"es", @"es", @"Spanish / Espa\u00f1ol", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_EquatorialGuinea(), OrgGeogebraCommonUtilCountryEnum_get_Argentina(), OrgGeogebraCommonUtilCountryEnum_get_Bolivia(), OrgGeogebraCommonUtilCountryEnum_get_Chile(), OrgGeogebraCommonUtilCountryEnum_get_Colombia(), OrgGeogebraCommonUtilCountryEnum_get_CostaRica(), OrgGeogebraCommonUtilCountryEnum_get_Cuba(), OrgGeogebraCommonUtilCountryEnum_get_DominicanRepublic(), OrgGeogebraCommonUtilCountryEnum_get_ElSalvador(), OrgGeogebraCommonUtilCountryEnum_get_Guatemala(), OrgGeogebraCommonUtilCountryEnum_get_Honduras(), OrgGeogebraCommonUtilCountryEnum_get_Mexico(), OrgGeogebraCommonUtilCountryEnum_get_Nicaragua(), OrgGeogebraCommonUtilCountryEnum_get_Panama(), OrgGeogebraCommonUtilCountryEnum_get_Paraguay(), OrgGeogebraCommonUtilCountryEnum_get_Ecuador(), OrgGeogebraCommonUtilCountryEnum_get_Peru(), OrgGeogebraCommonUtilCountryEnum_get_Venezuela(), OrgGeogebraCommonUtilCountryEnum_get_PuertoRico() } count:19 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Spanish", 56);
    OrgGeogebraCommonUtilLanguageEnum_Spanish_UY = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_DOLLAR_(), nil, YES, @"esUY", @"es_UY", @"Spanish / Espa\u00f1ol (Uruguay)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Uruguay() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Spanish_UY", 57);
    OrgGeogebraCommonUtilLanguageEnum_Spanish_ES = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"esES", @"es_ES", @"Spanish / Espa\u00f1ol (Espa\u00f1a)", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Spain() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Spanish_ES", 58);
    OrgGeogebraCommonUtilLanguageEnum_Swedish = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"sv", @"sv", @"Swedish / Svenska", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Sweden(), OrgGeogebraCommonUtilCountryEnum_get_Finland() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Swedish", 59);
    OrgGeogebraCommonUtilLanguageEnum_Tamil = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_RUPEE_(), @"\u0be7", YES, @"ta", @"ta", @"Tamil / \u0ba4\u0bae\u0bbf\u0bb4\u0bcd", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_India(), OrgGeogebraCommonUtilCountryEnum_get_SriLanka(), OrgGeogebraCommonUtilCountryEnum_get_Singapore() } count:3 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Tamil", 60);
    OrgGeogebraCommonUtilLanguageEnum_Thai = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_BAHT_(), nil, YES, @"th", @"th", @"Thai / \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Thailand() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Thai", 61);
    OrgGeogebraCommonUtilLanguageEnum_Turkish = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_EURO_(), nil, YES, @"tr", @"tr", @"Turkish / T\u00fcrk\u00e7e", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Turkey(), OrgGeogebraCommonUtilCountryEnum_get_Cyprus() } count:2 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Turkish", 62);
    OrgGeogebraCommonUtilLanguageEnum_Ukrainian = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"uk", @"uk", @"Ukrainian / \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 \u043c\u043e\u0432\u0430", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Ukraine() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Ukrainian", 63);
    OrgGeogebraCommonUtilLanguageEnum_Uyghur = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(nil, nil, YES, @"ug", @"ug", @"Uyghur", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_China() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Uyghur", 64);
    OrgGeogebraCommonUtilLanguageEnum_Vietnamese = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_DONG_(), nil, YES, @"vi", @"vi", @"Vietnamese / Ti\u1ebfng Vi\u1ec7t", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_VietNam() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Vietnamese", 65);
    OrgGeogebraCommonUtilLanguageEnum_Welsh = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(nil, nil, YES, @"cy", @"cy", @"Welsh / Cymraeg", @"wales", @"Welsh", 66);
    OrgGeogebraCommonUtilLanguageEnum_Yiddish = new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilUnicode_get_CURRENCY_SHEKEL_(), @"\u05d9\u05b4", YES, @"ji", @"ji", @"Yiddish / \u05d9\u05d9\u05b4\u05d3\u05d9\u05e9", [IOSObjectArray newArrayWithObjects:(id[]){ OrgGeogebraCommonUtilCountryEnum_get_Israel() } count:1 type:OrgGeogebraCommonUtilCountryEnum_class_()], @"Yiddish", 67);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonUtilLanguageEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getCountryWithOrgGeogebraCommonMainApp:withNSString:withNSString:withBoolean:", "getCountry", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getLanguageWithNSString:", "getLanguage", "Lorg.geogebra.common.util.Language;", 0xa, NULL, NULL },
    { "getDisplayNameWithNSString:", "getDisplayName", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getTestCharWithNSString:", "getTestChar", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getClosestGWTSupportedLanguageWithNSString:", "getClosestGWTSupportedLanguage", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getCurrencyWithNSString:", "getCurrency", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "Armenian", "Armenian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Armenian, NULL,  },
    { "Albanian", "Albanian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Albanian, NULL,  },
    { "Arabic", "Arabic", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Arabic, NULL,  },
    { "Arabic_Morocco", "Arabic_Morocco", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Arabic_Morocco, NULL,  },
    { "Arabic_Tunisia", "Arabic_Tunisia", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Arabic_Tunisia, NULL,  },
    { "Basque", "Basque", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Basque, NULL,  },
    { "Bosnian", "Bosnian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Bosnian, NULL,  },
    { "Bulgarian", "Bulgarian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Bulgarian, NULL,  },
    { "Catalan", "Catalan", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Catalan, NULL,  },
    { "Valencian", "Valencian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Valencian, NULL,  },
    { "Chinese_Simplified", "Chinese_Simplified", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Chinese_Simplified, NULL,  },
    { "Chinese_Traditional", "Chinese_Traditional", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Chinese_Traditional, NULL,  },
    { "Croatian", "Croatian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Croatian, NULL,  },
    { "Czech", "Czech", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Czech, NULL,  },
    { "Danish", "Danish", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Danish, NULL,  },
    { "Dutch", "Dutch", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Dutch, NULL,  },
    { "Dutch_Belgium", "Dutch_Belgium", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Dutch_Belgium, NULL,  },
    { "English_US", "English_US", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_English_US, NULL,  },
    { "English_UK", "English_UK", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_English_UK, NULL,  },
    { "English_Australia", "English_Australia", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_English_Australia, NULL,  },
    { "Estonian", "Estonian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Estonian, NULL,  },
    { "Filipino", "Filipino", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Filipino, NULL,  },
    { "Finnish", "Finnish", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Finnish, NULL,  },
    { "French", "French", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_French, NULL,  },
    { "Galician", "Galician", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Galician, NULL,  },
    { "Georgian", "Georgian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Georgian, NULL,  },
    { "German", "German", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_German, NULL,  },
    { "German_Austria", "German_Austria", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_German_Austria, NULL,  },
    { "Greek", "Greek", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Greek, NULL,  },
    { "Hebrew", "Hebrew", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Hebrew, NULL,  },
    { "Hindi", "Hindi", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Hindi, NULL,  },
    { "Hungarian", "Hungarian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Hungarian, NULL,  },
    { "Icelandic", "Icelandic", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Icelandic, NULL,  },
    { "Indonesian", "Indonesian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Indonesian, NULL,  },
    { "Italian", "Italian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Italian, NULL,  },
    { "Japanese", "Japanese", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Japanese, NULL,  },
    { "Kazakh", "Kazakh", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Kazakh, NULL,  },
    { "Korean", "Korean", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Korean, NULL,  },
    { "Latvian", "Latvian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Latvian, NULL,  },
    { "Lithuanian", "Lithuanian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Lithuanian, NULL,  },
    { "Malay", "Malay", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Malay, NULL,  },
    { "Macedonian", "Macedonian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Macedonian, NULL,  },
    { "Mongolian", "Mongolian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Mongolian, NULL,  },
    { "Nepalese", "Nepalese", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Nepalese, NULL,  },
    { "Norwegian_Bokmal", "Norwegian_Bokmal", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Norwegian_Bokmal, NULL,  },
    { "Norwegian_Nynorsk", "Norwegian_Nynorsk", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Norwegian_Nynorsk, NULL,  },
    { "Persian", "Persian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Persian, NULL,  },
    { "Polish", "Polish", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Polish, NULL,  },
    { "Portuguese_Brazil", "Portuguese_Brazil", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Portuguese_Brazil, NULL,  },
    { "Portuguese_Portugal", "Portuguese_Portugal", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Portuguese_Portugal, NULL,  },
    { "Romanian", "Romanian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Romanian, NULL,  },
    { "Russian", "Russian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Russian, NULL,  },
    { "Sinhala", "Sinhala", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Sinhala, NULL,  },
    { "Serbian", "Serbian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Serbian, NULL,  },
    { "Slovak", "Slovak", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Slovak, NULL,  },
    { "Slovenian", "Slovenian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Slovenian, NULL,  },
    { "Spanish", "Spanish", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Spanish, NULL,  },
    { "Spanish_UY", "Spanish_UY", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Spanish_UY, NULL,  },
    { "Spanish_ES", "Spanish_ES", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Spanish_ES, NULL,  },
    { "Swedish", "Swedish", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Swedish, NULL,  },
    { "Tamil", "Tamil", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Tamil, NULL,  },
    { "Thai", "Thai", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Thai, NULL,  },
    { "Turkish", "Turkish", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Turkish, NULL,  },
    { "Ukrainian", "Ukrainian", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Ukrainian, NULL,  },
    { "Uyghur", "Uyghur", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Uyghur, NULL,  },
    { "Vietnamese", "Vietnamese", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Vietnamese, NULL,  },
    { "Welsh", "Welsh", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Welsh, NULL,  },
    { "Yiddish", "Yiddish", 0x4019, "Lorg.geogebra.common.util.Language;", &OrgGeogebraCommonUtilLanguageEnum_Yiddish, NULL,  },
    { "localeGWT_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "locale_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "name_Language_", "name", 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "countries_", NULL, 0x1, "[Lorg.geogebra.common.util.Country;", NULL, NULL,  },
    { "flagName_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "fullyTranslated_", NULL, 0x1, "Z", NULL, NULL,  },
    { "testChar_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "currency_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "countryFromGeoIP_", NULL, 0xa, "Ljava.lang.String;", &OrgGeogebraCommonUtilLanguageEnum_countryFromGeoIP_, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.util.Language;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilLanguageEnum = { 2, "Language", "org.geogebra.common.util", NULL, 0x4011, 6, methods, 77, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/util/Language;>;" };
  return &_OrgGeogebraCommonUtilLanguageEnum;
}

@end

void OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(OrgGeogebraCommonUtilLanguageEnum *self, NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, IOSObjectArray *countries, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->currency_ = currency == nil ? @"$" : currency;
  self->locale_ = locale;
  self->localeGWT_ = localeGWT;
  self->name_Language_ = name;
  self->countries_ = countries;
  self->flagName_ = nil;
  self->fullyTranslated_ = fullyTranslated;
  self->testChar_ = testChar;
}

OrgGeogebraCommonUtilLanguageEnum *new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, IOSObjectArray *countries, NSString *__name, jint __ordinal) {
  OrgGeogebraCommonUtilLanguageEnum *self = [OrgGeogebraCommonUtilLanguageEnum alloc];
  OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withOrgGeogebraCommonUtilCountryEnumArray_withNSString_withInt_(self, currency, testChar, fullyTranslated, locale, localeGWT, name, countries, __name, __ordinal);
  return self;
}

void OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(OrgGeogebraCommonUtilLanguageEnum *self, NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, NSString *flagName, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->currency_ = currency == nil ? @"$" : currency;
  self->locale_ = locale;
  self->localeGWT_ = localeGWT;
  self->name_Language_ = name;
  self->countries_ = nil;
  self->flagName_ = flagName;
  self->fullyTranslated_ = fullyTranslated;
  self->testChar_ = testChar;
}

OrgGeogebraCommonUtilLanguageEnum *new_OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(NSString *currency, NSString *testChar, jboolean fullyTranslated, NSString *locale, NSString *localeGWT, NSString *name, NSString *flagName, NSString *__name, jint __ordinal) {
  OrgGeogebraCommonUtilLanguageEnum *self = [OrgGeogebraCommonUtilLanguageEnum alloc];
  OrgGeogebraCommonUtilLanguageEnum_initWithNSString_withNSString_withBoolean_withNSString_withNSString_withNSString_withNSString_withNSString_withInt_(self, currency, testChar, fullyTranslated, locale, localeGWT, name, flagName, __name, __ordinal);
  return self;
}

NSString *OrgGeogebraCommonUtilLanguageEnum_getCountryWithOrgGeogebraCommonMainApp_withNSString_withNSString_withBoolean_(OrgGeogebraCommonMainApp *app, NSString *language, NSString *country, jboolean useGeoIP) {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  OrgGeogebraCommonUtilLanguageEnum *lang = OrgGeogebraCommonUtilLanguageEnum_getLanguageWithNSString_(JreStrcat("$$", language, country));
  if (((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(lang))->flagName_ != nil) {
    return lang->flagName_;
  }
  IOSObjectArray *c = lang->countries_;
  if (country != nil) {
    {
      IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
      OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        OrgGeogebraCommonUtilLanguageEnum *l = *b__++;
        if (((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(l))->countries_ != nil && [((NSString *) nil_chk([((OrgGeogebraCommonUtilCountryEnum *) nil_chk(IOSObjectArray_Get(l->countries_, 0))) getISO])) isEqual:country]) return [((OrgGeogebraCommonUtilCountryEnum *) nil_chk(IOSObjectArray_Get(l->countries_, 0))) getISO];
      }
    }
  }
  if (useGeoIP) {
    @try {
      if (OrgGeogebraCommonUtilLanguageEnum_countryFromGeoIP_ == nil) {
        OrgGeogebraCommonUtilLanguageEnum_countryFromGeoIP_ = [((OrgGeogebraCommonMainApp *) nil_chk(app)) getCountryFromGeoIP];
      }
      OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("$$", @"country from GeoIP: ", OrgGeogebraCommonUtilLanguageEnum_countryFromGeoIP_));
      for (jint i = 0; i < ((IOSObjectArray *) nil_chk(c))->size_; i++) {
        if ([((NSString *) nil_chk([((OrgGeogebraCommonUtilCountryEnum *) nil_chk(IOSObjectArray_Get(c, i))) getISO])) isEqual:OrgGeogebraCommonUtilLanguageEnum_countryFromGeoIP_]) {
          return OrgGeogebraCommonUtilLanguageEnum_countryFromGeoIP_;
        }
      }
    }
    @catch (JavaLangException *e) {
      OrgGeogebraCommonUtilDebugLog_warnWithNSString_(JreStrcat("$$", @"Getting country code from geoip failed: ", [((JavaLangException *) nil_chk(e)) getMessage]));
    }
  }
  return [((OrgGeogebraCommonUtilCountryEnum *) nil_chk(IOSObjectArray_Get(nil_chk(c), 0))) getISO];
}

OrgGeogebraCommonUtilLanguageEnum *OrgGeogebraCommonUtilLanguageEnum_getLanguageWithNSString_(NSString *language) {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  {
    IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
    OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonUtilLanguageEnum *l = *b__++;
      if ([((NSString *) nil_chk(((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(l))->locale_)) isEqual:language]) {
        return l;
      }
    }
  }
  {
    IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
    OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonUtilLanguageEnum *l = *b__++;
      if ([((NSString *) nil_chk([((NSString *) nil_chk(((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(l))->locale_)) substring:0 endIndex:2])) isEqual:language]) {
        return l;
      }
    }
  }
  OrgGeogebraCommonMainApp_errorWithNSString_(JreStrcat("$$", @"language not recognized: ", language));
  return nil;
}

NSString *OrgGeogebraCommonUtilLanguageEnum_getDisplayNameWithNSString_(NSString *ggbLangCode) {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  ggbLangCode = [((NSString *) nil_chk(ggbLangCode)) replaceAll:@"_" withReplacement:@""];
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("$$", @"looking for: ", ggbLangCode));
  {
    IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
    OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonUtilLanguageEnum *l = *b__++;
      if ([((NSString *) nil_chk(((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(l))->locale_)) isEqual:ggbLangCode] || [((NSString *) nil_chk([((NSString *) nil_chk(l->localeGWT_)) replaceAll:@"_" withReplacement:@""])) isEqual:ggbLangCode]) {
        return l->name_Language_;
      }
    }
  }
  OrgGeogebraCommonMainApp_errorWithNSString_(JreStrcat("$$", @"language not found: ", ggbLangCode));
  return nil;
}

NSString *OrgGeogebraCommonUtilLanguageEnum_getTestCharWithNSString_(NSString *language) {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  {
    IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
    OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonUtilLanguageEnum *l = *b__++;
      if ([((NSString *) nil_chk(((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(l))->locale_)) hasPrefix:language]) {
        return l->testChar_ == nil ? @"a" : l->testChar_;
      }
    }
  }
  OrgGeogebraCommonMainApp_errorWithNSString_(JreStrcat("$$", @"language not found: ", language));
  return @"a";
}

NSString *OrgGeogebraCommonUtilLanguageEnum_getClosestGWTSupportedLanguageWithNSString_(NSString *browserLangCode) {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  NSString *normalizedLanguage = OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_([((NSString *) nil_chk(browserLangCode)) replace:@"-" withSequence:@"_"]);
  if ([@"he" isEqual:normalizedLanguage]) {
    normalizedLanguage = @"iw";
  }
  else if ([@"zh_hans_cn" isEqual:normalizedLanguage]) {
    normalizedLanguage = @"zh_cn";
  }
  else if ([@"zh_hant_tw" isEqual:normalizedLanguage]) {
    normalizedLanguage = @"zh_tw";
  }
  else if ([((NSString *) nil_chk(normalizedLanguage)) hasPrefix:@"nb"]) {
    normalizedLanguage = @"no_nb";
  }
  else if ([@"nn" isEqual:normalizedLanguage]) {
    normalizedLanguage = @"no_nn";
  }
  {
    IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
    OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonUtilLanguageEnum *lang = *b__++;
      if ([((NSString *) nil_chk([((NSString *) nil_chk(((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(lang))->localeGWT_)) lowercaseString])) isEqual:normalizedLanguage]) {
        return lang->localeGWT_;
      }
    }
  }
  {
    IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
    OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonUtilLanguageEnum *lang = *b__++;
      if ([((NSString *) nil_chk([((NSString *) nil_chk(((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(lang))->localeGWT_)) lowercaseString])) isEqual:[((NSString *) nil_chk(normalizedLanguage)) substring:0 endIndex:2]]) {
        return lang->localeGWT_;
      }
    }
  }
  return nil;
}

NSString *OrgGeogebraCommonUtilLanguageEnum_getCurrencyWithNSString_(NSString *language) {
  OrgGeogebraCommonUtilLanguageEnum_initialize();
  {
    IOSObjectArray *a__ = OrgGeogebraCommonUtilLanguageEnum_values();
    OrgGeogebraCommonUtilLanguageEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgGeogebraCommonUtilLanguageEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgGeogebraCommonUtilLanguageEnum *l = *b__++;
      if ([((NSString *) nil_chk(((OrgGeogebraCommonUtilLanguageEnum *) nil_chk(l))->localeGWT_)) isEqual:language]) {
        return l->currency_;
      }
    }
  }
  return OrgGeogebraCommonUtilUnicode_get_CURRENCY_DOLLAR_();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilLanguageEnum)
