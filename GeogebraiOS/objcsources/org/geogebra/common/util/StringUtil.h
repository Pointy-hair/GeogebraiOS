//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/util/StringUtil.java
//

#ifndef _OrgGeogebraCommonUtilStringUtil_H_
#define _OrgGeogebraCommonUtilStringUtil_H_

#include "J2ObjC_header.h"

@class IOSByteArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class OrgGeogebraCommonAwtGColor;
@class OrgGeogebraCommonAwtGFont;
@protocol JavaLangIterable;

@interface OrgGeogebraCommonUtilStringUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (NSString *)cannonicNumberWithNSString:(NSString *)str;

+ (NSString *)cannonicNumber2WithNSString:(NSString *)str;

+ (jint)checkBracketsBackwardWithNSString:(NSString *)parseString;

+ (NSString *)convertToHexWithByteArray:(IOSByteArray *)data;

+ (NSString *)encodeXMLWithNSString:(NSString *)str;

+ (void)encodeXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                              withNSString:(NSString *)str;

- (jdouble)estimateHeightWithNSString:(NSString *)string
        withOrgGeogebraCommonAwtGFont:(OrgGeogebraCommonAwtGFont *)font;

- (jdouble)estimateLengthWithNSString:(NSString *)label
        withOrgGeogebraCommonAwtGFont:(OrgGeogebraCommonAwtGFont *)font;

- (jdouble)estimateLengthHTMLWithNSString:(NSString *)label
            withOrgGeogebraCommonAwtGFont:(OrgGeogebraCommonAwtGFont *)font;

+ (NSString *)fixVerticalBarsWithNSString:(NSString *)parseString;

+ (id)formatWithNSString:(NSString *)sub
              withDouble:(jdouble)x0
              withDouble:(jdouble)x1
              withDouble:(jdouble)x2
              withDouble:(jdouble)x3;

+ (NSString *)ignoreIndicesWithNSString:(NSString *)text;

+ (jboolean)isDigitWithChar:(jchar)ch;

+ (jboolean)isInequalityWithNSString:(NSString *)str;

+ (jboolean)isLetterWithChar:(jchar)c;

+ (jboolean)isLetterOrDigitWithChar:(jchar)c;

+ (jboolean)isLetterOrDigitOrUnderscoreWithChar:(jchar)character;

+ (jboolean)isNotEqualWithNSString:(NSString *)str;

+ (jboolean)isNumberWithNSString:(NSString *)text;

+ (jboolean)isWhitespaceWithChar:(jchar)c;

+ (NSString *)joinTokensWithJavaLangIterable:(id<JavaLangIterable>)tokens
                                withNSString:(NSString *)delimiter;

+ (jdouble)parseDoubleWithNSString:(NSString *)s;

+ (jchar)processQuotesWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                   withNSString:(NSString *)content
                                       withChar:(jchar)ret;

+ (NSString *)removeLeadingSlashWithNSString:(NSString *)filename;

+ (NSString *)removeSpacesWithNSString:(NSString *)str;

+ (NSString *)repeatWithChar:(jchar)c
                     withInt:(jint)count;

+ (jboolean)representsMultipleExpressionsWithNSString:(NSString *)evalText;

+ (JavaLangStringBuilder *)resetStringBuilderWithJavaLangStringBuilder:(JavaLangStringBuilder *)high;

+ (NSString *)stringWithNSString:(NSString *)s
                         withInt:(jint)n;

+ (NSString *)toHexStringWithChar:(jchar)c;

+ (NSString *)toHexStringWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)col;

+ (NSString *)toHexStringWithInt:(jint)i;

+ (NSString *)toHexStringWithNSString:(NSString *)s;

+ (NSString *)toHtmlColorWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color;

+ (NSString *)toHTMLStringWithNSString:(NSString *)title;

+ (NSString *)toHTMLStringWithNSString:(NSString *)str
                           withBoolean:(jboolean)encodeLTGT;

+ (NSString *)toLaTeXStringWithNSString:(NSString *)str
                            withBoolean:(jboolean)convertGreekLetters;

+ (NSString *)toLowerCaseWithNSString:(NSString *)s;

+ (NSString *)toUpperCaseWithNSString:(NSString *)s;

+ (NSString *)trimSpacesWithNSString:(NSString *)str;

+ (JavaUtilArrayList *)wholeWordTokenizeWithNSString:(NSString *)input;

+ (NSString *)wrapInExactWithNSString:(NSString *)s;

#pragma mark Protected

- (jboolean)isRightToLeftCharWithChar:(jchar)c;

- (NSString *)toLowerWithNSString:(NSString *)s;

- (NSString *)toUpperWithNSString:(NSString *)s;

@end

J2OBJC_STATIC_INIT(OrgGeogebraCommonUtilStringUtil)

FOUNDATION_EXPORT OrgGeogebraCommonUtilStringUtil *OrgGeogebraCommonUtilStringUtil_prototype_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilStringUtil, prototype_, OrgGeogebraCommonUtilStringUtil *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonUtilStringUtil, prototype_, OrgGeogebraCommonUtilStringUtil *)

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_convertToHexWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toHexStringWithChar_(jchar c);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toHexStringWithInt_(jint i);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toHexStringWithOrgGeogebraCommonAwtGColor_(OrgGeogebraCommonAwtGColor *col);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toHexStringWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toHTMLStringWithNSString_(NSString *title);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toHTMLStringWithNSString_withBoolean_(NSString *str, jboolean encodeLTGT);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_encodeXMLWithNSString_(NSString *str);

FOUNDATION_EXPORT void OrgGeogebraCommonUtilStringUtil_encodeXMLWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *sb, NSString *str);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toLaTeXStringWithNSString_withBoolean_(NSString *str, jboolean convertGreekLetters);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_stringWithNSString_withInt_(NSString *s, jint n);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_removeSpacesWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_trimSpacesWithNSString_(NSString *str);

FOUNDATION_EXPORT JavaLangStringBuilder *OrgGeogebraCommonUtilStringUtil_resetStringBuilderWithJavaLangStringBuilder_(JavaLangStringBuilder *high);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isNumberWithNSString_(NSString *text);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toLowerCaseWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toUpperCaseWithNSString_(NSString *s);

FOUNDATION_EXPORT jdouble OrgGeogebraCommonUtilStringUtil_parseDoubleWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_repeatWithChar_withInt_(jchar c, jint count);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isLetterOrDigitWithChar_(jchar c);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isLetterOrDigitOrUnderscoreWithChar_(jchar character);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isDigitWithChar_(jchar ch);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isLetterWithChar_(jchar c);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isNotEqualWithNSString_(NSString *str);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isInequalityWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_ignoreIndicesWithNSString_(NSString *text);

FOUNDATION_EXPORT jint OrgGeogebraCommonUtilStringUtil_checkBracketsBackwardWithNSString_(NSString *parseString);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_fixVerticalBarsWithNSString_(NSString *parseString);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_representsMultipleExpressionsWithNSString_(NSString *evalText);

FOUNDATION_EXPORT id OrgGeogebraCommonUtilStringUtil_formatWithNSString_withDouble_withDouble_withDouble_withDouble_(NSString *sub, jdouble x0, jdouble x1, jdouble x2, jdouble x3);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_wrapInExactWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_removeLeadingSlashWithNSString_(NSString *filename);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_toHtmlColorWithOrgGeogebraCommonAwtGColor_(OrgGeogebraCommonAwtGColor *color);

FOUNDATION_EXPORT JavaUtilArrayList *OrgGeogebraCommonUtilStringUtil_wholeWordTokenizeWithNSString_(NSString *input);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_joinTokensWithJavaLangIterable_withNSString_(id<JavaLangIterable> tokens, NSString *delimiter);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_cannonicNumberWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *OrgGeogebraCommonUtilStringUtil_cannonicNumber2WithNSString_(NSString *str);

FOUNDATION_EXPORT jboolean OrgGeogebraCommonUtilStringUtil_isWhitespaceWithChar_(jchar c);

FOUNDATION_EXPORT jchar OrgGeogebraCommonUtilStringUtil_processQuotesWithJavaLangStringBuilder_withNSString_withChar_(JavaLangStringBuilder *sb, NSString *content, jchar ret);

FOUNDATION_EXPORT void OrgGeogebraCommonUtilStringUtil_init(OrgGeogebraCommonUtilStringUtil *self);

FOUNDATION_EXPORT OrgGeogebraCommonUtilStringUtil *new_OrgGeogebraCommonUtilStringUtil_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonUtilStringUtil)

#endif // _OrgGeogebraCommonUtilStringUtil_H_
