//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/util/Util.java
//


#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/geogebra/common/util/Util.h"

@implementation OrgGeogebraCommonUtilUtil

+ (NSString *)processFilenameWithNSString:(NSString *)name {
  return OrgGeogebraCommonUtilUtil_processFilenameWithNSString_(name);
}

- (instancetype)init {
  OrgGeogebraCommonUtilUtil_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "processFilenameWithNSString:", "processFilename", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilUtil = { 2, "Util", "org.geogebra.common.util", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonUtilUtil;
}

@end

NSString *OrgGeogebraCommonUtilUtil_processFilenameWithNSString_(NSString *name) {
  OrgGeogebraCommonUtilUtil_initialize();
  jint length = name != nil ? ((jint) [name length]) : 0;
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  for (jint i = 0; i < length; i++) {
    jchar c = [((NSString *) nil_chk(name)) charAtWithInt:i];
    if (c == '<' || c == '>' || c == '"' || c == ':' || c == '*' || c == '/' || c == '\\' || c == '?' || c == 0x00a3 || c == '|') {
      [sb appendWithNSString:@"_"];
    }
    else {
      [sb appendWithChar:c];
    }
  }
  if ([sb length] == 0) {
    [sb appendWithNSString:@"geogebra"];
  }
  return [sb description];
}

void OrgGeogebraCommonUtilUtil_init(OrgGeogebraCommonUtilUtil *self) {
  NSObject_init(self);
}

OrgGeogebraCommonUtilUtil *new_OrgGeogebraCommonUtilUtil_init() {
  OrgGeogebraCommonUtilUtil *self = [OrgGeogebraCommonUtilUtil alloc];
  OrgGeogebraCommonUtilUtil_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilUtil)
