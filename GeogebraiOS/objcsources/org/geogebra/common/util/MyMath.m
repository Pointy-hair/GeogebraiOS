//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/util/MyMath.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/roots/RealRootFunction.h"
#include "org/geogebra/common/util/MyMath.h"
#include "org/geogebra/common/util/MyMath2.h"

@interface OrgGeogebraCommonUtilMyMath ()

+ (jdouble)lengthAbsNoZeroWithDouble:(jdouble)absx
                          withDouble:(jdouble)absy;

+ (jdouble)binomBigWithDouble:(jdouble)n
                   withDouble:(jdouble)r;

+ (jdouble)binomLogWithDouble:(jdouble)n
                   withDouble:(jdouble)r;

@end

__attribute__((unused)) static jdouble OrgGeogebraCommonUtilMyMath_lengthAbsNoZeroWithDouble_withDouble_(jdouble absx, jdouble absy);

__attribute__((unused)) static jdouble OrgGeogebraCommonUtilMyMath_binomBigWithDouble_withDouble_(jdouble n, jdouble r);

__attribute__((unused)) static jdouble OrgGeogebraCommonUtilMyMath_binomLogWithDouble_withDouble_(jdouble n, jdouble r);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonUtilMyMath)

jdouble OrgGeogebraCommonUtilMyMath_LOG10_;
jdouble OrgGeogebraCommonUtilMyMath_LOG2_;

@implementation OrgGeogebraCommonUtilMyMath

+ (jdouble)cbrtWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_cbrtWithDouble_(a);
}

+ (jdouble)sgnWithOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)AbstracKernel
                                     withDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_sgnWithOrgGeogebraCommonKernelKernel_withDouble_(AbstracKernel, a);
}

+ (jdouble)coshWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_coshWithDouble_(a);
}

+ (jdouble)sinhWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_sinhWithDouble_(a);
}

+ (jdouble)tanhWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_tanhWithDouble_(a);
}

+ (jdouble)cschWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_cschWithDouble_(a);
}

+ (jdouble)sechWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_sechWithDouble_(a);
}

+ (jdouble)cothWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_cothWithDouble_(a);
}

+ (jdouble)acoshWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_acoshWithDouble_(a);
}

+ (jdouble)asinhWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_asinhWithDouble_(a);
}

+ (jdouble)atanhWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_atanhWithDouble_(a);
}

+ (jdouble)cscWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_cscWithDouble_(a);
}

+ (jdouble)secWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_secWithDouble_(a);
}

+ (jdouble)cotWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath_cotWithDouble_(a);
}

+ (jdouble)truncateWithDouble:(jdouble)x
                      withInt:(jint)digits {
  return OrgGeogebraCommonUtilMyMath_truncateWithDouble_withInt_(x, digits);
}

+ (IOSObjectArray *)adjointWithDouble:(jdouble)a00
                           withDouble:(jdouble)a01
                           withDouble:(jdouble)a02
                           withDouble:(jdouble)a10
                           withDouble:(jdouble)a11
                           withDouble:(jdouble)a12
                           withDouble:(jdouble)a20
                           withDouble:(jdouble)a21
                           withDouble:(jdouble)a22 {
  return OrgGeogebraCommonUtilMyMath_adjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(a00, a01, a02, a10, a11, a12, a20, a21, a22);
}

+ (jdouble)nextMultipleWithDouble:(jdouble)t
                       withDouble:(jdouble)mod {
  return OrgGeogebraCommonUtilMyMath_nextMultipleWithDouble_withDouble_(t, mod);
}

+ (jdouble)nextPrettyNumberWithDouble:(jdouble)t {
  return OrgGeogebraCommonUtilMyMath_nextPrettyNumberWithDouble_(t);
}

+ (jdouble)distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction:(id<OrgGeogebraCommonKernelRootsRealRootFunction>)fun
                                                                        withDouble:(jdouble)px
                                                                        withDouble:(jdouble)py
                                                                        withDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath_distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDouble_(fun, px, py, x);
}

+ (jdouble)lengthWithDouble:(jdouble)x
                 withDouble:(jdouble)y {
  return OrgGeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(x, y);
}

+ (jdouble)lengthAbsNoZeroWithDouble:(jdouble)absx
                          withDouble:(jdouble)absy {
  return OrgGeogebraCommonUtilMyMath_lengthAbsNoZeroWithDouble_withDouble_(absx, absy);
}

+ (jdouble)lengthWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z {
  return OrgGeogebraCommonUtilMyMath_lengthWithDouble_withDouble_withDouble_(x, y, z);
}

+ (IOSObjectArray *)multiplyWithDoubleArray2:(IOSObjectArray *)m1
                            withDoubleArray2:(IOSObjectArray *)m2 {
  return OrgGeogebraCommonUtilMyMath_multiplyWithDoubleArray2_withDoubleArray2_(m1, m2);
}

+ (jdouble)binomialWithDouble:(jdouble)n
                   withDouble:(jdouble)k {
  return OrgGeogebraCommonUtilMyMath_binomialWithDouble_withDouble_(n, k);
}

+ (jdouble)binomBigWithDouble:(jdouble)n
                   withDouble:(jdouble)r {
  return OrgGeogebraCommonUtilMyMath_binomBigWithDouble_withDouble_(n, r);
}

+ (jdouble)binomLogWithDouble:(jdouble)n
                   withDouble:(jdouble)r {
  return OrgGeogebraCommonUtilMyMath_binomLogWithDouble_withDouble_(n, r);
}

+ (jdouble)maxWithDoubleArray:(IOSDoubleArray *)data {
  return OrgGeogebraCommonUtilMyMath_maxWithDoubleArray_(data);
}

+ (jdouble)minWithDoubleArray:(IOSDoubleArray *)data {
  return OrgGeogebraCommonUtilMyMath_minWithDoubleArray_(data);
}

- (instancetype)init {
  OrgGeogebraCommonUtilMyMath_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonUtilMyMath class]) {
    OrgGeogebraCommonUtilMyMath_LOG10_ = JavaLangMath_logWithDouble_(10);
    OrgGeogebraCommonUtilMyMath_LOG2_ = JavaLangMath_logWithDouble_(2);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonUtilMyMath)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "cbrtWithDouble:", "cbrt", "D", 0x19, NULL, NULL },
    { "sgnWithOrgGeogebraCommonKernelKernel:withDouble:", "sgn", "D", 0x19, NULL, NULL },
    { "coshWithDouble:", "cosh", "D", 0x19, NULL, NULL },
    { "sinhWithDouble:", "sinh", "D", 0x19, NULL, NULL },
    { "tanhWithDouble:", "tanh", "D", 0x19, NULL, NULL },
    { "cschWithDouble:", "csch", "D", 0x19, NULL, NULL },
    { "sechWithDouble:", "sech", "D", 0x19, NULL, NULL },
    { "cothWithDouble:", "coth", "D", 0x19, NULL, NULL },
    { "acoshWithDouble:", "acosh", "D", 0x19, NULL, NULL },
    { "asinhWithDouble:", "asinh", "D", 0x19, NULL, NULL },
    { "atanhWithDouble:", "atanh", "D", 0x19, NULL, NULL },
    { "cscWithDouble:", "csc", "D", 0x19, NULL, NULL },
    { "secWithDouble:", "sec", "D", 0x19, NULL, NULL },
    { "cotWithDouble:", "cot", "D", 0x19, NULL, NULL },
    { "truncateWithDouble:withInt:", "truncate", "D", 0x19, NULL, NULL },
    { "adjointWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "adjoint", "[[D", 0x9, NULL, NULL },
    { "nextMultipleWithDouble:withDouble:", "nextMultiple", "D", 0x9, NULL, NULL },
    { "nextPrettyNumberWithDouble:", "nextPrettyNumber", "D", 0x9, NULL, NULL },
    { "distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction:withDouble:withDouble:withDouble:", "distancePointFunctionAt", "D", 0x9, NULL, NULL },
    { "lengthWithDouble:withDouble:", "length", "D", 0x9, NULL, NULL },
    { "lengthAbsNoZeroWithDouble:withDouble:", "lengthAbsNoZero", "D", 0xa, NULL, NULL },
    { "lengthWithDouble:withDouble:withDouble:", "length", "D", 0x9, NULL, NULL },
    { "multiplyWithDoubleArray2:withDoubleArray2:", "multiply", "[[D", 0x9, NULL, NULL },
    { "binomialWithDouble:withDouble:", "binomial", "D", 0x9, NULL, NULL },
    { "binomBigWithDouble:withDouble:", "binomBig", "D", 0xa, NULL, NULL },
    { "binomLogWithDouble:withDouble:", "binomLog", "D", 0xa, NULL, NULL },
    { "maxWithDoubleArray:", "max", "D", 0x9, NULL, NULL },
    { "minWithDoubleArray:", "min", "D", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LOG10_", NULL, 0x19, "D", &OrgGeogebraCommonUtilMyMath_LOG10_, NULL,  },
    { "LOG2_", NULL, 0x19, "D", &OrgGeogebraCommonUtilMyMath_LOG2_, NULL,  },
    { "ONE_THIRD_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraCommonUtilMyMath_ONE_THIRD },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilMyMath = { 2, "MyMath", "org.geogebra.common.util", NULL, 0x11, 29, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonUtilMyMath;
}

@end

jdouble OrgGeogebraCommonUtilMyMath_cbrtWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  if (a > 0.0) {
    return JavaLangMath_powWithDouble_withDouble_(a, OrgGeogebraCommonUtilMyMath_ONE_THIRD);
  }
  return -JavaLangMath_powWithDouble_withDouble_(-a, OrgGeogebraCommonUtilMyMath_ONE_THIRD);
}

jdouble OrgGeogebraCommonUtilMyMath_sgnWithOrgGeogebraCommonKernelKernel_withDouble_(OrgGeogebraCommonKernelKernel *AbstracKernel, jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  if (JavaLangDouble_isNaNWithDouble_(a)) return JavaLangDouble_NaN;
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(a)) return 0.0;
  else if (a > 0.0) return 1.0;
  else return -1.0;
}

jdouble OrgGeogebraCommonUtilMyMath_coshWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return (JavaLangMath_expWithDouble_(a) + JavaLangMath_expWithDouble_(-a)) * 0.5;
}

jdouble OrgGeogebraCommonUtilMyMath_sinhWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return (JavaLangMath_expWithDouble_(a) - JavaLangMath_expWithDouble_(-a)) * 0.5;
}

jdouble OrgGeogebraCommonUtilMyMath_tanhWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble e = JavaLangMath_expWithDouble_(2.0 * a);
  return (e - 1.0) / (e + 1.0);
}

jdouble OrgGeogebraCommonUtilMyMath_cschWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return 1 / OrgGeogebraCommonUtilMyMath_sinhWithDouble_(a);
}

jdouble OrgGeogebraCommonUtilMyMath_sechWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return 1 / OrgGeogebraCommonUtilMyMath_coshWithDouble_(a);
}

jdouble OrgGeogebraCommonUtilMyMath_cothWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble e = JavaLangMath_expWithDouble_(2.0 * a);
  return (e + 1.0) / (e - 1.0);
}

jdouble OrgGeogebraCommonUtilMyMath_acoshWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return JavaLangMath_logWithDouble_(a + JavaLangMath_sqrtWithDouble_(a * a - 1.0));
}

jdouble OrgGeogebraCommonUtilMyMath_asinhWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return JavaLangMath_logWithDouble_(a + JavaLangMath_sqrtWithDouble_(a * a + 1.0));
}

jdouble OrgGeogebraCommonUtilMyMath_atanhWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return JavaLangMath_logWithDouble_((1.0 + a) / (1.0 - a)) * 0.5;
}

jdouble OrgGeogebraCommonUtilMyMath_cscWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble sin = JavaLangMath_sinWithDouble_(a);
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(sin)) return JavaLangDouble_NaN;
  return 1 / sin;
}

jdouble OrgGeogebraCommonUtilMyMath_secWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble cos = JavaLangMath_cosWithDouble_(a);
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(cos)) return JavaLangDouble_NaN;
  return 1 / cos;
}

jdouble OrgGeogebraCommonUtilMyMath_cotWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble sin = JavaLangMath_sinWithDouble_(a);
  if (OrgGeogebraCommonKernelKernel_isZeroWithDouble_(sin)) return JavaLangDouble_NaN;
  return JavaLangMath_cosWithDouble_(a) / sin;
}

jdouble OrgGeogebraCommonUtilMyMath_truncateWithDouble_withInt_(jdouble x, jint digits) {
  OrgGeogebraCommonUtilMyMath_initialize();
  JavaMathBigDecimal *bd = new_JavaMathBigDecimal_initWithDouble_(x);
  bd = [bd setScaleWithInt:digits withInt:JavaMathBigDecimal_ROUND_HALF_UP];
  return [((JavaMathBigDecimal *) nil_chk(bd)) doubleValue];
}

IOSObjectArray *OrgGeogebraCommonUtilMyMath_adjointWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble a00, jdouble a01, jdouble a02, jdouble a10, jdouble a11, jdouble a12, jdouble a20, jdouble a21, jdouble a22) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ (a11 * a22 - a21 * a12), -(a10 * a22 - a20 * a12), (a10 * a21 - a20 * a11) } count:3], [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ -(a01 * a22 - a02 * a21), (a00 * a22 - a20 * a02), -(a00 * a21 - a01 * a20) } count:3], [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ (a01 * a12 - a02 * a11), -(a00 * a12 - a02 * a10), (a00 * a11 - a10 * a01) } count:3] } count:3 type:IOSClass_doubleArray(1)];
}

jdouble OrgGeogebraCommonUtilMyMath_nextMultipleWithDouble_withDouble_(jdouble t, jdouble mod) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return JavaLangMath_ceilWithDouble_(t / mod) * mod;
}

jdouble OrgGeogebraCommonUtilMyMath_nextPrettyNumberWithDouble_(jdouble t) {
  OrgGeogebraCommonUtilMyMath_initialize();
  if (t < 1) return 1;
  jdouble pot = JavaLangMath_powWithDouble_withDouble_(10, JavaLangMath_floorWithDouble_(JavaLangMath_log10WithDouble_(t)));
  jdouble n = t / pot;
  if (n > 5) {
    return 10 * pot;
  }
  else if (n > 2) {
    return 5 * pot;
  }
  else {
    return 2 * pot;
  }
}

jdouble OrgGeogebraCommonUtilMyMath_distancePointFunctionAtWithOrgGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_withDouble_(id<OrgGeogebraCommonKernelRootsRealRootFunction> fun, jdouble px, jdouble py, jdouble x) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return OrgGeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(x - px, [((id<OrgGeogebraCommonKernelRootsRealRootFunction>) nil_chk(fun)) evaluateWithDouble:x] - py);
}

jdouble OrgGeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(jdouble x, jdouble y) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble res;
  jdouble absx = JavaLangMath_absWithDouble_(x);
  jdouble absy = JavaLangMath_absWithDouble_(y);
  if (absx == 0) res = absy;
  else if (absy == 0) res = absx;
  else {
    res = OrgGeogebraCommonUtilMyMath_lengthAbsNoZeroWithDouble_withDouble_(absx, absy);
  }
  return res;
}

jdouble OrgGeogebraCommonUtilMyMath_lengthAbsNoZeroWithDouble_withDouble_(jdouble absx, jdouble absy) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble res;
  if (absx > absy) {
    jdouble temp = absy / absx;
    res = absx * JavaLangMath_sqrtWithDouble_(1.0 + temp * temp);
  }
  else {
    jdouble temp = absx / absy;
    res = absy * JavaLangMath_sqrtWithDouble_(1.0 + temp * temp);
  }
  return res;
}

jdouble OrgGeogebraCommonUtilMyMath_lengthWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble z) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble absx = JavaLangMath_absWithDouble_(x);
  jdouble absy = JavaLangMath_absWithDouble_(y);
  jdouble absz = JavaLangMath_absWithDouble_(z);
  if (absx == 0) {
    if (absy == 0) {
      return absz;
    }
    if (absz == 0) {
      return absy;
    }
    return OrgGeogebraCommonUtilMyMath_lengthAbsNoZeroWithDouble_withDouble_(absy, absz);
  }
  if (absy == 0) {
    if (absz == 0) {
      return absx;
    }
    return OrgGeogebraCommonUtilMyMath_lengthAbsNoZeroWithDouble_withDouble_(absx, absz);
  }
  if (absz == 0) {
    return OrgGeogebraCommonUtilMyMath_lengthAbsNoZeroWithDouble_withDouble_(absx, absy);
  }
  if (absx > absy) {
    if (absx > absz) {
      jdouble tempy = absy / absx;
      jdouble tempz = absz / absx;
      return absx * JavaLangMath_sqrtWithDouble_(1.0 + tempy * tempy + tempz * tempz);
    }
    jdouble tempy = absy / absz;
    jdouble tempx = absx / absz;
    return absz * JavaLangMath_sqrtWithDouble_(1.0 + tempy * tempy + tempx * tempx);
  }
  if (absy > absz) {
    jdouble tempx = absx / absy;
    jdouble tempz = absz / absy;
    return absy * JavaLangMath_sqrtWithDouble_(1.0 + tempx * tempx + tempz * tempz);
  }
  jdouble tempy = absy / absz;
  jdouble tempx = absx / absz;
  return absz * JavaLangMath_sqrtWithDouble_(1.0 + tempy * tempy + tempx * tempx);
}

IOSObjectArray *OrgGeogebraCommonUtilMyMath_multiplyWithDoubleArray2_withDoubleArray2_(IOSObjectArray *m1, IOSObjectArray *m2) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jint l1 = ((IOSObjectArray *) nil_chk(m1))->size_;
  jint l2 = ((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(m2), 0)))->size_;
  jint l3 = ((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(m1, 0)))->size_;
  IOSObjectArray *result = [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ l1, l2 }];
  for (jint i = 0; i < l1; i++) for (jint j = 0; j < l2; j++) {
    *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(result, i)), j) = 0;
    for (jint k = 0; k < l3; k++) *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(result, i)), j) += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m1, i)), k) * IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(m2, k)), j);
  }
  return result;
}

jdouble OrgGeogebraCommonUtilMyMath_binomialWithDouble_withDouble_(jdouble n, jdouble k) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble INFINITY_ = JavaLangDouble_POSITIVE_INFINITY;
  @try {
    if (n == 0.0 && k == 0.0) return 1.0;
    jdouble r = k > n / 2 ? n - k : k;
    if (n < 1.0 || r < 0.0 || n < r) return 0.0;
    if (JavaLangMath_floorWithDouble_(n) != n || JavaLangMath_floorWithDouble_(r) != r) return 0.0;
    jdouble ncr = OrgGeogebraCommonUtilMyMath_binomLogWithDouble_withDouble_(n, r);
    if (ncr == INFINITY_) return INFINITY_;
    if (n <= 37) return ncr;
    return OrgGeogebraCommonUtilMyMath_binomBigWithDouble_withDouble_(n, r);
  }
  @catch (JavaLangException *e) {
    return INFINITY_;
  }
}

jdouble OrgGeogebraCommonUtilMyMath_binomBigWithDouble_withDouble_(jdouble n, jdouble r) {
  OrgGeogebraCommonUtilMyMath_initialize();
  JavaMathBigInteger *ncr = JavaMathBigInteger_get_ONE_(), *dd = JavaMathBigInteger_get_ONE_(), *nn, *rr;
  JavaLangDouble *nnn = new_JavaLangDouble_initWithDouble_(n);
  JavaLangDouble *rrr = new_JavaLangDouble_initWithDouble_(r);
  nn = [(new_JavaMathBigDecimal_initWithNSString_([nnn description])) toBigInteger];
  rr = [(new_JavaMathBigDecimal_initWithNSString_([rrr description])) toBigInteger];
  while ([((JavaMathBigInteger *) nil_chk(dd)) compareToWithId:rr] <= 0) {
    ncr = [((JavaMathBigInteger *) nil_chk(ncr)) multiplyWithJavaMathBigInteger:nn];
    ncr = [((JavaMathBigInteger *) nil_chk(ncr)) divideWithJavaMathBigInteger:dd];
    nn = [((JavaMathBigInteger *) nil_chk(nn)) subtractWithJavaMathBigInteger:JavaMathBigInteger_get_ONE_()];
    dd = [dd addWithJavaMathBigInteger:JavaMathBigInteger_get_ONE_()];
  }
  return [((JavaMathBigInteger *) nil_chk(ncr)) doubleValue];
}

jdouble OrgGeogebraCommonUtilMyMath_binomLogWithDouble_withDouble_(jdouble n, jdouble r) {
  OrgGeogebraCommonUtilMyMath_initialize();
  return JavaLangMath_floorWithDouble_(0.5 + JavaLangMath_expWithDouble_(OrgGeogebraCommonUtilMyMath2_logGammaWithDouble_(n + 1.0) - OrgGeogebraCommonUtilMyMath2_logGammaWithDouble_(r + 1) - OrgGeogebraCommonUtilMyMath2_logGammaWithDouble_((n - r) + 1)));
}

jdouble OrgGeogebraCommonUtilMyMath_maxWithDoubleArray_(IOSDoubleArray *data) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble max = IOSDoubleArray_Get(nil_chk(data), 0);
  for (jint i = 0; i < data->size_; i++) {
    if (IOSDoubleArray_Get(data, i) > max) {
      max = IOSDoubleArray_Get(data, i);
    }
  }
  return max;
}

jdouble OrgGeogebraCommonUtilMyMath_minWithDoubleArray_(IOSDoubleArray *data) {
  OrgGeogebraCommonUtilMyMath_initialize();
  jdouble max = IOSDoubleArray_Get(nil_chk(data), 0);
  for (jint i = 0; i < data->size_; i++) {
    if (IOSDoubleArray_Get(data, i) < max) {
      max = IOSDoubleArray_Get(data, i);
    }
  }
  return max;
}

void OrgGeogebraCommonUtilMyMath_init(OrgGeogebraCommonUtilMyMath *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonUtilMyMath *new_OrgGeogebraCommonUtilMyMath_init() {
  OrgGeogebraCommonUtilMyMath *self = [OrgGeogebraCommonUtilMyMath alloc];
  OrgGeogebraCommonUtilMyMath_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilMyMath)
