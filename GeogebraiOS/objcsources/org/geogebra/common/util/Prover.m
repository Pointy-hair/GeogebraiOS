//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/util/Prover.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/TreeSet.h"
#include "org/geogebra/common/kernel/Construction.h"
#include "org/geogebra/common/kernel/algos/AlgoElement.h"
#include "org/geogebra/common/kernel/algos/AlgoJoinPoints.h"
#include "org/geogebra/common/kernel/algos/AlgoJoinPointsSegment.h"
#include "org/geogebra/common/kernel/geos/GeoElement.h"
#include "org/geogebra/common/kernel/geos/GeoLine.h"
#include "org/geogebra/common/kernel/geos/GeoPoint.h"
#include "org/geogebra/common/kernel/geos/GeoSegment.h"
#include "org/geogebra/common/kernel/prover/AbstractProverReciosMethod.h"
#include "org/geogebra/common/kernel/prover/ProverBotanasMethod.h"
#include "org/geogebra/common/kernel/prover/ProverPureSymbolicMethod.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/plugin/EuclidianStyleConstants.h"
#include "org/geogebra/common/util/Prover.h"

@interface OrgGeogebraCommonUtilProver () {
 @public
  OrgGeogebraCommonUtilProver_ProverEngineEnum *engine_;
  JavaUtilHashSet *ndgConditions_;
  jboolean returnExtraNDGs_;
  id<JavaUtilList> proveAutoOrder_;
  id<JavaUtilList> proveDetailsAutoOrder_;
}

- (OrgGeogebraCommonUtilProver_ProofResultEnum *)overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum:(OrgGeogebraCommonUtilProver_ProofResultEnum *)pr;

- (void)callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum:(OrgGeogebraCommonUtilProver_ProverEngineEnum *)currentEngine;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonUtilProver, engine_, OrgGeogebraCommonUtilProver_ProverEngineEnum *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonUtilProver, ndgConditions_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonUtilProver, proveAutoOrder_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonUtilProver, proveDetailsAutoOrder_, id<JavaUtilList>)

__attribute__((unused)) static OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonUtilProver_overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum_(OrgGeogebraCommonUtilProver *self, OrgGeogebraCommonUtilProver_ProofResultEnum *pr);

__attribute__((unused)) static void OrgGeogebraCommonUtilProver_callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum_(OrgGeogebraCommonUtilProver *self, OrgGeogebraCommonUtilProver_ProverEngineEnum *currentEngine);

__attribute__((unused)) static void OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(OrgGeogebraCommonUtilProver_ProverEngineEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonUtilProver_ProverEngineEnum *new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(OrgGeogebraCommonUtilProver_ProofResultEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgGeogebraCommonUtilProver_ProofResultEnum *new_OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface OrgGeogebraCommonUtilProver_NDGCondition ()

+ (OrgGeogebraCommonKernelGeosGeoLine *)lineWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P1
                                            withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P2
                                            withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons;

+ (OrgGeogebraCommonKernelGeosGeoSegment *)segmentWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P1
                                                  withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P2
                                                  withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons;

- (void)sortGeos;

@end

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoLine *OrgGeogebraCommonUtilProver_NDGCondition_lineWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoPoint *P1, OrgGeogebraCommonKernelGeosGeoPoint *P2, OrgGeogebraCommonKernelConstruction *cons);

__attribute__((unused)) static OrgGeogebraCommonKernelGeosGeoSegment *OrgGeogebraCommonUtilProver_NDGCondition_segmentWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoPoint *P1, OrgGeogebraCommonKernelGeosGeoPoint *P2, OrgGeogebraCommonKernelConstruction *cons);

__attribute__((unused)) static void OrgGeogebraCommonUtilProver_NDGCondition_sortGeos(OrgGeogebraCommonUtilProver_NDGCondition *self);

@interface OrgGeogebraCommonUtilProver_NDGCondition_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(OrgGeogebraCommonKernelGeosGeoElement *)g1
               withId:(OrgGeogebraCommonKernelGeosGeoElement *)g2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonUtilProver_NDGCondition_$1)

__attribute__((unused)) static void OrgGeogebraCommonUtilProver_NDGCondition_$1_init(OrgGeogebraCommonUtilProver_NDGCondition_$1 *self);

__attribute__((unused)) static OrgGeogebraCommonUtilProver_NDGCondition_$1 *new_OrgGeogebraCommonUtilProver_NDGCondition_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonUtilProver_NDGCondition_$1)

OrgGeogebraCommonKernelProverAbstractProverReciosMethod *OrgGeogebraCommonUtilProver_reciosProver_;

@implementation OrgGeogebraCommonUtilProver

- (OrgGeogebraCommonKernelGeosGeoElement *)getStatement {
  return statement_;
}

- (instancetype)init {
  OrgGeogebraCommonUtilProver_init(self);
  return self;
}

- (void)setTimeoutWithInt:(jint)timeout {
  self->timeout_ = timeout;
}

- (void)setProverEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum:(OrgGeogebraCommonUtilProver_ProverEngineEnum *)engine {
  self->engine_ = engine;
}

- (void)setConstructionWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)construction {
  self->construction_ = construction;
}

- (void)setStatementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)root {
  self->statement_ = root;
}

- (void)addNDGconditionWithOrgGeogebraCommonUtilProver_NDGCondition:(OrgGeogebraCommonUtilProver_NDGCondition *)ndgc {
  [((JavaUtilHashSet *) nil_chk(ndgConditions_)) addWithId:ndgc];
}

- (void)decideStatement {
  if (statement_ == nil) {
    OrgGeogebraCommonMainApp_errorWithNSString_(@"No statement to prove");
    result_ = OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
    return;
  }
  OrgGeogebraCommonKernelAlgosAlgoElement *algoParent = [((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(statement_)) getParentAlgorithm];
  if (algoParent == nil) {
    if ([((NSString *) nil_chk([statement_ getValueForInputBar])) isEqual:@"true"]) result_ = OrgGeogebraCommonUtilProver_ProofResultEnum_get_TRUE();
    else if ([((NSString *) nil_chk([statement_ getValueForInputBar])) isEqual:@"false"]) result_ = OrgGeogebraCommonUtilProver_ProofResultEnum_get_FALSE();
    else result_ = OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
    return;
  }
  if (engine_ != OrgGeogebraCommonUtilProver_ProverEngineEnum_get_AUTO()) {
    OrgGeogebraCommonUtilProver_callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum_(self, engine_);
    return;
  }
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("$@", @"Using ", engine_));
  id<JavaUtilIterator> it;
  if ([self isReturnExtraNDGs]) it = [((id<JavaUtilList>) nil_chk(proveDetailsAutoOrder_)) iterator];
  else it = [((id<JavaUtilList>) nil_chk(proveAutoOrder_)) iterator];
  result_ = OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN();
  while ((result_ == OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN() || result_ == OrgGeogebraCommonUtilProver_ProofResultEnum_get_TRUE_NDG_UNREADABLE()) && [((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    OrgGeogebraCommonUtilProver_ProverEngineEnum *pe = [((id<JavaUtilIterator>) nil_chk(it)) next];
    OrgGeogebraCommonUtilProver_callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum_(self, pe);
  }
}

- (OrgGeogebraCommonUtilProver_ProofResultEnum *)overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum:(OrgGeogebraCommonUtilProver_ProofResultEnum *)pr {
  return OrgGeogebraCommonUtilProver_overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum_(self, pr);
}

- (void)callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum:(OrgGeogebraCommonUtilProver_ProverEngineEnum *)currentEngine {
  OrgGeogebraCommonUtilProver_callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum_(self, currentEngine);
}

- (JavaUtilHashSet *)getNDGConditions {
  return ndgConditions_;
}

- (OrgGeogebraCommonUtilProver_ProofResultEnum *)getProofResult {
  return result_;
}

- (JavaLangBoolean *)getYesNoAnswer {
  if (result_ != nil) {
    if (result_ == OrgGeogebraCommonUtilProver_ProofResultEnum_get_TRUE() || result_ == OrgGeogebraCommonUtilProver_ProofResultEnum_get_TRUE_NDG_UNREADABLE()) return JavaLangBoolean_valueOfWithBoolean_(YES);
    if (result_ == OrgGeogebraCommonUtilProver_ProofResultEnum_get_FALSE()) return JavaLangBoolean_valueOfWithBoolean_(NO);
  }
  return nil;
}

+ (NSString *)simplifiedXMLWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons
                         withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)statement {
  return OrgGeogebraCommonUtilProver_simplifiedXMLWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_(cons, statement);
}

- (void)compute {
}

- (OrgGeogebraCommonUtilProver_ProofResultEnum *)openGeoProverWithOrgGeogebraCommonUtilProver_ProverEngineEnum:(OrgGeogebraCommonUtilProver_ProverEngineEnum *)pe {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isReturnExtraNDGs {
  return returnExtraNDGs_;
}

- (void)setReturnExtraNDGsWithBoolean:(jboolean)returnExtraNDGs {
  self->returnExtraNDGs_ = returnExtraNDGs;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getStatement", NULL, "Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "init", "Prover", NULL, 0x1, NULL, NULL },
    { "setTimeoutWithInt:", "setTimeout", "V", 0x1, NULL, NULL },
    { "setProverEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum:", "setProverEngine", "V", 0x1, NULL, NULL },
    { "setConstructionWithOrgGeogebraCommonKernelConstruction:", "setConstruction", "V", 0x1, NULL, NULL },
    { "setStatementWithOrgGeogebraCommonKernelGeosGeoElement:", "setStatement", "V", 0x1, NULL, NULL },
    { "addNDGconditionWithOrgGeogebraCommonUtilProver_NDGCondition:", "addNDGcondition", "V", 0x1, NULL, NULL },
    { "decideStatement", NULL, "V", 0x1, NULL, NULL },
    { "overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum:", "override", "Lorg.geogebra.common.util.Prover$ProofResult;", 0x2, NULL, NULL },
    { "callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum:", "callEngine", "V", 0x2, NULL, NULL },
    { "getNDGConditions", NULL, "Ljava.util.HashSet;", 0x1, NULL, NULL },
    { "getProofResult", NULL, "Lorg.geogebra.common.util.Prover$ProofResult;", 0x1, NULL, NULL },
    { "getYesNoAnswer", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "simplifiedXMLWithOrgGeogebraCommonKernelConstruction:withOrgGeogebraCommonKernelGeosGeoElement:", "simplifiedXML", "Ljava.lang.String;", 0xc, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "openGeoProverWithOrgGeogebraCommonUtilProver_ProverEngineEnum:", "openGeoProver", "Lorg.geogebra.common.util.Prover$ProofResult;", 0x404, NULL, NULL },
    { "isReturnExtraNDGs", NULL, "Z", 0x1, NULL, NULL },
    { "setReturnExtraNDGsWithBoolean:", "setReturnExtraNDGs", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "timeout_", NULL, 0x4, "I", NULL, NULL,  },
    { "engine_", NULL, 0x2, "Lorg.geogebra.common.util.Prover$ProverEngine;", NULL, NULL,  },
    { "construction_", NULL, 0x4, "Lorg.geogebra.common.kernel.Construction;", NULL, NULL,  },
    { "statement_", NULL, 0x4, "Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "reciosProver_", NULL, 0xc, "Lorg.geogebra.common.kernel.prover.AbstractProverReciosMethod;", &OrgGeogebraCommonUtilProver_reciosProver_, NULL,  },
    { "ndgConditions_", NULL, 0x2, "Ljava.util.HashSet;", NULL, "Ljava/util/HashSet<Lorg/geogebra/common/util/Prover$NDGCondition;>;",  },
    { "result_", NULL, 0x4, "Lorg.geogebra.common.util.Prover$ProofResult;", NULL, NULL,  },
    { "returnExtraNDGs_", NULL, 0x2, "Z", NULL, NULL,  },
    { "proveAutoOrder_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/geogebra/common/util/Prover$ProverEngine;>;",  },
    { "proveDetailsAutoOrder_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/geogebra/common/util/Prover$ProverEngine;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.common.util.Prover$ProverEngine;", "Lorg.geogebra.common.util.Prover$ProofResult;", "Lorg.geogebra.common.util.Prover$NDGCondition;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilProver = { 2, "Prover", "org.geogebra.common.util", NULL, 0x401, 18, methods, 10, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_OrgGeogebraCommonUtilProver;
}

@end

void OrgGeogebraCommonUtilProver_init(OrgGeogebraCommonUtilProver *self) {
  (void) NSObject_init(self);
  self->timeout_ = 5;
  self->engine_ = OrgGeogebraCommonUtilProver_ProverEngineEnum_get_AUTO();
  self->ndgConditions_ = new_JavaUtilHashSet_init();
  self->proveAutoOrder_ = new_JavaUtilArrayList_init();
  [self->proveAutoOrder_ addWithId:OrgGeogebraCommonUtilProver_ProverEngineEnum_get_RECIOS_PROVER()];
  [self->proveAutoOrder_ addWithId:OrgGeogebraCommonUtilProver_ProverEngineEnum_get_BOTANAS_PROVER()];
  [self->proveAutoOrder_ addWithId:OrgGeogebraCommonUtilProver_ProverEngineEnum_get_OPENGEOPROVER_WU()];
  [self->proveAutoOrder_ addWithId:OrgGeogebraCommonUtilProver_ProverEngineEnum_get_OPENGEOPROVER_AREA()];
  self->proveDetailsAutoOrder_ = new_JavaUtilArrayList_init();
  [self->proveDetailsAutoOrder_ addWithId:OrgGeogebraCommonUtilProver_ProverEngineEnum_get_BOTANAS_PROVER()];
  [self->proveDetailsAutoOrder_ addWithId:OrgGeogebraCommonUtilProver_ProverEngineEnum_get_OPENGEOPROVER_WU()];
}

OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonUtilProver_overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum_(OrgGeogebraCommonUtilProver *self, OrgGeogebraCommonUtilProver_ProofResultEnum *pr) {
  if (self->result_ == nil || pr != OrgGeogebraCommonUtilProver_ProofResultEnum_get_UNKNOWN()) {
    return pr;
  }
  return self->result_;
}

void OrgGeogebraCommonUtilProver_callEngineWithOrgGeogebraCommonUtilProver_ProverEngineEnum_(OrgGeogebraCommonUtilProver *self, OrgGeogebraCommonUtilProver_ProverEngineEnum *currentEngine) {
  OrgGeogebraCommonMainApp_debugWithNSString_(JreStrcat("$@", @"Using ", currentEngine));
  self->ndgConditions_ = new_JavaUtilHashSet_init();
  if (currentEngine == OrgGeogebraCommonUtilProver_ProverEngineEnum_get_BOTANAS_PROVER()) {
    self->result_ = OrgGeogebraCommonUtilProver_overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum_(self, OrgGeogebraCommonKernelProverProverBotanasMethod_proveWithOrgGeogebraCommonUtilProver_(self));
    return;
  }
  else if (currentEngine == OrgGeogebraCommonUtilProver_ProverEngineEnum_get_RECIOS_PROVER()) {
    self->result_ = OrgGeogebraCommonUtilProver_overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum_(self, [((OrgGeogebraCommonKernelProverAbstractProverReciosMethod *) nil_chk(OrgGeogebraCommonUtilProver_reciosProver_)) proveWithOrgGeogebraCommonUtilProver:self]);
    return;
  }
  else if (currentEngine == OrgGeogebraCommonUtilProver_ProverEngineEnum_get_PURE_SYMBOLIC_PROVER()) {
    self->result_ = OrgGeogebraCommonUtilProver_overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum_(self, OrgGeogebraCommonKernelProverProverPureSymbolicMethod_proveWithOrgGeogebraCommonUtilProver_(self));
    return;
  }
  else if (currentEngine == OrgGeogebraCommonUtilProver_ProverEngineEnum_get_OPENGEOPROVER_WU() || currentEngine == OrgGeogebraCommonUtilProver_ProverEngineEnum_get_OPENGEOPROVER_AREA()) {
    self->result_ = OrgGeogebraCommonUtilProver_overrideWithOrgGeogebraCommonUtilProver_ProofResultEnum_(self, [self openGeoProverWithOrgGeogebraCommonUtilProver_ProverEngineEnum:currentEngine]);
    return;
  }
}

NSString *OrgGeogebraCommonUtilProver_simplifiedXMLWithOrgGeogebraCommonKernelConstruction_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonKernelConstruction *cons, OrgGeogebraCommonKernelGeosGeoElement *statement) {
  OrgGeogebraCommonUtilProver_initialize();
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) getConstructionElementsXML_OGPWithJavaLangStringBuilder:sb withOrgGeogebraCommonKernelGeosGeoElement:statement];
  return JreStrcat("$$$", @"<construction>\n", [sb description], @"</construction>");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilProver)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonUtilProver_ProverEngineEnum)

OrgGeogebraCommonUtilProver_ProverEngineEnum *OrgGeogebraCommonUtilProver_ProverEngineEnum_values_[6];

@implementation OrgGeogebraCommonUtilProver_ProverEngineEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonUtilProver_ProverEngineEnum_values() {
  OrgGeogebraCommonUtilProver_ProverEngineEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonUtilProver_ProverEngineEnum_values_ count:6 type:OrgGeogebraCommonUtilProver_ProverEngineEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonUtilProver_ProverEngineEnum_values();
}

+ (OrgGeogebraCommonUtilProver_ProverEngineEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonUtilProver_ProverEngineEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonUtilProver_ProverEngineEnum *OrgGeogebraCommonUtilProver_ProverEngineEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonUtilProver_ProverEngineEnum_initialize();
  for (int i = 0; i < 6; i++) {
    OrgGeogebraCommonUtilProver_ProverEngineEnum *e = OrgGeogebraCommonUtilProver_ProverEngineEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonUtilProver_ProverEngineEnum class]) {
    OrgGeogebraCommonUtilProver_ProverEngineEnum_RECIOS_PROVER = new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(@"RECIOS_PROVER", 0);
    OrgGeogebraCommonUtilProver_ProverEngineEnum_BOTANAS_PROVER = new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(@"BOTANAS_PROVER", 1);
    OrgGeogebraCommonUtilProver_ProverEngineEnum_OPENGEOPROVER_WU = new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(@"OPENGEOPROVER_WU", 2);
    OrgGeogebraCommonUtilProver_ProverEngineEnum_OPENGEOPROVER_AREA = new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(@"OPENGEOPROVER_AREA", 3);
    OrgGeogebraCommonUtilProver_ProverEngineEnum_PURE_SYMBOLIC_PROVER = new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(@"PURE_SYMBOLIC_PROVER", 4);
    OrgGeogebraCommonUtilProver_ProverEngineEnum_AUTO = new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(@"AUTO", 5);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonUtilProver_ProverEngineEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "RECIOS_PROVER", "RECIOS_PROVER", 0x4019, "Lorg.geogebra.common.util.Prover$ProverEngine;", &OrgGeogebraCommonUtilProver_ProverEngineEnum_RECIOS_PROVER, NULL,  },
    { "BOTANAS_PROVER", "BOTANAS_PROVER", 0x4019, "Lorg.geogebra.common.util.Prover$ProverEngine;", &OrgGeogebraCommonUtilProver_ProverEngineEnum_BOTANAS_PROVER, NULL,  },
    { "OPENGEOPROVER_WU", "OPENGEOPROVER_WU", 0x4019, "Lorg.geogebra.common.util.Prover$ProverEngine;", &OrgGeogebraCommonUtilProver_ProverEngineEnum_OPENGEOPROVER_WU, NULL,  },
    { "OPENGEOPROVER_AREA", "OPENGEOPROVER_AREA", 0x4019, "Lorg.geogebra.common.util.Prover$ProverEngine;", &OrgGeogebraCommonUtilProver_ProverEngineEnum_OPENGEOPROVER_AREA, NULL,  },
    { "PURE_SYMBOLIC_PROVER", "PURE_SYMBOLIC_PROVER", 0x4019, "Lorg.geogebra.common.util.Prover$ProverEngine;", &OrgGeogebraCommonUtilProver_ProverEngineEnum_PURE_SYMBOLIC_PROVER, NULL,  },
    { "AUTO", "AUTO", 0x4019, "Lorg.geogebra.common.util.Prover$ProverEngine;", &OrgGeogebraCommonUtilProver_ProverEngineEnum_AUTO, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.util.Prover$ProverEngine;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilProver_ProverEngineEnum = { 2, "ProverEngine", "org.geogebra.common.util", "Prover", 0x4019, 0, NULL, 6, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/util/Prover$ProverEngine;>;" };
  return &_OrgGeogebraCommonUtilProver_ProverEngineEnum;
}

@end

void OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(OrgGeogebraCommonUtilProver_ProverEngineEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonUtilProver_ProverEngineEnum *new_OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonUtilProver_ProverEngineEnum *self = [OrgGeogebraCommonUtilProver_ProverEngineEnum alloc];
  OrgGeogebraCommonUtilProver_ProverEngineEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilProver_ProverEngineEnum)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonUtilProver_ProofResultEnum)

OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonUtilProver_ProofResultEnum_values_[5];

@implementation OrgGeogebraCommonUtilProver_ProofResultEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgGeogebraCommonUtilProver_ProofResultEnum_values() {
  OrgGeogebraCommonUtilProver_ProofResultEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgGeogebraCommonUtilProver_ProofResultEnum_values_ count:5 type:OrgGeogebraCommonUtilProver_ProofResultEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgGeogebraCommonUtilProver_ProofResultEnum_values();
}

+ (OrgGeogebraCommonUtilProver_ProofResultEnum *)valueOfWithNSString:(NSString *)name {
  return OrgGeogebraCommonUtilProver_ProofResultEnum_valueOfWithNSString_(name);
}

OrgGeogebraCommonUtilProver_ProofResultEnum *OrgGeogebraCommonUtilProver_ProofResultEnum_valueOfWithNSString_(NSString *name) {
  OrgGeogebraCommonUtilProver_ProofResultEnum_initialize();
  for (int i = 0; i < 5; i++) {
    OrgGeogebraCommonUtilProver_ProofResultEnum *e = OrgGeogebraCommonUtilProver_ProofResultEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonUtilProver_ProofResultEnum class]) {
    OrgGeogebraCommonUtilProver_ProofResultEnum_TRUE = new_OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(@"TRUE", 0);
    OrgGeogebraCommonUtilProver_ProofResultEnum_TRUE_NDG_UNREADABLE = new_OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(@"TRUE_NDG_UNREADABLE", 1);
    OrgGeogebraCommonUtilProver_ProofResultEnum_FALSE = new_OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(@"FALSE", 2);
    OrgGeogebraCommonUtilProver_ProofResultEnum_UNKNOWN = new_OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(@"UNKNOWN", 3);
    OrgGeogebraCommonUtilProver_ProofResultEnum_PROCESSING = new_OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(@"PROCESSING", 4);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonUtilProver_ProofResultEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "TRUE", "TRUE", 0x4019, "Lorg.geogebra.common.util.Prover$ProofResult;", &OrgGeogebraCommonUtilProver_ProofResultEnum_TRUE, NULL,  },
    { "TRUE_NDG_UNREADABLE", "TRUE_NDG_UNREADABLE", 0x4019, "Lorg.geogebra.common.util.Prover$ProofResult;", &OrgGeogebraCommonUtilProver_ProofResultEnum_TRUE_NDG_UNREADABLE, NULL,  },
    { "FALSE", "FALSE", 0x4019, "Lorg.geogebra.common.util.Prover$ProofResult;", &OrgGeogebraCommonUtilProver_ProofResultEnum_FALSE, NULL,  },
    { "UNKNOWN", "UNKNOWN", 0x4019, "Lorg.geogebra.common.util.Prover$ProofResult;", &OrgGeogebraCommonUtilProver_ProofResultEnum_UNKNOWN, NULL,  },
    { "PROCESSING", "PROCESSING", 0x4019, "Lorg.geogebra.common.util.Prover$ProofResult;", &OrgGeogebraCommonUtilProver_ProofResultEnum_PROCESSING, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.util.Prover$ProofResult;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilProver_ProofResultEnum = { 2, "ProofResult", "org.geogebra.common.util", "Prover", 0x4019, 0, NULL, 5, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/geogebra/common/util/Prover$ProofResult;>;" };
  return &_OrgGeogebraCommonUtilProver_ProofResultEnum;
}

@end

void OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(OrgGeogebraCommonUtilProver_ProofResultEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgGeogebraCommonUtilProver_ProofResultEnum *new_OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgGeogebraCommonUtilProver_ProofResultEnum *self = [OrgGeogebraCommonUtilProver_ProofResultEnum alloc];
  OrgGeogebraCommonUtilProver_ProofResultEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilProver_ProofResultEnum)

@implementation OrgGeogebraCommonUtilProver_NDGCondition

- (jdouble)getReadability {
  return readability_;
}

- (void)setReadabilityWithDouble:(jdouble)readability {
  self->readability_ = readability;
}

- (NSString *)getCondition {
  return condition_;
}

- (void)setConditionWithNSString:(NSString *)condition {
  self->condition_ = condition;
}

- (IOSObjectArray *)getGeos {
  return geos_;
}

- (void)setGeosWithOrgGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)object {
  self->geos_ = object;
}

- (NSUInteger)hash {
  jint result = ((jint) [((NSString *) nil_chk(condition_)) hash]);
  if (geos_ != nil) {
    {
      IOSObjectArray *a__ = geos_;
      OrgGeogebraCommonKernelGeosGeoElement * const *b__ = a__->buffer_;
      OrgGeogebraCommonKernelGeosGeoElement * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        OrgGeogebraCommonKernelGeosGeoElement *geo = *b__++;
        if (geo != nil) {
          result += ((jint) [geo hash]);
        }
      }
    }
  }
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) return NO;
  if (obj == self) return YES;
  if ([nil_chk(obj) getClass] != [self getClass]) return NO;
  return ((jint) [self hash]) == ((jint) [obj hash]);
}

+ (OrgGeogebraCommonKernelGeosGeoLine *)lineWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P1
                                            withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P2
                                            withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return OrgGeogebraCommonUtilProver_NDGCondition_lineWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P1, P2, cons);
}

+ (OrgGeogebraCommonKernelGeosGeoSegment *)segmentWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P1
                                                  withOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)P2
                                                  withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  return OrgGeogebraCommonUtilProver_NDGCondition_segmentWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P1, P2, cons);
}

- (void)sortGeos {
  OrgGeogebraCommonUtilProver_NDGCondition_sortGeos(self);
}

- (void)rewriteWithOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons {
  NSString *cond = [self getCondition];
  if ([@"ArePerpendicular" isEqual:cond] && ((IOSObjectArray *) nil_chk(self->geos_))->size_ == 3) {
    OrgGeogebraCommonKernelGeosGeoPoint *P1 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 0), [OrgGeogebraCommonKernelGeosGeoPoint class]);
    OrgGeogebraCommonKernelGeosGeoPoint *P2 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 1), [OrgGeogebraCommonKernelGeosGeoPoint class]);
    OrgGeogebraCommonKernelGeosGeoPoint *P3 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 2), [OrgGeogebraCommonKernelGeosGeoPoint class]);
    OrgGeogebraCommonKernelGeosGeoLine *l1 = OrgGeogebraCommonUtilProver_NDGCondition_lineWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P1, P3, cons);
    OrgGeogebraCommonKernelGeosGeoLine *l2 = OrgGeogebraCommonUtilProver_NDGCondition_lineWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P3, P2, cons);
    if (l1 != nil && l2 != nil) {
      geos_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
      (void) IOSObjectArray_Set(geos_, 0, l1);
      (void) IOSObjectArray_Set(geos_, 1, l2);
      OrgGeogebraCommonUtilProver_NDGCondition_sortGeos(self);
    }
  }
  else if (([@"AreEqual" isEqual:cond] || [@"ArePerpendicular" isEqual:cond] || [@"AreParallel" isEqual:cond])) {
    if (((IOSObjectArray *) nil_chk(self->geos_))->size_ == 4) {
      OrgGeogebraCommonKernelGeosGeoPoint *P1 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 0), [OrgGeogebraCommonKernelGeosGeoPoint class]);
      OrgGeogebraCommonKernelGeosGeoPoint *P2 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 1), [OrgGeogebraCommonKernelGeosGeoPoint class]);
      OrgGeogebraCommonKernelGeosGeoLine *l1 = OrgGeogebraCommonUtilProver_NDGCondition_lineWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P1, P2, cons);
      OrgGeogebraCommonKernelGeosGeoPoint *P3 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 2), [OrgGeogebraCommonKernelGeosGeoPoint class]);
      OrgGeogebraCommonKernelGeosGeoPoint *P4 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 3), [OrgGeogebraCommonKernelGeosGeoPoint class]);
      OrgGeogebraCommonKernelGeosGeoLine *l2 = OrgGeogebraCommonUtilProver_NDGCondition_lineWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P3, P4, cons);
      if (l1 != nil && l2 != nil) {
        geos_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
        (void) IOSObjectArray_Set(geos_, 0, l1);
        (void) IOSObjectArray_Set(geos_, 1, l2);
        OrgGeogebraCommonUtilProver_NDGCondition_sortGeos(self);
      }
    }
    else if (self->geos_->size_ == 2) {
      OrgGeogebraCommonUtilProver_NDGCondition_sortGeos(self);
    }
  }
  else if ([@"IsIsoscelesTriangle" isEqual:cond]) {
    OrgGeogebraCommonKernelGeosGeoPoint *P1 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(nil_chk(self->geos_), 0), [OrgGeogebraCommonKernelGeosGeoPoint class]);
    OrgGeogebraCommonKernelGeosGeoPoint *P2 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 1), [OrgGeogebraCommonKernelGeosGeoPoint class]);
    OrgGeogebraCommonKernelGeosGeoPoint *P3 = (OrgGeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(self->geos_, 2), [OrgGeogebraCommonKernelGeosGeoPoint class]);
    OrgGeogebraCommonKernelGeosGeoSegment *l1 = OrgGeogebraCommonUtilProver_NDGCondition_segmentWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P1, P2, cons);
    OrgGeogebraCommonKernelGeosGeoSegment *l2 = OrgGeogebraCommonUtilProver_NDGCondition_segmentWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(P2, P3, cons);
    if (l1 != nil && l2 != nil) {
      geos_ = [IOSObjectArray newArrayWithLength:2 type:OrgGeogebraCommonKernelGeosGeoElement_class_()];
      (void) IOSObjectArray_Set(geos_, 0, l1);
      (void) IOSObjectArray_Set(geos_, 1, l2);
      OrgGeogebraCommonUtilProver_NDGCondition_sortGeos(self);
      [self setConditionWithNSString:@"AreEqual"];
    }
  }
}

- (instancetype)init {
  OrgGeogebraCommonUtilProver_NDGCondition_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getReadability", NULL, "D", 0x1, NULL, NULL },
    { "setReadabilityWithDouble:", "setReadability", "V", 0x1, NULL, NULL },
    { "getCondition", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setConditionWithNSString:", "setCondition", "V", 0x1, NULL, NULL },
    { "getGeos", NULL, "[Lorg.geogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "setGeosWithOrgGeogebraCommonKernelGeosGeoElementArray:", "setGeos", "V", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "lineWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelConstruction:", "line", "Lorg.geogebra.common.kernel.geos.GeoLine;", 0xa, NULL, NULL },
    { "segmentWithOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelGeosGeoPoint:withOrgGeogebraCommonKernelConstruction:", "segment", "Lorg.geogebra.common.kernel.geos.GeoSegment;", 0xa, NULL, NULL },
    { "sortGeos", NULL, "V", 0x2, NULL, NULL },
    { "rewriteWithOrgGeogebraCommonKernelConstruction:", "rewrite", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "condition_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
    { "readability_", NULL, 0x0, "D", NULL, NULL,  },
    { "geos_", NULL, 0x0, "[Lorg.geogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilProver_NDGCondition = { 2, "NDGCondition", "org.geogebra.common.util", "Prover", 0x9, 13, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonUtilProver_NDGCondition;
}

@end

OrgGeogebraCommonKernelGeosGeoLine *OrgGeogebraCommonUtilProver_NDGCondition_lineWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoPoint *P1, OrgGeogebraCommonKernelGeosGeoPoint *P2, OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonUtilProver_NDGCondition_initialize();
  JavaUtilTreeSet *ges = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) getGeoSetConstructionOrder];
  id<JavaUtilIterator> it = [((JavaUtilTreeSet *) nil_chk(ges)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    OrgGeogebraCommonKernelGeosGeoElement *ge = [it next];
    if ([ge isKindOfClass:[OrgGeogebraCommonKernelGeosGeoLine class]]) {
      OrgGeogebraCommonKernelGeosGeoPoint *Q1 = [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(((OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(ge, [OrgGeogebraCommonKernelGeosGeoLine class])))) getStartPoint];
      OrgGeogebraCommonKernelGeosGeoPoint *Q2 = [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(((OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(ge, [OrgGeogebraCommonKernelGeosGeoLine class])))) getEndPoint];
      if ((Q1 != nil && Q2 != nil) && (([Q1 isEqual:P1] && [Q2 isEqual:P2]) || ([Q1 isEqual:P2] && [Q2 isEqual:P1]))) {
        return (OrgGeogebraCommonKernelGeosGeoLine *) check_class_cast(ge, [OrgGeogebraCommonKernelGeosGeoLine class]);
      }
    }
  }
  jboolean oldMacroMode = [cons isSuppressLabelsActive];
  [cons setSuppressLabelCreationWithBoolean:NO];
  OrgGeogebraCommonKernelAlgosAlgoJoinPoints *ajp = new_OrgGeogebraCommonKernelAlgosAlgoJoinPoints_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(cons, nil, P1, P2);
  OrgGeogebraCommonKernelGeosGeoLine *line = [ajp getLine];
  [((OrgGeogebraCommonKernelGeosGeoLine *) nil_chk(line)) setEuclidianVisibleWithBoolean:YES];
  [line setLineTypeWithInt:OrgGeogebraCommonPluginEuclidianStyleConstants_LINE_TYPE_DASHED_LONG];
  [line setLabelVisibleWithBoolean:YES];
  [line updateVisualStyle];
  [cons setSuppressLabelCreationWithBoolean:oldMacroMode];
  return line;
}

OrgGeogebraCommonKernelGeosGeoSegment *OrgGeogebraCommonUtilProver_NDGCondition_segmentWithOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelConstruction_(OrgGeogebraCommonKernelGeosGeoPoint *P1, OrgGeogebraCommonKernelGeosGeoPoint *P2, OrgGeogebraCommonKernelConstruction *cons) {
  OrgGeogebraCommonUtilProver_NDGCondition_initialize();
  JavaUtilTreeSet *ges = [((OrgGeogebraCommonKernelConstruction *) nil_chk(cons)) getGeoSetConstructionOrder];
  id<JavaUtilIterator> it = [((JavaUtilTreeSet *) nil_chk(ges)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    OrgGeogebraCommonKernelGeosGeoElement *ge = [it next];
    if ([ge isKindOfClass:[OrgGeogebraCommonKernelGeosGeoSegment class]]) {
      OrgGeogebraCommonKernelGeosGeoPoint *Q1 = ((OrgGeogebraCommonKernelGeosGeoPoint *) [((OrgGeogebraCommonKernelGeosGeoSegment *) nil_chk(((OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(ge, [OrgGeogebraCommonKernelGeosGeoSegment class])))) getStartPoint]);
      OrgGeogebraCommonKernelGeosGeoPoint *Q2 = ((OrgGeogebraCommonKernelGeosGeoPoint *) [((OrgGeogebraCommonKernelGeosGeoSegment *) nil_chk(((OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(ge, [OrgGeogebraCommonKernelGeosGeoSegment class])))) getEndPoint]);
      if ((Q1 != nil && Q2 != nil) && (([Q1 isEqual:P1] && [Q2 isEqual:P2]) || ([Q1 isEqual:P2] && [Q2 isEqual:P1]))) {
        return (OrgGeogebraCommonKernelGeosGeoSegment *) check_class_cast(ge, [OrgGeogebraCommonKernelGeosGeoSegment class]);
      }
    }
  }
  jboolean oldMacroMode = [cons isSuppressLabelsActive];
  [cons setSuppressLabelCreationWithBoolean:NO];
  OrgGeogebraCommonKernelAlgosAlgoJoinPointsSegment *ajp = new_OrgGeogebraCommonKernelAlgosAlgoJoinPointsSegment_initWithOrgGeogebraCommonKernelConstruction_withNSString_withOrgGeogebraCommonKernelGeosGeoPoint_withOrgGeogebraCommonKernelGeosGeoPoint_(cons, nil, P1, P2);
  OrgGeogebraCommonKernelGeosGeoSegment *segment = [ajp getSegment];
  [((OrgGeogebraCommonKernelGeosGeoSegment *) nil_chk(segment)) setEuclidianVisibleWithBoolean:YES];
  [segment setLineTypeWithInt:OrgGeogebraCommonPluginEuclidianStyleConstants_LINE_TYPE_DASHED_LONG];
  [segment setLabelVisibleWithBoolean:YES];
  [segment updateVisualStyle];
  [cons setSuppressLabelCreationWithBoolean:oldMacroMode];
  return segment;
}

void OrgGeogebraCommonUtilProver_NDGCondition_sortGeos(OrgGeogebraCommonUtilProver_NDGCondition *self) {
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(self->geos_, new_OrgGeogebraCommonUtilProver_NDGCondition_$1_init());
}

void OrgGeogebraCommonUtilProver_NDGCondition_init(OrgGeogebraCommonUtilProver_NDGCondition *self) {
  (void) NSObject_init(self);
  self->readability_ = 1.0;
}

OrgGeogebraCommonUtilProver_NDGCondition *new_OrgGeogebraCommonUtilProver_NDGCondition_init() {
  OrgGeogebraCommonUtilProver_NDGCondition *self = [OrgGeogebraCommonUtilProver_NDGCondition alloc];
  OrgGeogebraCommonUtilProver_NDGCondition_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilProver_NDGCondition)

@implementation OrgGeogebraCommonUtilProver_NDGCondition_$1

- (jint)compareWithId:(OrgGeogebraCommonKernelGeosGeoElement *)g1
               withId:(OrgGeogebraCommonKernelGeosGeoElement *)g2 {
  return [((NSString *) nil_chk([((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(g1)) getLabelSimple])) compareToWithId:[((OrgGeogebraCommonKernelGeosGeoElement *) nil_chk(g2)) getLabelSimple]];
}

- (instancetype)init {
  OrgGeogebraCommonUtilProver_NDGCondition_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgGeogebraCommonUtilProver_NDGCondition", "sortGeos" };
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilProver_NDGCondition_$1 = { 2, "", "org.geogebra.common.util", "Prover$NDGCondition", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Comparator<Lorg/geogebra/common/kernel/geos/GeoElement;>;" };
  return &_OrgGeogebraCommonUtilProver_NDGCondition_$1;
}

@end

void OrgGeogebraCommonUtilProver_NDGCondition_$1_init(OrgGeogebraCommonUtilProver_NDGCondition_$1 *self) {
  (void) NSObject_init(self);
}

OrgGeogebraCommonUtilProver_NDGCondition_$1 *new_OrgGeogebraCommonUtilProver_NDGCondition_$1_init() {
  OrgGeogebraCommonUtilProver_NDGCondition_$1 *self = [OrgGeogebraCommonUtilProver_NDGCondition_$1 alloc];
  OrgGeogebraCommonUtilProver_NDGCondition_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilProver_NDGCondition_$1)
