//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/util/MyMath2.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/complex/Complex.h"
#include "org/apache/commons/math/special/Beta.h"
#include "org/apache/commons/math/special/Erf.h"
#include "org/apache/commons/math/special/Gamma.h"
#include "org/geogebra/common/kernel/Kernel.h"
#include "org/geogebra/common/kernel/arithmetic/NumberValue.h"
#include "org/geogebra/common/util/MyMath2.h"
#include "org/geogebra/common/util/PolyGamma.h"
#include "org/geogebra/common/util/Riemann.h"

#define OrgGeogebraCommonUtilMyMath2_CANTOR_MAX_ITERATIONS 1000

@interface OrgGeogebraCommonUtilMyMath2 ()

+ (jdouble)cantorWithDouble:(jdouble)x
                 withDouble:(jdouble)depth;

+ (OrgApacheCommonsMathComplexComplex *)cisiWithDouble:(jdouble)a2;

@end

static jint OrgGeogebraCommonUtilMyMath2_factorialTop_ = 4;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilMyMath2, factorialTop_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonUtilMyMath2, factorialTop_, jint)

static IOSDoubleArray *OrgGeogebraCommonUtilMyMath2_factorialTable_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilMyMath2, factorialTable_, IOSDoubleArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonUtilMyMath2, factorialTable_, IOSDoubleArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilMyMath2, CANTOR_MAX_ITERATIONS, jint)

static jdouble OrgGeogebraCommonUtilMyMath2_C2sqrtPi_ = 1.1283791670955125738961589;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilMyMath2, C2sqrtPi_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonUtilMyMath2, C2sqrtPi_, jdouble)

static jdouble OrgGeogebraCommonUtilMyMath2_TMIN_ = 2.0;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilMyMath2, TMIN_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonUtilMyMath2, TMIN_, jdouble)

static jint OrgGeogebraCommonUtilMyMath2_MAXIT_ = 100;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilMyMath2, MAXIT_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgGeogebraCommonUtilMyMath2, MAXIT_, jint)

__attribute__((unused)) static jdouble OrgGeogebraCommonUtilMyMath2_cantorWithDouble_withDouble_(jdouble x, jdouble depth);

__attribute__((unused)) static OrgApacheCommonsMathComplexComplex *OrgGeogebraCommonUtilMyMath2_cisiWithDouble_(jdouble a2);

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonUtilMyMath2)

jdouble OrgGeogebraCommonUtilMyMath2_EULER_ = 0.57721566;

@implementation OrgGeogebraCommonUtilMyMath2

+ (jdouble)gammaIncompleteWithDouble:(jdouble)a
                          withDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_gammaIncompleteWithDouble_withDouble_(a, x);
}

+ (jdouble)gammaIncompleteRegularizedWithDouble:(jdouble)a
                                     withDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_gammaIncompleteRegularizedWithDouble_withDouble_(a, x);
}

+ (jdouble)betaWithDouble:(jdouble)a
               withDouble:(jdouble)b {
  return OrgGeogebraCommonUtilMyMath2_betaWithDouble_withDouble_(a, b);
}

+ (jdouble)betaIncompleteWithDouble:(jdouble)a
                         withDouble:(jdouble)b
                         withDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_betaIncompleteWithDouble_withDouble_withDouble_(a, b, x);
}

+ (jdouble)betaIncompleteRegularizedWithDouble:(jdouble)a
                                    withDouble:(jdouble)b
                                    withDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_betaIncompleteRegularizedWithDouble_withDouble_withDouble_(a, b, x);
}

+ (jdouble)factorialWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_factorialWithDouble_(x);
}

+ (jdouble)gammaWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_gammaWithDouble_(x);
}

+ (jdouble)cantorWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_cantorWithDouble_(x);
}

+ (jdouble)cantorWithDouble:(jdouble)x
                 withDouble:(jdouble)depth {
  return OrgGeogebraCommonUtilMyMath2_cantorWithDouble_withDouble_(x, depth);
}

+ (jdouble)erfWithDouble:(jdouble)mean
              withDouble:(jdouble)standardDeviation
              withDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_erfWithDouble_withDouble_withDouble_(mean, standardDeviation, x);
}

+ (jdouble)inverfWithDouble:(jdouble)z {
  return OrgGeogebraCommonUtilMyMath2_inverfWithDouble_(z);
}

+ (jdouble)psiWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_psiWithDouble_(x);
}

+ (jdouble)logGammaWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_logGammaWithDouble_(x);
}

+ (jdouble)polyGammaWithOrgGeogebraCommonKernelArithmeticNumberValue:(id<OrgGeogebraCommonKernelArithmeticNumberValue>)order
                                                          withDouble:(jdouble)x {
  return OrgGeogebraCommonUtilMyMath2_polyGammaWithOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(order, x);
}

+ (OrgApacheCommonsMathComplexComplex *)cisiWithDouble:(jdouble)a2 {
  return OrgGeogebraCommonUtilMyMath2_cisiWithDouble_(a2);
}

+ (jdouble)ciWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath2_ciWithDouble_(a);
}

+ (jdouble)siWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath2_siWithDouble_(a);
}

+ (jdouble)eiWithDouble:(jdouble)a {
  return OrgGeogebraCommonUtilMyMath2_eiWithDouble_(a);
}

+ (jdouble)erfWithDouble:(jdouble)d {
  return OrgGeogebraCommonUtilMyMath2_erfWithDouble_(d);
}

+ (jdouble)zetaWithDouble:(jdouble)val {
  return OrgGeogebraCommonUtilMyMath2_zetaWithDouble_(val);
}

- (instancetype)init {
  OrgGeogebraCommonUtilMyMath2_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonUtilMyMath2 class]) {
    JreStrongAssignAndConsume(&OrgGeogebraCommonUtilMyMath2_factorialTable_, nil, [IOSDoubleArray newArrayWithLength:33]);
    {
      *IOSDoubleArray_GetRef(OrgGeogebraCommonUtilMyMath2_factorialTable_, 0) = 1.0;
      *IOSDoubleArray_GetRef(OrgGeogebraCommonUtilMyMath2_factorialTable_, 1) = 1.0;
      *IOSDoubleArray_GetRef(OrgGeogebraCommonUtilMyMath2_factorialTable_, 2) = 2.0;
      *IOSDoubleArray_GetRef(OrgGeogebraCommonUtilMyMath2_factorialTable_, 3) = 6.0;
      *IOSDoubleArray_GetRef(OrgGeogebraCommonUtilMyMath2_factorialTable_, 4) = 24.0;
    }
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonUtilMyMath2)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "gammaIncompleteWithDouble:withDouble:", "gammaIncomplete", "D", 0x19, NULL, NULL },
    { "gammaIncompleteRegularizedWithDouble:withDouble:", "gammaIncompleteRegularized", "D", 0x19, NULL, NULL },
    { "betaWithDouble:withDouble:", "beta", "D", 0x19, NULL, NULL },
    { "betaIncompleteWithDouble:withDouble:withDouble:", "betaIncomplete", "D", 0x19, NULL, NULL },
    { "betaIncompleteRegularizedWithDouble:withDouble:withDouble:", "betaIncompleteRegularized", "D", 0x19, NULL, NULL },
    { "factorialWithDouble:", "factorial", "D", 0x19, NULL, NULL },
    { "gammaWithDouble:", "gamma", "D", 0x19, NULL, NULL },
    { "cantorWithDouble:", "cantor", "D", 0x19, NULL, NULL },
    { "cantorWithDouble:withDouble:", "cantor", "D", 0x1a, NULL, NULL },
    { "erfWithDouble:withDouble:withDouble:", "erf", "D", 0x19, NULL, NULL },
    { "inverfWithDouble:", "inverf", "D", 0x19, NULL, NULL },
    { "psiWithDouble:", "psi", "D", 0x19, NULL, NULL },
    { "logGammaWithDouble:", "logGamma", "D", 0x19, NULL, NULL },
    { "polyGammaWithOrgGeogebraCommonKernelArithmeticNumberValue:withDouble:", "polyGamma", "D", 0x19, NULL, NULL },
    { "cisiWithDouble:", "cisi", "Lorg.apache.commons.math.complex.Complex;", 0xa, NULL, NULL },
    { "ciWithDouble:", "ci", "D", 0x19, NULL, NULL },
    { "siWithDouble:", "si", "D", 0x19, NULL, NULL },
    { "eiWithDouble:", "ei", "D", 0x19, NULL, NULL },
    { "erfWithDouble:", "erf", "D", 0x9, NULL, NULL },
    { "zetaWithDouble:", "zeta", "D", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "factorialTop_", NULL, 0xa, "I", &OrgGeogebraCommonUtilMyMath2_factorialTop_, NULL,  },
    { "factorialTable_", NULL, 0xa, "[D", &OrgGeogebraCommonUtilMyMath2_factorialTable_, NULL,  },
    { "CANTOR_MAX_ITERATIONS_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonUtilMyMath2_CANTOR_MAX_ITERATIONS },
    { "C2sqrtPi_", NULL, 0xa, "D", &OrgGeogebraCommonUtilMyMath2_C2sqrtPi_, NULL,  },
    { "EULER_", NULL, 0x9, "D", &OrgGeogebraCommonUtilMyMath2_EULER_, NULL,  },
    { "TMIN_", NULL, 0xa, "D", &OrgGeogebraCommonUtilMyMath2_TMIN_, NULL,  },
    { "MAXIT_", NULL, 0xa, "I", &OrgGeogebraCommonUtilMyMath2_MAXIT_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilMyMath2 = { 2, "MyMath2", "org.geogebra.common.util", NULL, 0x1, 21, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonUtilMyMath2;
}

@end

jdouble OrgGeogebraCommonUtilMyMath2_gammaIncompleteWithDouble_withDouble_(jdouble a, jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  @try {
    return OrgApacheCommonsMathSpecialGamma_regularizedGammaPWithDouble_withDouble_(a, x) * OrgGeogebraCommonUtilMyMath2_gammaWithDouble_(a);
  }
  @catch (OrgApacheCommonsMathMathException *e) {
    return JavaLangDouble_NaN;
  }
}

jdouble OrgGeogebraCommonUtilMyMath2_gammaIncompleteRegularizedWithDouble_withDouble_(jdouble a, jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  @try {
    return OrgApacheCommonsMathSpecialGamma_regularizedGammaPWithDouble_withDouble_(a, x);
  }
  @catch (OrgApacheCommonsMathMathException *e) {
    return JavaLangDouble_NaN;
  }
}

jdouble OrgGeogebraCommonUtilMyMath2_betaWithDouble_withDouble_(jdouble a, jdouble b) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  return JavaLangMath_expWithDouble_(OrgApacheCommonsMathSpecialBeta_logBetaWithDouble_withDouble_(a, b));
}

jdouble OrgGeogebraCommonUtilMyMath2_betaIncompleteWithDouble_withDouble_withDouble_(jdouble a, jdouble b, jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  @try {
    return OrgApacheCommonsMathSpecialBeta_regularizedBetaWithDouble_withDouble_withDouble_(x, a, b) * OrgGeogebraCommonUtilMyMath2_betaWithDouble_withDouble_(a, b);
  }
  @catch (OrgApacheCommonsMathMathException *e) {
    return JavaLangDouble_NaN;
  }
}

jdouble OrgGeogebraCommonUtilMyMath2_betaIncompleteRegularizedWithDouble_withDouble_withDouble_(jdouble a, jdouble b, jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  @try {
    return OrgApacheCommonsMathSpecialBeta_regularizedBetaWithDouble_withDouble_withDouble_(x, a, b);
  }
  @catch (OrgApacheCommonsMathMathException *e) {
    return JavaLangDouble_NaN;
  }
}

jdouble OrgGeogebraCommonUtilMyMath2_factorialWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  if (x < 0 || x > 170.624) return JavaLangDouble_NaN;
  if (x < 0 || x > 32 || x - JavaLangMath_floorWithDouble_(x) > 1E-10) return JavaLangMath_expWithDouble_(OrgApacheCommonsMathSpecialGamma_logGammaWithDouble_(x + 1.0));
  jint n = J2ObjCFpToInt(x);
  jint j;
  while (OrgGeogebraCommonUtilMyMath2_factorialTop_ < n) {
    j = OrgGeogebraCommonUtilMyMath2_factorialTop_++;
    *IOSDoubleArray_GetRef(nil_chk(OrgGeogebraCommonUtilMyMath2_factorialTable_), OrgGeogebraCommonUtilMyMath2_factorialTop_) = IOSDoubleArray_Get(OrgGeogebraCommonUtilMyMath2_factorialTable_, j) * OrgGeogebraCommonUtilMyMath2_factorialTop_;
  }
  return IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonUtilMyMath2_factorialTable_), n);
}

jdouble OrgGeogebraCommonUtilMyMath2_gammaWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  if (x <= 0 && OrgGeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x, JavaLangMath_roundWithDouble_(x))) return JavaLangDouble_NaN;
  if (x >= 0) {
    return JavaLangMath_expWithDouble_(OrgApacheCommonsMathSpecialGamma_logGammaWithDouble_(x));
  }
  return -JavaLangMath_PI / (x * JavaLangMath_expWithDouble_(OrgApacheCommonsMathSpecialGamma_logGammaWithDouble_(-x)) * JavaLangMath_sinWithDouble_(JavaLangMath_PI * x));
}

jdouble OrgGeogebraCommonUtilMyMath2_cantorWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  return OrgGeogebraCommonUtilMyMath2_cantorWithDouble_withDouble_(x, 0);
}

jdouble OrgGeogebraCommonUtilMyMath2_cantorWithDouble_withDouble_(jdouble x, jdouble depth) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  if (x < 0) {
    return 0;
  }
  if (x > 1) {
    return 1;
  }
  jdouble x3 = 3 * x;
  if (0 <= x3 && x3 <= 1) {
    if (depth > OrgGeogebraCommonUtilMyMath2_CANTOR_MAX_ITERATIONS) {
      return 0.25;
    }
    return OrgGeogebraCommonUtilMyMath2_cantorWithDouble_withDouble_(3 * x, depth + 1) / 2;
  }
  else if (1 < x3 && x3 < 2) {
    return 0.5;
  }
  if (depth > OrgGeogebraCommonUtilMyMath2_CANTOR_MAX_ITERATIONS) {
    return 0.75;
  }
  return (OrgGeogebraCommonUtilMyMath2_cantorWithDouble_withDouble_(x3 - 2, depth + 1) + 1) / 2;
}

jdouble OrgGeogebraCommonUtilMyMath2_erfWithDouble_withDouble_withDouble_(jdouble mean, jdouble standardDeviation, jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  @try {
    return OrgApacheCommonsMathSpecialErf_erfWithDouble_((x - mean) / (standardDeviation));
  }
  @catch (JavaLangException *ex) {
    if (x < (mean - 20 * standardDeviation)) {
      return -1.0;
    }
    else if (x > (mean + 20 * standardDeviation)) {
      return 1.0;
    }
    else {
      return JavaLangDouble_NaN;
    }
  }
}

jdouble OrgGeogebraCommonUtilMyMath2_inverfWithDouble_(jdouble z) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  if (z > 1 || z < -1) {
    return JavaLangDouble_NaN;
  }
  jdouble c = OrgGeogebraCommonUtilMyMath2_C2sqrtPi_;
  jdouble f = -z, f1 = c;
  jdouble q = f / f1, x = -q, x0 = 0;
  while (JavaLangMath_absWithDouble_(x - x0) > 1e-12 && JavaLangMath_absWithDouble_(f) > 1e-14) {
    x0 = x;
    f = OrgGeogebraCommonUtilMyMath2_erfWithDouble_(x) - z;
    f1 = c * JavaLangMath_expWithDouble_(-x * x);
    q = f / f1;
    x -= q * (1 - x * q);
  }
  return x;
}

jdouble OrgGeogebraCommonUtilMyMath2_psiWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  return OrgApacheCommonsMathSpecialGamma_digammaWithDouble_(x);
}

jdouble OrgGeogebraCommonUtilMyMath2_logGammaWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  return OrgApacheCommonsMathSpecialGamma_logGammaWithDouble_(x);
}

jdouble OrgGeogebraCommonUtilMyMath2_polyGammaWithOrgGeogebraCommonKernelArithmeticNumberValue_withDouble_(id<OrgGeogebraCommonKernelArithmeticNumberValue> order, jdouble x) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  jint o = J2ObjCFpToInt([((id<OrgGeogebraCommonKernelArithmeticNumberValue>) nil_chk(order)) getDouble]);
  switch (o) {
    case 0:
    return OrgApacheCommonsMathSpecialGamma_digammaWithDouble_(x);
    case 1:
    return OrgApacheCommonsMathSpecialGamma_trigammaWithDouble_(x);
    case 2:
    return OrgGeogebraCommonUtilPolyGamma_tetragammaWithDouble_(x);
    case 3:
    return OrgGeogebraCommonUtilPolyGamma_pentagammaWithDouble_(x);
    default:
    return OrgGeogebraCommonUtilPolyGamma_psigammaWithDouble_withDouble_(x, o);
  }
}

OrgApacheCommonsMathComplexComplex *OrgGeogebraCommonUtilMyMath2_cisiWithDouble_(jdouble a2) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  jint i, k;
  jboolean odd;
  jdouble a, err, fact, sign, sum, sumc, sums, t, term;
  OrgApacheCommonsMathComplexComplex *h, *b, *c, *d, *del, *one, *two;
  one = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(1, 0) autorelease];
  two = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(2, 0) autorelease];
  t = JavaLangMath_absWithDouble_(a2);
  if (t == 0.0) {
    return [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(JavaLangDouble_NEGATIVE_INFINITY, 0) autorelease];
  }
  if (t > OrgGeogebraCommonUtilMyMath2_TMIN_) {
    b = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(1, t) autorelease];
    c = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(1000, 0) autorelease];
    d = [one divideWithId:b];
    h = [one divideWithId:b];
    for (i = 2; i <= OrgGeogebraCommonUtilMyMath2_MAXIT_; i++) {
      a = -(i - 1) * (i - 1);
      b = [b addWithId:two];
      d = [one divideWithId:[((OrgApacheCommonsMathComplexComplex *) nil_chk(b)) addWithId:[((OrgApacheCommonsMathComplexComplex *) nil_chk(d)) multiplyWithDouble:a]]];
      c = [b addWithId:[((OrgApacheCommonsMathComplexComplex *) nil_chk([one divideWithId:c])) multiplyWithDouble:a]];
      del = [((OrgApacheCommonsMathComplexComplex *) nil_chk(c)) multiplyWithId:d];
      h = [((OrgApacheCommonsMathComplexComplex *) nil_chk(h)) multiplyWithId:del];
      if (JavaLangMath_absWithDouble_([((OrgApacheCommonsMathComplexComplex *) nil_chk(del)) getReal] - 1.0) + JavaLangMath_absWithDouble_([del getImaginary]) < OrgGeogebraCommonKernelKernel_MIN_PRECISION) break;
    }
    h = [((OrgApacheCommonsMathComplexComplex *) nil_chk(h)) multiplyWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(JavaLangMath_cosWithDouble_(t), -JavaLangMath_sinWithDouble_(t)) autorelease]];
    return [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(-[((OrgApacheCommonsMathComplexComplex *) nil_chk(h)) getReal], JavaLangMath_signumWithDouble_(a2) * (OrgGeogebraCommonKernelKernel_PI_HALF + [h getImaginary])) autorelease];
  }
  if (t < JavaLangMath_sqrtWithDouble_(OrgGeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    sumc = 0.0;
    sums = t;
  }
  else {
    sum = sums = sumc = 0.0;
    sign = fact = 1.0;
    odd = YES;
    for (k = 1; k <= OrgGeogebraCommonUtilMyMath2_MAXIT_; k++) {
      fact *= t / k;
      term = fact / k;
      sum += sign * term;
      err = term / JavaLangMath_absWithDouble_(sum);
      if (odd) {
        sign = -sign;
        sums = sum;
        sum = sumc;
      }
      else {
        sumc = sum;
        sum = sums;
      }
      if (err < OrgGeogebraCommonKernelKernel_STANDARD_PRECISION) break;
      odd = !odd;
    }
    if (k > OrgGeogebraCommonUtilMyMath2_MAXIT_) return [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(JavaLangDouble_NaN, JavaLangDouble_NaN) autorelease];
  }
  return [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(sumc + JavaLangMath_logWithDouble_(t) + OrgGeogebraCommonUtilMyMath2_EULER_, JavaLangMath_signumWithDouble_(a2) * sums) autorelease];
}

jdouble OrgGeogebraCommonUtilMyMath2_ciWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  if (a < 0) return JavaLangDouble_NaN;
  return [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgGeogebraCommonUtilMyMath2_cisiWithDouble_(a))) getReal];
}

jdouble OrgGeogebraCommonUtilMyMath2_siWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  return [((OrgApacheCommonsMathComplexComplex *) nil_chk(OrgGeogebraCommonUtilMyMath2_cisiWithDouble_(a))) getImaginary];
}

jdouble OrgGeogebraCommonUtilMyMath2_eiWithDouble_(jdouble a) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  jdouble ret = OrgGeogebraCommonUtilMyMath2_EULER_ + JavaLangMath_logWithDouble_(JavaLangMath_absWithDouble_(a)) + a;
  jdouble add = a;
  for (jint i = 2; i < OrgGeogebraCommonUtilMyMath2_MAXIT_; i++) {
    add = add * a * (i - 1) / i / i;
    ret = ret + add;
  }
  return ret;
}

jdouble OrgGeogebraCommonUtilMyMath2_erfWithDouble_(jdouble d) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  return OrgGeogebraCommonUtilMyMath2_erfWithDouble_withDouble_withDouble_(0, 1, d);
}

jdouble OrgGeogebraCommonUtilMyMath2_zetaWithDouble_(jdouble val) {
  OrgGeogebraCommonUtilMyMath2_initialize();
  if (val < 0 && OrgGeogebraCommonKernelKernel_isIntegerWithDouble_(val / 2)) return 0;
  IOSDoubleArray *s = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ val, 0 } count:2];
  return IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonUtilRiemann_zetaWithDoubleArray_(s)), 0);
}

void OrgGeogebraCommonUtilMyMath2_init(OrgGeogebraCommonUtilMyMath2 *self) {
  NSObject_init(self);
}

OrgGeogebraCommonUtilMyMath2 *new_OrgGeogebraCommonUtilMyMath2_init() {
  OrgGeogebraCommonUtilMyMath2 *self = [OrgGeogebraCommonUtilMyMath2 alloc];
  OrgGeogebraCommonUtilMyMath2_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilMyMath2)
