//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/util/GgbMat.java
//

#ifndef _OrgGeogebraCommonUtilGgbMat_H_
#define _OrgGeogebraCommonUtilGgbMat_H_

#include "J2ObjC_header.h"
#include "org/apache/commons/math/linear/Array2DRowRealMatrix.h"

@class IOSDoubleArray;
@class OrgGeogebraCommonKernelArithmeticMyList;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoList;
@class OrgGeogebraCommonKernelKernel;

@interface OrgGeogebraCommonUtilGgbMat : OrgApacheCommonsMathLinearArray2DRowRealMatrix

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)inputList;

- (instancetype)initWithInt:(jint)rows
                    withInt:(jint)cols;

- (instancetype)initWithOrgGeogebraCommonKernelArithmeticMyList:(OrgGeogebraCommonKernelArithmeticMyList *)inputList;

- (jdouble)determinant;

- (void)getGeoListWithOrgGeogebraCommonKernelGeosGeoList:(OrgGeogebraCommonKernelGeosGeoList *)outputList
                 withOrgGeogebraCommonKernelConstruction:(OrgGeogebraCommonKernelConstruction *)cons;

- (void)getMyListWithOrgGeogebraCommonKernelArithmeticMyList:(OrgGeogebraCommonKernelArithmeticMyList *)outputList
                           withOrgGeogebraCommonKernelKernel:(OrgGeogebraCommonKernelKernel *)kernel;

- (jboolean)hasOnlyIntegers;

- (void)inverseImmediate;

- (jboolean)isUndefined;

- (void)reducedRowEchelonFormImmediate;

- (void)set3x3fromConicWithDoubleArray:(IOSDoubleArray *)matrix;

- (void)setIsUndefinedWithBoolean:(jboolean)undefined;

- (void)transposeImmediate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonUtilGgbMat)

FOUNDATION_EXPORT void OrgGeogebraCommonUtilGgbMat_initWithOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonUtilGgbMat *self, OrgGeogebraCommonKernelGeosGeoList *inputList);

FOUNDATION_EXPORT OrgGeogebraCommonUtilGgbMat *new_OrgGeogebraCommonUtilGgbMat_initWithOrgGeogebraCommonKernelGeosGeoList_(OrgGeogebraCommonKernelGeosGeoList *inputList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilGgbMat_initWithOrgGeogebraCommonKernelArithmeticMyList_(OrgGeogebraCommonUtilGgbMat *self, OrgGeogebraCommonKernelArithmeticMyList *inputList);

FOUNDATION_EXPORT OrgGeogebraCommonUtilGgbMat *new_OrgGeogebraCommonUtilGgbMat_initWithOrgGeogebraCommonKernelArithmeticMyList_(OrgGeogebraCommonKernelArithmeticMyList *inputList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraCommonUtilGgbMat_initWithInt_withInt_(OrgGeogebraCommonUtilGgbMat *self, jint rows, jint cols);

FOUNDATION_EXPORT OrgGeogebraCommonUtilGgbMat *new_OrgGeogebraCommonUtilGgbMat_initWithInt_withInt_(jint rows, jint cols) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonUtilGgbMat)

#endif // _OrgGeogebraCommonUtilGgbMat_H_
