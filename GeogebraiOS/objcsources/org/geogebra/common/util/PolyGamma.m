//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/javasources/org/geogebra/common/util/PolyGamma.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/util/PolyGamma.h"

#define OrgGeogebraCommonUtilPolyGamma_kMaxValue 100
#define OrgGeogebraCommonUtilPolyGamma_DBL_MANT_DIG 53
#define OrgGeogebraCommonUtilPolyGamma_DBL_MIN_EXP -1021

static jdouble OrgGeogebraCommonUtilPolyGamma_klog10Of2_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilPolyGamma, klog10Of2_, jdouble)

static jdouble OrgGeogebraCommonUtilPolyGamma_kDefaultWDTol_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilPolyGamma, kDefaultWDTol_, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilPolyGamma, kMaxValue, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilPolyGamma, DBL_MANT_DIG, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilPolyGamma, DBL_MIN_EXP, jint)

static NSString *OrgGeogebraCommonUtilPolyGamma_sErrorDomain_ = @"Math Error: DOMAIN";
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilPolyGamma, sErrorDomain_, NSString *)

static IOSDoubleArray *OrgGeogebraCommonUtilPolyGamma_bvalues_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonUtilPolyGamma, bvalues_, IOSDoubleArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonUtilPolyGamma, bvalues_, IOSDoubleArray *)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraCommonUtilPolyGamma)

@implementation OrgGeogebraCommonUtilPolyGamma

+ (IOSDoubleArray *)dpsifnWithDouble:(jdouble)x
                             withInt:(jint)n
                             withInt:(jint)kode
                             withInt:(jint)m {
  return OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(x, n, kode, m);
}

+ (jdouble)psigammaWithDouble:(jdouble)x
                   withDouble:(jdouble)deriv {
  return OrgGeogebraCommonUtilPolyGamma_psigammaWithDouble_withDouble_(x, deriv);
}

+ (jdouble)digammaWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilPolyGamma_digammaWithDouble_(x);
}

+ (jdouble)trigammaWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilPolyGamma_trigammaWithDouble_(x);
}

+ (jdouble)tetragammaWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilPolyGamma_tetragammaWithDouble_(x);
}

+ (jdouble)pentagammaWithDouble:(jdouble)x {
  return OrgGeogebraCommonUtilPolyGamma_pentagammaWithDouble_(x);
}

- (instancetype)init {
  OrgGeogebraCommonUtilPolyGamma_init(self);
  return self;
}

+ (void)initialize {
  if (self == [OrgGeogebraCommonUtilPolyGamma class]) {
    OrgGeogebraCommonUtilPolyGamma_klog10Of2_ = JavaLangMath_log10WithDouble_(2);
    OrgGeogebraCommonUtilPolyGamma_kDefaultWDTol_ = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_powWithDouble_withDouble_(2, -53), 0.5e-18);
    JreStrongAssignAndConsume(&OrgGeogebraCommonUtilPolyGamma_bvalues_, nil, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 1.00000000000000000e+00, -5.00000000000000000e-01, 1.66666666666666667e-01, -3.33333333333333333e-02, 2.38095238095238095e-02, -3.33333333333333333e-02, 7.57575757575757576e-02, -2.53113553113553114e-01, 1.16666666666666667e+00, -7.09215686274509804e+00, 5.49711779448621554e+01, -5.29124242424242424e+02, 6.19212318840579710e+03, -8.65802531135531136e+04, 1.42551716666666667e+06, -2.72982310678160920e+07, 6.01580873900642368e+08, -1.51163157670921569e+10, 4.29614643061166667e+11, -1.37116552050883328e+13, 4.88332318973593167e+14, -1.92965793419400681e+16 } count:22]);
    J2OBJC_SET_INITIALIZED(OrgGeogebraCommonUtilPolyGamma)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dpsifnWithDouble:withInt:withInt:withInt:", "dpsifn", "[D", 0x19, NULL, NULL },
    { "psigammaWithDouble:withDouble:", "psigamma", "D", 0x19, NULL, NULL },
    { "digammaWithDouble:", "digamma", "D", 0x19, NULL, NULL },
    { "trigammaWithDouble:", "trigamma", "D", 0x19, NULL, NULL },
    { "tetragammaWithDouble:", "tetragamma", "D", 0x19, NULL, NULL },
    { "pentagammaWithDouble:", "pentagamma", "D", 0x19, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "klog10Of2_", NULL, 0x1a, "D", &OrgGeogebraCommonUtilPolyGamma_klog10Of2_, NULL,  },
    { "kDefaultWDTol_", NULL, 0x1a, "D", &OrgGeogebraCommonUtilPolyGamma_kDefaultWDTol_, NULL,  },
    { "kMaxValue_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonUtilPolyGamma_kMaxValue },
    { "DBL_MANT_DIG_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonUtilPolyGamma_DBL_MANT_DIG },
    { "DBL_MIN_EXP_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraCommonUtilPolyGamma_DBL_MIN_EXP },
    { "sErrorDomain_", NULL, 0x1a, "Ljava.lang.String;", &OrgGeogebraCommonUtilPolyGamma_sErrorDomain_, NULL,  },
    { "bvalues_", NULL, 0xa, "[D", &OrgGeogebraCommonUtilPolyGamma_bvalues_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonUtilPolyGamma = { 2, "PolyGamma", "org.geogebra.common.util", NULL, 0x1, 7, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonUtilPolyGamma;
}

@end

IOSDoubleArray *OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(jdouble x, jint n, jint kode, jint m) {
  OrgGeogebraCommonUtilPolyGamma_initialize();
  IOSDoubleArray *ans = [IOSDoubleArray arrayWithLength:n + 1];
  jint i, j, k, mm, mx, nn, np, nx, fn;
  jdouble arg, den, elim, eps, fln, fx, rln, rxsq;
  jdouble s, slope, t, ta, tk, tol, tols, tss, tst;
  jdouble tt, t1, t2, xdmln, xdmy = 0, xinc = 0, xln = 0, xm, xmin;
  jdouble xq, yint;
  IOSDoubleArray *trm = [IOSDoubleArray arrayWithLength:23], *trmr = [IOSDoubleArray arrayWithLength:OrgGeogebraCommonUtilPolyGamma_kMaxValue + 1];
  jboolean flag1 = NO;
  if (n < 0 || kode < 1 || kode > 2 || m < 1) return nil;
  if (x <= 0.) {
    if (x == J2ObjCFpToLong(x)) {
      for (j = 0; j < m; j++) *IOSDoubleArray_GetRef(ans, j) = ((j + n) % 2 == 1) ? JavaLangDouble_POSITIVE_INFINITY : JavaLangDouble_NaN;
      return ans;
    }
    OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(1. - x, n, 1, m);
    if (m > 1 || n > 3) return nil;
    x *= JavaLangMath_PI;
    if (n == 0) tt = JavaLangMath_cosWithDouble_(x) / JavaLangMath_sinWithDouble_(x);
    else if (n == 1) tt = -1 / JavaLangMath_powWithDouble_withDouble_(JavaLangMath_sinWithDouble_(x), 2);
    else if (n == 2) tt = 2 * JavaLangMath_cosWithDouble_(x) / JavaLangMath_powWithDouble_withDouble_(JavaLangMath_sinWithDouble_(x), 3);
    else if (n == 3) tt = -2 * (2 * JavaLangMath_powWithDouble_withDouble_(JavaLangMath_cosWithDouble_(x), 2) + 1) / JavaLangMath_powWithDouble_withDouble_(JavaLangMath_sinWithDouble_(x), 4);
    else tt = JavaLangDouble_NaN;
    s = (n % 2 == 1) ? -1. : 1.;
    t1 = t2 = s = 1.;
    for (k = 0, j = k - n; j < m; k++, j++, s = -s) {
      t1 *= JavaLangMath_PI;
      if (k >= 2) t2 *= k;
      if (j >= 0) *IOSDoubleArray_GetRef(ans, j) = s * (IOSDoubleArray_Get(ans, j) + t1 / t2 * tt);
    }
    if (n == 0 && kode == 2) *IOSDoubleArray_GetRef(ans, 0) += xln;
    return ans;
  }
  mm = m;
  nx = -OrgGeogebraCommonUtilPolyGamma_DBL_MIN_EXP;
  elim = 2.302 * (nx * OrgGeogebraCommonUtilPolyGamma_klog10Of2_ - 3.0);
  xln = JavaLangMath_logWithDouble_(x);
  xdmln = xln;
  for (; ; ) {
    nn = n + mm - 1;
    fn = nn;
    t = (fn + 1) * xln;
    if (JavaLangMath_absWithDouble_(t) > elim) {
      if (t <= 0.0) return nil;
    }
    else {
      if (x < OrgGeogebraCommonUtilPolyGamma_kDefaultWDTol_) {
        *IOSDoubleArray_GetRef(ans, 0) = JavaLangMath_powWithDouble_withDouble_(x, -n - 1.0);
        if (mm != 1) {
          for (k = 1; k < mm; k++) *IOSDoubleArray_GetRef(ans, k) = IOSDoubleArray_Get(ans, k - 1) / x;
        }
        if (n == 0 && kode == 2) *IOSDoubleArray_GetRef(ans, 0) += xln;
        return ans;
      }
      rln = OrgGeogebraCommonUtilPolyGamma_klog10Of2_ * OrgGeogebraCommonUtilPolyGamma_DBL_MANT_DIG;
      rln = JavaLangMath_minWithDouble_withDouble_(rln, 18.06);
      fln = JavaLangMath_maxWithDouble_withDouble_(rln, 3.0) - 3.0;
      yint = 3.50 + 0.40 * fln;
      slope = 0.21 + fln * (0.0006038 * fln + 0.008677);
      xm = yint + slope * fn;
      mx = J2ObjCFpToInt(xm) + 1;
      xmin = mx;
      if (n != 0) {
        xm = -2.302 * rln - JavaLangMath_minWithDouble_withDouble_(0.0, xln);
        arg = xm / n;
        arg = JavaLangMath_minWithDouble_withDouble_(0.0, arg);
        eps = JavaLangMath_expWithDouble_(arg);
        xm = 1.0 - eps;
        if (JavaLangMath_absWithDouble_(arg) < 1.0e-3) xm = -arg;
        fln = x * xm / eps;
        xm = xmin - x;
        if (xm > 7.0 && fln < 15.0) break;
      }
      xdmy = x;
      xdmln = xln;
      xinc = 0.0;
      if (x < xmin) {
        nx = J2ObjCFpToInt(x);
        xinc = xmin - nx;
        xdmy = x + xinc;
        xdmln = JavaLangMath_logWithDouble_(xdmy);
      }
      t = fn * xdmln;
      t1 = xdmln + xdmln;
      t2 = t + xdmln;
      tk = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_absWithDouble_(t), JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_absWithDouble_(t1), JavaLangMath_absWithDouble_(t2)));
      if (tk <= elim) {
        flag1 = YES;
        break;
      }
    }
    mm--;
    *IOSDoubleArray_GetRef(ans, mm) = 0.0;
    if (mm == 0) return ans;
  }
  if (!flag1) {
    nn = J2ObjCFpToInt(fln) + 1;
    np = n + 1;
    t1 = (n + 1) * xln;
    t = JavaLangMath_expWithDouble_(-t1);
    s = t;
    den = x;
    for (i = 1; i <= nn; i++) {
      den = den + 1.0;
      *IOSDoubleArray_GetRef(trm, i) = JavaLangMath_powWithDouble_withDouble_(den, -np);
      s += IOSDoubleArray_Get(trm, i);
    }
    *IOSDoubleArray_GetRef(ans, 0) = s;
    if (n == 0 && kode == 2) *IOSDoubleArray_GetRef(ans, 0) = s + xln;
    if (mm != 1) {
      tol = OrgGeogebraCommonUtilPolyGamma_kDefaultWDTol_ / 5.0;
      for (j = 1; j < mm; j++) {
        t = t / x;
        s = t;
        tols = t * tol;
        den = x;
        for (i = 1; i <= nn; i++) {
          den += 1.0;
          *IOSDoubleArray_GetRef(trm, i) /= den;
          s += IOSDoubleArray_Get(trm, i);
          if (IOSDoubleArray_Get(trm, i) < tols) break;
        }
        *IOSDoubleArray_GetRef(ans, j) = s;
      }
    }
    return ans;
  }
  tss = JavaLangMath_expWithDouble_(-t);
  tt = 0.5 / xdmy;
  t1 = tt;
  tst = OrgGeogebraCommonUtilPolyGamma_kDefaultWDTol_ * tt;
  if (nn != 0) t1 = tt + 1.0 / fn;
  rxsq = 1.0 / (xdmy * xdmy);
  ta = 0.5 * rxsq;
  t = (fn + 1) * ta;
  s = t * IOSDoubleArray_Get(nil_chk(OrgGeogebraCommonUtilPolyGamma_bvalues_), 2);
  if (JavaLangMath_absWithDouble_(s) >= tst) {
    tk = 2.0;
    for (k = 4; k <= 22; k++) {
      t = t * ((tk + fn + 1) / (tk + 1.0)) * ((tk + fn) / (tk + 2.0)) * rxsq;
      *IOSDoubleArray_GetRef(trm, k) = t * IOSDoubleArray_Get(OrgGeogebraCommonUtilPolyGamma_bvalues_, k - 1);
      if (JavaLangMath_absWithDouble_(IOSDoubleArray_Get(trm, k)) < tst) break;
      s += IOSDoubleArray_Get(trm, k);
      tk += 2.0;
    }
  }
  s = (s + t1) * tss;
  if (xinc != 0.0) {
    nx = J2ObjCFpToInt(xinc);
    np = nn + 1;
    if (nx > OrgGeogebraCommonUtilPolyGamma_kMaxValue) return nil;
    if (nn == 0) {
      for (i = 1; i <= nx; i++) s += 1.0 / (x + nx - i);
      if (kode != 2) *IOSDoubleArray_GetRef(ans, 0) = s - xdmln;
      else if (xdmy != x) {
        xq = xdmy / x;
        *IOSDoubleArray_GetRef(ans, 0) = s - JavaLangMath_logWithDouble_(xq);
      }
      return ans;
    }
    xm = xinc - 1.0;
    fx = x + xm;
    for (i = 1; i <= nx; i++) {
      *IOSDoubleArray_GetRef(trmr, i) = JavaLangMath_powWithDouble_withDouble_(fx, -np);
      s += IOSDoubleArray_Get(trmr, i);
      xm -= 1.0;
      fx = x + xm;
    }
  }
  *IOSDoubleArray_GetRef(ans, mm - 1) = s;
  if (fn == 0) {
    if (kode != 2) *IOSDoubleArray_GetRef(ans, 0) = s - xdmln;
    else if (xdmy != x) {
      xq = xdmy / x;
      *IOSDoubleArray_GetRef(ans, 0) = s - JavaLangMath_logWithDouble_(xq);
    }
    return ans;
  }
  for (j = 2; j <= mm; j++) {
    fn--;
    tss *= xdmy;
    t1 = tt;
    if (fn != 0) t1 = tt + 1.0 / fn;
    t = (fn + 1) * ta;
    s = t * IOSDoubleArray_Get(OrgGeogebraCommonUtilPolyGamma_bvalues_, 2);
    if (JavaLangMath_absWithDouble_(s) >= tst) {
      tk = 4 + fn;
      for (k = 4; k <= 22; k++) {
        *IOSDoubleArray_GetRef(trm, k) = IOSDoubleArray_Get(trm, k) * (fn + 1) / tk;
        if (JavaLangMath_absWithDouble_(IOSDoubleArray_Get(trm, k)) < tst) break;
        s += IOSDoubleArray_Get(trm, k);
        tk += 2.0;
      }
    }
    s = (s + t1) * tss;
    if (xinc != 0.0) {
      if (fn == 0) {
        for (i = 1; i <= nx; i++) s += 1.0 / (x + nx - i);
        if (kode != 2) *IOSDoubleArray_GetRef(ans, 0) = s - xdmln;
        else if (xdmy != x) {
          xq = xdmy / x;
          *IOSDoubleArray_GetRef(ans, 0) = s - JavaLangMath_logWithDouble_(xq);
        }
      }
      xm = xinc - 1.0;
      fx = x + xm;
      for (i = 1; i <= nx; i++) {
        *IOSDoubleArray_GetRef(trmr, i) = IOSDoubleArray_Get(trmr, i) * fx;
        s += IOSDoubleArray_Get(trmr, i);
        xm -= 1.0;
        fx = x + xm;
      }
    }
    *IOSDoubleArray_GetRef(ans, mm - j) = s;
    if (fn == 0) {
      if (kode != 2) *IOSDoubleArray_GetRef(ans, 0) = s - xdmln;
      else if (xdmy != x) {
        xq = xdmy / x;
        *IOSDoubleArray_GetRef(ans, 0) = s - JavaLangMath_logWithDouble_(xq);
      }
      return ans;
    }
  }
  return ans;
}

jdouble OrgGeogebraCommonUtilPolyGamma_psigammaWithDouble_withDouble_(jdouble x, jdouble deriv) {
  OrgGeogebraCommonUtilPolyGamma_initialize();
  IOSDoubleArray *ans;
  jint n = J2ObjCFpToInt(JavaLangMath_floorWithDouble_(deriv + 0.5));
  if (n > OrgGeogebraCommonUtilPolyGamma_kMaxValue) return JavaLangDouble_NaN;
  ans = OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(x, n, 1, 1);
  if (ans == nil) return JavaLangDouble_NaN;
  jdouble result = -IOSDoubleArray_Get(nil_chk(ans), 0);
  for (jint k = 1; k <= n; k++) result *= (-k);
  return result;
}

jdouble OrgGeogebraCommonUtilPolyGamma_digammaWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilPolyGamma_initialize();
  IOSDoubleArray *ans = OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(x, 0, 1, 1);
  if (ans == nil) @throw [new_JavaLangArithmeticException_initWithNSString_(OrgGeogebraCommonUtilPolyGamma_sErrorDomain_) autorelease];
  return -IOSDoubleArray_Get(nil_chk(ans), 0);
}

jdouble OrgGeogebraCommonUtilPolyGamma_trigammaWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilPolyGamma_initialize();
  IOSDoubleArray *ans = OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(x, 1, 1, 1);
  if (ans == nil) @throw [new_JavaLangArithmeticException_initWithNSString_(OrgGeogebraCommonUtilPolyGamma_sErrorDomain_) autorelease];
  return IOSDoubleArray_Get(nil_chk(ans), 0);
}

jdouble OrgGeogebraCommonUtilPolyGamma_tetragammaWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilPolyGamma_initialize();
  IOSDoubleArray *ans = OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(x, 2, 1, 1);
  if (ans == nil) @throw [new_JavaLangArithmeticException_initWithNSString_(OrgGeogebraCommonUtilPolyGamma_sErrorDomain_) autorelease];
  return -2.0 * IOSDoubleArray_Get(nil_chk(ans), 0);
}

jdouble OrgGeogebraCommonUtilPolyGamma_pentagammaWithDouble_(jdouble x) {
  OrgGeogebraCommonUtilPolyGamma_initialize();
  IOSDoubleArray *ans = OrgGeogebraCommonUtilPolyGamma_dpsifnWithDouble_withInt_withInt_withInt_(x, 3, 1, 1);
  if (ans == nil) @throw [new_JavaLangArithmeticException_initWithNSString_(OrgGeogebraCommonUtilPolyGamma_sErrorDomain_) autorelease];
  return 6.0 * IOSDoubleArray_Get(nil_chk(ans), 0);
}

void OrgGeogebraCommonUtilPolyGamma_init(OrgGeogebraCommonUtilPolyGamma *self) {
  NSObject_init(self);
}

OrgGeogebraCommonUtilPolyGamma *new_OrgGeogebraCommonUtilPolyGamma_init() {
  OrgGeogebraCommonUtilPolyGamma *self = [OrgGeogebraCommonUtilPolyGamma alloc];
  OrgGeogebraCommonUtilPolyGamma_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonUtilPolyGamma)
