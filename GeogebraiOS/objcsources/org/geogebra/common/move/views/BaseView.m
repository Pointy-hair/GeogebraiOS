//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/move/views/BaseView.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/geogebra/common/move/views/BaseView.h"

@implementation OrgGeogebraCommonMoveViewsBaseView

- (instancetype)init {
  OrgGeogebraCommonMoveViewsBaseView_init(self);
  return self;
}

- (void)removeWithId:(id)view {
  if (viewComponents_ != nil) {
    if ([viewComponents_ containsWithId:view]) {
      [viewComponents_ removeWithId:view];
    }
  }
}

- (void)addWithId:(id)view {
  if (self->viewComponents_ == nil) {
    OrgGeogebraCommonMoveViewsBaseView_setAndConsume_viewComponents_(self, new_JavaUtilArrayList_init());
  }
  if (![((JavaUtilArrayList *) nil_chk(self->viewComponents_)) containsWithId:view]) {
    [self->viewComponents_ addWithId:view];
  }
}

- (void)dealloc {
  RELEASE_(viewComponents_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BaseView", NULL, 0x4, NULL, NULL },
    { "removeWithId:", "remove", "V", 0x1, NULL, "(TT;)V" },
    { "addWithId:", "add", "V", 0x11, NULL, "(TT;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "viewComponents_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<TT;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMoveViewsBaseView = { 2, "BaseView", "org.geogebra.common.move.views", NULL, 0x401, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgGeogebraCommonMoveViewsBaseView;
}

@end

void OrgGeogebraCommonMoveViewsBaseView_init(OrgGeogebraCommonMoveViewsBaseView *self) {
  NSObject_init(self);
  OrgGeogebraCommonMoveViewsBaseView_set_viewComponents_(self, nil);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMoveViewsBaseView)
