//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/move/ggtapi/operations/OpenFromGGTOperation.java
//


#include "J2ObjC_source.h"
#include "org/geogebra/common/main/App.h"
#include "org/geogebra/common/main/Localization.h"
#include "org/geogebra/common/move/ggtapi/models/AuthenticationModel.h"
#include "org/geogebra/common/move/ggtapi/models/GeoGebraTubeUser.h"
#include "org/geogebra/common/move/ggtapi/operations/LogInOperation.h"
#include "org/geogebra/common/move/ggtapi/operations/OpenFromGGTOperation.h"
#include "org/geogebra/common/move/operations/BaseOperation.h"
#include "org/geogebra/common/move/views/BaseEventView.h"

static NSString *OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_GGT_URL_ = @"http://tube.geogebra.org/widgetprovider/index/widgettype/";
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation, GGT_URL_, NSString *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation, GGT_URL_, NSString *)

@implementation OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app {
  OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithOrgGeogebraCommonMainApp_(self, app);
  return self;
}

- (NSString *)generateOpenFromGGTURLWithNSString:(NSString *)type {
  NSString *url = JreStrcat("$$", OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_GGT_URL_, type);
  if ([((OrgGeogebraCommonMoveGgtapiOperationsLogInOperation *) nil_chk([((OrgGeogebraCommonMainApp *) nil_chk(app_)) getLoginOperation])) isLoggedIn]) {
    NSString *token = [((OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *) nil_chk([((OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel *) nil_chk([((OrgGeogebraCommonMoveGgtapiOperationsLogInOperation *) nil_chk([app_ getLoginOperation])) getModel])) getLoggedInUser])) getLoginToken];
    if (token != nil) {
      url = JreStrcat("$$", url, JreStrcat("$$", @"/lt/", token));
    }
  }
  else {
    url = JreStrcat("$$", url, @"/lt/nouser");
  }
  url = JreStrcat("$$", url, JreStrcat("$$", @"/?lang=", [((OrgGeogebraCommonMainLocalization *) nil_chk([app_ getLocalization])) getLanguage]));
  return url;
}

- (void)dealloc {
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraCommonMainApp:", "OpenFromGGTOperation", NULL, 0x1, NULL, NULL },
    { "generateOpenFromGGTURLWithNSString:", "generateOpenFromGGTURL", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "GGT_URL_", NULL, 0xa, "Ljava.lang.String;", &OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_GGT_URL_, NULL,  },
    { "app_", NULL, 0x4, "Lorg.geogebra.common.main.App;", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.geogebra.common.move.views.EventRenderable;"};
  static const char *inner_classes[] = {"Lorg.geogebra.common.move.ggtapi.operations.OpenFromGGTOperation$APP_TYPE;"};
  static const J2ObjcClassInfo _OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation = { 2, "OpenFromGGTOperation", "org.geogebra.common.move.ggtapi.operations", NULL, 0x1, 2, methods, 2, fields, 1, superclass_type_args, 1, inner_classes, NULL, "Lorg/geogebra/common/move/operations/BaseOperation<Lorg/geogebra/common/move/views/EventRenderable;>;" };
  return &_OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation;
}

@end

void OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation *self, OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonMoveOperationsBaseOperation_init(self);
  OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_set_app_(self, app);
  [self setViewWithOrgGeogebraCommonMoveViewsBaseView:[new_OrgGeogebraCommonMoveViewsBaseEventView_init() autorelease]];
}

OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation *new_OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonMainApp *app) {
  OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation *self = [OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation alloc];
  OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_initWithOrgGeogebraCommonMainApp_(self, app);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation)

NSString *OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_WEB_ = @"web";
NSString *OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_DESKTOP_ = @"desktop";

@implementation OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE

- (instancetype)init {
  OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "WEB_", NULL, 0x19, "Ljava.lang.String;", &OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_WEB_, NULL,  },
    { "DESKTOP_", NULL, 0x19, "Ljava.lang.String;", &OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_DESKTOP_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE = { 2, "APP_TYPE", "org.geogebra.common.move.ggtapi.operations", "OpenFromGGTOperation", 0x19, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE;
}

@end

void OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init(OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE *self) {
  NSObject_init(self);
}

OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE *new_OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init() {
  OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE *self = [OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE alloc];
  OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMoveGgtapiOperationsOpenFromGGTOperation_APP_TYPE)
