//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/move/ggtapi/models/json/JSONObject.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"
#include "org/geogebra/common/move/ggtapi/models/json/JSONException.h"
#include "org/geogebra/common/move/ggtapi/models/json/JSONNumber.h"
#include "org/geogebra/common/move/ggtapi/models/json/JSONObject.h"
#include "org/geogebra/common/move/ggtapi/models/json/JSONString.h"
#include "org/geogebra/common/move/ggtapi/models/json/JSONValue.h"
#include "org/geogebra/common/move/ggtapi/models/json/JsonUtils.h"

@interface OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject () {
 @public
  JavaUtilHashMap *jsObject_;
}

- (IOSObjectArray *)computeKeys;

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject, jsObject_, JavaUtilHashMap *)

@implementation OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject

- (instancetype)init {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject_init(self);
  return self;
}

- (jboolean)containsKeyWithNSString:(NSString *)key {
  return [((JavaUtilHashMap *) nil_chk(jsObject_)) containsKeyWithId:key];
}

- (jboolean)isEqual:(id)other {
  if (!([other isKindOfClass:[OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject class]])) {
    return NO;
  }
  return [((JavaUtilHashMap *) nil_chk(jsObject_)) isEqual:((OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *) nil_chk(((OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *) check_class_cast(other, [OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject class]))))->jsObject_];
}

- (OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *)getWithNSString:(NSString *)key {
  if (key == nil) {
    @throw [new_JavaLangNullPointerException_init() autorelease];
  }
  return [((JavaUtilHashMap *) nil_chk(jsObject_)) getWithId:key];
}

- (NSUInteger)hash {
  return ((jint) [((JavaUtilHashMap *) nil_chk(jsObject_)) hash]);
}

- (OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *)isObject {
  return self;
}

- (id<JavaUtilSet>)keySet {
  return [((JavaUtilHashMap *) nil_chk(jsObject_)) keySet];
}

- (OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *)putWithNSString:(NSString *)key
                 withOrgGeogebraCommonMoveGgtapiModelsJsonJSONValue:(OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *)jsonValue {
  if (key == nil) {
    @throw [new_JavaLangNullPointerException_init() autorelease];
  }
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *previous = [self getWithNSString:key];
  [((JavaUtilHashMap *) nil_chk(jsObject_)) putWithId:key withId:jsonValue];
  return previous;
}

- (jint)size {
  return [((JavaUtilHashMap *) nil_chk(jsObject_)) size];
}

- (void)appendToWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb {
  [((JavaLangStringBuffer *) nil_chk(sb)) appendWithNSString:@"{"];
  jboolean first = YES;
  for (NSString * __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(jsObject_)) keySet])) {
    if (first) {
      first = NO;
    }
    else {
      [sb appendWithNSString:@", "];
    }
    [sb appendWithNSString:OrgGeogebraCommonMoveGgtapiModelsJsonJsonUtils_escapeValueWithNSString_(key)];
    [sb appendWithNSString:@":"];
    [((OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *) nil_chk([self getWithNSString:key])) appendToWithJavaLangStringBuffer:sb];
  }
  [sb appendWithNSString:@"}"];
}

- (NSString *)description {
  JavaLangStringBuffer *sb = [new_JavaLangStringBuffer_init() autorelease];
  [self appendToWithJavaLangStringBuffer:sb];
  return [sb description];
}

- (IOSObjectArray *)computeKeys {
  return [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(jsObject_)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[jsObject_ size] type:NSString_class_()]];
}

- (void)putWithNSString:(NSString *)key
           withNSString:(NSString *)token {
  [self putWithNSString:key withOrgGeogebraCommonMoveGgtapiModelsJsonJSONValue:[new_OrgGeogebraCommonMoveGgtapiModelsJsonJSONString_initWithNSString_(token) autorelease]];
}

- (jboolean)hasWithNSString:(NSString *)key {
  return [((id<JavaUtilSet>) nil_chk([self keySet])) containsWithId:key];
}

- (NSString *)getStringWithNSString:(NSString *)key {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *val = [self getWithNSString:key];
  if ([val isKindOfClass:[OrgGeogebraCommonMoveGgtapiModelsJsonJSONString class]]) {
    return [((OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *) nil_chk(((OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *) check_class_cast(val, [OrgGeogebraCommonMoveGgtapiModelsJsonJSONString class])))) stringValue];
  }
  @throw [new_OrgGeogebraCommonMoveGgtapiModelsJsonJSONException_init() autorelease];
}

- (jint)getIntWithNSString:(NSString *)key {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *val = [self getWithNSString:key];
  if ([val isKindOfClass:[OrgGeogebraCommonMoveGgtapiModelsJsonJSONNumber class]]) {
    return J2ObjCFpToInt([((OrgGeogebraCommonMoveGgtapiModelsJsonJSONNumber *) nil_chk(((OrgGeogebraCommonMoveGgtapiModelsJsonJSONNumber *) check_class_cast(val, [OrgGeogebraCommonMoveGgtapiModelsJsonJSONNumber class])))) doubleValue]);
  }
  @throw [new_OrgGeogebraCommonMoveGgtapiModelsJsonJSONException_init() autorelease];
}

- (OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *)getJSONObjectWithNSString:(NSString *)key {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue *val = [self getWithNSString:key];
  if ([val isKindOfClass:[OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject class]]) {
    return (OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *) check_class_cast(val, [OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject class]);
  }
  @throw [new_OrgGeogebraCommonMoveGgtapiModelsJsonJSONException_init() autorelease];
}

- (void)dealloc {
  RELEASE_(jsObject_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JSONObject", NULL, 0x1, NULL, NULL },
    { "containsKeyWithNSString:", "containsKey", "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "getWithNSString:", "get", "Lorg.geogebra.common.move.ggtapi.models.json.JSONValue;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isObject", NULL, "Lorg.geogebra.common.move.ggtapi.models.json.JSONObject;", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "putWithNSString:withOrgGeogebraCommonMoveGgtapiModelsJsonJSONValue:", "put", "Lorg.geogebra.common.move.ggtapi.models.json.JSONValue;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "appendToWithJavaLangStringBuffer:", "appendTo", "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "computeKeys", NULL, "[Ljava.lang.String;", 0x2, NULL, NULL },
    { "putWithNSString:withNSString:", "put", "V", 0x1, NULL, NULL },
    { "hasWithNSString:", "has", "Z", 0x1, NULL, NULL },
    { "getStringWithNSString:", "getString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getIntWithNSString:", "getInt", "I", 0x1, NULL, NULL },
    { "getJSONObjectWithNSString:", "getJSONObject", "Lorg.geogebra.common.move.ggtapi.models.json.JSONObject;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "jsObject_", NULL, 0x12, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Lorg/geogebra/common/move/ggtapi/models/json/JSONValue;>;",  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject = { 2, "JSONObject", "org.geogebra.common.move.ggtapi.models.json", NULL, 0x1, 17, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject;
}

@end

void OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject_init(OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *self) {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue_init(self);
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject_setAndConsume_jsObject_(self, new_JavaUtilHashMap_init());
}

OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *new_OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject_init() {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject *self = [OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject alloc];
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMoveGgtapiModelsJsonJSONObject)
