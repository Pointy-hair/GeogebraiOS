//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/common/move/ggtapi/models/AuthenticationModel.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/geogebra/common/move/events/BaseEvent.h"
#include "org/geogebra/common/move/ggtapi/events/LogOutEvent.h"
#include "org/geogebra/common/move/ggtapi/events/LoginEvent.h"
#include "org/geogebra/common/move/ggtapi/models/AuthenticationModel.h"
#include "org/geogebra/common/move/ggtapi/models/GeoGebraTubeAPI.h"
#include "org/geogebra/common/move/ggtapi/models/GeoGebraTubeUser.h"
#include "org/geogebra/common/move/models/BaseModel.h"

@interface OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel () {
 @public
  OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *loggedInUser_;
  jboolean stayLoggedOut__;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel, loggedInUser_, OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *)

NSString *OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel_GGB_TOKEN_KEY_NAME_ = @"token";

@implementation OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel

- (instancetype)init {
  OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel_init(self);
  return self;
}

- (void)onEventWithOrgGeogebraCommonMoveEventsBaseEvent:(OrgGeogebraCommonMoveEventsBaseEvent *)event {
  if ([event isKindOfClass:[OrgGeogebraCommonMoveGgtapiEventsLoginEvent class]]) {
    OrgGeogebraCommonMoveGgtapiEventsLoginEvent *loginEvent = (OrgGeogebraCommonMoveGgtapiEventsLoginEvent *) check_class_cast(event, [OrgGeogebraCommonMoveGgtapiEventsLoginEvent class]);
    if ([((OrgGeogebraCommonMoveGgtapiEventsLoginEvent *) nil_chk(loginEvent)) isSuccessful]) {
      [self onLoginSuccessWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser:[loginEvent getUser] withNSString:[loginEvent getJSON]];
    }
    else {
      [self onLoginErrorWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser:[loginEvent getUser]];
    }
  }
  else if ([event isKindOfClass:[OrgGeogebraCommonMoveGgtapiEventsLogOutEvent class]]) {
    [self clearLoginToken];
    loggedInUser_ = nil;
  }
}

- (void)storeLoginTokenWithNSString:(NSString *)token {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (NSString *)getLoginToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)clearLoginToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)onLoginSuccessWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser:(OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *)user
                                                               withNSString:(NSString *)json {
  self->stayLoggedOut__ = NO;
  self->loggedInUser_ = user;
  [self storeLastUserWithNSString:json];
  if ([((OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *) nil_chk(user)) getLoginToken] != [self getLoginToken]) {
    [self storeLoginTokenWithNSString:[user getLoginToken]];
  }
}

- (void)storeLastUserWithNSString:(NSString *)s {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)onLoginErrorWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser:(OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *)user {
  self->stayLoggedOut__ = NO;
  if ([self getLoginToken] != nil) {
    [self clearLoginToken];
  }
}

- (NSString *)getUserName {
  if (loggedInUser_ != nil) {
    return [loggedInUser_ getUserName];
  }
  return nil;
}

- (jint)getUserId {
  if (loggedInUser_ != nil) {
    return [loggedInUser_ getUserId];
  }
  return -1;
}

- (OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *)getLoggedInUser {
  return loggedInUser_;
}

- (jboolean)isLoggedIn {
  if (loggedInUser_ == nil) {
    return NO;
  }
  return YES;
}

- (void)startOfflineWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeAPI:(OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeAPI *)api {
  if ([self loadLastUser] != nil) {
    OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser *offline = new_OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser_initWithNSString_(nil);
    if ([((OrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeAPI *) nil_chk(api)) parseUserDataFromResponseWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser:offline withNSString:[self loadLastUser]]) {
      self->loggedInUser_ = offline;
    }
  }
}

- (NSString *)loadLastUser {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)stayLoggedOut {
  self->stayLoggedOut__ = YES;
}

- (jboolean)mayLogIn {
  return !stayLoggedOut__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AuthenticationModel", NULL, 0x1, NULL, NULL },
    { "onEventWithOrgGeogebraCommonMoveEventsBaseEvent:", "onEvent", "V", 0x1, NULL, NULL },
    { "storeLoginTokenWithNSString:", "storeLoginToken", "V", 0x401, NULL, NULL },
    { "getLoginToken", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "clearLoginToken", NULL, "V", 0x401, NULL, NULL },
    { "onLoginSuccessWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser:withNSString:", "onLoginSuccess", "V", 0x1, NULL, NULL },
    { "storeLastUserWithNSString:", "storeLastUser", "V", 0x404, NULL, NULL },
    { "onLoginErrorWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeUser:", "onLoginError", "V", 0x1, NULL, NULL },
    { "getUserName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getUserId", NULL, "I", 0x1, NULL, NULL },
    { "getLoggedInUser", NULL, "Lorg.geogebra.common.move.ggtapi.models.GeoGebraTubeUser;", 0x1, NULL, NULL },
    { "isLoggedIn", NULL, "Z", 0x1, NULL, NULL },
    { "startOfflineWithOrgGeogebraCommonMoveGgtapiModelsGeoGebraTubeAPI:", "startOffline", "V", 0x1, NULL, NULL },
    { "loadLastUser", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "stayLoggedOut", NULL, "V", 0x1, NULL, NULL },
    { "mayLogIn", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "loggedInUser_", NULL, 0x2, "Lorg.geogebra.common.move.ggtapi.models.GeoGebraTubeUser;", NULL, NULL,  },
    { "stayLoggedOut__", "stayLoggedOut", 0x2, "Z", NULL, NULL,  },
    { "GGB_TOKEN_KEY_NAME_", NULL, 0x9, "Ljava.lang.String;", &OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel_GGB_TOKEN_KEY_NAME_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel = { 2, "AuthenticationModel", "org.geogebra.common.move.ggtapi.models", NULL, 0x401, 16, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel;
}

@end

void OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel_init(OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel *self) {
  (void) OrgGeogebraCommonMoveModelsBaseModel_init(self);
  self->loggedInUser_ = nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMoveGgtapiModelsAuthenticationModel)
