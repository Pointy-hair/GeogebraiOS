//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/move/ggtapi/models/json/JSONString.java
//


#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "org/geogebra/common/move/ggtapi/models/json/JSONString.h"
#include "org/geogebra/common/move/ggtapi/models/json/JSONValue.h"
#include "org/geogebra/common/move/ggtapi/models/json/JsonUtils.h"

@interface OrgGeogebraCommonMoveGgtapiModelsJsonJSONString () {
 @public
  NSString *value_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonMoveGgtapiModelsJsonJSONString, value_, NSString *)

@implementation OrgGeogebraCommonMoveGgtapiModelsJsonJSONString

- (instancetype)initWithNSString:(NSString *)value {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONString_initWithNSString_(self, value);
  return self;
}

- (jboolean)isEqual:(id)other {
  if (!([other isKindOfClass:[OrgGeogebraCommonMoveGgtapiModelsJsonJSONString class]])) {
    return NO;
  }
  return [((NSString *) nil_chk(value_)) isEqual:((OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *) nil_chk(((OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *) check_class_cast(other, [OrgGeogebraCommonMoveGgtapiModelsJsonJSONString class]))))->value_];
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(value_)) hash]);
}

- (OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *)isString {
  return self;
}

- (NSString *)stringValue {
  return value_;
}

- (NSString *)description {
  return OrgGeogebraCommonMoveGgtapiModelsJsonJsonUtils_escapeValueWithNSString_(value_);
}

- (void)appendToWithJavaLangStringBuffer:(JavaLangStringBuffer *)b {
  [((JavaLangStringBuffer *) nil_chk(b)) appendWithNSString:OrgGeogebraCommonMoveGgtapiModelsJsonJsonUtils_escapeValueWithNSString_(value_)];
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "JSONString", NULL, 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isString", NULL, "Lorg.geogebra.common.move.ggtapi.models.json.JSONString;", 0x1, NULL, NULL },
    { "stringValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "appendToWithJavaLangStringBuffer:", "appendTo", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonMoveGgtapiModelsJsonJSONString = { 2, "JSONString", "org.geogebra.common.move.ggtapi.models.json", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonMoveGgtapiModelsJsonJSONString;
}

@end

void OrgGeogebraCommonMoveGgtapiModelsJsonJSONString_initWithNSString_(OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *self, NSString *value) {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONValue_init(self);
  if (value == nil) {
    @throw [new_JavaLangNullPointerException_init() autorelease];
  }
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONString_set_value_(self, value);
}

OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *new_OrgGeogebraCommonMoveGgtapiModelsJsonJSONString_initWithNSString_(NSString *value) {
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONString *self = [OrgGeogebraCommonMoveGgtapiModelsJsonJSONString alloc];
  OrgGeogebraCommonMoveGgtapiModelsJsonJSONString_initWithNSString_(self, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonMoveGgtapiModelsJsonJSONString)
