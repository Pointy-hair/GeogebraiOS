//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/export/TextGraphics.java
//


#include "J2ObjC_source.h"
#include "java/util/Map.h"
#include "org/geogebra/common/awt/GAffineTransform.h"
#include "org/geogebra/common/awt/GBasicStroke.h"
#include "org/geogebra/common/awt/GBufferedImage.h"
#include "org/geogebra/common/awt/GBufferedImageOp.h"
#include "org/geogebra/common/awt/GColor.h"
#include "org/geogebra/common/awt/GComposite.h"
#include "org/geogebra/common/awt/GFont.h"
#include "org/geogebra/common/awt/GFontRenderContext.h"
#include "org/geogebra/common/awt/GImage.h"
#include "org/geogebra/common/awt/GKey.h"
#include "org/geogebra/common/awt/GLine2D.h"
#include "org/geogebra/common/awt/GPaint.h"
#include "org/geogebra/common/awt/GShape.h"
#include "org/geogebra/common/awt/MyImage.h"
#include "org/geogebra/common/export/TextGraphics.h"
#include "org/geogebra/common/factories/AwtFactory.h"

@interface OrgGeogebraCommonExportTextGraphics () {
 @public
  OrgGeogebraCommonAwtGFont *font_;
  id<OrgGeogebraCommonAwtGLine2D> line_;
}

@end

J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportTextGraphics, font_, OrgGeogebraCommonAwtGFont *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportTextGraphics, line_, id<OrgGeogebraCommonAwtGLine2D>)

@implementation OrgGeogebraCommonExportTextGraphics

- (void)draw3DRectWithInt:(jint)x
                  withInt:(jint)y
                  withInt:(jint)width
                  withInt:(jint)height
              withBoolean:(jboolean)raised {
}

- (void)fill3DRectWithInt:(jint)x
                  withInt:(jint)y
                  withInt:(jint)width
                  withInt:(jint)height
              withBoolean:(jboolean)raised {
}

- (void)drawWithOrgGeogebraCommonAwtGShape:(id<OrgGeogebraCommonAwtGShape>)s {
}

- (void)drawImageWithOrgGeogebraCommonAwtGBufferedImage:(id<OrgGeogebraCommonAwtGBufferedImage>)img
               withOrgGeogebraCommonAwtGBufferedImageOp:(id<OrgGeogebraCommonAwtGBufferedImageOp>)op
                                                withInt:(jint)x
                                                withInt:(jint)y {
}

- (void)drawImageWithOrgGeogebraCommonAwtGBufferedImage:(id<OrgGeogebraCommonAwtGBufferedImage>)img
                                                withInt:(jint)x
                                                withInt:(jint)y {
}

- (void)drawImageWithOrgGeogebraCommonAwtMyImage:(id<OrgGeogebraCommonAwtMyImage>)img
        withOrgGeogebraCommonAwtGBufferedImageOp:(id<OrgGeogebraCommonAwtGBufferedImageOp>)op
                                         withInt:(jint)x
                                         withInt:(jint)y {
}

- (void)drawImageWithOrgGeogebraCommonAwtMyImage:(id<OrgGeogebraCommonAwtMyImage>)img
                                         withInt:(jint)x
                                         withInt:(jint)y {
}

- (void)drawStringWithNSString:(NSString *)str
                       withInt:(jint)x
                       withInt:(jint)y {
}

- (void)drawStringWithNSString:(NSString *)str
                     withFloat:(jfloat)x
                     withFloat:(jfloat)y {
}

- (void)fillWithOrgGeogebraCommonAwtGShape:(id<OrgGeogebraCommonAwtGShape>)s {
}

- (void)setCompositeWithOrgGeogebraCommonAwtGComposite:(id<OrgGeogebraCommonAwtGComposite>)comp {
}

- (void)setPaintWithOrgGeogebraCommonAwtGPaint:(id<OrgGeogebraCommonAwtGPaint>)paint {
}

- (void)setStrokeWithOrgGeogebraCommonAwtGBasicStroke:(id<OrgGeogebraCommonAwtGBasicStroke>)s {
}

- (void)setRenderingHintWithOrgGeogebraCommonAwtGKey:(id<OrgGeogebraCommonAwtGKey>)hintKey
                                              withId:(id)hintValue {
}

- (id)getRenderingHintWithOrgGeogebraCommonAwtGKey:(id<OrgGeogebraCommonAwtGKey>)hintKey {
  return nil;
}

- (void)setRenderingHintsWithJavaUtilMap:(id<JavaUtilMap>)hints {
}

- (void)translateWithDouble:(jdouble)tx
                 withDouble:(jdouble)ty {
}

- (void)scale__WithDouble:(jdouble)sx
               withDouble:(jdouble)sy {
}

- (void)transformWithOrgGeogebraCommonAwtGAffineTransform:(id<OrgGeogebraCommonAwtGAffineTransform>)Tx {
}

- (void)setTransformWithOrgGeogebraCommonAwtGAffineTransform:(id<OrgGeogebraCommonAwtGAffineTransform>)Tx {
}

- (id<OrgGeogebraCommonAwtGAffineTransform>)getTransform {
  return nil;
}

- (id<OrgGeogebraCommonAwtGComposite>)getComposite {
  return nil;
}

- (OrgGeogebraCommonAwtGColor *)getBackground {
  return nil;
}

- (id<OrgGeogebraCommonAwtGBasicStroke>)getStroke {
  return nil;
}

- (void)clipWithOrgGeogebraCommonAwtGShape:(id<OrgGeogebraCommonAwtGShape>)s {
}

- (OrgGeogebraCommonAwtGFontRenderContext *)getFontRenderContext {
  return nil;
}

- (OrgGeogebraCommonAwtGColor *)getColor {
  return nil;
}

- (OrgGeogebraCommonAwtGFont *)getFont {
  return font_;
}

- (void)setFontWithOrgGeogebraCommonAwtGFont:(OrgGeogebraCommonAwtGFont *)font {
  OrgGeogebraCommonExportTextGraphics_set_font_(self, font);
}

- (void)setColorWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)selColor {
}

- (void)fillRectWithInt:(jint)i
                withInt:(jint)j
                withInt:(jint)k
                withInt:(jint)l {
}

- (void)clearRectWithInt:(jint)i
                 withInt:(jint)j
                 withInt:(jint)k
                 withInt:(jint)l {
}

- (void)drawLineWithInt:(jint)x1
                withInt:(jint)y1
                withInt:(jint)x2
                withInt:(jint)y2 {
}

- (void)setClipWithOrgGeogebraCommonAwtGShape:(id<OrgGeogebraCommonAwtGShape>)shape {
}

- (id<OrgGeogebraCommonAwtGShape>)getClip {
  return nil;
}

- (void)drawRectWithInt:(jint)i
                withInt:(jint)j
                withInt:(jint)k
                withInt:(jint)l {
}

- (void)setClipWithInt:(jint)xAxisStart
               withInt:(jint)i
               withInt:(jint)width
               withInt:(jint)yAxisEnd {
}

- (void)drawRoundRectWithInt:(jint)x
                     withInt:(jint)y
                     withInt:(jint)width
                     withInt:(jint)height
                     withInt:(jint)arcWidth
                     withInt:(jint)arcHeight {
}

- (void)fillRoundRectWithInt:(jint)x
                     withInt:(jint)y
                     withInt:(jint)width
                     withInt:(jint)height
                     withInt:(jint)arcWidth
                     withInt:(jint)arcHeight {
}

- (void)drawImageWithOrgGeogebraCommonAwtGImage:(id<OrgGeogebraCommonAwtGImage>)img
                                        withInt:(jint)x
                                        withInt:(jint)y {
}

- (void)setAntialiasing {
}

- (void)setTransparent {
}

- (void)drawWithValueStrokePureWithOrgGeogebraCommonAwtGShape:(id<OrgGeogebraCommonAwtGShape>)shape {
  [self drawWithOrgGeogebraCommonAwtGShape:shape];
}

- (void)fillWithValueStrokePureWithOrgGeogebraCommonAwtGShape:(id<OrgGeogebraCommonAwtGShape>)shape {
  [self fillWithOrgGeogebraCommonAwtGShape:shape];
}

- (id)setInterpolationHintWithBoolean:(jboolean)needsInterpolationRenderingHint {
  return nil;
}

- (void)updateCanvasColor {
}

- (void)resetInterpolationHintWithId:(id)oldInterpolationHint {
}

- (void)drawStraightLineWithDouble:(jdouble)x1
                        withDouble:(jdouble)y1
                        withDouble:(jdouble)x2
                        withDouble:(jdouble)y2 {
  [((id<OrgGeogebraCommonAwtGLine2D>) nil_chk(line_)) setLineWithDouble:x1 withDouble:y1 withDouble:x2 withDouble:y2];
  [self drawWithOrgGeogebraCommonAwtGShape:line_];
}

- (void)saveTransform {
}

- (void)restoreTransform {
}

- (instancetype)init {
  OrgGeogebraCommonExportTextGraphics_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(font_);
  RELEASE_(line_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "draw3DRectWithInt:withInt:withInt:withInt:withBoolean:", "draw3DRect", "V", 0x1, NULL, NULL },
    { "fill3DRectWithInt:withInt:withInt:withInt:withBoolean:", "fill3DRect", "V", 0x1, NULL, NULL },
    { "drawWithOrgGeogebraCommonAwtGShape:", "draw", "V", 0x1, NULL, NULL },
    { "drawImageWithOrgGeogebraCommonAwtGBufferedImage:withOrgGeogebraCommonAwtGBufferedImageOp:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawImageWithOrgGeogebraCommonAwtGBufferedImage:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawImageWithOrgGeogebraCommonAwtMyImage:withOrgGeogebraCommonAwtGBufferedImageOp:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawImageWithOrgGeogebraCommonAwtMyImage:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawStringWithNSString:withInt:withInt:", "drawString", "V", 0x1, NULL, NULL },
    { "drawStringWithNSString:withFloat:withFloat:", "drawString", "V", 0x1, NULL, NULL },
    { "fillWithOrgGeogebraCommonAwtGShape:", "fill", "V", 0x1, NULL, NULL },
    { "setCompositeWithOrgGeogebraCommonAwtGComposite:", "setComposite", "V", 0x1, NULL, NULL },
    { "setPaintWithOrgGeogebraCommonAwtGPaint:", "setPaint", "V", 0x1, NULL, NULL },
    { "setStrokeWithOrgGeogebraCommonAwtGBasicStroke:", "setStroke", "V", 0x1, NULL, NULL },
    { "setRenderingHintWithOrgGeogebraCommonAwtGKey:withId:", "setRenderingHint", "V", 0x1, NULL, NULL },
    { "getRenderingHintWithOrgGeogebraCommonAwtGKey:", "getRenderingHint", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setRenderingHintsWithJavaUtilMap:", "setRenderingHints", "V", 0x1, NULL, NULL },
    { "translateWithDouble:withDouble:", "translate", "V", 0x1, NULL, NULL },
    { "scale__WithDouble:withDouble:", "scale", "V", 0x1, NULL, NULL },
    { "transformWithOrgGeogebraCommonAwtGAffineTransform:", "transform", "V", 0x1, NULL, NULL },
    { "setTransformWithOrgGeogebraCommonAwtGAffineTransform:", "setTransform", "V", 0x1, NULL, NULL },
    { "getTransform", NULL, "Lorg.geogebra.common.awt.GAffineTransform;", 0x1, NULL, NULL },
    { "getComposite", NULL, "Lorg.geogebra.common.awt.GComposite;", 0x1, NULL, NULL },
    { "getBackground", NULL, "Lorg.geogebra.common.awt.GColor;", 0x1, NULL, NULL },
    { "getStroke", NULL, "Lorg.geogebra.common.awt.GBasicStroke;", 0x1, NULL, NULL },
    { "clipWithOrgGeogebraCommonAwtGShape:", "clip", "V", 0x1, NULL, NULL },
    { "getFontRenderContext", NULL, "Lorg.geogebra.common.awt.GFontRenderContext;", 0x1, NULL, NULL },
    { "getColor", NULL, "Lorg.geogebra.common.awt.GColor;", 0x1, NULL, NULL },
    { "getFont", NULL, "Lorg.geogebra.common.awt.GFont;", 0x1, NULL, NULL },
    { "setFontWithOrgGeogebraCommonAwtGFont:", "setFont", "V", 0x1, NULL, NULL },
    { "setColorWithOrgGeogebraCommonAwtGColor:", "setColor", "V", 0x1, NULL, NULL },
    { "fillRectWithInt:withInt:withInt:withInt:", "fillRect", "V", 0x1, NULL, NULL },
    { "clearRectWithInt:withInt:withInt:withInt:", "clearRect", "V", 0x1, NULL, NULL },
    { "drawLineWithInt:withInt:withInt:withInt:", "drawLine", "V", 0x1, NULL, NULL },
    { "setClipWithOrgGeogebraCommonAwtGShape:", "setClip", "V", 0x1, NULL, NULL },
    { "getClip", NULL, "Lorg.geogebra.common.awt.GShape;", 0x1, NULL, NULL },
    { "drawRectWithInt:withInt:withInt:withInt:", "drawRect", "V", 0x1, NULL, NULL },
    { "setClipWithInt:withInt:withInt:withInt:", "setClip", "V", 0x1, NULL, NULL },
    { "drawRoundRectWithInt:withInt:withInt:withInt:withInt:withInt:", "drawRoundRect", "V", 0x1, NULL, NULL },
    { "fillRoundRectWithInt:withInt:withInt:withInt:withInt:withInt:", "fillRoundRect", "V", 0x1, NULL, NULL },
    { "drawImageWithOrgGeogebraCommonAwtGImage:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "setAntialiasing", NULL, "V", 0x1, NULL, NULL },
    { "setTransparent", NULL, "V", 0x1, NULL, NULL },
    { "drawWithValueStrokePureWithOrgGeogebraCommonAwtGShape:", "drawWithValueStrokePure", "V", 0x1, NULL, NULL },
    { "fillWithValueStrokePureWithOrgGeogebraCommonAwtGShape:", "fillWithValueStrokePure", "V", 0x1, NULL, NULL },
    { "setInterpolationHintWithBoolean:", "setInterpolationHint", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "updateCanvasColor", NULL, "V", 0x1, NULL, NULL },
    { "resetInterpolationHintWithId:", "resetInterpolationHint", "V", 0x1, NULL, NULL },
    { "drawStraightLineWithDouble:withDouble:withDouble:withDouble:", "drawStraightLine", "V", 0x1, NULL, NULL },
    { "saveTransform", NULL, "V", 0x1, NULL, NULL },
    { "restoreTransform", NULL, "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "font_", NULL, 0x2, "Lorg.geogebra.common.awt.GFont;", NULL, NULL,  },
    { "line_", NULL, 0x2, "Lorg.geogebra.common.awt.GLine2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraCommonExportTextGraphics = { 2, "TextGraphics", "org.geogebra.common.export", NULL, 0x1, 51, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraCommonExportTextGraphics;
}

@end

void OrgGeogebraCommonExportTextGraphics_init(OrgGeogebraCommonExportTextGraphics *self) {
  NSObject_init(self);
  OrgGeogebraCommonExportTextGraphics_set_font_(self, [((OrgGeogebraCommonFactoriesAwtFactory *) nil_chk(OrgGeogebraCommonFactoriesAwtFactory_get_prototype_())) newFontWithNSString:@"SansSerif" withInt:OrgGeogebraCommonAwtGFont_PLAIN withInt:12]);
  OrgGeogebraCommonExportTextGraphics_set_line_(self, [OrgGeogebraCommonFactoriesAwtFactory_get_prototype_() newLine2D]);
}

OrgGeogebraCommonExportTextGraphics *new_OrgGeogebraCommonExportTextGraphics_init() {
  OrgGeogebraCommonExportTextGraphics *self = [OrgGeogebraCommonExportTextGraphics alloc];
  OrgGeogebraCommonExportTextGraphics_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraCommonExportTextGraphics)
