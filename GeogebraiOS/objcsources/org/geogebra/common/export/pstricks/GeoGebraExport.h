//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/common/export/pstricks/GeoGebraExport.java
//

#ifndef _OrgGeogebraCommonExportPstricksGeoGebraExport_H_
#define _OrgGeogebraCommonExportPstricksGeoGebraExport_H_

#include "J2ObjC_header.h"

@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilHashMap;
@class OrgGeogebraCommonAwtGColor;
@class OrgGeogebraCommonEuclidianDrawableND;
@class OrgGeogebraCommonEuclidianEuclidianView;
@class OrgGeogebraCommonKernelArithmeticInequality;
@class OrgGeogebraCommonKernelConstruction;
@class OrgGeogebraCommonKernelGeosGeoAngle;
@class OrgGeogebraCommonKernelGeosGeoConic;
@class OrgGeogebraCommonKernelGeosGeoConicPart;
@class OrgGeogebraCommonKernelGeosGeoCurveCartesian;
@class OrgGeogebraCommonKernelGeosGeoElement;
@class OrgGeogebraCommonKernelGeosGeoElement_FillTypeEnum;
@class OrgGeogebraCommonKernelGeosGeoFunction;
@class OrgGeogebraCommonKernelGeosGeoFunctionNVar;
@class OrgGeogebraCommonKernelGeosGeoLine;
@class OrgGeogebraCommonKernelGeosGeoLocus;
@class OrgGeogebraCommonKernelGeosGeoNumeric;
@class OrgGeogebraCommonKernelGeosGeoPoint;
@class OrgGeogebraCommonKernelGeosGeoPolyLine;
@class OrgGeogebraCommonKernelGeosGeoPolygon;
@class OrgGeogebraCommonKernelGeosGeoRay;
@class OrgGeogebraCommonKernelGeosGeoSegment;
@class OrgGeogebraCommonKernelGeosGeoText;
@class OrgGeogebraCommonKernelGeosGeoTransferFunction;
@class OrgGeogebraCommonKernelGeosGeoVector;
@class OrgGeogebraCommonKernelImplicitGeoImplicitPoly;
@class OrgGeogebraCommonKernelKernel;
@class OrgGeogebraCommonKernelStringTemplate;
@class OrgGeogebraCommonMainApp;
@protocol OrgGeogebraCommonAwtGGraphics2D;
@protocol OrgGeogebraCommonExportPstricksExportSettings;
@protocol OrgGeogebraCommonKernelArithmeticFunctionalNVar;

@interface OrgGeogebraCommonExportPstricksGeoGebraExport : NSObject {
 @public
  jint beamerSlideNumber_;
  jdouble PRECISION_XRANGE_FUNCTION_;
  JavaLangStringBuilder *code_, *codePoint_, *codePreamble_, *codeFilledObject_, *codeBeginDoc_;
  OrgGeogebraCommonKernelKernel *kernel_;
  OrgGeogebraCommonKernelConstruction *construction_;
  OrgGeogebraCommonEuclidianEuclidianView *euclidianView_;
  id<OrgGeogebraCommonExportPstricksExportSettings> frame_;
  JavaUtilHashMap *CustomColor_;
  jdouble xunit_, yunit_, xmin_, xmax_, ymin_, ymax_;
  jint format__;
  jboolean isBeamer_;
  jint barNumber_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonMainApp:(OrgGeogebraCommonMainApp *)app;

- (void)generateAllCode;

- (OrgGeogebraCommonMainApp *)getApp;

- (jdouble)getxmax;

- (jdouble)getXmax;

- (jdouble)getxmin;

- (jdouble)getXmin;

- (jdouble)getXunit;

- (jdouble)getymax;

- (jdouble)getYmax;

- (jdouble)getymin;

- (jdouble)getYmin;

- (jdouble)getYunit;

- (void)refreshSelectionRectangle;

- (void)setBeamerWithBoolean:(jboolean)beamer;

- (void)setFrameWithOrgGeogebraCommonExportPstricksExportSettings:(id<OrgGeogebraCommonExportPstricksExportSettings>)settingsFrame;

- (void)setxmaxWithDouble:(jdouble)xmax;

- (void)setXmaxWithDouble:(jdouble)xmax;

- (void)setxminWithDouble:(jdouble)xmin;

- (void)setXminWithDouble:(jdouble)xmin;

- (void)setXunitWithDouble:(jdouble)xunit;

- (void)setymaxWithDouble:(jdouble)ymax;

- (void)setYmaxWithDouble:(jdouble)ymax;

- (void)setyminWithDouble:(jdouble)ymin;

- (void)setYminWithDouble:(jdouble)ymin;

- (void)setYunitWithDouble:(jdouble)yunit;

#pragma mark Protected

- (void)addTextPackage;

- (void)ColorCodeWithOrgGeogebraCommonAwtGColor:(OrgGeogebraCommonAwtGColor *)color
                      withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (NSString *)createCustomColorWithInt:(jint)red
                               withInt:(jint)green
                               withInt:(jint)blue;

- (id<OrgGeogebraCommonAwtGGraphics2D>)createGraphicsWithOrgGeogebraCommonKernelArithmeticFunctionalNVar:(id<OrgGeogebraCommonKernelArithmeticFunctionalNVar>)ef
                                                         withOrgGeogebraCommonKernelArithmeticInequality:(OrgGeogebraCommonKernelArithmeticInequality *)inequality
                                                             withOrgGeogebraCommonEuclidianEuclidianView:(OrgGeogebraCommonEuclidianEuclidianView *)euclidianView2;

- (void)drawAllElements;

- (void)drawAngleWithOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)geo;

- (void)drawArcWithOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)geo
                                       withDoubleArray:(IOSDoubleArray *)vertex
                                            withDouble:(jdouble)angSt
                                            withDouble:(jdouble)angEnd
                                            withDouble:(jdouble)r;

- (void)drawArrowArcWithOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)geo
                                            withDoubleArray:(IOSDoubleArray *)vertex
                                                 withDouble:(jdouble)angSt
                                                 withDouble:(jdouble)angEnd
                                                 withDouble:(jdouble)r
                                                withBoolean:(jboolean)clockwise;

- (void)drawBarChartOrHistogramWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)g;

- (void)drawBoxPlotWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawFunctionWithOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)geo;

- (void)drawGeoConicWithOrgGeogebraCommonKernelGeosGeoConic:(OrgGeogebraCommonKernelGeosGeoConic *)geo;

- (void)drawGeoConicPartWithOrgGeogebraCommonKernelGeosGeoConicPart:(OrgGeogebraCommonKernelGeosGeoConicPart *)geo;

- (void)drawGeoElementWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)g
                                                    withBoolean:(jboolean)fromGeoList
                                                    withBoolean:(jboolean)trimmedInter;

- (void)drawGeoInequalitiesWithOrgGeogebraCommonKernelGeosGeoFunctionNVar:(OrgGeogebraCommonKernelGeosGeoFunctionNVar *)geo
                                withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)e;

- (void)drawGeoLineWithOrgGeogebraCommonKernelGeosGeoLine:(OrgGeogebraCommonKernelGeosGeoLine *)geo;

- (void)drawGeoPointWithOrgGeogebraCommonKernelGeosGeoPoint:(OrgGeogebraCommonKernelGeosGeoPoint *)geo;

- (void)drawGeoRayWithOrgGeogebraCommonKernelGeosGeoRay:(OrgGeogebraCommonKernelGeosGeoRay *)geo;

- (void)drawGeoSegmentWithOrgGeogebraCommonKernelGeosGeoSegment:(OrgGeogebraCommonKernelGeosGeoSegment *)geo;

- (void)drawGeoVectorWithOrgGeogebraCommonKernelGeosGeoVector:(OrgGeogebraCommonKernelGeosGeoVector *)geo;

- (void)drawHistogramOrBarChartBoxWithDoubleArray:(IOSDoubleArray *)values
                                  withDoubleArray:(IOSDoubleArray *)leftBorder
                                          withInt:(jint)length
                                       withDouble:(jdouble)width
        withOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)g;

- (void)drawImplicitPolyWithOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)geo;

- (void)drawIntegralWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawIntegralFunctionsWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawLabelWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo
                  withOrgGeogebraCommonEuclidianDrawableND:(OrgGeogebraCommonEuclidianDrawableND *)drawGeo;

- (void)drawLineWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2
withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)drawLocusWithOrgGeogebraCommonKernelGeosGeoLocus:(OrgGeogebraCommonKernelGeosGeoLocus *)geo;

- (JavaLangStringBuilder *)drawNoLatexFunctionWithOrgGeogebraCommonKernelGeosGeoFunction:(OrgGeogebraCommonKernelGeosGeoFunction *)geo
                                                                              withDouble:(jdouble)xrangemax
                                                                              withDouble:(jdouble)xrangemin
                                                                                 withInt:(jint)point
                                                                            withNSString:(NSString *)template_;

- (void)drawNyquistWithOrgGeogebraCommonKernelGeosGeoTransferFunction:(OrgGeogebraCommonKernelGeosGeoTransferFunction *)g;

- (JavaLangStringBuilder *)drawNyquistDiagramWithOrgGeogebraCommonKernelGeosGeoTransferFunction:(OrgGeogebraCommonKernelGeosGeoTransferFunction *)geo
                                                                                   withNSString:(NSString *)template_
                                                                                   withNSString:(NSString *)arrowMark
                                                                                   withNSString:(NSString *)arrowCommand
                                                                                   withNSString:(NSString *)reverseArrowCommand;

- (void)drawPolygonWithOrgGeogebraCommonKernelGeosGeoPolygon:(OrgGeogebraCommonKernelGeosGeoPolygon *)geo;

- (void)drawPolyLineWithOrgGeogebraCommonKernelGeosGeoPolyLine:(OrgGeogebraCommonKernelGeosGeoPolyLine *)geo;

- (void)drawSingleCurveCartesianWithOrgGeogebraCommonKernelGeosGeoCurveCartesian:(OrgGeogebraCommonKernelGeosGeoCurveCartesian *)geo
                                                                     withBoolean:(jboolean)trasparency;

- (void)drawSliderWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawSlopeWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawSumTrapezoidalWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawSumUpperLowerWithOrgGeogebraCommonKernelGeosGeoNumeric:(OrgGeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawTextWithOrgGeogebraCommonKernelGeosGeoText:(OrgGeogebraCommonKernelGeosGeoText *)geo;

- (void)drawTickWithOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)geo
                                        withDoubleArray:(IOSDoubleArray *)vertex
                                             withDouble:(jdouble)angleTick;

- (void)endBeamerWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)fillSplineWithOrgGeogebraCommonKernelGeosGeoCurveCartesianArray:(IOSObjectArray *)curves;

- (NSString *)formatWithDouble:(jdouble)d;

- (NSString *)getImplicitExprWithOrgGeogebraCommonKernelImplicitGeoImplicitPoly:(OrgGeogebraCommonKernelImplicitGeoImplicitPoly *)geo;

- (OrgGeogebraCommonKernelStringTemplate *)getStringTemplate;

- (jboolean)isDoubleLineConicWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isEmptyWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isLatexFunctionWithNSString:(NSString *)s;

- (jboolean)isSinglePointConicWithOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)markWithDoubleArray:(IOSDoubleArray *)A
            withDoubleArray:(IOSDoubleArray *)B
                    withInt:(jint)deco
withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (void)markAngleWithOrgGeogebraCommonKernelGeosGeoAngle:(OrgGeogebraCommonKernelGeosGeoAngle *)geo
                                              withDouble:(jdouble)r
                                         withDoubleArray:(IOSDoubleArray *)vertex
                                              withDouble:(jdouble)angSt
                                              withDouble:(jdouble)angEnd;

- (void)resizeFontWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jint)resizePtWithInt:(jint)size;

- (NSString *)sci2decWithDouble:(jdouble)d;

- (void)startBeamerWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonExportPstricksGeoGebraExport)

J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, code_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, codePoint_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, codePreamble_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, codeFilledObject_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, codeBeginDoc_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, kernel_, OrgGeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, construction_, OrgGeogebraCommonKernelConstruction *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, euclidianView_, OrgGeogebraCommonEuclidianEuclidianView *)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, frame_, id<OrgGeogebraCommonExportPstricksExportSettings>)
J2OBJC_FIELD_SETTER(OrgGeogebraCommonExportPstricksGeoGebraExport, CustomColor_, JavaUtilHashMap *)

FOUNDATION_EXPORT void OrgGeogebraCommonExportPstricksGeoGebraExport_initWithOrgGeogebraCommonMainApp_(OrgGeogebraCommonExportPstricksGeoGebraExport *self, OrgGeogebraCommonMainApp *app);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonExportPstricksGeoGebraExport)

@interface OrgGeogebraCommonExportPstricksGeoGebraExport_Info : NSObject

#pragma mark Public

- (instancetype)initWithOrgGeogebraCommonExportPstricksGeoGebraExport:(OrgGeogebraCommonExportPstricksGeoGebraExport *)outer$
                            withOrgGeogebraCommonKernelGeosGeoElement:(OrgGeogebraCommonKernelGeosGeoElement *)geo;

- (jfloat)getAlpha;

- (jdouble)getAngle;

- (OrgGeogebraCommonKernelGeosGeoElement_FillTypeEnum *)getFillType;

- (OrgGeogebraCommonAwtGColor *)getLinecolor;

- (jint)getY;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraCommonExportPstricksGeoGebraExport_Info)

FOUNDATION_EXPORT void OrgGeogebraCommonExportPstricksGeoGebraExport_Info_initWithOrgGeogebraCommonExportPstricksGeoGebraExport_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonExportPstricksGeoGebraExport_Info *self, OrgGeogebraCommonExportPstricksGeoGebraExport *outer$, OrgGeogebraCommonKernelGeosGeoElement *geo);

FOUNDATION_EXPORT OrgGeogebraCommonExportPstricksGeoGebraExport_Info *new_OrgGeogebraCommonExportPstricksGeoGebraExport_Info_initWithOrgGeogebraCommonExportPstricksGeoGebraExport_withOrgGeogebraCommonKernelGeosGeoElement_(OrgGeogebraCommonExportPstricksGeoGebraExport *outer$, OrgGeogebraCommonKernelGeosGeoElement *geo) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraCommonExportPstricksGeoGebraExport_Info)

#endif // _OrgGeogebraCommonExportPstricksGeoGebraExport_H_
