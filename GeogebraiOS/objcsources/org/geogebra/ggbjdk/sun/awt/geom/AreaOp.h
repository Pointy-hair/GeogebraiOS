//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/ggbjdk/sun/awt/geom/AreaOp.java
//

#ifndef _OrgGeogebraGgbjdkSunAwtGeomAreaOp_H_
#define _OrgGeogebraGgbjdkSunAwtGeomAreaOp_H_

#include "J2ObjC_header.h"

@class JavaUtilVector;
@class OrgGeogebraGgbjdkSunAwtGeomEdge;

#define OrgGeogebraGgbjdkSunAwtGeomAreaOp_CTAG_LEFT 0
#define OrgGeogebraGgbjdkSunAwtGeomAreaOp_CTAG_RIGHT 1
#define OrgGeogebraGgbjdkSunAwtGeomAreaOp_ETAG_IGNORE 0
#define OrgGeogebraGgbjdkSunAwtGeomAreaOp_ETAG_ENTER 1
#define OrgGeogebraGgbjdkSunAwtGeomAreaOp_ETAG_EXIT -1
#define OrgGeogebraGgbjdkSunAwtGeomAreaOp_RSTAG_INSIDE 1
#define OrgGeogebraGgbjdkSunAwtGeomAreaOp_RSTAG_OUTSIDE -1

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp : NSObject

#pragma mark Public

- (JavaUtilVector *)calculateWithJavaUtilVector:(JavaUtilVector *)left
                             withJavaUtilVector:(JavaUtilVector *)right;

- (jint)classifyWithOrgGeogebraGgbjdkSunAwtGeomEdge:(OrgGeogebraGgbjdkSunAwtGeomEdge *)e;

+ (void)finalizeSubCurvesWithJavaUtilVector:(JavaUtilVector *)subcurves
                         withJavaUtilVector:(JavaUtilVector *)chains;

- (jint)getState;

- (void)newRow OBJC_METHOD_FAMILY_NONE;

+ (jboolean)obstructsWithDouble:(jdouble)v1
                     withDouble:(jdouble)v2
                        withInt:(jint)phase;

+ (void)resolveLinksWithJavaUtilVector:(JavaUtilVector *)subcurves
                    withJavaUtilVector:(JavaUtilVector *)chains
                    withJavaUtilVector:(JavaUtilVector *)links;

@end

J2OBJC_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkSunAwtGeomAreaOp, CTAG_LEFT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkSunAwtGeomAreaOp, CTAG_RIGHT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkSunAwtGeomAreaOp, ETAG_IGNORE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkSunAwtGeomAreaOp, ETAG_ENTER, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkSunAwtGeomAreaOp, ETAG_EXIT, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkSunAwtGeomAreaOp, RSTAG_INSIDE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkSunAwtGeomAreaOp, RSTAG_OUTSIDE, jint)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_finalizeSubCurvesWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *subcurves, JavaUtilVector *chains);

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_resolveLinksWithJavaUtilVector_withJavaUtilVector_withJavaUtilVector_(JavaUtilVector *subcurves, JavaUtilVector *chains, JavaUtilVector *links);

FOUNDATION_EXPORT jboolean OrgGeogebraGgbjdkSunAwtGeomAreaOp_obstructsWithDouble_withDouble_withInt_(jdouble v1, jdouble v2, jint phase);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp)

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp : OrgGeogebraGgbjdkSunAwtGeomAreaOp {
 @public
  jboolean inLeft_;
  jboolean inRight_;
  jboolean inResult_;
}

#pragma mark Public

- (instancetype)init;

- (jint)classifyWithOrgGeogebraGgbjdkSunAwtGeomEdge:(OrgGeogebraGgbjdkSunAwtGeomEdge *)e;

- (jint)getState;

- (jboolean)newClassificationWithBoolean:(jboolean)inLeft
                             withBoolean:(jboolean)inRight OBJC_METHOD_FAMILY_NONE;

- (void)newRow OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp_init(OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp)

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp_AddOp : OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp

#pragma mark Public

- (instancetype)init;

- (jboolean)newClassificationWithBoolean:(jboolean)inLeft
                             withBoolean:(jboolean)inRight OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp_AddOp)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_AddOp_init(OrgGeogebraGgbjdkSunAwtGeomAreaOp_AddOp *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkSunAwtGeomAreaOp_AddOp *new_OrgGeogebraGgbjdkSunAwtGeomAreaOp_AddOp_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp_AddOp)

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp_SubOp : OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp

#pragma mark Public

- (instancetype)init;

- (jboolean)newClassificationWithBoolean:(jboolean)inLeft
                             withBoolean:(jboolean)inRight OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp_SubOp)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_SubOp_init(OrgGeogebraGgbjdkSunAwtGeomAreaOp_SubOp *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkSunAwtGeomAreaOp_SubOp *new_OrgGeogebraGgbjdkSunAwtGeomAreaOp_SubOp_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp_SubOp)

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp_IntOp : OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp

#pragma mark Public

- (instancetype)init;

- (jboolean)newClassificationWithBoolean:(jboolean)inLeft
                             withBoolean:(jboolean)inRight OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp_IntOp)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_IntOp_init(OrgGeogebraGgbjdkSunAwtGeomAreaOp_IntOp *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkSunAwtGeomAreaOp_IntOp *new_OrgGeogebraGgbjdkSunAwtGeomAreaOp_IntOp_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp_IntOp)

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp_XorOp : OrgGeogebraGgbjdkSunAwtGeomAreaOp_CAGOp

#pragma mark Public

- (instancetype)init;

- (jboolean)newClassificationWithBoolean:(jboolean)inLeft
                             withBoolean:(jboolean)inRight OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp_XorOp)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_XorOp_init(OrgGeogebraGgbjdkSunAwtGeomAreaOp_XorOp *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkSunAwtGeomAreaOp_XorOp *new_OrgGeogebraGgbjdkSunAwtGeomAreaOp_XorOp_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp_XorOp)

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp_NZWindOp : OrgGeogebraGgbjdkSunAwtGeomAreaOp

#pragma mark Public

- (instancetype)init;

- (jint)classifyWithOrgGeogebraGgbjdkSunAwtGeomEdge:(OrgGeogebraGgbjdkSunAwtGeomEdge *)e;

- (jint)getState;

- (void)newRow OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp_NZWindOp)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_NZWindOp_init(OrgGeogebraGgbjdkSunAwtGeomAreaOp_NZWindOp *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkSunAwtGeomAreaOp_NZWindOp *new_OrgGeogebraGgbjdkSunAwtGeomAreaOp_NZWindOp_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp_NZWindOp)

@interface OrgGeogebraGgbjdkSunAwtGeomAreaOp_EOWindOp : OrgGeogebraGgbjdkSunAwtGeomAreaOp

#pragma mark Public

- (instancetype)init;

- (jint)classifyWithOrgGeogebraGgbjdkSunAwtGeomEdge:(OrgGeogebraGgbjdkSunAwtGeomEdge *)e;

- (jint)getState;

- (void)newRow OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkSunAwtGeomAreaOp_EOWindOp)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkSunAwtGeomAreaOp_EOWindOp_init(OrgGeogebraGgbjdkSunAwtGeomAreaOp_EOWindOp *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkSunAwtGeomAreaOp_EOWindOp *new_OrgGeogebraGgbjdkSunAwtGeomAreaOp_EOWindOp_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkSunAwtGeomAreaOp_EOWindOp)

#endif // _OrgGeogebraGgbjdkSunAwtGeomAreaOp_H_
