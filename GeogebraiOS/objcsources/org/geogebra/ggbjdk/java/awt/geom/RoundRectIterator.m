//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/ggbjdk/java/awt/geom/RoundRectIterator.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/NoSuchElementException.h"
#include "org/geogebra/common/awt/GAffineTransform.h"
#include "org/geogebra/ggbjdk/java/awt/geom/PathIterator.h"
#include "org/geogebra/ggbjdk/java/awt/geom/RoundRectIterator.h"
#include "org/geogebra/ggbjdk/java/awt/geom/RoundRectangle2D.h"

#define OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_angle 0.7853981633974483

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, angle, jdouble)

static jdouble OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_a_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, a_, jdouble)

static jdouble OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_b_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, b_, jdouble)

static jdouble OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_c_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, c_, jdouble)

static jdouble OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_cv_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, cv_, jdouble)

static jdouble OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, acv_, jdouble)

static IOSObjectArray *OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_ctrlpts_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, ctrlpts_, IOSObjectArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, ctrlpts_, IOSObjectArray *)

static IOSIntArray *OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_types_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, types_, IOSIntArray *)
J2OBJC_STATIC_FIELD_SETTER(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator, types_, IOSIntArray *)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator)

@implementation OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D:(OrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D *)rr
                            withOrgGeogebraCommonAwtGAffineTransform:(id<OrgGeogebraCommonAwtGAffineTransform>)at {
  OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D_withOrgGeogebraCommonAwtGAffineTransform_(self, rr, at);
  return self;
}

- (jint)getWindingRule {
  return OrgGeogebraGgbjdkJavaAwtGeomPathIterator_WIND_NON_ZERO;
}

- (jboolean)isDone {
  return index_ >= ((IOSObjectArray *) nil_chk(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_ctrlpts_))->size_;
}

- (void)next {
  index_++;
}

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords {
  if ([self isDone]) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(@"roundrect iterator out of bounds") autorelease];
  }
  IOSDoubleArray *ctrls = IOSObjectArray_Get(nil_chk(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_ctrlpts_), index_);
  jint nc = 0;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(ctrls))->size_; i += 4) {
    *IOSFloatArray_GetRef(nil_chk(coords), nc++) = (jfloat) (x_ + IOSDoubleArray_Get(ctrls, i + 0) * w_ + IOSDoubleArray_Get(ctrls, i + 1) * aw_);
    *IOSFloatArray_GetRef(coords, nc++) = (jfloat) (y_ + IOSDoubleArray_Get(ctrls, i + 2) * h_ + IOSDoubleArray_Get(ctrls, i + 3) * ah_);
  }
  if (affine_ != nil) {
    [affine_ transformWithFloatArray:coords withInt:0 withFloatArray:coords withInt:0 withInt:nc / 2];
  }
  return IOSIntArray_Get(nil_chk(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_types_), index_);
}

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords {
  if ([self isDone]) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(@"roundrect iterator out of bounds") autorelease];
  }
  IOSDoubleArray *ctrls = IOSObjectArray_Get(nil_chk(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_ctrlpts_), index_);
  jint nc = 0;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(ctrls))->size_; i += 4) {
    *IOSDoubleArray_GetRef(nil_chk(coords), nc++) = (x_ + IOSDoubleArray_Get(ctrls, i + 0) * w_ + IOSDoubleArray_Get(ctrls, i + 1) * aw_);
    *IOSDoubleArray_GetRef(coords, nc++) = (y_ + IOSDoubleArray_Get(ctrls, i + 2) * h_ + IOSDoubleArray_Get(ctrls, i + 3) * ah_);
  }
  if (affine_ != nil) {
    [affine_ transformWithDoubleArray:coords withInt:0 withDoubleArray:coords withInt:0 withInt:nc / 2];
  }
  return IOSIntArray_Get(nil_chk(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_types_), index_);
}

- (void)dealloc {
  RELEASE_(affine_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator class]) {
    OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_a_ = 1.0 - JavaLangMath_cosWithDouble_(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_angle);
    OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_b_ = JavaLangMath_tanWithDouble_(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_angle);
    OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_c_ = JavaLangMath_sqrtWithDouble_(1.0 + OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_b_ * OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_b_) - 1 + OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_a_;
    OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_cv_ = 4.0 / 3.0 * OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_a_ * OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_b_ / OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_c_;
    OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_ = (1.0 - OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_cv_) / 2.0;
    JreStrongAssignAndConsume(&OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_ctrlpts_, nil, [IOSObjectArray newArrayWithObjects:(id[]){ [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0.0, 0.0, 0.0, 0.5 } count:4], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0.0, 0.0, 1.0, -0.5 } count:4], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0.0, 0.0, 1.0, -OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 0.0, OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 1.0, 0.0, 0.0, 0.5, 1.0, 0.0 } count:12], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1.0, -0.5, 1.0, 0.0 } count:4], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1.0, -OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 1.0, 0.0, 1.0, 0.0, 1.0, -OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 1.0, 0.0, 1.0, -0.5 } count:12], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1.0, 0.0, 0.0, 0.5 } count:4], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1.0, 0.0, 0.0, OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 1.0, -OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 0.0, 0.0, 1.0, -0.5, 0.0, 0.0 } count:12], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0.0, 0.5, 0.0, 0.0 } count:4], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0.0, OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 0.0, 0.0, 0.0, 0.0, 0.0, OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, 0.0, 0.0, 0.0, 0.5 } count:12], [IOSDoubleArray arrayWithDoubles:(jdouble[]){  } count:0] } count:10 type:IOSClass_doubleArray(1)]);
    JreStrongAssignAndConsume(&OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_types_, nil, [IOSIntArray newArrayWithInts:(jint[]){ OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_MOVETO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_LINETO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_CUBICTO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_LINETO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_CUBICTO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_LINETO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_CUBICTO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_LINETO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_CUBICTO, OrgGeogebraGgbjdkJavaAwtGeomPathIterator_SEG_CLOSE } count:10]);
    J2OBJC_SET_INITIALIZED(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D:withOrgGeogebraCommonAwtGAffineTransform:", "RoundRectIterator", NULL, 0x0, NULL, NULL },
    { "getWindingRule", NULL, "I", 0x1, NULL, NULL },
    { "isDone", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "V", 0x1, NULL, NULL },
    { "currentSegmentWithFloatArray:", "currentSegment", "I", 0x1, NULL, NULL },
    { "currentSegmentWithDoubleArray:", "currentSegment", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x0, "D", NULL, NULL,  },
    { "y_", NULL, 0x0, "D", NULL, NULL,  },
    { "w_", NULL, 0x0, "D", NULL, NULL,  },
    { "h_", NULL, 0x0, "D", NULL, NULL,  },
    { "aw_", NULL, 0x0, "D", NULL, NULL,  },
    { "ah_", NULL, 0x0, "D", NULL, NULL,  },
    { "affine_", NULL, 0x0, "Lorg.geogebra.common.awt.GAffineTransform;", NULL, NULL,  },
    { "index_", NULL, 0x0, "I", NULL, NULL,  },
    { "angle_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_angle },
    { "a_", NULL, 0x1a, "D", &OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_a_, NULL,  },
    { "b_", NULL, 0x1a, "D", &OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_b_, NULL,  },
    { "c_", NULL, 0x1a, "D", &OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_c_, NULL,  },
    { "cv_", NULL, 0x1a, "D", &OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_cv_, NULL,  },
    { "acv_", NULL, 0x1a, "D", &OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_acv_, NULL,  },
    { "ctrlpts_", NULL, 0xa, "[[D", &OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_ctrlpts_, NULL,  },
    { "types_", NULL, 0xa, "[I", &OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_types_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator = { 2, "RoundRectIterator", "org.geogebra.ggbjdk.java.awt.geom", NULL, 0x0, 6, methods, 16, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D_withOrgGeogebraCommonAwtGAffineTransform_(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator *self, OrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D *rr, id<OrgGeogebraCommonAwtGAffineTransform> at) {
  NSObject_init(self);
  self->x_ = [((OrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D *) nil_chk(rr)) getX];
  self->y_ = [rr getY];
  self->w_ = [rr getWidth];
  self->h_ = [rr getHeight];
  self->aw_ = JavaLangMath_minWithDouble_withDouble_(self->w_, JavaLangMath_absWithDouble_([rr getArcWidth]));
  self->ah_ = JavaLangMath_minWithDouble_withDouble_(self->h_, JavaLangMath_absWithDouble_([rr getArcHeight]));
  OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_set_affine_(self, at);
  if (self->aw_ < 0 || self->ah_ < 0) {
    self->index_ = ((IOSObjectArray *) nil_chk(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_ctrlpts_))->size_;
  }
}

OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator *new_OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D_withOrgGeogebraCommonAwtGAffineTransform_(OrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D *rr, id<OrgGeogebraCommonAwtGAffineTransform> at) {
  OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator *self = [OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomRoundRectangle2D_withOrgGeogebraCommonAwtGAffineTransform_(self, rr, at);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomRoundRectIterator)
