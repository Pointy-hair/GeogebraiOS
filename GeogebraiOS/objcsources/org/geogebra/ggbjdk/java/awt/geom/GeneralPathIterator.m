//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/ggbjdk/java/awt/geom/GeneralPathIterator.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/geogebra/common/awt/GAffineTransform.h"
#include "org/geogebra/ggbjdk/java/awt/geom/GeneralPath.h"
#include "org/geogebra/ggbjdk/java/awt/geom/GeneralPathIterator.h"

static IOSIntArray *OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_curvesize_;
J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator, curvesize_, IOSIntArray *)

J2OBJC_INITIALIZED_DEFN(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator)

@implementation OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath:(OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *)path {
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_(self, path);
  return self;
}

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath:(OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *)path
                       withOrgGeogebraCommonAwtGAffineTransform:(id<OrgGeogebraCommonAwtGAffineTransform>)at {
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_withOrgGeogebraCommonAwtGAffineTransform_(self, path, at);
  return self;
}

- (jint)getWindingRule {
  return [((OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *) nil_chk(path_)) getWindingRule];
}

- (jboolean)isDone {
  return (typeIdx_ >= ((OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *) nil_chk(path_))->numTypes_);
}

- (void)next {
  jint type = IOSByteArray_Get(nil_chk(((OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *) nil_chk(path_))->pointTypes_), typeIdx_++);
  pointIdx_ += IOSIntArray_Get(nil_chk(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_curvesize_), type);
}

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords {
  jint type = IOSByteArray_Get(nil_chk(((OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *) nil_chk(path_))->pointTypes_), typeIdx_);
  jint numCoords = IOSIntArray_Get(nil_chk(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_curvesize_), type);
  if (numCoords > 0 && affine_ != nil) {
    [affine_ transformWithFloatArray:path_->pointCoords_ withInt:pointIdx_ withFloatArray:coords withInt:0 withInt:numCoords / 2];
  }
  else {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(path_->pointCoords_, pointIdx_, coords, 0, numCoords);
  }
  return type;
}

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords {
  jint type = IOSByteArray_Get(nil_chk(((OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *) nil_chk(path_))->pointTypes_), typeIdx_);
  jint numCoords = IOSIntArray_Get(nil_chk(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_curvesize_), type);
  if (numCoords > 0 && affine_ != nil) {
    [affine_ transformWithFloatArray:path_->pointCoords_ withInt:pointIdx_ withDoubleArray:coords withInt:0 withInt:numCoords / 2];
  }
  else {
    for (jint i = 0; i < numCoords; i++) {
      *IOSDoubleArray_GetRef(nil_chk(coords), i) = IOSFloatArray_Get(nil_chk(path_->pointCoords_), pointIdx_ + i);
    }
  }
  return type;
}

- (void)dealloc {
  RELEASE_(path_);
  RELEASE_(affine_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator class]) {
    JreStrongAssignAndConsume(&OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_curvesize_, nil, [IOSIntArray newArrayWithInts:(jint[]){ 2, 2, 4, 6, 0 } count:5]);
    J2OBJC_SET_INITIALIZED(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath:", "GeneralPathIterator", NULL, 0x0, NULL, NULL },
    { "initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath:withOrgGeogebraCommonAwtGAffineTransform:", "GeneralPathIterator", NULL, 0x0, NULL, NULL },
    { "getWindingRule", NULL, "I", 0x1, NULL, NULL },
    { "isDone", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "V", 0x1, NULL, NULL },
    { "currentSegmentWithFloatArray:", "currentSegment", "I", 0x1, NULL, NULL },
    { "currentSegmentWithDoubleArray:", "currentSegment", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "typeIdx_", NULL, 0x0, "I", NULL, NULL,  },
    { "pointIdx_", NULL, 0x0, "I", NULL, NULL,  },
    { "path_", NULL, 0x0, "Lorg.geogebra.ggbjdk.java.awt.geom.GeneralPath;", NULL, NULL,  },
    { "affine_", NULL, 0x0, "Lorg.geogebra.common.awt.GAffineTransform;", NULL, NULL,  },
    { "curvesize_", NULL, 0x1a, "[I", &OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_curvesize_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator = { 2, "GeneralPathIterator", "org.geogebra.ggbjdk.java.awt.geom", NULL, 0x0, 7, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator *self, OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *path) {
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_withOrgGeogebraCommonAwtGAffineTransform_(self, path, nil);
}

OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator *new_OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_(OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *path) {
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator *self = [OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator alloc];
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_(self, path);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_withOrgGeogebraCommonAwtGAffineTransform_(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator *self, OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *path, id<OrgGeogebraCommonAwtGAffineTransform> at) {
  NSObject_init(self);
  self->typeIdx_ = 0;
  self->pointIdx_ = 0;
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_set_path_(self, path);
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_set_affine_(self, at);
}

OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator *new_OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_withOrgGeogebraCommonAwtGAffineTransform_(OrgGeogebraGgbjdkJavaAwtGeomGeneralPath *path, id<OrgGeogebraCommonAwtGAffineTransform> at) {
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator *self = [OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator alloc];
  OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomGeneralPath_withOrgGeogebraCommonAwtGAffineTransform_(self, path, at);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomGeneralPathIterator)
