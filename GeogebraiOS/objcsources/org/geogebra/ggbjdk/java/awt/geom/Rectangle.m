//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/ggbjdk/java/awt/geom/Rectangle.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/awt/GPoint2D.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/awt/GRectangle2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Dimension.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Point.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Rectangle.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Rectangle2D.h"

#define OrgGeogebraGgbjdkJavaAwtGeomRectangle_serialVersionUID -4345857070255674764LL

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomRectangle, serialVersionUID, jlong)

@implementation OrgGeogebraGgbjdkJavaAwtGeomRectangle

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_init(self);
  return self;
}

- (instancetype)initWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)r {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraCommonAwtGRectangle_(self, r);
  return self;
}

- (instancetype)initWithInt:(jint)x
                    withInt:(jint)y
                    withInt:(jint)width
                    withInt:(jint)height {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, x, y, width, height);
  return self;
}

- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_(self, width, height);
  return self;
}

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomPoint:(OrgGeogebraGgbjdkJavaAwtGeomPoint *)p
                withOrgGeogebraGgbjdkJavaAwtGeomDimension:(OrgGeogebraGgbjdkJavaAwtGeomDimension *)d {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_withOrgGeogebraGgbjdkJavaAwtGeomDimension_(self, p, d);
  return self;
}

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomPoint:(OrgGeogebraGgbjdkJavaAwtGeomPoint *)p {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(self, p);
  return self;
}

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomDimension:(OrgGeogebraGgbjdkJavaAwtGeomDimension *)d {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomDimension_(self, d);
  return self;
}

- (jdouble)getX {
  return x_;
}

- (jdouble)getY {
  return y_;
}

- (jdouble)getWidth {
  return width_;
}

- (jdouble)getHeight {
  return height_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle *)getBounds {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(x_, y_, width_, height_) autorelease];
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)getBounds2D {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(x_, y_, width_, height_) autorelease];
}

- (void)setBoundsWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)r {
  [self setBoundsWithInt:J2ObjCFpToInt([((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(r)) getX]) withInt:J2ObjCFpToInt([r getY]) withInt:J2ObjCFpToInt([r getWidth]) withInt:J2ObjCFpToInt([r getHeight])];
}

- (void)setBoundsWithInt:(jint)x
                 withInt:(jint)y
                 withInt:(jint)width
                 withInt:(jint)height {
  [self reshapeWithInt:x withInt:y withInt:width withInt:height];
}

- (void)setRectWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)width
               withDouble:(jdouble)height {
  jint x0 = J2ObjCFpToInt(JavaLangMath_floorWithDouble_(x));
  jint y0 = J2ObjCFpToInt(JavaLangMath_floorWithDouble_(y));
  jint x1 = J2ObjCFpToInt(JavaLangMath_ceilWithDouble_(x + width));
  jint y1 = J2ObjCFpToInt(JavaLangMath_ceilWithDouble_(y + height));
  [self setBoundsWithInt:x0 withInt:y0 withInt:x1 - x0 withInt:y1 - y0];
}

- (void)reshapeWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)width
               withInt:(jint)height {
  self->x_ = x;
  self->y_ = y;
  self->width_ = width;
  self->height_ = height;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint *)getLocation {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(x_, y_) autorelease];
}

- (void)setLocationWithOrgGeogebraGgbjdkJavaAwtGeomPoint:(OrgGeogebraGgbjdkJavaAwtGeomPoint *)p {
  [self setLocationWithInt:((OrgGeogebraGgbjdkJavaAwtGeomPoint *) nil_chk(p))->x_ withInt:p->y_];
}

- (void)setLocationWithInt:(jint)x
                   withInt:(jint)y {
  [self moveWithInt:x withInt:y];
}

- (void)moveWithInt:(jint)x
            withInt:(jint)y {
  self->x_ = x;
  self->y_ = y;
}

- (void)translateWithInt:(jint)x
                 withInt:(jint)y {
  self->x_ += x;
  self->y_ += y;
}

- (OrgGeogebraGgbjdkJavaAwtGeomDimension *)getSize {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomDimension_initWithInt_withInt_(width_, height_) autorelease];
}

- (void)setSizeWithOrgGeogebraGgbjdkJavaAwtGeomDimension:(OrgGeogebraGgbjdkJavaAwtGeomDimension *)d {
  [self setSizeWithInt:((OrgGeogebraGgbjdkJavaAwtGeomDimension *) nil_chk(d))->width_ withInt:d->height_];
}

- (void)setSizeWithInt:(jint)width
               withInt:(jint)height {
  [self resizeWithInt:width withInt:height];
}

- (void)resizeWithInt:(jint)width
              withInt:(jint)height {
  self->width_ = width;
  self->height_ = height;
}

- (jboolean)containsWithOrgGeogebraCommonAwtGPoint2D:(OrgGeogebraCommonAwtGPoint2D *)p {
  return [self containsWithDouble:[((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p)) getX] withDouble:[p getY]];
}

- (jboolean)containsWithInt:(jint)x
                    withInt:(jint)y {
  return [self insideWithInt:x withInt:y];
}

- (jboolean)containsWithOrgGeogebraGgbjdkJavaAwtGeomRectangle:(OrgGeogebraGgbjdkJavaAwtGeomRectangle *)r {
  return [self containsWithInt:((OrgGeogebraGgbjdkJavaAwtGeomRectangle *) nil_chk(r))->x_ withInt:r->y_ withInt:r->width_ withInt:r->height_];
}

- (jboolean)containsWithInt:(jint)X
                    withInt:(jint)Y
                    withInt:(jint)W
                    withInt:(jint)H {
  jint w = self->width_;
  jint h = self->height_;
  if ((w | h | W | H) < 0) {
    return NO;
  }
  jint x = self->x_;
  jint y = self->y_;
  if (X < x || Y < y) {
    return NO;
  }
  w += x;
  W += X;
  if (W <= X) {
    if (w >= x || W > w) return NO;
  }
  else {
    if (w >= x && W > w) return NO;
  }
  h += y;
  H += Y;
  if (H <= Y) {
    if (h >= y || H > h) return NO;
  }
  else {
    if (h >= y && H > h) return NO;
  }
  return YES;
}

- (jboolean)insideWithInt:(jint)X
                  withInt:(jint)Y {
  jint w = self->width_;
  jint h = self->height_;
  if ((w | h) < 0) {
    return NO;
  }
  jint x = self->x_;
  jint y = self->y_;
  if (X < x || Y < y) {
    return NO;
  }
  w += x;
  h += y;
  return ((w < x || w > X) && (h < y || h > Y));
}

- (jboolean)intersectsWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)r {
  jint tw = self->width_;
  jint th = self->height_;
  jint rw = J2ObjCFpToInt([((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(r)) getWidth]);
  jint rh = J2ObjCFpToInt([r getHeight]);
  if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {
    return NO;
  }
  jint tx = self->x_;
  jint ty = self->y_;
  jint rx = J2ObjCFpToInt([r getX]);
  jint ry = J2ObjCFpToInt([r getY]);
  rw += rx;
  rh += ry;
  tw += tx;
  th += ty;
  return ((rw < rx || rw > tx) && (rh < ry || rh > ty) && (tw < tx || tw > rx) && (th < ty || th > ry));
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle *)intersectionWithOrgGeogebraGgbjdkJavaAwtGeomRectangle:(OrgGeogebraGgbjdkJavaAwtGeomRectangle *)r {
  jint tx1 = self->x_;
  jint ty1 = self->y_;
  jint rx1 = ((OrgGeogebraGgbjdkJavaAwtGeomRectangle *) nil_chk(r))->x_;
  jint ry1 = r->y_;
  jlong tx2 = tx1;
  tx2 += self->width_;
  jlong ty2 = ty1;
  ty2 += self->height_;
  jlong rx2 = rx1;
  rx2 += r->width_;
  jlong ry2 = ry1;
  ry2 += r->height_;
  if (tx1 < rx1) tx1 = rx1;
  if (ty1 < ry1) ty1 = ry1;
  if (tx2 > rx2) tx2 = rx2;
  if (ty2 > ry2) ty2 = ry2;
  tx2 -= tx1;
  ty2 -= ty1;
  if (tx2 < JavaLangInteger_MIN_VALUE) tx2 = JavaLangInteger_MIN_VALUE;
  if (ty2 < JavaLangInteger_MIN_VALUE) ty2 = JavaLangInteger_MIN_VALUE;
  return [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(tx1, ty1, (jint) tx2, (jint) ty2) autorelease];
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle *)union__WithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)r {
  jint x1 = J2ObjCFpToInt(JavaLangMath_minWithDouble_withDouble_(x_, [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(r)) getX]));
  jint x2 = J2ObjCFpToInt(JavaLangMath_maxWithDouble_withDouble_(x_ + width_, [r getX] + [r getWidth]));
  jint y1 = J2ObjCFpToInt(JavaLangMath_minWithDouble_withDouble_(y_, [r getY]));
  jint y2 = J2ObjCFpToInt(JavaLangMath_maxWithDouble_withDouble_(y_ + height_, [r getY] + [r getHeight]));
  return [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(x1, y1, x2 - x1, y2 - y1) autorelease];
}

- (void)addWithInt:(jint)newx
           withInt:(jint)newy {
  jint x1 = JavaLangMath_minWithInt_withInt_(x_, newx);
  jint x2 = JavaLangMath_maxWithInt_withInt_(x_ + width_, newx);
  jint y1 = JavaLangMath_minWithInt_withInt_(y_, newy);
  jint y2 = JavaLangMath_maxWithInt_withInt_(y_ + height_, newy);
  x_ = x1;
  y_ = y1;
  width_ = x2 - x1;
  height_ = y2 - y1;
}

- (void)addWithOrgGeogebraGgbjdkJavaAwtGeomPoint:(OrgGeogebraGgbjdkJavaAwtGeomPoint *)pt {
  [self addWithInt:((OrgGeogebraGgbjdkJavaAwtGeomPoint *) nil_chk(pt))->x_ withInt:pt->y_];
}

- (void)addWithOrgGeogebraCommonAwtGRectangle:(id<OrgGeogebraCommonAwtGRectangle>)r {
  jint x1 = J2ObjCFpToInt(JavaLangMath_minWithDouble_withDouble_(x_, [((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(r)) getX]));
  jint x2 = J2ObjCFpToInt(JavaLangMath_maxWithDouble_withDouble_(x_ + width_, [r getX] + [r getWidth]));
  jint y1 = J2ObjCFpToInt(JavaLangMath_minWithDouble_withDouble_(y_, [r getY]));
  jint y2 = J2ObjCFpToInt(JavaLangMath_maxWithDouble_withDouble_(y_ + height_, [r getY] + [r getHeight]));
  x_ = x1;
  y_ = y1;
  width_ = x2 - x1;
  height_ = y2 - y1;
}

- (void)growWithInt:(jint)h
            withInt:(jint)v {
  x_ -= h;
  y_ -= v;
  width_ += h * 2;
  height_ += v * 2;
}

- (jboolean)isEmpty {
  return (width_ <= 0) || (height_ <= 0);
}

- (jint)outcodeWithDouble:(jdouble)x
               withDouble:(jdouble)y {
  jint out = 0;
  if (self->width_ <= 0) {
    out |= OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_LEFT | OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_RIGHT;
  }
  else if (x < self->x_) {
    out |= OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_LEFT;
  }
  else if (x > self->x_ + (jdouble) self->width_) {
    out |= OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_RIGHT;
  }
  if (self->height_ <= 0) {
    out |= OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_TOP | OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_BOTTOM;
  }
  else if (y < self->y_) {
    out |= OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_TOP;
  }
  else if (y > self->y_ + (jdouble) self->height_) {
    out |= OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_OUT_BOTTOM;
  }
  return out;
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)createIntersectionWithOrgGeogebraCommonAwtGRectangle2D:(id<OrgGeogebraCommonAwtGRectangle2D>)r {
  if ([r isKindOfClass:[OrgGeogebraGgbjdkJavaAwtGeomRectangle class]]) {
    return [self intersectionWithOrgGeogebraGgbjdkJavaAwtGeomRectangle:(OrgGeogebraGgbjdkJavaAwtGeomRectangle *) check_class_cast(r, [OrgGeogebraGgbjdkJavaAwtGeomRectangle class])];
  }
  OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *dest = [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_Double_init() autorelease];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_intersectWithOrgGeogebraCommonAwtGRectangle2D_withOrgGeogebraCommonAwtGRectangle2D_withOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_(self, r, dest);
  return dest;
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)createUnionWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D:(OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)r {
  if ([r isKindOfClass:[OrgGeogebraGgbjdkJavaAwtGeomRectangle class]]) {
    return [self union__WithOrgGeogebraCommonAwtGRectangle:(OrgGeogebraGgbjdkJavaAwtGeomRectangle *) check_class_cast(r, [OrgGeogebraGgbjdkJavaAwtGeomRectangle class])];
  }
  OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *dest = [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_Double_init() autorelease];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_union__WithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_withOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_withOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_(self, r, dest);
  return dest;
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgGeogebraGgbjdkJavaAwtGeomRectangle class]]) {
    OrgGeogebraGgbjdkJavaAwtGeomRectangle *r = (OrgGeogebraGgbjdkJavaAwtGeomRectangle *) check_class_cast(obj, [OrgGeogebraGgbjdkJavaAwtGeomRectangle class]);
    return ((x_ == ((OrgGeogebraGgbjdkJavaAwtGeomRectangle *) nil_chk(r))->x_) && (y_ == r->y_) && (width_ == r->width_) && (height_ == r->height_));
  }
  return [super isEqual:obj];
}

- (NSString *)description {
  return JreStrcat("$$I$I$I$IC", [[self getClass] getName], @"[x=", x_, @",y=", y_, @",width=", width_, @",height=", height_, ']');
}

+ (IOSObjectArray *)__annotations_reshapeWithInt_withInt_withInt_withInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_moveWithInt_withInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_resizeWithInt_withInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_insideWithInt_withInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Rectangle", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraCommonAwtGRectangle:", "Rectangle", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:withInt:", "Rectangle", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "Rectangle", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraGgbjdkJavaAwtGeomPoint:withOrgGeogebraGgbjdkJavaAwtGeomDimension:", "Rectangle", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraGgbjdkJavaAwtGeomPoint:", "Rectangle", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraGgbjdkJavaAwtGeomDimension:", "Rectangle", NULL, 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "getWidth", NULL, "D", 0x1, NULL, NULL },
    { "getHeight", NULL, "D", 0x1, NULL, NULL },
    { "getBounds", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle;", 0x1, NULL, NULL },
    { "getBounds2D", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle2D;", 0x1, NULL, NULL },
    { "setBoundsWithOrgGeogebraCommonAwtGRectangle:", "setBounds", "V", 0x1, NULL, NULL },
    { "setBoundsWithInt:withInt:withInt:withInt:", "setBounds", "V", 0x1, NULL, NULL },
    { "setRectWithDouble:withDouble:withDouble:withDouble:", "setRect", "V", 0x1, NULL, NULL },
    { "reshapeWithInt:withInt:withInt:withInt:", "reshape", "V", 0x1, NULL, NULL },
    { "getLocation", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point;", 0x1, NULL, NULL },
    { "setLocationWithOrgGeogebraGgbjdkJavaAwtGeomPoint:", "setLocation", "V", 0x1, NULL, NULL },
    { "setLocationWithInt:withInt:", "setLocation", "V", 0x1, NULL, NULL },
    { "moveWithInt:withInt:", "move", "V", 0x1, NULL, NULL },
    { "translateWithInt:withInt:", "translate", "V", 0x1, NULL, NULL },
    { "getSize", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Dimension;", 0x1, NULL, NULL },
    { "setSizeWithOrgGeogebraGgbjdkJavaAwtGeomDimension:", "setSize", "V", 0x1, NULL, NULL },
    { "setSizeWithInt:withInt:", "setSize", "V", 0x1, NULL, NULL },
    { "resizeWithInt:withInt:", "resize", "V", 0x1, NULL, NULL },
    { "containsWithOrgGeogebraCommonAwtGPoint2D:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithInt:withInt:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithOrgGeogebraGgbjdkJavaAwtGeomRectangle:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithInt:withInt:withInt:withInt:", "contains", "Z", 0x1, NULL, NULL },
    { "insideWithInt:withInt:", "inside", "Z", 0x1, NULL, NULL },
    { "intersectsWithOrgGeogebraCommonAwtGRectangle:", "intersects", "Z", 0x1, NULL, NULL },
    { "intersectionWithOrgGeogebraGgbjdkJavaAwtGeomRectangle:", "intersection", "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle;", 0x1, NULL, NULL },
    { "union__WithOrgGeogebraCommonAwtGRectangle:", "union", "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle;", 0x1, NULL, NULL },
    { "addWithInt:withInt:", "add", "V", 0x1, NULL, NULL },
    { "addWithOrgGeogebraGgbjdkJavaAwtGeomPoint:", "add", "V", 0x1, NULL, NULL },
    { "addWithOrgGeogebraCommonAwtGRectangle:", "add", "V", 0x1, NULL, NULL },
    { "growWithInt:withInt:", "grow", "V", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "outcodeWithDouble:withDouble:", "outcode", "I", 0x1, NULL, NULL },
    { "createIntersectionWithOrgGeogebraCommonAwtGRectangle2D:", "createIntersection", "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle2D;", 0x1, NULL, NULL },
    { "createUnionWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D:", "createUnion", "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle2D;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "I", NULL, NULL,  },
    { "y_", NULL, 0x1, "I", NULL, NULL,  },
    { "width_", NULL, 0x1, "I", NULL, NULL,  },
    { "height_", NULL, 0x1, "I", NULL, NULL,  },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraGgbjdkJavaAwtGeomRectangle_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomRectangle = { 2, "Rectangle", "org.geogebra.ggbjdk.java.awt.geom", NULL, 0x1, 44, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomRectangle;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomRectangle_init(OrgGeogebraGgbjdkJavaAwtGeomRectangle *self) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, 0, 0, 0, 0);
}

OrgGeogebraGgbjdkJavaAwtGeomRectangle *new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_init() {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle *self = [OrgGeogebraGgbjdkJavaAwtGeomRectangle alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_init(self);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraCommonAwtGRectangle_(OrgGeogebraGgbjdkJavaAwtGeomRectangle *self, id<OrgGeogebraCommonAwtGRectangle> r) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, J2ObjCFpToInt([((id<OrgGeogebraCommonAwtGRectangle>) nil_chk(r)) getX]), J2ObjCFpToInt([r getY]), J2ObjCFpToInt([r getWidth]), J2ObjCFpToInt([r getHeight]));
}

OrgGeogebraGgbjdkJavaAwtGeomRectangle *new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraCommonAwtGRectangle_(id<OrgGeogebraCommonAwtGRectangle> r) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle *self = [OrgGeogebraGgbjdkJavaAwtGeomRectangle alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraCommonAwtGRectangle_(self, r);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(OrgGeogebraGgbjdkJavaAwtGeomRectangle *self, jint x, jint y, jint width, jint height) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_init(self);
  self->x_ = x;
  self->y_ = y;
  self->width_ = width;
  self->height_ = height;
}

OrgGeogebraGgbjdkJavaAwtGeomRectangle *new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(jint x, jint y, jint width, jint height) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle *self = [OrgGeogebraGgbjdkJavaAwtGeomRectangle alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, x, y, width, height);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_(OrgGeogebraGgbjdkJavaAwtGeomRectangle *self, jint width, jint height) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, 0, 0, width, height);
}

OrgGeogebraGgbjdkJavaAwtGeomRectangle *new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_(jint width, jint height) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle *self = [OrgGeogebraGgbjdkJavaAwtGeomRectangle alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_(self, width, height);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_withOrgGeogebraGgbjdkJavaAwtGeomDimension_(OrgGeogebraGgbjdkJavaAwtGeomRectangle *self, OrgGeogebraGgbjdkJavaAwtGeomPoint *p, OrgGeogebraGgbjdkJavaAwtGeomDimension *d) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, ((OrgGeogebraGgbjdkJavaAwtGeomPoint *) nil_chk(p))->x_, p->y_, ((OrgGeogebraGgbjdkJavaAwtGeomDimension *) nil_chk(d))->width_, d->height_);
}

OrgGeogebraGgbjdkJavaAwtGeomRectangle *new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_withOrgGeogebraGgbjdkJavaAwtGeomDimension_(OrgGeogebraGgbjdkJavaAwtGeomPoint *p, OrgGeogebraGgbjdkJavaAwtGeomDimension *d) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle *self = [OrgGeogebraGgbjdkJavaAwtGeomRectangle alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_withOrgGeogebraGgbjdkJavaAwtGeomDimension_(self, p, d);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(OrgGeogebraGgbjdkJavaAwtGeomRectangle *self, OrgGeogebraGgbjdkJavaAwtGeomPoint *p) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, ((OrgGeogebraGgbjdkJavaAwtGeomPoint *) nil_chk(p))->x_, p->y_, 0, 0);
}

OrgGeogebraGgbjdkJavaAwtGeomRectangle *new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(OrgGeogebraGgbjdkJavaAwtGeomPoint *p) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle *self = [OrgGeogebraGgbjdkJavaAwtGeomRectangle alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(self, p);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomDimension_(OrgGeogebraGgbjdkJavaAwtGeomRectangle *self, OrgGeogebraGgbjdkJavaAwtGeomDimension *d) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithInt_withInt_withInt_withInt_(self, 0, 0, ((OrgGeogebraGgbjdkJavaAwtGeomDimension *) nil_chk(d))->width_, d->height_);
}

OrgGeogebraGgbjdkJavaAwtGeomRectangle *new_OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomDimension_(OrgGeogebraGgbjdkJavaAwtGeomDimension *d) {
  OrgGeogebraGgbjdkJavaAwtGeomRectangle *self = [OrgGeogebraGgbjdkJavaAwtGeomRectangle alloc];
  OrgGeogebraGgbjdkJavaAwtGeomRectangle_initWithOrgGeogebraGgbjdkJavaAwtGeomDimension_(self, d);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomRectangle)
