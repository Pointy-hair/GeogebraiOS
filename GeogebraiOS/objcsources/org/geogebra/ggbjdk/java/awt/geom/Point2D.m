//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/ggbjdk/java/awt/geom/Point2D.java
//


#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/awt/GPoint2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Point2D.h"

@implementation OrgGeogebraGgbjdkJavaAwtGeomPoint2D

+ (jdouble)distanceWithDouble:(jdouble)X1
                   withDouble:(jdouble)Y1
                   withDouble:(jdouble)X2
                   withDouble:(jdouble)Y2 {
  return OrgGeogebraGgbjdkJavaAwtGeomPoint2D_distanceWithDouble_withDouble_withDouble_withDouble_(X1, Y1, X2, Y2);
}

+ (jdouble)distanceSqWithDouble:(jdouble)X1
                     withDouble:(jdouble)Y1
                     withDouble:(jdouble)X2
                     withDouble:(jdouble)Y2 {
  return OrgGeogebraGgbjdkJavaAwtGeomPoint2D_distanceSqWithDouble_withDouble_withDouble_withDouble_(X1, Y1, X2, Y2);
}

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_init(self);
  return self;
}

- (jdouble)distanceWithDouble:(jdouble)PX
                   withDouble:(jdouble)PY {
  PX -= [self getX];
  PY -= [self getY];
  return JavaLangMath_sqrtWithDouble_(PX * PX + PY * PY);
}

- (jdouble)distanceWithOrgGeogebraCommonAwtGPoint2D:(OrgGeogebraCommonAwtGPoint2D *)pt {
  jdouble PX = [((OrgGeogebraCommonAwtGPoint2D *) nil_chk(pt)) getX] - [self getX];
  jdouble PY = [pt getY] - [self getY];
  return JavaLangMath_sqrtWithDouble_(PX * PX + PY * PY);
}

- (jdouble)distanceSqWithDouble:(jdouble)PX
                     withDouble:(jdouble)PY {
  PX -= [self getX];
  PY -= [self getY];
  return (PX * PX + PY * PY);
}

- (jdouble)distanceSqWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)pt {
  jdouble PX = [((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(pt)) getX] - [self getX];
  jdouble PY = [pt getY] - [self getY];
  return (PX * PX + PY * PY);
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgGeogebraGgbjdkJavaAwtGeomPoint2D class]]) {
    OrgGeogebraGgbjdkJavaAwtGeomPoint2D *p2d = (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) check_class_cast(obj, [OrgGeogebraGgbjdkJavaAwtGeomPoint2D class]);
    return ([self getX] == [((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(p2d)) getX]) && ([self getY] == [p2d getY]);
  }
  return [super isEqual:obj];
}

- (jdouble)getX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getY {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setLocationWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p {
  [self setLocationWithDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(p)) getX] withDouble:[p getY]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "distanceWithDouble:withDouble:withDouble:withDouble:", "distance", "D", 0x9, NULL, NULL },
    { "distanceSqWithDouble:withDouble:withDouble:withDouble:", "distanceSq", "D", 0x9, NULL, NULL },
    { "init", "Point2D", NULL, 0x4, NULL, NULL },
    { "distanceWithDouble:withDouble:", "distance", "D", 0x1, NULL, NULL },
    { "distanceWithOrgGeogebraCommonAwtGPoint2D:", "distance", "D", 0x1, NULL, NULL },
    { "distanceSqWithDouble:withDouble:", "distanceSq", "D", 0x1, NULL, NULL },
    { "distanceSqWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:", "distanceSq", "D", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x401, NULL, NULL },
    { "getY", NULL, "D", 0x401, NULL, NULL },
    { "setLocationWithDouble:withDouble:", "setLocation", "V", 0x401, NULL, NULL },
    { "setLocationWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:", "setLocation", "V", 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.ggbjdk.java.awt.geom.Point2D$Double;", "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D$Float;"};
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomPoint2D = { 2, "Point2D", "org.geogebra.ggbjdk.java.awt.geom", NULL, 0x401, 12, methods, 0, NULL, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomPoint2D;
}

@end

jdouble OrgGeogebraGgbjdkJavaAwtGeomPoint2D_distanceWithDouble_withDouble_withDouble_withDouble_(jdouble X1, jdouble Y1, jdouble X2, jdouble Y2) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_initialize();
  X1 -= X2;
  Y1 -= Y2;
  return JavaLangMath_sqrtWithDouble_(X1 * X1 + Y1 * Y1);
}

jdouble OrgGeogebraGgbjdkJavaAwtGeomPoint2D_distanceSqWithDouble_withDouble_withDouble_withDouble_(jdouble X1, jdouble Y1, jdouble X2, jdouble Y2) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_initialize();
  X1 -= X2;
  Y1 -= Y2;
  return (X1 * X1 + Y1 * Y1);
}

void OrgGeogebraGgbjdkJavaAwtGeomPoint2D_init(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *self) {
  OrgGeogebraCommonAwtGPoint2D_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomPoint2D)

@implementation OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_init(self);
  return self;
}

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(self, x, y);
  return self;
}

- (jdouble)getX {
  return x_;
}

- (jdouble)getY {
  return y_;
}

- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  self->x_ = x;
  self->y_ = y;
}

- (NSString *)description {
  return JreStrcat("$D$DC", @"Point2D.Double[", x_, @", ", y_, ']');
}

- (void)setXWithDouble:(jdouble)x {
  self->x_ = x;
}

- (void)setYWithDouble:(jdouble)y {
  self->y_ = y;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Double", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "Double", NULL, 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "setLocationWithDouble:withDouble:", "setLocation", "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setXWithDouble:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithDouble:", "setY", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "D", NULL, NULL,  },
    { "y_", NULL, 0x1, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double = { 2, "Double", "org.geogebra.ggbjdk.java.awt.geom", "Point2D", 0x9, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_init(OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double *self) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_init(self);
}

OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_init() {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double *self = [OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double alloc];
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_init(self);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double *self, jdouble x, jdouble y) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_init(self);
  self->x_ = x;
  self->y_ = y;
}

OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(jdouble x, jdouble y) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double *self = [OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double alloc];
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(self, x, y);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double)

@implementation OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_init(self);
  return self;
}

- (instancetype)initWithFloat:(jfloat)x
                    withFloat:(jfloat)y {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(self, x, y);
  return self;
}

- (jdouble)getX {
  return (jdouble) x_;
}

- (jdouble)getY {
  return (jdouble) y_;
}

- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  self->x_ = (jfloat) x;
  self->y_ = (jfloat) y;
}

- (void)setLocationWithFloat:(jfloat)x
                   withFloat:(jfloat)y {
  self->x_ = x;
  self->y_ = y;
}

- (NSString *)description {
  return JreStrcat("$F$FC", @"Point2D.Float[", x_, @", ", y_, ']');
}

- (void)setXWithDouble:(jdouble)x {
  self->x_ = (jfloat) x;
}

- (void)setYWithDouble:(jdouble)y {
  self->y_ = (jfloat) y;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Float", NULL, 0x1, NULL, NULL },
    { "initWithFloat:withFloat:", "Float", NULL, 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "setLocationWithDouble:withDouble:", "setLocation", "V", 0x1, NULL, NULL },
    { "setLocationWithFloat:withFloat:", "setLocation", "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setXWithDouble:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithDouble:", "setY", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "F", NULL, NULL,  },
    { "y_", NULL, 0x1, "F", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float = { 2, "Float", "org.geogebra.ggbjdk.java.awt.geom", "Point2D", 0x9, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_init(OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float *self) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_init(self);
}

OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_init() {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float *self = [OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float alloc];
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_init(self);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float *self, jfloat x, jfloat y) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_init(self);
  self->x_ = x;
  self->y_ = y;
}

OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(jfloat x, jfloat y) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float *self = [OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float alloc];
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(self, x, y);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float)
