//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/ggbjdk/java/awt/geom/Point.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Point.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Point2D.h"

#define OrgGeogebraGgbjdkJavaAwtGeomPoint_serialVersionUID -5276940640259749850LL

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomPoint, serialVersionUID, jlong)

@implementation OrgGeogebraGgbjdkJavaAwtGeomPoint

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomPoint_init(self);
  return self;
}

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomPoint:(OrgGeogebraGgbjdkJavaAwtGeomPoint *)p {
  OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(self, p);
  return self;
}

- (instancetype)initWithInt:(jint)x
                    withInt:(jint)y {
  OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(self, x, y);
  return self;
}

- (jdouble)getX {
  return x_;
}

- (jdouble)getY {
  return y_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint *)getLocation {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(x_, y_) autorelease];
}

- (void)setLocationWithOrgGeogebraGgbjdkJavaAwtGeomPoint:(OrgGeogebraGgbjdkJavaAwtGeomPoint *)p {
  [self setLocationWithInt:((OrgGeogebraGgbjdkJavaAwtGeomPoint *) nil_chk(p))->x_ withInt:p->y_];
}

- (void)setLocationWithInt:(jint)x
                   withInt:(jint)y {
  [self moveWithInt:x withInt:y];
}

- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  self->x_ = J2ObjCFpToInt(JavaLangMath_floorWithDouble_(x + 0.5));
  self->y_ = J2ObjCFpToInt(JavaLangMath_floorWithDouble_(y + 0.5));
}

- (void)moveWithInt:(jint)x
            withInt:(jint)y {
  self->x_ = x;
  self->y_ = y;
}

- (void)translateWithInt:(jint)dx
                 withInt:(jint)dy {
  self->x_ += dx;
  self->y_ += dy;
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgGeogebraGgbjdkJavaAwtGeomPoint class]]) {
    OrgGeogebraGgbjdkJavaAwtGeomPoint *pt = (OrgGeogebraGgbjdkJavaAwtGeomPoint *) check_class_cast(obj, [OrgGeogebraGgbjdkJavaAwtGeomPoint class]);
    return (x_ == ((OrgGeogebraGgbjdkJavaAwtGeomPoint *) nil_chk(pt))->x_) && (y_ == pt->y_);
  }
  return [super isEqual:obj];
}

- (NSString *)description {
  return JreStrcat("$$I$IC", [[self getClass] getName], @"[x=", x_, @",y=", y_, ']');
}

- (void)setXWithDouble:(jdouble)x {
  self->x_ = J2ObjCFpToInt(x);
}

- (void)setYWithDouble:(jdouble)y {
  self->y_ = J2ObjCFpToInt(y);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Point", NULL, 0x1, NULL, NULL },
    { "initWithOrgGeogebraGgbjdkJavaAwtGeomPoint:", "Point", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "Point", NULL, 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "getLocation", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point;", 0x1, NULL, NULL },
    { "setLocationWithOrgGeogebraGgbjdkJavaAwtGeomPoint:", "setLocation", "V", 0x1, NULL, NULL },
    { "setLocationWithInt:withInt:", "setLocation", "V", 0x1, NULL, NULL },
    { "setLocationWithDouble:withDouble:", "setLocation", "V", 0x1, NULL, NULL },
    { "moveWithInt:withInt:", "move", "V", 0x1, NULL, NULL },
    { "translateWithInt:withInt:", "translate", "V", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setXWithDouble:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithDouble:", "setY", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "I", NULL, NULL,  },
    { "y_", NULL, 0x1, "I", NULL, NULL,  },
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgGeogebraGgbjdkJavaAwtGeomPoint_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomPoint = { 2, "Point", "org.geogebra.ggbjdk.java.awt.geom", NULL, 0x1, 15, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomPoint;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomPoint_init(OrgGeogebraGgbjdkJavaAwtGeomPoint *self) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(self, 0, 0);
}

OrgGeogebraGgbjdkJavaAwtGeomPoint *new_OrgGeogebraGgbjdkJavaAwtGeomPoint_init() {
  OrgGeogebraGgbjdkJavaAwtGeomPoint *self = [OrgGeogebraGgbjdkJavaAwtGeomPoint alloc];
  OrgGeogebraGgbjdkJavaAwtGeomPoint_init(self);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(OrgGeogebraGgbjdkJavaAwtGeomPoint *self, OrgGeogebraGgbjdkJavaAwtGeomPoint *p) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(self, ((OrgGeogebraGgbjdkJavaAwtGeomPoint *) nil_chk(p))->x_, p->y_);
}

OrgGeogebraGgbjdkJavaAwtGeomPoint *new_OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(OrgGeogebraGgbjdkJavaAwtGeomPoint *p) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint *self = [OrgGeogebraGgbjdkJavaAwtGeomPoint alloc];
  OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithOrgGeogebraGgbjdkJavaAwtGeomPoint_(self, p);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(OrgGeogebraGgbjdkJavaAwtGeomPoint *self, jint x, jint y) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint2D_init(self);
  self->x_ = x;
  self->y_ = y;
}

OrgGeogebraGgbjdkJavaAwtGeomPoint *new_OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(jint x, jint y) {
  OrgGeogebraGgbjdkJavaAwtGeomPoint *self = [OrgGeogebraGgbjdkJavaAwtGeomPoint alloc];
  OrgGeogebraGgbjdkJavaAwtGeomPoint_initWithInt_withInt_(self, x, y);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomPoint)
