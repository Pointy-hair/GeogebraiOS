//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/ggbjdk/java/awt/geom/QuadCurve2D.java
//

#ifndef _OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_H_
#define _OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/awt/GQuadCurve2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Shape.h"

@class IOSDoubleArray;
@class IOSObjectArray;
@class OrgGeogebraCommonAwtGPoint2D;
@class OrgGeogebraGgbjdkJavaAwtGeomPoint2D;
@class OrgGeogebraGgbjdkJavaAwtGeomRectangle2D;
@protocol OrgGeogebraCommonAwtGAffineTransform;
@protocol OrgGeogebraCommonAwtGRectangle2D;
@protocol OrgGeogebraCommonAwtGRectangle;
@protocol OrgGeogebraGgbjdkJavaAwtGeomPathIterator;

@interface OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D : NSObject < OrgGeogebraGgbjdkJavaAwtGeomShape, NSCopying, OrgGeogebraCommonAwtGQuadCurve2D >

#pragma mark Public

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)w
                    withDouble:(jdouble)h;

- (jboolean)containsWithOrgGeogebraCommonAwtGPoint2D:(OrgGeogebraCommonAwtGPoint2D *)p;

- (jboolean)containsWithOrgGeogebraCommonAwtGRectangle2D:(id<OrgGeogebraCommonAwtGRectangle2D>)r;

- (jboolean)containsWithInt:(jint)x
                    withInt:(jint)y;

- (id<OrgGeogebraCommonAwtGRectangle>)getBounds;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getCtrlPt;

- (jdouble)getCtrlX;

- (jdouble)getCtrlY;

- (jdouble)getFlatness;

+ (jdouble)getFlatnessWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)ctrlx
                      withDouble:(jdouble)ctrly
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2;

+ (jdouble)getFlatnessWithDoubleArray:(IOSDoubleArray *)coords
                              withInt:(jint)offset;

- (jdouble)getFlatnessSq;

+ (jdouble)getFlatnessSqWithDouble:(jdouble)x1
                        withDouble:(jdouble)y1
                        withDouble:(jdouble)ctrlx
                        withDouble:(jdouble)ctrly
                        withDouble:(jdouble)x2
                        withDouble:(jdouble)y2;

+ (jdouble)getFlatnessSqWithDoubleArray:(IOSDoubleArray *)coords
                                withInt:(jint)offset;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP1;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP2;

- (id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator>)getPathIteratorWithOrgGeogebraCommonAwtGAffineTransform:(id<OrgGeogebraCommonAwtGAffineTransform>)at;

- (jdouble)getX1;

- (jdouble)getX2;

- (jdouble)getY1;

- (jdouble)getY2;

- (jboolean)intersectsWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)w
                      withDouble:(jdouble)h;

- (jboolean)intersectsWithOrgGeogebraCommonAwtGRectangle2D:(id<OrgGeogebraCommonAwtGRectangle2D>)r;

- (jboolean)intersectsWithInt:(jint)x
                      withInt:(jint)y
                      withInt:(jint)w
                      withInt:(jint)h;

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2;

- (void)setCurveWithDoubleArray:(IOSDoubleArray *)coords
                        withInt:(jint)offset;

- (void)setCurveWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p1
                withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)cp
                withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p2;

- (void)setCurveWithOrgGeogebraGgbjdkJavaAwtGeomPoint2DArray:(IOSObjectArray *)pts
                                                     withInt:(jint)offset;

- (void)setCurveWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)c;

+ (jint)solveQuadraticWithDoubleArray:(IOSDoubleArray *)eqn;

+ (jint)solveQuadraticWithDoubleArray:(IOSDoubleArray *)eqn
                      withDoubleArray:(IOSDoubleArray *)res;

+ (void)subdivideWithDoubleArray:(IOSDoubleArray *)src
                         withInt:(jint)srcoff
                 withDoubleArray:(IOSDoubleArray *)left
                         withInt:(jint)leftoff
                 withDoubleArray:(IOSDoubleArray *)right
                         withInt:(jint)rightoff;

- (void)subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)left
                 withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)right;

+ (void)subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)src
                 withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)left
                 withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)right;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_init(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *self);

FOUNDATION_EXPORT jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2);

FOUNDATION_EXPORT jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2);

FOUNDATION_EXPORT jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessSqWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset);

FOUNDATION_EXPORT jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset);

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *src, OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *left, OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *right);

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_subdivideWithDoubleArray_withInt_withDoubleArray_withInt_withDoubleArray_withInt_(IOSDoubleArray *src, jint srcoff, IOSDoubleArray *left, jint leftoff, IOSDoubleArray *right, jint rightoff);

FOUNDATION_EXPORT jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_(IOSDoubleArray *eqn);

FOUNDATION_EXPORT jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(IOSDoubleArray *eqn, IOSDoubleArray *res);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D)

@interface OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float : OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D {
 @public
  jfloat x1_;
  jfloat y1_;
  jfloat ctrlx_;
  jfloat ctrly_;
  jfloat x2_;
  jfloat y2_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithFloat:(jfloat)x1
                    withFloat:(jfloat)y1
                    withFloat:(jfloat)ctrlx
                    withFloat:(jfloat)ctrly
                    withFloat:(jfloat)x2
                    withFloat:(jfloat)y2;

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)getBounds2D;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getCtrlPt;

- (jdouble)getCtrlX;

- (jdouble)getCtrlY;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP1;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP2;

- (jdouble)getX1;

- (jdouble)getX2;

- (jdouble)getY1;

- (jdouble)getY2;

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2;

- (void)setCurveWithFloat:(jfloat)x1
                withFloat:(jfloat)y1
                withFloat:(jfloat)ctrlx
                withFloat:(jfloat)ctrly
                withFloat:(jfloat)x2
                withFloat:(jfloat)y2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_init(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *self, jfloat x1, jfloat y1, jfloat ctrlx, jfloat ctrly, jfloat x2, jfloat y2);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat ctrlx, jfloat ctrly, jfloat x2, jfloat y2) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float)

@interface OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double : OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D < OrgGeogebraCommonAwtGQuadCurve2D > {
 @public
  jdouble x1_;
  jdouble y1_;
  jdouble ctrlx_;
  jdouble ctrly_;
  jdouble x2_;
  jdouble y2_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1
                    withDouble:(jdouble)ctrlx
                    withDouble:(jdouble)ctrly
                    withDouble:(jdouble)x2
                    withDouble:(jdouble)y2;

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)getBounds2D;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getCtrlPt;

- (jdouble)getCtrlX;

- (jdouble)getCtrlY;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP1;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP2;

- (jdouble)getX1;

- (jdouble)getX2;

- (jdouble)getY1;

- (jdouble)getY2;

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_init(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *self, jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double)

#endif // _OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_H_
