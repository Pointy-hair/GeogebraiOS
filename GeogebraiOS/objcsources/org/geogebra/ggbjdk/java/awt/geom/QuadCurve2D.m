//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeogebraiOS/GeogebraiOS/sources/org/geogebra/ggbjdk/java/awt/geom/QuadCurve2D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/geogebra/common/awt/GAffineTransform.h"
#include "org/geogebra/common/awt/GPoint2D.h"
#include "org/geogebra/common/awt/GRectangle.h"
#include "org/geogebra/common/awt/GRectangle2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Line2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/PathIterator.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Point2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/QuadCurve2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/QuadIterator.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Rectangle2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/Shape.h"

#pragma clang diagnostic ignored "-Wprotocol"

#define OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_BELOW -2
#define OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_LOWEDGE -1
#define OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE 0
#define OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_HIGHEDGE 1
#define OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_ABOVE 2

@interface OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D ()

+ (void)fillEqnWithDoubleArray:(IOSDoubleArray *)eqn
                    withDouble:(jdouble)val
                    withDouble:(jdouble)c1
                    withDouble:(jdouble)cp
                    withDouble:(jdouble)c2;

+ (jint)evalQuadraticWithDoubleArray:(IOSDoubleArray *)vals
                             withInt:(jint)num
                         withBoolean:(jboolean)include0
                         withBoolean:(jboolean)include1
                     withDoubleArray:(IOSDoubleArray *)inflect
                          withDouble:(jdouble)c1
                          withDouble:(jdouble)ctrl
                          withDouble:(jdouble)c2;

+ (jint)getTagWithDouble:(jdouble)coord
              withDouble:(jdouble)low
              withDouble:(jdouble)high;

+ (jboolean)inwardsWithInt:(jint)pttag
                   withInt:(jint)opt1tag
                   withInt:(jint)opt2tag;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D, BELOW, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D, LOWEDGE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D, INSIDE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D, HIGHEDGE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D, ABOVE, jint)

__attribute__((unused)) static void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray *eqn, jdouble val, jdouble c1, jdouble cp, jdouble c2);

__attribute__((unused)) static jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(IOSDoubleArray *vals, jint num, jboolean include0, jboolean include1, IOSDoubleArray *inflect, jdouble c1, jdouble ctrl, jdouble c2);

__attribute__((unused)) static jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(jdouble coord, jdouble low, jdouble high);

__attribute__((unused)) static jboolean OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(jint pttag, jint opt1tag, jint opt2tag);

@implementation OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_init(self);
  return self;
}

- (jdouble)getX1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getY1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getCtrlX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getCtrlY {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getCtrlPt {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getX2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getY2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setCurveWithDoubleArray:(IOSDoubleArray *)coords
                        withInt:(jint)offset {
  [self setCurveWithDouble:IOSDoubleArray_Get(nil_chk(coords), offset + 0) withDouble:IOSDoubleArray_Get(coords, offset + 1) withDouble:IOSDoubleArray_Get(coords, offset + 2) withDouble:IOSDoubleArray_Get(coords, offset + 3) withDouble:IOSDoubleArray_Get(coords, offset + 4) withDouble:IOSDoubleArray_Get(coords, offset + 5)];
}

- (void)setCurveWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p1
                withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)cp
                withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p2 {
  [self setCurveWithDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(p1)) getX] withDouble:[p1 getY] withDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(cp)) getX] withDouble:[cp getY] withDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(p2)) getX] withDouble:[p2 getY]];
}

- (void)setCurveWithOrgGeogebraGgbjdkJavaAwtGeomPoint2DArray:(IOSObjectArray *)pts
                                                     withInt:(jint)offset {
  [self setCurveWithDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(nil_chk(pts), offset + 0))) getX] withDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(pts, offset + 0))) getY] withDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(pts, offset + 1))) getX] withDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(pts, offset + 1))) getY] withDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(pts, offset + 2))) getX] withDouble:[((OrgGeogebraGgbjdkJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(pts, offset + 2))) getY]];
}

- (void)setCurveWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)c {
  [self setCurveWithDouble:[((OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *) nil_chk(c)) getX1] withDouble:[c getY1] withDouble:[c getCtrlX] withDouble:[c getCtrlY] withDouble:[c getX2] withDouble:[c getY2]];
}

+ (jdouble)getFlatnessSqWithDouble:(jdouble)x1
                        withDouble:(jdouble)y1
                        withDouble:(jdouble)ctrlx
                        withDouble:(jdouble)ctrly
                        withDouble:(jdouble)x2
                        withDouble:(jdouble)y2 {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, ctrlx, ctrly, x2, y2);
}

+ (jdouble)getFlatnessWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)ctrlx
                      withDouble:(jdouble)ctrly
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2 {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, ctrlx, ctrly, x2, y2);
}

+ (jdouble)getFlatnessSqWithDoubleArray:(IOSDoubleArray *)coords
                                withInt:(jint)offset {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessSqWithDoubleArray_withInt_(coords, offset);
}

+ (jdouble)getFlatnessWithDoubleArray:(IOSDoubleArray *)coords
                              withInt:(jint)offset {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessWithDoubleArray_withInt_(coords, offset);
}

- (jdouble)getFlatnessSq {
  return OrgGeogebraGgbjdkJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [self getCtrlX], [self getCtrlY]);
}

- (jdouble)getFlatness {
  return OrgGeogebraGgbjdkJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [self getCtrlX], [self getCtrlY]);
}

- (void)subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)left
                 withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)right {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_(self, left, right);
}

+ (void)subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)src
                 withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)left
                 withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *)right {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_(src, left, right);
}

+ (void)subdivideWithDoubleArray:(IOSDoubleArray *)src
                         withInt:(jint)srcoff
                 withDoubleArray:(IOSDoubleArray *)left
                         withInt:(jint)leftoff
                 withDoubleArray:(IOSDoubleArray *)right
                         withInt:(jint)rightoff {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_subdivideWithDoubleArray_withInt_withDoubleArray_withInt_withDoubleArray_withInt_(src, srcoff, left, leftoff, right, rightoff);
}

+ (jint)solveQuadraticWithDoubleArray:(IOSDoubleArray *)eqn {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_(eqn);
}

+ (jint)solveQuadraticWithDoubleArray:(IOSDoubleArray *)eqn
                      withDoubleArray:(IOSDoubleArray *)res {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res);
}

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y {
  jdouble x1 = [self getX1];
  jdouble y1 = [self getY1];
  jdouble xc = [self getCtrlX];
  jdouble yc = [self getCtrlY];
  jdouble x2 = [self getX2];
  jdouble y2 = [self getY2];
  jdouble kx = x1 - 2 * xc + x2;
  jdouble ky = y1 - 2 * yc + y2;
  jdouble dx = x - x1;
  jdouble dy = y - y1;
  jdouble dxl = x2 - x1;
  jdouble dyl = y2 - y1;
  jdouble t0 = (dx * ky - dy * kx) / (dxl * ky - dyl * kx);
  if (t0 < 0 || t0 > 1 || t0 != t0) {
    return NO;
  }
  jdouble xb = kx * t0 * t0 + 2 * (xc - x1) * t0 + x1;
  jdouble yb = ky * t0 * t0 + 2 * (yc - y1) * t0 + y1;
  jdouble xl = dxl * t0 + x1;
  jdouble yl = dyl * t0 + y1;
  return (x >= xb && x < xl) || (x >= xl && x < xb) || (y >= yb && y < yl) || (y >= yl && y < yb);
}

- (jboolean)containsWithInt:(jint)x
                    withInt:(jint)y {
  jdouble x1 = [self getX1];
  jdouble y1 = [self getY1];
  jdouble xc = [self getCtrlX];
  jdouble yc = [self getCtrlY];
  jdouble x2 = [self getX2];
  jdouble y2 = [self getY2];
  jdouble kx = x1 - 2 * xc + x2;
  jdouble ky = y1 - 2 * yc + y2;
  jdouble dx = x - x1;
  jdouble dy = y - y1;
  jdouble dxl = x2 - x1;
  jdouble dyl = y2 - y1;
  jdouble t0 = (dx * ky - dy * kx) / (dxl * ky - dyl * kx);
  if (t0 < 0 || t0 > 1 || t0 != t0) {
    return NO;
  }
  jdouble xb = kx * t0 * t0 + 2 * (xc - x1) * t0 + x1;
  jdouble yb = ky * t0 * t0 + 2 * (yc - y1) * t0 + y1;
  jdouble xl = dxl * t0 + x1;
  jdouble yl = dyl * t0 + y1;
  return (x >= xb && x < xl) || (x >= xl && x < xb) || (y >= yb && y < yl) || (y >= yl && y < yb);
}

- (jboolean)containsWithOrgGeogebraCommonAwtGPoint2D:(OrgGeogebraCommonAwtGPoint2D *)p {
  return [self containsWithDouble:[((OrgGeogebraCommonAwtGPoint2D *) nil_chk(p)) getX] withDouble:[p getY]];
}

+ (void)fillEqnWithDoubleArray:(IOSDoubleArray *)eqn
                    withDouble:(jdouble)val
                    withDouble:(jdouble)c1
                    withDouble:(jdouble)cp
                    withDouble:(jdouble)c2 {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(eqn, val, c1, cp, c2);
}

+ (jint)evalQuadraticWithDoubleArray:(IOSDoubleArray *)vals
                             withInt:(jint)num
                         withBoolean:(jboolean)include0
                         withBoolean:(jboolean)include1
                     withDoubleArray:(IOSDoubleArray *)inflect
                          withDouble:(jdouble)c1
                          withDouble:(jdouble)ctrl
                          withDouble:(jdouble)c2 {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(vals, num, include0, include1, inflect, c1, ctrl, c2);
}

+ (jint)getTagWithDouble:(jdouble)coord
              withDouble:(jdouble)low
              withDouble:(jdouble)high {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(coord, low, high);
}

+ (jboolean)inwardsWithInt:(jint)pttag
                   withInt:(jint)opt1tag
                   withInt:(jint)opt2tag {
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(pttag, opt1tag, opt2tag);
}

- (jboolean)intersectsWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)w
                      withDouble:(jdouble)h {
  if (w < 0 || h < 0) {
    return NO;
  }
  jdouble x1 = [self getX1];
  jdouble y1 = [self getY1];
  jint x1tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(x1, x, x + w);
  jint y1tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(y1, y, y + h);
  if (x1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return YES;
  }
  jdouble x2 = [self getX2];
  jdouble y2 = [self getY2];
  jint x2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(x2, x, x + w);
  jint y2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(y2, y, y + h);
  if (x2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return YES;
  }
  jdouble ctrlx = [self getCtrlX];
  jdouble ctrly = [self getCtrlY];
  jint ctrlxtag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(ctrlx, x, x + w);
  jint ctrlytag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(ctrly, y, y + h);
  if (x1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && x2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlxtag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (y1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlytag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (x1tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && x2tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlxtag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (y1tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlytag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(x1tag, x2tag, ctrlxtag) && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(y1tag, y2tag, ctrlytag)) {
    return YES;
  }
  if (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(x2tag, x1tag, ctrlxtag) && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(y2tag, y1tag, ctrlytag)) {
    return YES;
  }
  jboolean xoverlap = (x1tag * x2tag <= 0);
  jboolean yoverlap = (y1tag * y2tag <= 0);
  if (x1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && x2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && yoverlap) {
    return YES;
  }
  if (y1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && xoverlap) {
    return YES;
  }
  IOSDoubleArray *eqn = [IOSDoubleArray arrayWithLength:3];
  IOSDoubleArray *res = [IOSDoubleArray arrayWithLength:3];
  if (!yoverlap) {
    OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(eqn, (y1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? y : y + h), y1, ctrly, y2);
    return (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(res, 2, YES, YES, nil, x1, ctrlx, x2) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 0), x, x + w) * OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 1), x, x + w) <= 0);
  }
  if (!xoverlap) {
    OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(eqn, (x1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? x : x + w), x1, ctrlx, x2);
    return (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(res, 2, YES, YES, nil, y1, ctrly, y2) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 0), y, y + h) * OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 1), y, y + h) <= 0);
  }
  jdouble dx = x2 - x1;
  jdouble dy = y2 - y1;
  jdouble k = y2 * x1 - x2 * y1;
  jint c1tag, c2tag;
  if (y1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    c1tag = x1tag;
  }
  else {
    c1tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_((k + dx * (y1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? y : y + h)) / dy, x, x + w);
  }
  if (y2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    c2tag = x2tag;
  }
  else {
    c2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_((k + dx * (y2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? y : y + h)) / dy, x, x + w);
  }
  if (c1tag * c2tag <= 0) {
    return YES;
  }
  c1tag = ((c1tag * x1tag <= 0) ? y1tag : y2tag);
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(eqn, (c2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? x : x + w), x1, ctrlx, x2);
  jint num = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res);
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(res, num, YES, YES, nil, y1, ctrly, y2);
  c2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 0), y, y + h);
  return (c1tag * c2tag <= 0);
}

- (jboolean)intersectsWithInt:(jint)x
                      withInt:(jint)y
                      withInt:(jint)w
                      withInt:(jint)h {
  if (w < 0 || h < 0) {
    return NO;
  }
  jdouble x1 = [self getX1];
  jdouble y1 = [self getY1];
  jint x1tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(x1, x, x + w);
  jint y1tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(y1, y, y + h);
  if (x1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return YES;
  }
  jdouble x2 = [self getX2];
  jdouble y2 = [self getY2];
  jint x2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(x2, x, x + w);
  jint y2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(y2, y, y + h);
  if (x2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return YES;
  }
  jdouble ctrlx = [self getCtrlX];
  jdouble ctrly = [self getCtrlY];
  jint ctrlxtag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(ctrlx, x, x + w);
  jint ctrlytag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(ctrly, y, y + h);
  if (x1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && x2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlxtag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (y1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlytag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (x1tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && x2tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlxtag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (y1tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && ctrlytag > OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    return NO;
  }
  if (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(x1tag, x2tag, ctrlxtag) && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(y1tag, y2tag, ctrlytag)) {
    return YES;
  }
  if (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(x2tag, x1tag, ctrlxtag) && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(y2tag, y1tag, ctrlytag)) {
    return YES;
  }
  jboolean xoverlap = (x1tag * x2tag <= 0);
  jboolean yoverlap = (y1tag * y2tag <= 0);
  if (x1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && x2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && yoverlap) {
    return YES;
  }
  if (y1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && y2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE && xoverlap) {
    return YES;
  }
  IOSDoubleArray *eqn = [IOSDoubleArray arrayWithLength:3];
  IOSDoubleArray *res = [IOSDoubleArray arrayWithLength:3];
  if (!yoverlap) {
    OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(eqn, (y1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? y : y + h), y1, ctrly, y2);
    return (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(res, 2, YES, YES, nil, x1, ctrlx, x2) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 0), x, x + w) * OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 1), x, x + w) <= 0);
  }
  if (!xoverlap) {
    OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(eqn, (x1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? x : x + w), x1, ctrlx, x2);
    return (OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(res, 2, YES, YES, nil, y1, ctrly, y2) == 2 && OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 0), y, y + h) * OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 1), y, y + h) <= 0);
  }
  jdouble dx = x2 - x1;
  jdouble dy = y2 - y1;
  jdouble k = y2 * x1 - x2 * y1;
  jint c1tag, c2tag;
  if (y1tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    c1tag = x1tag;
  }
  else {
    c1tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_((k + dx * (y1tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? y : y + h)) / dy, x, x + w);
  }
  if (y2tag == OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE) {
    c2tag = x2tag;
  }
  else {
    c2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_((k + dx * (y2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? y : y + h)) / dy, x, x + w);
  }
  if (c1tag * c2tag <= 0) {
    return YES;
  }
  c1tag = ((c1tag * x1tag <= 0) ? y1tag : y2tag);
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(eqn, (c2tag < OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE ? x : x + w), x1, ctrlx, x2);
  jint num = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res);
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(res, num, YES, YES, nil, y1, ctrly, y2);
  c2tag = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(res, 0), y, y + h);
  return (c1tag * c2tag <= 0);
}

- (jboolean)intersectsWithOrgGeogebraCommonAwtGRectangle2D:(id<OrgGeogebraCommonAwtGRectangle2D>)r {
  return [self intersectsWithDouble:[((id<OrgGeogebraCommonAwtGRectangle2D>) nil_chk(r)) getX] withDouble:[r getY] withDouble:[r getWidth] withDouble:[r getHeight]];
}

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)w
                    withDouble:(jdouble)h {
  return ([self containsWithDouble:x withDouble:y] && [self containsWithDouble:x + w withDouble:y] && [self containsWithDouble:x + w withDouble:y + h] && [self containsWithDouble:x withDouble:y + h]);
}

- (jboolean)containsWithOrgGeogebraCommonAwtGRectangle2D:(id<OrgGeogebraCommonAwtGRectangle2D>)r {
  return [self containsWithDouble:[((id<OrgGeogebraCommonAwtGRectangle2D>) nil_chk(r)) getX] withDouble:[r getY] withDouble:[r getWidth] withDouble:[r getHeight]];
}

- (id<OrgGeogebraCommonAwtGRectangle>)getBounds {
  return [((id<OrgGeogebraCommonAwtGRectangle2D>) nil_chk([self getBounds2D])) getBounds];
}

- (id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator>)getPathIteratorWithOrgGeogebraCommonAwtGAffineTransform:(id<OrgGeogebraCommonAwtGAffineTransform>)at {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomQuadIterator_initWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraCommonAwtGAffineTransform_(self, at) autorelease];
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self clone] retain];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "QuadCurve2D", NULL, 0x4, NULL, NULL },
    { "getX1", NULL, "D", 0x401, NULL, NULL },
    { "getY1", NULL, "D", 0x401, NULL, NULL },
    { "getP1", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x401, NULL, NULL },
    { "getCtrlX", NULL, "D", 0x401, NULL, NULL },
    { "getCtrlY", NULL, "D", 0x401, NULL, NULL },
    { "getCtrlPt", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x401, NULL, NULL },
    { "getX2", NULL, "D", 0x401, NULL, NULL },
    { "getY2", NULL, "D", 0x401, NULL, NULL },
    { "getP2", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x401, NULL, NULL },
    { "setCurveWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "setCurve", "V", 0x401, NULL, NULL },
    { "setCurveWithDoubleArray:withInt:", "setCurve", "V", 0x1, NULL, NULL },
    { "setCurveWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:", "setCurve", "V", 0x1, NULL, NULL },
    { "setCurveWithOrgGeogebraGgbjdkJavaAwtGeomPoint2DArray:withInt:", "setCurve", "V", 0x1, NULL, NULL },
    { "setCurveWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:", "setCurve", "V", 0x1, NULL, NULL },
    { "getFlatnessSqWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "getFlatnessSq", "D", 0x9, NULL, NULL },
    { "getFlatnessWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "getFlatness", "D", 0x9, NULL, NULL },
    { "getFlatnessSqWithDoubleArray:withInt:", "getFlatnessSq", "D", 0x9, NULL, NULL },
    { "getFlatnessWithDoubleArray:withInt:", "getFlatness", "D", 0x9, NULL, NULL },
    { "getFlatnessSq", NULL, "D", 0x1, NULL, NULL },
    { "getFlatness", NULL, "D", 0x1, NULL, NULL },
    { "subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:", "subdivide", "V", 0x1, NULL, NULL },
    { "subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D:", "subdivide", "V", 0x9, NULL, NULL },
    { "subdivideWithDoubleArray:withInt:withDoubleArray:withInt:withDoubleArray:withInt:", "subdivide", "V", 0x9, NULL, NULL },
    { "solveQuadraticWithDoubleArray:", "solveQuadratic", "I", 0x9, NULL, NULL },
    { "solveQuadraticWithDoubleArray:withDoubleArray:", "solveQuadratic", "I", 0x9, NULL, NULL },
    { "containsWithDouble:withDouble:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithInt:withInt:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithOrgGeogebraCommonAwtGPoint2D:", "contains", "Z", 0x1, NULL, NULL },
    { "fillEqnWithDoubleArray:withDouble:withDouble:withDouble:withDouble:", "fillEqn", "V", 0xa, NULL, NULL },
    { "evalQuadraticWithDoubleArray:withInt:withBoolean:withBoolean:withDoubleArray:withDouble:withDouble:withDouble:", "evalQuadratic", "I", 0xa, NULL, NULL },
    { "getTagWithDouble:withDouble:withDouble:", "getTag", "I", 0xa, NULL, NULL },
    { "inwardsWithInt:withInt:withInt:", "inwards", "Z", 0xa, NULL, NULL },
    { "intersectsWithDouble:withDouble:withDouble:withDouble:", "intersects", "Z", 0x1, NULL, NULL },
    { "intersectsWithInt:withInt:withInt:withInt:", "intersects", "Z", 0x1, NULL, NULL },
    { "intersectsWithOrgGeogebraCommonAwtGRectangle2D:", "intersects", "Z", 0x1, NULL, NULL },
    { "containsWithDouble:withDouble:withDouble:withDouble:", "contains", "Z", 0x1, NULL, NULL },
    { "containsWithOrgGeogebraCommonAwtGRectangle2D:", "contains", "Z", 0x1, NULL, NULL },
    { "getBounds", NULL, "Lorg.geogebra.common.awt.GRectangle;", 0x1, NULL, NULL },
    { "getPathIteratorWithOrgGeogebraCommonAwtGAffineTransform:", "getPathIterator", "Lorg.geogebra.ggbjdk.java.awt.geom.PathIterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BELOW_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_BELOW },
    { "LOWEDGE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_LOWEDGE },
    { "INSIDE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE },
    { "HIGHEDGE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_HIGHEDGE },
    { "ABOVE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_ABOVE },
  };
  static const char *inner_classes[] = {"Lorg.geogebra.ggbjdk.java.awt.geom.QuadCurve2D$Float;", "Lorg.geogebra.ggbjdk.java.awt.geom.QuadCurve2D$Double;"};
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D = { 2, "QuadCurve2D", "org.geogebra.ggbjdk.java.awt.geom", NULL, 0x401, 40, methods, 5, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_init(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *self) {
  NSObject_init(self);
}

jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  return OrgGeogebraGgbjdkJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, ctrlx, ctrly);
}

jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  return OrgGeogebraGgbjdkJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, ctrlx, ctrly);
}

jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessSqWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  return OrgGeogebraGgbjdkJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(coords), offset + 0), IOSDoubleArray_Get(coords, offset + 1), IOSDoubleArray_Get(coords, offset + 4), IOSDoubleArray_Get(coords, offset + 5), IOSDoubleArray_Get(coords, offset + 2), IOSDoubleArray_Get(coords, offset + 3));
}

jdouble OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getFlatnessWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  return OrgGeogebraGgbjdkJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(coords), offset + 0), IOSDoubleArray_Get(coords, offset + 1), IOSDoubleArray_Get(coords, offset + 4), IOSDoubleArray_Get(coords, offset + 5), IOSDoubleArray_Get(coords, offset + 2), IOSDoubleArray_Get(coords, offset + 3));
}

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_subdivideWithOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_withOrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *src, OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *left, OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *right) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  jdouble x1 = [((OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D *) nil_chk(src)) getX1];
  jdouble y1 = [src getY1];
  jdouble ctrlx = [src getCtrlX];
  jdouble ctrly = [src getCtrlY];
  jdouble x2 = [src getX2];
  jdouble y2 = [src getY2];
  jdouble ctrlx1 = (x1 + ctrlx) / 2.0;
  jdouble ctrly1 = (y1 + ctrly) / 2.0;
  jdouble ctrlx2 = (x2 + ctrlx) / 2.0;
  jdouble ctrly2 = (y2 + ctrly) / 2.0;
  ctrlx = (ctrlx1 + ctrlx2) / 2.0;
  ctrly = (ctrly1 + ctrly2) / 2.0;
  if (left != nil) {
    [left setCurveWithDouble:x1 withDouble:y1 withDouble:ctrlx1 withDouble:ctrly1 withDouble:ctrlx withDouble:ctrly];
  }
  if (right != nil) {
    [right setCurveWithDouble:ctrlx withDouble:ctrly withDouble:ctrlx2 withDouble:ctrly2 withDouble:x2 withDouble:y2];
  }
}

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_subdivideWithDoubleArray_withInt_withDoubleArray_withInt_withDoubleArray_withInt_(IOSDoubleArray *src, jint srcoff, IOSDoubleArray *left, jint leftoff, IOSDoubleArray *right, jint rightoff) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  jdouble x1 = IOSDoubleArray_Get(nil_chk(src), srcoff + 0);
  jdouble y1 = IOSDoubleArray_Get(src, srcoff + 1);
  jdouble ctrlx = IOSDoubleArray_Get(src, srcoff + 2);
  jdouble ctrly = IOSDoubleArray_Get(src, srcoff + 3);
  jdouble x2 = IOSDoubleArray_Get(src, srcoff + 4);
  jdouble y2 = IOSDoubleArray_Get(src, srcoff + 5);
  if (left != nil) {
    *IOSDoubleArray_GetRef(left, leftoff + 0) = x1;
    *IOSDoubleArray_GetRef(left, leftoff + 1) = y1;
  }
  if (right != nil) {
    *IOSDoubleArray_GetRef(right, rightoff + 4) = x2;
    *IOSDoubleArray_GetRef(right, rightoff + 5) = y2;
  }
  x1 = (x1 + ctrlx) / 2.0;
  y1 = (y1 + ctrly) / 2.0;
  x2 = (x2 + ctrlx) / 2.0;
  y2 = (y2 + ctrly) / 2.0;
  ctrlx = (x1 + x2) / 2.0;
  ctrly = (y1 + y2) / 2.0;
  if (left != nil) {
    *IOSDoubleArray_GetRef(left, leftoff + 2) = x1;
    *IOSDoubleArray_GetRef(left, leftoff + 3) = y1;
    *IOSDoubleArray_GetRef(left, leftoff + 4) = ctrlx;
    *IOSDoubleArray_GetRef(left, leftoff + 5) = ctrly;
  }
  if (right != nil) {
    *IOSDoubleArray_GetRef(right, rightoff + 0) = ctrlx;
    *IOSDoubleArray_GetRef(right, rightoff + 1) = ctrly;
    *IOSDoubleArray_GetRef(right, rightoff + 2) = x2;
    *IOSDoubleArray_GetRef(right, rightoff + 3) = y2;
  }
}

jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_(IOSDoubleArray *eqn) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, eqn);
}

jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(IOSDoubleArray *eqn, IOSDoubleArray *res) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  jdouble a = IOSDoubleArray_Get(nil_chk(eqn), 2);
  jdouble b = IOSDoubleArray_Get(eqn, 1);
  jdouble c = IOSDoubleArray_Get(eqn, 0);
  jint roots = 0;
  if (a == 0.0) {
    if (b == 0.0) {
      return -1;
    }
    *IOSDoubleArray_GetRef(nil_chk(res), roots++) = -c / b;
  }
  else {
    jdouble d = b * b - 4.0 * a * c;
    if (d < 0.0) {
      return 0;
    }
    d = JavaLangMath_sqrtWithDouble_(d);
    if (b < 0.0) {
      d = -d;
    }
    jdouble q = (b + d) / -2.0;
    *IOSDoubleArray_GetRef(nil_chk(res), roots++) = q / a;
    if (q != 0.0) {
      *IOSDoubleArray_GetRef(res, roots++) = c / q;
    }
  }
  return roots;
}

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_fillEqnWithDoubleArray_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray *eqn, jdouble val, jdouble c1, jdouble cp, jdouble c2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  *IOSDoubleArray_GetRef(nil_chk(eqn), 0) = c1 - val;
  *IOSDoubleArray_GetRef(eqn, 1) = cp + cp - c1 - c1;
  *IOSDoubleArray_GetRef(eqn, 2) = c1 - cp - cp + c2;
  return;
}

jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_evalQuadraticWithDoubleArray_withInt_withBoolean_withBoolean_withDoubleArray_withDouble_withDouble_withDouble_(IOSDoubleArray *vals, jint num, jboolean include0, jboolean include1, IOSDoubleArray *inflect, jdouble c1, jdouble ctrl, jdouble c2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  jint j = 0;
  for (jint i = 0; i < num; i++) {
    jdouble t = IOSDoubleArray_Get(nil_chk(vals), i);
    if ((include0 ? t >= 0 : t > 0) && (include1 ? t <= 1 : t < 1) && (inflect == nil || IOSDoubleArray_Get(inflect, 1) + 2 * IOSDoubleArray_Get(inflect, 2) * t != 0)) {
      jdouble u = 1 - t;
      *IOSDoubleArray_GetRef(vals, j++) = c1 * u * u + 2 * ctrl * t * u + c2 * t * t;
    }
  }
  return j;
}

jint OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_getTagWithDouble_withDouble_withDouble_(jdouble coord, jdouble low, jdouble high) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  if (coord <= low) {
    return (coord < low ? OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_BELOW : OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_LOWEDGE);
  }
  if (coord >= high) {
    return (coord > high ? OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_ABOVE : OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_HIGHEDGE);
  }
  return OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE;
}

jboolean OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_inwardsWithInt_withInt_withInt_(jint pttag, jint opt1tag, jint opt2tag) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_initialize();
  switch (pttag) {
    case OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_BELOW:
    case OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_ABOVE:
    default:
    return NO;
    case OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_LOWEDGE:
    return (opt1tag >= OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE || opt2tag >= OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE);
    case OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE:
    return YES;
    case OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_HIGHEDGE:
    return (opt1tag <= OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE || opt2tag <= OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_INSIDE);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D)

@implementation OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_init(self);
  return self;
}

- (instancetype)initWithFloat:(jfloat)x1
                    withFloat:(jfloat)y1
                    withFloat:(jfloat)ctrlx
                    withFloat:(jfloat)ctrly
                    withFloat:(jfloat)x2
                    withFloat:(jfloat)y2 {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(self, x1, y1, ctrlx, ctrly, x2, y2);
  return self;
}

- (jdouble)getX1 {
  return (jdouble) x1_;
}

- (jdouble)getY1 {
  return (jdouble) y1_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP1 {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(x1_, y1_) autorelease];
}

- (jdouble)getCtrlX {
  return (jdouble) ctrlx_;
}

- (jdouble)getCtrlY {
  return (jdouble) ctrly_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getCtrlPt {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(ctrlx_, ctrly_) autorelease];
}

- (jdouble)getX2 {
  return (jdouble) x2_;
}

- (jdouble)getY2 {
  return (jdouble) y2_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP2 {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(x2_, y2_) autorelease];
}

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2 {
  self->x1_ = (jfloat) x1;
  self->y1_ = (jfloat) y1;
  self->ctrlx_ = (jfloat) ctrlx;
  self->ctrly_ = (jfloat) ctrly;
  self->x2_ = (jfloat) x2;
  self->y2_ = (jfloat) y2;
}

- (void)setCurveWithFloat:(jfloat)x1
                withFloat:(jfloat)y1
                withFloat:(jfloat)ctrlx
                withFloat:(jfloat)ctrly
                withFloat:(jfloat)x2
                withFloat:(jfloat)y2 {
  self->x1_ = x1;
  self->y1_ = y1;
  self->ctrlx_ = ctrlx;
  self->ctrly_ = ctrly;
  self->x2_ = x2;
  self->y2_ = y2;
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)getBounds2D {
  jfloat left = JavaLangMath_minWithFloat_withFloat_(JavaLangMath_minWithFloat_withFloat_(x1_, x2_), ctrlx_);
  jfloat top = JavaLangMath_minWithFloat_withFloat_(JavaLangMath_minWithFloat_withFloat_(y1_, y2_), ctrly_);
  jfloat right = JavaLangMath_maxWithFloat_withFloat_(JavaLangMath_maxWithFloat_withFloat_(x1_, x2_), ctrlx_);
  jfloat bottom = JavaLangMath_maxWithFloat_withFloat_(JavaLangMath_maxWithFloat_withFloat_(y1_, y2_), ctrly_);
  return [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_Float_initWithFloat_withFloat_withFloat_withFloat_(left, top, right - left, bottom - top) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Float", NULL, 0x1, NULL, NULL },
    { "initWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", "Float", NULL, 0x1, NULL, NULL },
    { "getX1", NULL, "D", 0x1, NULL, NULL },
    { "getY1", NULL, "D", 0x1, NULL, NULL },
    { "getP1", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x1, NULL, NULL },
    { "getCtrlX", NULL, "D", 0x1, NULL, NULL },
    { "getCtrlY", NULL, "D", 0x1, NULL, NULL },
    { "getCtrlPt", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x1, NULL, NULL },
    { "getX2", NULL, "D", 0x1, NULL, NULL },
    { "getY2", NULL, "D", 0x1, NULL, NULL },
    { "getP2", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x1, NULL, NULL },
    { "setCurveWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "setCurve", "V", 0x1, NULL, NULL },
    { "setCurveWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", "setCurve", "V", 0x1, NULL, NULL },
    { "getBounds2D", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle2D;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", NULL, 0x1, "F", NULL, NULL,  },
    { "y1_", NULL, 0x1, "F", NULL, NULL,  },
    { "ctrlx_", NULL, 0x1, "F", NULL, NULL,  },
    { "ctrly_", NULL, 0x1, "F", NULL, NULL,  },
    { "x2_", NULL, 0x1, "F", NULL, NULL,  },
    { "y2_", NULL, 0x1, "F", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float = { 2, "Float", "org.geogebra.ggbjdk.java.awt.geom", "QuadCurve2D", 0x9, 14, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_init(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *self) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_init(self);
}

OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_init() {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *self = [OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float alloc];
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_init(self);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *self, jfloat x1, jfloat y1, jfloat ctrlx, jfloat ctrly, jfloat x2, jfloat y2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_init(self);
  [self setCurveWithFloat:x1 withFloat:y1 withFloat:ctrlx withFloat:ctrly withFloat:x2 withFloat:y2];
}

OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat ctrlx, jfloat ctrly, jfloat x2, jfloat y2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float *self = [OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float alloc];
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(self, x1, y1, ctrlx, ctrly, x2, y2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Float)

@implementation OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double

- (instancetype)init {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_init(self);
  return self;
}

- (instancetype)initWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1
                    withDouble:(jdouble)ctrlx
                    withDouble:(jdouble)ctrly
                    withDouble:(jdouble)x2
                    withDouble:(jdouble)y2 {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(self, x1, y1, ctrlx, ctrly, x2, y2);
  return self;
}

- (jdouble)getX1 {
  return x1_;
}

- (jdouble)getY1 {
  return y1_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP1 {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(x1_, y1_) autorelease];
}

- (jdouble)getCtrlX {
  return ctrlx_;
}

- (jdouble)getCtrlY {
  return ctrly_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getCtrlPt {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(ctrlx_, ctrly_) autorelease];
}

- (jdouble)getX2 {
  return x2_;
}

- (jdouble)getY2 {
  return y2_;
}

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getP2 {
  return [new_OrgGeogebraGgbjdkJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(x2_, y2_) autorelease];
}

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2 {
  self->x1_ = x1;
  self->y1_ = y1;
  self->ctrlx_ = ctrlx;
  self->ctrly_ = ctrly;
  self->x2_ = x2;
  self->y2_ = y2;
}

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)getBounds2D {
  jdouble left = JavaLangMath_minWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(x1_, x2_), ctrlx_);
  jdouble top = JavaLangMath_minWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(y1_, y2_), ctrly_);
  jdouble right = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(x1_, x2_), ctrlx_);
  jdouble bottom = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(y1_, y2_), ctrly_);
  return [new_OrgGeogebraGgbjdkJavaAwtGeomRectangle2D_Double_initWithDouble_withDouble_withDouble_withDouble_(left, top, right - left, bottom - top) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Double", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "Double", NULL, 0x1, NULL, NULL },
    { "getX1", NULL, "D", 0x1, NULL, NULL },
    { "getY1", NULL, "D", 0x1, NULL, NULL },
    { "getP1", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x1, NULL, NULL },
    { "getCtrlX", NULL, "D", 0x1, NULL, NULL },
    { "getCtrlY", NULL, "D", 0x1, NULL, NULL },
    { "getCtrlPt", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x1, NULL, NULL },
    { "getX2", NULL, "D", 0x1, NULL, NULL },
    { "getY2", NULL, "D", 0x1, NULL, NULL },
    { "getP2", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Point2D;", 0x1, NULL, NULL },
    { "setCurveWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:", "setCurve", "V", 0x1, NULL, NULL },
    { "getBounds2D", NULL, "Lorg.geogebra.ggbjdk.java.awt.geom.Rectangle2D;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", NULL, 0x1, "D", NULL, NULL,  },
    { "y1_", NULL, 0x1, "D", NULL, NULL,  },
    { "ctrlx_", NULL, 0x1, "D", NULL, NULL,  },
    { "ctrly_", NULL, 0x1, "D", NULL, NULL,  },
    { "x2_", NULL, 0x1, "D", NULL, NULL,  },
    { "y2_", NULL, 0x1, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double = { 2, "Double", "org.geogebra.ggbjdk.java.awt.geom", "QuadCurve2D", 0x9, 13, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double;
}

@end

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_init(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *self) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_init(self);
}

OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_init() {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *self = [OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double alloc];
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_init(self);
  return self;
}

void OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *self, jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_init(self);
  [self setCurveWithDouble:x1 withDouble:y1 withDouble:ctrlx withDouble:ctrly withDouble:x2 withDouble:y2];
}

OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double *self = [OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double alloc];
  OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(self, x1, y1, ctrlx, ctrly, x2, y2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgGeogebraGgbjdkJavaAwtGeomQuadCurve2D_Double)
