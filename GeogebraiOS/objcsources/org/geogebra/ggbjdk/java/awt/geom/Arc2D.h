//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/ggbjdk/java/awt/geom/Arc2D.java
//

#ifndef _OrgGeogebraGgbjdkJavaAwtGeomArc2D_H_
#define _OrgGeogebraGgbjdkJavaAwtGeomArc2D_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/awt/GArc2D.h"
#include "org/geogebra/ggbjdk/java/awt/geom/RectangularShape.h"

@class OrgGeogebraGgbjdkJavaAwtGeomDimension2D;
@class OrgGeogebraGgbjdkJavaAwtGeomPoint2D;
@class OrgGeogebraGgbjdkJavaAwtGeomRectangle2D;
@protocol OrgGeogebraCommonAwtGAffineTransform;
@protocol OrgGeogebraCommonAwtGRectangle2D;
@protocol OrgGeogebraGgbjdkJavaAwtGeomPathIterator;

#define OrgGeogebraGgbjdkJavaAwtGeomArc2D_OPEN 0
#define OrgGeogebraGgbjdkJavaAwtGeomArc2D_CHORD 1
#define OrgGeogebraGgbjdkJavaAwtGeomArc2D_PIE 2

@interface OrgGeogebraGgbjdkJavaAwtGeomArc2D : OrgGeogebraGgbjdkJavaAwtGeomRectangularShape < OrgGeogebraCommonAwtGArc2D >

#pragma mark Public

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)w
                    withDouble:(jdouble)h;

- (jboolean)containsWithOrgGeogebraCommonAwtGRectangle2D:(id<OrgGeogebraCommonAwtGRectangle2D>)r;

- (jboolean)containsWithInt:(jint)x
                    withInt:(jint)y;

- (jboolean)containsAngleWithDouble:(jdouble)angle;

- (jdouble)getAngleExtent;

- (jdouble)getAngleStart;

- (jint)getArcType;

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)getBounds2D;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getEndPoint;

- (id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator>)getPathIteratorWithOrgGeogebraCommonAwtGAffineTransform:(id<OrgGeogebraCommonAwtGAffineTransform>)at;

- (OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)getStartPoint;

- (jboolean)intersectsWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)w
                      withDouble:(jdouble)h;

- (jboolean)intersectsWithInt:(jint)x
                      withInt:(jint)y
                      withInt:(jint)w
                      withInt:(jint)h;

+ (jdouble)remainderWithDouble:(jdouble)a
                    withDouble:(jdouble)b;

- (void)setAngleExtentWithDouble:(jdouble)angExt;

- (void)setAnglesWithDouble:(jdouble)x1
                 withDouble:(jdouble)y1
                 withDouble:(jdouble)x2
                 withDouble:(jdouble)y2;

- (void)setAnglesWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p1
                 withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p2;

- (void)setAngleStartWithDouble:(jdouble)angSt;

- (void)setAngleStartWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p;

- (void)setArcWithOrgGeogebraGgbjdkJavaAwtGeomArc2D:(OrgGeogebraGgbjdkJavaAwtGeomArc2D *)a;

- (void)setArcWithDouble:(jdouble)x
              withDouble:(jdouble)y
              withDouble:(jdouble)w
              withDouble:(jdouble)h
              withDouble:(jdouble)angSt
              withDouble:(jdouble)angExt
                 withInt:(jint)closure;

- (void)setArcWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)loc
          withOrgGeogebraGgbjdkJavaAwtGeomDimension2D:(OrgGeogebraGgbjdkJavaAwtGeomDimension2D *)size
                                           withDouble:(jdouble)angSt
                                           withDouble:(jdouble)angExt
                                              withInt:(jint)closure;

- (void)setArcWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D:(OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)rect
                                               withDouble:(jdouble)angSt
                                               withDouble:(jdouble)angExt
                                                  withInt:(jint)closure;

- (void)setArcByCenterWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)radius
                      withDouble:(jdouble)angSt
                      withDouble:(jdouble)angExt
                         withInt:(jint)closure;

- (void)setArcByTangentWithOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p1
                       withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p2
                       withOrgGeogebraGgbjdkJavaAwtGeomPoint2D:(OrgGeogebraGgbjdkJavaAwtGeomPoint2D *)p3
                                                    withDouble:(jdouble)radius;

- (void)setArcTypeWithInt:(jint)type;

- (void)setFrameWithDouble:(jdouble)x
                withDouble:(jdouble)y
                withDouble:(jdouble)w
                withDouble:(jdouble)h;

#pragma mark Protected

- (instancetype)initWithInt:(jint)type;

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)makeBoundsWithDouble:(jdouble)x
                                                       withDouble:(jdouble)y
                                                       withDouble:(jdouble)w
                                                       withDouble:(jdouble)h;

#pragma mark Package-Private

+ (jdouble)normalizeDegreesWithDouble:(jdouble)angle;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkJavaAwtGeomArc2D)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomArc2D, OPEN, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomArc2D, CHORD, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgGeogebraGgbjdkJavaAwtGeomArc2D, PIE, jint)

FOUNDATION_EXPORT jdouble OrgGeogebraGgbjdkJavaAwtGeomArc2D_remainderWithDouble_withDouble_(jdouble a, jdouble b);

FOUNDATION_EXPORT jdouble OrgGeogebraGgbjdkJavaAwtGeomArc2D_normalizeDegreesWithDouble_(jdouble angle);

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_initWithInt_(OrgGeogebraGgbjdkJavaAwtGeomArc2D *self, jint type);

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkJavaAwtGeomArc2D)

@interface OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double : OrgGeogebraGgbjdkJavaAwtGeomArc2D {
 @public
  jdouble x_;
  jdouble y_;
  jdouble width_;
  jdouble height_;
  jdouble start_;
  jdouble extent_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)w
                    withDouble:(jdouble)h
                    withDouble:(jdouble)start
                    withDouble:(jdouble)extent
                       withInt:(jint)type;

- (instancetype)initWithInt:(jint)type;

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D:(OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)ellipseBounds
                                                     withDouble:(jdouble)start
                                                     withDouble:(jdouble)extent
                                                        withInt:(jint)type;

- (jdouble)getAngleExtent;

- (jdouble)getAngleStart;

- (jdouble)getHeight;

- (jdouble)getWidth;

- (jdouble)getX;

- (jdouble)getY;

- (jboolean)isEmpty;

- (void)setAngleExtentWithDouble:(jdouble)angExt;

- (void)setAngleStartWithDouble:(jdouble)angSt;

- (void)setArcWithDouble:(jdouble)x
              withDouble:(jdouble)y
              withDouble:(jdouble)w
              withDouble:(jdouble)h
              withDouble:(jdouble)angSt
              withDouble:(jdouble)angExt
                 withInt:(jint)closure;

#pragma mark Protected

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)makeBoundsWithDouble:(jdouble)x
                                                       withDouble:(jdouble)y
                                                       withDouble:(jdouble)w
                                                       withDouble:(jdouble)h;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_init(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withInt_(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *self, jdouble x, jdouble y, jdouble w, jdouble h, jdouble start, jdouble extent, jint type);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withInt_(jdouble x, jdouble y, jdouble w, jdouble h, jdouble start, jdouble extent, jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_initWithInt_(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *self, jint type);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_initWithInt_(jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_initWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_withDouble_withDouble_withInt_(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *self, OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *ellipseBounds, jdouble start, jdouble extent, jint type);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double_initWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_withDouble_withDouble_withInt_(OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *ellipseBounds, jdouble start, jdouble extent, jint type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Double)

@interface OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float : OrgGeogebraGgbjdkJavaAwtGeomArc2D {
 @public
  jfloat x_;
  jfloat y_;
  jfloat width_;
  jfloat height_;
  jfloat start_;
  jfloat extent_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithFloat:(jfloat)x
                    withFloat:(jfloat)y
                    withFloat:(jfloat)w
                    withFloat:(jfloat)h
                    withFloat:(jfloat)start
                    withFloat:(jfloat)extent
                      withInt:(jint)type;

- (instancetype)initWithInt:(jint)type;

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D:(OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)ellipseBounds
                                                      withFloat:(jfloat)start
                                                      withFloat:(jfloat)extent
                                                        withInt:(jint)type;

- (jdouble)getAngleExtent;

- (jdouble)getAngleStart;

- (jdouble)getHeight;

- (jdouble)getWidth;

- (jdouble)getX;

- (jdouble)getY;

- (jboolean)isEmpty;

- (void)setAngleExtentWithDouble:(jdouble)angExt;

- (void)setAngleStartWithDouble:(jdouble)angSt;

- (void)setArcWithDouble:(jdouble)x
              withDouble:(jdouble)y
              withDouble:(jdouble)w
              withDouble:(jdouble)h
              withDouble:(jdouble)angSt
              withDouble:(jdouble)angExt
                 withInt:(jint)closure;

#pragma mark Protected

- (OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *)makeBoundsWithDouble:(jdouble)x
                                                       withDouble:(jdouble)y
                                                       withDouble:(jdouble)w
                                                       withDouble:(jdouble)h;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float)

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_init(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *self);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withInt_(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *self, jfloat x, jfloat y, jfloat w, jfloat h, jfloat start, jfloat extent, jint type);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withInt_(jfloat x, jfloat y, jfloat w, jfloat h, jfloat start, jfloat extent, jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_initWithInt_(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *self, jint type);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_initWithInt_(jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_initWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_withFloat_withFloat_withInt_(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *self, OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *ellipseBounds, jfloat start, jfloat extent, jint type);

FOUNDATION_EXPORT OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float *new_OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float_initWithOrgGeogebraGgbjdkJavaAwtGeomRectangle2D_withFloat_withFloat_withInt_(OrgGeogebraGgbjdkJavaAwtGeomRectangle2D *ellipseBounds, jfloat start, jfloat extent, jint type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgGeogebraGgbjdkJavaAwtGeomArc2D_Float)

#endif // _OrgGeogebraGgbjdkJavaAwtGeomArc2D_H_
