//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/GeoGebraiOSARC/GeoGebraiOSARC/javasources/org/geogebra/iOS/awt/GPathIteratorI.java
//

#ifndef _GPathIteratorI_H_
#define _GPathIteratorI_H_

#include "J2ObjC_header.h"
#include "org/geogebra/common/awt/GPathIterator.h"

@class IOSDoubleArray;
@class IOSFloatArray;
@protocol OrgGeogebraGgbjdkJavaAwtGeomPathIterator;

@interface GPathIteratorI : NSObject < OrgGeogebraCommonAwtGPathIterator > {
 @public
  id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator> impl_;
}

#pragma mark Public

- (instancetype)initWithOrgGeogebraGgbjdkJavaAwtGeomPathIterator:(id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator>)pathIterator;

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

@end

J2OBJC_EMPTY_STATIC_INIT(GPathIteratorI)

J2OBJC_FIELD_SETTER(GPathIteratorI, impl_, id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator>)

FOUNDATION_EXPORT void GPathIteratorI_initWithOrgGeogebraGgbjdkJavaAwtGeomPathIterator_(GPathIteratorI *self, id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator> pathIterator);

FOUNDATION_EXPORT GPathIteratorI *new_GPathIteratorI_initWithOrgGeogebraGgbjdkJavaAwtGeomPathIterator_(id<OrgGeogebraGgbjdkJavaAwtGeomPathIterator> pathIterator) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GPathIteratorI)

typedef GPathIteratorI OrgGeogebraIOSAwtGPathIteratorI;

#endif // _GPathIteratorI_H_
