//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAngleNumeric.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoAngleNumeric.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoAngle.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"

@interface GeogebraCommonKernelAlgosAlgoAngleNumeric () {
 @public
  GeogebraCommonKernelGeosGeoNumeric *num_;
  GeogebraCommonKernelGeosGeoAngle *angle_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleNumeric, num_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleNumeric, angle_, GeogebraCommonKernelGeosGeoAngle *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoAngleNumeric_compute(GeogebraCommonKernelAlgosAlgoAngleNumeric *self);

@implementation GeogebraCommonKernelAlgosAlgoAngleNumeric

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)num {
  GeogebraCommonKernelAlgosAlgoAngleNumeric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, num);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Angle();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, num_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:angle_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoAngle *)getAngle {
  return angle_;
}

- (GeogebraCommonKernelGeosGeoNumeric *)getNumber {
  return num_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoAngleNumeric_compute(self);
}

- (void)dealloc {
  RELEASE_(num_);
  RELEASE_(angle_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoAngleNumeric", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getAngle", NULL, "Lgeogebra.common.kernel.geos.GeoAngle;", 0x1, NULL, NULL },
    { "getNumber", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "num_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "angle_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoAngle;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoAngleNumeric = { 2, "AlgoAngleNumeric", "geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoAngleNumeric;
}

@end

void GeogebraCommonKernelAlgosAlgoAngleNumeric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelAlgosAlgoAngleNumeric *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoNumeric *num) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoAngleNumeric_set_num_(self, num);
  GeogebraCommonKernelAlgosAlgoAngleNumeric_setAndConsume_angle_(self, new_GeogebraCommonKernelGeosGeoAngle_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoAngleNumeric_compute(self);
  [self->angle_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoAngleNumeric *new_GeogebraCommonKernelAlgosAlgoAngleNumeric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoNumeric *num) {
  GeogebraCommonKernelAlgosAlgoAngleNumeric *self = [GeogebraCommonKernelAlgosAlgoAngleNumeric alloc];
  GeogebraCommonKernelAlgosAlgoAngleNumeric_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, num);
  return self;
}

void GeogebraCommonKernelAlgosAlgoAngleNumeric_compute(GeogebraCommonKernelAlgosAlgoAngleNumeric *self) {
  [((GeogebraCommonKernelGeosGeoAngle *) nil_chk(self->angle_)) setValueWithDouble:((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->num_))->value_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoAngleNumeric)
