//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/TraceModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/BooleanOptionModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/TraceModel.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/Traceable.h"

#define GeogebraCommonGuiDialogOptionsModelTraceModel_serialVersionUID 1LL

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGuiDialogOptionsModelTraceModel, serialVersionUID, jlong)

@implementation GeogebraCommonGuiDialogOptionsModelTraceModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener>)listener {
  GeogebraCommonGuiDialogOptionsModelTraceModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  return self;
}

- (id<GeogebraCommonKernelGeosTraceable>)getTraceableAtWithInt:(jint)index {
  return (id<GeogebraCommonKernelGeosTraceable>) check_protocol_cast([self getGeoAtWithInt:index], @protocol(GeogebraCommonKernelGeosTraceable));
}

- (jboolean)isValidAtWithInt:(jint)index {
  return ([GeogebraCommonKernelGeosTraceable_class_() isInstance:[self getGeoAtWithInt:index]]);
}

- (jboolean)getValueAtWithInt:(jint)index {
  return [((id<GeogebraCommonKernelGeosTraceable>) nil_chk([self getTraceableAtWithInt:index])) getTrace];
}

- (void)applyWithInt:(jint)index
         withBoolean:(jboolean)value {
  id<GeogebraCommonKernelGeosTraceable> geo = [self getTraceableAtWithInt:index];
  [((id<GeogebraCommonKernelGeosTraceable>) nil_chk(geo)) setTraceWithBoolean:value];
  [geo updateRepaint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:", "TraceModel", NULL, 0x1, NULL, NULL },
    { "getTraceableAtWithInt:", "getTraceableAt", "Lgeogebra.common.kernel.geos.Traceable;", 0x4, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withBoolean:", "apply", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonGuiDialogOptionsModelTraceModel_serialVersionUID },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelTraceModel = { 2, "TraceModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelTraceModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelTraceModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(GeogebraCommonGuiDialogOptionsModelTraceModel *self, id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
}

GeogebraCommonGuiDialogOptionsModelTraceModel *new_GeogebraCommonGuiDialogOptionsModelTraceModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelTraceModel *self = [GeogebraCommonGuiDialogOptionsModelTraceModel alloc];
  GeogebraCommonGuiDialogOptionsModelTraceModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelTraceModel)
