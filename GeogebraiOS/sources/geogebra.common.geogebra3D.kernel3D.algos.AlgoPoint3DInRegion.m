//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoPoint3DInRegion.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoPoint3DInRegion.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/Region.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/Localization.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion () {
 @public
  id<GeogebraCommonKernelRegion> region_;
  GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *P_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion, region_, id<GeogebraCommonKernelRegion>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion, P_, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                          withGeogebraCommonKernelRegion:(id<GeogebraCommonKernelRegion>)region
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(self, cons, region, coords);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                          withGeogebraCommonKernelRegion:(id<GeogebraCommonKernelRegion>)region
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(self, cons, label, region, coords);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_PointIn();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<GeogebraCommonKernelRegion>) nil_chk(region_)) toGeoElement]);
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:P_];
  [self setDependencies];
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)getP {
  return P_;
}

- (id<GeogebraCommonKernelRegion>)getRegion {
  return region_;
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"PointInA" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(input_), 0))) getLabelWithGeogebraCommonKernelStringTemplate:tpl]]];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(region_);
  RELEASE_(P_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelRegion:withGeogebraCommonKernelMatrixCoords:", "AlgoPoint3DInRegion", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelRegion:withGeogebraCommonKernelMatrixCoords:", "AlgoPoint3DInRegion", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getP", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x1, NULL, NULL },
    { "getRegion", NULL, "Lgeogebra.common.kernel.Region;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "region_", NULL, 0x2, "Lgeogebra.common.kernel.Region;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion = { 2, "AlgoPoint3DInRegion", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelRegion> region, GeogebraCommonKernelMatrixCoords *coords) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_set_region_(self, region);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_setAndConsume_P_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(cons, region));
  [self setInputOutput];
  if (coords != nil) {
    [self->P_ setCoordsWithGeogebraCommonKernelMatrixCoords:coords];
  }
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_compute(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelRegion> region, GeogebraCommonKernelMatrixCoords *coords) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(self, cons, region, coords);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelRegion> region, GeogebraCommonKernelMatrixCoords *coords) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(self, cons, region, coords);
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(self->P_)) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelRegion> region, GeogebraCommonKernelMatrixCoords *coords) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelRegion_withGeogebraCommonKernelMatrixCoords_(self, cons, label, region, coords);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion *self) {
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(self->input_), 0))) isDefined]) {
    [((id<GeogebraCommonKernelRegion>) nil_chk(self->region_)) regionChangedWithGeogebraCommonKernelKernelNDGeoPointND:self->P_];
  }
  else {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(self->P_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPoint3DInRegion)
