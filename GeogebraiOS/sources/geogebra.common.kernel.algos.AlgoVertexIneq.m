//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoVertexIneq.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/EquationSolver.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoIntersectConics.h"
#include "geogebra/common/kernel/algos/AlgoIntersectFunctionLineNewton.h"
#include "geogebra/common/kernel/algos/AlgoIntersectFunctionsNewton.h"
#include "geogebra/common/kernel/algos/AlgoIntersectLineConic.h"
#include "geogebra/common/kernel/algos/AlgoIntersectPolynomialConic.h"
#include "geogebra/common/kernel/algos/AlgoIntersectPolynomialLine.h"
#include "geogebra/common/kernel/algos/AlgoIntersectPolynomials.h"
#include "geogebra/common/kernel/algos/AlgoVertexIneq.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/Function.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/IneqTree.h"
#include "geogebra/common/kernel/arithmetic/Inequality.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoFunctionNVar.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/App.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface GeogebraCommonKernelAlgosAlgoVertexIneq () {
 @public
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPoints_;
  GeogebraCommonKernelGeosGeoFunctionNVar *p_;
  id<JavaUtilList> vertices_;
  IOSObjectArray *helpers_;
  jint validVertices_;
  GeogebraCommonKernelGeosGeoLine *helperLine_;
  GeogebraCommonKernelGeosGeoFunction *helperFunction_;
  IOSDoubleArray *co_;
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels;

- (void)typeSwitchWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                       withInt:(jint)ai
                                                       withInt:(jint)bi;

- (void)intParamOneVarWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                      withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                           withInt:(jint)i
                                                           withInt:(jint)j
                                                       withBoolean:(jboolean)transpose;

- (void)intParamYXWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)intParamYLinearWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                            withInt:(jint)i
                                                            withInt:(jint)j;

- (void)intParamParamWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                     withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                          withInt:(jint)i
                                                          withInt:(jint)j
                                                      withBoolean:(jboolean)transpose;

- (void)intParamXYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)intParamConicWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                     withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                          withInt:(jint)i
                                                          withInt:(jint)j
                                                      withBoolean:(jboolean)transpose;

- (void)intParamXLinearWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                            withInt:(jint)i
                                                            withInt:(jint)j;

- (void)intParamXParamYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                            withInt:(jint)i
                                                            withInt:(jint)j;

- (void)intXYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
             withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)intConicYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                 withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)intConicXWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                 withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)intConicConicWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                     withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                          withInt:(jint)i
                                                          withInt:(jint)j;

- (void)intLinearYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)intLinearXWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)intLinearConicWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                      withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                           withInt:(jint)i
                                                           withInt:(jint)j;

- (void)setHelperWithInt:(jint)i
                 withInt:(jint)j
withGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algo;

- (void)addVerticesWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algoElement
                                                withBoolean:(jboolean)transpose
                                                withBoolean:(jboolean)copy_;

- (void)addVerticesWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algoElement
                                                withBoolean:(jboolean)transpose;

- (void)intLinearLinearWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b;

- (void)initHelpers OBJC_METHOD_FAMILY_NONE;

- (void)ensurePoint;

- (GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPoints;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq, outputPoints_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq, p_, GeogebraCommonKernelGeosGeoFunctionNVar *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq, vertices_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq, helpers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq, helperLine_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq, helperFunction_, GeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq, co_, IOSDoubleArray *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_setLabelsWithNSStringArray_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, IOSObjectArray *labels);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_typeSwitchWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint ai, jint bi);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamOneVarWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j, jboolean transpose);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamParamWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j, jboolean transpose);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j, jboolean transpose);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXParamYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intConicYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intConicXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intConicConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, jint i, jint j, GeogebraCommonKernelAlgosAlgoElement *algo);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelAlgosAlgoElement *algoElement, jboolean transpose, jboolean copy_);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelAlgosAlgoElement *algoElement, jboolean transpose);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(GeogebraCommonKernelAlgosAlgoVertexIneq *self);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(GeogebraCommonKernelAlgosAlgoVertexIneq *self);

__attribute__((unused)) static GeogebraCommonKernelAlgosAlgoElement_OutputHandler *GeogebraCommonKernelAlgosAlgoVertexIneq_createOutputPoints(GeogebraCommonKernelAlgosAlgoVertexIneq *self);

@interface GeogebraCommonKernelAlgosAlgoVertexIneq_$1 : NSObject < GeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  GeogebraCommonKernelAlgosAlgoVertexIneq *this$0_;
}

- (GeogebraCommonKernelGeosGeoPoint *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoVertexIneq:(GeogebraCommonKernelAlgosAlgoVertexIneq *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoVertexIneq_$1)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexIneq_$1, this$0_, GeogebraCommonKernelAlgosAlgoVertexIneq *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexIneq_$1_initWithGeogebraCommonKernelAlgosAlgoVertexIneq_(GeogebraCommonKernelAlgosAlgoVertexIneq_$1 *self, GeogebraCommonKernelAlgosAlgoVertexIneq *outer$);

__attribute__((unused)) static GeogebraCommonKernelAlgosAlgoVertexIneq_$1 *new_GeogebraCommonKernelAlgosAlgoVertexIneq_$1_initWithGeogebraCommonKernelAlgosAlgoVertexIneq_(GeogebraCommonKernelAlgosAlgoVertexIneq *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoVertexIneq_$1)

@implementation GeogebraCommonKernelAlgosAlgoVertexIneq

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
             withGeogebraCommonKernelGeosGeoFunctionNVar:(GeogebraCommonKernelGeosGeoFunctionNVar *)p {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, p);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
             withGeogebraCommonKernelGeosGeoFunctionNVar:(GeogebraCommonKernelGeosGeoFunctionNVar *)p {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, labels, p);
  return self;
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels {
  GeogebraCommonKernelAlgosAlgoVertexIneq_setLabelsWithNSStringArray_(self, labels);
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithObjects:(id[]){ p_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  [self setDependencies];
}

- (void)compute {
  validVertices_ = 0;
  GeogebraCommonKernelArithmeticIneqTree *ineqs = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(p_)) getIneqs];
  jint size = [((GeogebraCommonKernelArithmeticIneqTree *) nil_chk(ineqs)) getSize];
  jint ai, bi;
  for (jint i = 0; i < size; i++) {
    for (jint j = i + 1; j < size; j++) {
      GeogebraCommonKernelArithmeticInequality *a, *b;
      if ([((GeogebraCommonKernelArithmeticInequality_IneqTypeEnum *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk([ineqs getWithInt:i])) getType])) ordinal] < [((GeogebraCommonKernelArithmeticInequality_IneqTypeEnum *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk([ineqs getWithInt:j])) getType])) ordinal]) {
        ai = i;
        bi = j;
      }
      else {
        ai = j;
        bi = i;
      }
      a = [ineqs getWithInt:ai];
      b = [ineqs getWithInt:bi];
      GeogebraCommonKernelAlgosAlgoVertexIneq_typeSwitchWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, ai, bi);
    }
  }
  [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) adjustOutputSizeWithInt:validVertices_ > 0 ? validVertices_ : 1];
  for (jint i = 0; i < validVertices_; i++) {
    id<GeogebraCommonKernelKernelNDGeoPointND> point = (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([outputPoints_ getElementWithInt:i], @protocol(GeogebraCommonKernelKernelNDGeoPointND));
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) setWithGeogebraCommonKernelKernelNDGeoPointND:[((id<JavaUtilList>) nil_chk(vertices_)) getWithInt:i]];
  }
  for (jint i = validVertices_; i < [outputPoints_ size]; i++) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk([outputPoints_ getElementWithInt:i])) setUndefined];
  }
}

- (void)typeSwitchWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                       withInt:(jint)ai
                                                       withInt:(jint)bi {
  GeogebraCommonKernelAlgosAlgoVertexIneq_typeSwitchWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, ai, bi);
}

- (void)intParamOneVarWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                      withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                           withInt:(jint)i
                                                           withInt:(jint)j
                                                       withBoolean:(jboolean)transpose {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamOneVarWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, i, j, transpose);
}

- (void)intParamYXWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)intParamYLinearWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                            withInt:(jint)i
                                                            withInt:(jint)j {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, i, j);
}

- (void)intParamParamWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                     withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                          withInt:(jint)i
                                                          withInt:(jint)j
                                                      withBoolean:(jboolean)transpose {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamParamWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, i, j, transpose);
}

- (void)intParamXYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)intParamConicWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                     withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                          withInt:(jint)i
                                                          withInt:(jint)j
                                                      withBoolean:(jboolean)transpose {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, i, j, transpose);
}

- (void)intParamXLinearWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                            withInt:(jint)i
                                                            withInt:(jint)j {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, i, j);
}

- (void)intParamXParamYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                            withInt:(jint)i
                                                            withInt:(jint)j {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXParamYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, i, j);
}

- (void)intXYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
             withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)intConicYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                 withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intConicYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)intConicXWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                 withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intConicXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)intConicConicWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                     withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                          withInt:(jint)i
                                                          withInt:(jint)j {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intConicConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, i, j);
}

- (void)intLinearYWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)intLinearXWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                  withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)intLinearConicWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                      withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b
                                                           withInt:(jint)i
                                                           withInt:(jint)j {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, i, j);
}

- (void)setHelperWithInt:(jint)i
                 withInt:(jint)j
withGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algo {
  GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, algo);
}

- (void)addVerticesWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algoElement
                                                withBoolean:(jboolean)transpose
                                                withBoolean:(jboolean)copy_ {
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_withBoolean_(self, algoElement, transpose, copy_);
}

- (void)addVerticesWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algoElement
                                                withBoolean:(jboolean)transpose {
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(self, algoElement, transpose);
}

- (void)intLinearLinearWithGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)a
                       withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)b {
  GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
}

- (void)initHelpers {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
}

- (void)ensurePoint {
  GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Vertex();
}

- (IOSObjectArray *)getVertex {
  return [self getOutput];
}

- (GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPoints {
  return GeogebraCommonKernelAlgosAlgoVertexIneq_createOutputPoints(self);
}

- (void)dealloc {
  RELEASE_(outputPoints_);
  RELEASE_(p_);
  RELEASE_(vertices_);
  RELEASE_(helpers_);
  RELEASE_(helperLine_);
  RELEASE_(helperFunction_);
  RELEASE_(co_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoFunctionNVar:", "AlgoVertexIneq", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoFunctionNVar:", "AlgoVertexIneq", NULL, 0x1, NULL, NULL },
    { "setLabelsWithNSStringArray:", "setLabels", "V", 0x2, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "typeSwitchWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:", "typeSwitch", "V", 0x2, NULL, NULL },
    { "intParamOneVarWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:withBoolean:", "intParamOneVar", "V", 0x2, NULL, NULL },
    { "intParamYXWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intParamYX", "V", 0x2, NULL, NULL },
    { "intParamYLinearWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:", "intParamYLinear", "V", 0x2, NULL, NULL },
    { "intParamParamWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:withBoolean:", "intParamParam", "V", 0x2, NULL, NULL },
    { "intParamXYWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intParamXY", "V", 0x2, NULL, NULL },
    { "intParamConicWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:withBoolean:", "intParamConic", "V", 0x2, NULL, NULL },
    { "intParamXLinearWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:", "intParamXLinear", "V", 0x2, NULL, NULL },
    { "intParamXParamYWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:", "intParamXParamY", "V", 0x2, NULL, NULL },
    { "intXYWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intXY", "V", 0x2, NULL, NULL },
    { "intConicYWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intConicY", "V", 0x2, NULL, NULL },
    { "intConicXWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intConicX", "V", 0x2, NULL, NULL },
    { "intConicConicWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:", "intConicConic", "V", 0x2, NULL, NULL },
    { "intLinearYWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intLinearY", "V", 0x2, NULL, NULL },
    { "intLinearXWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intLinearX", "V", 0x2, NULL, NULL },
    { "intLinearConicWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:withInt:withInt:", "intLinearConic", "V", 0x2, NULL, NULL },
    { "setHelperWithInt:withInt:withGeogebraCommonKernelAlgosAlgoElement:", "setHelper", "V", 0x2, NULL, NULL },
    { "addVerticesWithGeogebraCommonKernelAlgosAlgoElement:withBoolean:withBoolean:", "addVertices", "V", 0x2, NULL, NULL },
    { "addVerticesWithGeogebraCommonKernelAlgosAlgoElement:withBoolean:", "addVertices", "V", 0x2, NULL, NULL },
    { "intLinearLinearWithGeogebraCommonKernelArithmeticInequality:withGeogebraCommonKernelArithmeticInequality:", "intLinearLinear", "V", 0x2, NULL, NULL },
    { "initHelpers", NULL, "V", 0x2, NULL, NULL },
    { "ensurePoint", NULL, "V", 0x2, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getVertex", NULL, "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "createOutputPoints", NULL, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "outputPoints_", NULL, 0x2, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lgeogebra/common/kernel/algos/AlgoElement$OutputHandler<Lgeogebra/common/kernel/geos/GeoElement;>;",  },
    { "p_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "vertices_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lgeogebra/common/kernel/geos/GeoPoint;>;",  },
    { "helpers_", NULL, 0x2, "[[Lgeogebra.common.kernel.algos.AlgoElement;", NULL, NULL,  },
    { "validVertices_", NULL, 0x2, "I", NULL, NULL,  },
    { "helperLine_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "helperFunction_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "co_", NULL, 0x2, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoVertexIneq = { 2, "AlgoVertexIneq", "geogebra.common.kernel.algos", NULL, 0x1, 30, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoVertexIneq;
}

@end

void GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunctionNVar *p) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoVertexIneq_setAndConsume_co_(self, [IOSDoubleArray newArrayWithLength:3]);
  GeogebraCommonKernelAlgosAlgoVertexIneq_set_p_(self, p);
  GeogebraCommonKernelAlgosAlgoVertexIneq_setAndConsume_vertices_(self, new_JavaUtilArrayList_init());
  GeogebraCommonKernelAlgosAlgoVertexIneq_setAndConsume_helperLine_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAlgosAlgoVertexIneq_set_outputPoints_(self, GeogebraCommonKernelAlgosAlgoVertexIneq_createOutputPoints(self));
  [self setInputOutput];
  [self compute];
}

GeogebraCommonKernelAlgosAlgoVertexIneq *new_GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunctionNVar *p) {
  GeogebraCommonKernelAlgosAlgoVertexIneq *self = [GeogebraCommonKernelAlgosAlgoVertexIneq alloc];
  GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, p);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoFunctionNVar *p) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, p);
  GeogebraCommonKernelAlgosAlgoVertexIneq_setLabelsWithNSStringArray_(self, labels);
  [self update];
}

GeogebraCommonKernelAlgosAlgoVertexIneq *new_GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoFunctionNVar_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoFunctionNVar *p) {
  GeogebraCommonKernelAlgosAlgoVertexIneq *self = [GeogebraCommonKernelAlgosAlgoVertexIneq alloc];
  GeogebraCommonKernelAlgosAlgoVertexIneq_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoFunctionNVar_(self, cons, labels, p);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_setLabelsWithNSStringArray_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, IOSObjectArray *labels) {
  if (labels != nil && labels->size_ == 1 && IOSObjectArray_Get(labels, 0) != nil && ![((NSString *) nil_chk(IOSObjectArray_Get(labels, 0))) isEqual:@""]) {
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) setIndexLabelsWithNSString:IOSObjectArray_Get(labels, 0)];
  }
  else {
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) setLabelsWithNSStringArray:labels];
    [self->outputPoints_ setIndexLabelsWithNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:0])) getLabelWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()]];
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_typeSwitchWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint ai, jint bi) {
  switch ([[((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getType] ordinal]) {
    case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_PARAMETRIC_X:
    switch ([[((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getType] ordinal]) {
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_PARAMETRIC_X:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamParamWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, ai, bi, YES);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_PARAMETRIC_Y:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXParamYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, ai, bi);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_LINEAR:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, ai, bi);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_CONIC:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, ai, bi, YES);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_X:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamOneVarWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, ai, bi, YES);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_Y:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
    }
    break;
    case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_PARAMETRIC_Y:
    switch ([[((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getType] ordinal]) {
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_PARAMETRIC_Y:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamParamWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, ai, bi, NO);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_LINEAR:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, ai, bi);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_CONIC:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, ai, bi, NO);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_X:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_Y:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intParamOneVarWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(self, a, b, ai, bi, NO);
    }
    break;
    case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_LINEAR:
    switch ([[((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getType] ordinal]) {
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_LINEAR:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_CONIC:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, ai, bi);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_X:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_Y:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
    }
    break;
    case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_CONIC:
    switch ([[((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getType] ordinal]) {
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_CONIC:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intConicConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(self, a, b, ai, bi);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_X:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intConicXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_Y:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intConicYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
    }
    break;
    case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_X:
    switch ([[((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getType] ordinal]) {
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_X:
      break;
      case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_Y:
      GeogebraCommonKernelAlgosAlgoVertexIneq_intXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(self, a, b);
      break;
    }
    break;
    case GeogebraCommonKernelArithmeticInequality_IneqType_INEQUALITY_1VAR_Y:
    break;
    default:
    GeogebraCommonMainApp_debugWithNSString_(JreStrcat("$@", @"Missing case", [a getType]));
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamOneVarWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j, jboolean transpose) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) {
    if ([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder])) isPolynomialFunctionWithBoolean:NO]) {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [((GeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getAlgoDispatcher])) getIntersectionAlgorithmWithGeogebraCommonKernelGeosGeoFunction:[a getFunBorder] withGeogebraCommonKernelGeosGeoLine:self->helperLine_]);
    }
    else {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectFunctionLineNewton_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoPoint_(self->cons_, [a getFunBorder], self->helperLine_, [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(self->cons_) autorelease]) autorelease]);
    }
  }
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  {
    IOSObjectArray *a__ = bz;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
      [((GeogebraCommonKernelGeosGeoLine *) nil_chk(self->helperLine_)) setCoordsWithDouble:0 withDouble:1 withDouble:-[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX]];
      [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
      GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_withBoolean_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j), transpose, YES);
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  GeogebraCommonMainApp_debugWithNSString_([((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(nil_chk([((JavaLangThrowable *) [new_JavaLangThrowable_init() autorelease]) getStackTrace]), 0))) getMethodName]);
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  GeogebraCommonKernelGeosGeoFunction *af = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder];
  {
    IOSObjectArray *a__ = bz;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
      GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
      [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_])) setCoordsWithDouble:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX] withDouble:[((GeogebraCommonKernelGeosGeoFunction *) nil_chk(af)) evaluateWithDouble:[bp getX]] withDouble:1];
      self->validVertices_++;
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamYLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) {
    if ([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder])) isPolynomialFunctionWithBoolean:NO]) {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [((GeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getAlgoDispatcher])) getIntersectionAlgorithmWithGeogebraCommonKernelGeosGeoFunction:[a getFunBorder] withGeogebraCommonKernelGeosGeoLine:[((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getLineBorder]]);
    }
    else {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectFunctionLineNewton_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoPoint_(self->cons_, [a getFunBorder], [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getLineBorder], [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(self->cons_) autorelease]) autorelease]);
    }
  }
  else [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j), NO);
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamParamWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j, jboolean transpose) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) {
    if ([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder])) isPolynomialFunctionWithBoolean:NO]) {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectPolynomials_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoFunction_(self->cons_, [a getFunBorder], [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getFunBorder]) autorelease]);
    }
    else {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectFunctionsNewton_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoPoint_(self->cons_, [a getFunBorder], [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getFunBorder], [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(self->cons_) autorelease]) autorelease]);
    }
  }
  else [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j), transpose);
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  GeogebraCommonKernelGeosGeoFunction *af = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder];
  {
    IOSObjectArray *a__ = bz;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
      GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
      [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_])) setCoordsWithDouble:[((GeogebraCommonKernelGeosGeoFunction *) nil_chk(af)) evaluateWithDouble:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX]] withDouble:[bp getX] withDouble:1];
      self->validVertices_++;
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j, jboolean transpose) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  IOSDoubleArray *mat = [((GeogebraCommonKernelGeosGeoConic *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getConicBorder])) getMatrix];
  if (transpose) [((GeogebraCommonKernelGeosGeoConic *) nil_chk([b getConicBorder])) setMatrixWithDoubleArray:[IOSDoubleArray arrayWithDoubles:(jdouble[]){ IOSDoubleArray_Get(nil_chk(mat), 1), IOSDoubleArray_Get(mat, 0), IOSDoubleArray_Get(mat, 2), IOSDoubleArray_Get(mat, 3), IOSDoubleArray_Get(mat, 5), IOSDoubleArray_Get(mat, 4) } count:6]];
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) {
    if ([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder])) isPolynomialFunctionWithBoolean:NO]) {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoConic_(self->cons_, [a getFunBorder], [b getConicBorder]) autorelease]);
    }
    else {
    }
  }
  else {
    [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
  }
  if (transpose) [((GeogebraCommonKernelGeosGeoConic *) nil_chk([b getConicBorder])) setMatrixWithDoubleArray:mat];
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j) != nil) {
    GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j), transpose);
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j) {
  GeogebraCommonMainApp_debugWithNSString_([((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(nil_chk([((JavaLangThrowable *) [new_JavaLangThrowable_init() autorelease]) getStackTrace]), 0))) getMethodName]);
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  GeogebraCommonKernelGeosGeoLine *bl = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getLineBorder];
  jdouble x = [((GeogebraCommonKernelGeosGeoLine *) nil_chk(bl)) getX];
  jdouble y = [bl getY];
  [bl setCoordsWithDouble:y withDouble:x withDouble:[bl getZ]];
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) {
    if ([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder])) isPolynomialFunctionWithBoolean:NO]) {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [((GeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getAlgoDispatcher])) getIntersectionAlgorithmWithGeogebraCommonKernelGeosGeoFunction:[a getFunBorder] withGeogebraCommonKernelGeosGeoLine:[b getLineBorder]]);
    }
    else {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectFunctionLineNewton_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoPoint_(self->cons_, [a getFunBorder], [b getLineBorder], [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(self->cons_) autorelease]) autorelease]);
    }
  }
  else [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
  [bl setCoordsWithDouble:x withDouble:y withDouble:[bl getZ]];
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j), YES);
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intParamXParamYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  GeogebraCommonKernelArithmeticExpressionNode *exp = [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getFunBorder])) getFunctionExpression])) getCopyWithGeogebraCommonKernelKernel:self->kernel_])) wrap];
  GeogebraCommonKernelArithmeticFunctionVariable *aVar = [((GeogebraCommonKernelArithmeticFunction *) nil_chk([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([a getFunBorder])) getFunction])) getFunctionVariable];
  exp = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(exp)) replaceWithGeogebraCommonKernelArithmeticExpressionValue:aVar withGeogebraCommonKernelArithmeticExpressionValue:[((GeogebraCommonKernelGeosGeoFunction *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getFunBorder])) getFunctionExpression]])) wrap];
  if (self->helperFunction_ == nil) GeogebraCommonKernelAlgosAlgoVertexIneq_setAndConsume_helperFunction_(self, new_GeogebraCommonKernelGeosGeoFunction_initWithGeogebraCommonKernelConstruction_(self->cons_));
  [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(self->helperFunction_)) setFunctionWithGeogebraCommonKernelArithmeticFunction:[new_GeogebraCommonKernelArithmeticFunction_initWithGeogebraCommonKernelArithmeticExpressionNode_withGeogebraCommonKernelArithmeticFunctionVariable_(exp, [((GeogebraCommonKernelArithmeticFunction *) nil_chk([((GeogebraCommonKernelGeosGeoFunction *) nil_chk([b getFunBorder])) getFunction])) getFunctionVariable]) autorelease]];
  [((GeogebraCommonKernelGeosGeoLine *) nil_chk(self->helperLine_)) setCoordsWithDouble:1 withDouble:-1 withDouble:0];
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) {
    if ([self->helperFunction_ isPolynomialFunctionWithBoolean:NO]) {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [((GeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getAlgoDispatcher])) getIntersectionAlgorithmWithGeogebraCommonKernelGeosGeoFunction:self->helperFunction_ withGeogebraCommonKernelGeosGeoLine:self->helperLine_]);
    }
    else {
      GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectFunctionLineNewton_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoPoint_(self->cons_, self->helperFunction_, self->helperLine_, [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(self->cons_) autorelease]) autorelease]);
    }
  }
  else [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
  IOSObjectArray *output = [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) getOutput];
  for (jint k = 0; k < ((IOSObjectArray *) nil_chk(output))->size_; k++) {
    GeogebraCommonKernelGeosGeoPoint *pt = (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(output, k), [GeogebraCommonKernelGeosGeoPoint class]);
    jdouble x = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(pt)) getX] / [pt getZ];
    [pt setCoordsWithDouble:x withDouble:[((GeogebraCommonKernelGeosGeoFunction *) nil_chk([b getFunBorder])) evaluateWithDouble:x] withDouble:1];
    if ([((id<JavaUtilList>) nil_chk(self->vertices_)) size] <= self->validVertices_) [self->vertices_ addWithId:pt];
    else [self->vertices_ setWithInt:self->validVertices_ withId:pt];
    self->validVertices_++;
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intXYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  IOSObjectArray *az = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getZeros];
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  {
    IOSObjectArray *a__ = az;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *ap = *b__++;
      {
        IOSObjectArray *a__ = bz;
        GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
          GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
          [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_])) setCoordsWithDouble:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(ap)) getX] withDouble:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX] withDouble:1];
          self->validVertices_++;
          GeogebraCommonMainApp_debugWithNSString_(JreStrcat("@C@", ap, ',', bp));
        }
      }
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intConicYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  IOSDoubleArray *coef = [((GeogebraCommonKernelGeosGeoConic *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getConicBorder])) getMatrix];
  {
    IOSObjectArray *a__ = bz;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
      *IOSDoubleArray_GetRef(nil_chk(self->co_), 2) = IOSDoubleArray_Get(nil_chk(coef), 0);
      *IOSDoubleArray_GetRef(self->co_, 1) = 2 * IOSDoubleArray_Get(coef, 3) * [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX] + 2 * IOSDoubleArray_Get(coef, 4);
      *IOSDoubleArray_GetRef(self->co_, 0) = IOSDoubleArray_Get(coef, 1) * [bp getX] * [bp getX] + 2 * IOSDoubleArray_Get(coef, 5) * [bp getX] + IOSDoubleArray_Get(coef, 2);
      GeogebraCommonMainApp_debugWithNSString_(JreStrcat("DCDCD", IOSDoubleArray_Get(self->co_, 0), ',', IOSDoubleArray_Get(self->co_, 1), ',', IOSDoubleArray_Get(self->co_, 2)));
      jint n = [((GeogebraCommonKernelEquationSolver *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getEquationSolver])) solveQuadraticWithDoubleArray:self->co_];
      for (jint k = 0; k < n; k++) {
        GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
        [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_])) setCoordsWithDouble:IOSDoubleArray_Get(self->co_, k) withDouble:[bp getX] withDouble:1];
        self->validVertices_++;
      }
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intConicXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  IOSDoubleArray *coef = [((GeogebraCommonKernelGeosGeoConic *) nil_chk([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getConicBorder])) getMatrix];
  {
    IOSObjectArray *a__ = bz;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
      *IOSDoubleArray_GetRef(nil_chk(self->co_), 2) = IOSDoubleArray_Get(nil_chk(coef), 1);
      *IOSDoubleArray_GetRef(self->co_, 1) = 2 * IOSDoubleArray_Get(coef, 3) * [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX] + 2 * IOSDoubleArray_Get(coef, 5);
      *IOSDoubleArray_GetRef(self->co_, 0) = IOSDoubleArray_Get(coef, 0) * [bp getX] * [bp getX] + 2 * IOSDoubleArray_Get(coef, 4) * [bp getX] + IOSDoubleArray_Get(coef, 2);
      GeogebraCommonMainApp_debugWithNSString_(JreStrcat("DCDCD", IOSDoubleArray_Get(self->co_, 0), ',', IOSDoubleArray_Get(self->co_, 1), ',', IOSDoubleArray_Get(self->co_, 2)));
      jint n = [((GeogebraCommonKernelEquationSolver *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getEquationSolver])) solveQuadraticWithDoubleArray:self->co_];
      for (jint k = 0; k < n; k++) {
        GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
        [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_])) setCoordsWithDouble:[bp getX] withDouble:IOSDoubleArray_Get(self->co_, k) withDouble:1];
        self->validVertices_++;
      }
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intConicConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectConics_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_withGeogebraCommonKernelGeosGeoConic_(self->cons_, [((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getConicBorder], [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getConicBorder]) autorelease]);
  else [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j), NO);
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearYWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  GeogebraCommonKernelGeosGeoLine *af = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getLineBorder];
  if (GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelGeosGeoLine *) nil_chk(af)) getX])) return;
  {
    IOSObjectArray *a__ = bz;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
      GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
      [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_])) setCoordsWithDouble:(-[af getY] * [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX] - [af getZ]) / [af getX] withDouble:[bp getX] withDouble:1];
      self->validVertices_++;
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearXWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  IOSObjectArray *bz = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getZeros];
  GeogebraCommonKernelGeosGeoLine *af = [((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getLineBorder];
  if (GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelGeosGeoLine *) nil_chk(af)) getY])) return;
  {
    IOSObjectArray *a__ = bz;
    GeogebraCommonKernelGeosGeoPoint * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoPoint * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoPoint *bp = *b__++;
      GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
      [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_])) setCoordsWithDouble:[((GeogebraCommonKernelGeosGeoPoint *) nil_chk(bp)) getX] withDouble:(-[af getX] * [bp getX] - [af getZ]) / [af getY] withDouble:1];
      self->validVertices_++;
    }
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearConicWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_withInt_withInt_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b, jint i, jint j) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(self);
  if (IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j) == nil) GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(self, i, j, [new_GeogebraCommonKernelAlgosAlgoIntersectLineConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoConic_(self->cons_, [((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getLineBorder], [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getConicBorder]) autorelease]);
  else [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j))) compute];
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(self, IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->helpers_, i)), j), NO);
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_setHelperWithInt_withInt_withGeogebraCommonKernelAlgosAlgoElement_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, jint i, jint j, GeogebraCommonKernelAlgosAlgoElement *algo) {
  IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(nil_chk(self->helpers_), i)), j, algo);
  ((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo))->protectedInput_ = YES;
  [algo remove];
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelAlgosAlgoElement *algoElement, jboolean transpose, jboolean copy_) {
  IOSObjectArray *output = [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(algoElement)) getOutput];
  for (jint k = 0; k < ((IOSObjectArray *) nil_chk(output))->size_; k++) {
    GeogebraCommonKernelGeosGeoPoint *pt = copy_ ? (GeogebraCommonKernelGeosGeoPoint *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(output, k))) copy__], [GeogebraCommonKernelGeosGeoPoint class]) : (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(IOSObjectArray_Get(output, k), [GeogebraCommonKernelGeosGeoPoint class]);
    if (transpose) {
      jdouble x = [pt getX] / [pt getZ];
      jdouble y = [pt getY] / [pt getZ];
      [pt setCoordsWithDouble:y withDouble:x withDouble:1];
    }
    if ([((id<JavaUtilList>) nil_chk(self->vertices_)) size] <= self->validVertices_) [self->vertices_ addWithId:pt];
    else [self->vertices_ setWithInt:self->validVertices_ withId:pt];
    self->validVertices_++;
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelAlgosAlgoElement *algoElement, jboolean transpose) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_addVerticesWithGeogebraCommonKernelAlgosAlgoElement_withBoolean_withBoolean_(self, algoElement, transpose, NO);
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_intLinearLinearWithGeogebraCommonKernelArithmeticInequality_withGeogebraCommonKernelArithmeticInequality_(GeogebraCommonKernelAlgosAlgoVertexIneq *self, GeogebraCommonKernelArithmeticInequality *a, GeogebraCommonKernelArithmeticInequality *b) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(self);
  GeogebraCommonKernelGeosGeoVec3D_crossWithGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoVec3D_([((GeogebraCommonKernelArithmeticInequality *) nil_chk(a)) getLineBorder], [((GeogebraCommonKernelArithmeticInequality *) nil_chk(b)) getLineBorder], [((id<JavaUtilList>) nil_chk(self->vertices_)) getWithInt:self->validVertices_]);
  self->validVertices_++;
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_initHelpers(GeogebraCommonKernelAlgosAlgoVertexIneq *self) {
  jint n = [((GeogebraCommonKernelArithmeticIneqTree *) nil_chk([((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->p_)) getIneqs])) getSize];
  if (self->helpers_ == nil || self->helpers_->size_ != n) {
    GeogebraCommonKernelAlgosAlgoVertexIneq_setAndConsume_helpers_(self, [IOSObjectArray newArrayWithDimensions:2 lengths:(jint[]){ n, n } type:GeogebraCommonKernelAlgosAlgoElement_class_()]);
  }
}

void GeogebraCommonKernelAlgosAlgoVertexIneq_ensurePoint(GeogebraCommonKernelAlgosAlgoVertexIneq *self) {
  while ([((id<JavaUtilList>) nil_chk(self->vertices_)) size] <= self->validVertices_ || [self->vertices_ getWithInt:self->validVertices_] == nil) [self->vertices_ addWithId:[new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(self->cons_) autorelease]];
}

GeogebraCommonKernelAlgosAlgoElement_OutputHandler *GeogebraCommonKernelAlgosAlgoVertexIneq_createOutputPoints(GeogebraCommonKernelAlgosAlgoVertexIneq *self) {
  return [new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_GeogebraCommonKernelAlgosAlgoVertexIneq_$1_initWithGeogebraCommonKernelAlgosAlgoVertexIneq_(self) autorelease]) autorelease];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoVertexIneq)

@implementation GeogebraCommonKernelAlgosAlgoVertexIneq_$1

- (GeogebraCommonKernelGeosGeoPoint *)newElement {
  GeogebraCommonKernelGeosGeoPoint *pt = [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  [pt setCoordsWithDouble:0 withDouble:0 withDouble:1];
  [pt setParentAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:this$0_];
  return pt;
}

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoVertexIneq:(GeogebraCommonKernelAlgosAlgoVertexIneq *)outer$ {
  GeogebraCommonKernelAlgosAlgoVertexIneq_$1_initWithGeogebraCommonKernelAlgosAlgoVertexIneq_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelAlgosAlgoVertexIneq:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.kernel.algos.AlgoVertexIneq;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonKernelAlgosAlgoVertexIneq", "createOutputPoints" };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoVertexIneq_$1 = { 2, "", "geogebra.common.kernel.algos", "AlgoVertexIneq", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lgeogebra/common/kernel/algos/AlgoElement$elementFactory<Lgeogebra/common/kernel/geos/GeoElement;>;" };
  return &_GeogebraCommonKernelAlgosAlgoVertexIneq_$1;
}

@end

void GeogebraCommonKernelAlgosAlgoVertexIneq_$1_initWithGeogebraCommonKernelAlgosAlgoVertexIneq_(GeogebraCommonKernelAlgosAlgoVertexIneq_$1 *self, GeogebraCommonKernelAlgosAlgoVertexIneq *outer$) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonKernelAlgosAlgoVertexIneq_$1 *new_GeogebraCommonKernelAlgosAlgoVertexIneq_$1_initWithGeogebraCommonKernelAlgosAlgoVertexIneq_(GeogebraCommonKernelAlgosAlgoVertexIneq *outer$) {
  GeogebraCommonKernelAlgosAlgoVertexIneq_$1 *self = [GeogebraCommonKernelAlgosAlgoVertexIneq_$1 alloc];
  GeogebraCommonKernelAlgosAlgoVertexIneq_$1_initWithGeogebraCommonKernelAlgosAlgoVertexIneq_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoVertexIneq_$1)
