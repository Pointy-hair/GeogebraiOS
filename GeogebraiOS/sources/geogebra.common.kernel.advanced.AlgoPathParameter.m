//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoPathParameter.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Path.h"
#include "geogebra/common/kernel/PathNormalizer.h"
#include "geogebra/common/kernel/PathParameter.h"
#include "geogebra/common/kernel/advanced/AlgoPathParameter.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"

@interface GeogebraCommonKernelAdvancedAlgoPathParameter () {
 @public
  GeogebraCommonKernelGeosGeoPoint *point_;
  GeogebraCommonKernelGeosGeoNumeric *value_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoPathParameter, point_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoPathParameter, value_, GeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoPathParameter_compute(GeogebraCommonKernelAdvancedAlgoPathParameter *self);

@implementation GeogebraCommonKernelAdvancedAlgoPathParameter

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)point {
  GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, point);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)point {
  GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(self, cons, point);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_PathParameter();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, point_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:value_];
  [self setDependencies];
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoPathParameter_compute(self);
}

- (GeogebraCommonKernelGeosGeoNumeric *)getResult {
  return value_;
}

- (void)dealloc {
  RELEASE_(point_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:", "AlgoPathParameter", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPoint:", "AlgoPathParameter", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "point_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "value_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoPathParameter = { 2, "AlgoPathParameter", "geogebra.common.kernel.advanced", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoPathParameter;
}

@end

void GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelAdvancedAlgoPathParameter *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *point) {
  GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(self, cons, point);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->value_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoPathParameter *new_GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *point) {
  GeogebraCommonKernelAdvancedAlgoPathParameter *self = [GeogebraCommonKernelAdvancedAlgoPathParameter alloc];
  GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, point);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelAdvancedAlgoPathParameter *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *point) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoPathParameter_set_point_(self, point);
  GeogebraCommonKernelAdvancedAlgoPathParameter_setAndConsume_value_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoPathParameter_compute(self);
}

GeogebraCommonKernelAdvancedAlgoPathParameter *new_GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *point) {
  GeogebraCommonKernelAdvancedAlgoPathParameter *self = [GeogebraCommonKernelAdvancedAlgoPathParameter alloc];
  GeogebraCommonKernelAdvancedAlgoPathParameter_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(self, cons, point);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoPathParameter_compute(GeogebraCommonKernelAdvancedAlgoPathParameter *self) {
  if (![((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->point_)) isDefined] || ![self->point_ isPointOnPath]) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->value_)) setUndefined];
    return;
  }
  id<GeogebraCommonKernelPath> p = [self->point_ getPath];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->value_)) setValueWithDouble:GeogebraCommonKernelPathNormalizer_toNormalizedPathParameterWithDouble_withDouble_withDouble_([((GeogebraCommonKernelPathParameter *) nil_chk([self->point_ getPathParameter])) getT], [((id<GeogebraCommonKernelPath>) nil_chk(p)) getMinParameter], [p getMaxParameter])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoPathParameter)
