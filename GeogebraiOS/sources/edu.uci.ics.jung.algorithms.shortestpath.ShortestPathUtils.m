//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/algorithms/shortestpath/ShortestPathUtils.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/shortestpath/ShortestPath.h"
#include "edu/uci/ics/jung/algorithms/shortestpath/ShortestPathUtils.h"
#include "edu/uci/ics/jung/graph/Graph.h"
#include "edu/uci/ics/jung/graph/util/Pair.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@implementation EduUciIcsJungAlgorithmsShortestpathShortestPathUtils

+ (id<JavaUtilList>)getPathWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)graph
   withEduUciIcsJungAlgorithmsShortestpathShortestPath:(id<EduUciIcsJungAlgorithmsShortestpathShortestPath>)sp
                                                withId:(id)source
                                                withId:(id)target {
  return EduUciIcsJungAlgorithmsShortestpathShortestPathUtils_getPathWithEduUciIcsJungGraphGraph_withEduUciIcsJungAlgorithmsShortestpathShortestPath_withId_withId_(graph, sp, source, target);
}

- (instancetype)init {
  EduUciIcsJungAlgorithmsShortestpathShortestPathUtils_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getPathWithEduUciIcsJungGraphGraph:withEduUciIcsJungAlgorithmsShortestpathShortestPath:withId:withId:", "getPath", "Ljava.util.List;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/Graph<TV;TE;>;Ledu/uci/ics/jung/algorithms/shortestpath/ShortestPath<TV;TE;>;TV;TV;)Ljava/util/List<TE;>;" },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsShortestpathShortestPathUtils = { 2, "ShortestPathUtils", "edu.uci.ics.jung.algorithms.shortestpath", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_EduUciIcsJungAlgorithmsShortestpathShortestPathUtils;
}

@end

id<JavaUtilList> EduUciIcsJungAlgorithmsShortestpathShortestPathUtils_getPathWithEduUciIcsJungGraphGraph_withEduUciIcsJungAlgorithmsShortestpathShortestPath_withId_withId_(id<EduUciIcsJungGraphGraph> graph, id<EduUciIcsJungAlgorithmsShortestpathShortestPath> sp, id source, id target) {
  EduUciIcsJungAlgorithmsShortestpathShortestPathUtils_initialize();
  JavaUtilLinkedList *path = [new_JavaUtilLinkedList_init() autorelease];
  id<JavaUtilMap> incomingEdges = [((id<EduUciIcsJungAlgorithmsShortestpathShortestPath>) nil_chk(sp)) getIncomingEdgeMapWithId:source];
  if ([((id<JavaUtilMap>) nil_chk(incomingEdges)) isEmpty] || [incomingEdges getWithId:target] == nil) return path;
  id current = target;
  while (![nil_chk(current) isEqual:source]) {
    id incoming = [incomingEdges getWithId:current];
    [path addFirstWithId:incoming];
    EduUciIcsJungGraphUtilPair *endpoints = [((id<EduUciIcsJungGraphGraph>) nil_chk(graph)) getEndpointsWithId:incoming];
    if ([nil_chk([((EduUciIcsJungGraphUtilPair *) nil_chk(endpoints)) getFirst]) isEqual:current]) {
      current = [endpoints getSecond];
    }
    else {
      current = [endpoints getFirst];
    }
  }
  return path;
}

void EduUciIcsJungAlgorithmsShortestpathShortestPathUtils_init(EduUciIcsJungAlgorithmsShortestpathShortestPathUtils *self) {
  NSObject_init(self);
}

EduUciIcsJungAlgorithmsShortestpathShortestPathUtils *new_EduUciIcsJungAlgorithmsShortestpathShortestPathUtils_init() {
  EduUciIcsJungAlgorithmsShortestpathShortestPathUtils *self = [EduUciIcsJungAlgorithmsShortestpathShortestPathUtils alloc];
  EduUciIcsJungAlgorithmsShortestpathShortestPathUtils_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsShortestpathShortestPathUtils)
