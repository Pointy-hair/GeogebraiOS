//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/statistics/CmdSigmaXX.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/CmdOneListFunction.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/statistics/AlgoListSigmaXX.h"
#include "geogebra/common/kernel/statistics/AlgoSigmaXX.h"
#include "geogebra/common/kernel/statistics/CmdSigmaXX.h"
#include "geogebra/common/main/MyError.h"

@implementation GeogebraCommonKernelStatisticsCmdSigmaXX

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelStatisticsCmdSigmaXX_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)label
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list {
  GeogebraCommonKernelGeosGeoNumeric *num;
  GeogebraCommonKernelGeosGeoElement *geo = [((GeogebraCommonKernelGeosGeoList *) nil_chk(list)) getWithInt:0];
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
    GeogebraCommonKernelStatisticsAlgoSigmaXX *algo = [new_GeogebraCommonKernelStatisticsAlgoSigmaXX_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(cons_, label, list) autorelease];
    num = [algo getResult];
  }
  else {
    GeogebraCommonKernelStatisticsAlgoListSigmaXX *algo = [new_GeogebraCommonKernelStatisticsAlgoListSigmaXX_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(cons_, label, list) autorelease];
    num = [algo getResult];
  }
  return num;
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)a
                    withGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)freq {
  GeogebraCommonKernelStatisticsAlgoSigmaXX *algo = [new_GeogebraCommonKernelStatisticsAlgoSigmaXX_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(cons_, a, list, freq) autorelease];
  return [algo getResult];
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)a
                    withGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)freq
                       withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isGrouped {
  @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getName] withInt:3];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdSigmaXX", NULL, 0x1, NULL, NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelGeosGeoList:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelArithmeticCommand:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelArithmeticCommand:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoBoolean:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelStatisticsCmdSigmaXX = { 2, "CmdSigmaXX", "geogebra.common.kernel.statistics", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelStatisticsCmdSigmaXX;
}

@end

void GeogebraCommonKernelStatisticsCmdSigmaXX_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelStatisticsCmdSigmaXX *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdOneListFunction_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelStatisticsCmdSigmaXX *new_GeogebraCommonKernelStatisticsCmdSigmaXX_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelStatisticsCmdSigmaXX *self = [GeogebraCommonKernelStatisticsCmdSigmaXX alloc];
  GeogebraCommonKernelStatisticsCmdSigmaXX_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelStatisticsCmdSigmaXX)
