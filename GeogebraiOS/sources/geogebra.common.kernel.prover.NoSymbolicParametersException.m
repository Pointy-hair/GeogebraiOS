//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/prover/NoSymbolicParametersException.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/prover/NoSymbolicParametersException.h"
#include "java/lang/Exception.h"

#define GeogebraCommonKernelProverNoSymbolicParametersException_serialVersionUID 1LL

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelProverNoSymbolicParametersException, serialVersionUID, jlong)

@implementation GeogebraCommonKernelProverNoSymbolicParametersException

- (instancetype)init {
  GeogebraCommonKernelProverNoSymbolicParametersException_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "NoSymbolicParametersException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonKernelProverNoSymbolicParametersException_serialVersionUID },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelProverNoSymbolicParametersException = { 2, "NoSymbolicParametersException", "geogebra.common.kernel.prover", NULL, 0x1, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelProverNoSymbolicParametersException;
}

@end

void GeogebraCommonKernelProverNoSymbolicParametersException_init(GeogebraCommonKernelProverNoSymbolicParametersException *self) {
  JavaLangException_initWithNSString_(self, @"No symbolic parameters available");
}

GeogebraCommonKernelProverNoSymbolicParametersException *new_GeogebraCommonKernelProverNoSymbolicParametersException_init() {
  GeogebraCommonKernelProverNoSymbolicParametersException *self = [GeogebraCommonKernelProverNoSymbolicParametersException alloc];
  GeogebraCommonKernelProverNoSymbolicParametersException_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelProverNoSymbolicParametersException)
