//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/alds/ds/graphs/WeightedGraph.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/alds/ds/graphs/Graph.h"
#include "geogebra/common/kernel/discrete/alds/ds/graphs/Vertex.h"
#include "geogebra/common/kernel/discrete/alds/ds/graphs/WeightedGraph.h"
#include "java/lang/Integer.h"
#include "java/util/Comparator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"

@interface GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph () {
 @public
  GeogebraCommonKernelDiscreteAldsDsGraphsGraph *graph_;
  id<JavaUtilMap> edgeWeights_;
}

- (void)addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)a
                     withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)b
                                                                withInt:(jint)weight;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph, graph_, GeogebraCommonKernelDiscreteAldsDsGraphsGraph *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph, edgeWeights_, id<JavaUtilMap>)

static id<JavaUtilComparator> GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_vertexComparator_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph, vertexComparator_, id<JavaUtilComparator>)
J2OBJC_STATIC_FIELD_SETTER(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph, vertexComparator_, id<JavaUtilComparator>)

__attribute__((unused)) static void GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withInt_(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *self, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *a, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *b, jint weight);

@interface GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)o1
               withId:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)o2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1)

__attribute__((unused)) static void GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1_init(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 *self);

__attribute__((unused)) static GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 *new_GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1)

J2OBJC_INITIALIZED_DEFN(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph)

@implementation GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph

- (instancetype)initWithGeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum:(GeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum *)type {
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_initWithGeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum_(self, type);
  return self;
}

- (GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)addVertexWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)vertex {
  [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) addVertexWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:vertex];
  return self;
}

- (GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)addEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)a
                                                                  withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)b
                                                                                                             withInt:(jint)weight {
  [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) addEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:a withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:b];
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withInt_(self, a, b, weight);
  if ([((GeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum *) nil_chk([graph_ getType])) isEqual:GeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum_get_UNDIRECTED()]) {
    GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withInt_(self, b, a, weight);
  }
  return self;
}

- (jint)getEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)a
                     withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)b {
  if ([((id<JavaUtilMap>) nil_chk(edgeWeights_)) containsKeyWithId:a]) {
    id<JavaUtilMap> map = [edgeWeights_ getWithId:a];
    if ([((id<JavaUtilMap>) nil_chk(map)) containsKeyWithId:b]) {
      return [((JavaLangInteger *) nil_chk([map getWithId:b])) intValue];
    }
    else {
      return JavaLangInteger_MAX_VALUE;
    }
  }
  else {
    return JavaLangInteger_MAX_VALUE;
  }
}

- (void)addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)a
                     withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)b
                                                                withInt:(jint)weight {
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withInt_(self, a, b, weight);
}

- (void)deleteEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)a
                  withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)b {
  [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) deleteEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:a withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:b];
}

- (jboolean)containsEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)a
                        withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)b {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) containsEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:a withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:b];
}

- (jint)numberOfVertices {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) numberOfVertices];
}

- (jint)numberOfEdges {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) numberOfEdges];
}

- (IOSObjectArray *)getAdjacencyList {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) getAdjacencyList];
}

- (IOSObjectArray *)getAdjacencyMatrix {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) getAdjacencyMatrix];
}

- (IOSObjectArray *)getAllAdjacentVerticesWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)vertex {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) getAllAdjacentVerticesWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:vertex];
}

- (jint)getOutDegreeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)vertex {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) getOutDegreeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:vertex];
}

- (jint)getInDegreeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)vertex {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) getInDegreeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:vertex];
}

- (NSString *)description {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) description];
}

- (id<JavaUtilSet>)getVertices {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) getVertices];
}

- (GeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum *)getType {
  return [((GeogebraCommonKernelDiscreteAldsDsGraphsGraph *) nil_chk(graph_)) getType];
}

- (void)dealloc {
  RELEASE_(graph_);
  RELEASE_(edgeWeights_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph class]) {
    JreStrongAssignAndConsume(&GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_vertexComparator_, nil, new_GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1_init());
    J2OBJC_SET_INITIALIZED(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum:", "WeightedGraph", NULL, 0x1, NULL, NULL },
    { "addVertexWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "addVertex", "Lgeogebra.common.kernel.discrete.alds.ds.graphs.WeightedGraph;", 0x1, NULL, NULL },
    { "addEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:withInt:", "addEdge", "Lgeogebra.common.kernel.discrete.alds.ds.graphs.WeightedGraph;", 0x1, NULL, NULL },
    { "getEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "getEdgeWeight", "I", 0x1, NULL, NULL },
    { "addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:withInt:", "addEdgeWeight", "V", 0x2, NULL, NULL },
    { "deleteEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "deleteEdge", "V", 0x1, NULL, NULL },
    { "containsEdgeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "containsEdge", "Z", 0x1, NULL, NULL },
    { "numberOfVertices", NULL, "I", 0x1, NULL, NULL },
    { "numberOfEdges", NULL, "I", 0x1, NULL, NULL },
    { "getAdjacencyList", NULL, "[[Lgeogebra.common.kernel.discrete.alds.ds.graphs.Vertex;", 0x1, NULL, NULL },
    { "getAdjacencyMatrix", NULL, "[[I", 0x1, NULL, NULL },
    { "getAllAdjacentVerticesWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "getAllAdjacentVertices", "[Lgeogebra.common.kernel.discrete.alds.ds.graphs.Vertex;", 0x1, NULL, NULL },
    { "getOutDegreeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "getOutDegree", "I", 0x1, NULL, NULL },
    { "getInDegreeWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "getInDegree", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getVertices", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "getType", NULL, "Lgeogebra.common.kernel.discrete.alds.ds.graphs.Graph$Type;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "graph_", NULL, 0x2, "Lgeogebra.common.kernel.discrete.alds.ds.graphs.Graph;", NULL, NULL,  },
    { "edgeWeights_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lgeogebra/common/kernel/discrete/alds/ds/graphs/Vertex;Ljava/util/Map<Lgeogebra/common/kernel/discrete/alds/ds/graphs/Vertex;Ljava/lang/Integer;>;>;",  },
    { "vertexComparator_", NULL, 0xa, "Ljava.util.Comparator;", &GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_vertexComparator_, "Ljava/util/Comparator<Lgeogebra/common/kernel/discrete/alds/ds/graphs/Vertex;>;",  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph = { 2, "WeightedGraph", "geogebra.common.kernel.discrete.alds.ds.graphs", NULL, 0x1, 17, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph;
}

@end

void GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_initWithGeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum_(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *self, GeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum *type) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_set_edgeWeights_(self, nil);
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_setAndConsume_graph_(self, new_GeogebraCommonKernelDiscreteAldsDsGraphsGraph_initWithGeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum_(type));
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_setAndConsume_edgeWeights_(self, new_JavaUtilTreeMap_initWithJavaUtilComparator_(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_vertexComparator_));
}

GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *new_GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_initWithGeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum_(GeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum *type) {
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *self = [GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph alloc];
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_initWithGeogebraCommonKernelDiscreteAldsDsGraphsGraph_TypeEnum_(self, type);
  return self;
}

void GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_addEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_withInt_(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *self, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *a, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *b, jint weight) {
  id<JavaUtilMap> map = nil;
  if ([((id<JavaUtilMap>) nil_chk(self->edgeWeights_)) containsKeyWithId:a]) {
    map = [self->edgeWeights_ getWithId:a];
  }
  else {
    map = [new_JavaUtilTreeMap_initWithJavaUtilComparator_(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_vertexComparator_) autorelease];
  }
  [((id<JavaUtilMap>) nil_chk(map)) putWithId:b withId:JavaLangInteger_valueOfWithInt_(weight)];
  [self->edgeWeights_ putWithId:a withId:map];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph)

@implementation GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1

- (jint)compareWithId:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)o1
               withId:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)o2 {
  return [((NSString *) nil_chk([((GeogebraCommonKernelDiscreteAldsDsGraphsVertex *) nil_chk(o1)) getName])) compareToWithId:[((GeogebraCommonKernelDiscreteAldsDsGraphsVertex *) nil_chk(o2)) getName]];
}

- (instancetype)init {
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 = { 2, "", "geogebra.common.kernel.discrete.alds.ds.graphs", "WeightedGraph", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Lgeogebra/common/kernel/discrete/alds/ds/graphs/Vertex;>;" };
  return &_GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1;
}

@end

void GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1_init(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 *self) {
  NSObject_init(self);
}

GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 *new_GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1_init() {
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 *self = [GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1 alloc];
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_$1)
