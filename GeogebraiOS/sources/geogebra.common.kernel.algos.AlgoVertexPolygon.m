//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoVertexPolygon.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoVertexPolygon.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoPoly.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelAlgosAlgoVertexPolygon () {
 @public
  id<GeogebraCommonKernelArithmeticNumberValue> index_;
  id<GeogebraCommonKernelKernelNDGeoPointND> oneVertex_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPoints_;
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexPolygon, index_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexPolygon, oneVertex_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexPolygon, outputPoints_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(GeogebraCommonKernelAlgosAlgoVertexPolygon *self, IOSObjectArray *labels);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexPolygon_compute(GeogebraCommonKernelAlgosAlgoVertexPolygon *self);

@interface GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 : NSObject < GeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  GeogebraCommonKernelAlgosAlgoVertexPolygon *this$0_;
}

- (GeogebraCommonKernelGeosGeoPoint *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoVertexPolygon:(GeogebraCommonKernelAlgosAlgoVertexPolygon *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoVertexPolygon_$1)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVertexPolygon_$1, this$0_, GeogebraCommonKernelAlgosAlgoVertexPolygon *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithGeogebraCommonKernelAlgosAlgoVertexPolygon_(GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *self, GeogebraCommonKernelAlgosAlgoVertexPolygon *outer$);

__attribute__((unused)) static GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *new_GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithGeogebraCommonKernelAlgosAlgoVertexPolygon_(GeogebraCommonKernelAlgosAlgoVertexPolygon *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoVertexPolygon_$1)

@implementation GeogebraCommonKernelAlgosAlgoVertexPolygon

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                     withGeogebraCommonKernelGeosGeoPoly:(id<GeogebraCommonKernelGeosGeoPoly>)p {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPoly_(self, cons, labels, p);
  return self;
}

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(self, labels);
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoPoly:(id<GeogebraCommonKernelGeosGeoPoly>)p
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)v {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, p, v);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoPoly:(id<GeogebraCommonKernelGeosGeoPoly>)p {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_(self, cons, p);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoPoly:(id<GeogebraCommonKernelGeosGeoPoly>)p
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)v {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, p, v);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  return [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Vertex();
}

- (void)setInputOutput {
  if (index_ != nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 1, [index_ toGeoElement]);
    [self setOutputLengthWithInt:1];
    [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *) check_class_cast(oneVertex_, [GeogebraCommonKernelGeosGeoElement class])];
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  }
  IOSObjectArray_Set(nil_chk(input_), 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(p_, [GeogebraCommonKernelGeosGeoElement class]));
  [self setDependencies];
}

- (id<GeogebraCommonKernelGeosGeoPoly>)getPolygon {
  return p_;
}

- (jint)getOutputLength {
  if (index_ != nil) return 1;
  return [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) size];
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_compute(self);
}

- (void)setPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point
                                                   withInt:(jint)i {
  [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) setWithGeogebraCommonKernelKernelNDGeoPointND:[((id<GeogebraCommonKernelGeosGeoPoly>) nil_chk(p_)) getPointWithInt:i]];
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"VertexOfA" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(p_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (IOSObjectArray *)getVertex {
  return [self getOutput];
}

- (GeogebraCommonKernelGeosGeoElement *)getOutputWithInt:(jint)i {
  if (index_ != nil) return (GeogebraCommonKernelGeosGeoElement *) check_class_cast(oneVertex_, [GeogebraCommonKernelGeosGeoElement class]);
  return [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPoints_)) getElementWithInt:i];
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getOneVertex {
  return oneVertex_;
}

- (GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPoints {
  return [new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithGeogebraCommonKernelAlgosAlgoVertexPolygon_(self) autorelease]) autorelease];
}

- (void)dealloc {
  RELEASE_(p_);
  RELEASE_(index_);
  RELEASE_(oneVertex_);
  RELEASE_(outputPoints_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoPoly:", "AlgoVertexPolygon", NULL, 0x1, NULL, NULL },
    { "setLabelsWithNSStringArray:", "setLabels", "V", 0x2, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoly:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoVertexPolygon", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPoly:", "AlgoVertexPolygon", NULL, 0x4, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPoly:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoVertexPolygon", NULL, 0x0, NULL, NULL },
    { "newGeoPointWithGeogebraCommonKernelConstruction:", "newGeoPoint", "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x1, NULL, NULL },
    { "getPolygon", NULL, "Lgeogebra.common.kernel.geos.GeoPoly;", 0x1, NULL, NULL },
    { "getOutputLength", NULL, "I", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setPointWithGeogebraCommonKernelKernelNDGeoPointND:withInt:", "setPoint", "V", 0x4, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getVertex", NULL, "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getOutputWithInt:", "getOutput", "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "getOneVertex", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "createOutputPoints", NULL, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoPoly;", NULL, NULL,  },
    { "index_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "oneVertex_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "outputPoints_", NULL, 0x2, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lgeogebra/common/kernel/algos/AlgoElement$OutputHandler<Lgeogebra/common/kernel/geos/GeoElement;>;",  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoVertexPolygon = { 2, "AlgoVertexPolygon", "geogebra.common.kernel.algos", NULL, 0x1, 17, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoVertexPolygon;
}

@end

void GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPoly_(GeogebraCommonKernelAlgosAlgoVertexPolygon *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelGeosGeoPoly> p) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_(self, cons, p);
  GeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(self, labels);
  [self update];
}

GeogebraCommonKernelAlgosAlgoVertexPolygon *new_GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPoly_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelGeosGeoPoly> p) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon *self = [GeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPoly_(self, cons, labels, p);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexPolygon_setLabelsWithNSStringArray_(GeogebraCommonKernelAlgosAlgoVertexPolygon *self, IOSObjectArray *labels) {
  if (labels != nil && labels->size_ == 1 && IOSObjectArray_Get(labels, 0) != nil && ![((NSString *) nil_chk(IOSObjectArray_Get(labels, 0))) isEqual:@""]) {
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) setIndexLabelsWithNSString:IOSObjectArray_Get(labels, 0)];
  }
  else {
    [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) setLabelsWithNSStringArray:labels];
    [self->outputPoints_ setIndexLabelsWithNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:0])) getLabelWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()]];
  }
}

void GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelAlgosAlgoVertexPolygon *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelGeosGeoPoly> p, id<GeogebraCommonKernelArithmeticNumberValue> v) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, p, v);
  [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoVertexPolygon *new_GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelGeosGeoPoly> p, id<GeogebraCommonKernelArithmeticNumberValue> v) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon *self = [GeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, p, v);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_(GeogebraCommonKernelAlgosAlgoVertexPolygon *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoPoly> p) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoVertexPolygon_set_p_(self, p);
  GeogebraCommonKernelAlgosAlgoVertexPolygon_set_outputPoints_(self, [self createOutputPoints]);
  [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) adjustOutputSizeWithInt:1];
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoVertexPolygon_compute(self);
}

GeogebraCommonKernelAlgosAlgoVertexPolygon *new_GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoPoly> p) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon *self = [GeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_(self, cons, p);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelAlgosAlgoVertexPolygon *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoPoly> p, id<GeogebraCommonKernelArithmeticNumberValue> v) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoVertexPolygon_set_p_(self, p);
  GeogebraCommonKernelAlgosAlgoVertexPolygon_set_index_(self, v);
  GeogebraCommonKernelAlgosAlgoVertexPolygon_set_oneVertex_(self, [self newGeoPointWithGeogebraCommonKernelConstruction:cons]);
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoVertexPolygon_compute(self);
}

GeogebraCommonKernelAlgosAlgoVertexPolygon *new_GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoPoly> p, id<GeogebraCommonKernelArithmeticNumberValue> v) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon *self = [GeogebraCommonKernelAlgosAlgoVertexPolygon alloc];
  GeogebraCommonKernelAlgosAlgoVertexPolygon_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, p, v);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVertexPolygon_compute(GeogebraCommonKernelAlgosAlgoVertexPolygon *self) {
  if (self->index_ != nil) {
    if (![((id<GeogebraCommonKernelGeosGeoPoly>) nil_chk(self->p_)) isDefined]) {
      [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) setUndefined];
    }
    else {
      jint i = J2ObjCFpToInt(JavaLangMath_floorWithDouble_([self->index_ getDouble])) - 1;
      if (i >= ((IOSObjectArray *) nil_chk([self->p_ getPoints]))->size_ || i < 0) {
        [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) setUndefined];
      }
      else {
        [self setPointWithGeogebraCommonKernelKernelNDGeoPointND:self->oneVertex_ withInt:i];
      }
    }
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->oneVertex_)) update];
    return;
  }
  if (![((id<GeogebraCommonKernelGeosGeoPoly>) nil_chk(self->p_)) isDefined]) {
    for (jint i = 0; i < [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) size]; i++) {
      [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:i])) setUndefined];
    }
    return;
  }
  jint length = ((IOSObjectArray *) nil_chk([self->p_ getPoints]))->size_;
  if (length > [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(self->outputPoints_)) size]) {
    [self->outputPoints_ adjustOutputSizeWithInt:length];
    [self refreshOutput];
  }
  for (jint i = 0; i < length; i++) {
    id<GeogebraCommonKernelKernelNDGeoPointND> point = (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([self->outputPoints_ getElementWithInt:i], @protocol(GeogebraCommonKernelKernelNDGeoPointND));
    [self setPointWithGeogebraCommonKernelKernelNDGeoPointND:point withInt:i];
  }
  for (jint i = length; i < [self->outputPoints_ size]; i++) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self->outputPoints_ getElementWithInt:i])) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoVertexPolygon)

@implementation GeogebraCommonKernelAlgosAlgoVertexPolygon_$1

- (GeogebraCommonKernelGeosGeoPoint *)newElement {
  GeogebraCommonKernelGeosGeoPoint *pt = [new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  [pt setCoordsWithDouble:0 withDouble:0 withDouble:1];
  [pt setParentAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:this$0_];
  return pt;
}

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoVertexPolygon:(GeogebraCommonKernelAlgosAlgoVertexPolygon *)outer$ {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithGeogebraCommonKernelAlgosAlgoVertexPolygon_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelAlgosAlgoVertexPolygon:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.kernel.algos.AlgoVertexPolygon;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonKernelAlgosAlgoVertexPolygon", "createOutputPoints" };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 = { 2, "", "geogebra.common.kernel.algos", "AlgoVertexPolygon", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lgeogebra/common/kernel/algos/AlgoElement$elementFactory<Lgeogebra/common/kernel/geos/GeoElement;>;" };
  return &_GeogebraCommonKernelAlgosAlgoVertexPolygon_$1;
}

@end

void GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithGeogebraCommonKernelAlgosAlgoVertexPolygon_(GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *self, GeogebraCommonKernelAlgosAlgoVertexPolygon *outer$) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *new_GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithGeogebraCommonKernelAlgosAlgoVertexPolygon_(GeogebraCommonKernelAlgosAlgoVertexPolygon *outer$) {
  GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 *self = [GeogebraCommonKernelAlgosAlgoVertexPolygon_$1 alloc];
  GeogebraCommonKernelAlgosAlgoVertexPolygon_$1_initWithGeogebraCommonKernelAlgosAlgoVertexPolygon_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoVertexPolygon_$1)
