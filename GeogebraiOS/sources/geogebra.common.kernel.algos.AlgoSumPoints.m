//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoSumPoints.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoSumPoints.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonKernelAlgosAlgoSumPoints () {
 @public
  GeogebraCommonKernelGeosGeoList *geoList_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoSumPoints, geoList_, GeogebraCommonKernelGeosGeoList *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoSumPoints_compute(GeogebraCommonKernelAlgosAlgoSumPoints *self);

@implementation GeogebraCommonKernelAlgosAlgoSumPoints

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList {
  GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)Truncate {
  GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, Truncate);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Sum();
}

- (void)setInputOutput {
  if (Truncate_ == nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, geoList_);
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, geoList_);
    IOSObjectArray_Set(input_, 1, Truncate_);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:result_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoElement *)getResult {
  return result_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoSumPoints_compute(self);
}

- (void)dealloc {
  RELEASE_(geoList_);
  RELEASE_(Truncate_);
  RELEASE_(result_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:", "AlgoSumPoints", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoSumPoints", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "Truncate_", NULL, 0x1, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "result_", NULL, 0x1, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoSumPoints = { 2, "AlgoSumPoints", "geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoSumPoints;
}

@end

void GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoSumPoints *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, nil);
}

GeogebraCommonKernelAlgosAlgoSumPoints *new_GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoSumPoints *self = [GeogebraCommonKernelAlgosAlgoSumPoints alloc];
  GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelAlgosAlgoSumPoints *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoNumeric *Truncate) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoSumPoints_set_geoList_(self, geoList);
  GeogebraCommonKernelAlgosAlgoSumPoints_set_Truncate_(self, Truncate);
  GeogebraCommonKernelGeosGeoElement *geo0 = [((GeogebraCommonKernelGeosGeoList *) nil_chk(geoList)) getWithInt:0];
  GeogebraCommonKernelAlgosAlgoSumPoints_set_result_(self, [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo0)) copyInternalWithGeogebraCommonKernelConstruction:cons]);
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoSumPoints_compute(self);
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->result_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoSumPoints *new_GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoNumeric *Truncate) {
  GeogebraCommonKernelAlgosAlgoSumPoints *self = [GeogebraCommonKernelAlgosAlgoSumPoints alloc];
  GeogebraCommonKernelAlgosAlgoSumPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, Truncate);
  return self;
}

void GeogebraCommonKernelAlgosAlgoSumPoints_compute(GeogebraCommonKernelAlgosAlgoSumPoints *self) {
  jint truncate;
  jint size = [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) size];
  if (self->Truncate_ != nil) {
    truncate = J2ObjCFpToInt([self->Truncate_ getDouble]);
    if (truncate < 1 || truncate > size) {
      [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->result_)) setUndefined];
      return;
    }
    size = truncate;
  }
  if (![self->geoList_ isDefined] || size == 0) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->result_)) setUndefined];
    return;
  }
  jdouble x = 0, y = 0, z = 0;
  for (jint i = 0; i < size; i++) {
    GeogebraCommonKernelGeosGeoElement *p = [self->geoList_ getWithInt:i];
    if ([p isKindOfClass:[GeogebraCommonKernelGeosGeoPoint class]]) {
      x += [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(((GeogebraCommonKernelGeosGeoPoint *) check_class_cast(p, [GeogebraCommonKernelGeosGeoPoint class])))) getInhomX];
      y += [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(((GeogebraCommonKernelGeosGeoPoint *) check_class_cast(p, [GeogebraCommonKernelGeosGeoPoint class])))) getInhomY];
    }
    else if ([GeogebraCommonKernelKernelNDGeoPointND_class_() isInstance:p]) {
      IOSDoubleArray *coords = [IOSDoubleArray arrayWithLength:3];
      [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(((id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(p, @protocol(GeogebraCommonKernelKernelNDGeoPointND))))) getInhomCoordsWithDoubleArray:coords];
      x += IOSDoubleArray_Get(coords, 0);
      y += IOSDoubleArray_Get(coords, 1);
      z += IOSDoubleArray_Get(coords, 2);
    }
    else if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(p)) isGeoVector]) {
      x += [((GeogebraCommonKernelGeosGeoVector *) check_class_cast(p, [GeogebraCommonKernelGeosGeoVector class])) getX];
      y += [((GeogebraCommonKernelGeosGeoVector *) check_class_cast(p, [GeogebraCommonKernelGeosGeoVector class])) getY];
    }
    else if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:p]) {
      jdouble val = [((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(p, @protocol(GeogebraCommonKernelArithmeticNumberValue))) getDouble];
      x += val;
      y += val;
      z += val;
    }
    else {
      [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->result_)) setUndefined];
      return;
    }
  }
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->result_)) isGeoVector] || [self->result_ isKindOfClass:[GeogebraCommonKernelGeosGeoPoint class]]) [((GeogebraCommonKernelGeosGeoVec3D *) check_class_cast(self->result_, [GeogebraCommonKernelGeosGeoVec3D class])) setCoordsWithDouble:x withDouble:y withDouble:1.0];
  else {
    [((id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(self->result_, @protocol(GeogebraCommonKernelKernelNDGeoPointND))) setCoordsWithDouble:x withDouble:y withDouble:z withDouble:1.0];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoSumPoints)
