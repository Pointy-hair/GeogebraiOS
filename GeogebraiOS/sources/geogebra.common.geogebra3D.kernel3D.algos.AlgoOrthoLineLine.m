//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoLineLine.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoLineLine.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine () {
 @public
  GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *line_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine, line_, GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line1 {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, line1);
  return self;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getLine {
  return line_;
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_set_origin1_(self, [((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line1_)) getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension]);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_set_direction1_(self, [((GeogebraCommonKernelMatrixCoords *) nil_chk([line1_ getPointInDWithInt:3 withDouble:1])) subWithGeogebraCommonKernelMatrixCoords:origin1_]);
  [self setOriginAndDirection2];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk([self getLine])) setCoordWithGeogebraCommonKernelMatrixCoords:origin_ withGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(direction1_)) crossProductWithGeogebraCommonKernelMatrixCoords:direction2_]];
}

- (void)setOriginAndDirection2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(line1_);
  RELEASE_(line_);
  RELEASE_(origin_);
  RELEASE_(direction2_);
  RELEASE_(origin1_);
  RELEASE_(direction1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoLineND:", "AlgoOrthoLineLine", NULL, 0x1, NULL, NULL },
    { "getLine", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "setOriginAndDirection2", NULL, "V", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "line1_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "line_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoLine3D;", NULL, NULL,  },
    { "origin_", NULL, 0x4, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "direction2_", NULL, 0x4, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "origin1_", NULL, 0x4, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "direction1_", NULL, 0x4, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine = { 2, "AlgoOrthoLineLine", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 4, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> line1) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_set_line1_(self, line1);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_setAndConsume_line_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithGeogebraCommonKernelConstruction_(cons));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine)
