//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoVectorPoint3D.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoVectorPoint3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoVector3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoVectorPoint.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, P);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)createNewVector {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_initWithGeogebraCommonKernelConstruction_(cons_) autorelease];
}

- (void)setCoords {
  GeogebraCommonKernelMatrixCoords *coords = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getP])) getInhomCoordsInD3];
  [((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk([self getVector])) setCoordsWithDoubleArray:[IOSDoubleArray arrayWithDoubles:(jdouble[]){ [((GeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX], [coords getY], [coords getZ], 0 } count:4]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoVectorPoint3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoVectorPoint3D", NULL, 0x1, NULL, NULL },
    { "createNewVector", NULL, "Lgeogebra.common.kernel.kernelND.GeoVectorND;", 0x4, NULL, NULL },
    { "setCoords", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D = { 2, "AlgoVectorPoint3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, P);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, P);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoVectorPoint3D)
