//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/SurfaceDiamond2.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/DynamicMesh2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/DynamicMeshElement2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/DynamicMeshTriList2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/FastBucketPQ.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/SurfaceDiamond2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/SurfaceMesh2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/SurfaceTriList2.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/TriListElem.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/kernelND/SurfaceEvaluable.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@interface GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 () {
 @public
  jdouble area_;
  IOSObjectArray *triangles_;
  GeogebraCommonKernelMatrixCoords *normal_;
}

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelMatrixCoords *)approxNormalWithDouble:(jdouble)u
                                                  withDouble:(jdouble)v;

- (GeogebraCommonKernelMatrixCoords *)calcVertexWithDouble:(jdouble)u
                                                withDouble:(jdouble)v;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *)getOtherParentWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:(GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *)p;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2, triangles_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2, normal_, GeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_init__(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self);

__attribute__((unused)) static GeogebraCommonKernelMatrixCoords *GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_approxNormalWithDouble_withDouble_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, jdouble u, jdouble v);

__attribute__((unused)) static GeogebraCommonKernelMatrixCoords *GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_calcVertexWithDouble_withDouble_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, jdouble u, jdouble v);

__attribute__((unused)) static GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_getOtherParentWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *p);

@implementation GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2:(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *)mesh
                                                                     withInt:(jint)level
                                                                  withDouble:(jdouble)pa1
                                                                  withDouble:(jdouble)pa2
                                                                 withBoolean:(jboolean)isClipped
                                                                     withInt:(jint)version_ {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withInt_withDouble_withDouble_withBoolean_withInt_(self, mesh, level, pa1, pa2, isClipped, version_);
  return self;
}

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2:(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *)mesh
                 withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *)parent0
                                                                     withInt:(jint)index0
                 withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *)parent1
                                                                     withInt:(jint)index1
                 withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *)ancestor0
                 withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *)ancestor1
                                                                     withInt:(jint)level
                                                                     withInt:(jint)version_ {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withInt_(self, mesh, parent0, index0, parent1, index1, ancestor0, ancestor1, level, version_);
  return self;
}

- (void)init__ {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_init__(self);
}

- (GeogebraCommonKernelMatrixCoords *)approxNormalWithDouble:(jdouble)u
                                                  withDouble:(jdouble)v {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_approxNormalWithDouble_withDouble_(self, u, v);
}

- (void)calcMainVertexWithDouble:(jdouble)u
                      withDouble:(jdouble)v {
  id<GeogebraCommonKernelKernelNDSurfaceEvaluable> function = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *) check_class_cast(mesh_, [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 class])))) getFunction];
  GeogebraCommonKernelMatrixCoords *f = [((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) nil_chk(function)) evaluatePointWithDouble:u withDouble:v];
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *a0 = IOSObjectArray_Get(nil_chk(ancestors_), 0);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *a1 = IOSObjectArray_Get(ancestors_, 1);
  jboolean v2def = [((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(a0)) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self])) isDefined];
  jboolean v3def = [((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(a1)) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self])) isDefined];
  if (v2def != v3def) {
    jdouble ui = u;
    jdouble vi = v;
    jdouble du = (IOSDoubleArray_Get(nil_chk(a1->params_), 0) - IOSDoubleArray_Get(a0->params_, 0)) * 0.25;
    jdouble dv = (IOSDoubleArray_Get(a1->params_, 1) - IOSDoubleArray_Get(a0->params_, 1)) * 0.25;
    jboolean dir = v2def;
    GeogebraCommonKernelMatrixCoords *lo = [a0 getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
    GeogebraCommonKernelMatrixCoords *hi = [a1 getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
    if (dir ^ [((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isDefined]) {
      hi = f;
      ui -= du;
      vi -= dv;
    }
    else {
      lo = f;
      ui += du;
      vi += dv;
    }
    f = [function evaluatePointWithDouble:ui withDouble:vi];
    for (jint i = 0; i < 30; i++) {
      du *= 0.5;
      dv *= 0.5;
      if (dir ^ [((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isDefined]) {
        hi = f;
        ui -= du;
        vi -= dv;
      }
      else {
        lo = f;
        ui += du;
        vi += dv;
      }
      f = [function evaluatePointWithDouble:ui withDouble:vi];
    }
    GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_alt_(self, hi);
    f = lo;
    GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_ancestorDiff_(self, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ IOSDoubleArray_Get(a1->params_, 0) - IOSDoubleArray_Get(a0->params_, 0), IOSDoubleArray_Get(a1->params_, 1) - IOSDoubleArray_Get(a0->params_, 1) } count:2]);
    *IOSDoubleArray_GetRef(params_, 0) = ui;
    *IOSDoubleArray_GetRef(params_, 1) = vi;
    GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_originalParams_(self, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ u, v } count:2]);
  }
  else {
    jfloat d = 1e-6f;
    if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) {
      f = [function evaluatePointWithDouble:u + d withDouble:v];
      if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) {
        f = [function evaluatePointWithDouble:u withDouble:v + d];
        if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) {
          f = [function evaluatePointWithDouble:u - d withDouble:v];
          if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) f = [function evaluatePointWithDouble:u withDouble:v - d];
        }
      }
    }
  }
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_vertex_(self, f);
}

- (GeogebraCommonKernelMatrixCoords *)calcVertexWithDouble:(jdouble)u
                                                withDouble:(jdouble)v {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_calcVertexWithDouble_withDouble_(self, u, v);
}

- (jboolean)childCreatedWithInt:(jint)i {
  return IOSObjectArray_Get(nil_chk(children_), i) != nil;
}

- (void)createChildWithInt:(jint)i {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *parent = nil;
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *otherParent = nil;
  jint index;
  if (i < 2) {
    parent = (GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(nil_chk(parents_), 0), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]);
    if (i == 0) index = IOSIntArray_Get(nil_chk(indices_), 0) + 1;
    else index = IOSIntArray_Get(nil_chk(indices_), 0) - 1;
  }
  else {
    parent = (GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(nil_chk(parents_), 1), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]);
    if (i == 2) index = IOSIntArray_Get(nil_chk(indices_), 1) + 1;
    else index = IOSIntArray_Get(nil_chk(indices_), 1) - 1;
  }
  if (parent != nil) otherParent = (GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast([parent getChildWithInt:index & 3], [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]);
  jint parentIndex = i / 2;
  jint ancestorIndex = i == 1 || i == 2 ? 1 : 0;
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *a0 = (GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(nil_chk(parents_), parentIndex), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *a1 = IOSObjectArray_Get(nil_chk(ancestors_), ancestorIndex);
  jint otherIndex = i == 0 || i == 2 ? 1 : 0;
  if (otherParent != nil && IOSObjectArray_Get(otherParent->parents_, 1) == parent) otherIndex |= 2;
  if (i == 1 || i == 3) IOSObjectArray_SetAndConsume(nil_chk(children_), i, new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withInt_((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *) check_class_cast(mesh_, [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 class]), otherParent, otherIndex, self, i, a0, a1, level_ + 1, lastVersion_));
  else IOSObjectArray_SetAndConsume(nil_chk(children_), i, new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withInt_((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *) check_class_cast(mesh_, [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 class]), self, i, otherParent, otherIndex, a0, a1, level_ + 1, lastVersion_));
  if (otherParent != nil) [(otherParent) setChildWithInt:otherIndex withGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:IOSObjectArray_Get(nil_chk(children_), i)];
}

- (void)cullChildren {
  if (![self isSplit]) {
    return;
  }
  for (jint i = 0; i < 4; i += 2) {
    GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *child = (GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast([self getChildWithInt:i], [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]);
    if (child != nil) {
      if (self == [child getParentWithInt:0]) {
        if ([child childCreatedWithInt:0]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([child getChildWithInt:0])) updateCullInfo];
        if ([child childCreatedWithInt:1]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([child getChildWithInt:1])) updateCullInfo];
      }
      else {
        if ([child childCreatedWithInt:2]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([child getChildWithInt:2])) updateCullInfo];
        if ([child childCreatedWithInt:3]) [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk([child getChildWithInt:3])) updateCullInfo];
      }
    }
  }
}

- (void)freeTriangleWithInt:(jint)j {
  IOSObjectArray_Set(nil_chk(triangles_), j, nil);
}

- (void)generateError {
  GeogebraCommonKernelMatrixCoords *p0 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(nil_chk(parents_), 0), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class])))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *p1 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(parents_, 1), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class])))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *a0 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk((IOSObjectArray_Get(nil_chk(ancestors_), 0)))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *a1 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk((IOSObjectArray_Get(ancestors_, 1)))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *v0 = [((GeogebraCommonKernelMatrixCoords *) nil_chk(a0)) subWithGeogebraCommonKernelMatrixCoords:vertex_];
  GeogebraCommonKernelMatrixCoords *v1 = [((GeogebraCommonKernelMatrixCoords *) nil_chk(a1)) subWithGeogebraCommonKernelMatrixCoords:vertex_];
  GeogebraCommonKernelMatrixCoords *v2 = [((GeogebraCommonKernelMatrixCoords *) nil_chk(p0)) subWithGeogebraCommonKernelMatrixCoords:vertex_];
  GeogebraCommonKernelMatrixCoords *v3 = [((GeogebraCommonKernelMatrixCoords *) nil_chk(p1)) subWithGeogebraCommonKernelMatrixCoords:vertex_];
  jdouble vol0 = JavaLangMath_absWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(v0)) dotproductWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(v3)) crossProductWithGeogebraCommonKernelMatrixCoords:v1]]);
  jdouble vol1 = JavaLangMath_absWithDouble_([v0 dotproductWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(v2)) crossProductWithGeogebraCommonKernelMatrixCoords:v1]]);
  if (vol0 == 0.0 && vol1 == 0.0) {
    vol0 = JavaLangMath_absWithDouble_([v2 dotproductWithGeogebraCommonKernelMatrixCoords:[v3 crossProductWithGeogebraCommonKernelMatrixCoords:v1]]);
    vol1 = JavaLangMath_absWithDouble_([v2 dotproductWithGeogebraCommonKernelMatrixCoords:[v0 crossProductWithGeogebraCommonKernelMatrixCoords:v3]]);
  }
  if (JavaLangDouble_isNaNWithDouble_(vol0) || JavaLangDouble_isInfiniteWithDouble_(vol0)) *IOSDoubleArray_GetRef(nil_chk(errors_), 0) = area_ * area_ * GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_undefErrorConst;
  else *IOSDoubleArray_GetRef(nil_chk(errors_), 0) = vol0;
  if (JavaLangDouble_isNaNWithDouble_(vol1) || JavaLangDouble_isInfiniteWithDouble_(vol1)) *IOSDoubleArray_GetRef(nil_chk(errors_), 1) = area_ * area_ * GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_undefErrorConst;
  else *IOSDoubleArray_GetRef(nil_chk(errors_), 1) = vol1;
  if (IOSDoubleArray_Get(nil_chk(errors_), 0) == 0.0 || IOSDoubleArray_Get(errors_, 1) == 0.0) {
    jdouble alpha = 0.123456;
    jdouble nu = alpha * IOSDoubleArray_Get(nil_chk(params_), 0) + (1 - alpha) * IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(ancestors_, 0)))->params_, 0);
    jdouble nv = alpha * IOSDoubleArray_Get(params_, 1) + (1 - alpha) * IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(ancestors_, 0)))->params_, 1);
    nu = alpha * nu + (1 - alpha) * IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(parents_, 0), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]))))->params_, 0);
    nv = alpha * nv + (1 - alpha) * IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(parents_, 1), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]))))->params_, 1);
    GeogebraCommonKernelMatrixCoords *pt = GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_calcVertexWithDouble_withDouble_(self, nu, nv);
    if ([((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk(pt)) subWithGeogebraCommonKernelMatrixCoords:vertex_])) dotproductWithGeogebraCommonKernelMatrixCoords:[a0 subWithGeogebraCommonKernelMatrixCoords:pt]] < 0.99) *IOSDoubleArray_GetRef(errors_, 0) = *IOSDoubleArray_GetRef(errors_, 1) = area_ * 0.1;
  }
  jint fac = 0;
  if (![p0 isDefined]) fac++;
  if (![p1 isDefined]) fac++;
  if (![a0 isDefined]) fac++;
  if (![a1 isDefined]) fac++;
  if (fac == 4) *IOSDoubleArray_GetRef(errors_, 0) = *IOSDoubleArray_GetRef(errors_, 1) = 0;
  else if (fac > 2) {
    *IOSDoubleArray_GetRef(errors_, 0) *= 2.0;
    *IOSDoubleArray_GetRef(errors_, 1) *= 2.0;
  }
}

- (jdouble)getArea {
  return area_;
}

- (jdouble)getError {
  return JavaLangMath_maxWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(errors_), 0), IOSDoubleArray_Get(errors_, 1));
}

- (GeogebraCommonKernelMatrixCoords *)getNormal {
  return normal_;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *)getOtherParentWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:(GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *)p {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_getOtherParentWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2_(self, p);
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsTriListElem *)getTriangleWithInt:(jint)j {
  return IOSObjectArray_Get(nil_chk(triangles_), j);
}

- (GeogebraCommonKernelMatrixCoords *)getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *)o {
  if (alt_ == nil) return vertex_;
  if (((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(o))->vertex_ == nil) {
    jdouble c = (IOSDoubleArray_Get(nil_chk(o->params_), 0) - IOSDoubleArray_Get(params_, 0)) * IOSDoubleArray_Get(nil_chk(ancestorDiff_), 0) + (IOSDoubleArray_Get(o->params_, 1) - IOSDoubleArray_Get(params_, 1)) * IOSDoubleArray_Get(ancestorDiff_, 1);
    return c < 0 ? vertex_ : alt_;
  }
  if (o->alt_ != nil || [((GeogebraCommonKernelMatrixCoords *) nil_chk(o->vertex_)) isDefined]) return [((GeogebraCommonKernelMatrixCoords *) nil_chk(alt_)) isDefined] ? alt_ : vertex_;
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk(alt_)) isDefined] ? vertex_ : alt_;
}

- (jboolean)readyForMergeWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:(GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *)activeParent {
  return ![((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_getOtherParentWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2_(self, activeParent))) isSplit];
}

- (jboolean)recalculateWithInt:(jint)currentVersion
                   withBoolean:(jboolean)recurse {
  if (lastVersion_ == currentVersion) return NO;
  lastVersion_ = currentVersion;
  updateInDrawList_ = YES;
  [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk(IOSObjectArray_Get(nil_chk(parents_), 0))) recalculateWithInt:currentVersion withBoolean:NO];
  [((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *) nil_chk(IOSObjectArray_Get(parents_, 1))) recalculateWithInt:currentVersion withBoolean:NO];
  [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(nil_chk(ancestors_), 0))) recalculateWithInt:currentVersion withBoolean:NO];
  [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(ancestors_, 1))) recalculateWithInt:currentVersion withBoolean:NO];
  [self calcMainVertexWithDouble:IOSDoubleArray_Get(nil_chk(params_), 0) withDouble:IOSDoubleArray_Get(params_, 1)];
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_normal_(self, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_approxNormalWithDouble_withDouble_(self, IOSDoubleArray_Get(params_, 0), IOSDoubleArray_Get(params_, 1)));
  [self setBoundingBox];
  [self setArea];
  [self generateError];
  return YES;
}

- (void)reinsertInQueue {
  if (bucket_owner_ != nil) {
    GeogebraCommonGeogebra3DEuclidian3DPlotsFastBucketPQ *list = bucket_owner_;
    [list removeWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:self];
    [list addWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:self];
  }
}

- (void)setArea {
  if (IOSDoubleArray_Get(nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(nil_chk(ancestors_), 0)))->params_), 0) - IOSDoubleArray_Get(params_, 0) != 0) area_ = JavaLangMath_absWithDouble_((IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(ancestors_, 0)))->params_, 0) - IOSDoubleArray_Get(params_, 0)) * (IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(nil_chk(parents_), 0), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]))))->params_, 1) - IOSDoubleArray_Get(params_, 1)));
  else area_ = JavaLangMath_absWithDouble_((IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(nil_chk(parents_), 1), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class]))))->params_, 0) - IOSDoubleArray_Get(params_, 0)) * (IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(ancestors_, 0)))->params_, 1) - IOSDoubleArray_Get(params_, 1)));
}

- (void)setBoundingBox {
  GeogebraCommonKernelMatrixCoords *v1 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(nil_chk(ancestors_), 0))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *v2 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(IOSObjectArray_Get(ancestors_, 1))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *v3 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(nil_chk(parents_), 0), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class])))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *v4 = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) check_class_cast(IOSObjectArray_Get(parents_, 1), [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 class])))) getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self];
  GeogebraCommonKernelMatrixCoords *v5 = vertex_;
  jdouble x0, x1, y0, y1, z0, z1, x, y, z;
  IOSDoubleArray *xs = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ [((GeogebraCommonKernelMatrixCoords *) nil_chk(v2)) getX], [((GeogebraCommonKernelMatrixCoords *) nil_chk(v3)) getX], [((GeogebraCommonKernelMatrixCoords *) nil_chk(v4)) getX], [((GeogebraCommonKernelMatrixCoords *) nil_chk(v5)) getX] } count:4];
  IOSDoubleArray *ys = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ [v2 getY], [v3 getY], [v4 getY], [v5 getY] } count:4];
  IOSDoubleArray *zs = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ [v2 getZ], [v3 getZ], [v4 getZ], [v5 getZ] } count:4];
  x0 = x1 = [((GeogebraCommonKernelMatrixCoords *) nil_chk(v1)) getX];
  y0 = y1 = [v1 getY];
  z0 = z1 = [v1 getZ];
  for (jint i = 0; i < 4; i++) {
    x = IOSDoubleArray_Get(xs, i);
    y = IOSDoubleArray_Get(ys, i);
    z = IOSDoubleArray_Get(zs, i);
    if (JavaLangDouble_isNaNWithDouble_(x) || JavaLangDouble_isInfiniteWithDouble_(x)) {
      x0 = JavaLangDouble_NEGATIVE_INFINITY;
      x1 = JavaLangDouble_POSITIVE_INFINITY;
    }
    else {
      if (x0 > x) x0 = x;
      if (x1 < x) x1 = x;
    }
    if (JavaLangDouble_isNaNWithDouble_(y) || JavaLangDouble_isInfiniteWithDouble_(y)) {
      y0 = JavaLangDouble_NEGATIVE_INFINITY;
      y1 = JavaLangDouble_POSITIVE_INFINITY;
    }
    else {
      if (y0 > y) y0 = y;
      if (y1 < y) y1 = y;
    }
    if (JavaLangDouble_isNaNWithDouble_(z) || JavaLangDouble_isInfiniteWithDouble_(z)) {
      z0 = JavaLangDouble_NEGATIVE_INFINITY;
      z1 = JavaLangDouble_POSITIVE_INFINITY;
    }
    else {
      if (z0 > z) z0 = z;
      if (z1 < z) z1 = z;
    }
  }
  GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2_setAndConsume_boundingBox_(self, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ x0, x1, y0, y1, z0, z1 } count:6]);
}

- (void)setChildWithInt:(jint)i
withGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:(GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *)e {
  IOSObjectArray_Set(nil_chk(children_), i, e);
}

- (void)setHiddenWithBoolean:(jboolean)hide {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceTriList2 *t = (GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceTriList2 *) check_class_cast(((GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2 *) nil_chk(mesh_))->drawList_, [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceTriList2 class]);
  if (hide) {
    [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceTriList2 *) nil_chk(t)) hideWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self withInt:0];
    [t hideWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:self withInt:1];
  }
  else {
    [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceTriList2 *) nil_chk(t)) showWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:self withInt:0];
    [t showWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:self withInt:1];
  }
}

- (void)setTriangleWithInt:(jint)j
withGeogebraCommonGeogebra3DEuclidian3DPlotsTriListElem:(GeogebraCommonGeogebra3DEuclidian3DPlotsTriListElem *)e {
  IOSObjectArray_Set(nil_chk(triangles_), j, e);
}

- (void)dealloc {
  RELEASE_(errors_);
  RELEASE_(triangles_);
  RELEASE_(params_);
  RELEASE_(vertex_);
  RELEASE_(normal_);
  RELEASE_(alt_);
  RELEASE_(ancestorDiff_);
  RELEASE_(originalParams_);
  RELEASE_(ancestors_);
  RELEASE_(indices_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2:withInt:withDouble:withDouble:withBoolean:withInt:", "SurfaceDiamond2", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2:withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:withInt:withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:withInt:withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:withInt:withInt:", "SurfaceDiamond2", NULL, 0x0, NULL, NULL },
    { "init__", "init", "V", 0x2, NULL, NULL },
    { "approxNormalWithDouble:withDouble:", "approxNormal", "Lgeogebra.common.kernel.Matrix.Coords;", 0x2, NULL, NULL },
    { "calcMainVertexWithDouble:withDouble:", "calcMainVertex", "V", 0x0, NULL, NULL },
    { "calcVertexWithDouble:withDouble:", "calcVertex", "Lgeogebra.common.kernel.Matrix.Coords;", 0x2, NULL, NULL },
    { "childCreatedWithInt:", "childCreated", "Z", 0x1, NULL, NULL },
    { "createChildWithInt:", "createChild", "V", 0x4, NULL, NULL },
    { "cullChildren", NULL, "V", 0x4, NULL, NULL },
    { "freeTriangleWithInt:", "freeTriangle", "V", 0x1, NULL, NULL },
    { "generateError", NULL, "V", 0x0, NULL, NULL },
    { "getArea", NULL, "D", 0x1, NULL, NULL },
    { "getError", NULL, "D", 0x4, NULL, NULL },
    { "getNormal", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getOtherParentWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:", "getOtherParent", "Lgeogebra.common.geogebra3D.euclidian3D.plots.DynamicMeshElement2;", 0x2, NULL, NULL },
    { "getTriangleWithInt:", "getTriangle", "Lgeogebra.common.geogebra3D.euclidian3D.plots.TriListElem;", 0x1, NULL, NULL },
    { "getVertexWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2:", "getVertex", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "readyForMergeWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:", "readyForMerge", "Z", 0x1, NULL, NULL },
    { "recalculateWithInt:withBoolean:", "recalculate", "Z", 0x1, NULL, NULL },
    { "reinsertInQueue", NULL, "V", 0x4, NULL, NULL },
    { "setArea", NULL, "V", 0x1, NULL, NULL },
    { "setBoundingBox", NULL, "V", 0x0, NULL, NULL },
    { "setChildWithInt:withGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2:", "setChild", "V", 0x0, NULL, NULL },
    { "setHiddenWithBoolean:", "setHidden", "V", 0x4, NULL, NULL },
    { "setTriangleWithInt:withGeogebraCommonGeogebra3DEuclidian3DPlotsTriListElem:", "setTriangle", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "errors_", NULL, 0x0, "[D", NULL, NULL,  },
    { "area_", NULL, 0x2, "D", NULL, NULL,  },
    { "triangles_", NULL, 0x2, "[Lgeogebra.common.geogebra3D.euclidian3D.plots.TriListElem;", NULL, NULL,  },
    { "params_", NULL, 0x0, "[D", NULL, NULL,  },
    { "vertex_", NULL, 0x0, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "normal_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "alt_", NULL, 0x0, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "ancestorDiff_", NULL, 0x0, "[D", NULL, NULL,  },
    { "originalParams_", NULL, 0x0, "[D", NULL, NULL,  },
    { "ancestors_", NULL, 0x0, "[Lgeogebra.common.geogebra3D.euclidian3D.plots.SurfaceDiamond2;", NULL, NULL,  },
    { "indices_", NULL, 0x0, "[I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 = { 2, "SurfaceDiamond2", "geogebra.common.geogebra3D.euclidian3D.plots", NULL, 0x0, 25, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withInt_withDouble_withDouble_withBoolean_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *mesh, jint level, jdouble pa1, jdouble pa2, jboolean isClipped, jint version_) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_withInt_withBoolean_withInt_(self, mesh, level, isClipped, version_);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_errors_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_triangles_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonGeogebra3DEuclidian3DPlotsTriListElem_class_()]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_params_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_alt_(self, nil);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_ancestors_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_class_()]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_indices_(self, [IOSIntArray newArrayWithLength:2]);
  *IOSDoubleArray_GetRef(self->params_, 0) = pa1;
  *IOSDoubleArray_GetRef(self->params_, 1) = pa2;
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_vertex_(self, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_calcVertexWithDouble_withDouble_(self, pa1, pa2));
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_normal_(self, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_approxNormalWithDouble_withDouble_(self, pa1, pa2));
}

GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withInt_withDouble_withDouble_withBoolean_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *mesh, jint level, jdouble pa1, jdouble pa2, jboolean isClipped, jint version_) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self = [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 alloc];
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withInt_withDouble_withDouble_withBoolean_withInt_(self, mesh, level, pa1, pa2, isClipped, version_);
  return self;
}

void GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *mesh, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *parent0, jint index0, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *parent1, jint index1, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *ancestor0, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *ancestor1, jint level, jint version_) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMesh2_withInt_withBoolean_withInt_(self, mesh, level, ((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(ancestor0))->ignoreFlag_ || (((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(parent0))->ignoreFlag_ && ((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(parent1))->ignoreFlag_), version_);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_errors_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_triangles_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonGeogebra3DEuclidian3DPlotsTriListElem_class_()]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_params_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_alt_(self, nil);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_ancestors_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_class_()]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_setAndConsume_indices_(self, [IOSIntArray newArrayWithLength:2]);
  IOSObjectArray_Set(nil_chk(self->parents_), 0, parent0);
  IOSObjectArray_Set(self->parents_, 1, parent1);
  *IOSIntArray_GetRef(self->indices_, 0) = index0;
  *IOSIntArray_GetRef(self->indices_, 1) = index1;
  IOSObjectArray_Set(self->ancestors_, 0, ancestor0);
  IOSObjectArray_Set(self->ancestors_, 1, ancestor1);
  *IOSDoubleArray_GetRef(self->params_, 0) = (IOSDoubleArray_Get(ancestor0->params_, 0) + IOSDoubleArray_Get(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *) nil_chk(ancestor1))->params_, 0)) * 0.5;
  *IOSDoubleArray_GetRef(self->params_, 1) = (IOSDoubleArray_Get(ancestor0->params_, 1) + IOSDoubleArray_Get(ancestor1->params_, 1)) * 0.5;
  [self calcMainVertexWithDouble:IOSDoubleArray_Get(self->params_, 0) withDouble:IOSDoubleArray_Get(self->params_, 1)];
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_set_normal_(self, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_approxNormalWithDouble_withDouble_(self, IOSDoubleArray_Get(self->params_, 0), IOSDoubleArray_Get(self->params_, 1)));
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_init__(self);
}

GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *new_GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *mesh, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *parent0, jint index0, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *parent1, jint index1, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *ancestor0, GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *ancestor1, jint level, jint version_) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self = [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 alloc];
  GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_initWithGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withGeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_withInt_withInt_(self, mesh, parent0, index0, parent1, index1, ancestor0, ancestor1, level, version_);
  return self;
}

void GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_init__(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self) {
  [self setBoundingBox];
  [self setArea];
  [self generateError];
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_approxNormalWithDouble_withDouble_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, jdouble u, jdouble v) {
  GeogebraCommonKernelMatrixCoords *dx = GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_calcVertexWithDouble_withDouble_(self, u + GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_normalDelta, v);
  GeogebraCommonKernelMatrixCoords *dy = GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_calcVertexWithDouble_withDouble_(self, u, v + GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2_normalDelta);
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk(dx)) subWithGeogebraCommonKernelMatrixCoords:self->vertex_])) crossProductWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(dy)) subWithGeogebraCommonKernelMatrixCoords:self->vertex_]])) normalized];
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_calcVertexWithDouble_withDouble_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, jdouble u, jdouble v) {
  id<GeogebraCommonKernelKernelNDSurfaceEvaluable> function = [((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 *) check_class_cast(self->mesh_, [GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceMesh2 class])))) getFunction];
  GeogebraCommonKernelMatrixCoords *f = [((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) nil_chk(function)) evaluatePointWithDouble:u withDouble:v];
  jfloat d = 1e-6f;
  if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) {
    f = [function evaluatePointWithDouble:u + d withDouble:v];
    if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) {
      f = [function evaluatePointWithDouble:u withDouble:v + d];
      if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) {
        f = [function evaluatePointWithDouble:u - d withDouble:v];
        if (![((GeogebraCommonKernelMatrixCoords *) nil_chk(f)) isFinite] || ![f isDefined]) f = [function evaluatePointWithDouble:u withDouble:v - d];
      }
    }
  }
  return f;
}

GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2_getOtherParentWithGeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2_(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2 *self, GeogebraCommonGeogebra3DEuclidian3DPlotsDynamicMeshElement2 *p) {
  if (p == IOSObjectArray_Get(nil_chk(self->parents_), 0)) return IOSObjectArray_Get(self->parents_, 1);
  return IOSObjectArray_Get(self->parents_, 0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DPlotsSurfaceDiamond2)
