//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/CollectionUtils.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/reflect/Array.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Enumeration.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/Bag.h"
#include "org/apache/commons/collections15/BoundedCollection.h"
#include "org/apache/commons/collections15/Closure.h"
#include "org/apache/commons/collections15/CollectionUtils.h"
#include "org/apache/commons/collections15/Predicate.h"
#include "org/apache/commons/collections15/Transformer.h"
#include "org/apache/commons/collections15/collection/PredicatedCollection.h"
#include "org/apache/commons/collections15/collection/SynchronizedCollection.h"
#include "org/apache/commons/collections15/collection/TransformedCollection.h"
#include "org/apache/commons/collections15/collection/TypedCollection.h"
#include "org/apache/commons/collections15/collection/UnmodifiableBoundedCollection.h"
#include "org/apache/commons/collections15/collection/UnmodifiableCollection.h"

@interface OrgApacheCommonsCollections15CollectionUtils ()

+ (id)indexWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
                        withInt:(jint)idx;

+ (jint)getFreqWithId:(id)obj
      withJavaUtilMap:(id<JavaUtilMap>)freqMap;

@end

static JavaLangInteger *OrgApacheCommonsCollections15CollectionUtils_INTEGER_ONE_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15CollectionUtils, INTEGER_ONE_, JavaLangInteger *)
J2OBJC_STATIC_FIELD_SETTER(OrgApacheCommonsCollections15CollectionUtils, INTEGER_ONE_, JavaLangInteger *)

__attribute__((unused)) static id OrgApacheCommonsCollections15CollectionUtils_indexWithJavaUtilIterator_withInt_(id<JavaUtilIterator> iterator, jint idx);

__attribute__((unused)) static jint OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(id obj, id<JavaUtilMap> freqMap);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsCollections15CollectionUtils)

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_EMPTY_COLLECTION_;

@implementation OrgApacheCommonsCollections15CollectionUtils

- (instancetype)init {
  OrgApacheCommonsCollections15CollectionUtils_init(self);
  return self;
}

+ (id<JavaUtilCollection>)union__WithJavaUtilCollection:(id<JavaUtilCollection>)a
                                 withJavaUtilCollection:(id<JavaUtilCollection>)b {
  return OrgApacheCommonsCollections15CollectionUtils_union__WithJavaUtilCollection_withJavaUtilCollection_(a, b);
}

+ (id<JavaUtilCollection>)intersectionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                      withJavaUtilCollection:(id<JavaUtilCollection>)b {
  return OrgApacheCommonsCollections15CollectionUtils_intersectionWithJavaUtilCollection_withJavaUtilCollection_(a, b);
}

+ (id<JavaUtilCollection>)disjunctionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                     withJavaUtilCollection:(id<JavaUtilCollection>)b {
  return OrgApacheCommonsCollections15CollectionUtils_disjunctionWithJavaUtilCollection_withJavaUtilCollection_(a, b);
}

+ (id<JavaUtilCollection>)subtractWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                    withJavaLangIterable:(id<JavaLangIterable>)b {
  return OrgApacheCommonsCollections15CollectionUtils_subtractWithJavaUtilCollection_withJavaLangIterable_(a, b);
}

+ (jboolean)containsAnyWithJavaUtilCollection:(id<JavaUtilCollection>)coll1
                       withJavaUtilCollection:(id<JavaUtilCollection>)coll2 {
  return OrgApacheCommonsCollections15CollectionUtils_containsAnyWithJavaUtilCollection_withJavaUtilCollection_(coll1, coll2);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  OrgApacheCommonsCollections15CollectionUtils_mainWithNSStringArray_(args);
}

+ (id<JavaUtilMap>)getCardinalityMapWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  return OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(iterable);
}

+ (jboolean)isSubCollectionWithJavaLangIterable:(id<JavaLangIterable>)a
                           withJavaLangIterable:(id<JavaLangIterable>)b {
  return OrgApacheCommonsCollections15CollectionUtils_isSubCollectionWithJavaLangIterable_withJavaLangIterable_(a, b);
}

+ (jboolean)isProperSubCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                                 withJavaUtilCollection:(id<JavaUtilCollection>)b {
  return OrgApacheCommonsCollections15CollectionUtils_isProperSubCollectionWithJavaUtilCollection_withJavaUtilCollection_(a, b);
}

+ (jboolean)isEqualCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)a
                             withJavaUtilCollection:(id<JavaUtilCollection>)b {
  return OrgApacheCommonsCollections15CollectionUtils_isEqualCollectionWithJavaUtilCollection_withJavaUtilCollection_(a, b);
}

+ (jint)cardinalityWithId:(id)obj
   withJavaUtilCollection:(id<JavaUtilCollection>)coll {
  return OrgApacheCommonsCollections15CollectionUtils_cardinalityWithId_withJavaUtilCollection_(obj, coll);
}

+ (id)findWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  return OrgApacheCommonsCollections15CollectionUtils_findWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(iterable, predicate);
}

+ (void)forAllDoWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Closure:(id<OrgApacheCommonsCollections15Closure>)closure {
  OrgApacheCommonsCollections15CollectionUtils_forAllDoWithJavaLangIterable_withOrgApacheCommonsCollections15Closure_(iterable, closure);
}

+ (void)filterWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  OrgApacheCommonsCollections15CollectionUtils_filterWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(iterable, predicate);
}

+ (void)transformWithJavaUtilCollection:(id<JavaUtilCollection>)collection
withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer {
  OrgApacheCommonsCollections15CollectionUtils_transformWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(collection, transformer);
}

+ (jint)countMatchesWithJavaLangIterable:(id<JavaLangIterable>)inputIterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  return OrgApacheCommonsCollections15CollectionUtils_countMatchesWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(inputIterable, predicate);
}

+ (jboolean)existsWithJavaLangIterable:(id<JavaLangIterable>)iterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  return OrgApacheCommonsCollections15CollectionUtils_existsWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(iterable, predicate);
}

+ (id<JavaUtilCollection>)selectWithJavaUtilCollection:(id<JavaUtilCollection>)inputCollection
            withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  return OrgApacheCommonsCollections15CollectionUtils_selectWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(inputCollection, predicate);
}

+ (id)selectWithJavaLangIterable:(id<JavaLangIterable>)inputCollection
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate
          withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection {
  return OrgApacheCommonsCollections15CollectionUtils_selectWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(inputCollection, predicate, outputCollection);
}

+ (id<JavaUtilCollection>)selectRejectedWithJavaUtilCollection:(id<JavaUtilCollection>)inputCollection
                    withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  return OrgApacheCommonsCollections15CollectionUtils_selectRejectedWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(inputCollection, predicate);
}

+ (void)selectRejectedWithJavaLangIterable:(id<JavaLangIterable>)inputIterable
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate
                    withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection {
  OrgApacheCommonsCollections15CollectionUtils_selectRejectedWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(inputIterable, predicate, outputCollection);
}

+ (id<JavaUtilCollection>)collectWithJavaUtilCollection:(id<JavaUtilCollection>)inputCollection
           withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer {
  return OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(inputCollection, transformer);
}

+ (id<JavaUtilCollection>)collectWithJavaUtilIterator:(id<JavaUtilIterator>)inputIterator
         withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer {
  return OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_(inputIterator, transformer);
}

+ (id)collectWithJavaLangIterable:(id<JavaLangIterable>)inputCollection
withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer
           withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection {
  return OrgApacheCommonsCollections15CollectionUtils_collectWithJavaLangIterable_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(inputCollection, transformer, outputCollection);
}

+ (id)collectWithJavaUtilIterator:(id<JavaUtilIterator>)inputIterator
withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer
           withJavaUtilCollection:(id<JavaUtilCollection>)outputCollection {
  return OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(inputIterator, transformer, outputCollection);
}

+ (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                withJavaUtilIterator:(id<JavaUtilIterator>)iterator {
  OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withJavaUtilIterator_(collection, iterator);
}

+ (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection
             withJavaUtilEnumeration:(id<JavaUtilEnumeration>)enumeration {
  OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withJavaUtilEnumeration_(collection, enumeration);
}

+ (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                   withNSObjectArray:(IOSObjectArray *)elements {
  OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withNSObjectArray_(collection, elements);
}

+ (id)indexWithId:(id)obj
          withInt:(jint)idx {
  return OrgApacheCommonsCollections15CollectionUtils_indexWithId_withInt_(obj, idx);
}

+ (id)indexWithId:(id)obj
           withId:(id)index {
  return OrgApacheCommonsCollections15CollectionUtils_indexWithId_withId_(obj, index);
}

+ (id)indexWithJavaUtilIterator:(id<JavaUtilIterator>)iterator
                        withInt:(jint)idx {
  return OrgApacheCommonsCollections15CollectionUtils_indexWithJavaUtilIterator_withInt_(iterator, idx);
}

+ (id)getWithId:(id)object
        withInt:(jint)index {
  return OrgApacheCommonsCollections15CollectionUtils_getWithId_withInt_(object, index);
}

+ (jint)sizeWithId:(id)object {
  return OrgApacheCommonsCollections15CollectionUtils_sizeWithId_(object);
}

+ (void)reverseArrayWithNSObjectArray:(IOSObjectArray *)array {
  OrgApacheCommonsCollections15CollectionUtils_reverseArrayWithNSObjectArray_(array);
}

+ (jint)getFreqWithId:(id)obj
      withJavaUtilMap:(id<JavaUtilMap>)freqMap {
  return OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, freqMap);
}

+ (jboolean)isFullWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  return OrgApacheCommonsCollections15CollectionUtils_isFullWithJavaUtilCollection_(coll);
}

+ (jint)maxSizeWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  return OrgApacheCommonsCollections15CollectionUtils_maxSizeWithJavaUtilCollection_(coll);
}

+ (id<JavaUtilCollection>)synchronizedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return OrgApacheCommonsCollections15CollectionUtils_synchronizedCollectionWithJavaUtilCollection_(collection);
}

+ (id<JavaUtilCollection>)unmodifiableCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return OrgApacheCommonsCollections15CollectionUtils_unmodifiableCollectionWithJavaUtilCollection_(collection);
}

+ (id<JavaUtilCollection>)predicatedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                          withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  return OrgApacheCommonsCollections15CollectionUtils_predicatedCollectionWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(collection, predicate);
}

+ (id<JavaUtilCollection>)typedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                                                   withIOSClass:(IOSClass *)type {
  return OrgApacheCommonsCollections15CollectionUtils_typedCollectionWithJavaUtilCollection_withIOSClass_(collection, type);
}

+ (id<JavaUtilCollection>)transformedCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                         withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer {
  return OrgApacheCommonsCollections15CollectionUtils_transformedCollectionWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(collection, transformer);
}

+ (void)initialize {
  if (self == [OrgApacheCommonsCollections15CollectionUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsCollections15CollectionUtils_INTEGER_ONE_, nil, new_JavaLangInteger_initWithInt_(1));
    JreStrongAssign(&OrgApacheCommonsCollections15CollectionUtils_EMPTY_COLLECTION_, nil, OrgApacheCommonsCollections15CollectionUnmodifiableCollection_decorateWithJavaUtilCollection_([new_JavaUtilArrayList_init() autorelease]));
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsCollections15CollectionUtils)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CollectionUtils", NULL, 0x1, NULL, NULL },
    { "union__WithJavaUtilCollection:withJavaUtilCollection:", "union", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;Ljava/util/Collection<+TE;>;)Ljava/util/Collection<TE;>;" },
    { "intersectionWithJavaUtilCollection:withJavaUtilCollection:", "intersection", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;Ljava/util/Collection<+TE;>;)Ljava/util/Collection<TE;>;" },
    { "disjunctionWithJavaUtilCollection:withJavaUtilCollection:", "disjunction", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Ljava/util/Collection<TE;>;)Ljava/util/Collection<TE;>;" },
    { "subtractWithJavaUtilCollection:withJavaLangIterable:", "subtract", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;Ljava/lang/Iterable<+TE;>;)Ljava/util/Collection<TE;>;" },
    { "containsAnyWithJavaUtilCollection:withJavaUtilCollection:", "containsAny", "Z", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;Ljava/util/Collection<+TE;>;)Z" },
    { "mainWithNSStringArray:", "main", "V", 0x9, NULL, NULL },
    { "getCardinalityMapWithJavaLangIterable:", "getCardinalityMap", "Ljava.util.Map;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<TE;>;)Ljava/util/Map<TE;Ljava/lang/Integer;>;" },
    { "isSubCollectionWithJavaLangIterable:withJavaLangIterable:", "isSubCollection", "Z", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<+TE;>;Ljava/lang/Iterable<+TE;>;)Z" },
    { "isProperSubCollectionWithJavaUtilCollection:withJavaUtilCollection:", "isProperSubCollection", "Z", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;Ljava/util/Collection<+TE;>;)Z" },
    { "isEqualCollectionWithJavaUtilCollection:withJavaUtilCollection:", "isEqualCollection", "Z", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;Ljava/util/Collection<+TE;>;)Z" },
    { "cardinalityWithId:withJavaUtilCollection:", "cardinality", "I", 0x9, NULL, "<E:Ljava/lang/Object;>(TE;Ljava/util/Collection<-TE;>;)I" },
    { "findWithJavaLangIterable:withOrgApacheCommonsCollections15Predicate:", "find", "TE;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)TE;" },
    { "forAllDoWithJavaLangIterable:withOrgApacheCommonsCollections15Closure:", "forAllDo", "V", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<TE;>;Lorg/apache/commons/collections15/Closure<-TE;>;)V" },
    { "filterWithJavaLangIterable:withOrgApacheCommonsCollections15Predicate:", "filter", "V", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)V" },
    { "transformWithJavaUtilCollection:withOrgApacheCommonsCollections15Transformer:", "transform", "V", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Lorg/apache/commons/collections15/Transformer<-TE;+TE;>;)V" },
    { "countMatchesWithJavaLangIterable:withOrgApacheCommonsCollections15Predicate:", "countMatches", "I", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)I" },
    { "existsWithJavaLangIterable:withOrgApacheCommonsCollections15Predicate:", "exists", "Z", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)Z" },
    { "selectWithJavaUtilCollection:withOrgApacheCommonsCollections15Predicate:", "select", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)Ljava/util/Collection<TE;>;" },
    { "selectWithJavaLangIterable:withOrgApacheCommonsCollections15Predicate:withJavaUtilCollection:", "select", "TC;", 0x9, NULL, "<E:Ljava/lang/Object;C::Ljava/util/Collection<-TE;>;>(Ljava/lang/Iterable<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;TC;)TC;" },
    { "selectRejectedWithJavaUtilCollection:withOrgApacheCommonsCollections15Predicate:", "selectRejected", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)Ljava/util/Collection<TE;>;" },
    { "selectRejectedWithJavaLangIterable:withOrgApacheCommonsCollections15Predicate:withJavaUtilCollection:", "selectRejected", "V", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/lang/Iterable<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;Ljava/util/Collection<-TE;>;)V" },
    { "collectWithJavaUtilCollection:withOrgApacheCommonsCollections15Transformer:", "collect", "Ljava.util.Collection;", 0x9, NULL, "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Ljava/util/Collection<TI;>;Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;)Ljava/util/Collection<TO;>;" },
    { "collectWithJavaUtilIterator:withOrgApacheCommonsCollections15Transformer:", "collect", "Ljava.util.Collection;", 0x9, NULL, "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Ljava/util/Iterator<TI;>;Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;)Ljava/util/Collection<TO;>;" },
    { "collectWithJavaLangIterable:withOrgApacheCommonsCollections15Transformer:withJavaUtilCollection:", "collect", "TC;", 0x9, NULL, "<I:Ljava/lang/Object;O:Ljava/lang/Object;C::Ljava/util/Collection<TO;>;>(Ljava/lang/Iterable<TI;>;Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;TC;)TC;" },
    { "collectWithJavaUtilIterator:withOrgApacheCommonsCollections15Transformer:withJavaUtilCollection:", "collect", "TC;", 0x9, NULL, "<I:Ljava/lang/Object;O:Ljava/lang/Object;C::Ljava/util/Collection<TO;>;>(Ljava/util/Iterator<TI;>;Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;TC;)TC;" },
    { "addAllWithJavaUtilCollection:withJavaUtilIterator:", "addAll", "V", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Ljava/util/Iterator<+TE;>;)V" },
    { "addAllWithJavaUtilCollection:withJavaUtilEnumeration:", "addAll", "V", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Ljava/util/Enumeration<+TE;>;)V" },
    { "addAllWithJavaUtilCollection:withNSObjectArray:", "addAll", "V", 0x89, NULL, "<E:Ljava/lang/Object;T:TE;>(Ljava/util/Collection<TE;>;[TT;)V" },
    { "indexWithId:withInt:", "index", "Ljava.lang.Object;", 0x9, NULL, NULL },
    { "indexWithId:withId:", "index", "Ljava.lang.Object;", 0x9, NULL, NULL },
    { "indexWithJavaUtilIterator:withInt:", "index", "Ljava.lang.Object;", 0xa, NULL, NULL },
    { "getWithId:withInt:", "get", "Ljava.lang.Object;", 0x9, NULL, NULL },
    { "sizeWithId:", "size", "I", 0x9, NULL, NULL },
    { "reverseArrayWithNSObjectArray:", "reverseArray", "V", 0x9, NULL, NULL },
    { "getFreqWithId:withJavaUtilMap:", "getFreq", "I", 0x1a, NULL, NULL },
    { "isFullWithJavaUtilCollection:", "isFull", "Z", 0x9, NULL, NULL },
    { "maxSizeWithJavaUtilCollection:", "maxSize", "I", 0x9, NULL, NULL },
    { "synchronizedCollectionWithJavaUtilCollection:", "synchronizedCollection", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;)Ljava/util/Collection<TE;>;" },
    { "unmodifiableCollectionWithJavaUtilCollection:", "unmodifiableCollection", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;)Ljava/util/Collection<TE;>;" },
    { "predicatedCollectionWithJavaUtilCollection:withOrgApacheCommonsCollections15Predicate:", "predicatedCollection", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)Ljava/util/Collection<TE;>;" },
    { "typedCollectionWithJavaUtilCollection:withIOSClass:", "typedCollection", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Ljava/lang/Class<TE;>;)Ljava/util/Collection<TE;>;" },
    { "transformedCollectionWithJavaUtilCollection:withOrgApacheCommonsCollections15Transformer:", "transformedCollection", "Ljava.util.Collection;", 0x9, NULL, "<I:Ljava/lang/Object;O:Ljava/lang/Object;>(Ljava/util/Collection<TI;>;Lorg/apache/commons/collections15/Transformer<-TI;+TO;>;)Ljava/util/Collection<TO;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INTEGER_ONE_", NULL, 0xa, "Ljava.lang.Integer;", &OrgApacheCommonsCollections15CollectionUtils_INTEGER_ONE_, NULL,  },
    { "EMPTY_COLLECTION_", NULL, 0x19, "Ljava.util.Collection;", &OrgApacheCommonsCollections15CollectionUtils_EMPTY_COLLECTION_, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15CollectionUtils = { 2, "CollectionUtils", "org.apache.commons.collections15", NULL, 0x1, 43, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsCollections15CollectionUtils;
}

@end

void OrgApacheCommonsCollections15CollectionUtils_init(OrgApacheCommonsCollections15CollectionUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsCollections15CollectionUtils *new_OrgApacheCommonsCollections15CollectionUtils_init() {
  OrgApacheCommonsCollections15CollectionUtils *self = [OrgApacheCommonsCollections15CollectionUtils alloc];
  OrgApacheCommonsCollections15CollectionUtils_init(self);
  return self;
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_union__WithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaUtilArrayList *list = [new_JavaUtilArrayList_init() autorelease];
  id<JavaUtilMap> mapa = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(a);
  id<JavaUtilMap> mapb = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(b);
  id<JavaUtilSet> elts = [new_JavaUtilHashSet_initWithJavaUtilCollection_(a) autorelease];
  [elts addAllWithJavaUtilCollection:b];
  id<JavaUtilIterator> it = [elts iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id obj = [it next];
    for (jint i = 0, m = JavaLangMath_maxWithInt_withInt_(OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapa), OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapb)); i < m; i++) {
      [list addWithId:obj];
    }
  }
  return list;
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_intersectionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaUtilArrayList *list = [new_JavaUtilArrayList_init() autorelease];
  id<JavaUtilMap> mapa = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(a);
  id<JavaUtilMap> mapb = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(b);
  id<JavaUtilSet> elts = [new_JavaUtilHashSet_initWithJavaUtilCollection_(a) autorelease];
  [elts addAllWithJavaUtilCollection:b];
  id<JavaUtilIterator> it = [elts iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id obj = [it next];
    for (jint i = 0, m = JavaLangMath_minWithInt_withInt_(OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapa), OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapb)); i < m; i++) {
      [list addWithId:obj];
    }
  }
  return list;
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_disjunctionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaUtilArrayList *list = [new_JavaUtilArrayList_init() autorelease];
  id<JavaUtilMap> mapa = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(a);
  id<JavaUtilMap> mapb = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(b);
  id<JavaUtilSet> elts = [new_JavaUtilHashSet_initWithJavaUtilCollection_(a) autorelease];
  [elts addAllWithJavaUtilCollection:b];
  id<JavaUtilIterator> it = [elts iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id obj = [it next];
    for (jint i = 0, m = ((JavaLangMath_maxWithInt_withInt_(OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapa), OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapb))) - (JavaLangMath_minWithInt_withInt_(OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapa), OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapb)))); i < m; i++) {
      [list addWithId:obj];
    }
  }
  return list;
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_subtractWithJavaUtilCollection_withJavaLangIterable_(id<JavaUtilCollection> a, id<JavaLangIterable> b) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaUtilArrayList *list = [new_JavaUtilArrayList_initWithJavaUtilCollection_(a) autorelease];
  for (id __strong e in nil_chk(b)) {
    [list removeWithId:e];
  }
  return list;
}

jboolean OrgApacheCommonsCollections15CollectionUtils_containsAnyWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> coll1, id<JavaUtilCollection> coll2) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if ([((id<JavaUtilCollection>) nil_chk(coll1)) size] < [((id<JavaUtilCollection>) nil_chk(coll2)) size]) {
    for (id<JavaUtilIterator> it = [coll1 iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      if ([coll2 containsWithId:[it next]]) {
        return YES;
      }
    }
  }
  else {
    for (id<JavaUtilIterator> it = [coll2 iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      if ([coll1 containsWithId:[it next]]) {
        return YES;
      }
    }
  }
  return NO;
}

void OrgApacheCommonsCollections15CollectionUtils_mainWithNSStringArray_(IOSObjectArray *args) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  id<JavaUtilList> l1 = [new_JavaUtilArrayList_init() autorelease];
  [l1 addWithId:@"Test"];
  id<JavaUtilList> l2 = [new_JavaUtilArrayList_init() autorelease];
  [l2 addWithId:JavaLangInteger_valueOfWithInt_(1)];
  OrgApacheCommonsCollections15CollectionUtils_containsAnyWithJavaUtilCollection_withJavaUtilCollection_(l1, l2);
}

id<JavaUtilMap> OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(id<JavaLangIterable> iterable) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  id<JavaUtilMap> count = [new_JavaUtilHashMap_init() autorelease];
  for (id<JavaUtilIterator> it = [((id<JavaLangIterable>) nil_chk(iterable)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id obj = [it next];
    JavaLangInteger *c = [count getWithId:obj];
    if (c == nil) {
      [count putWithId:obj withId:OrgApacheCommonsCollections15CollectionUtils_INTEGER_ONE_];
    }
    else {
      [count putWithId:obj withId:[new_JavaLangInteger_initWithInt_([c intValue] + 1) autorelease]];
    }
  }
  return count;
}

jboolean OrgApacheCommonsCollections15CollectionUtils_isSubCollectionWithJavaLangIterable_withJavaLangIterable_(id<JavaLangIterable> a, id<JavaLangIterable> b) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  id<JavaUtilMap> mapa = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(a);
  id<JavaUtilMap> mapb = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(b);
  for (id __strong obj in nil_chk(a)) {
    if (OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapa) > OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapb)) {
      return NO;
    }
  }
  return YES;
}

jboolean OrgApacheCommonsCollections15CollectionUtils_isProperSubCollectionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return ([((id<JavaUtilCollection>) nil_chk(a)) size] < [((id<JavaUtilCollection>) nil_chk(b)) size]) && OrgApacheCommonsCollections15CollectionUtils_isSubCollectionWithJavaLangIterable_withJavaLangIterable_(a, b);
}

jboolean OrgApacheCommonsCollections15CollectionUtils_isEqualCollectionWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> a, id<JavaUtilCollection> b) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if ([((id<JavaUtilCollection>) nil_chk(a)) size] != [((id<JavaUtilCollection>) nil_chk(b)) size]) {
    return NO;
  }
  else {
    id<JavaUtilMap> mapa = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(a);
    id<JavaUtilMap> mapb = OrgApacheCommonsCollections15CollectionUtils_getCardinalityMapWithJavaLangIterable_(b);
    if ([((id<JavaUtilMap>) nil_chk(mapa)) size] != [((id<JavaUtilMap>) nil_chk(mapb)) size]) {
      return NO;
    }
    else {
      id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([mapa keySet])) iterator];
      while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
        id obj = [it next];
        if (OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapa) != OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(obj, mapb)) {
          return NO;
        }
      }
      return YES;
    }
  }
}

jint OrgApacheCommonsCollections15CollectionUtils_cardinalityWithId_withJavaUtilCollection_(id obj, id<JavaUtilCollection> coll) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if ([JavaUtilSet_class_() isInstance:coll]) {
    return ([((id<JavaUtilCollection>) nil_chk(coll)) containsWithId:obj] ? 1 : 0);
  }
  if ([OrgApacheCommonsCollections15Bag_class_() isInstance:coll]) {
    return [((id<OrgApacheCommonsCollections15Bag>) nil_chk(((id<OrgApacheCommonsCollections15Bag>) check_protocol_cast(coll, @protocol(OrgApacheCommonsCollections15Bag))))) getCountWithId:obj];
  }
  jint count = 0;
  if (obj == nil) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(coll)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      if ([it next] == nil) {
        count++;
      }
    }
  }
  else {
    for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(coll)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      if ([obj isEqual:[it next]]) {
        count++;
      }
    }
  }
  return count;
}

id OrgApacheCommonsCollections15CollectionUtils_findWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (iterable != nil && predicate != nil) {
    for (id<JavaUtilIterator> iter = [iterable iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      id item = [iter next];
      if ([predicate evaluateWithId:item]) {
        return item;
      }
    }
  }
  return nil;
}

void OrgApacheCommonsCollections15CollectionUtils_forAllDoWithJavaLangIterable_withOrgApacheCommonsCollections15Closure_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Closure> closure) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (iterable != nil && closure != nil) {
    for (id<JavaUtilIterator> it = [iterable iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      [closure executeWithId:[it next]];
    }
  }
}

void OrgApacheCommonsCollections15CollectionUtils_filterWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (iterable != nil && predicate != nil) {
    for (id<JavaUtilIterator> it = [iterable iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      if ([predicate evaluateWithId:[it next]] == NO) {
        [it remove];
      }
    }
  }
}

void OrgApacheCommonsCollections15CollectionUtils_transformWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilCollection> collection, id<OrgApacheCommonsCollections15Transformer> transformer) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (collection != nil && transformer != nil) {
    if ([JavaUtilList_class_() isInstance:collection]) {
      id<JavaUtilList> list = (id<JavaUtilList>) check_protocol_cast(collection, @protocol(JavaUtilList));
      for (id<JavaUtilListIterator> it = [list listIterator]; [((id<JavaUtilListIterator>) nil_chk(it)) hasNext]; ) {
        [it setWithId:[transformer transformWithId:[it next]]];
      }
    }
    else {
      id<JavaUtilCollection> resultCollection = OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(collection, transformer);
      [collection clear];
      [collection addAllWithJavaUtilCollection:resultCollection];
    }
  }
}

jint OrgApacheCommonsCollections15CollectionUtils_countMatchesWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> inputIterable, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  jint count = 0;
  if (inputIterable != nil && predicate != nil) {
    for (id<JavaUtilIterator> it = [inputIterable iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      if ([predicate evaluateWithId:[it next]]) {
        count++;
      }
    }
  }
  return count;
}

jboolean OrgApacheCommonsCollections15CollectionUtils_existsWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_(id<JavaLangIterable> iterable, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (iterable != nil && predicate != nil) {
    for (id<JavaUtilIterator> it = [iterable iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      if ([predicate evaluateWithId:[it next]]) {
        return YES;
      }
    }
  }
  return NO;
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_selectWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> inputCollection, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return ((JavaUtilArrayList *) OrgApacheCommonsCollections15CollectionUtils_selectWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(inputCollection, predicate, [new_JavaUtilArrayList_initWithInt_([((id<JavaUtilCollection>) nil_chk(inputCollection)) size]) autorelease]));
}

id OrgApacheCommonsCollections15CollectionUtils_selectWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(id<JavaLangIterable> inputCollection, id<OrgApacheCommonsCollections15Predicate> predicate, id<JavaUtilCollection> outputCollection) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (inputCollection != nil && predicate != nil) {
    for (id<JavaUtilIterator> iter = [inputCollection iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      id item = [iter next];
      if ([predicate evaluateWithId:item]) {
        [((id<JavaUtilCollection>) nil_chk(outputCollection)) addWithId:item];
      }
    }
  }
  return outputCollection;
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_selectRejectedWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> inputCollection, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaUtilArrayList *answer = [new_JavaUtilArrayList_initWithInt_([((id<JavaUtilCollection>) nil_chk(inputCollection)) size]) autorelease];
  OrgApacheCommonsCollections15CollectionUtils_selectRejectedWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(inputCollection, predicate, answer);
  return answer;
}

void OrgApacheCommonsCollections15CollectionUtils_selectRejectedWithJavaLangIterable_withOrgApacheCommonsCollections15Predicate_withJavaUtilCollection_(id<JavaLangIterable> inputIterable, id<OrgApacheCommonsCollections15Predicate> predicate, id<JavaUtilCollection> outputCollection) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (inputIterable != nil && predicate != nil) {
    for (id<JavaUtilIterator> iter = [inputIterable iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      id item = [iter next];
      if ([predicate evaluateWithId:item] == NO) {
        [((id<JavaUtilCollection>) nil_chk(outputCollection)) addWithId:item];
      }
    }
  }
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilCollection> inputCollection, id<OrgApacheCommonsCollections15Transformer> transformer) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaUtilArrayList *answer = [new_JavaUtilArrayList_initWithInt_([((id<JavaUtilCollection>) nil_chk(inputCollection)) size]) autorelease];
  OrgApacheCommonsCollections15CollectionUtils_collectWithJavaLangIterable_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(inputCollection, transformer, answer);
  return answer;
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilIterator> inputIterator, id<OrgApacheCommonsCollections15Transformer> transformer) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaUtilArrayList *answer = [new_JavaUtilArrayList_init() autorelease];
  OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(inputIterator, transformer, answer);
  return answer;
}

id OrgApacheCommonsCollections15CollectionUtils_collectWithJavaLangIterable_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(id<JavaLangIterable> inputCollection, id<OrgApacheCommonsCollections15Transformer> transformer, id<JavaUtilCollection> outputCollection) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (inputCollection != nil) {
    return ((id<JavaUtilCollection>) OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_([inputCollection iterator], transformer, outputCollection));
  }
  return outputCollection;
}

id OrgApacheCommonsCollections15CollectionUtils_collectWithJavaUtilIterator_withOrgApacheCommonsCollections15Transformer_withJavaUtilCollection_(id<JavaUtilIterator> inputIterator, id<OrgApacheCommonsCollections15Transformer> transformer, id<JavaUtilCollection> outputCollection) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (inputIterator != nil && transformer != nil) {
    while ([inputIterator hasNext]) {
      id item = [inputIterator next];
      id value = [transformer transformWithId:item];
      [((id<JavaUtilCollection>) nil_chk(outputCollection)) addWithId:value];
    }
  }
  return outputCollection;
}

void OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withJavaUtilIterator_(id<JavaUtilCollection> collection, id<JavaUtilIterator> iterator) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    [((id<JavaUtilCollection>) nil_chk(collection)) addWithId:[iterator next]];
  }
}

void OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withJavaUtilEnumeration_(id<JavaUtilCollection> collection, id<JavaUtilEnumeration> enumeration) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  while ([((id<JavaUtilEnumeration>) nil_chk(enumeration)) hasMoreElements]) {
    [((id<JavaUtilCollection>) nil_chk(collection)) addWithId:[enumeration nextElement]];
  }
}

void OrgApacheCommonsCollections15CollectionUtils_addAllWithJavaUtilCollection_withNSObjectArray_(id<JavaUtilCollection> collection, IOSObjectArray *elements) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  for (jint i = 0, size = ((IOSObjectArray *) nil_chk(elements))->size_; i < size; i++) {
    [((id<JavaUtilCollection>) nil_chk(collection)) addWithId:IOSObjectArray_Get(elements, i)];
  }
}

id OrgApacheCommonsCollections15CollectionUtils_indexWithId_withInt_(id obj, jint idx) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return OrgApacheCommonsCollections15CollectionUtils_indexWithId_withId_(obj, [new_JavaLangInteger_initWithInt_(idx) autorelease]);
}

id OrgApacheCommonsCollections15CollectionUtils_indexWithId_withId_(id obj, id index) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if ([JavaUtilMap_class_() isInstance:obj]) {
    id<JavaUtilMap> map = (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap));
    if ([((id<JavaUtilMap>) nil_chk(map)) containsKeyWithId:index]) {
      return [map getWithId:index];
    }
  }
  jint idx = -1;
  if ([index isKindOfClass:[JavaLangInteger class]]) {
    idx = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) check_class_cast(index, [JavaLangInteger class])))) intValue];
  }
  if (idx < 0) {
    return obj;
  }
  else if ([JavaUtilMap_class_() isInstance:obj]) {
    id<JavaUtilMap> map = (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap));
    id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(map)) keySet])) iterator];
    return OrgApacheCommonsCollections15CollectionUtils_indexWithJavaUtilIterator_withInt_(iterator, idx);
  }
  else if ([JavaUtilList_class_() isInstance:obj]) {
    return [((id<JavaUtilList>) nil_chk(((id<JavaUtilList>) check_protocol_cast(obj, @protocol(JavaUtilList))))) getWithInt:idx];
  }
  else if ([IOSClass_arrayType(NSObject_class_(), 1) isInstance:obj]) {
    return IOSObjectArray_Get(nil_chk(((IOSObjectArray *) check_class_cast(obj, [IOSObjectArray class]))), idx);
  }
  else if ([JavaUtilEnumeration_class_() isInstance:obj]) {
    id<JavaUtilEnumeration> it = (id<JavaUtilEnumeration>) check_protocol_cast(obj, @protocol(JavaUtilEnumeration));
    while ([((id<JavaUtilEnumeration>) nil_chk(it)) hasMoreElements]) {
      idx--;
      if (idx == -1) {
        return [it nextElement];
      }
      else {
        [it nextElement];
      }
    }
  }
  else if ([JavaUtilIterator_class_() isInstance:obj]) {
    return OrgApacheCommonsCollections15CollectionUtils_indexWithJavaUtilIterator_withInt_((id<JavaUtilIterator>) check_protocol_cast(obj, @protocol(JavaUtilIterator)), idx);
  }
  else if ([JavaUtilCollection_class_() isInstance:obj]) {
    id<JavaUtilIterator> iterator = [((id<JavaUtilCollection>) nil_chk(((id<JavaUtilCollection>) check_protocol_cast(obj, @protocol(JavaUtilCollection))))) iterator];
    return OrgApacheCommonsCollections15CollectionUtils_indexWithJavaUtilIterator_withInt_(iterator, idx);
  }
  return obj;
}

id OrgApacheCommonsCollections15CollectionUtils_indexWithJavaUtilIterator_withInt_(id<JavaUtilIterator> iterator, jint idx) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    idx--;
    if (idx == -1) {
      return [iterator next];
    }
    else {
      [iterator next];
    }
  }
  return iterator;
}

id OrgApacheCommonsCollections15CollectionUtils_getWithId_withInt_(id object, jint index) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (index < 0) {
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I", @"Index cannot be negative: ", index)) autorelease];
  }
  if ([JavaUtilMap_class_() isInstance:object]) {
    id<JavaUtilMap> map = (id<JavaUtilMap>) check_protocol_cast(object, @protocol(JavaUtilMap));
    id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) iterator];
    return OrgApacheCommonsCollections15CollectionUtils_getWithId_withInt_(iterator, index);
  }
  else if ([JavaUtilList_class_() isInstance:object]) {
    return [((id<JavaUtilList>) nil_chk(((id<JavaUtilList>) check_protocol_cast(object, @protocol(JavaUtilList))))) getWithInt:index];
  }
  else if ([IOSClass_arrayType(NSObject_class_(), 1) isInstance:object]) {
    return IOSObjectArray_Get(nil_chk(((IOSObjectArray *) check_class_cast(object, [IOSObjectArray class]))), index);
  }
  else if ([JavaUtilIterator_class_() isInstance:object]) {
    id<JavaUtilIterator> it = (id<JavaUtilIterator>) check_protocol_cast(object, @protocol(JavaUtilIterator));
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      index--;
      if (index == -1) {
        return [it next];
      }
      else {
        [it next];
      }
    }
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I", @"Entry does not exist: ", index)) autorelease];
  }
  else if ([JavaUtilCollection_class_() isInstance:object]) {
    id<JavaUtilIterator> iterator = [((id<JavaUtilCollection>) nil_chk(((id<JavaUtilCollection>) check_protocol_cast(object, @protocol(JavaUtilCollection))))) iterator];
    return OrgApacheCommonsCollections15CollectionUtils_getWithId_withInt_(iterator, index);
  }
  else if ([JavaUtilEnumeration_class_() isInstance:object]) {
    id<JavaUtilEnumeration> it = (id<JavaUtilEnumeration>) check_protocol_cast(object, @protocol(JavaUtilEnumeration));
    while ([((id<JavaUtilEnumeration>) nil_chk(it)) hasMoreElements]) {
      index--;
      if (index == -1) {
        return [it nextElement];
      }
      else {
        [it nextElement];
      }
    }
    @throw [new_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I", @"Entry does not exist: ", index)) autorelease];
  }
  else if (object == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Unsupported object type: null") autorelease];
  }
  else {
    @try {
      return JavaLangReflectArray_getWithId_withInt_(object, index);
    }
    @catch (JavaLangIllegalArgumentException *ex) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Unsupported object type: ", [[object getClass] getName])) autorelease];
    }
  }
}

jint OrgApacheCommonsCollections15CollectionUtils_sizeWithId_(id object) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  jint total = 0;
  if ([JavaUtilMap_class_() isInstance:object]) {
    total = [((id<JavaUtilMap>) nil_chk(((id<JavaUtilMap>) check_protocol_cast(object, @protocol(JavaUtilMap))))) size];
  }
  else if ([JavaUtilCollection_class_() isInstance:object]) {
    total = [((id<JavaUtilCollection>) nil_chk(((id<JavaUtilCollection>) check_protocol_cast(object, @protocol(JavaUtilCollection))))) size];
  }
  else if ([IOSClass_arrayType(NSObject_class_(), 1) isInstance:object]) {
    total = ((IOSObjectArray *) nil_chk(((IOSObjectArray *) check_class_cast(object, [IOSObjectArray class]))))->size_;
  }
  else if ([JavaUtilIterator_class_() isInstance:object]) {
    id<JavaUtilIterator> it = (id<JavaUtilIterator>) check_protocol_cast(object, @protocol(JavaUtilIterator));
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      total++;
      [it next];
    }
  }
  else if ([JavaUtilEnumeration_class_() isInstance:object]) {
    id<JavaUtilEnumeration> it = (id<JavaUtilEnumeration>) check_protocol_cast(object, @protocol(JavaUtilEnumeration));
    while ([((id<JavaUtilEnumeration>) nil_chk(it)) hasMoreElements]) {
      total++;
      [it nextElement];
    }
  }
  else if (object == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Unsupported object type: null") autorelease];
  }
  else {
    @try {
      total = JavaLangReflectArray_getLengthWithId_(object);
    }
    @catch (JavaLangIllegalArgumentException *ex) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Unsupported object type: ", [[object getClass] getName])) autorelease];
    }
  }
  return total;
}

void OrgApacheCommonsCollections15CollectionUtils_reverseArrayWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  jint i = 0;
  jint j = ((IOSObjectArray *) nil_chk(array))->size_ - 1;
  id tmp;
  while (j > i) {
    tmp = IOSObjectArray_Get(array, j);
    IOSObjectArray_Set(array, j, IOSObjectArray_Get(array, i));
    IOSObjectArray_Set(array, i, tmp);
    j--;
    i++;
  }
}

jint OrgApacheCommonsCollections15CollectionUtils_getFreqWithId_withJavaUtilMap_(id obj, id<JavaUtilMap> freqMap) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  JavaLangInteger *count = (JavaLangInteger *) check_class_cast([((id<JavaUtilMap>) nil_chk(freqMap)) getWithId:obj], [JavaLangInteger class]);
  if (count != nil) {
    return [count intValue];
  }
  return 0;
}

jboolean OrgApacheCommonsCollections15CollectionUtils_isFullWithJavaUtilCollection_(id<JavaUtilCollection> coll) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (coll == nil) {
    @throw [new_JavaLangNullPointerException_initWithNSString_(@"The collection must not be null") autorelease];
  }
  if ([OrgApacheCommonsCollections15BoundedCollection_class_() isInstance:coll]) {
    return [((id<OrgApacheCommonsCollections15BoundedCollection>) nil_chk(((id<OrgApacheCommonsCollections15BoundedCollection>) check_protocol_cast(coll, @protocol(OrgApacheCommonsCollections15BoundedCollection))))) isFull];
  }
  @try {
    id<OrgApacheCommonsCollections15BoundedCollection> bcoll = OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_decorateUsingWithJavaUtilCollection_(coll);
    return [((id<OrgApacheCommonsCollections15BoundedCollection>) nil_chk(bcoll)) isFull];
  }
  @catch (JavaLangIllegalArgumentException *ex) {
    return NO;
  }
}

jint OrgApacheCommonsCollections15CollectionUtils_maxSizeWithJavaUtilCollection_(id<JavaUtilCollection> coll) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  if (coll == nil) {
    @throw [new_JavaLangNullPointerException_initWithNSString_(@"The collection must not be null") autorelease];
  }
  if ([OrgApacheCommonsCollections15BoundedCollection_class_() isInstance:coll]) {
    return [((id<OrgApacheCommonsCollections15BoundedCollection>) nil_chk(((id<OrgApacheCommonsCollections15BoundedCollection>) check_protocol_cast(coll, @protocol(OrgApacheCommonsCollections15BoundedCollection))))) maxSize];
  }
  @try {
    id<OrgApacheCommonsCollections15BoundedCollection> bcoll = OrgApacheCommonsCollections15CollectionUnmodifiableBoundedCollection_decorateUsingWithJavaUtilCollection_(coll);
    return [((id<OrgApacheCommonsCollections15BoundedCollection>) nil_chk(bcoll)) maxSize];
  }
  @catch (JavaLangIllegalArgumentException *ex) {
    return -1;
  }
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_synchronizedCollectionWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return OrgApacheCommonsCollections15CollectionSynchronizedCollection_decorateWithJavaUtilCollection_(collection);
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_unmodifiableCollectionWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return OrgApacheCommonsCollections15CollectionUnmodifiableCollection_decorateWithJavaUtilCollection_(collection);
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_predicatedCollectionWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> collection, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return OrgApacheCommonsCollections15CollectionPredicatedCollection_decorateWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(collection, predicate);
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_typedCollectionWithJavaUtilCollection_withIOSClass_(id<JavaUtilCollection> collection, IOSClass *type) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return OrgApacheCommonsCollections15CollectionTypedCollection_decorateWithJavaUtilCollection_withIOSClass_(collection, type);
}

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionUtils_transformedCollectionWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilCollection> collection, id<OrgApacheCommonsCollections15Transformer> transformer) {
  OrgApacheCommonsCollections15CollectionUtils_initialize();
  return OrgApacheCommonsCollections15CollectionTransformedCollection_decorateWithJavaUtilCollection_withOrgApacheCommonsCollections15Transformer_(collection, transformer);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15CollectionUtils)
