//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoCenterConic3D.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoCenterConic3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoCenterConic.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoQuadricND.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, c);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(midpoint_, [GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(((GeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(c_, [GeogebraCommonKernelKernelNDGeoConicND class])))) getCoordSys])) getPointWithDouble:x withDouble:y]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoCenterConic3D", NULL, 0x1, NULL, NULL },
    { "newGeoPointWithGeogebraCommonKernelConstruction:", "newGeoPoint", "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "setCoordsWithDouble:withDouble:", "setCoords", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D = { 2, "AlgoCenterConic3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoCenterConic_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, c);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, label, c);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCenterConic3D)
