//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/arith/EquationAbsOperator.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/locusequ/EquationTranslator.h"
#include "geogebra/common/kernel/locusequ/arith/EquationAbsOperator.h"
#include "geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "geogebra/common/kernel/locusequ/arith/EquationUnaryOperator.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"

@implementation GeogebraCommonKernelLocusequArithEquationAbsOperator

- (instancetype)initWithGeogebraCommonKernelLocusequArithEquationExpression:(GeogebraCommonKernelLocusequArithEquationExpression *)expr {
  GeogebraCommonKernelLocusequArithEquationAbsOperator_initWithGeogebraCommonKernelLocusequArithEquationExpression_(self, expr);
  return self;
}

- (jboolean)isAbs {
  return YES;
}

- (jlong)toLong {
  return JavaLangMath_absWithLong_([((GeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getOriginalExpression])) toLong]);
}

- (NSString *)description {
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) [new_JavaLangStringBuilder_initWithNSString_(@"abs(") autorelease]) appendWithNSString:[((GeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getOriginalExpression])) description]])) appendWithNSString:@")"])) description];
}

- (jdouble)operationWithDouble:(jdouble)a {
  return JavaLangMath_absWithDouble_(a);
}

- (id)translateImplWithGeogebraCommonKernelLocusequEquationTranslator:(GeogebraCommonKernelLocusequEquationTranslator *)translator {
  return [((GeogebraCommonKernelLocusequEquationTranslator *) nil_chk(translator)) absWithId:[((GeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([self getOriginalExpression])) translateWithGeogebraCommonKernelLocusequEquationTranslator:translator]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelLocusequArithEquationExpression:", "EquationAbsOperator", NULL, 0x1, NULL, NULL },
    { "isAbs", NULL, "Z", 0x1, NULL, NULL },
    { "toLong", NULL, "J", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "operationWithDouble:", "operation", "D", 0x4, NULL, NULL },
    { "translateImplWithGeogebraCommonKernelLocusequEquationTranslator:", "translateImpl", "TT;", 0x4, NULL, "<T:Ljava/lang/Object;>(Lgeogebra/common/kernel/locusequ/EquationTranslator<TT;>;)TT;" },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequArithEquationAbsOperator = { 2, "EquationAbsOperator", "geogebra.common.kernel.locusequ.arith", NULL, 0x1, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequArithEquationAbsOperator;
}

@end

void GeogebraCommonKernelLocusequArithEquationAbsOperator_initWithGeogebraCommonKernelLocusequArithEquationExpression_(GeogebraCommonKernelLocusequArithEquationAbsOperator *self, GeogebraCommonKernelLocusequArithEquationExpression *expr) {
  GeogebraCommonKernelLocusequArithEquationUnaryOperator_initWithGeogebraCommonKernelLocusequArithEquationExpression_(self, expr);
}

GeogebraCommonKernelLocusequArithEquationAbsOperator *new_GeogebraCommonKernelLocusequArithEquationAbsOperator_initWithGeogebraCommonKernelLocusequArithEquationExpression_(GeogebraCommonKernelLocusequArithEquationExpression *expr) {
  GeogebraCommonKernelLocusequArithEquationAbsOperator *self = [GeogebraCommonKernelLocusequArithEquationAbsOperator alloc];
  GeogebraCommonKernelLocusequArithEquationAbsOperator_initWithGeogebraCommonKernelLocusequArithEquationExpression_(self, expr);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequArithEquationAbsOperator)
