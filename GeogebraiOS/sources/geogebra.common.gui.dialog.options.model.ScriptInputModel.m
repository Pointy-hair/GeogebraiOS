//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/ScriptInputModel.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/gui/InputHandler.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/ScriptInputModel.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/geos/GeoButton.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/plugin/EventType.h"
#include "geogebra/common/plugin/ScriptType.h"
#include "geogebra/common/plugin/script/Script.h"

@class GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler;

@interface GeogebraCommonGuiDialogOptionsModelScriptInputModel () {
 @public
  GeogebraCommonKernelGeosGeoElement *geo_;
  jboolean global_;
  GeogebraCommonPluginScriptTypeEnum *scriptType_;
  jboolean updateScript_;
  GeogebraCommonMainApp *app_;
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *inputHandler_;
  id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener> listener_;
  jboolean handlingDocumentEventOff_;
  jboolean editOccurred_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelScriptInputModel, geo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelScriptInputModel, scriptType_, GeogebraCommonPluginScriptTypeEnum *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelScriptInputModel, app_, GeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelScriptInputModel, inputHandler_, GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelScriptInputModel, listener_, id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener>)

@interface GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener : NSObject
@end

@interface GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler : NSObject < GeogebraCommonGuiInputHandler > {
 @public
  GeogebraCommonGuiDialogOptionsModelScriptInputModel *this$0_;
  GeogebraCommonKernelKernel *kernel_;
}

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel:(GeogebraCommonGuiDialogOptionsModelScriptInputModel *)outer$;

- (jboolean)processInputWithNSString:(NSString *)inputValue;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler)

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler, this$0_, GeogebraCommonGuiDialogOptionsModelScriptInputModel *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler, kernel_, GeogebraCommonKernelKernel *)

__attribute__((unused)) static void GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel_(GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *self, GeogebraCommonGuiDialogOptionsModelScriptInputModel *outer$);

__attribute__((unused)) static GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *new_GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel_(GeogebraCommonGuiDialogOptionsModelScriptInputModel *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler)

@implementation GeogebraCommonGuiDialogOptionsModelScriptInputModel

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
withGeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener:(id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener>)listener
                                  withBoolean:(jboolean)updateScript
                                  withBoolean:(jboolean)forceJavaScript {
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener_withBoolean_withBoolean_(self, app, listener, updateScript, forceJavaScript);
  return self;
}

- (void)setGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  handlingDocumentEventOff_ = YES;
  if (global_) {
    [self setGlobal];
    handlingDocumentEventOff_ = NO;
    return;
  }
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_set_geo_(self, geo);
  if (geo != nil) {
    GeogebraCommonPluginScriptScript *script = [geo getScriptWithGeogebraCommonPluginEventTypeEnum:updateScript_ ? GeogebraCommonPluginEventTypeEnum_get_UPDATE() : GeogebraCommonPluginEventTypeEnum_get_CLICK()];
    if (script == nil) {
      script = [((GeogebraCommonMainApp *) nil_chk(app_)) createScriptWithGeogebraCommonPluginScriptTypeEnum:GeogebraCommonPluginScriptTypeEnum_get_GGBSCRIPT() withNSString:@"" withBoolean:NO];
    }
    [((id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener>) nil_chk(listener_)) setInputTextWithNSString:[((GeogebraCommonPluginScriptScript *) nil_chk(script)) getText]];
    [self setScriptTypeWithGeogebraCommonPluginScriptTypeEnum:[script getType]];
  }
  handlingDocumentEventOff_ = NO;
}

- (void)setGlobal {
  jboolean currentHandlingDocumentEventOff = handlingDocumentEventOff_;
  handlingDocumentEventOff_ = YES;
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_set_geo_(self, nil);
  global_ = YES;
  [((id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener>) nil_chk(listener_)) setInputTextWithNSString:[((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getLibraryJavaScript]];
  handlingDocumentEventOff_ = currentHandlingDocumentEventOff;
}

- (jboolean)processInputWithNSString:(NSString *)inputText {
  return [((GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *) nil_chk(inputHandler_)) processInputWithNSString:inputText];
}

- (void)setScriptTypeWithGeogebraCommonPluginScriptTypeEnum:(GeogebraCommonPluginScriptTypeEnum *)scriptType {
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_set_scriptType_(self, scriptType);
  NSString *scriptStr;
  jint index = [((GeogebraCommonPluginScriptTypeEnum *) nil_chk(scriptType)) ordinal];
  switch ([scriptType ordinal]) {
    default:
    case GeogebraCommonPluginScriptType_GGBSCRIPT:
    scriptStr = @"geogebra";
    break;
    case GeogebraCommonPluginScriptType_JAVASCRIPT:
    scriptStr = @"javascript";
    break;
  }
  [((id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener>) nil_chk(listener_)) setLanguageIndexWithInt:index withNSString:scriptStr];
}

- (GeogebraCommonKernelGeosGeoElement *)getGeo {
  return geo_;
}

- (void)handleDocumentEvent {
  if (handlingDocumentEventOff_) return;
  [self setEditOccurredWithBoolean:YES];
}

- (jboolean)isValidAtWithInt:(jint)index {
  return NO;
}

- (jboolean)checkGeos {
  return [self getGeosLength] == 1;
}

- (void)updateProperties {
}

- (jboolean)isEditOccurred {
  return editOccurred_;
}

- (void)setEditOccurredWithBoolean:(jboolean)editOccurred {
  self->editOccurred_ = editOccurred;
}

- (void)dealloc {
  RELEASE_(geo_);
  RELEASE_(scriptType_);
  RELEASE_(app_);
  RELEASE_(inputHandler_);
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:withGeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener:withBoolean:withBoolean:", "ScriptInputModel", NULL, 0x1, NULL, NULL },
    { "setGeoWithGeogebraCommonKernelGeosGeoElement:", "setGeo", "V", 0x1, NULL, NULL },
    { "setGlobal", NULL, "V", 0x1, NULL, NULL },
    { "processInputWithNSString:", "processInput", "Z", 0x1, NULL, NULL },
    { "setScriptTypeWithGeogebraCommonPluginScriptTypeEnum:", "setScriptType", "V", 0x1, NULL, NULL },
    { "getGeo", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "handleDocumentEvent", NULL, "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x4, NULL, NULL },
    { "checkGeos", NULL, "Z", 0x1, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "isEditOccurred", NULL, "Z", 0x1, NULL, NULL },
    { "setEditOccurredWithBoolean:", "setEditOccurred", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "global_", NULL, 0x2, "Z", NULL, NULL,  },
    { "scriptType_", NULL, 0x2, "Lgeogebra.common.plugin.ScriptType;", NULL, NULL,  },
    { "updateScript_", NULL, 0x2, "Z", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
    { "inputHandler_", NULL, 0x2, "Lgeogebra.common.gui.dialog.options.model.ScriptInputModel$TextInputHandler;", NULL, NULL,  },
    { "listener_", NULL, 0x2, "Lgeogebra.common.gui.dialog.options.model.ScriptInputModel$IScriptInputListener;", NULL, NULL,  },
    { "handlingDocumentEventOff_", NULL, 0x2, "Z", NULL, NULL,  },
    { "editOccurred_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.gui.dialog.options.model.ScriptInputModel$IScriptInputListener;", "Lgeogebra.common.gui.dialog.options.model.ScriptInputModel$TextInputHandler;"};
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelScriptInputModel = { 2, "ScriptInputModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 12, methods, 9, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelScriptInputModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelScriptInputModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener_withBoolean_withBoolean_(GeogebraCommonGuiDialogOptionsModelScriptInputModel *self, GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener> listener, jboolean updateScript, jboolean forceJavaScript) {
  GeogebraCommonGuiDialogOptionsModelOptionsModel_init(self);
  self->global_ = NO;
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_set_scriptType_(self, GeogebraCommonPluginScriptTypeEnum_get_GGBSCRIPT());
  self->updateScript_ = NO;
  self->handlingDocumentEventOff_ = NO;
  self->editOccurred_ = NO;
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_set_app_(self, app);
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_set_listener_(self, listener);
  self->updateScript_ = updateScript;
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_setAndConsume_inputHandler_(self, new_GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel_(self));
}

GeogebraCommonGuiDialogOptionsModelScriptInputModel *new_GeogebraCommonGuiDialogOptionsModelScriptInputModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener_withBoolean_withBoolean_(GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener> listener, jboolean updateScript, jboolean forceJavaScript) {
  GeogebraCommonGuiDialogOptionsModelScriptInputModel *self = [GeogebraCommonGuiDialogOptionsModelScriptInputModel alloc];
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener_withBoolean_withBoolean_(self, app, listener, updateScript, forceJavaScript);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelScriptInputModel)

@implementation GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setInputTextWithNSString:", "setInputText", "V", 0x401, NULL, NULL },
    { "getInputText", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "setLanguageIndexWithInt:withNSString:", "setLanguageIndex", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener = { 2, "IScriptInputListener", "geogebra.common.gui.dialog.options.model", "ScriptInputModel", 0x609, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelScriptInputModel_IScriptInputListener)

@implementation GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel:(GeogebraCommonGuiDialogOptionsModelScriptInputModel *)outer$ {
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel_(self, outer$);
  return self;
}

- (jboolean)processInputWithNSString:(NSString *)inputValue {
  if (inputValue == nil) return NO;
  if (this$0_->global_) {
    [((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonMainApp *) nil_chk(this$0_->app_)) getKernel])) setLibraryJavaScriptWithNSString:inputValue];
    return YES;
  }
  if ([this$0_ getGeo] == nil) {
    [this$0_ setGeoWithGeogebraCommonKernelGeosGeoElement:GeogebraCommonKernelGeosGeoButton_getNewButtonWithGeogebraCommonKernelConstruction_([((GeogebraCommonKernelKernel *) nil_chk(kernel_)) getConstruction])];
  }
  GeogebraCommonPluginScriptScript *script = [((GeogebraCommonMainApp *) nil_chk(this$0_->app_)) createScriptWithGeogebraCommonPluginScriptTypeEnum:this$0_->scriptType_ withNSString:inputValue withBoolean:YES];
  if (this$0_->updateScript_) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk([this$0_ getGeo])) setUpdateScriptWithGeogebraCommonPluginScriptScript:script];
    [this$0_->app_ setBlockUpdateScriptsWithBoolean:NO];
  }
  else {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk([this$0_ getGeo])) setClickScriptWithGeogebraCommonPluginScriptScript:script];
  }
  return YES;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(kernel_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel:", "TextInputHandler", NULL, 0x2, NULL, NULL },
    { "processInputWithNSString:", "processInput", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.gui.dialog.options.model.ScriptInputModel;", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler = { 2, "TextInputHandler", "geogebra.common.gui.dialog.options.model", "ScriptInputModel", 0x2, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler;
}

@end

void GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel_(GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *self, GeogebraCommonGuiDialogOptionsModelScriptInputModel *outer$) {
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_set_this$0_(self, outer$);
  NSObject_init(self);
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_set_kernel_(self, [((GeogebraCommonMainApp *) nil_chk(outer$->app_)) getKernel]);
}

GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *new_GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel_(GeogebraCommonGuiDialogOptionsModelScriptInputModel *outer$) {
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler *self = [GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler alloc];
  GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler_initWithGeogebraCommonGuiDialogOptionsModelScriptInputModel_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelScriptInputModel_TextInputHandler)
