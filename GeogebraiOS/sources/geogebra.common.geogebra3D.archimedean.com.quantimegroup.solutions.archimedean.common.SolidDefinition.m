//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/common/SolidDefinition.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/common/SolidDefinition.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/IntList.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Misc.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/ObjectList.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"

@interface GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition () {
 @public
  IOSIntArray *signature_;
  NSString *name_;
  jboolean dual_;
}

+ (void)init__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)equalsWithIntArray:(IOSIntArray *)signature;

- (jboolean)equalsWithNSString:(NSString *)name;

- (jboolean)equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *)sd;

+ (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *)findSolidDefinitionOldWithIntArray:(IOSIntArray *)signature
                                                                                                                         withBoolean:(jboolean)isDual;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition, signature_, IOSIntArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition, name_, NSString *)

static GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition, knownSolids_, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *)
J2OBJC_STATIC_FIELD_SETTER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition, knownSolids_, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init__();

__attribute__((unused)) static GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionOldWithIntArray_withBoolean_(IOSIntArray *signature, jboolean isDual);

J2OBJC_INITIALIZED_DEFN(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition)

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TETRAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_CUBE_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_OCTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_DODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ICOSAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_TETRAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_CUBE_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_OCTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_CUBOCTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SMALL_RHOMBICUBOCTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_GREAT_RHOMBICUBOCTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SNUB_CUBE_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_DODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_ICOSAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ICOSIDODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SMALL_RHOMBICOSIDODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_GREAT_RHOMBICOSIDODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SNUB_DODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_TETRAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_OCTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TETRAKIS_HEXAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_RHOMBIC_DODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRAPEZOIDAL_ICOSITETRAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_HEXAKIS_OCTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAGONAL_ICOSITETRAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_ICOSAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAKIS_DODECAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_RHOMBIC_TRIACONTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRAPEZOIDAL_HEXECONTAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_HEXAKIS_ICOSAHEDRON_;
GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAGONAL_HEXECONTAHEDRON_;

@implementation GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition

+ (void)init__ {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init__();
}

+ (jint)getSolidTypeWithIntArray:(IOSIntArray *)signature
                         withInt:(jint)signatureLength {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getSolidTypeWithIntArray_withInt_(signature, signatureLength);
}

+ (jint)getSolidTypeWithIntArray:(IOSIntArray *)signature {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getSolidTypeWithIntArray_(signature);
}

+ (NSString *)typeToStringWithInt:(jint)type {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_typeToStringWithInt_(type);
}

- (instancetype)init {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init(self);
  return self;
}

- (instancetype)initWithIntArray:(IOSIntArray *)signature
                    withNSString:(NSString *)signatureLength {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_(self, signature, signatureLength);
  return self;
}

- (instancetype)initWithIntArray:(IOSIntArray *)signature
                    withNSString:(NSString *)signatureLength
                     withBoolean:(jboolean)d {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_withBoolean_(self, signature, signatureLength, d);
  return self;
}

- (jboolean)equalsWithIntArray:(IOSIntArray *)signature {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(signature, self->signature_) == 0;
}

- (jboolean)equalsWithNSString:(NSString *)name {
  return [((NSString *) nil_chk(self->name_)) equalsIgnoreCase:name];
}

- (jboolean)equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *)sd {
  return [self equalsWithNSString:((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *) nil_chk(sd))->name_] && [self equalsWithIntArray:sd->signature_] && dual_ == sd->dual_;
}

+ (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *)findSolidDefinitionWithNSString:(NSString *)theName {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionWithNSString_(theName);
}

+ (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *)findSolidDefinitionWithIntArray:(IOSIntArray *)signature
                                                                                                                      withBoolean:(jboolean)dual {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionWithIntArray_withBoolean_(signature, dual);
}

+ (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *)findSolidDefinitionOldWithIntArray:(IOSIntArray *)signature
                                                                                                                         withBoolean:(jboolean)isDual {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionOldWithIntArray_withBoolean_(signature, isDual);
}

+ (jboolean)isPrismWithIntArray:(IOSIntArray *)signature
                        withInt:(jint)signatureLength {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isPrismWithIntArray_withInt_(signature, signatureLength);
}

+ (jboolean)isAntiprismWithIntArray:(IOSIntArray *)signature
                            withInt:(jint)signatureLength {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isAntiprismWithIntArray_withInt_(signature, signatureLength);
}

+ (jboolean)isKnownWithIntArray:(IOSIntArray *)signature
                        withInt:(jint)signatureLength {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isKnownWithIntArray_withInt_(signature, signatureLength);
}

- (IOSIntArray *)getSignature {
  return signature_;
}

- (jboolean)isDual {
  return dual_;
}

- (NSString *)getName {
  return name_;
}

+ (IOSIntArray *)getSignatureWithIntArray:(IOSIntArray *)polys
                                  withInt:(jint)length {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getSignatureWithIntArray_withInt_(polys, length);
}

+ (id<JavaUtilList>)getKnownSolids {
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getKnownSolids();
}

- (NSString *)description {
  return name_;
}

- (void)dealloc {
  RELEASE_(signature_);
  RELEASE_(name_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition class]) {
    JreStrongAssignAndConsume(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_, nil, new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(0, 20));
    {
      GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init__();
    }
    J2OBJC_SET_INITIALIZED(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init__", "init", "V", 0xa, NULL, NULL },
    { "getSolidTypeWithIntArray:withInt:", "getSolidType", "I", 0x9, NULL, NULL },
    { "getSolidTypeWithIntArray:", "getSolidType", "I", 0x9, NULL, NULL },
    { "typeToStringWithInt:", "typeToString", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "init", "SolidDefinition", NULL, 0x4, NULL, NULL },
    { "initWithIntArray:withNSString:", "SolidDefinition", NULL, 0x1, NULL, NULL },
    { "initWithIntArray:withNSString:withBoolean:", "SolidDefinition", NULL, 0x1, NULL, NULL },
    { "equalsWithIntArray:", "equals", "Z", 0x2, NULL, NULL },
    { "equalsWithNSString:", "equals", "Z", 0x2, NULL, NULL },
    { "equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition:", "equals", "Z", 0x2, NULL, NULL },
    { "findSolidDefinitionWithNSString:", "findSolidDefinition", "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", 0x9, NULL, NULL },
    { "findSolidDefinitionWithIntArray:withBoolean:", "findSolidDefinition", "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", 0x9, NULL, NULL },
    { "findSolidDefinitionOldWithIntArray:withBoolean:", "findSolidDefinitionOld", "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", 0xa, NULL, NULL },
    { "isPrismWithIntArray:withInt:", "isPrism", "Z", 0x9, NULL, NULL },
    { "isAntiprismWithIntArray:withInt:", "isAntiprism", "Z", 0x9, NULL, NULL },
    { "isKnownWithIntArray:withInt:", "isKnown", "Z", 0x9, NULL, NULL },
    { "getSignature", NULL, "[I", 0x1, NULL, NULL },
    { "isDual", NULL, "Z", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getSignatureWithIntArray:withInt:", "getSignature", "[I", 0x9, NULL, NULL },
    { "getKnownSolids", NULL, "Ljava.util.List;", 0x9, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "signature_", NULL, 0x2, "[I", NULL, NULL,  },
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "dual_", NULL, 0x2, "Z", NULL, NULL,  },
    { "knownSolids_", NULL, 0xa, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.ObjectList;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_, "Lgeogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/ObjectList<Lgeogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/common/SolidDefinition;>;",  },
    { "TETRAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TETRAHEDRON_, NULL,  },
    { "CUBE_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_CUBE_, NULL,  },
    { "OCTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_OCTAHEDRON_, NULL,  },
    { "DODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_DODECAHEDRON_, NULL,  },
    { "ICOSAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ICOSAHEDRON_, NULL,  },
    { "TRUNCATED_TETRAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_TETRAHEDRON_, NULL,  },
    { "TRUNCATED_CUBE_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_CUBE_, NULL,  },
    { "TRUNCATED_OCTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_OCTAHEDRON_, NULL,  },
    { "CUBOCTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_CUBOCTAHEDRON_, NULL,  },
    { "SMALL_RHOMBICUBOCTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SMALL_RHOMBICUBOCTAHEDRON_, NULL,  },
    { "GREAT_RHOMBICUBOCTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_GREAT_RHOMBICUBOCTAHEDRON_, NULL,  },
    { "SNUB_CUBE_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SNUB_CUBE_, NULL,  },
    { "TRUNCATED_DODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_DODECAHEDRON_, NULL,  },
    { "TRUNCATED_ICOSAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_ICOSAHEDRON_, NULL,  },
    { "ICOSIDODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ICOSIDODECAHEDRON_, NULL,  },
    { "SMALL_RHOMBICOSIDODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SMALL_RHOMBICOSIDODECAHEDRON_, NULL,  },
    { "GREAT_RHOMBICOSIDODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_GREAT_RHOMBICOSIDODECAHEDRON_, NULL,  },
    { "SNUB_DODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SNUB_DODECAHEDRON_, NULL,  },
    { "TRIAKIS_TETRAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_TETRAHEDRON_, NULL,  },
    { "TRIAKIS_OCTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_OCTAHEDRON_, NULL,  },
    { "TETRAKIS_HEXAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TETRAKIS_HEXAHEDRON_, NULL,  },
    { "RHOMBIC_DODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_RHOMBIC_DODECAHEDRON_, NULL,  },
    { "TRAPEZOIDAL_ICOSITETRAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRAPEZOIDAL_ICOSITETRAHEDRON_, NULL,  },
    { "HEXAKIS_OCTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_HEXAKIS_OCTAHEDRON_, NULL,  },
    { "PENTAGONAL_ICOSITETRAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAGONAL_ICOSITETRAHEDRON_, NULL,  },
    { "TRIAKIS_ICOSAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_ICOSAHEDRON_, NULL,  },
    { "PENTAKIS_DODECAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAKIS_DODECAHEDRON_, NULL,  },
    { "RHOMBIC_TRIACONTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_RHOMBIC_TRIACONTAHEDRON_, NULL,  },
    { "TRAPEZOIDAL_HEXECONTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRAPEZOIDAL_HEXECONTAHEDRON_, NULL,  },
    { "HEXAKIS_ICOSAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_HEXAKIS_ICOSAHEDRON_, NULL,  },
    { "PENTAGONAL_HEXECONTAHEDRON_", NULL, 0x9, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common.SolidDefinition;", &GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAGONAL_HEXECONTAHEDRON_, NULL,  },
    { "UNDEFINED_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_UNDEFINED },
    { "OTHER_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_OTHER },
    { "PLATONIC_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PLATONIC },
    { "ARCHIMEDEAN_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ARCHIMEDEAN },
    { "DUAL_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_DUAL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition = { 2, "SolidDefinition", "geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.common", NULL, 0x1, 22, methods, 40, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition;
}

@end

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init__() {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  IOSObjectArray *signs = [IOSObjectArray arrayWithObjects:(id[]){ [IOSIntArray arrayWithInts:(jint[]){ 3, 3, 3 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 4, 4, 4 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 3, 3, 3 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 5, 5, 5 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 3, 3, 3, 3 } count:5], [IOSIntArray arrayWithInts:(jint[]){ 3, 6, 6 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 8, 8 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 4, 6, 6 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 4, 3, 4 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 3, 4, 4, 4 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 4, 6, 8 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 3, 3, 3, 4 } count:5], [IOSIntArray arrayWithInts:(jint[]){ 3, 10, 10 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 5, 6, 6 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 5, 3, 5 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 3, 4, 5, 4 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 4, 6, 10 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 3, 3, 3, 5 } count:5], [IOSIntArray arrayWithInts:(jint[]){ 3, 6, 6 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 8, 8 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 4, 6, 6 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 4, 3, 4 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 3, 4, 4, 4 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 4, 6, 8 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 3, 3, 3, 4 } count:5], [IOSIntArray arrayWithInts:(jint[]){ 3, 10, 10 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 5, 6, 6 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 5, 3, 5 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 3, 4, 5, 4 } count:4], [IOSIntArray arrayWithInts:(jint[]){ 4, 6, 10 } count:3], [IOSIntArray arrayWithInts:(jint[]){ 3, 3, 3, 3, 5 } count:5] } count:31 type:IOSClass_intArray(1)];
  IOSObjectArray *names = [IOSObjectArray arrayWithObjects:(id[]){ @"Tetrahedron", @"Cube", @"Octahedron", @"Dodecahedron", @"Icosahedron", @"Truncated Tetrahedron", @"Truncated Cube", @"Truncated Octahedron", @"Cuboctahedron", @"Small Rhombicuboctahedron", @"Great Rhombicuboctahedron", @"Snub Cube", @"Truncated Dodecahedron", @"Truncated Icosohedron", @"Icosidodecahedron", @"Small Rhombicosidodecahedron", @"Great Rhombicosidodecahedron", @"Snub Dodecahedron", @"Triakis Tetrahedron", @"Triakis Octahedron", @"Tetrakis Hexahedron", @"Rhombic Dodecahedron", @"Trapezoidal Icositetrahedron", @"Hexakis Octahedron", @"Pentagonal Icositetrahedron", @"Triakis Icosahedron", @"Pentakis Dodecahedron", @"Rhombic Triacontahedron", @"Trapezoidal Hexecontahedron", @"Hexakis Icosahedron", @"Pentagonal Hexecontahedron" } count:31 type:NSString_class_()];
  for (jint i = 0; i < 18; ++i) {
    [new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_(IOSObjectArray_Get(signs, i), IOSObjectArray_Get(names, i)) autorelease];
  }
  for (jint i = 18; i < 31; ++i) {
    [new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_withBoolean_(IOSObjectArray_Get(signs, i), IOSObjectArray_Get(names, i), YES) autorelease];
  }
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TETRAHEDRON_, nil, [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_)) getWithInt:0]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_CUBE_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:1]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_OCTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:2]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_DODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:3]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ICOSAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:4]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_TETRAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:5]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_CUBE_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:6]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_OCTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:7]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_CUBOCTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:8]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SMALL_RHOMBICUBOCTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:9]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_GREAT_RHOMBICUBOCTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:10]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SNUB_CUBE_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:11]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_DODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:12]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRUNCATED_ICOSAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:13]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ICOSIDODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:14]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SMALL_RHOMBICOSIDODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:15]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_GREAT_RHOMBICOSIDODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:16]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_SNUB_DODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:17]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_TETRAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:18]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_OCTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:19]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TETRAKIS_HEXAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:20]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_RHOMBIC_DODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:21]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRAPEZOIDAL_ICOSITETRAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:22]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_HEXAKIS_OCTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:23]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAGONAL_ICOSITETRAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:24]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRIAKIS_ICOSAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:25]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAKIS_DODECAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:26]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_RHOMBIC_TRIACONTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:27]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_TRAPEZOIDAL_HEXECONTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:28]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_HEXAKIS_ICOSAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:29]);
  JreStrongAssign(&GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PENTAGONAL_HEXECONTAHEDRON_, nil, [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:30]);
}

jint GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getSolidTypeWithIntArray_withInt_(IOSIntArray *signature, jint signatureLength) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  for (jint i = 1; i < signatureLength; ++i) {
    if (IOSIntArray_Get(nil_chk(signature), i) != IOSIntArray_Get(signature, 0)) return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ARCHIMEDEAN;
  }
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PLATONIC;
}

jint GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getSolidTypeWithIntArray_(IOSIntArray *signature) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  return GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getSolidTypeWithIntArray_withInt_(signature, ((IOSIntArray *) nil_chk(signature))->size_);
}

NSString *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_typeToStringWithInt_(jint type) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  switch (type) {
    case GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_PLATONIC:
    return @"PLATONIC";
    case GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_ARCHIMEDEAN:
    return @"ARCHIMEDEAN";
    case GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_DUAL:
    return @"ARCHIMEDEAN DUAL";
    case GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_OTHER:
    return @"OTHER";
    case GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_UNDEFINED:
    return @"UNDEFINED";
    default:
    return @"no type";
  }
}

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *self) {
  NSObject_init(self);
  self->dual_ = NO;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init() {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_init(self);
  return self;
}

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *self, IOSIntArray *signature, NSString *signatureLength) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_withBoolean_(self, signature, signatureLength, NO);
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_(IOSIntArray *signature, NSString *signatureLength) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_(self, signature, signatureLength);
  return self;
}

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_withBoolean_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *self, IOSIntArray *signature, NSString *signatureLength, jboolean d) {
  NSObject_init(self);
  self->dual_ = NO;
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_setAndConsume_signature_(self, [IOSIntArray newArrayWithLength:((IOSIntArray *) nil_chk(signature))->size_]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(signature, 0, self->signature_, 0, signature->size_);
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_set_name_(self, [NSString stringWithString:signatureLength]);
  if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionWithNSString_(signatureLength) == nil) {
    [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_)) addWithId:self];
  }
  self->dual_ = d;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_withBoolean_(IOSIntArray *signature, NSString *signatureLength, jboolean d) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initWithIntArray_withNSString_withBoolean_(self, signature, signatureLength, d);
  return self;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionWithNSString_(NSString *theName) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  for (jint i = 0; i < ((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_))->num_; ++i) {
    GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *sd = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:i];
    if ([((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *) nil_chk(sd)) equalsWithNSString:theName]) return sd;
  }
  return nil;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionWithIntArray_withBoolean_(IOSIntArray *signature, jboolean dual) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  if (((IOSIntArray *) nil_chk(signature))->size_ != signature->size_) {
    IOSIntArray *temp = [IOSIntArray arrayWithLength:signature->size_];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(signature, 0, temp, 0, signature->size_);
    signature = temp;
  }
  for (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition * __strong sd in nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getKnownSolids())) {
    for (jint i = 0; i < signature->size_; ++i) {
      GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayRotateWithIntArray_withInt_(signature, 1);
      if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(signature, ((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *) nil_chk(sd))->signature_) == 0) {
        return sd;
      }
    }
  }
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithIntArray_(signature);
  for (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition * __strong sd in nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getKnownSolids())) {
    for (jint i = 0; i < signature->size_; ++i) {
      GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayRotateWithIntArray_withInt_(signature, 1);
      if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(signature, ((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *) nil_chk(sd))->signature_) == 0) {
        return sd;
      }
    }
  }
  return nil;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_findSolidDefinitionOldWithIntArray_withBoolean_(IOSIntArray *signature, jboolean isDual) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  for (jint i = 0; i < ((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_))->num_; ++i) {
    GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *sd = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_ getWithInt:i];
    if (((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *) nil_chk(sd))->dual_ == isDual && GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(signature, sd->signature_) == 0) {
      return sd;
    }
  }
  return nil;
}

jboolean GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isPrismWithIntArray_withInt_(IOSIntArray *signature, jint signatureLength) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  if (signatureLength != 3) {
    return NO;
  }
  jint count = 0;
  for (jint i = 0; i < signatureLength; ++i) {
    if (IOSIntArray_Get(nil_chk(signature), i) == 4) {
      count++;
    }
  }
  return count == 2;
}

jboolean GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isAntiprismWithIntArray_withInt_(IOSIntArray *signature, jint signatureLength) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  if (signatureLength != 4) {
    return NO;
  }
  jint count = 0;
  for (jint i = 0; i < signatureLength; ++i) {
    if (IOSIntArray_Get(nil_chk(signature), i) == 3) {
      count++;
    }
  }
  return count == 3;
}

jboolean GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isKnownWithIntArray_withInt_(IOSIntArray *signature, jint signatureLength) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isPrismWithIntArray_withInt_(signature, signatureLength)) {
    return YES;
  }
  if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_isAntiprismWithIntArray_withInt_(signature, signatureLength)) {
    return YES;
  }
  if (((IOSIntArray *) nil_chk(signature))->size_ != signatureLength) {
    IOSIntArray *temp = [IOSIntArray arrayWithLength:signatureLength];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(signature, 0, temp, 0, signatureLength);
    signature = temp;
  }
  for (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition * __strong sd in nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getKnownSolids())) {
    for (jint i = 0; i < signature->size_; ++i) {
      GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayRotateWithIntArray_withInt_(signature, 1);
      if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(signature, ((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *) nil_chk(sd))->signature_) == 0) {
        return YES;
      }
    }
  }
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayReverseWithIntArray_(signature);
  for (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition * __strong sd in nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getKnownSolids())) {
    for (jint i = 0; i < signature->size_; ++i) {
      GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayRotateWithIntArray_withInt_(signature, 1);
      if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(signature, ((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition *) nil_chk(sd))->signature_) == 0) {
        return YES;
      }
    }
  }
  return NO;
}

IOSIntArray *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getSignatureWithIntArray_withInt_(IOSIntArray *polys, jint length) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsIntList *sign = [new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsIntList_initWithInt_(length) autorelease];
  for (jint i = 0; i < length; ++i) {
    [sign addWithInt:IOSIntArray_Get(nil_chk(polys), i)];
  }
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsIntList *bestSign = sign, *temp;
  for (jint i = 0; i < length; ++i) {
    temp = [sign wrapCopyWithInt:i withInt:1];
    if (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMisc_arrayCompareWithIntArray_withIntArray_(((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsIntList *) nil_chk(temp))->ints_, bestSign->ints_) < 0) bestSign = temp;
    temp = [sign wrapCopyWithInt:i withInt:-1];
  }
  return bestSign->ints_;
}

id<JavaUtilList> GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_getKnownSolids() {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_initialize();
  [((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_)) shrink];
  id<JavaUtilList> temp = JavaUtilArrays_asListWithNSObjectArray_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition_knownSolids_->objects_);
  id<JavaUtilList> list = (id<JavaUtilList>) check_protocol_cast(temp, @protocol(JavaUtilList));
  return list;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanCommonSolidDefinition)
