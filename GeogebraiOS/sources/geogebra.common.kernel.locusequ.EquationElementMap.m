//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/EquationElementMap.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/EquationElementInterface.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/locusequ/EquationElement.h"
#include "geogebra/common/kernel/locusequ/EquationElementMap.h"
#include "geogebra/common/kernel/locusequ/EquationRestriction.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/plugin/GeoClass.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface GeogebraCommonKernelLocusequEquationElementMap () {
 @public
  GeogebraCommonKernelLocusequEquationScope *scope_;
}

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)createEquationElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)key;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationElementMap, scope_, GeogebraCommonKernelLocusequEquationScope *)

__attribute__((unused)) static id<GeogebraCommonKernelAlgosEquationElementInterface> GeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelLocusequEquationElementMap *self, GeogebraCommonKernelGeosGeoElement *key);

@implementation GeogebraCommonKernelLocusequEquationElementMap

- (instancetype)initWithGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequEquationElementMap_initWithGeogebraCommonKernelLocusequEquationScope_(self, scope);
  return self;
}

- (GeogebraCommonKernelLocusequEquationElement *)getWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)key {
  return [((id<JavaUtilMap>) nil_chk(self->container_)) getWithId:key];
}

- (GeogebraCommonKernelLocusequEquationElement *)putWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)key
                                           withGeogebraCommonKernelLocusequEquationElement:(GeogebraCommonKernelLocusequEquationElement *)value {
  return [((id<JavaUtilMap>) nil_chk(self->container_)) putWithId:key withId:value];
}

- (GeogebraCommonKernelLocusequEquationElement *)getOrCreateWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)key {
  GeogebraCommonKernelLocusequEquationElement *res = [self getWithGeogebraCommonKernelGeosGeoElement:key];
  if (res == nil) {
    res = (GeogebraCommonKernelLocusequEquationElement *) check_class_cast(GeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithGeogebraCommonKernelGeosGeoElement_(self, key), [GeogebraCommonKernelLocusequEquationElement class]);
    [self putWithGeogebraCommonKernelGeosGeoElement:key withGeogebraCommonKernelLocusequEquationElement:res];
  }
  return res;
}

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)createEquationElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)key {
  return GeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithGeogebraCommonKernelGeosGeoElement_(self, key);
}

- (void)identifyWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)orig
                withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)target {
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(orig)) getGeoClassType] == [((GeogebraCommonKernelGeosGeoElement *) nil_chk(target)) getGeoClassType]) {
    [((id<JavaUtilMap>) nil_chk(self->container_)) putWithId:orig withId:[self getOrCreateWithGeogebraCommonKernelGeosGeoElement:target]];
  }
}

- (void)dealloc {
  RELEASE_(container_);
  RELEASE_(scope_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelLocusequEquationScope:", "EquationElementMap", NULL, 0x1, NULL, NULL },
    { "getWithGeogebraCommonKernelGeosGeoElement:", "get", "Lgeogebra.common.kernel.locusequ.EquationElement;", 0x1, NULL, NULL },
    { "putWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationElement:", "put", "Lgeogebra.common.kernel.locusequ.EquationElement;", 0x1, NULL, NULL },
    { "getOrCreateWithGeogebraCommonKernelGeosGeoElement:", "getOrCreate", "Lgeogebra.common.kernel.locusequ.EquationElement;", 0x1, NULL, NULL },
    { "createEquationElementWithGeogebraCommonKernelGeosGeoElement:", "createEquationElement", "Lgeogebra.common.kernel.algos.EquationElementInterface;", 0x2, NULL, NULL },
    { "identifyWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:", "identify", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "container_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lgeogebra/common/kernel/geos/GeoElement;Lgeogebra/common/kernel/locusequ/EquationElement;>;",  },
    { "scope_", NULL, 0x2, "Lgeogebra.common.kernel.locusequ.EquationScope;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequEquationElementMap = { 2, "EquationElementMap", "geogebra.common.kernel.locusequ", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequEquationElementMap;
}

@end

void GeogebraCommonKernelLocusequEquationElementMap_initWithGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequEquationElementMap *self, GeogebraCommonKernelLocusequEquationScope *scope) {
  NSObject_init(self);
  GeogebraCommonKernelLocusequEquationElementMap_setAndConsume_container_(self, new_JavaUtilHashMap_init());
  GeogebraCommonKernelLocusequEquationElementMap_set_scope_(self, scope);
}

GeogebraCommonKernelLocusequEquationElementMap *new_GeogebraCommonKernelLocusequEquationElementMap_initWithGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequEquationElementMap *self = [GeogebraCommonKernelLocusequEquationElementMap alloc];
  GeogebraCommonKernelLocusequEquationElementMap_initWithGeogebraCommonKernelLocusequEquationScope_(self, scope);
  return self;
}

id<GeogebraCommonKernelAlgosEquationElementInterface> GeogebraCommonKernelLocusequEquationElementMap_createEquationElementWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelLocusequEquationElementMap *self, GeogebraCommonKernelGeosGeoElement *key) {
  GeogebraCommonKernelAlgosAlgoElement *algo = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(key)) getParentAlgorithm];
  if (algo == nil) {
    id<GeogebraCommonKernelAlgosEquationElementInterface> ret = [key buildEquationElementWithGeogebraCommonKernelLocusequEquationScope:self->scope_];
    return ret != nil ? ((id) ret) : GeogebraCommonKernelLocusequEquationRestriction_getEmptyRestriction();
  }
  return [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:key withGeogebraCommonKernelAlgosEquationScopeInterface:self->scope_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequEquationElementMap)
