//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/operation/distance/DistanceOp.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/CGAlgorithms.h"
#include "com/vividsolutions/jts/algorithm/PointLocator.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/LineSegment.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/Location.h"
#include "com/vividsolutions/jts/geom/Point.h"
#include "com/vividsolutions/jts/geom/Polygon.h"
#include "com/vividsolutions/jts/geom/util/LinearComponentExtracter.h"
#include "com/vividsolutions/jts/geom/util/PointExtracter.h"
#include "com/vividsolutions/jts/geom/util/PolygonExtracter.h"
#include "com/vividsolutions/jts/operation/distance/ConnectedElementLocationFilter.h"
#include "com/vividsolutions/jts/operation/distance/DistanceOp.h"
#include "com/vividsolutions/jts/operation/distance/GeometryLocation.h"
#include "java/lang/Double.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsOperationDistanceDistanceOp () {
 @public
  IOSObjectArray *geom_;
  jdouble terminateDistance_;
  ComVividsolutionsJtsAlgorithmPointLocator *ptLocator_;
  IOSObjectArray *minDistanceLocation_;
  jdouble minDistance_;
}

- (void)updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom
                                                                            withBoolean:(jboolean)flip;

- (void)computeMinDistance;

- (void)computeContainmentDistance;

- (void)computeInsideWithJavaUtilList:(id<JavaUtilList>)locs
                     withJavaUtilList:(id<JavaUtilList>)polys
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locPtPoly;

- (void)computeInsideWithComVividsolutionsJtsOperationDistanceGeometryLocation:(ComVividsolutionsJtsOperationDistanceGeometryLocation *)ptLoc
                                           withComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *)poly
                withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locPtPoly;

- (void)computeFacetDistance;

- (void)computeMinDistanceLinesWithJavaUtilList:(id<JavaUtilList>)lines0
                               withJavaUtilList:(id<JavaUtilList>)lines1
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom;

- (void)computeMinDistancePointsWithJavaUtilList:(id<JavaUtilList>)points0
                                withJavaUtilList:(id<JavaUtilList>)points1
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom;

- (void)computeMinDistanceLinesPointsWithJavaUtilList:(id<JavaUtilList>)lines
                                     withJavaUtilList:(id<JavaUtilList>)points
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom;

- (void)computeMinDistanceWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line0
                          withComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line1
  withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom;

- (void)computeMinDistanceWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line
                               withComVividsolutionsJtsGeomPoint:(ComVividsolutionsJtsGeomPoint *)pt
  withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationDistanceDistanceOp, geom_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationDistanceDistanceOp, ptLocator_, ComVividsolutionsJtsAlgorithmPointLocator *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationDistanceDistanceOp, minDistanceLocation_, IOSObjectArray *)

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray_withBoolean_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, IOSObjectArray *locGeom, jboolean flip);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistance(ComVividsolutionsJtsOperationDistanceDistanceOp *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeContainmentDistance(ComVividsolutionsJtsOperationDistanceDistanceOp *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> locs, id<JavaUtilList> polys, IOSObjectArray *locPtPoly);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithComVividsolutionsJtsOperationDistanceGeometryLocation_withComVividsolutionsJtsGeomPolygon_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsOperationDistanceGeometryLocation *ptLoc, ComVividsolutionsJtsGeomPolygon *poly, IOSObjectArray *locPtPoly);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeFacetDistance(ComVividsolutionsJtsOperationDistanceDistanceOp *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> lines0, id<JavaUtilList> lines1, IOSObjectArray *locGeom);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistancePointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> points0, id<JavaUtilList> points1, IOSObjectArray *locGeom);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesPointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> lines, id<JavaUtilList> points, IOSObjectArray *locGeom);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsGeomLineString *line0, ComVividsolutionsJtsGeomLineString *line1, IOSObjectArray *locGeom);

__attribute__((unused)) static void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomPoint_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsGeomLineString *line, ComVividsolutionsJtsGeomPoint *pt, IOSObjectArray *locGeom);

@implementation ComVividsolutionsJtsOperationDistanceDistanceOp

+ (jdouble)distanceWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                   withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1 {
  return ComVividsolutionsJtsOperationDistanceDistanceOp_distanceWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1);
}

+ (jboolean)isWithinDistanceWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                            withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1
                                                      withDouble:(jdouble)distance {
  return ComVividsolutionsJtsOperationDistanceDistanceOp_isWithinDistanceWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(g0, g1, distance);
}

+ (IOSObjectArray *)nearestPointsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                                 withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1 {
  return ComVividsolutionsJtsOperationDistanceDistanceOp_nearestPointsWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1);
}

+ (IOSObjectArray *)closestPointsWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                                 withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1 {
  return ComVividsolutionsJtsOperationDistanceDistanceOp_closestPointsWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1);
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                    withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1 {
  ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(self, g0, g1);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                    withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1
                                              withDouble:(jdouble)terminateDistance {
  ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(self, g0, g1, terminateDistance);
  return self;
}

- (jdouble)distance {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistance(self);
  return minDistance_;
}

- (IOSObjectArray *)nearestPoints {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistance(self);
  IOSObjectArray *nearestPts = [IOSObjectArray arrayWithObjects:(id[]){ [((ComVividsolutionsJtsOperationDistanceGeometryLocation *) nil_chk(IOSObjectArray_Get(nil_chk(minDistanceLocation_), 0))) getCoordinate], [((ComVividsolutionsJtsOperationDistanceGeometryLocation *) nil_chk(IOSObjectArray_Get(minDistanceLocation_, 1))) getCoordinate] } count:2 type:ComVividsolutionsJtsGeomCoordinate_class_()];
  return nearestPts;
}

- (IOSObjectArray *)closestPoints {
  return [self nearestPoints];
}

- (IOSObjectArray *)nearestLocations {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistance(self);
  return minDistanceLocation_;
}

- (IOSObjectArray *)closestLocations {
  return [self nearestLocations];
}

- (void)updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom
                                                                            withBoolean:(jboolean)flip {
  ComVividsolutionsJtsOperationDistanceDistanceOp_updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray_withBoolean_(self, locGeom, flip);
}

- (void)computeMinDistance {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistance(self);
}

- (void)computeContainmentDistance {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeContainmentDistance(self);
}

- (void)computeInsideWithJavaUtilList:(id<JavaUtilList>)locs
                     withJavaUtilList:(id<JavaUtilList>)polys
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locPtPoly {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, locs, polys, locPtPoly);
}

- (void)computeInsideWithComVividsolutionsJtsOperationDistanceGeometryLocation:(ComVividsolutionsJtsOperationDistanceGeometryLocation *)ptLoc
                                           withComVividsolutionsJtsGeomPolygon:(ComVividsolutionsJtsGeomPolygon *)poly
                withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locPtPoly {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithComVividsolutionsJtsOperationDistanceGeometryLocation_withComVividsolutionsJtsGeomPolygon_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, ptLoc, poly, locPtPoly);
}

- (void)computeFacetDistance {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeFacetDistance(self);
}

- (void)computeMinDistanceLinesWithJavaUtilList:(id<JavaUtilList>)lines0
                               withJavaUtilList:(id<JavaUtilList>)lines1
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, lines0, lines1, locGeom);
}

- (void)computeMinDistancePointsWithJavaUtilList:(id<JavaUtilList>)points0
                                withJavaUtilList:(id<JavaUtilList>)points1
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistancePointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, points0, points1, locGeom);
}

- (void)computeMinDistanceLinesPointsWithJavaUtilList:(id<JavaUtilList>)lines
                                     withJavaUtilList:(id<JavaUtilList>)points
withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesPointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, lines, points, locGeom);
}

- (void)computeMinDistanceWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line0
                          withComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line1
  withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, line0, line1, locGeom);
}

- (void)computeMinDistanceWithComVividsolutionsJtsGeomLineString:(ComVividsolutionsJtsGeomLineString *)line
                               withComVividsolutionsJtsGeomPoint:(ComVividsolutionsJtsGeomPoint *)pt
  withComVividsolutionsJtsOperationDistanceGeometryLocationArray:(IOSObjectArray *)locGeom {
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomPoint_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, line, pt, locGeom);
}

- (void)dealloc {
  RELEASE_(geom_);
  RELEASE_(ptLocator_);
  RELEASE_(minDistanceLocation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "distanceWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "distance", "D", 0x9, NULL, NULL },
    { "isWithinDistanceWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:withDouble:", "isWithinDistance", "Z", 0x9, NULL, NULL },
    { "nearestPointsWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "nearestPoints", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "closestPointsWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "closestPoints", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "DistanceOp", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:withDouble:", "DistanceOp", NULL, 0x1, NULL, NULL },
    { "distance", NULL, "D", 0x1, NULL, NULL },
    { "nearestPoints", NULL, "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "closestPoints", NULL, "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x1, NULL, NULL },
    { "nearestLocations", NULL, "[Lcom.vividsolutions.jts.operation.distance.GeometryLocation;", 0x1, NULL, NULL },
    { "closestLocations", NULL, "[Lcom.vividsolutions.jts.operation.distance.GeometryLocation;", 0x1, NULL, NULL },
    { "updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray:withBoolean:", "updateMinDistance", "V", 0x2, NULL, NULL },
    { "computeMinDistance", NULL, "V", 0x2, NULL, NULL },
    { "computeContainmentDistance", NULL, "V", 0x2, NULL, NULL },
    { "computeInsideWithJavaUtilList:withJavaUtilList:withComVividsolutionsJtsOperationDistanceGeometryLocationArray:", "computeInside", "V", 0x2, NULL, NULL },
    { "computeInsideWithComVividsolutionsJtsOperationDistanceGeometryLocation:withComVividsolutionsJtsGeomPolygon:withComVividsolutionsJtsOperationDistanceGeometryLocationArray:", "computeInside", "V", 0x2, NULL, NULL },
    { "computeFacetDistance", NULL, "V", 0x2, NULL, NULL },
    { "computeMinDistanceLinesWithJavaUtilList:withJavaUtilList:withComVividsolutionsJtsOperationDistanceGeometryLocationArray:", "computeMinDistanceLines", "V", 0x2, NULL, NULL },
    { "computeMinDistancePointsWithJavaUtilList:withJavaUtilList:withComVividsolutionsJtsOperationDistanceGeometryLocationArray:", "computeMinDistancePoints", "V", 0x2, NULL, NULL },
    { "computeMinDistanceLinesPointsWithJavaUtilList:withJavaUtilList:withComVividsolutionsJtsOperationDistanceGeometryLocationArray:", "computeMinDistanceLinesPoints", "V", 0x2, NULL, NULL },
    { "computeMinDistanceWithComVividsolutionsJtsGeomLineString:withComVividsolutionsJtsGeomLineString:withComVividsolutionsJtsOperationDistanceGeometryLocationArray:", "computeMinDistance", "V", 0x2, NULL, NULL },
    { "computeMinDistanceWithComVividsolutionsJtsGeomLineString:withComVividsolutionsJtsGeomPoint:withComVividsolutionsJtsOperationDistanceGeometryLocationArray:", "computeMinDistance", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geom_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Geometry;", NULL, NULL,  },
    { "terminateDistance_", NULL, 0x2, "D", NULL, NULL,  },
    { "ptLocator_", NULL, 0x2, "Lcom.vividsolutions.jts.algorithm.PointLocator;", NULL, NULL,  },
    { "minDistanceLocation_", NULL, 0x2, "[Lcom.vividsolutions.jts.operation.distance.GeometryLocation;", NULL, NULL,  },
    { "minDistance_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationDistanceDistanceOp = { 2, "DistanceOp", "com.vividsolutions.jts.operation.distance", NULL, 0x1, 22, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationDistanceDistanceOp;
}

@end

jdouble ComVividsolutionsJtsOperationDistanceDistanceOp_distanceWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationDistanceDistanceOp_initialize();
  ComVividsolutionsJtsOperationDistanceDistanceOp *distOp = [new_ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1) autorelease];
  return [distOp distance];
}

jboolean ComVividsolutionsJtsOperationDistanceDistanceOp_isWithinDistanceWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1, jdouble distance) {
  ComVividsolutionsJtsOperationDistanceDistanceOp_initialize();
  ComVividsolutionsJtsOperationDistanceDistanceOp *distOp = [new_ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(g0, g1, distance) autorelease];
  return [distOp distance] <= distance;
}

IOSObjectArray *ComVividsolutionsJtsOperationDistanceDistanceOp_nearestPointsWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationDistanceDistanceOp_initialize();
  ComVividsolutionsJtsOperationDistanceDistanceOp *distOp = [new_ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1) autorelease];
  return [distOp nearestPoints];
}

IOSObjectArray *ComVividsolutionsJtsOperationDistanceDistanceOp_closestPointsWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationDistanceDistanceOp_initialize();
  ComVividsolutionsJtsOperationDistanceDistanceOp *distOp = [new_ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(g0, g1) autorelease];
  return [distOp nearestPoints];
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(self, g0, g1, 0.0);
}

ComVividsolutionsJtsOperationDistanceDistanceOp *new_ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationDistanceDistanceOp *self = [ComVividsolutionsJtsOperationDistanceDistanceOp alloc];
  ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(self, g0, g1);
  return self;
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1, jdouble terminateDistance) {
  NSObject_init(self);
  self->terminateDistance_ = 0.0;
  ComVividsolutionsJtsOperationDistanceDistanceOp_setAndConsume_ptLocator_(self, new_ComVividsolutionsJtsAlgorithmPointLocator_init());
  self->minDistance_ = JavaLangDouble_MAX_VALUE;
  ComVividsolutionsJtsOperationDistanceDistanceOp_setAndConsume_geom_(self, [IOSObjectArray newArrayWithLength:2 type:ComVividsolutionsJtsGeomGeometry_class_()]);
  IOSObjectArray_Set(self->geom_, 0, g0);
  IOSObjectArray_Set(self->geom_, 1, g1);
  self->terminateDistance_ = terminateDistance;
}

ComVividsolutionsJtsOperationDistanceDistanceOp *new_ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1, jdouble terminateDistance) {
  ComVividsolutionsJtsOperationDistanceDistanceOp *self = [ComVividsolutionsJtsOperationDistanceDistanceOp alloc];
  ComVividsolutionsJtsOperationDistanceDistanceOp_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(self, g0, g1, terminateDistance);
  return self;
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray_withBoolean_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, IOSObjectArray *locGeom, jboolean flip) {
  if (IOSObjectArray_Get(nil_chk(locGeom), 0) == nil) return;
  if (flip) {
    IOSObjectArray_Set(nil_chk(self->minDistanceLocation_), 0, IOSObjectArray_Get(locGeom, 1));
    IOSObjectArray_Set(self->minDistanceLocation_, 1, IOSObjectArray_Get(locGeom, 0));
  }
  else {
    IOSObjectArray_Set(nil_chk(self->minDistanceLocation_), 0, IOSObjectArray_Get(locGeom, 0));
    IOSObjectArray_Set(self->minDistanceLocation_, 1, IOSObjectArray_Get(locGeom, 1));
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistance(ComVividsolutionsJtsOperationDistanceDistanceOp *self) {
  if (self->minDistanceLocation_ != nil) return;
  ComVividsolutionsJtsOperationDistanceDistanceOp_setAndConsume_minDistanceLocation_(self, [IOSObjectArray newArrayWithLength:2 type:ComVividsolutionsJtsOperationDistanceGeometryLocation_class_()]);
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeContainmentDistance(self);
  if (self->minDistance_ <= self->terminateDistance_) return;
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeFacetDistance(self);
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeContainmentDistance(ComVividsolutionsJtsOperationDistanceDistanceOp *self) {
  IOSObjectArray *locPtPoly = [IOSObjectArray arrayWithLength:2 type:ComVividsolutionsJtsOperationDistanceGeometryLocation_class_()];
  id<JavaUtilList> polys1 = ComVividsolutionsJtsGeomUtilPolygonExtracter_getPolygonsWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(nil_chk(self->geom_), 1));
  if ([((id<JavaUtilList>) nil_chk(polys1)) size] > 0) {
    id<JavaUtilList> insideLocs0 = ComVividsolutionsJtsOperationDistanceConnectedElementLocationFilter_getLocationsWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(self->geom_, 0));
    ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, insideLocs0, polys1, locPtPoly);
    if (self->minDistance_ <= self->terminateDistance_) {
      IOSObjectArray_Set(nil_chk(self->minDistanceLocation_), 0, IOSObjectArray_Get(locPtPoly, 0));
      IOSObjectArray_Set(self->minDistanceLocation_, 1, IOSObjectArray_Get(locPtPoly, 1));
      return;
    }
  }
  id<JavaUtilList> polys0 = ComVividsolutionsJtsGeomUtilPolygonExtracter_getPolygonsWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(self->geom_, 0));
  if ([((id<JavaUtilList>) nil_chk(polys0)) size] > 0) {
    id<JavaUtilList> insideLocs1 = ComVividsolutionsJtsOperationDistanceConnectedElementLocationFilter_getLocationsWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(self->geom_, 1));
    ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, insideLocs1, polys0, locPtPoly);
    if (self->minDistance_ <= self->terminateDistance_) {
      IOSObjectArray_Set(nil_chk(self->minDistanceLocation_), 0, IOSObjectArray_Get(locPtPoly, 1));
      IOSObjectArray_Set(self->minDistanceLocation_, 1, IOSObjectArray_Get(locPtPoly, 0));
      return;
    }
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> locs, id<JavaUtilList> polys, IOSObjectArray *locPtPoly) {
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(locs)) size]; i++) {
    ComVividsolutionsJtsOperationDistanceGeometryLocation *loc = (ComVividsolutionsJtsOperationDistanceGeometryLocation *) check_class_cast([locs getWithInt:i], [ComVividsolutionsJtsOperationDistanceGeometryLocation class]);
    for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(polys)) size]; j++) {
      ComVividsolutionsJtsGeomPolygon *poly = (ComVividsolutionsJtsGeomPolygon *) check_class_cast([polys getWithInt:j], [ComVividsolutionsJtsGeomPolygon class]);
      ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithComVividsolutionsJtsOperationDistanceGeometryLocation_withComVividsolutionsJtsGeomPolygon_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, loc, poly, locPtPoly);
      if (self->minDistance_ <= self->terminateDistance_) {
        return;
      }
    }
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeInsideWithComVividsolutionsJtsOperationDistanceGeometryLocation_withComVividsolutionsJtsGeomPolygon_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsOperationDistanceGeometryLocation *ptLoc, ComVividsolutionsJtsGeomPolygon *poly, IOSObjectArray *locPtPoly) {
  ComVividsolutionsJtsGeomCoordinate *pt = [((ComVividsolutionsJtsOperationDistanceGeometryLocation *) nil_chk(ptLoc)) getCoordinate];
  if (ComVividsolutionsJtsGeomLocation_EXTERIOR != [((ComVividsolutionsJtsAlgorithmPointLocator *) nil_chk(self->ptLocator_)) locateWithComVividsolutionsJtsGeomCoordinate:pt withComVividsolutionsJtsGeomGeometry:poly]) {
    self->minDistance_ = 0.0;
    IOSObjectArray_Set(nil_chk(locPtPoly), 0, ptLoc);
    ComVividsolutionsJtsOperationDistanceGeometryLocation *locPoly = [new_ComVividsolutionsJtsOperationDistanceGeometryLocation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomCoordinate_(poly, pt) autorelease];
    IOSObjectArray_Set(locPtPoly, 1, locPoly);
    return;
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeFacetDistance(ComVividsolutionsJtsOperationDistanceDistanceOp *self) {
  IOSObjectArray *locGeom = [IOSObjectArray arrayWithLength:2 type:ComVividsolutionsJtsOperationDistanceGeometryLocation_class_()];
  id<JavaUtilList> lines0 = ComVividsolutionsJtsGeomUtilLinearComponentExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(nil_chk(self->geom_), 0));
  id<JavaUtilList> lines1 = ComVividsolutionsJtsGeomUtilLinearComponentExtracter_getLinesWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(self->geom_, 1));
  id<JavaUtilList> pts0 = ComVividsolutionsJtsGeomUtilPointExtracter_getPointsWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(self->geom_, 0));
  id<JavaUtilList> pts1 = ComVividsolutionsJtsGeomUtilPointExtracter_getPointsWithComVividsolutionsJtsGeomGeometry_(IOSObjectArray_Get(self->geom_, 1));
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, lines0, lines1, locGeom);
  ComVividsolutionsJtsOperationDistanceDistanceOp_updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray_withBoolean_(self, locGeom, NO);
  if (self->minDistance_ <= self->terminateDistance_) return;
  IOSObjectArray_Set(locGeom, 0, nil);
  IOSObjectArray_Set(locGeom, 1, nil);
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesPointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, lines0, pts1, locGeom);
  ComVividsolutionsJtsOperationDistanceDistanceOp_updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray_withBoolean_(self, locGeom, NO);
  if (self->minDistance_ <= self->terminateDistance_) return;
  IOSObjectArray_Set(locGeom, 0, nil);
  IOSObjectArray_Set(locGeom, 1, nil);
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesPointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, lines1, pts0, locGeom);
  ComVividsolutionsJtsOperationDistanceDistanceOp_updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray_withBoolean_(self, locGeom, YES);
  if (self->minDistance_ <= self->terminateDistance_) return;
  IOSObjectArray_Set(locGeom, 0, nil);
  IOSObjectArray_Set(locGeom, 1, nil);
  ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistancePointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, pts0, pts1, locGeom);
  ComVividsolutionsJtsOperationDistanceDistanceOp_updateMinDistanceWithComVividsolutionsJtsOperationDistanceGeometryLocationArray_withBoolean_(self, locGeom, NO);
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> lines0, id<JavaUtilList> lines1, IOSObjectArray *locGeom) {
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(lines0)) size]; i++) {
    ComVividsolutionsJtsGeomLineString *line0 = (ComVividsolutionsJtsGeomLineString *) check_class_cast([lines0 getWithInt:i], [ComVividsolutionsJtsGeomLineString class]);
    for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(lines1)) size]; j++) {
      ComVividsolutionsJtsGeomLineString *line1 = (ComVividsolutionsJtsGeomLineString *) check_class_cast([lines1 getWithInt:j], [ComVividsolutionsJtsGeomLineString class]);
      ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, line0, line1, locGeom);
      if (self->minDistance_ <= self->terminateDistance_) return;
    }
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistancePointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> points0, id<JavaUtilList> points1, IOSObjectArray *locGeom) {
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(points0)) size]; i++) {
    ComVividsolutionsJtsGeomPoint *pt0 = (ComVividsolutionsJtsGeomPoint *) check_class_cast([points0 getWithInt:i], [ComVividsolutionsJtsGeomPoint class]);
    for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(points1)) size]; j++) {
      ComVividsolutionsJtsGeomPoint *pt1 = (ComVividsolutionsJtsGeomPoint *) check_class_cast([points1 getWithInt:j], [ComVividsolutionsJtsGeomPoint class]);
      jdouble dist = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk([((ComVividsolutionsJtsGeomPoint *) nil_chk(pt0)) getCoordinate])) distanceWithComVividsolutionsJtsGeomCoordinate:[((ComVividsolutionsJtsGeomPoint *) nil_chk(pt1)) getCoordinate]];
      if (dist < self->minDistance_) {
        self->minDistance_ = dist;
        IOSObjectArray_SetAndConsume(nil_chk(locGeom), 0, new_ComVividsolutionsJtsOperationDistanceGeometryLocation_initWithComVividsolutionsJtsGeomGeometry_withInt_withComVividsolutionsJtsGeomCoordinate_(pt0, 0, [pt0 getCoordinate]));
        IOSObjectArray_SetAndConsume(locGeom, 1, new_ComVividsolutionsJtsOperationDistanceGeometryLocation_initWithComVividsolutionsJtsGeomGeometry_withInt_withComVividsolutionsJtsGeomCoordinate_(pt1, 0, [pt1 getCoordinate]));
      }
      if (self->minDistance_ <= self->terminateDistance_) return;
    }
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceLinesPointsWithJavaUtilList_withJavaUtilList_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, id<JavaUtilList> lines, id<JavaUtilList> points, IOSObjectArray *locGeom) {
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(lines)) size]; i++) {
    ComVividsolutionsJtsGeomLineString *line = (ComVividsolutionsJtsGeomLineString *) check_class_cast([lines getWithInt:i], [ComVividsolutionsJtsGeomLineString class]);
    for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(points)) size]; j++) {
      ComVividsolutionsJtsGeomPoint *pt = (ComVividsolutionsJtsGeomPoint *) check_class_cast([points getWithInt:j], [ComVividsolutionsJtsGeomPoint class]);
      ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomPoint_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(self, line, pt, locGeom);
      if (self->minDistance_ <= self->terminateDistance_) return;
    }
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsGeomLineString *line0, ComVividsolutionsJtsGeomLineString *line1, IOSObjectArray *locGeom) {
  if ([((ComVividsolutionsJtsGeomEnvelope *) nil_chk([((ComVividsolutionsJtsGeomLineString *) nil_chk(line0)) getEnvelopeInternal])) distanceWithComVividsolutionsJtsGeomEnvelope:[((ComVividsolutionsJtsGeomLineString *) nil_chk(line1)) getEnvelopeInternal]] > self->minDistance_) return;
  IOSObjectArray *coord0 = [line0 getCoordinates];
  IOSObjectArray *coord1 = [line1 getCoordinates];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coord0))->size_ - 1; i++) {
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(coord1))->size_ - 1; j++) {
      jdouble dist = ComVividsolutionsJtsAlgorithmCGAlgorithms_distanceLineLineWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(coord0, i), IOSObjectArray_Get(coord0, i + 1), IOSObjectArray_Get(coord1, j), IOSObjectArray_Get(coord1, j + 1));
      if (dist < self->minDistance_) {
        self->minDistance_ = dist;
        ComVividsolutionsJtsGeomLineSegment *seg0 = [new_ComVividsolutionsJtsGeomLineSegment_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(coord0, i), IOSObjectArray_Get(coord0, i + 1)) autorelease];
        ComVividsolutionsJtsGeomLineSegment *seg1 = [new_ComVividsolutionsJtsGeomLineSegment_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(coord1, j), IOSObjectArray_Get(coord1, j + 1)) autorelease];
        IOSObjectArray *closestPt = [seg0 closestPointsWithComVividsolutionsJtsGeomLineSegment:seg1];
        IOSObjectArray_SetAndConsume(nil_chk(locGeom), 0, new_ComVividsolutionsJtsOperationDistanceGeometryLocation_initWithComVividsolutionsJtsGeomGeometry_withInt_withComVividsolutionsJtsGeomCoordinate_(line0, i, IOSObjectArray_Get(nil_chk(closestPt), 0)));
        IOSObjectArray_SetAndConsume(locGeom, 1, new_ComVividsolutionsJtsOperationDistanceGeometryLocation_initWithComVividsolutionsJtsGeomGeometry_withInt_withComVividsolutionsJtsGeomCoordinate_(line1, j, IOSObjectArray_Get(closestPt, 1)));
      }
      if (self->minDistance_ <= self->terminateDistance_) return;
    }
  }
}

void ComVividsolutionsJtsOperationDistanceDistanceOp_computeMinDistanceWithComVividsolutionsJtsGeomLineString_withComVividsolutionsJtsGeomPoint_withComVividsolutionsJtsOperationDistanceGeometryLocationArray_(ComVividsolutionsJtsOperationDistanceDistanceOp *self, ComVividsolutionsJtsGeomLineString *line, ComVividsolutionsJtsGeomPoint *pt, IOSObjectArray *locGeom) {
  if ([((ComVividsolutionsJtsGeomEnvelope *) nil_chk([((ComVividsolutionsJtsGeomLineString *) nil_chk(line)) getEnvelopeInternal])) distanceWithComVividsolutionsJtsGeomEnvelope:[((ComVividsolutionsJtsGeomPoint *) nil_chk(pt)) getEnvelopeInternal]] > self->minDistance_) return;
  IOSObjectArray *coord0 = [line getCoordinates];
  ComVividsolutionsJtsGeomCoordinate *coord = [pt getCoordinate];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coord0))->size_ - 1; i++) {
    jdouble dist = ComVividsolutionsJtsAlgorithmCGAlgorithms_distancePointLineWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(coord, IOSObjectArray_Get(coord0, i), IOSObjectArray_Get(coord0, i + 1));
    if (dist < self->minDistance_) {
      self->minDistance_ = dist;
      ComVividsolutionsJtsGeomLineSegment *seg = [new_ComVividsolutionsJtsGeomLineSegment_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(coord0, i), IOSObjectArray_Get(coord0, i + 1)) autorelease];
      ComVividsolutionsJtsGeomCoordinate *segClosestPoint = [seg closestPointWithComVividsolutionsJtsGeomCoordinate:coord];
      IOSObjectArray_SetAndConsume(nil_chk(locGeom), 0, new_ComVividsolutionsJtsOperationDistanceGeometryLocation_initWithComVividsolutionsJtsGeomGeometry_withInt_withComVividsolutionsJtsGeomCoordinate_(line, i, segClosestPoint));
      IOSObjectArray_SetAndConsume(locGeom, 1, new_ComVividsolutionsJtsOperationDistanceGeometryLocation_initWithComVividsolutionsJtsGeomGeometry_withInt_withComVividsolutionsJtsGeomCoordinate_(pt, 0, coord));
    }
    if (self->minDistance_ <= self->terminateDistance_) return;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationDistanceDistanceOp)
