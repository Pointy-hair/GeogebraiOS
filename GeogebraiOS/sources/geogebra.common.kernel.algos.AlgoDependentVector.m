//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoDependentVector.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoDependentVector.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/Algos.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/VectorValue.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "java/lang/Exception.h"

@interface GeogebraCommonKernelAlgosAlgoDependentVector () {
 @public
  GeogebraCommonKernelArithmeticExpressionNode *root_;
  GeogebraCommonKernelGeosGeoVector *v_;
  GeogebraCommonKernelGeosGeoVec2D *temp_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentVector, root_, GeogebraCommonKernelArithmeticExpressionNode *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentVector, v_, GeogebraCommonKernelGeosGeoVector *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoDependentVector, temp_, GeogebraCommonKernelGeosGeoVec2D *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoDependentVector_compute(GeogebraCommonKernelAlgosAlgoDependentVector *self);

@implementation GeogebraCommonKernelAlgosAlgoDependentVector

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)root {
  GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, label, root);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
        withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)root {
  GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, root);
  return self;
}

- (GeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return GeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_set_input_(self, [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(root_)) getGeoElementVariables]);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:v_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoVector *)getVector {
  return v_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoDependentVector_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(root_)) toStringWithGeogebraCommonKernelStringTemplate:tpl];
}

- (GeogebraCommonKernelArithmeticExpressionNode *)getExpression {
  return root_;
}

- (void)dealloc {
  RELEASE_(root_);
  RELEASE_(v_);
  RELEASE_(temp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticExpressionNode:", "AlgoDependentVector", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelArithmeticExpressionNode:", "AlgoDependentVector", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getVector", NULL, "Lgeogebra.common.kernel.geos.GeoVector;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getExpression", NULL, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "root_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "temp_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoDependentVector = { 2, "AlgoDependentVector", "geogebra.common.kernel.algos", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoDependentVector;
}

@end

void GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelAlgosAlgoDependentVector *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, root);
  [((GeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoDependentVector *new_GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonKernelAlgosAlgoDependentVector *self = [GeogebraCommonKernelAlgosAlgoDependentVector alloc];
  GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, label, root);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelAlgosAlgoDependentVector *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoDependentVector_set_root_(self, root);
  GeogebraCommonKernelAlgosAlgoDependentVector_setAndConsume_v_(self, new_GeogebraCommonKernelGeosGeoVector_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  self->v_->z_ = 0.0;
  GeogebraCommonKernelAlgosAlgoDependentVector_compute(self);
}

GeogebraCommonKernelAlgosAlgoDependentVector *new_GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelArithmeticExpressionNode *root) {
  GeogebraCommonKernelAlgosAlgoDependentVector *self = [GeogebraCommonKernelAlgosAlgoDependentVector alloc];
  GeogebraCommonKernelAlgosAlgoDependentVector_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticExpressionNode_(self, cons, root);
  return self;
}

void GeogebraCommonKernelAlgosAlgoDependentVector_compute(GeogebraCommonKernelAlgosAlgoDependentVector *self) {
  @try {
    GeogebraCommonKernelAlgosAlgoDependentVector_set_temp_(self, [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(self->root_)) evaluateWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()], @protocol(GeogebraCommonKernelArithmeticVectorValue))))) getVector]);
    ((GeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_))->x_ = [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->temp_)) getX];
    self->v_->y_ = [self->temp_ getY];
  }
  @catch (JavaLangException *e) {
    [((GeogebraCommonKernelGeosGeoVector *) nil_chk(self->v_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoDependentVector)
