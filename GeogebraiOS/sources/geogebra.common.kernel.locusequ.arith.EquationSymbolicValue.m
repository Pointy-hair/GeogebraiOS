//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/arith/EquationSymbolicValue.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/locusequ/EquationTranslator.h"
#include "geogebra/common/kernel/locusequ/arith/EquationSymbolicValue.h"
#include "geogebra/common/kernel/locusequ/arith/EquationValue.h"
#include "java/lang/Double.h"

@interface GeogebraCommonKernelLocusequArithEquationSymbolicValue () {
 @public
  jint id__;
}

@end

@implementation GeogebraCommonKernelLocusequArithEquationSymbolicValue

- (instancetype)initWithInt:(jint)id_ {
  GeogebraCommonKernelLocusequArithEquationSymbolicValue_initWithInt_(self, id_);
  return self;
}

- (jint)getId {
  return self->id__;
}

- (jboolean)isSymbolicValue {
  return YES;
}

- (id)translateImplWithGeogebraCommonKernelLocusequEquationTranslator:(GeogebraCommonKernelLocusequEquationTranslator *)translator {
  return [((GeogebraCommonKernelLocusequEquationTranslator *) nil_chk(translator)) symbolicWithInt:[self getId]];
}

- (jlong)toLong {
  return 0;
}

- (NSString *)description {
  return JreStrcat("CI", 'x', [self getId]);
}

- (jboolean)containsSymbolicValuesImpl {
  return YES;
}

- (jdouble)computeValueImpl {
  return JavaLangDouble_NaN;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "EquationSymbolicValue", NULL, 0x1, NULL, NULL },
    { "getId", NULL, "I", 0x1, NULL, NULL },
    { "isSymbolicValue", NULL, "Z", 0x1, NULL, NULL },
    { "translateImplWithGeogebraCommonKernelLocusequEquationTranslator:", "translateImpl", "TT;", 0x4, NULL, "<T:Ljava/lang/Object;>(Lgeogebra/common/kernel/locusequ/EquationTranslator<TT;>;)TT;" },
    { "toLong", NULL, "J", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "containsSymbolicValuesImpl", NULL, "Z", 0x4, NULL, NULL },
    { "computeValueImpl", NULL, "D", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "id", 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequArithEquationSymbolicValue = { 2, "EquationSymbolicValue", "geogebra.common.kernel.locusequ.arith", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequArithEquationSymbolicValue;
}

@end

void GeogebraCommonKernelLocusequArithEquationSymbolicValue_initWithInt_(GeogebraCommonKernelLocusequArithEquationSymbolicValue *self, jint id_) {
  GeogebraCommonKernelLocusequArithEquationValue_init(self);
  self->id__ = id_;
}

GeogebraCommonKernelLocusequArithEquationSymbolicValue *new_GeogebraCommonKernelLocusequArithEquationSymbolicValue_initWithInt_(jint id_) {
  GeogebraCommonKernelLocusequArithEquationSymbolicValue *self = [GeogebraCommonKernelLocusequArithEquationSymbolicValue alloc];
  GeogebraCommonKernelLocusequArithEquationSymbolicValue_initWithInt_(self, id_);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequArithEquationSymbolicValue)
