//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/move/ggtapi/models/json/JSONNumber.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/move/ggtapi/models/json/JSONNumber.h"
#include "geogebra/common/move/ggtapi/models/json/JSONValue.h"
#include "java/lang/Double.h"
#include "java/lang/StringBuffer.h"

@interface GeogebraCommonMoveGgtapiModelsJsonJSONNumber () {
 @public
  jdouble value_;
}

+ (jdouble)unwrapWithGeogebraCommonMoveGgtapiModelsJsonJSONNumber:(GeogebraCommonMoveGgtapiModelsJsonJSONNumber *)value;

@end

__attribute__((unused)) static jdouble GeogebraCommonMoveGgtapiModelsJsonJSONNumber_unwrapWithGeogebraCommonMoveGgtapiModelsJsonJSONNumber_(GeogebraCommonMoveGgtapiModelsJsonJSONNumber *value);

@implementation GeogebraCommonMoveGgtapiModelsJsonJSONNumber

+ (jdouble)unwrapWithGeogebraCommonMoveGgtapiModelsJsonJSONNumber:(GeogebraCommonMoveGgtapiModelsJsonJSONNumber *)value {
  return GeogebraCommonMoveGgtapiModelsJsonJSONNumber_unwrapWithGeogebraCommonMoveGgtapiModelsJsonJSONNumber_(value);
}

- (instancetype)initWithDouble:(jdouble)value {
  GeogebraCommonMoveGgtapiModelsJsonJSONNumber_initWithDouble_(self, value);
  return self;
}

- (jdouble)doubleValue {
  return value_;
}

- (jboolean)isEqual:(id)other {
  if (!([other isKindOfClass:[GeogebraCommonMoveGgtapiModelsJsonJSONNumber class]])) {
    return NO;
  }
  return value_ == ((GeogebraCommonMoveGgtapiModelsJsonJSONNumber *) nil_chk(((GeogebraCommonMoveGgtapiModelsJsonJSONNumber *) check_class_cast(other, [GeogebraCommonMoveGgtapiModelsJsonJSONNumber class]))))->value_;
}

- (NSUInteger)hash {
  return ((jint) [JavaLangDouble_valueOfWithDouble_(value_) hash]);
}

- (GeogebraCommonMoveGgtapiModelsJsonJSONNumber *)isNumber {
  return self;
}

- (NSString *)description {
  return NSString_valueOfDouble_(value_);
}

- (void)appendToWithJavaLangStringBuffer:(JavaLangStringBuffer *)b {
  [((JavaLangStringBuffer *) nil_chk(b)) appendWithNSString:NSString_valueOfDouble_(value_)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "unwrapWithGeogebraCommonMoveGgtapiModelsJsonJSONNumber:", "unwrap", "D", 0xa, NULL, NULL },
    { "initWithDouble:", "JSONNumber", NULL, 0x1, NULL, NULL },
    { "doubleValue", NULL, "D", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isNumber", NULL, "Lgeogebra.common.move.ggtapi.models.json.JSONNumber;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "appendToWithJavaLangStringBuffer:", "appendTo", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiModelsJsonJSONNumber = { 2, "JSONNumber", "geogebra.common.move.ggtapi.models.json", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMoveGgtapiModelsJsonJSONNumber;
}

@end

jdouble GeogebraCommonMoveGgtapiModelsJsonJSONNumber_unwrapWithGeogebraCommonMoveGgtapiModelsJsonJSONNumber_(GeogebraCommonMoveGgtapiModelsJsonJSONNumber *value) {
  GeogebraCommonMoveGgtapiModelsJsonJSONNumber_initialize();
  return ((GeogebraCommonMoveGgtapiModelsJsonJSONNumber *) nil_chk(value))->value_;
}

void GeogebraCommonMoveGgtapiModelsJsonJSONNumber_initWithDouble_(GeogebraCommonMoveGgtapiModelsJsonJSONNumber *self, jdouble value) {
  GeogebraCommonMoveGgtapiModelsJsonJSONValue_init(self);
  self->value_ = value;
}

GeogebraCommonMoveGgtapiModelsJsonJSONNumber *new_GeogebraCommonMoveGgtapiModelsJsonJSONNumber_initWithDouble_(jdouble value) {
  GeogebraCommonMoveGgtapiModelsJsonJSONNumber *self = [GeogebraCommonMoveGgtapiModelsJsonJSONNumber alloc];
  GeogebraCommonMoveGgtapiModelsJsonJSONNumber_initWithDouble_(self, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiModelsJsonJSONNumber)
