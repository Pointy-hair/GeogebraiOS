//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/apache/commons/math/fraction/BigFraction.h"
#include "org/apache/commons/math/linear/Array2DRowFieldMatrix.h"
#include "org/apache/commons/math/linear/Array2DRowRealMatrix.h"
#include "org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.h"
#include "org/apache/commons/math/linear/FieldDecompositionSolver.h"
#include "org/apache/commons/math/linear/FieldLUDecompositionImpl.h"
#include "org/apache/commons/math/linear/FieldMatrix.h"
#include "org/apache/commons/math/linear/MatrixUtils.h"
#include "org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.h"

@interface OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer () {
 @public
  OrgApacheCommonsMathLinearArray2DRowRealMatrix *initialization_;
  OrgApacheCommonsMathLinearArray2DRowRealMatrix *update_;
  IOSDoubleArray *c1_;
}

- (instancetype)initWithInt:(jint)nSteps;

- (id<OrgApacheCommonsMathLinearFieldMatrix>)buildPWithInt:(jint)nSteps;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer, initialization_, OrgApacheCommonsMathLinearArray2DRowRealMatrix *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer, update_, OrgApacheCommonsMathLinearArray2DRowRealMatrix *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer, c1_, IOSDoubleArray *)

static id<JavaUtilMap> OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_CACHE_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer, CACHE_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initWithInt_(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *self, jint nSteps);

__attribute__((unused)) static OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *new_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initWithInt_(jint nSteps) NS_RETURNS_RETAINED;

__attribute__((unused)) static id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_buildPWithInt_(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *self, jint nSteps);

@interface OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 : OrgApacheCommonsMathLinearDefaultFieldMatrixChangingVisitor

- (OrgApacheCommonsMathFractionBigFraction *)visitWithInt:(jint)row
                                                  withInt:(jint)column
                     withOrgApacheCommonsMathFieldElement:(OrgApacheCommonsMathFractionBigFraction *)value;

- (instancetype)initWithOrgApacheCommonsMathFractionBigFraction:(OrgApacheCommonsMathFractionBigFraction *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1)

__attribute__((unused)) static void OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1_initWithOrgApacheCommonsMathFractionBigFraction_(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 *self, OrgApacheCommonsMathFractionBigFraction *arg$0);

__attribute__((unused)) static OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 *new_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1_initWithOrgApacheCommonsMathFractionBigFraction_(OrgApacheCommonsMathFractionBigFraction *arg$0) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer)

@implementation OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer

- (instancetype)initWithInt:(jint)nSteps {
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initWithInt_(self, nSteps);
  return self;
}

+ (OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *)getInstanceWithInt:(jint)nSteps {
  return OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_getInstanceWithInt_(nSteps);
}

- (jint)getNSteps {
  return ((IOSDoubleArray *) nil_chk(c1_))->size_;
}

- (id<OrgApacheCommonsMathLinearFieldMatrix>)buildPWithInt:(jint)nSteps {
  return OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_buildPWithInt_(self, nSteps);
}

- (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)initializeHighOrderDerivativesWithDoubleArray:(IOSDoubleArray *)first
                                                                                 withDoubleArray2:(IOSObjectArray *)multistep {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(multistep))->size_; ++i) {
    IOSDoubleArray *msI = IOSObjectArray_Get(multistep, i);
    for (jint j = 0; j < ((IOSDoubleArray *) nil_chk(first))->size_; ++j) {
      *IOSDoubleArray_GetRef(nil_chk(msI), j) -= IOSDoubleArray_Get(first, j);
    }
  }
  return [((OrgApacheCommonsMathLinearArray2DRowRealMatrix *) nil_chk(initialization_)) multiplyWithOrgApacheCommonsMathLinearArray2DRowRealMatrix:[new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_withBoolean_(multistep, NO) autorelease]];
}

- (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)updateHighOrderDerivativesPhase1WithOrgApacheCommonsMathLinearArray2DRowRealMatrix:(OrgApacheCommonsMathLinearArray2DRowRealMatrix *)highOrder {
  return [((OrgApacheCommonsMathLinearArray2DRowRealMatrix *) nil_chk(update_)) multiplyWithOrgApacheCommonsMathLinearArray2DRowRealMatrix:highOrder];
}

- (void)updateHighOrderDerivativesPhase2WithDoubleArray:(IOSDoubleArray *)start
                                        withDoubleArray:(IOSDoubleArray *)end
     withOrgApacheCommonsMathLinearArray2DRowRealMatrix:(OrgApacheCommonsMathLinearArray2DRowRealMatrix *)highOrder {
  IOSObjectArray *data = [((OrgApacheCommonsMathLinearArray2DRowRealMatrix *) nil_chk(highOrder)) getDataRef];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(data))->size_; ++i) {
    IOSDoubleArray *dataI = IOSObjectArray_Get(data, i);
    jdouble c1I = IOSDoubleArray_Get(nil_chk(c1_), i);
    for (jint j = 0; j < ((IOSDoubleArray *) nil_chk(dataI))->size_; ++j) {
      *IOSDoubleArray_GetRef(dataI, j) += c1I * (IOSDoubleArray_Get(nil_chk(start), j) - IOSDoubleArray_Get(nil_chk(end), j));
    }
  }
}

- (void)dealloc {
  RELEASE_(initialization_);
  RELEASE_(update_);
  RELEASE_(c1_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_CACHE_, nil, new_JavaUtilHashMap_init());
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "AdamsNordsieckTransformer", NULL, 0x2, NULL, NULL },
    { "getInstanceWithInt:", "getInstance", "Lorg.apache.commons.math.ode.nonstiff.AdamsNordsieckTransformer;", 0x9, NULL, NULL },
    { "getNSteps", NULL, "I", 0x1, NULL, NULL },
    { "buildPWithInt:", "buildP", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x2, NULL, NULL },
    { "initializeHighOrderDerivativesWithDoubleArray:withDoubleArray2:", "initializeHighOrderDerivatives", "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", 0x1, NULL, NULL },
    { "updateHighOrderDerivativesPhase1WithOrgApacheCommonsMathLinearArray2DRowRealMatrix:", "updateHighOrderDerivativesPhase1", "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", 0x1, NULL, NULL },
    { "updateHighOrderDerivativesPhase2WithDoubleArray:withDoubleArray:withOrgApacheCommonsMathLinearArray2DRowRealMatrix:", "updateHighOrderDerivativesPhase2", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CACHE_", NULL, 0x1a, "Ljava.util.Map;", &OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_CACHE_, "Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer;>;",  },
    { "initialization_", NULL, 0x12, "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", NULL, NULL,  },
    { "update_", NULL, 0x12, "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", NULL, NULL,  },
    { "c1_", NULL, 0x12, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer = { 2, "AdamsNordsieckTransformer", "org.apache.commons.math.ode.nonstiff", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer;
}

@end

void OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initWithInt_(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *self, jint nSteps) {
  NSObject_init(self);
  id<OrgApacheCommonsMathLinearFieldMatrix> bigP = OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_buildPWithInt_(self, nSteps);
  id<OrgApacheCommonsMathLinearFieldDecompositionSolver> pSolver = [((OrgApacheCommonsMathLinearFieldLUDecompositionImpl *) [new_OrgApacheCommonsMathLinearFieldLUDecompositionImpl_initWithOrgApacheCommonsMathLinearFieldMatrix_(bigP) autorelease]) getSolver];
  IOSObjectArray *u = [IOSObjectArray arrayWithLength:nSteps type:OrgApacheCommonsMathFractionBigFraction_class_()];
  JavaUtilArrays_fillWithNSObjectArray_withId_(u, OrgApacheCommonsMathFractionBigFraction_get_ONE_());
  IOSObjectArray *bigC1 = [((id<OrgApacheCommonsMathLinearFieldDecompositionSolver>) nil_chk(pSolver)) solveWithOrgApacheCommonsMathFieldElementArray:u];
  IOSObjectArray *shiftedP = [((id<OrgApacheCommonsMathLinearFieldMatrix>) nil_chk(bigP)) getData];
  for (jint i = ((IOSObjectArray *) nil_chk(shiftedP))->size_ - 1; i > 0; --i) {
    IOSObjectArray_Set(shiftedP, i, IOSObjectArray_Get(shiftedP, i - 1));
  }
  IOSObjectArray_SetAndConsume(shiftedP, 0, [IOSObjectArray newArrayWithLength:nSteps type:OrgApacheCommonsMathFractionBigFraction_class_()]);
  JavaUtilArrays_fillWithNSObjectArray_withId_(IOSObjectArray_Get(shiftedP, 0), OrgApacheCommonsMathFractionBigFraction_get_ZERO_());
  id<OrgApacheCommonsMathLinearFieldMatrix> bigMSupdate = [pSolver solveWithOrgApacheCommonsMathLinearFieldMatrix:[new_OrgApacheCommonsMathLinearArray2DRowFieldMatrix_initWithOrgApacheCommonsMathFieldElementArray2_withBoolean_(shiftedP, NO) autorelease]];
  [bigP walkInOptimizedOrderWithOrgApacheCommonsMathLinearFieldMatrixChangingVisitor:[new_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1_initWithOrgApacheCommonsMathFractionBigFraction_(OrgApacheCommonsMathFractionBigFraction_get_ZERO_()) autorelease]];
  id<OrgApacheCommonsMathLinearFieldMatrix> bigRInverse = [((id<OrgApacheCommonsMathLinearFieldDecompositionSolver>) nil_chk([((OrgApacheCommonsMathLinearFieldLUDecompositionImpl *) [new_OrgApacheCommonsMathLinearFieldLUDecompositionImpl_initWithOrgApacheCommonsMathLinearFieldMatrix_(bigP) autorelease]) getSolver])) getInverse];
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_set_initialization_(self, OrgApacheCommonsMathLinearMatrixUtils_bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(bigRInverse));
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_set_update_(self, OrgApacheCommonsMathLinearMatrixUtils_bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(bigMSupdate));
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_setAndConsume_c1_(self, [IOSDoubleArray newArrayWithLength:nSteps]);
  for (jint i = 0; i < nSteps; ++i) {
    *IOSDoubleArray_GetRef(self->c1_, i) = [((OrgApacheCommonsMathFractionBigFraction *) nil_chk(IOSObjectArray_Get(nil_chk(bigC1), i))) doubleValue];
  }
}

OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *new_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initWithInt_(jint nSteps) {
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *self = [OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer alloc];
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initWithInt_(self, nSteps);
  return self;
}

OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_getInstanceWithInt_(jint nSteps) {
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initialize();
  @synchronized(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_CACHE_) {
    OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *t = [((id<JavaUtilMap>) nil_chk(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_CACHE_)) getWithId:JavaLangInteger_valueOfWithInt_(nSteps)];
    if (t == nil) {
      t = [new_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_initWithInt_(nSteps) autorelease];
      [OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_CACHE_ putWithId:JavaLangInteger_valueOfWithInt_(nSteps) withId:t];
    }
    return t;
  }
}

id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_buildPWithInt_(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer *self, jint nSteps) {
  IOSObjectArray *pData = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ nSteps, nSteps } type:OrgApacheCommonsMathFractionBigFraction_class_()];
  for (jint i = 0; i < pData->size_; ++i) {
    IOSObjectArray *pI = IOSObjectArray_Get(pData, i);
    jint factor = -(i + 1);
    jint aj = factor;
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(pI))->size_; ++j) {
      IOSObjectArray_SetAndConsume(pI, j, new_OrgApacheCommonsMathFractionBigFraction_initWithInt_(aj * (j + 2)));
      aj *= factor;
    }
  }
  return [new_OrgApacheCommonsMathLinearArray2DRowFieldMatrix_initWithOrgApacheCommonsMathFieldElementArray2_withBoolean_(pData, NO) autorelease];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer)

@implementation OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1

- (OrgApacheCommonsMathFractionBigFraction *)visitWithInt:(jint)row
                                                  withInt:(jint)column
                     withOrgApacheCommonsMathFieldElement:(OrgApacheCommonsMathFractionBigFraction *)value {
  return ((column & (jint) 0x1) == (jint) 0x1) ? value : [((OrgApacheCommonsMathFractionBigFraction *) nil_chk(value)) negate];
}

- (instancetype)initWithOrgApacheCommonsMathFractionBigFraction:(OrgApacheCommonsMathFractionBigFraction *)arg$0 {
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1_initWithOrgApacheCommonsMathFractionBigFraction_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "visitWithInt:withInt:withOrgApacheCommonsMathFieldElement:", "visit", "Lorg.apache.commons.math.fraction.BigFraction;", 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathFractionBigFraction:", "", NULL, 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.commons.math.fraction.BigFraction;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer", "initWithInt:" };
  static const J2ObjcClassInfo _OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 = { 2, "", "org.apache.commons.math.ode.nonstiff", "AdamsNordsieckTransformer", 0x8008, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lorg/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor<Lorg/apache/commons/math/fraction/BigFraction;>;" };
  return &_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1;
}

@end

void OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1_initWithOrgApacheCommonsMathFractionBigFraction_(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 *self, OrgApacheCommonsMathFractionBigFraction *arg$0) {
  OrgApacheCommonsMathLinearDefaultFieldMatrixChangingVisitor_initWithOrgApacheCommonsMathFieldElement_(self, arg$0);
}

OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 *new_OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1_initWithOrgApacheCommonsMathFractionBigFraction_(OrgApacheCommonsMathFractionBigFraction *arg$0) {
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 *self = [OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1 alloc];
  OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1_initWithOrgApacheCommonsMathFractionBigFraction_(self, arg$0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathOdeNonstiffAdamsNordsieckTransformer_$1)
