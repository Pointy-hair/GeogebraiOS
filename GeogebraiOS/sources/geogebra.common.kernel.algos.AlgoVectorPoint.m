//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoVectorPoint.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoVectorPoint.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"

@interface GeogebraCommonKernelAlgosAlgoVectorPoint () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> P_;
  id<GeogebraCommonKernelKernelNDGeoVectorND> v_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVectorPoint, P_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoVectorPoint, v_, id<GeogebraCommonKernelKernelNDGeoVectorND>)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoVectorPoint_compute(GeogebraCommonKernelAlgosAlgoVectorPoint *self);

@implementation GeogebraCommonKernelAlgosAlgoVectorPoint

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P {
  GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, P);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P {
  GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)createNewVector {
  return [new_GeogebraCommonKernelGeosGeoVector_initWithGeogebraCommonKernelConstruction_(cons_) autorelease];
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Vector();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_VECTOR_FROM_POINT;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoElement class]));
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *) check_class_cast(v_, [GeogebraCommonKernelGeosGeoElement class])];
  [self setDependencies];
}

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)getVector {
  return v_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getP {
  return P_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoVectorPoint_compute(self);
}

- (void)setCoords {
  GeogebraCommonKernelGeosGeoVector *v2D = (GeogebraCommonKernelGeosGeoVector *) check_class_cast(v_, [GeogebraCommonKernelGeosGeoVector class]);
  ((GeogebraCommonKernelGeosGeoVector *) nil_chk(v2D))->x_ = ((GeogebraCommonKernelGeosGeoPoint *) nil_chk(((GeogebraCommonKernelGeosGeoPoint *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoPoint class]))))->inhomX_;
  v2D->y_ = ((GeogebraCommonKernelGeosGeoPoint *) nil_chk(((GeogebraCommonKernelGeosGeoPoint *) check_class_cast(P_, [GeogebraCommonKernelGeosGeoPoint class]))))->inhomY_;
  v2D->z_ = 0.0;
}

- (void)dealloc {
  RELEASE_(P_);
  RELEASE_(v_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoVectorPoint", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoVectorPoint", NULL, 0x1, NULL, NULL },
    { "createNewVector", NULL, "Lgeogebra.common.kernel.kernelND.GeoVectorND;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getVector", NULL, "Lgeogebra.common.kernel.kernelND.GeoVectorND;", 0x1, NULL, NULL },
    { "getP", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setCoords", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "P_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "v_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoVectorND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoVectorPoint = { 2, "AlgoVectorPoint", "geogebra.common.kernel.algos", NULL, 0x1, 10, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoVectorPoint;
}

@end

void GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoVectorPoint *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P);
  [((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(self->v_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoVectorPoint *new_GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoVectorPoint *self = [GeogebraCommonKernelAlgosAlgoVectorPoint alloc];
  GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, P);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoVectorPoint *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoVectorPoint_set_P_(self, P);
  GeogebraCommonKernelAlgosAlgoVectorPoint_set_v_(self, [self createNewVector]);
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoVectorPoint_compute(self);
}

GeogebraCommonKernelAlgosAlgoVectorPoint *new_GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoVectorPoint *self = [GeogebraCommonKernelAlgosAlgoVectorPoint alloc];
  GeogebraCommonKernelAlgosAlgoVectorPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P);
  return self;
}

void GeogebraCommonKernelAlgosAlgoVectorPoint_compute(GeogebraCommonKernelAlgosAlgoVectorPoint *self) {
  if ([((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->P_)) isFinite]) {
    [self setCoords];
  }
  else {
    [((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(self->v_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoVectorPoint)
