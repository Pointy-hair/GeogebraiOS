//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/ImageCornerModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "geogebra/common/gui/dialog/options/model/ImageCornerModel.h"
#include "geogebra/common/gui/dialog/options/model/MultipleOptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoImage.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/Localization.h"
#include "geogebra/common/plugin/GeoClass.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/TreeSet.h"

@interface GeogebraCommonGuiDialogOptionsModelImageCornerModel () {
 @public
  id<JavaUtilList> choices_;
  GeogebraCommonKernelKernel *kernel_;
  jint cornerIdx_;
  GeogebraCommonMainApp *app_;
}

- (jint)indexOfWithNSString:(NSString *)item;

- (GeogebraCommonKernelGeosGeoImage *)getGeoImageAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelImageCornerModel, choices_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelImageCornerModel, kernel_, GeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelImageCornerModel, app_, GeogebraCommonMainApp *)

__attribute__((unused)) static GeogebraCommonKernelGeosGeoImage *GeogebraCommonGuiDialogOptionsModelImageCornerModel_getGeoImageAtWithInt_(GeogebraCommonGuiDialogOptionsModelImageCornerModel *self, jint index);

@implementation GeogebraCommonGuiDialogOptionsModelImageCornerModel

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
withGeogebraCommonGuiDialogOptionsModelIComboListener:(id<GeogebraCommonGuiDialogOptionsModelIComboListener>)listener {
  GeogebraCommonGuiDialogOptionsModelImageCornerModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelIComboListener_(self, app, listener);
  return self;
}

- (void)updateProperties {
  GeogebraCommonKernelGeosGeoPoint *p0 = [self getPointAtWithInt:0];
  jboolean isEqual = YES;
  for (jint i = 0; i < [self getGeosLength]; i++) {
    if (p0 != [self getPointAtWithInt:i]) {
      isEqual = NO;
      break;
    }
  }
  if (isEqual && p0 != nil) {
    [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk([self getListener])) setSelectedItemWithNSString:[p0 getLabelWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()]];
  }
  else {
    [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk([self getListener])) setSelectedIndexWithInt:-1];
  }
}

- (jint)indexOfWithNSString:(NSString *)item {
  return [((id<JavaUtilList>) nil_chk(choices_)) indexOfWithId:item];
}

- (jint)getCornerNumber {
  return cornerIdx_ < 2 ? (cornerIdx_ + 1) : (cornerIdx_ + 2);
}

- (id<JavaUtilList>)getChoichesWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc {
  JavaUtilTreeSet *points = [((GeogebraCommonKernelConstruction *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernel_)) getConstruction])) getGeoSetLabelOrderWithGeogebraCommonPluginGeoClassEnum:GeogebraCommonPluginGeoClassEnum_get_POINT()];
  [((id<JavaUtilList>) nil_chk(choices_)) clear];
  [choices_ addWithId:@""];
  id<JavaUtilIterator> it = [((JavaUtilTreeSet *) nil_chk(points)) iterator];
  jint count = 0;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext] || ++count > GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_MAX_CHOICES) {
    id<GeogebraCommonKernelKernelNDGeoPointND> p = (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([it next], @protocol(GeogebraCommonKernelKernelNDGeoPointND));
    [choices_ addWithId:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p)) getLabelWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()]];
  }
  return choices_;
}

- (GeogebraCommonKernelGeosGeoImage *)getGeoImageAtWithInt:(jint)index {
  return GeogebraCommonGuiDialogOptionsModelImageCornerModel_getGeoImageAtWithInt_(self, index);
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
}

- (void)applyChangesWithNSString:(NSString *)strLoc {
  id<GeogebraCommonKernelKernelNDGeoPointND> newLoc = nil;
  if (strLoc == nil || ((jint) [((NSString *) nil_chk([strLoc trim])) length]) == 0) {
  }
  else {
    newLoc = [((GeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernel_)) getAlgebraProcessor])) evaluateToPointWithNSString:strLoc withBoolean:YES withBoolean:YES];
  }
  for (jint i = 0; i < [self getGeosLength]; i++) {
    GeogebraCommonKernelGeosGeoImage *im = GeogebraCommonGuiDialogOptionsModelImageCornerModel_getGeoImageAtWithInt_(self, i);
    [((GeogebraCommonKernelGeosGeoImage *) nil_chk(im)) setCornerWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(newLoc, [GeogebraCommonKernelGeosGeoPoint class]) withInt:cornerIdx_];
    [im updateRepaint];
  }
}

- (GeogebraCommonKernelGeosGeoPoint *)getPointAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoImage *) nil_chk(GeogebraCommonGuiDialogOptionsModelImageCornerModel_getGeoImageAtWithInt_(self, index))) getCornerWithInt:cornerIdx_];
}

- (jboolean)isValidAtWithInt:(jint)index {
  id geo = [self getObjectAtWithInt:index];
  if ([geo isKindOfClass:[GeogebraCommonKernelGeosGeoImage class]]) {
    GeogebraCommonKernelGeosGeoImage *img = (GeogebraCommonKernelGeosGeoImage *) check_class_cast(geo, [GeogebraCommonKernelGeosGeoImage class]);
    if ([((GeogebraCommonKernelGeosGeoImage *) nil_chk(img)) isAbsoluteScreenLocActive] || ![img isIndependent]) {
      return NO;
    }
    return YES;
  }
  return NO;
}

- (jint)getCornerIdx {
  return cornerIdx_;
}

- (void)setCornerIdxWithInt:(jint)cornerIdx {
  self->cornerIdx_ = cornerIdx;
}

- (jint)getValueAtWithInt:(jint)index {
  return 0;
}

- (void)dealloc {
  RELEASE_(choices_);
  RELEASE_(kernel_);
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:withGeogebraCommonGuiDialogOptionsModelIComboListener:", "ImageCornerModel", NULL, 0x1, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "indexOfWithNSString:", "indexOf", "I", 0x2, NULL, NULL },
    { "getCornerNumber", NULL, "I", 0x1, NULL, NULL },
    { "getChoichesWithGeogebraCommonMainLocalization:", "getChoiches", "Ljava.util.List;", 0x1, NULL, NULL },
    { "getGeoImageAtWithInt:", "getGeoImageAt", "Lgeogebra.common.kernel.geos.GeoImage;", 0x2, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "applyChangesWithNSString:", "applyChanges", "V", 0x1, NULL, NULL },
    { "getPointAtWithInt:", "getPointAt", "Lgeogebra.common.kernel.geos.GeoPoint;", 0x4, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x4, NULL, NULL },
    { "getCornerIdx", NULL, "I", 0x1, NULL, NULL },
    { "setCornerIdxWithInt:", "setCornerIdx", "V", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "choices_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/String;>;",  },
    { "kernel_", NULL, 0x2, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "cornerIdx_", NULL, 0x2, "I", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelImageCornerModel = { 2, "ImageCornerModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 13, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelImageCornerModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelImageCornerModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelIComboListener_(GeogebraCommonGuiDialogOptionsModelImageCornerModel *self, GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  GeogebraCommonGuiDialogOptionsModelImageCornerModel_set_app_(self, app);
  GeogebraCommonGuiDialogOptionsModelImageCornerModel_set_kernel_(self, [((GeogebraCommonMainApp *) nil_chk(app)) getKernel]);
  GeogebraCommonGuiDialogOptionsModelImageCornerModel_setAndConsume_choices_(self, new_JavaUtilArrayList_init());
}

GeogebraCommonGuiDialogOptionsModelImageCornerModel *new_GeogebraCommonGuiDialogOptionsModelImageCornerModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelIComboListener_(GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelImageCornerModel *self = [GeogebraCommonGuiDialogOptionsModelImageCornerModel alloc];
  GeogebraCommonGuiDialogOptionsModelImageCornerModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelIComboListener_(self, app, listener);
  return self;
}

GeogebraCommonKernelGeosGeoImage *GeogebraCommonGuiDialogOptionsModelImageCornerModel_getGeoImageAtWithInt_(GeogebraCommonGuiDialogOptionsModelImageCornerModel *self, jint index) {
  return (GeogebraCommonKernelGeosGeoImage *) check_class_cast([self getObjectAtWithInt:index], [GeogebraCommonKernelGeosGeoImage class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelImageCornerModel)
