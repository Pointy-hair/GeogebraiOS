//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAreaPoints.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoAreaPoints.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoPolygon.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "java/lang/Math.h"

@implementation GeogebraCommonKernelAlgosAlgoAreaPoints

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)P {
  GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, label, P);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)P {
  GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, P);
  return self;
}

- (void)initCoords {
}

- (void)createOutputWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonKernelAlgosAlgoAreaPoints_setAndConsume_area_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Area();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_AREA;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(P_))->size_ type:GeogebraCommonKernelGeosGeoElement_class_()]);
  for (jint i = 0; i < P_->size_; i++) {
    IOSObjectArray_Set(input_, i, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(P_, i), [GeogebraCommonKernelGeosGeoElement class]));
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:area_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getArea {
  return area_;
}

- (IOSObjectArray *)getPoints {
  return P_;
}

- (void)compute {
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(area_)) setValueWithDouble:JavaLangMath_absWithDouble_(GeogebraCommonKernelAlgosAlgoPolygon_calcAreaWithSignWithGeogebraCommonKernelKernelNDGeoPointNDArray_(P_))];
}

- (void)dealloc {
  RELEASE_(P_);
  RELEASE_(area_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointNDArray:", "AlgoAreaPoints", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointNDArray:", "AlgoAreaPoints", NULL, 0x0, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "createOutputWithGeogebraCommonKernelConstruction:", "createOutput", "V", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getArea", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getPoints", NULL, "[Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "P_", NULL, 0x4, "[Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "area_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoAreaPoints = { 2, "AlgoAreaPoints", "geogebra.common.kernel.algos", NULL, 0x1, 10, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoAreaPoints;
}

@end

void GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonKernelAlgosAlgoAreaPoints *self, GeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *P) {
  GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, P);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->area_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoAreaPoints *new_GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *P) {
  GeogebraCommonKernelAlgosAlgoAreaPoints *self = [GeogebraCommonKernelAlgosAlgoAreaPoints alloc];
  GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, label, P);
  return self;
}

void GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonKernelAlgosAlgoAreaPoints *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *P) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoAreaPoints_set_P_(self, P);
  [self createOutputWithGeogebraCommonKernelConstruction:cons];
  [self setInputOutput];
  [self initCoords];
  [self compute];
}

GeogebraCommonKernelAlgosAlgoAreaPoints *new_GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *P) {
  GeogebraCommonKernelAlgosAlgoAreaPoints *self = [GeogebraCommonKernelAlgosAlgoAreaPoints alloc];
  GeogebraCommonKernelAlgosAlgoAreaPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, P);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoAreaPoints)
