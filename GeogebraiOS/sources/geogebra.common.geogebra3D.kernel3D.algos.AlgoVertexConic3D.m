//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoVertexConic3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoVertexConic3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoVertexConic.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c);
  return self;
}

- (void)createVertexWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonKernelAlgosAlgoVertexConic_setAndConsume_vertex_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_class_()]);
  for (jint i = 0; i < vertex_->size_; i++) {
    IOSObjectArray_SetAndConsume(vertex_, i, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
  }
}

- (void)setCoordsWithInt:(jint)i
              withDouble:(jdouble)x
              withDouble:(jdouble)y {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(IOSObjectArray_Get(nil_chk(vertex_), i), [GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c_)) getCoordSys])) getPointWithDouble:x withDouble:y]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoVertexConic3D", NULL, 0x1, NULL, NULL },
    { "createVertexWithGeogebraCommonKernelConstruction:", "createVertex", "V", 0x4, NULL, NULL },
    { "setCoordsWithInt:withDouble:withDouble:", "setCoords", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D = { 2, "AlgoVertexConic3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonKernelAlgosAlgoVertexConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D)
