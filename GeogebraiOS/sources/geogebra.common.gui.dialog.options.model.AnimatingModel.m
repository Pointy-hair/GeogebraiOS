//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/AnimatingModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/AnimatingModel.h"
#include "geogebra/common/gui/dialog/options/model/BooleanOptionModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/AnimationManager.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/App.h"

@interface GeogebraCommonGuiDialogOptionsModelAnimatingModel () {
 @public
  GeogebraCommonMainApp *app_;
  GeogebraCommonKernelKernel *kernel_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelAnimatingModel, app_, GeogebraCommonMainApp *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelAnimatingModel, kernel_, GeogebraCommonKernelKernel *)

@implementation GeogebraCommonGuiDialogOptionsModelAnimatingModel

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener>)listener {
  GeogebraCommonGuiDialogOptionsModelAnimatingModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, app, listener);
  return self;
}

- (void)applyChangesWithBoolean:(jboolean)value {
  [super applyChangesWithBoolean:value];
  if (value) {
    [((GeogebraCommonKernelAnimationManager *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernel_)) getAnimatonManager])) startAnimation];
  }
}

- (jboolean)isValidAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isAnimatable];
}

- (jboolean)getValueAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isAnimating];
}

- (void)applyWithInt:(jint)index
         withBoolean:(jboolean)value {
  GeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) setAnimatingWithBoolean:value];
  [geo updateRepaint];
}

- (void)dealloc {
  RELEASE_(app_);
  RELEASE_(kernel_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:", "AnimatingModel", NULL, 0x1, NULL, NULL },
    { "applyChangesWithBoolean:", "applyChanges", "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withBoolean:", "apply", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelAnimatingModel = { 2, "AnimatingModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelAnimatingModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelAnimatingModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(GeogebraCommonGuiDialogOptionsModelAnimatingModel *self, GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  GeogebraCommonGuiDialogOptionsModelAnimatingModel_set_app_(self, app);
  GeogebraCommonGuiDialogOptionsModelAnimatingModel_set_kernel_(self, [((GeogebraCommonMainApp *) nil_chk(app)) getKernel]);
}

GeogebraCommonGuiDialogOptionsModelAnimatingModel *new_GeogebraCommonGuiDialogOptionsModelAnimatingModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelAnimatingModel *self = [GeogebraCommonGuiDialogOptionsModelAnimatingModel alloc];
  GeogebraCommonGuiDialogOptionsModelAnimatingModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, app, listener);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelAnimatingModel)
