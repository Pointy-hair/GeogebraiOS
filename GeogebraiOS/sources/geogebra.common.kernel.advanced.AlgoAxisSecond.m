//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoAxisSecond.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/advanced/AlgoAxisSecond.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonKernelAdvancedAlgoAxisSecond () {
 @public
  GeogebraCommonKernelGeosGeoConic *c_;
  GeogebraCommonKernelGeosGeoLine *axis_;
  IOSObjectArray *eigenvec_;
  GeogebraCommonKernelGeosGeoVec2D *b_;
  GeogebraCommonKernelGeosGeoPoint *P_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAxisSecond, c_, GeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAxisSecond, axis_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAxisSecond, eigenvec_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAxisSecond, b_, GeogebraCommonKernelGeosGeoVec2D *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoAxisSecond, P_, GeogebraCommonKernelGeosGeoPoint *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoAxisSecond_compute(GeogebraCommonKernelAdvancedAlgoAxisSecond *self);

@implementation GeogebraCommonKernelAdvancedAlgoAxisSecond

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c {
  GeogebraCommonKernelAdvancedAlgoAxisSecond_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, c);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_SecondAxis();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, c_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:axis_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoLine *)getAxis {
  return axis_;
}

- (GeogebraCommonKernelGeosGeoConic *)getConic {
  return c_;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoAxisSecond_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"SecondAxisOfA" withNSString:[((GeogebraCommonKernelGeosGeoConic *) nil_chk(c_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(c_);
  RELEASE_(axis_);
  RELEASE_(eigenvec_);
  RELEASE_(b_);
  RELEASE_(P_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoConic:", "AlgoAxisSecond", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getAxis", NULL, "Lgeogebra.common.kernel.geos.GeoLine;", 0x1, NULL, NULL },
    { "getConic", NULL, "Lgeogebra.common.kernel.geos.GeoConic;", 0x0, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "c_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "axis_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "eigenvec_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
    { "b_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVec2D;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoAxisSecond = { 2, "AlgoAxisSecond", "geogebra.common.kernel.advanced", NULL, 0x1, 7, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoAxisSecond;
}

@end

void GeogebraCommonKernelAdvancedAlgoAxisSecond_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAdvancedAlgoAxisSecond *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoAxisSecond_set_c_(self, c);
  GeogebraCommonKernelAdvancedAlgoAxisSecond_set_eigenvec_(self, ((GeogebraCommonKernelGeosGeoConic *) nil_chk(c))->eigenvec_);
  GeogebraCommonKernelAdvancedAlgoAxisSecond_set_b_(self, c->b_);
  GeogebraCommonKernelAdvancedAlgoAxisSecond_setAndConsume_axis_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoAxisSecond_setAndConsume_P_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  [self->axis_ setStartPointWithGeogebraCommonKernelGeosGeoPoint:self->P_];
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoAxisSecond_compute(self);
  [self->axis_ setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoAxisSecond *new_GeogebraCommonKernelAdvancedAlgoAxisSecond_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAdvancedAlgoAxisSecond *self = [GeogebraCommonKernelAdvancedAlgoAxisSecond alloc];
  GeogebraCommonKernelAdvancedAlgoAxisSecond_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, c);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoAxisSecond_compute(GeogebraCommonKernelAdvancedAlgoAxisSecond *self) {
  ((GeogebraCommonKernelGeosGeoLine *) nil_chk(self->axis_))->x_ = -[((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(nil_chk(self->eigenvec_), 1))) getY];
  self->axis_->y_ = [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(IOSObjectArray_Get(self->eigenvec_, 1))) getX];
  self->axis_->z_ = -(self->axis_->x_ * [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(self->b_)) getX] + self->axis_->y_ * [self->b_ getY]);
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setCoordsWithDouble:[self->b_ getX] withDouble:[self->b_ getY] withDouble:1.0];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoAxisSecond)
