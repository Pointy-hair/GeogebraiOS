//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/LodModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "geogebra/common/gui/dialog/options/model/LodModel.h"
#include "geogebra/common/gui/dialog/options/model/MultipleOptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoElementND.h"
#include "geogebra/common/kernel/kernelND/SurfaceEvaluable.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/Localization.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface GeogebraCommonGuiDialogOptionsModelLodModel () {
 @public
  jboolean isDefaults_;
  GeogebraCommonMainApp *app_;
}

- (id<GeogebraCommonKernelKernelNDSurfaceEvaluable>)getSurfaceAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelLodModel, app_, GeogebraCommonMainApp *)

__attribute__((unused)) static id<GeogebraCommonKernelKernelNDSurfaceEvaluable> GeogebraCommonGuiDialogOptionsModelLodModel_getSurfaceAtWithInt_(GeogebraCommonGuiDialogOptionsModelLodModel *self, jint index);

@implementation GeogebraCommonGuiDialogOptionsModelLodModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelIComboListener:(id<GeogebraCommonGuiDialogOptionsModelIComboListener>)listener
                                                withGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
                                                              withBoolean:(jboolean)isDefaults {
  GeogebraCommonGuiDialogOptionsModelLodModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_withGeogebraCommonMainApp_withBoolean_(self, listener, app, isDefaults);
  return self;
}

- (id<GeogebraCommonKernelKernelNDSurfaceEvaluable>)getSurfaceAtWithInt:(jint)index {
  return GeogebraCommonGuiDialogOptionsModelLodModel_getSurfaceAtWithInt_(self, index);
}

- (void)updateProperties {
  id<GeogebraCommonKernelKernelNDSurfaceEvaluable> temp, geo0 = GeogebraCommonGuiDialogOptionsModelLodModel_getSurfaceAtWithInt_(self, 0);
  jboolean equalLevelOfDetail = YES;
  for (jint i = 0; i < [self getGeosLength]; i++) {
    temp = GeogebraCommonGuiDialogOptionsModelLodModel_getSurfaceAtWithInt_(self, i);
    if ([((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) nil_chk(geo0)) getLevelOfDetail] != [((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) nil_chk(temp)) getLevelOfDetail]) {
      equalLevelOfDetail = NO;
    }
  }
  if (equalLevelOfDetail) {
    [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk([self getListener])) setSelectedIndexWithInt:[((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) nil_chk(geo0)) getLevelOfDetail] == GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_SPEED() ? 0 : 1];
  }
}

- (id<JavaUtilList>)getChoichesWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc {
  id<JavaUtilList> result = [new_JavaUtilArrayList_init() autorelease];
  [result addWithId:[((GeogebraCommonMainLocalization *) nil_chk(loc)) getPlainWithNSString:@"Speed"]];
  [result addWithId:[loc getPlainWithNSString:@"Quality"]];
  return result;
}

- (jboolean)isValidAtWithInt:(jint)index {
  GeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  return (!isDefaults_ && ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) hasLevelOfDetail]));
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  id<GeogebraCommonKernelKernelNDSurfaceEvaluable> geo = GeogebraCommonGuiDialogOptionsModelLodModel_getSurfaceAtWithInt_(self, index);
  [((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) nil_chk(geo)) setLevelOfDetailWithGeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum:value == 0 ? GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_SPEED() : GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_QUALITY()];
  [((id<GeogebraCommonKernelKernelNDGeoElementND>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelKernelNDGeoElementND))) updateRepaint];
}

- (jint)getValueAtWithInt:(jint)index {
  return 0;
}

- (void)dealloc {
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelIComboListener:withGeogebraCommonMainApp:withBoolean:", "LodModel", NULL, 0x1, NULL, NULL },
    { "getSurfaceAtWithInt:", "getSurfaceAt", "Lgeogebra.common.kernel.kernelND.SurfaceEvaluable;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "getChoichesWithGeogebraCommonMainLocalization:", "getChoiches", "Ljava.util.List;", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x4, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "isDefaults_", NULL, 0x2, "Z", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelLodModel = { 2, "LodModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelLodModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelLodModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_withGeogebraCommonMainApp_withBoolean_(GeogebraCommonGuiDialogOptionsModelLodModel *self, id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener, GeogebraCommonMainApp *app, jboolean isDefaults) {
  GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  GeogebraCommonGuiDialogOptionsModelLodModel_set_app_(self, app);
  self->isDefaults_ = isDefaults;
}

GeogebraCommonGuiDialogOptionsModelLodModel *new_GeogebraCommonGuiDialogOptionsModelLodModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_withGeogebraCommonMainApp_withBoolean_(id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener, GeogebraCommonMainApp *app, jboolean isDefaults) {
  GeogebraCommonGuiDialogOptionsModelLodModel *self = [GeogebraCommonGuiDialogOptionsModelLodModel alloc];
  GeogebraCommonGuiDialogOptionsModelLodModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_withGeogebraCommonMainApp_withBoolean_(self, listener, app, isDefaults);
  return self;
}

id<GeogebraCommonKernelKernelNDSurfaceEvaluable> GeogebraCommonGuiDialogOptionsModelLodModel_getSurfaceAtWithInt_(GeogebraCommonGuiDialogOptionsModelLodModel *self, jint index) {
  return (id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(GeogebraCommonKernelKernelNDSurfaceEvaluable));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelLodModel)
