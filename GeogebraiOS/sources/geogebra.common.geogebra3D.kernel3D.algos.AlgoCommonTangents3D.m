//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoCommonTangents3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoCommonTangents3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectLineIncludedConic3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoTangentPoint3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoCommonTangentsND.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/kernelND/AlgoIntersectND.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D () {
 @public
  IOSObjectArray *coords2D_;
  IOSDoubleArray *polarCoords_;
  GeogebraCommonKernelMatrixCoords *polarOrigin_, *polarDirection_;
  IOSObjectArray *midpointProjected_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D, coords2D_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D, polarCoords_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D, polarOrigin_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D, polarDirection_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D, midpointProjected_, IOSObjectArray *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c2 {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c, c2);
  return self;
}

- (void)createPointsWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonKernelAlgosAlgoCommonTangentsND_setAndConsume_P_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_class_()]);
  IOSObjectArray_SetAndConsume(P_, 0, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
  IOSObjectArray_SetAndConsume(P_, 1, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_setAndConsume_coords2D_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelMatrixCoords_class_()]);
  IOSObjectArray_SetAndConsume(coords2D_, 0, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  IOSObjectArray_SetAndConsume(coords2D_, 1, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_setAndConsume_midpointProjected_(self, [IOSObjectArray newArrayWithLength:2 type:IOSClass_arrayType(GeogebraCommonKernelMatrixCoords_class_(), 1)]);
  IOSObjectArray_SetAndConsume(midpointProjected_, 0, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelMatrixCoords_class_()]);
  IOSObjectArray_SetAndConsume(midpointProjected_, 1, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelMatrixCoords_class_()]);
}

- (void)setCoordsAsPointWithInt:(jint)index
                     withDouble:(jdouble)x
                     withDouble:(jdouble)y {
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(coords2D_), index))) setXWithDouble:x];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(coords2D_, index))) setYWithDouble:y];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(coords2D_, index))) setZWithDouble:1];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(IOSObjectArray_Get(nil_chk(P_), index), [GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(nil_chk(c_), index))) getCoordSys])) getPointWithDouble:x withDouble:y]];
}

- (void)setCoordsAsVectorWithInt:(jint)index
                      withDouble:(jdouble)x
                      withDouble:(jdouble)y {
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(coords2D_), index))) setXWithDouble:x];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(coords2D_, index))) setYWithDouble:y];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(coords2D_, index))) setZWithDouble:0];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast(IOSObjectArray_Get(nil_chk(P_), index), [GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class])))) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(nil_chk(c_), index))) getCoordSys])) getVectorWithDouble:x withDouble:y]];
}

- (void)initTangents {
  GeogebraCommonKernelAlgosAlgoCommonTangentsND_setAndConsume_tangents_(self, [IOSObjectArray newArrayWithLength:2 + 2 type:GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_class_()]);
  IOSObjectArray_SetAndConsume(tangents_, 0, new_GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithGeogebraCommonKernelConstruction_(cons_));
  IOSObjectArray_SetAndConsume(tangents_, 1, new_GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithGeogebraCommonKernelConstruction_(cons_));
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(tangents_, 0), [GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class])))) setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(nil_chk(P_), 0)];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(tangents_, 1), [GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class])))) setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(P_, 0)];
  IOSObjectArray_SetAndConsume(tangents_, 0 + 2, new_GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithGeogebraCommonKernelConstruction_(cons_));
  IOSObjectArray_SetAndConsume(tangents_, 1 + 2, new_GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D_initWithGeogebraCommonKernelConstruction_(cons_));
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(tangents_, 0 + 2), [GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class])))) setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(P_, 1)];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(tangents_, 1 + 2), [GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class])))) setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(P_, 1)];
}

- (GeogebraCommonKernelKernelNDAlgoIntersectND *)createAlgoWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                     withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                                                            withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)line
                                                     withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic {
  return [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectLineIncludedConic3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelKernelNDGeoConicND_(cons, line, conic) autorelease];
}

- (void)initForNearToRelationship {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_initForNearToRelationshipWithGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDAlgoIntersectND_(tangentPoints_, IOSObjectArray_Get(nil_chk(tangents_), 0), algoIntersect_);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_initForNearToRelationshipWithGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDAlgoIntersectND_(tangentPoints2_, IOSObjectArray_Get(tangents_, 2), algoIntersect2_);
}

- (void)updatePolarLines {
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(nil_chk(c_), 0))) polarLineWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(coords2D_), 0) withGeogebraCommonKernelGeosGeoLine:polar_];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(c_, 1))) polarLineWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(coords2D_, 1) withGeogebraCommonKernelGeosGeoLine:polar2_];
}

- (jboolean)isIntersectionPointIncidentWithInt:(jint)index
    withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic {
  return [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic)) isIntersectionPointIncidentWithGeogebraCommonKernelMatrixCoords:IOSObjectArray_Get(nil_chk(coords2D_), index) withDouble:GeogebraCommonKernelKernel_MIN_PRECISION];
}

- (void)updateTangentsWithGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)tangentPoints
                                                              withInt:(jint)index {
  if (![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(nil_chk(tangentPoints), 0))) isDefined]) {
    [((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(IOSObjectArray_Get(nil_chk(tangents_), 0 + 2 * index))) setUndefined];
  }
  else {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(nil_chk(tangents_), 0 + 2 * index), [GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class])))) setCoordWithGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(nil_chk(P_), index) withGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(tangentPoints, 0)];
  }
  if (![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(IOSObjectArray_Get(tangentPoints, 1))) isDefined]) {
    [((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(IOSObjectArray_Get(nil_chk(tangents_), 1 + 2 * index))) setUndefined];
  }
  else {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(nil_chk(tangents_), 1 + 2 * index), [GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class])))) setCoordWithGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(nil_chk(P_), index) withGeogebraCommonKernelKernelNDGeoPointND:IOSObjectArray_Get(tangentPoints, 1)];
  }
}

- (void)setTangentFromPolarWithInt:(jint)i
withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)line {
  if (i == 0 || i == 2) {
    GeogebraCommonKernelMatrixCoordSys *cs = [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(nil_chk(c_), i / 2))) getCoordSys];
    [((GeogebraCommonKernelGeosGeoLine *) nil_chk(line)) getCoordsWithDoubleArray:polarCoords_];
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_set_polarDirection_(self, [((GeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) getVectorWithDouble:-IOSDoubleArray_Get(nil_chk(polarCoords_), 1) withDouble:IOSDoubleArray_Get(polarCoords_, 0)]);
    if (GeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(polarCoords_, 0))) {
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_set_polarOrigin_(self, [cs getPointWithDouble:0 withDouble:-IOSDoubleArray_Get(polarCoords_, 2) / IOSDoubleArray_Get(polarCoords_, 1)]);
    }
    else {
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_set_polarOrigin_(self, [cs getPointWithDouble:-IOSDoubleArray_Get(polarCoords_, 2) / IOSDoubleArray_Get(polarCoords_, 0) withDouble:0]);
    }
  }
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) check_class_cast(IOSObjectArray_Get(nil_chk(tangents_), i), [GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D class])))) setCoordWithGeogebraCommonKernelMatrixCoords:polarOrigin_ withGeogebraCommonKernelMatrixCoords:polarDirection_];
}

- (jboolean)checkUndefined {
  if ([super checkUndefined]) {
    return YES;
  }
  GeogebraCommonKernelMatrixCoords *n0 = [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(nil_chk(c_), 0))) getMainDirection];
  GeogebraCommonKernelMatrixCoords *n1 = [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(c_, 1))) getMainDirection];
  if (![((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk(n0)) crossProductWithGeogebraCommonKernelMatrixCoords:n1])) isZero]) {
    return YES;
  }
  for (jint csIndex = 0; csIndex < 2; csIndex++) {
    jint mpIndex = 1 - csIndex;
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(nil_chk(midpointProjected_), csIndex)), mpIndex, IOSObjectArray_Get(nil_chk([((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(c_, csIndex))) getCoordSys])) getNormalProjectionWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(c_, mpIndex))) getMidpoint3D]]), 1));
    if (!GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(midpointProjected_, csIndex)), mpIndex))) getZ])) {
      return YES;
    }
  }
  for (jint csIndex = 0; csIndex < 2; csIndex++) {
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(nil_chk(midpointProjected_), csIndex)), csIndex, IOSObjectArray_Get(nil_chk([((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(c_, csIndex))) getCoordSys])) getNormalProjectionWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(IOSObjectArray_Get(c_, csIndex))) getMidpoint3D]]), 1));
  }
  return NO;
}

- (jdouble)getMidpointXWithInt:(jint)csIndex
                       withInt:(jint)mpIndex {
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(midpointProjected_), csIndex)), mpIndex))) getX];
}

- (jdouble)getMidpointYWithInt:(jint)csIndex
                       withInt:(jint)mpIndex {
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(midpointProjected_), csIndex)), mpIndex))) getY];
}

- (void)dealloc {
  RELEASE_(coords2D_);
  RELEASE_(polarCoords_);
  RELEASE_(polarOrigin_);
  RELEASE_(polarDirection_);
  RELEASE_(midpointProjected_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoCommonTangents3D", NULL, 0x1, NULL, NULL },
    { "createPointsWithGeogebraCommonKernelConstruction:", "createPoints", "V", 0x4, NULL, NULL },
    { "setCoordsAsPointWithInt:withDouble:withDouble:", "setCoordsAsPoint", "V", 0x4, NULL, NULL },
    { "setCoordsAsVectorWithInt:withDouble:withDouble:", "setCoordsAsVector", "V", 0x4, NULL, NULL },
    { "initTangents", NULL, "V", 0x4, NULL, NULL },
    { "createAlgoWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoLine:withGeogebraCommonKernelKernelNDGeoConicND:", "createAlgo", "Lgeogebra.common.kernel.kernelND.AlgoIntersectND;", 0x4, NULL, NULL },
    { "initForNearToRelationship", NULL, "V", 0x1, NULL, NULL },
    { "updatePolarLines", NULL, "V", 0x4, NULL, NULL },
    { "isIntersectionPointIncidentWithInt:withGeogebraCommonKernelKernelNDGeoConicND:", "isIntersectionPointIncident", "Z", 0x4, NULL, NULL },
    { "updateTangentsWithGeogebraCommonKernelKernelNDGeoPointNDArray:withInt:", "updateTangents", "V", 0x4, NULL, NULL },
    { "setTangentFromPolarWithInt:withGeogebraCommonKernelGeosGeoLine:", "setTangentFromPolar", "V", 0x4, NULL, NULL },
    { "checkUndefined", NULL, "Z", 0x4, NULL, NULL },
    { "getMidpointXWithInt:withInt:", "getMidpointX", "D", 0x4, NULL, NULL },
    { "getMidpointYWithInt:withInt:", "getMidpointY", "D", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coords2D_", NULL, 0x2, "[Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "polarCoords_", NULL, 0x2, "[D", NULL, NULL,  },
    { "polarOrigin_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "polarDirection_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "midpointProjected_", NULL, 0x2, "[[Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D = { 2, "AlgoCommonTangents3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 14, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c, GeogebraCommonKernelKernelNDGeoConicND *c2) {
  GeogebraCommonKernelAlgosAlgoCommonTangentsND_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c, c2);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_setAndConsume_polarCoords_(self, [IOSDoubleArray newArrayWithLength:3]);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c, GeogebraCommonKernelKernelNDGeoConicND *c2) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, c, c2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCommonTangents3D)
