//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/geomgraph/index/SweepLineEvent.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geomgraph/index/SweepLineEvent.h"

@interface ComVividsolutionsJtsGeomgraphIndexSweepLineEvent () {
 @public
  jdouble xValue_;
  jint eventType_;
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *insertEvent_;
  jint deleteEventIndex_;
  id obj_;
}

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphIndexSweepLineEvent, insertEvent_, ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsGeomgraphIndexSweepLineEvent, obj_, id)

@implementation ComVividsolutionsJtsGeomgraphIndexSweepLineEvent

- (instancetype)initWithId:(id)edgeSet
                withDouble:(jdouble)x
withComVividsolutionsJtsGeomgraphIndexSweepLineEvent:(ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *)insertEvent
                    withId:(id)obj {
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_initWithId_withDouble_withComVividsolutionsJtsGeomgraphIndexSweepLineEvent_withId_(self, edgeSet, x, insertEvent, obj);
  return self;
}

- (jboolean)isInsert {
  return insertEvent_ == nil;
}

- (jboolean)isDelete {
  return insertEvent_ != nil;
}

- (ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *)getInsertEvent {
  return insertEvent_;
}

- (jint)getDeleteEventIndex {
  return deleteEventIndex_;
}

- (void)setDeleteEventIndexWithInt:(jint)deleteEventIndex {
  self->deleteEventIndex_ = deleteEventIndex;
}

- (id)getObject {
  return obj_;
}

- (jint)compareToWithId:(id)o {
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *pe = (ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *) check_class_cast(o, [ComVividsolutionsJtsGeomgraphIndexSweepLineEvent class]);
  if (xValue_ < ((ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *) nil_chk(pe))->xValue_) return -1;
  if (xValue_ > pe->xValue_) return 1;
  if (eventType_ < pe->eventType_) return -1;
  if (eventType_ > pe->eventType_) return 1;
  return 0;
}

- (void)dealloc {
  RELEASE_(edgeSet_);
  RELEASE_(insertEvent_);
  RELEASE_(obj_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withDouble:withComVividsolutionsJtsGeomgraphIndexSweepLineEvent:withId:", "SweepLineEvent", NULL, 0x1, NULL, NULL },
    { "isInsert", NULL, "Z", 0x1, NULL, NULL },
    { "isDelete", NULL, "Z", 0x1, NULL, NULL },
    { "getInsertEvent", NULL, "Lcom.vividsolutions.jts.geomgraph.index.SweepLineEvent;", 0x1, NULL, NULL },
    { "getDeleteEventIndex", NULL, "I", 0x1, NULL, NULL },
    { "setDeleteEventIndexWithInt:", "setDeleteEventIndex", "V", 0x1, NULL, NULL },
    { "getObject", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSERT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_INSERT },
    { "DELETE_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_DELETE },
    { "edgeSet_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL,  },
    { "xValue_", NULL, 0x2, "D", NULL, NULL,  },
    { "eventType_", NULL, 0x2, "I", NULL, NULL,  },
    { "insertEvent_", NULL, 0x2, "Lcom.vividsolutions.jts.geomgraph.index.SweepLineEvent;", NULL, NULL,  },
    { "deleteEventIndex_", NULL, 0x2, "I", NULL, NULL,  },
    { "obj_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphIndexSweepLineEvent = { 2, "SweepLineEvent", "com.vividsolutions.jts.geomgraph.index", NULL, 0x1, 8, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphIndexSweepLineEvent;
}

@end

void ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_initWithId_withDouble_withComVividsolutionsJtsGeomgraphIndexSweepLineEvent_withId_(ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *self, id edgeSet, jdouble x, ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *insertEvent, id obj) {
  NSObject_init(self);
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_set_edgeSet_(self, edgeSet);
  self->xValue_ = x;
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_set_insertEvent_(self, insertEvent);
  self->eventType_ = ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_INSERT;
  if (insertEvent != nil) self->eventType_ = ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_DELETE;
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_set_obj_(self, obj);
}

ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *new_ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_initWithId_withDouble_withComVividsolutionsJtsGeomgraphIndexSweepLineEvent_withId_(id edgeSet, jdouble x, ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *insertEvent, id obj) {
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent *self = [ComVividsolutionsJtsGeomgraphIndexSweepLineEvent alloc];
  ComVividsolutionsJtsGeomgraphIndexSweepLineEvent_initWithId_withDouble_withComVividsolutionsJtsGeomgraphIndexSweepLineEvent_withId_(self, edgeSet, x, insertEvent, obj);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphIndexSweepLineEvent)
