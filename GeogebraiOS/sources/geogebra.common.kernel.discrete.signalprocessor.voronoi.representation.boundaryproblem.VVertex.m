//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/VVertex.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/VHalfEdge.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/VVertex.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"

@interface GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex () {
 @public
  JavaUtilArrayList *connectedvertexs_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex, connectedvertexs_, JavaUtilArrayList *)

jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_uniqueid_ = 1;

@implementation GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex

- (instancetype)init {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_init(self);
  return self;
}

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithDouble_withDouble_(self, x, y);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *)point {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(self, point);
  return self;
}

- (void)clearConnectedVertexs {
  if (connectedvertexs_ != nil) {
    [connectedvertexs_ clear];
  }
}

- (void)addConnectedVertexWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *)edge {
  if (connectedvertexs_ == nil) {
    GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_setAndConsume_connectedvertexs_(self, new_JavaUtilArrayList_init());
  }
  [((JavaUtilArrayList *) nil_chk(connectedvertexs_)) addWithId:edge];
}

- (JavaUtilArrayList *)getConnectedVertexs {
  if (connectedvertexs_ == nil || [connectedvertexs_ size] <= 0) {
    return nil;
  }
  return connectedvertexs_;
}

- (jdouble)distanceToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)distance {
  return JavaLangMath_sqrtWithDouble_((x_ - ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *) nil_chk(distance))->x_) * (x_ - distance->x_) + (y_ - distance->y_) * (y_ - distance->y_));
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *)getNextConnectedEdgeWithInt:(jint)vertexnumber {
  if (connectedvertexs_ == nil || [connectedvertexs_ size] <= 0) {
    return nil;
  }
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge * __strong edge in nil_chk(connectedvertexs_)) {
    if (((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(edge))->vertexnumber_ == vertexnumber) {
      return edge;
    }
  }
  return nil;
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *)getNextConnectedEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)nextvertex {
  if (connectedvertexs_ == nil || [connectedvertexs_ size] <= 0) {
    return nil;
  }
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge * __strong edge in nil_chk(connectedvertexs_)) {
    if (((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(edge))->vertex_ == nextvertex) {
      return edge;
    }
  }
  return nil;
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *)getNextConnectedVertexWithInt:(jint)vertexnumber {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *edge = [self getNextConnectedEdgeWithInt:vertexnumber];
  return (edge == nil ? nil : edge->vertex_);
}

- (NSString *)getConnectedVertexString {
  NSString *str = nil;
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge * __strong edge in nil_chk(connectedvertexs_)) {
    if (str == nil) {
      str = JreStrcat("I", ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(edge))->vertexnumber_);
    }
    else {
      str = JreStrcat("$$", str, JreStrcat("$I", @", ", ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge *) nil_chk(edge))->vertexnumber_));
    }
  }
  return str;
}

- (void)dealloc {
  RELEASE_(connectedvertexs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "VVertex", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "VVertex", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint:", "VVertex", NULL, 0x1, NULL, NULL },
    { "clearConnectedVertexs", NULL, "V", 0x1, NULL, NULL },
    { "addConnectedVertexWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVHalfEdge:", "addConnectedVertex", "V", 0x1, NULL, NULL },
    { "getConnectedVertexs", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "distanceToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:", "distanceTo", "D", 0x1, NULL, NULL },
    { "getNextConnectedEdgeWithInt:", "getNextConnectedEdge", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.boundaryproblem.VHalfEdge;", 0x1, NULL, NULL },
    { "getNextConnectedEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex:", "getNextConnectedEdge", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.boundaryproblem.VHalfEdge;", 0x1, NULL, NULL },
    { "getNextConnectedVertexWithInt:", "getNextConnectedVertex", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.boundaryproblem.VVertex;", 0x1, NULL, NULL },
    { "getConnectedVertexString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "uniqueid_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_uniqueid_, NULL,  },
    { "id__", "id", 0x1, "I", NULL, NULL,  },
    { "connectedvertexs_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/discrete/signalprocessor/voronoi/representation/boundaryproblem/VHalfEdge;>;",  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex = { 2, "VVertex", "geogebra.common.kernel.discrete.signalprocessor.voronoi.representation.boundaryproblem", NULL, 0x1, 11, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex;
}

@end

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_init(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *self) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_init(self);
  self->id__ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_uniqueid_++;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_init() {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_init(self);
  return self;
}

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithDouble_withDouble_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *self, jdouble x, jdouble y) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_initWithDouble_withDouble_(self, x, y);
  self->id__ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_uniqueid_++;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithDouble_withDouble_(jdouble x, jdouble y) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithDouble_withDouble_(self, x, y);
  return self;
}

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *self, GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *point) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(self, point);
  self->id__ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_uniqueid_++;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *point) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(self, point);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationBoundaryproblemVVertex)
