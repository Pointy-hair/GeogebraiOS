//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.h"
#include "org/apache/commons/math/exception/DimensionMismatchException.h"
#include "org/apache/commons/math/exception/NoDataException.h"
#include "org/apache/commons/math/exception/OutOfRangeException.h"
#include "org/apache/commons/math/util/MathUtils.h"

@interface OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction () {
 @public
  IOSDoubleArray *xval_;
  IOSDoubleArray *yval_;
  IOSDoubleArray *zval_;
  IOSObjectArray *splines_;
}

- (jint)searchIndexWithDouble:(jdouble)c
              withDoubleArray:(IOSDoubleArray *)val;

- (IOSDoubleArray *)computeSplineCoefficientsWithDoubleArray:(IOSDoubleArray *)beta;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction, xval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction, yval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction, zval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction, splines_, IOSObjectArray *)

static IOSObjectArray *OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_AINV_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction, AINV_, IOSObjectArray *)

__attribute__((unused)) static jint OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_searchIndexWithDouble_withDoubleArray_(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction *self, jdouble c, IOSDoubleArray *val);

__attribute__((unused)) static IOSDoubleArray *OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_computeSplineCoefficientsWithDoubleArray_(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction *self, IOSDoubleArray *beta);

#define OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N 4

@interface OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction () {
 @public
  IOSObjectArray *a_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction, a_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction, N, jshort)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction)

@implementation OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)x
                    withDoubleArray:(IOSDoubleArray *)y
                    withDoubleArray:(IOSDoubleArray *)z
                   withDoubleArray3:(IOSObjectArray *)f
                   withDoubleArray3:(IOSObjectArray *)dFdX
                   withDoubleArray3:(IOSObjectArray *)dFdY
                   withDoubleArray3:(IOSObjectArray *)dFdZ
                   withDoubleArray3:(IOSObjectArray *)d2FdXdY
                   withDoubleArray3:(IOSObjectArray *)d2FdXdZ
                   withDoubleArray3:(IOSObjectArray *)d2FdYdZ
                   withDoubleArray3:(IOSObjectArray *)d3FdXdYdZ {
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_(self, x, y, z, f, dFdX, dFdY, dFdZ, d2FdXdY, d2FdXdZ, d2FdYdZ, d3FdXdYdZ);
  return self;
}

- (jdouble)valueWithDouble:(jdouble)x
                withDouble:(jdouble)y
                withDouble:(jdouble)z {
  jint i = OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_searchIndexWithDouble_withDoubleArray_(self, x, xval_);
  if (i == -1) {
    @throw [new_OrgApacheCommonsMathExceptionOutOfRangeException_initWithNSNumber_withNSNumber_withNSNumber_(JavaLangDouble_valueOfWithDouble_(x), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(nil_chk(xval_), 0)), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(xval_, xval_->size_ - 1))) autorelease];
  }
  jint j = OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_searchIndexWithDouble_withDoubleArray_(self, y, yval_);
  if (j == -1) {
    @throw [new_OrgApacheCommonsMathExceptionOutOfRangeException_initWithNSNumber_withNSNumber_withNSNumber_(JavaLangDouble_valueOfWithDouble_(y), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(nil_chk(yval_), 0)), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(yval_, yval_->size_ - 1))) autorelease];
  }
  jint k = OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_searchIndexWithDouble_withDoubleArray_(self, z, zval_);
  if (k == -1) {
    @throw [new_OrgApacheCommonsMathExceptionOutOfRangeException_initWithNSNumber_withNSNumber_withNSNumber_(JavaLangDouble_valueOfWithDouble_(z), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(nil_chk(zval_), 0)), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(zval_, zval_->size_ - 1))) autorelease];
  }
  jdouble xN = (x - IOSDoubleArray_Get(nil_chk(xval_), i)) / (IOSDoubleArray_Get(xval_, i + 1) - IOSDoubleArray_Get(xval_, i));
  jdouble yN = (y - IOSDoubleArray_Get(nil_chk(yval_), j)) / (IOSDoubleArray_Get(yval_, j + 1) - IOSDoubleArray_Get(yval_, j));
  jdouble zN = (z - IOSDoubleArray_Get(nil_chk(zval_), k)) / (IOSDoubleArray_Get(zval_, k + 1) - IOSDoubleArray_Get(zval_, k));
  return [((OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(splines_), i)), j)), k))) valueWithDouble:xN withDouble:yN withDouble:zN];
}

- (jint)searchIndexWithDouble:(jdouble)c
              withDoubleArray:(IOSDoubleArray *)val {
  return OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_searchIndexWithDouble_withDoubleArray_(self, c, val);
}

- (IOSDoubleArray *)computeSplineCoefficientsWithDoubleArray:(IOSDoubleArray *)beta {
  return OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_computeSplineCoefficientsWithDoubleArray_(self, beta);
}

- (void)dealloc {
  RELEASE_(xval_);
  RELEASE_(yval_);
  RELEASE_(zval_);
  RELEASE_(splines_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_AINV_, nil, [IOSObjectArray newArrayWithObjects:(id[]){ [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -3, 3, 0, 0, 0, 0, 0, 0, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 2, -2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 9, -9, -9, 9, 0, 0, 0, 0, 6, 3, -6, -3, 0, 0, 0, 0, 6, -6, 3, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -6, 6, 6, -6, 0, 0, 0, 0, -3, -3, 3, 3, 0, 0, 0, 0, -4, 4, -2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -6, 6, 6, -6, 0, 0, 0, 0, -4, -2, 4, 2, 0, 0, 0, 0, -3, 3, -3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -1, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 4, -4, -4, 4, 0, 0, 0, 0, 2, 2, -2, -2, 0, 0, 0, 0, 2, -2, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, 0, 0, 0, 0, -2, -1, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -1, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, -9, -9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 3, -6, -3, 0, 0, 0, 0, 6, -6, 3, -3, 0, 0, 0, 0, 4, 2, 2, 1, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 6, 6, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, -3, 3, 3, 0, 0, 0, 0, -4, 4, -2, 2, 0, 0, 0, 0, -2, -2, -1, -1, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 6, 6, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, -2, 4, 2, 0, 0, 0, 0, -3, 3, -3, 3, 0, 0, 0, 0, -2, -1, -2, -1, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, -4, -4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, -2, -2, 0, 0, 0, 0, 2, -2, 2, -2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 9, -9, 0, 0, -9, 9, 0, 0, 6, 3, 0, 0, -6, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, -6, 0, 0, 3, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -6, 6, 0, 0, 6, -6, 0, 0, -3, -3, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 4, 0, 0, -2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -2, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, -1, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, -9, 0, 0, -9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 3, 0, 0, -6, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, -6, 0, 0, 3, -3, 0, 0, 4, 2, 0, 0, 2, 1, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 6, 0, 0, 6, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, -3, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 4, 0, 0, -2, 2, 0, 0, -2, -2, 0, 0, -1, -1, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 9, 0, -9, 0, -9, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 3, 0, -6, 0, -3, 0, 6, 0, -6, 0, 3, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, -9, 0, -9, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 3, 0, -6, 0, -3, 0, 6, 0, -6, 0, 3, 0, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 2, 0, 2, 0, 1, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -27, 27, 27, -27, 27, -27, -27, 27, -18, -9, 18, 9, 18, 9, -18, -9, -18, 18, -9, 9, 18, -18, 9, -9, -18, 18, 18, -18, -9, 9, 9, -9, -12, -6, -6, -3, 12, 6, 6, 3, -12, -6, 12, 6, -6, -3, 6, 3, -12, 12, -6, 6, -6, 6, -3, 3, -8, -4, -4, -2, -4, -2, -2, -1 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 18, -18, -18, 18, -18, 18, 18, -18, 9, 9, -9, -9, -9, -9, 9, 9, 12, -12, 6, -6, -12, 12, -6, 6, 12, -12, -12, 12, 6, -6, -6, 6, 6, 6, 3, 3, -6, -6, -3, -3, 6, 6, -6, -6, 3, 3, -3, -3, 8, -8, 4, -4, 4, -4, 2, -2, 4, 4, 2, 2, 2, 2, 1, 1 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -6, 0, 6, 0, 6, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, -3, 0, 3, 0, 3, 0, -4, 0, 4, 0, -2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -2, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 6, 0, 6, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 0, -3, 0, 3, 0, 3, 0, -4, 0, 4, 0, -2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -2, 0, -1, 0, -1, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 18, -18, -18, 18, -18, 18, 18, -18, 12, 6, -12, -6, -12, -6, 12, 6, 9, -9, 9, -9, -9, 9, -9, 9, 12, -12, -12, 12, 6, -6, -6, 6, 6, 3, 6, 3, -6, -3, -6, -3, 8, 4, -8, -4, 4, 2, -4, -2, 6, -6, 6, -6, 3, -3, 3, -3, 4, 2, 4, 2, 2, 1, 2, 1 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -12, 12, 12, -12, 12, -12, -12, 12, -6, -6, 6, 6, 6, 6, -6, -6, -6, 6, -6, 6, 6, -6, 6, -6, -8, 8, 8, -8, -4, 4, 4, -4, -3, -3, -3, -3, 3, 3, 3, 3, -4, -4, 4, 4, -2, -2, 2, 2, -4, 4, -4, 4, -2, 2, -2, 2, -2, -2, -2, -2, -1, -1, -1, -1 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 2, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -6, 6, 0, 0, 6, -6, 0, 0, -4, -2, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, -3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -1, 0, 0, -2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 4, -4, 0, 0, -4, 4, 0, 0, 2, 2, 0, 0, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 0, 0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 6, 0, 0, 6, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, -2, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -3, 3, 0, 0, -3, 3, 0, 0, -2, -1, 0, 0, -2, -1, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, -4, 0, 0, -4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 0, 0, 2, -2, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -6, 0, 6, 0, 6, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -2, 0, 4, 0, 2, 0, -3, 0, 3, 0, -3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -1, 0, -2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 6, 0, 6, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -2, 0, 4, 0, 2, 0, -3, 0, 3, 0, -3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, 0, -1, 0, -2, 0, -1, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 18, -18, -18, 18, -18, 18, 18, -18, 12, 6, -12, -6, -12, -6, 12, 6, 12, -12, 6, -6, -12, 12, -6, 6, 9, -9, -9, 9, 9, -9, -9, 9, 8, 4, 4, 2, -8, -4, -4, -2, 6, 3, -6, -3, 6, 3, -6, -3, 6, -6, 3, -3, 6, -6, 3, -3, 4, 2, 2, 1, 4, 2, 2, 1 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -12, 12, 12, -12, 12, -12, -12, 12, -6, -6, 6, 6, 6, 6, -6, -6, -8, 8, -4, 4, 8, -8, 4, -4, -6, 6, 6, -6, -6, 6, 6, -6, -4, -4, -2, -2, 4, 4, 2, 2, -3, -3, 3, 3, -3, -3, 3, 3, -4, 4, -2, 2, -4, 4, -2, 2, -2, -2, -1, -1, -2, -2, -1, -1 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 4, 0, -4, 0, -4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, -2, 0, -2, 0, 2, 0, -2, 0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, -4, 0, -4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, -2, 0, -2, 0, 2, 0, -2, 0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ -12, 12, 12, -12, 12, -12, -12, 12, -8, -4, 8, 4, 8, 4, -8, -4, -6, 6, -6, 6, 6, -6, 6, -6, -6, 6, 6, -6, -6, 6, 6, -6, -4, -2, -4, -2, 4, 2, 4, 2, -4, -2, 4, 2, -4, -2, 4, 2, -3, 3, -3, 3, -3, 3, -3, 3, -2, -1, -2, -1, -2, -1, -2, -1 } count:64], [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 8, -8, -8, 8, -8, 8, 8, -8, 4, 4, -4, -4, -4, -4, 4, 4, 4, -4, 4, -4, -4, 4, -4, 4, 4, -4, -4, 4, 4, -4, -4, 4, 2, 2, 2, 2, -2, -2, -2, -2, 2, 2, -2, -2, 2, 2, -2, -2, 2, -2, 2, -2, 2, -2, 2, -2, 1, 1, 1, 1, 1, 1, 1, 1 } count:64] } count:64 type:IOSClass_doubleArray(1)]);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray3:withDoubleArray3:withDoubleArray3:withDoubleArray3:withDoubleArray3:withDoubleArray3:withDoubleArray3:withDoubleArray3:", "TricubicSplineInterpolatingFunction", NULL, 0x1, NULL, NULL },
    { "valueWithDouble:withDouble:withDouble:", "value", "D", 0x1, NULL, NULL },
    { "searchIndexWithDouble:withDoubleArray:", "searchIndex", "I", 0x2, NULL, NULL },
    { "computeSplineCoefficientsWithDoubleArray:", "computeSplineCoefficients", "[D", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "AINV_", NULL, 0x1a, "[[D", &OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_AINV_, NULL,  },
    { "xval_", NULL, 0x12, "[D", NULL, NULL,  },
    { "yval_", NULL, 0x12, "[D", NULL, NULL,  },
    { "zval_", NULL, 0x12, "[D", NULL, NULL,  },
    { "splines_", NULL, 0x12, "[[[Lorg.apache.commons.math.analysis.interpolation.TricubicSplineFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction = { 2, "TricubicSplineInterpolatingFunction", "org.apache.commons.math.analysis.interpolation", NULL, 0x1, 4, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction;
}

@end

void OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction *self, IOSDoubleArray *x, IOSDoubleArray *y, IOSDoubleArray *z, IOSObjectArray *f, IOSObjectArray *dFdX, IOSObjectArray *dFdY, IOSObjectArray *dFdZ, IOSObjectArray *d2FdXdY, IOSObjectArray *d2FdXdZ, IOSObjectArray *d2FdYdZ, IOSObjectArray *d3FdXdYdZ) {
  NSObject_init(self);
  jint xLen = ((IOSDoubleArray *) nil_chk(x))->size_;
  jint yLen = ((IOSDoubleArray *) nil_chk(y))->size_;
  jint zLen = ((IOSDoubleArray *) nil_chk(z))->size_;
  if (xLen == 0 || yLen == 0 || z->size_ == 0 || ((IOSObjectArray *) nil_chk(f))->size_ == 0 || ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(f, 0)))->size_ == 0) {
    @throw [new_OrgApacheCommonsMathExceptionNoDataException_init() autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(f))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, f->size_) autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(dFdX))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, dFdX->size_) autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(dFdY))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, dFdY->size_) autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(dFdZ))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, dFdZ->size_) autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(d2FdXdY))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, d2FdXdY->size_) autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(d2FdXdZ))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, d2FdXdZ->size_) autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(d2FdYdZ))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, d2FdYdZ->size_) autorelease];
  }
  if (xLen != ((IOSObjectArray *) nil_chk(d3FdXdYdZ))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xLen, d3FdXdYdZ->size_) autorelease];
  }
  OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_(x);
  OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_(y);
  OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_(z);
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_set_xval_(self, [x clone]);
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_set_yval_(self, [y clone]);
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_set_zval_(self, [z clone]);
  jint lastI = xLen - 1;
  jint lastJ = yLen - 1;
  jint lastK = zLen - 1;
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_setAndConsume_splines_(self, [IOSObjectArray newArrayWithDimensions:3 lengths:(jint[]){ lastI, lastJ, lastK } type:OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_class_()]);
  for (jint i = 0; i < lastI; i++) {
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(f, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(f, i)))->size_, yLen) autorelease];
    }
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(dFdX, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(dFdX, i)))->size_, yLen) autorelease];
    }
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(dFdY, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(dFdY, i)))->size_, yLen) autorelease];
    }
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(dFdZ, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(dFdZ, i)))->size_, yLen) autorelease];
    }
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d2FdXdY, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d2FdXdY, i)))->size_, yLen) autorelease];
    }
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d2FdXdZ, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d2FdXdZ, i)))->size_, yLen) autorelease];
    }
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d2FdYdZ, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d2FdYdZ, i)))->size_, yLen) autorelease];
    }
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)))->size_ != yLen) {
      @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSObjectArray *) nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)))->size_, yLen) autorelease];
    }
    jint ip1 = i + 1;
    for (jint j = 0; j < lastJ; j++) {
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, i)), j)))->size_, zLen) autorelease];
      }
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, i)), j)))->size_, zLen) autorelease];
      }
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, i)), j)))->size_, zLen) autorelease];
      }
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, i)), j)))->size_, zLen) autorelease];
      }
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, i)), j)))->size_, zLen) autorelease];
      }
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, i)), j)))->size_, zLen) autorelease];
      }
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, i)), j)))->size_, zLen) autorelease];
      }
      if (((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)), j)))->size_ != zLen) {
        @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)), j)))->size_, zLen) autorelease];
      }
      jint jp1 = j + 1;
      for (jint k = 0; k < lastK; k++) {
        jint kp1 = k + 1;
        IOSDoubleArray *beta = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(f, ip1)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdX, ip1)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdY, ip1)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(dFdZ, ip1)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdY, ip1)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdXdZ, ip1)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d2FdYdZ, ip1)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, ip1)), j)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, ip1)), jp1)), k), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, ip1)), j)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, i)), jp1)), kp1), IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(d3FdXdYdZ, ip1)), jp1)), kp1) } count:64];
        IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->splines_, i)), j)), k, new_OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_initWithDoubleArray_(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_computeSplineCoefficientsWithDoubleArray_(self, beta)));
      }
    }
  }
}

OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction *new_OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_(IOSDoubleArray *x, IOSDoubleArray *y, IOSDoubleArray *z, IOSObjectArray *f, IOSObjectArray *dFdX, IOSObjectArray *dFdY, IOSObjectArray *dFdZ, IOSObjectArray *d2FdXdY, IOSObjectArray *d2FdXdZ, IOSObjectArray *d2FdYdZ, IOSObjectArray *d3FdXdYdZ) {
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction *self = [OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction alloc];
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_initWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_withDoubleArray3_(self, x, y, z, f, dFdX, dFdY, dFdZ, d2FdXdY, d2FdXdZ, d2FdYdZ, d3FdXdYdZ);
  return self;
}

jint OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_searchIndexWithDouble_withDoubleArray_(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction *self, jdouble c, IOSDoubleArray *val) {
  if (c < IOSDoubleArray_Get(nil_chk(val), 0)) {
    return -1;
  }
  jint max = val->size_;
  for (jint i = 1; i < max; i++) {
    if (c <= IOSDoubleArray_Get(val, i)) {
      return i - 1;
    }
  }
  return -1;
}

IOSDoubleArray *OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_computeSplineCoefficientsWithDoubleArray_(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction *self, IOSDoubleArray *beta) {
  jint sz = 64;
  IOSDoubleArray *a = [IOSDoubleArray arrayWithLength:sz];
  for (jint i = 0; i < sz; i++) {
    jdouble result = 0;
    IOSDoubleArray *row = IOSObjectArray_Get(nil_chk(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction_AINV_), i);
    for (jint j = 0; j < sz; j++) {
      result += IOSDoubleArray_Get(nil_chk(row), j) * IOSDoubleArray_Get(nil_chk(beta), j);
    }
    *IOSDoubleArray_GetRef(a, i) = result;
  }
  return a;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineInterpolatingFunction)

@implementation OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)aV {
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_initWithDoubleArray_(self, aV);
  return self;
}

- (jdouble)valueWithDouble:(jdouble)x
                withDouble:(jdouble)y
                withDouble:(jdouble)z {
  if (x < 0 || x > 1) {
    @throw [new_OrgApacheCommonsMathExceptionOutOfRangeException_initWithNSNumber_withNSNumber_withNSNumber_(JavaLangDouble_valueOfWithDouble_(x), JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1)) autorelease];
  }
  if (y < 0 || y > 1) {
    @throw [new_OrgApacheCommonsMathExceptionOutOfRangeException_initWithNSNumber_withNSNumber_withNSNumber_(JavaLangDouble_valueOfWithDouble_(y), JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1)) autorelease];
  }
  if (z < 0 || z > 1) {
    @throw [new_OrgApacheCommonsMathExceptionOutOfRangeException_initWithNSNumber_withNSNumber_withNSNumber_(JavaLangDouble_valueOfWithDouble_(z), JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_(1)) autorelease];
  }
  jdouble x2 = x * x;
  jdouble x3 = x2 * x;
  IOSDoubleArray *pX = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1, x, x2, x3 } count:4];
  jdouble y2 = y * y;
  jdouble y3 = y2 * y;
  IOSDoubleArray *pY = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1, y, y2, y3 } count:4];
  jdouble z2 = z * z;
  jdouble z3 = z2 * z;
  IOSDoubleArray *pZ = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ 1, z, z2, z3 } count:4];
  jdouble result = 0;
  for (jint i = 0; i < OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N; i++) {
    for (jint j = 0; j < OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N; j++) {
      for (jint k = 0; k < OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N; k++) {
        result += IOSDoubleArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(a_), i)), j)), k) * IOSDoubleArray_Get(pX, i) * IOSDoubleArray_Get(pY, j) * IOSDoubleArray_Get(pZ, k);
      }
    }
  }
  return result;
}

- (void)dealloc {
  RELEASE_(a_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDoubleArray:", "TricubicSplineFunction", NULL, 0x1, NULL, NULL },
    { "valueWithDouble:withDouble:withDouble:", "value", "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "N_", NULL, 0x1a, "S", NULL, NULL, .constantValue.asShort = OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N },
    { "a_", NULL, 0x12, "[[[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction = { 2, "TricubicSplineFunction", "org.apache.commons.math.analysis.interpolation", NULL, 0x0, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction;
}

@end

void OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_initWithDoubleArray_(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction *self, IOSDoubleArray *aV) {
  NSObject_init(self);
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_setAndConsume_a_(self, [IOSDoubleArray newArrayWithDimensions:3 lengths:(jint[]){ OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N, OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N, OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N }]);
  for (jint i = 0; i < OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N; i++) {
    for (jint j = 0; j < OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N; j++) {
      for (jint k = 0; k < OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N; k++) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(self->a_, i)), j)), k) = IOSDoubleArray_Get(nil_chk(aV), i + OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N * (j + OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_N * k));
      }
    }
  }
}

OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction *new_OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_initWithDoubleArray_(IOSDoubleArray *aV) {
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction *self = [OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction alloc];
  OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction_initWithDoubleArray_(self, aV);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathAnalysisInterpolationTricubicSplineFunction)
