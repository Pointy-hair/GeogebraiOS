//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/statistics/CmdSXX.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/CmdOneOrTwoListsFunction.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/statistics/AlgoDoubleListSXX.h"
#include "geogebra/common/kernel/statistics/AlgoListSXX.h"
#include "geogebra/common/kernel/statistics/AlgoSXX.h"
#include "geogebra/common/kernel/statistics/CmdSXX.h"

@implementation GeogebraCommonKernelStatisticsCmdSXX

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelStatisticsCmdSXX_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)a
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)b {
  GeogebraCommonKernelGeosGeoNumeric *num;
  GeogebraCommonKernelGeosGeoElement *geo = [((GeogebraCommonKernelGeosGeoList *) nil_chk(b)) getWithInt:0];
  if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
    GeogebraCommonKernelStatisticsAlgoSXX *algo = [new_GeogebraCommonKernelStatisticsAlgoSXX_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(cons_, a, b) autorelease];
    num = [algo getResult];
  }
  else {
    GeogebraCommonKernelStatisticsAlgoListSXX *algo = [new_GeogebraCommonKernelStatisticsAlgoListSXX_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(cons_, a, b) autorelease];
    num = [algo getResult];
  }
  return num;
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)a
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)b
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)c {
  GeogebraCommonKernelStatisticsAlgoDoubleListSXX *algo = [new_GeogebraCommonKernelStatisticsAlgoDoubleListSXX_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(cons_, a, b, c) autorelease];
  return [algo getResult];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdSXX", NULL, 0x1, NULL, NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelGeosGeoList:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelStatisticsCmdSXX = { 2, "CmdSXX", "geogebra.common.kernel.statistics", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelStatisticsCmdSXX;
}

@end

void GeogebraCommonKernelStatisticsCmdSXX_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelStatisticsCmdSXX *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdOneOrTwoListsFunction_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelStatisticsCmdSXX *new_GeogebraCommonKernelStatisticsCmdSXX_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelStatisticsCmdSXX *self = [GeogebraCommonKernelStatisticsCmdSXX alloc];
  GeogebraCommonKernelStatisticsCmdSXX_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelStatisticsCmdSXX)
