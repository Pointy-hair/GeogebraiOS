//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoSimplifyText.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/cas/AlgoSimplifyText.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "geogebra/common/util/Unicode.h"

@interface GeogebraCommonKernelCasAlgoSimplifyText () {
 @public
  GeogebraCommonKernelGeosGeoText *textIn_;
  GeogebraCommonKernelGeosGeoText *text_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSimplifyText, textIn_, GeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSimplifyText, text_, GeogebraCommonKernelGeosGeoText *)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoSimplifyText_compute(GeogebraCommonKernelCasAlgoSimplifyText *self);

@implementation GeogebraCommonKernelCasAlgoSimplifyText

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)textIn {
  GeogebraCommonKernelCasAlgoSimplifyText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(self, cons, label, textIn);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Simplify();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, textIn_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getGeoText {
  return text_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoSimplifyText_compute(self);
}

- (void)dealloc {
  RELEASE_(textIn_);
  RELEASE_(text_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoText:", "AlgoSimplifyText", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getGeoText", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "textIn_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "text_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoSimplifyText = { 2, "AlgoSimplifyText", "geogebra.common.kernel.cas", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoSimplifyText;
}

@end

void GeogebraCommonKernelCasAlgoSimplifyText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelCasAlgoSimplifyText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *textIn) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoSimplifyText_set_textIn_(self, textIn);
  GeogebraCommonKernelCasAlgoSimplifyText_setAndConsume_text_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoSimplifyText_compute(self);
  [self->text_ setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoSimplifyText *new_GeogebraCommonKernelCasAlgoSimplifyText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *textIn) {
  GeogebraCommonKernelCasAlgoSimplifyText *self = [GeogebraCommonKernelCasAlgoSimplifyText alloc];
  GeogebraCommonKernelCasAlgoSimplifyText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(self, cons, label, textIn);
  return self;
}

void GeogebraCommonKernelCasAlgoSimplifyText_compute(GeogebraCommonKernelCasAlgoSimplifyText *self) {
  NSString *ret = [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->textIn_)) getTextString];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"\\+\\+" withReplacement:@"+"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"--" withReplacement:@"+"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"\\+-" withReplacement:@"-"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"-\\+" withReplacement:@"-"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"\\+1x" withReplacement:@"+x"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"-1x" withReplacement:@"-x"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"([^ ])\\+([^ ])" withReplacement:@"$1 + $2"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"([^ ])\\+([^ ])" withReplacement:@"$1 + $2"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"([^ ])\\-([^ ])" withReplacement:@"$1 - $2"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"([^ ])\\-([^ ])" withReplacement:@"$1 - $2"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"([^ ])\\=([^ ])" withReplacement:@"$1 = $2"];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@"([^ ])\\=([^ ])" withReplacement:@"$1 = $2"];
  if ([((NSString *) nil_chk(ret)) charAtWithInt:0] == '+') ret = [ret substring:1];
  if ([((NSString *) nil_chk(ret)) hasPrefix:@"1x"]) ret = [ret substring:1];
  ret = [((NSString *) nil_chk(ret)) replaceAll:@" -" withReplacement:JreStrcat("CC", ' ', GeogebraCommonUtilUnicode_minus)];
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setTextStringWithNSString:ret];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoSimplifyText)
