//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/Test.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Path.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/Dilateable.h"
#include "geogebra/common/kernel/geos/GeoAngle.h"
#include "geogebra/common/kernel/geos/GeoAxis.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"
#include "geogebra/common/kernel/geos/GeoButton.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoConicPart.h"
#include "geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "geogebra/common/kernel/geos/GeoCurveCartesian3DInterface.h"
#include "geogebra/common/kernel/geos/GeoDummyVariable.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoFunctionNVar.h"
#include "geogebra/common/kernel/geos/GeoImage.h"
#include "geogebra/common/kernel/geos/GeoInterval.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoLocus.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoPolyLine.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"
#include "geogebra/common/kernel/geos/GeoRay.h"
#include "geogebra/common/kernel/geos/GeoScriptAction.h"
#include "geogebra/common/kernel/geos/GeoSegment.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "geogebra/common/kernel/geos/GeoTextField.h"
#include "geogebra/common/kernel/geos/GeoUserInputElement.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "geogebra/common/kernel/geos/Rotateable.h"
#include "geogebra/common/kernel/geos/Test.h"
#include "geogebra/common/kernel/geos/Transformable.h"
#include "geogebra/common/kernel/geos/Translateable.h"
#include "geogebra/common/kernel/implicit/GeoImplicitPoly.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoCoordSys1DInterface.h"
#include "geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "geogebra/common/kernel/kernelND/GeoCurveCartesianND.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/kernel/kernelND/GeoPlaneND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoPolygon3DInterface.h"
#include "geogebra/common/kernel/kernelND/GeoPolyhedronInterface.h"
#include "geogebra/common/kernel/kernelND/GeoQuadric3DInterface.h"
#include "geogebra/common/kernel/kernelND/GeoQuadric3DLimitedInterface.h"
#include "geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "geogebra/common/kernel/kernelND/GeoSegmentND.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"
#include "geogebra/common/kernel/kernelND/Region3D.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface GeogebraCommonKernelGeosTestEnum ()

+ (jboolean)genWithGeogebraCommonKernelGeosTestEnum:(GeogebraCommonKernelGeosTestEnum *)first
               withGeogebraCommonKernelGeosTestEnum:(GeogebraCommonKernelGeosTestEnum *)second;

@end

__attribute__((unused)) static jboolean GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum *first, GeogebraCommonKernelGeosTestEnum *second);

__attribute__((unused)) static void GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(GeogebraCommonKernelGeosTestEnum *self, NSString *__name, jint __ordinal);

@interface GeogebraCommonKernelGeosTest_$1Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$1Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$1Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$1Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$1Enum *new_GeogebraCommonKernelGeosTest_$1Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$1Enum)

@interface GeogebraCommonKernelGeosTest_$2Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$2Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$2Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$2Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$2Enum *new_GeogebraCommonKernelGeosTest_$2Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$2Enum)

@interface GeogebraCommonKernelGeosTest_$3Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$3Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$3Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$3Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$3Enum *new_GeogebraCommonKernelGeosTest_$3Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$3Enum)

@interface GeogebraCommonKernelGeosTest_$4Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$4Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$4Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$4Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$4Enum *new_GeogebraCommonKernelGeosTest_$4Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$4Enum)

@interface GeogebraCommonKernelGeosTest_$5Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$5Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$5Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$5Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$5Enum *new_GeogebraCommonKernelGeosTest_$5Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$5Enum)

@interface GeogebraCommonKernelGeosTest_$6Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$6Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$6Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$6Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$6Enum *new_GeogebraCommonKernelGeosTest_$6Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$6Enum)

@interface GeogebraCommonKernelGeosTest_$7Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$7Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$7Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$7Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$7Enum *new_GeogebraCommonKernelGeosTest_$7Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$7Enum)

@interface GeogebraCommonKernelGeosTest_$8Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$8Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$8Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$8Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$8Enum *new_GeogebraCommonKernelGeosTest_$8Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$8Enum)

@interface GeogebraCommonKernelGeosTest_$9Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$9Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$9Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$9Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$9Enum *new_GeogebraCommonKernelGeosTest_$9Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$9Enum)

@interface GeogebraCommonKernelGeosTest_$10Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$10Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$10Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$10Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$10Enum *new_GeogebraCommonKernelGeosTest_$10Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$10Enum)

@interface GeogebraCommonKernelGeosTest_$11Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$11Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$11Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$11Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$11Enum *new_GeogebraCommonKernelGeosTest_$11Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$11Enum)

@interface GeogebraCommonKernelGeosTest_$12Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$12Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$12Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$12Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$12Enum *new_GeogebraCommonKernelGeosTest_$12Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$12Enum)

@interface GeogebraCommonKernelGeosTest_$13Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$13Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$13Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$13Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$13Enum *new_GeogebraCommonKernelGeosTest_$13Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$13Enum)

@interface GeogebraCommonKernelGeosTest_$14Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$14Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$14Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$14Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$14Enum *new_GeogebraCommonKernelGeosTest_$14Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$14Enum)

@interface GeogebraCommonKernelGeosTest_$15Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$15Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$15Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$15Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$15Enum *new_GeogebraCommonKernelGeosTest_$15Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$15Enum)

@interface GeogebraCommonKernelGeosTest_$16Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$16Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$16Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$16Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$16Enum *new_GeogebraCommonKernelGeosTest_$16Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$16Enum)

@interface GeogebraCommonKernelGeosTest_$17Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$17Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$17Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$17Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$17Enum *new_GeogebraCommonKernelGeosTest_$17Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$17Enum)

@interface GeogebraCommonKernelGeosTest_$18Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$18Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$18Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$18Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$18Enum *new_GeogebraCommonKernelGeosTest_$18Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$18Enum)

@interface GeogebraCommonKernelGeosTest_$19Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$19Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$19Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$19Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$19Enum *new_GeogebraCommonKernelGeosTest_$19Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$19Enum)

@interface GeogebraCommonKernelGeosTest_$20Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$20Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$20Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$20Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$20Enum *new_GeogebraCommonKernelGeosTest_$20Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$20Enum)

@interface GeogebraCommonKernelGeosTest_$21Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$21Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$21Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$21Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$21Enum *new_GeogebraCommonKernelGeosTest_$21Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$21Enum)

@interface GeogebraCommonKernelGeosTest_$22Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$22Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$22Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$22Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$22Enum *new_GeogebraCommonKernelGeosTest_$22Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$22Enum)

@interface GeogebraCommonKernelGeosTest_$23Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$23Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$23Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$23Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$23Enum *new_GeogebraCommonKernelGeosTest_$23Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$23Enum)

@interface GeogebraCommonKernelGeosTest_$24Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$24Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$24Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$24Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$24Enum *new_GeogebraCommonKernelGeosTest_$24Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$24Enum)

@interface GeogebraCommonKernelGeosTest_$25Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$25Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$25Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$25Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$25Enum *new_GeogebraCommonKernelGeosTest_$25Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$25Enum)

@interface GeogebraCommonKernelGeosTest_$26Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$26Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$26Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$26Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$26Enum *new_GeogebraCommonKernelGeosTest_$26Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$26Enum)

@interface GeogebraCommonKernelGeosTest_$27Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$27Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$27Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$27Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$27Enum *new_GeogebraCommonKernelGeosTest_$27Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$27Enum)

@interface GeogebraCommonKernelGeosTest_$28Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$28Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$28Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$28Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$28Enum *new_GeogebraCommonKernelGeosTest_$28Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$28Enum)

@interface GeogebraCommonKernelGeosTest_$29Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$29Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$29Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$29Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$29Enum *new_GeogebraCommonKernelGeosTest_$29Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$29Enum)

@interface GeogebraCommonKernelGeosTest_$30Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$30Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$30Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$30Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$30Enum *new_GeogebraCommonKernelGeosTest_$30Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$30Enum)

@interface GeogebraCommonKernelGeosTest_$31Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$31Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$31Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$31Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$31Enum *new_GeogebraCommonKernelGeosTest_$31Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$31Enum)

@interface GeogebraCommonKernelGeosTest_$32Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$32Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$32Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$32Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$32Enum *new_GeogebraCommonKernelGeosTest_$32Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$32Enum)

@interface GeogebraCommonKernelGeosTest_$33Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$33Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$33Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$33Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$33Enum *new_GeogebraCommonKernelGeosTest_$33Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$33Enum)

@interface GeogebraCommonKernelGeosTest_$34Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$34Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$34Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$34Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$34Enum *new_GeogebraCommonKernelGeosTest_$34Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$34Enum)

@interface GeogebraCommonKernelGeosTest_$35Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$35Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$35Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$35Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$35Enum *new_GeogebraCommonKernelGeosTest_$35Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$35Enum)

@interface GeogebraCommonKernelGeosTest_$36Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$36Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$36Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$36Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$36Enum *new_GeogebraCommonKernelGeosTest_$36Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$36Enum)

@interface GeogebraCommonKernelGeosTest_$37Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$37Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$37Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$37Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$37Enum *new_GeogebraCommonKernelGeosTest_$37Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$37Enum)

@interface GeogebraCommonKernelGeosTest_$38Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$38Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$38Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$38Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$38Enum *new_GeogebraCommonKernelGeosTest_$38Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$38Enum)

@interface GeogebraCommonKernelGeosTest_$39Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$39Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$39Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$39Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$39Enum *new_GeogebraCommonKernelGeosTest_$39Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$39Enum)

@interface GeogebraCommonKernelGeosTest_$40Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$40Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$40Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$40Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$40Enum *new_GeogebraCommonKernelGeosTest_$40Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$40Enum)

@interface GeogebraCommonKernelGeosTest_$41Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$41Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$41Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$41Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$41Enum *new_GeogebraCommonKernelGeosTest_$41Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$41Enum)

@interface GeogebraCommonKernelGeosTest_$42Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$42Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$42Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$42Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$42Enum *new_GeogebraCommonKernelGeosTest_$42Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$42Enum)

@interface GeogebraCommonKernelGeosTest_$43Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$43Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$43Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$43Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$43Enum *new_GeogebraCommonKernelGeosTest_$43Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$43Enum)

@interface GeogebraCommonKernelGeosTest_$44Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$44Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$44Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$44Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$44Enum *new_GeogebraCommonKernelGeosTest_$44Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$44Enum)

@interface GeogebraCommonKernelGeosTest_$45Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$45Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$45Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$45Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$45Enum *new_GeogebraCommonKernelGeosTest_$45Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$45Enum)

@interface GeogebraCommonKernelGeosTest_$46Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$46Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$46Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$46Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$46Enum *new_GeogebraCommonKernelGeosTest_$46Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$46Enum)

@interface GeogebraCommonKernelGeosTest_$47Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$47Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$47Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$47Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$47Enum *new_GeogebraCommonKernelGeosTest_$47Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$47Enum)

@interface GeogebraCommonKernelGeosTest_$48Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$48Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$48Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$48Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$48Enum *new_GeogebraCommonKernelGeosTest_$48Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$48Enum)

@interface GeogebraCommonKernelGeosTest_$49Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$49Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$49Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$49Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$49Enum *new_GeogebraCommonKernelGeosTest_$49Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$49Enum)

@interface GeogebraCommonKernelGeosTest_$50Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$50Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$50Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$50Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$50Enum *new_GeogebraCommonKernelGeosTest_$50Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$50Enum)

@interface GeogebraCommonKernelGeosTest_$51Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$51Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$51Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$51Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$51Enum *new_GeogebraCommonKernelGeosTest_$51Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$51Enum)

@interface GeogebraCommonKernelGeosTest_$52Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$52Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$52Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$52Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$52Enum *new_GeogebraCommonKernelGeosTest_$52Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$52Enum)

@interface GeogebraCommonKernelGeosTest_$53Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$53Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$53Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$53Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$53Enum *new_GeogebraCommonKernelGeosTest_$53Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$53Enum)

@interface GeogebraCommonKernelGeosTest_$54Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$54Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$54Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$54Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$54Enum *new_GeogebraCommonKernelGeosTest_$54Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$54Enum)

@interface GeogebraCommonKernelGeosTest_$55Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$55Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$55Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$55Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$55Enum *new_GeogebraCommonKernelGeosTest_$55Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$55Enum)

@interface GeogebraCommonKernelGeosTest_$56Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$56Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$56Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$56Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$56Enum *new_GeogebraCommonKernelGeosTest_$56Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$56Enum)

@interface GeogebraCommonKernelGeosTest_$57Enum : GeogebraCommonKernelGeosTestEnum < NSCopying >

- (jboolean)checkWithId:(id)ob;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosTest_$57Enum)

__attribute__((unused)) static void GeogebraCommonKernelGeosTest_$57Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$57Enum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonKernelGeosTest_$57Enum *new_GeogebraCommonKernelGeosTest_$57Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosTest_$57Enum)

J2OBJC_INITIALIZED_DEFN(GeogebraCommonKernelGeosTestEnum)

GeogebraCommonKernelGeosTestEnum *GeogebraCommonKernelGeosTestEnum_values_[57];

@implementation GeogebraCommonKernelGeosTestEnum

- (jboolean)checkWithId:(id)ob {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (GeogebraCommonKernelGeosTestEnum *)getSpecificTestWithId:(id)obj {
  return GeogebraCommonKernelGeosTestEnum_getSpecificTestWithId_(obj);
}

+ (jboolean)canSetWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)object
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)setter {
  return GeogebraCommonKernelGeosTestEnum_canSetWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(object, setter);
}

+ (jboolean)genWithGeogebraCommonKernelGeosTestEnum:(GeogebraCommonKernelGeosTestEnum *)first
               withGeogebraCommonKernelGeosTestEnum:(GeogebraCommonKernelGeosTestEnum *)second {
  return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(first, second);
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *GeogebraCommonKernelGeosTestEnum_values() {
  GeogebraCommonKernelGeosTestEnum_initialize();
  return [IOSObjectArray arrayWithObjects:GeogebraCommonKernelGeosTestEnum_values_ count:57 type:GeogebraCommonKernelGeosTestEnum_class_()];
}

+ (IOSObjectArray *)values {
  return GeogebraCommonKernelGeosTestEnum_values();
}

+ (GeogebraCommonKernelGeosTestEnum *)valueOfWithNSString:(NSString *)name {
  return GeogebraCommonKernelGeosTestEnum_valueOfWithNSString_(name);
}

GeogebraCommonKernelGeosTestEnum *GeogebraCommonKernelGeosTestEnum_valueOfWithNSString_(NSString *name) {
  GeogebraCommonKernelGeosTestEnum_initialize();
  for (int i = 0; i < 57; i++) {
    GeogebraCommonKernelGeosTestEnum *e = GeogebraCommonKernelGeosTestEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [GeogebraCommonKernelGeosTestEnum class]) {
    GeogebraCommonKernelGeosTestEnum_GEOANGLE = new_GeogebraCommonKernelGeosTest_$1Enum_initWithNSString_withInt_(@"GEOANGLE", 0);
    GeogebraCommonKernelGeosTestEnum_GEODUMMYVARIABLE = new_GeogebraCommonKernelGeosTest_$2Enum_initWithNSString_withInt_(@"GEODUMMYVARIABLE", 1);
    GeogebraCommonKernelGeosTestEnum_GEONUMERIC = new_GeogebraCommonKernelGeosTest_$3Enum_initWithNSString_withInt_(@"GEONUMERIC", 2);
    GeogebraCommonKernelGeosTestEnum_GEOAXIS = new_GeogebraCommonKernelGeosTest_$4Enum_initWithNSString_withInt_(@"GEOAXIS", 3);
    GeogebraCommonKernelGeosTestEnum_GEOSEGMENT = new_GeogebraCommonKernelGeosTest_$5Enum_initWithNSString_withInt_(@"GEOSEGMENT", 4);
    GeogebraCommonKernelGeosTestEnum_GEOSEGMENTND = new_GeogebraCommonKernelGeosTest_$6Enum_initWithNSString_withInt_(@"GEOSEGMENTND", 5);
    GeogebraCommonKernelGeosTestEnum_GEORAY = new_GeogebraCommonKernelGeosTest_$7Enum_initWithNSString_withInt_(@"GEORAY", 6);
    GeogebraCommonKernelGeosTestEnum_GEOLINE = new_GeogebraCommonKernelGeosTest_$8Enum_initWithNSString_withInt_(@"GEOLINE", 7);
    GeogebraCommonKernelGeosTestEnum_GEOLINEND = new_GeogebraCommonKernelGeosTest_$9Enum_initWithNSString_withInt_(@"GEOLINEND", 8);
    GeogebraCommonKernelGeosTestEnum_GEOVECTOR = new_GeogebraCommonKernelGeosTest_$10Enum_initWithNSString_withInt_(@"GEOVECTOR", 9);
    GeogebraCommonKernelGeosTestEnum_GEOVECTORND = new_GeogebraCommonKernelGeosTest_$11Enum_initWithNSString_withInt_(@"GEOVECTORND", 10);
    GeogebraCommonKernelGeosTestEnum_GEOBOOLEAN = new_GeogebraCommonKernelGeosTest_$12Enum_initWithNSString_withInt_(@"GEOBOOLEAN", 11);
    GeogebraCommonKernelGeosTestEnum_GEOTEXTFIELD = new_GeogebraCommonKernelGeosTest_$13Enum_initWithNSString_withInt_(@"GEOTEXTFIELD", 12);
    GeogebraCommonKernelGeosTestEnum_GEOBUTTON = new_GeogebraCommonKernelGeosTest_$14Enum_initWithNSString_withInt_(@"GEOBUTTON", 13);
    GeogebraCommonKernelGeosTestEnum_GEOCASCELL = new_GeogebraCommonKernelGeosTest_$15Enum_initWithNSString_withInt_(@"GEOCASCELL", 14);
    GeogebraCommonKernelGeosTestEnum_GEOCONICPART = new_GeogebraCommonKernelGeosTest_$16Enum_initWithNSString_withInt_(@"GEOCONICPART", 15);
    GeogebraCommonKernelGeosTestEnum_GEOCONIC = new_GeogebraCommonKernelGeosTest_$17Enum_initWithNSString_withInt_(@"GEOCONIC", 16);
    GeogebraCommonKernelGeosTestEnum_GEOCONICND = new_GeogebraCommonKernelGeosTest_$18Enum_initWithNSString_withInt_(@"GEOCONICND", 17);
    GeogebraCommonKernelGeosTestEnum_GEOQUADRIC3D = new_GeogebraCommonKernelGeosTest_$19Enum_initWithNSString_withInt_(@"GEOQUADRIC3D", 18);
    GeogebraCommonKernelGeosTestEnum_GEOQUADRIC3DLIMITED = new_GeogebraCommonKernelGeosTest_$20Enum_initWithNSString_withInt_(@"GEOQUADRIC3DLIMITED", 19);
    GeogebraCommonKernelGeosTestEnum_GEOQUADRICND = new_GeogebraCommonKernelGeosTest_$21Enum_initWithNSString_withInt_(@"GEOQUADRICND", 20);
    GeogebraCommonKernelGeosTestEnum_GEOPOLYHEDRON = new_GeogebraCommonKernelGeosTest_$22Enum_initWithNSString_withInt_(@"GEOPOLYHEDRON", 21);
    GeogebraCommonKernelGeosTestEnum_GEOCURVECARTESIAN = new_GeogebraCommonKernelGeosTest_$23Enum_initWithNSString_withInt_(@"GEOCURVECARTESIAN", 22);
    GeogebraCommonKernelGeosTestEnum_GEOCURVECARTESIAN3D = new_GeogebraCommonKernelGeosTest_$24Enum_initWithNSString_withInt_(@"GEOCURVECARTESIAN3D", 23);
    GeogebraCommonKernelGeosTestEnum_GEOCURVECARTESIANND = new_GeogebraCommonKernelGeosTest_$25Enum_initWithNSString_withInt_(@"GEOCURVECARTESIANND", 24);
    GeogebraCommonKernelGeosTestEnum_GEOINTERVAL = new_GeogebraCommonKernelGeosTest_$26Enum_initWithNSString_withInt_(@"GEOINTERVAL", 25);
    GeogebraCommonKernelGeosTestEnum_GEOFUNCTION = new_GeogebraCommonKernelGeosTest_$27Enum_initWithNSString_withInt_(@"GEOFUNCTION", 26);
    GeogebraCommonKernelGeosTestEnum_GEOFUNCTIONNVAR = new_GeogebraCommonKernelGeosTest_$28Enum_initWithNSString_withInt_(@"GEOFUNCTIONNVAR", 27);
    GeogebraCommonKernelGeosTestEnum_GEOIMAGE = new_GeogebraCommonKernelGeosTest_$29Enum_initWithNSString_withInt_(@"GEOIMAGE", 28);
    GeogebraCommonKernelGeosTestEnum_GEOLIST = new_GeogebraCommonKernelGeosTest_$30Enum_initWithNSString_withInt_(@"GEOLIST", 29);
    GeogebraCommonKernelGeosTestEnum_GEOLOCUS = new_GeogebraCommonKernelGeosTest_$31Enum_initWithNSString_withInt_(@"GEOLOCUS", 30);
    GeogebraCommonKernelGeosTestEnum_GEOPOINT = new_GeogebraCommonKernelGeosTest_$32Enum_initWithNSString_withInt_(@"GEOPOINT", 31);
    GeogebraCommonKernelGeosTestEnum_GEOPOINTND = new_GeogebraCommonKernelGeosTest_$33Enum_initWithNSString_withInt_(@"GEOPOINTND", 32);
    GeogebraCommonKernelGeosTestEnum_GEOPOLYGON = new_GeogebraCommonKernelGeosTest_$34Enum_initWithNSString_withInt_(@"GEOPOLYGON", 33);
    GeogebraCommonKernelGeosTestEnum_GEOPOLYGON3D = new_GeogebraCommonKernelGeosTest_$35Enum_initWithNSString_withInt_(@"GEOPOLYGON3D", 34);
    GeogebraCommonKernelGeosTestEnum_GEOPOLYLINE = new_GeogebraCommonKernelGeosTest_$36Enum_initWithNSString_withInt_(@"GEOPOLYLINE", 35);
    GeogebraCommonKernelGeosTestEnum_GEOSCRIPTACTION = new_GeogebraCommonKernelGeosTest_$37Enum_initWithNSString_withInt_(@"GEOSCRIPTACTION", 36);
    GeogebraCommonKernelGeosTestEnum_GEOTEXT = new_GeogebraCommonKernelGeosTest_$38Enum_initWithNSString_withInt_(@"GEOTEXT", 37);
    GeogebraCommonKernelGeosTestEnum_GEOIMPLICITPOLY = new_GeogebraCommonKernelGeosTest_$39Enum_initWithNSString_withInt_(@"GEOIMPLICITPOLY", 38);
    GeogebraCommonKernelGeosTestEnum_GEOUSERINPUTELEMENT = new_GeogebraCommonKernelGeosTest_$40Enum_initWithNSString_withInt_(@"GEOUSERINPUTELEMENT", 39);
    GeogebraCommonKernelGeosTestEnum_GEOCOORDSYS2DNOTPLANE = new_GeogebraCommonKernelGeosTest_$41Enum_initWithNSString_withInt_(@"GEOCOORDSYS2DNOTPLANE", 40);
    GeogebraCommonKernelGeosTestEnum_GEOPLANEND = new_GeogebraCommonKernelGeosTest_$42Enum_initWithNSString_withInt_(@"GEOPLANEND", 41);
    GeogebraCommonKernelGeosTestEnum_GEOCOORDSYS2D = new_GeogebraCommonKernelGeosTest_$43Enum_initWithNSString_withInt_(@"GEOCOORDSYS2D", 42);
    GeogebraCommonKernelGeosTestEnum_GEODIRECTIONND = new_GeogebraCommonKernelGeosTest_$44Enum_initWithNSString_withInt_(@"GEODIRECTIONND", 43);
    GeogebraCommonKernelGeosTestEnum_GEOCOORDSYS1D = new_GeogebraCommonKernelGeosTest_$45Enum_initWithNSString_withInt_(@"GEOCOORDSYS1D", 44);
    GeogebraCommonKernelGeosTestEnum_NUMBERVALUE = new_GeogebraCommonKernelGeosTest_$46Enum_initWithNSString_withInt_(@"NUMBERVALUE", 45);
    GeogebraCommonKernelGeosTestEnum_PATH = new_GeogebraCommonKernelGeosTest_$47Enum_initWithNSString_withInt_(@"PATH", 46);
    GeogebraCommonKernelGeosTestEnum_REGION3D = new_GeogebraCommonKernelGeosTest_$48Enum_initWithNSString_withInt_(@"REGION3D", 47);
    GeogebraCommonKernelGeosTestEnum_DILATEABLE = new_GeogebraCommonKernelGeosTest_$49Enum_initWithNSString_withInt_(@"DILATEABLE", 48);
    GeogebraCommonKernelGeosTestEnum_TRANSLATEABLE = new_GeogebraCommonKernelGeosTest_$50Enum_initWithNSString_withInt_(@"TRANSLATEABLE", 49);
    GeogebraCommonKernelGeosTestEnum_MOVEABLE = new_GeogebraCommonKernelGeosTest_$51Enum_initWithNSString_withInt_(@"MOVEABLE", 50);
    GeogebraCommonKernelGeosTestEnum_ROTATEMOVEABLE = new_GeogebraCommonKernelGeosTest_$52Enum_initWithNSString_withInt_(@"ROTATEMOVEABLE", 51);
    GeogebraCommonKernelGeosTestEnum_TRANSFORMABLE = new_GeogebraCommonKernelGeosTest_$53Enum_initWithNSString_withInt_(@"TRANSFORMABLE", 52);
    GeogebraCommonKernelGeosTestEnum_ROTATEABLE = new_GeogebraCommonKernelGeosTest_$54Enum_initWithNSString_withInt_(@"ROTATEABLE", 53);
    GeogebraCommonKernelGeosTestEnum_GEOELEMENT = new_GeogebraCommonKernelGeosTest_$55Enum_initWithNSString_withInt_(@"GEOELEMENT", 54);
    GeogebraCommonKernelGeosTestEnum_OBJECT = new_GeogebraCommonKernelGeosTest_$56Enum_initWithNSString_withInt_(@"OBJECT", 55);
    GeogebraCommonKernelGeosTestEnum_PATH_NO_FILL_HIT = new_GeogebraCommonKernelGeosTest_$57Enum_initWithNSString_withInt_(@"PATH_NO_FILL_HIT", 56);
    J2OBJC_SET_INITIALIZED(GeogebraCommonKernelGeosTestEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x401, NULL, NULL },
    { "getSpecificTestWithId:", "getSpecificTest", "Lgeogebra.common.kernel.geos.Test;", 0x9, NULL, NULL },
    { "canSetWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:", "canSet", "Z", 0x9, NULL, NULL },
    { "genWithGeogebraCommonKernelGeosTestEnum:withGeogebraCommonKernelGeosTestEnum:", "gen", "Z", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "GEOANGLE", "GEOANGLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOANGLE, NULL,  },
    { "GEODUMMYVARIABLE", "GEODUMMYVARIABLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEODUMMYVARIABLE, NULL,  },
    { "GEONUMERIC", "GEONUMERIC", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEONUMERIC, NULL,  },
    { "GEOAXIS", "GEOAXIS", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOAXIS, NULL,  },
    { "GEOSEGMENT", "GEOSEGMENT", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOSEGMENT, NULL,  },
    { "GEOSEGMENTND", "GEOSEGMENTND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOSEGMENTND, NULL,  },
    { "GEORAY", "GEORAY", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEORAY, NULL,  },
    { "GEOLINE", "GEOLINE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOLINE, NULL,  },
    { "GEOLINEND", "GEOLINEND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOLINEND, NULL,  },
    { "GEOVECTOR", "GEOVECTOR", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOVECTOR, NULL,  },
    { "GEOVECTORND", "GEOVECTORND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOVECTORND, NULL,  },
    { "GEOBOOLEAN", "GEOBOOLEAN", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOBOOLEAN, NULL,  },
    { "GEOTEXTFIELD", "GEOTEXTFIELD", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOTEXTFIELD, NULL,  },
    { "GEOBUTTON", "GEOBUTTON", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOBUTTON, NULL,  },
    { "GEOCASCELL", "GEOCASCELL", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCASCELL, NULL,  },
    { "GEOCONICPART", "GEOCONICPART", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCONICPART, NULL,  },
    { "GEOCONIC", "GEOCONIC", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCONIC, NULL,  },
    { "GEOCONICND", "GEOCONICND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCONICND, NULL,  },
    { "GEOQUADRIC3D", "GEOQUADRIC3D", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOQUADRIC3D, NULL,  },
    { "GEOQUADRIC3DLIMITED", "GEOQUADRIC3DLIMITED", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOQUADRIC3DLIMITED, NULL,  },
    { "GEOQUADRICND", "GEOQUADRICND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOQUADRICND, NULL,  },
    { "GEOPOLYHEDRON", "GEOPOLYHEDRON", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOPOLYHEDRON, NULL,  },
    { "GEOCURVECARTESIAN", "GEOCURVECARTESIAN", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCURVECARTESIAN, NULL,  },
    { "GEOCURVECARTESIAN3D", "GEOCURVECARTESIAN3D", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCURVECARTESIAN3D, NULL,  },
    { "GEOCURVECARTESIANND", "GEOCURVECARTESIANND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCURVECARTESIANND, NULL,  },
    { "GEOINTERVAL", "GEOINTERVAL", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOINTERVAL, NULL,  },
    { "GEOFUNCTION", "GEOFUNCTION", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOFUNCTION, NULL,  },
    { "GEOFUNCTIONNVAR", "GEOFUNCTIONNVAR", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOFUNCTIONNVAR, NULL,  },
    { "GEOIMAGE", "GEOIMAGE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOIMAGE, NULL,  },
    { "GEOLIST", "GEOLIST", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOLIST, NULL,  },
    { "GEOLOCUS", "GEOLOCUS", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOLOCUS, NULL,  },
    { "GEOPOINT", "GEOPOINT", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOPOINT, NULL,  },
    { "GEOPOINTND", "GEOPOINTND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOPOINTND, NULL,  },
    { "GEOPOLYGON", "GEOPOLYGON", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOPOLYGON, NULL,  },
    { "GEOPOLYGON3D", "GEOPOLYGON3D", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOPOLYGON3D, NULL,  },
    { "GEOPOLYLINE", "GEOPOLYLINE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOPOLYLINE, NULL,  },
    { "GEOSCRIPTACTION", "GEOSCRIPTACTION", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOSCRIPTACTION, NULL,  },
    { "GEOTEXT", "GEOTEXT", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOTEXT, NULL,  },
    { "GEOIMPLICITPOLY", "GEOIMPLICITPOLY", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOIMPLICITPOLY, NULL,  },
    { "GEOUSERINPUTELEMENT", "GEOUSERINPUTELEMENT", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOUSERINPUTELEMENT, NULL,  },
    { "GEOCOORDSYS2DNOTPLANE", "GEOCOORDSYS2DNOTPLANE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCOORDSYS2DNOTPLANE, NULL,  },
    { "GEOPLANEND", "GEOPLANEND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOPLANEND, NULL,  },
    { "GEOCOORDSYS2D", "GEOCOORDSYS2D", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCOORDSYS2D, NULL,  },
    { "GEODIRECTIONND", "GEODIRECTIONND", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEODIRECTIONND, NULL,  },
    { "GEOCOORDSYS1D", "GEOCOORDSYS1D", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOCOORDSYS1D, NULL,  },
    { "NUMBERVALUE", "NUMBERVALUE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_NUMBERVALUE, NULL,  },
    { "PATH", "PATH", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_PATH, NULL,  },
    { "REGION3D", "REGION3D", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_REGION3D, NULL,  },
    { "DILATEABLE", "DILATEABLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_DILATEABLE, NULL,  },
    { "TRANSLATEABLE", "TRANSLATEABLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_TRANSLATEABLE, NULL,  },
    { "MOVEABLE", "MOVEABLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_MOVEABLE, NULL,  },
    { "ROTATEMOVEABLE", "ROTATEMOVEABLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_ROTATEMOVEABLE, NULL,  },
    { "TRANSFORMABLE", "TRANSFORMABLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_TRANSFORMABLE, NULL,  },
    { "ROTATEABLE", "ROTATEABLE", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_ROTATEABLE, NULL,  },
    { "GEOELEMENT", "GEOELEMENT", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_GEOELEMENT, NULL,  },
    { "OBJECT", "OBJECT", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_OBJECT, NULL,  },
    { "PATH_NO_FILL_HIT", "PATH_NO_FILL_HIT", 0x4019, "Lgeogebra.common.kernel.geos.Test;", &GeogebraCommonKernelGeosTestEnum_PATH_NO_FILL_HIT, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lgeogebra.common.kernel.geos.Test;"};
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTestEnum = { 2, "Test", "geogebra.common.kernel.geos", NULL, 0x4401, 4, methods, 57, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lgeogebra/common/kernel/geos/Test;>;" };
  return &_GeogebraCommonKernelGeosTestEnum;
}

@end

GeogebraCommonKernelGeosTestEnum *GeogebraCommonKernelGeosTestEnum_getSpecificTestWithId_(id obj) {
  GeogebraCommonKernelGeosTestEnum_initialize();
  {
    IOSObjectArray *a__ = GeogebraCommonKernelGeosTestEnum_values();
    GeogebraCommonKernelGeosTestEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosTestEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosTestEnum *t = *b__++;
      if ([((GeogebraCommonKernelGeosTestEnum *) nil_chk(t)) checkWithId:obj]) {
        return t;
      }
    }
  }
  return GeogebraCommonKernelGeosTestEnum_OBJECT;
}

jboolean GeogebraCommonKernelGeosTestEnum_canSetWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *object, GeogebraCommonKernelGeosGeoElement *setter) {
  GeogebraCommonKernelGeosTestEnum_initialize();
  return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_getSpecificTestWithId_(object), GeogebraCommonKernelGeosTestEnum_getSpecificTestWithId_(setter));
}

jboolean GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum *first, GeogebraCommonKernelGeosTestEnum *second) {
  GeogebraCommonKernelGeosTestEnum_initialize();
  if (first == second) {
    return YES;
  }
  switch ([first ordinal]) {
    case GeogebraCommonKernelGeosTest_GEONUMERIC:
    return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEOANGLE, second) || GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEOBOOLEAN, second);
    case GeogebraCommonKernelGeosTest_GEOFUNCTION:
    return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEONUMERIC, second) || GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEOLINE, second);
    case GeogebraCommonKernelGeosTest_GEOFUNCTIONNVAR:
    return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEOFUNCTION, second);
    case GeogebraCommonKernelGeosTest_GEOCONIC:
    return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEOLINE, second);
    case GeogebraCommonKernelGeosTest_GEOIMPLICITPOLY:
    return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEOCONIC, second);
    case GeogebraCommonKernelGeosTest_GEOPLANEND:
    return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEOLINE, second);
    case GeogebraCommonKernelGeosTest_GEOPOINT:
    return GeogebraCommonKernelGeosTestEnum_genWithGeogebraCommonKernelGeosTestEnum_withGeogebraCommonKernelGeosTestEnum_(GeogebraCommonKernelGeosTestEnum_GEONUMERIC, second);
  }
  return NO;
}

void GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(GeogebraCommonKernelGeosTestEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTestEnum)

@implementation GeogebraCommonKernelGeosTest_$1Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoAngle class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$1Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$1Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$1Enum;
}

@end

void GeogebraCommonKernelGeosTest_$1Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$1Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$1Enum *new_GeogebraCommonKernelGeosTest_$1Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$1Enum *self = [GeogebraCommonKernelGeosTest_$1Enum alloc];
  GeogebraCommonKernelGeosTest_$1Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$1Enum)

@implementation GeogebraCommonKernelGeosTest_$2Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoDummyVariable class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$2Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$2Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$2Enum;
}

@end

void GeogebraCommonKernelGeosTest_$2Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$2Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$2Enum *new_GeogebraCommonKernelGeosTest_$2Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$2Enum *self = [GeogebraCommonKernelGeosTest_$2Enum alloc];
  GeogebraCommonKernelGeosTest_$2Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$2Enum)

@implementation GeogebraCommonKernelGeosTest_$3Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoNumeric class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$3Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$3Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$3Enum;
}

@end

void GeogebraCommonKernelGeosTest_$3Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$3Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$3Enum *new_GeogebraCommonKernelGeosTest_$3Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$3Enum *self = [GeogebraCommonKernelGeosTest_$3Enum alloc];
  GeogebraCommonKernelGeosTest_$3Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$3Enum)

@implementation GeogebraCommonKernelGeosTest_$4Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoAxis class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$4Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$4Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$4Enum;
}

@end

void GeogebraCommonKernelGeosTest_$4Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$4Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$4Enum *new_GeogebraCommonKernelGeosTest_$4Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$4Enum *self = [GeogebraCommonKernelGeosTest_$4Enum alloc];
  GeogebraCommonKernelGeosTest_$4Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$4Enum)

@implementation GeogebraCommonKernelGeosTest_$5Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoSegment class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$5Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$5Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$5Enum;
}

@end

void GeogebraCommonKernelGeosTest_$5Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$5Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$5Enum *new_GeogebraCommonKernelGeosTest_$5Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$5Enum *self = [GeogebraCommonKernelGeosTest_$5Enum alloc];
  GeogebraCommonKernelGeosTest_$5Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$5Enum)

@implementation GeogebraCommonKernelGeosTest_$6Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoSegmentND_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$6Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$6Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$6Enum;
}

@end

void GeogebraCommonKernelGeosTest_$6Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$6Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$6Enum *new_GeogebraCommonKernelGeosTest_$6Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$6Enum *self = [GeogebraCommonKernelGeosTest_$6Enum alloc];
  GeogebraCommonKernelGeosTest_$6Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$6Enum)

@implementation GeogebraCommonKernelGeosTest_$7Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoRay class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$7Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$7Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$7Enum;
}

@end

void GeogebraCommonKernelGeosTest_$7Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$7Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$7Enum *new_GeogebraCommonKernelGeosTest_$7Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$7Enum *self = [GeogebraCommonKernelGeosTest_$7Enum alloc];
  GeogebraCommonKernelGeosTest_$7Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$7Enum)

@implementation GeogebraCommonKernelGeosTest_$8Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoLine class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$8Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$8Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$8Enum;
}

@end

void GeogebraCommonKernelGeosTest_$8Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$8Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$8Enum *new_GeogebraCommonKernelGeosTest_$8Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$8Enum *self = [GeogebraCommonKernelGeosTest_$8Enum alloc];
  GeogebraCommonKernelGeosTest_$8Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$8Enum)

@implementation GeogebraCommonKernelGeosTest_$9Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoLineND_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$9Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$9Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$9Enum;
}

@end

void GeogebraCommonKernelGeosTest_$9Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$9Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$9Enum *new_GeogebraCommonKernelGeosTest_$9Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$9Enum *self = [GeogebraCommonKernelGeosTest_$9Enum alloc];
  GeogebraCommonKernelGeosTest_$9Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$9Enum)

@implementation GeogebraCommonKernelGeosTest_$10Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoVector class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$10Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$10Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$10Enum;
}

@end

void GeogebraCommonKernelGeosTest_$10Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$10Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$10Enum *new_GeogebraCommonKernelGeosTest_$10Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$10Enum *self = [GeogebraCommonKernelGeosTest_$10Enum alloc];
  GeogebraCommonKernelGeosTest_$10Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$10Enum)

@implementation GeogebraCommonKernelGeosTest_$11Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoVectorND_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$11Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$11Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$11Enum;
}

@end

void GeogebraCommonKernelGeosTest_$11Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$11Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$11Enum *new_GeogebraCommonKernelGeosTest_$11Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$11Enum *self = [GeogebraCommonKernelGeosTest_$11Enum alloc];
  GeogebraCommonKernelGeosTest_$11Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$11Enum)

@implementation GeogebraCommonKernelGeosTest_$12Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoBoolean class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$12Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$12Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$12Enum;
}

@end

void GeogebraCommonKernelGeosTest_$12Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$12Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$12Enum *new_GeogebraCommonKernelGeosTest_$12Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$12Enum *self = [GeogebraCommonKernelGeosTest_$12Enum alloc];
  GeogebraCommonKernelGeosTest_$12Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$12Enum)

@implementation GeogebraCommonKernelGeosTest_$13Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoTextField class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$13Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$13Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$13Enum;
}

@end

void GeogebraCommonKernelGeosTest_$13Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$13Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$13Enum *new_GeogebraCommonKernelGeosTest_$13Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$13Enum *self = [GeogebraCommonKernelGeosTest_$13Enum alloc];
  GeogebraCommonKernelGeosTest_$13Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$13Enum)

@implementation GeogebraCommonKernelGeosTest_$14Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoButton class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$14Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$14Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$14Enum;
}

@end

void GeogebraCommonKernelGeosTest_$14Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$14Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$14Enum *new_GeogebraCommonKernelGeosTest_$14Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$14Enum *self = [GeogebraCommonKernelGeosTest_$14Enum alloc];
  GeogebraCommonKernelGeosTest_$14Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$14Enum)

@implementation GeogebraCommonKernelGeosTest_$15Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoButton class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$15Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$15Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$15Enum;
}

@end

void GeogebraCommonKernelGeosTest_$15Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$15Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$15Enum *new_GeogebraCommonKernelGeosTest_$15Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$15Enum *self = [GeogebraCommonKernelGeosTest_$15Enum alloc];
  GeogebraCommonKernelGeosTest_$15Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$15Enum)

@implementation GeogebraCommonKernelGeosTest_$16Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoConicPart class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$16Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$16Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$16Enum;
}

@end

void GeogebraCommonKernelGeosTest_$16Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$16Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$16Enum *new_GeogebraCommonKernelGeosTest_$16Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$16Enum *self = [GeogebraCommonKernelGeosTest_$16Enum alloc];
  GeogebraCommonKernelGeosTest_$16Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$16Enum)

@implementation GeogebraCommonKernelGeosTest_$17Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoConic class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$17Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$17Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$17Enum;
}

@end

void GeogebraCommonKernelGeosTest_$17Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$17Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$17Enum *new_GeogebraCommonKernelGeosTest_$17Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$17Enum *self = [GeogebraCommonKernelGeosTest_$17Enum alloc];
  GeogebraCommonKernelGeosTest_$17Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$17Enum)

@implementation GeogebraCommonKernelGeosTest_$18Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelKernelNDGeoConicND class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$18Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$18Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$18Enum;
}

@end

void GeogebraCommonKernelGeosTest_$18Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$18Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$18Enum *new_GeogebraCommonKernelGeosTest_$18Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$18Enum *self = [GeogebraCommonKernelGeosTest_$18Enum alloc];
  GeogebraCommonKernelGeosTest_$18Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$18Enum)

@implementation GeogebraCommonKernelGeosTest_$19Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoQuadric3DInterface_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$19Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$19Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$19Enum;
}

@end

void GeogebraCommonKernelGeosTest_$19Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$19Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$19Enum *new_GeogebraCommonKernelGeosTest_$19Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$19Enum *self = [GeogebraCommonKernelGeosTest_$19Enum alloc];
  GeogebraCommonKernelGeosTest_$19Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$19Enum)

@implementation GeogebraCommonKernelGeosTest_$20Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoQuadric3DLimitedInterface_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$20Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$20Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$20Enum;
}

@end

void GeogebraCommonKernelGeosTest_$20Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$20Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$20Enum *new_GeogebraCommonKernelGeosTest_$20Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$20Enum *self = [GeogebraCommonKernelGeosTest_$20Enum alloc];
  GeogebraCommonKernelGeosTest_$20Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$20Enum)

@implementation GeogebraCommonKernelGeosTest_$21Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelKernelNDGeoQuadricND class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$21Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$21Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$21Enum;
}

@end

void GeogebraCommonKernelGeosTest_$21Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$21Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$21Enum *new_GeogebraCommonKernelGeosTest_$21Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$21Enum *self = [GeogebraCommonKernelGeosTest_$21Enum alloc];
  GeogebraCommonKernelGeosTest_$21Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$21Enum)

@implementation GeogebraCommonKernelGeosTest_$22Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoPolyhedronInterface_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$22Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$22Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$22Enum;
}

@end

void GeogebraCommonKernelGeosTest_$22Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$22Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$22Enum *new_GeogebraCommonKernelGeosTest_$22Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$22Enum *self = [GeogebraCommonKernelGeosTest_$22Enum alloc];
  GeogebraCommonKernelGeosTest_$22Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$22Enum)

@implementation GeogebraCommonKernelGeosTest_$23Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoCurveCartesian class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$23Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$23Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$23Enum;
}

@end

void GeogebraCommonKernelGeosTest_$23Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$23Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$23Enum *new_GeogebraCommonKernelGeosTest_$23Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$23Enum *self = [GeogebraCommonKernelGeosTest_$23Enum alloc];
  GeogebraCommonKernelGeosTest_$23Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$23Enum)

@implementation GeogebraCommonKernelGeosTest_$24Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelGeosGeoCurveCartesian3DInterface_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$24Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$24Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$24Enum;
}

@end

void GeogebraCommonKernelGeosTest_$24Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$24Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$24Enum *new_GeogebraCommonKernelGeosTest_$24Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$24Enum *self = [GeogebraCommonKernelGeosTest_$24Enum alloc];
  GeogebraCommonKernelGeosTest_$24Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$24Enum)

@implementation GeogebraCommonKernelGeosTest_$25Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelKernelNDGeoCurveCartesianND class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$25Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$25Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$25Enum;
}

@end

void GeogebraCommonKernelGeosTest_$25Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$25Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$25Enum *new_GeogebraCommonKernelGeosTest_$25Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$25Enum *self = [GeogebraCommonKernelGeosTest_$25Enum alloc];
  GeogebraCommonKernelGeosTest_$25Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$25Enum)

@implementation GeogebraCommonKernelGeosTest_$26Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoInterval class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$26Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$26Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$26Enum;
}

@end

void GeogebraCommonKernelGeosTest_$26Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$26Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$26Enum *new_GeogebraCommonKernelGeosTest_$26Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$26Enum *self = [GeogebraCommonKernelGeosTest_$26Enum alloc];
  GeogebraCommonKernelGeosTest_$26Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$26Enum)

@implementation GeogebraCommonKernelGeosTest_$27Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$27Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$27Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$27Enum;
}

@end

void GeogebraCommonKernelGeosTest_$27Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$27Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$27Enum *new_GeogebraCommonKernelGeosTest_$27Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$27Enum *self = [GeogebraCommonKernelGeosTest_$27Enum alloc];
  GeogebraCommonKernelGeosTest_$27Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$27Enum)

@implementation GeogebraCommonKernelGeosTest_$28Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoFunctionNVar class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$28Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$28Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$28Enum;
}

@end

void GeogebraCommonKernelGeosTest_$28Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$28Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$28Enum *new_GeogebraCommonKernelGeosTest_$28Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$28Enum *self = [GeogebraCommonKernelGeosTest_$28Enum alloc];
  GeogebraCommonKernelGeosTest_$28Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$28Enum)

@implementation GeogebraCommonKernelGeosTest_$29Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoImage class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$29Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$29Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$29Enum;
}

@end

void GeogebraCommonKernelGeosTest_$29Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$29Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$29Enum *new_GeogebraCommonKernelGeosTest_$29Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$29Enum *self = [GeogebraCommonKernelGeosTest_$29Enum alloc];
  GeogebraCommonKernelGeosTest_$29Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$29Enum)

@implementation GeogebraCommonKernelGeosTest_$30Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoList class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$30Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$30Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$30Enum;
}

@end

void GeogebraCommonKernelGeosTest_$30Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$30Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$30Enum *new_GeogebraCommonKernelGeosTest_$30Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$30Enum *self = [GeogebraCommonKernelGeosTest_$30Enum alloc];
  GeogebraCommonKernelGeosTest_$30Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$30Enum)

@implementation GeogebraCommonKernelGeosTest_$31Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoLocus class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$31Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$31Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$31Enum;
}

@end

void GeogebraCommonKernelGeosTest_$31Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$31Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$31Enum *new_GeogebraCommonKernelGeosTest_$31Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$31Enum *self = [GeogebraCommonKernelGeosTest_$31Enum alloc];
  GeogebraCommonKernelGeosTest_$31Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$31Enum)

@implementation GeogebraCommonKernelGeosTest_$32Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoPoint class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$32Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$32Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$32Enum;
}

@end

void GeogebraCommonKernelGeosTest_$32Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$32Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$32Enum *new_GeogebraCommonKernelGeosTest_$32Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$32Enum *self = [GeogebraCommonKernelGeosTest_$32Enum alloc];
  GeogebraCommonKernelGeosTest_$32Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$32Enum)

@implementation GeogebraCommonKernelGeosTest_$33Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoPointND_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$33Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$33Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$33Enum;
}

@end

void GeogebraCommonKernelGeosTest_$33Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$33Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$33Enum *new_GeogebraCommonKernelGeosTest_$33Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$33Enum *self = [GeogebraCommonKernelGeosTest_$33Enum alloc];
  GeogebraCommonKernelGeosTest_$33Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$33Enum)

@implementation GeogebraCommonKernelGeosTest_$34Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoPolygon class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$34Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$34Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$34Enum;
}

@end

void GeogebraCommonKernelGeosTest_$34Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$34Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$34Enum *new_GeogebraCommonKernelGeosTest_$34Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$34Enum *self = [GeogebraCommonKernelGeosTest_$34Enum alloc];
  GeogebraCommonKernelGeosTest_$34Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$34Enum)

@implementation GeogebraCommonKernelGeosTest_$35Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoPolygon3DInterface_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$35Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$35Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$35Enum;
}

@end

void GeogebraCommonKernelGeosTest_$35Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$35Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$35Enum *new_GeogebraCommonKernelGeosTest_$35Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$35Enum *self = [GeogebraCommonKernelGeosTest_$35Enum alloc];
  GeogebraCommonKernelGeosTest_$35Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$35Enum)

@implementation GeogebraCommonKernelGeosTest_$36Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoPolyLine class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$36Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$36Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$36Enum;
}

@end

void GeogebraCommonKernelGeosTest_$36Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$36Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$36Enum *new_GeogebraCommonKernelGeosTest_$36Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$36Enum *self = [GeogebraCommonKernelGeosTest_$36Enum alloc];
  GeogebraCommonKernelGeosTest_$36Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$36Enum)

@implementation GeogebraCommonKernelGeosTest_$37Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoScriptAction class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$37Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$37Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$37Enum;
}

@end

void GeogebraCommonKernelGeosTest_$37Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$37Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$37Enum *new_GeogebraCommonKernelGeosTest_$37Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$37Enum *self = [GeogebraCommonKernelGeosTest_$37Enum alloc];
  GeogebraCommonKernelGeosTest_$37Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$37Enum)

@implementation GeogebraCommonKernelGeosTest_$38Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoText class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$38Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$38Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$38Enum;
}

@end

void GeogebraCommonKernelGeosTest_$38Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$38Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$38Enum *new_GeogebraCommonKernelGeosTest_$38Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$38Enum *self = [GeogebraCommonKernelGeosTest_$38Enum alloc];
  GeogebraCommonKernelGeosTest_$38Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$38Enum)

@implementation GeogebraCommonKernelGeosTest_$39Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelImplicitGeoImplicitPoly class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$39Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$39Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$39Enum;
}

@end

void GeogebraCommonKernelGeosTest_$39Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$39Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$39Enum *new_GeogebraCommonKernelGeosTest_$39Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$39Enum *self = [GeogebraCommonKernelGeosTest_$39Enum alloc];
  GeogebraCommonKernelGeosTest_$39Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$39Enum)

@implementation GeogebraCommonKernelGeosTest_$40Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoUserInputElement class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$40Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$40Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$40Enum;
}

@end

void GeogebraCommonKernelGeosTest_$40Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$40Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$40Enum *new_GeogebraCommonKernelGeosTest_$40Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$40Enum *self = [GeogebraCommonKernelGeosTest_$40Enum alloc];
  GeogebraCommonKernelGeosTest_$40Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$40Enum)

@implementation GeogebraCommonKernelGeosTest_$41Enum

- (jboolean)checkWithId:(id)ob {
  return [((GeogebraCommonKernelGeosTestEnum *) nil_chk(GeogebraCommonKernelGeosTestEnum_get_GEOCOORDSYS2D())) checkWithId:ob] && ![((GeogebraCommonKernelGeosTestEnum *) nil_chk(GeogebraCommonKernelGeosTestEnum_get_GEOPLANEND())) checkWithId:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$41Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$41Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$41Enum;
}

@end

void GeogebraCommonKernelGeosTest_$41Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$41Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$41Enum *new_GeogebraCommonKernelGeosTest_$41Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$41Enum *self = [GeogebraCommonKernelGeosTest_$41Enum alloc];
  GeogebraCommonKernelGeosTest_$41Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$41Enum)

@implementation GeogebraCommonKernelGeosTest_$42Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoPlaneND_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$42Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$42Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$42Enum;
}

@end

void GeogebraCommonKernelGeosTest_$42Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$42Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$42Enum *new_GeogebraCommonKernelGeosTest_$42Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$42Enum *self = [GeogebraCommonKernelGeosTest_$42Enum alloc];
  GeogebraCommonKernelGeosTest_$42Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$42Enum)

@implementation GeogebraCommonKernelGeosTest_$43Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoCoordSys2D_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$43Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$43Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$43Enum;
}

@end

void GeogebraCommonKernelGeosTest_$43Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$43Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$43Enum *new_GeogebraCommonKernelGeosTest_$43Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$43Enum *self = [GeogebraCommonKernelGeosTest_$43Enum alloc];
  GeogebraCommonKernelGeosTest_$43Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$43Enum)

@implementation GeogebraCommonKernelGeosTest_$44Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoDirectionND_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$44Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$44Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$44Enum;
}

@end

void GeogebraCommonKernelGeosTest_$44Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$44Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$44Enum *new_GeogebraCommonKernelGeosTest_$44Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$44Enum *self = [GeogebraCommonKernelGeosTest_$44Enum alloc];
  GeogebraCommonKernelGeosTest_$44Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$44Enum)

@implementation GeogebraCommonKernelGeosTest_$45Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDGeoCoordSys1DInterface_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$45Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$45Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$45Enum;
}

@end

void GeogebraCommonKernelGeosTest_$45Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$45Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$45Enum *new_GeogebraCommonKernelGeosTest_$45Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$45Enum *self = [GeogebraCommonKernelGeosTest_$45Enum alloc];
  GeogebraCommonKernelGeosTest_$45Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$45Enum)

@implementation GeogebraCommonKernelGeosTest_$46Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$46Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$46Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$46Enum;
}

@end

void GeogebraCommonKernelGeosTest_$46Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$46Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$46Enum *new_GeogebraCommonKernelGeosTest_$46Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$46Enum *self = [GeogebraCommonKernelGeosTest_$46Enum alloc];
  GeogebraCommonKernelGeosTest_$46Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$46Enum)

@implementation GeogebraCommonKernelGeosTest_$47Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelPath_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$47Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$47Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$47Enum;
}

@end

void GeogebraCommonKernelGeosTest_$47Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$47Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$47Enum *new_GeogebraCommonKernelGeosTest_$47Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$47Enum *self = [GeogebraCommonKernelGeosTest_$47Enum alloc];
  GeogebraCommonKernelGeosTest_$47Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$47Enum)

@implementation GeogebraCommonKernelGeosTest_$48Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelKernelNDRegion3D_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$48Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$48Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$48Enum;
}

@end

void GeogebraCommonKernelGeosTest_$48Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$48Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$48Enum *new_GeogebraCommonKernelGeosTest_$48Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$48Enum *self = [GeogebraCommonKernelGeosTest_$48Enum alloc];
  GeogebraCommonKernelGeosTest_$48Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$48Enum)

@implementation GeogebraCommonKernelGeosTest_$49Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelGeosDilateable_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$49Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$49Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$49Enum;
}

@end

void GeogebraCommonKernelGeosTest_$49Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$49Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$49Enum *new_GeogebraCommonKernelGeosTest_$49Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$49Enum *self = [GeogebraCommonKernelGeosTest_$49Enum alloc];
  GeogebraCommonKernelGeosTest_$49Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$49Enum)

@implementation GeogebraCommonKernelGeosTest_$50Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelGeosTranslateable_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$50Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$50Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$50Enum;
}

@end

void GeogebraCommonKernelGeosTest_$50Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$50Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$50Enum *new_GeogebraCommonKernelGeosTest_$50Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$50Enum *self = [GeogebraCommonKernelGeosTest_$50Enum alloc];
  GeogebraCommonKernelGeosTest_$50Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$50Enum)

@implementation GeogebraCommonKernelGeosTest_$51Enum

- (jboolean)checkWithId:(id)ob {
  if (!([ob isKindOfClass:[GeogebraCommonKernelGeosGeoElement class]])) return NO;
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(ob, [GeogebraCommonKernelGeosGeoElement class])))) isMoveable]) return YES;
  return NO;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$51Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$51Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$51Enum;
}

@end

void GeogebraCommonKernelGeosTest_$51Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$51Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$51Enum *new_GeogebraCommonKernelGeosTest_$51Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$51Enum *self = [GeogebraCommonKernelGeosTest_$51Enum alloc];
  GeogebraCommonKernelGeosTest_$51Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$51Enum)

@implementation GeogebraCommonKernelGeosTest_$52Enum

- (jboolean)checkWithId:(id)ob {
  if (!([ob isKindOfClass:[GeogebraCommonKernelGeosGeoElement class]])) return NO;
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(ob, [GeogebraCommonKernelGeosGeoElement class])))) isRotateMoveable]) return YES;
  return NO;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$52Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$52Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$52Enum;
}

@end

void GeogebraCommonKernelGeosTest_$52Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$52Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$52Enum *new_GeogebraCommonKernelGeosTest_$52Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$52Enum *self = [GeogebraCommonKernelGeosTest_$52Enum alloc];
  GeogebraCommonKernelGeosTest_$52Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$52Enum)

@implementation GeogebraCommonKernelGeosTest_$53Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelGeosTransformable_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$53Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$53Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$53Enum;
}

@end

void GeogebraCommonKernelGeosTest_$53Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$53Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$53Enum *new_GeogebraCommonKernelGeosTest_$53Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$53Enum *self = [GeogebraCommonKernelGeosTest_$53Enum alloc];
  GeogebraCommonKernelGeosTest_$53Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$53Enum)

@implementation GeogebraCommonKernelGeosTest_$54Enum

- (jboolean)checkWithId:(id)ob {
  return [GeogebraCommonKernelGeosRotateable_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$54Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$54Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$54Enum;
}

@end

void GeogebraCommonKernelGeosTest_$54Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$54Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$54Enum *new_GeogebraCommonKernelGeosTest_$54Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$54Enum *self = [GeogebraCommonKernelGeosTest_$54Enum alloc];
  GeogebraCommonKernelGeosTest_$54Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$54Enum)

@implementation GeogebraCommonKernelGeosTest_$55Enum

- (jboolean)checkWithId:(id)ob {
  return [ob isKindOfClass:[GeogebraCommonKernelGeosGeoElement class]];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$55Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$55Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$55Enum;
}

@end

void GeogebraCommonKernelGeosTest_$55Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$55Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$55Enum *new_GeogebraCommonKernelGeosTest_$55Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$55Enum *self = [GeogebraCommonKernelGeosTest_$55Enum alloc];
  GeogebraCommonKernelGeosTest_$55Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$55Enum)

@implementation GeogebraCommonKernelGeosTest_$56Enum

- (jboolean)checkWithId:(id)ob {
  return YES;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$56Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$56Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$56Enum;
}

@end

void GeogebraCommonKernelGeosTest_$56Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$56Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$56Enum *new_GeogebraCommonKernelGeosTest_$56Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$56Enum *self = [GeogebraCommonKernelGeosTest_$56Enum alloc];
  GeogebraCommonKernelGeosTest_$56Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$56Enum)

@implementation GeogebraCommonKernelGeosTest_$57Enum

- (jboolean)checkWithId:(id)ob {
  if ([ob isKindOfClass:[GeogebraCommonKernelKernelNDGeoConicND class]]) {
    return [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(((GeogebraCommonKernelKernelNDGeoConicND *) check_class_cast(ob, [GeogebraCommonKernelKernelNDGeoConicND class])))) getLastHitType] == GeogebraCommonKernelGeosGeoElement_HitTypeEnum_get_ON_BOUNDARY();
  }
  return [GeogebraCommonKernelPath_class_() isInstance:ob];
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonKernelGeosTest_$57Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkWithId:", "check", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosTest_$57Enum = { 2, "", "geogebra.common.kernel.geos", "Test", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosTest_$57Enum;
}

@end

void GeogebraCommonKernelGeosTest_$57Enum_initWithNSString_withInt_(GeogebraCommonKernelGeosTest_$57Enum *self, NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTestEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonKernelGeosTest_$57Enum *new_GeogebraCommonKernelGeosTest_$57Enum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonKernelGeosTest_$57Enum *self = [GeogebraCommonKernelGeosTest_$57Enum alloc];
  GeogebraCommonKernelGeosTest_$57Enum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosTest_$57Enum)
