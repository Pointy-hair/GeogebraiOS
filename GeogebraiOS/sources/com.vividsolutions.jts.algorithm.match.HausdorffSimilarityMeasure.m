//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/algorithm/match/HausdorffSimilarityMeasure.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/distance/DiscreteHausdorffDistance.h"
#include "com/vividsolutions/jts/algorithm/match/HausdorffSimilarityMeasure.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "java/lang/Math.h"

#define ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_DENSIFY_FRACTION 0.25

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure, DENSIFY_FRACTION, jdouble)

@implementation ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure

- (instancetype)init {
  ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_init(self);
  return self;
}

- (jdouble)measureWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1
                  withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g2 {
  jdouble distance = ComVividsolutionsJtsAlgorithmDistanceDiscreteHausdorffDistance_distanceWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withDouble_(g1, g2, ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_DENSIFY_FRACTION);
  ComVividsolutionsJtsGeomEnvelope *env = [new_ComVividsolutionsJtsGeomEnvelope_initWithComVividsolutionsJtsGeomEnvelope_([((ComVividsolutionsJtsGeomGeometry *) nil_chk(g1)) getEnvelopeInternal]) autorelease];
  [env expandToIncludeWithComVividsolutionsJtsGeomEnvelope:[((ComVividsolutionsJtsGeomGeometry *) nil_chk(g2)) getEnvelopeInternal]];
  jdouble envSize = ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_diagonalSizeWithComVividsolutionsJtsGeomEnvelope_(env);
  jdouble measure = 1 - distance / envSize;
  return measure;
}

+ (jdouble)diagonalSizeWithComVividsolutionsJtsGeomEnvelope:(ComVividsolutionsJtsGeomEnvelope *)env {
  return ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_diagonalSizeWithComVividsolutionsJtsGeomEnvelope_(env);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "HausdorffSimilarityMeasure", NULL, 0x1, NULL, NULL },
    { "measureWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "measure", "D", 0x1, NULL, NULL },
    { "diagonalSizeWithComVividsolutionsJtsGeomEnvelope:", "diagonalSize", "D", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DENSIFY_FRACTION_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_DENSIFY_FRACTION },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure = { 2, "HausdorffSimilarityMeasure", "com.vividsolutions.jts.algorithm.match", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure;
}

@end

void ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_init(ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure *new_ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_init() {
  ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure *self = [ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure alloc];
  ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_init(self);
  return self;
}

jdouble ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_diagonalSizeWithComVividsolutionsJtsGeomEnvelope_(ComVividsolutionsJtsGeomEnvelope *env) {
  ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure_initialize();
  if ([((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env)) isNull]) return 0.0;
  jdouble width = [env getWidth];
  jdouble hgt = [env getHeight];
  return JavaLangMath_sqrtWithDouble_(width * width + hgt * hgt);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsAlgorithmMatchHausdorffSimilarityMeasure)
