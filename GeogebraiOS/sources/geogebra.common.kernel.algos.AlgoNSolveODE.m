//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoNSolveODE.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/MyPoint.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoNSolveODE.h"
#include "geogebra/common/kernel/arithmetic/FunctionalNVar.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoLocus.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "java/util/ArrayList.h"
#include "org/apache/commons/math/ode/DerivativeException.h"
#include "org/apache/commons/math/ode/FirstOrderDifferentialEquations.h"
#include "org/apache/commons/math/ode/FirstOrderIntegrator.h"
#include "org/apache/commons/math/ode/IntegratorException.h"
#include "org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.h"
#include "org/apache/commons/math/ode/sampling/StepHandler.h"
#include "org/apache/commons/math/ode/sampling/StepInterpolator.h"

@interface GeogebraCommonKernelAlgosAlgoNSolveODE () {
 @public
  GeogebraCommonKernelGeosGeoList *fun_;
  GeogebraCommonKernelGeosGeoList *startY_;
  GeogebraCommonKernelGeosGeoNumeric *startX_;
  GeogebraCommonKernelGeosGeoNumeric *endX_;
  IOSObjectArray *out_;
  jdouble t0_;
  IOSDoubleArray *y0_;
  id<OrgApacheCommonsMathOdeSamplingStepHandler> stepHandler_;
}

- (void)setUndefined;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE, fun_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE, startY_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE, startX_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE, endX_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE, out_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE, y0_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE, stepHandler_, id<OrgApacheCommonsMathOdeSamplingStepHandler>)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoNSolveODE_setUndefined(GeogebraCommonKernelAlgosAlgoNSolveODE *self);

@interface GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN : NSObject < OrgApacheCommonsMathOdeFirstOrderDifferentialEquations > {
 @public
  GeogebraCommonKernelAlgosAlgoNSolveODE *this$0_;
  GeogebraCommonKernelGeosGeoList *fun1_;
}

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoNSolveODE:(GeogebraCommonKernelAlgosAlgoNSolveODE *)outer$
                           withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)fun;

- (jint)getDimension;

- (void)computeDerivativesWithDouble:(jdouble)t
                     withDoubleArray:(IOSDoubleArray *)y
                     withDoubleArray:(IOSDoubleArray *)yDot;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN, this$0_, GeogebraCommonKernelAlgosAlgoNSolveODE *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN, fun1_, GeogebraCommonKernelGeosGeoList *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN *self, GeogebraCommonKernelAlgosAlgoNSolveODE *outer$, GeogebraCommonKernelGeosGeoList *fun);

__attribute__((unused)) static GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN *new_GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoNSolveODE *outer$, GeogebraCommonKernelGeosGeoList *fun) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN)

@interface GeogebraCommonKernelAlgosAlgoNSolveODE_$1 : NSObject < OrgApacheCommonsMathOdeSamplingStepHandler > {
 @public
  GeogebraCommonKernelAlgosAlgoNSolveODE *this$0_;
}

- (void)reset;

- (jboolean)requiresDenseOutput;

- (void)handleStepWithOrgApacheCommonsMathOdeSamplingStepInterpolator:(id<OrgApacheCommonsMathOdeSamplingStepInterpolator>)interpolator
                                                          withBoolean:(jboolean)isLast;

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoNSolveODE:(GeogebraCommonKernelAlgosAlgoNSolveODE *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoNSolveODE_$1)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoNSolveODE_$1, this$0_, GeogebraCommonKernelAlgosAlgoNSolveODE *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoNSolveODE_$1_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_(GeogebraCommonKernelAlgosAlgoNSolveODE_$1 *self, GeogebraCommonKernelAlgosAlgoNSolveODE *outer$);

__attribute__((unused)) static GeogebraCommonKernelAlgosAlgoNSolveODE_$1 *new_GeogebraCommonKernelAlgosAlgoNSolveODE_$1_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_(GeogebraCommonKernelAlgosAlgoNSolveODE *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoNSolveODE_$1)

@implementation GeogebraCommonKernelAlgosAlgoNSolveODE

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)fun
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)startX
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)startY
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)endX {
  GeogebraCommonKernelAlgosAlgoNSolveODE_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, labels, fun, startX, startY, endX);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_NSolveODE();
}

- (IOSObjectArray *)getResult {
  return out_;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, fun_);
  IOSObjectArray_Set(input_, 1, startX_);
  IOSObjectArray_Set(input_, 2, startY_);
  IOSObjectArray_Set(input_, 3, endX_);
  GeogebraCommonKernelAlgosAlgoNSolveODE_setAndConsume_out_(self, [IOSObjectArray newArrayWithLength:dim_ type:GeogebraCommonKernelGeosGeoLocus_class_()]);
  for (jint i = 0; i < dim_; i++) {
    IOSObjectArray_SetAndConsume(out_, i, new_GeogebraCommonKernelGeosGeoLocus_initWithGeogebraCommonKernelConstruction_(cons_));
  }
  [super setOutputLengthWithInt:dim_];
  for (jint i = 0; i < dim_; i++) {
    [super setOutputWithInt:i withGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(out_, i)];
  }
  [self setDependencies];
}

- (void)compute {
  for (jint i = 0; i < dim_; i++) {
    if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk([((GeogebraCommonKernelGeosGeoList *) nil_chk(fun_)) getWithInt:i])) isDefined] || ![((GeogebraCommonKernelGeosGeoElement *) nil_chk([((GeogebraCommonKernelGeosGeoList *) nil_chk(startY_)) getWithInt:i])) isDefined]) {
      GeogebraCommonKernelAlgosAlgoNSolveODE_setUndefined(self);
      return;
    }
  }
  if (![((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(startX_)) isDefined] || ![((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(endX_)) isDefined]) {
    GeogebraCommonKernelAlgosAlgoNSolveODE_setUndefined(self);
    return;
  }
  t0_ = [startX_ getDouble];
  for (jint i = 0; i < dim_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(y0_), i) = [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([((GeogebraCommonKernelGeosGeoList *) nil_chk(startY_)) getWithInt:i], [GeogebraCommonKernelGeosGeoNumeric class])))) getDouble];
  }
  GeogebraCommonKernelAlgosAlgoNSolveODE_setAndConsume_al_(self, [IOSObjectArray newArrayWithLength:dim_ type:JavaUtilArrayList_class_()]);
  for (jint i = 0; i < dim_; i++) {
    IOSObjectArray_SetAndConsume(al_, i, new_JavaUtilArrayList_init());
  }
  id<OrgApacheCommonsMathOdeFirstOrderIntegrator> integrator = [new_OrgApacheCommonsMathOdeNonstiffDormandPrince54Integrator_initWithDouble_withDouble_withDouble_withDouble_(0.001, 0.01, 0.000001, 0.0001) autorelease];
  id<OrgApacheCommonsMathOdeFirstOrderDifferentialEquations> ode = [new_GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_withGeogebraCommonKernelGeosGeoList_(self, fun_) autorelease];
  [integrator addStepHandlerWithOrgApacheCommonsMathOdeSamplingStepHandler:stepHandler_];
  for (jint i = 0; i < dim_; i++) {
    [((JavaUtilArrayList *) nil_chk(IOSObjectArray_Get(al_, i))) addWithId:[new_GeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_([startX_ getDouble], IOSDoubleArray_Get(nil_chk(y0_), i), NO) autorelease]];
  }
  @try {
    [integrator integrateWithOrgApacheCommonsMathOdeFirstOrderDifferentialEquations:ode withDouble:t0_ withDoubleArray:y0_ withDouble:[((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(endX_)) getDouble] withDoubleArray:y0_];
  }
  @catch (OrgApacheCommonsMathOdeDerivativeException *e) {
    [((OrgApacheCommonsMathOdeDerivativeException *) nil_chk(e)) printStackTrace];
    GeogebraCommonKernelAlgosAlgoNSolveODE_setUndefined(self);
    return;
  }
  @catch (OrgApacheCommonsMathOdeIntegratorException *e) {
    [((OrgApacheCommonsMathOdeIntegratorException *) nil_chk(e)) printStackTrace];
    GeogebraCommonKernelAlgosAlgoNSolveODE_setUndefined(self);
    return;
  }
  for (jint i = 0; i < dim_; i++) {
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(IOSObjectArray_Get(nil_chk(out_), i))) setPointsWithJavaUtilArrayList:IOSObjectArray_Get(al_, i)];
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(IOSObjectArray_Get(out_, i))) setDefinedWithBoolean:YES];
  }
}

- (void)setUndefined {
  GeogebraCommonKernelAlgosAlgoNSolveODE_setUndefined(self);
}

- (void)dealloc {
  RELEASE_(fun_);
  RELEASE_(startY_);
  RELEASE_(startX_);
  RELEASE_(endX_);
  RELEASE_(out_);
  RELEASE_(al_);
  RELEASE_(y0_);
  RELEASE_(stepHandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoNSolveODE", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getResult", NULL, "[Lgeogebra.common.kernel.geos.GeoLocus;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fun_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "startY_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "startX_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "endX_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "out_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoLocus;", NULL, NULL,  },
    { "al_", NULL, 0x4, "[Ljava.util.ArrayList;", NULL, "[Ljava/util/ArrayList<Lgeogebra/common/kernel/MyPoint;>;",  },
    { "t0_", NULL, 0x2, "D", NULL, NULL,  },
    { "y0_", NULL, 0x2, "[D", NULL, NULL,  },
    { "dim_", NULL, 0x4, "I", NULL, NULL,  },
    { "stepHandler_", NULL, 0x2, "Lorg.apache.commons.math.ode.sampling.StepHandler;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.kernel.algos.AlgoNSolveODE$ODEN;"};
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoNSolveODE = { 2, "AlgoNSolveODE", "geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 10, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoNSolveODE;
}

@end

void GeogebraCommonKernelAlgosAlgoNSolveODE_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelAlgosAlgoNSolveODE *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoList *fun, GeogebraCommonKernelGeosGeoNumeric *startX, GeogebraCommonKernelGeosGeoList *startY, GeogebraCommonKernelGeosGeoNumeric *endX) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoNSolveODE_setAndConsume_stepHandler_(self, new_GeogebraCommonKernelAlgosAlgoNSolveODE_$1_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_(self));
  GeogebraCommonKernelAlgosAlgoNSolveODE_set_fun_(self, fun);
  GeogebraCommonKernelAlgosAlgoNSolveODE_set_startY_(self, startY);
  GeogebraCommonKernelAlgosAlgoNSolveODE_set_startX_(self, startX);
  GeogebraCommonKernelAlgosAlgoNSolveODE_set_endX_(self, endX);
  self->dim_ = [((GeogebraCommonKernelGeosGeoList *) nil_chk(fun)) size];
  GeogebraCommonKernelAlgosAlgoNSolveODE_setAndConsume_y0_(self, [IOSDoubleArray newArrayWithLength:self->dim_]);
  [self setInputOutput];
  [self compute];
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSStringArray_withGeogebraCommonKernelGeosGeoElementArray_(labels, self->out_);
}

GeogebraCommonKernelAlgosAlgoNSolveODE *new_GeogebraCommonKernelAlgosAlgoNSolveODE_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoList *fun, GeogebraCommonKernelGeosGeoNumeric *startX, GeogebraCommonKernelGeosGeoList *startY, GeogebraCommonKernelGeosGeoNumeric *endX) {
  GeogebraCommonKernelAlgosAlgoNSolveODE *self = [GeogebraCommonKernelAlgosAlgoNSolveODE alloc];
  GeogebraCommonKernelAlgosAlgoNSolveODE_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, labels, fun, startX, startY, endX);
  return self;
}

void GeogebraCommonKernelAlgosAlgoNSolveODE_setUndefined(GeogebraCommonKernelAlgosAlgoNSolveODE *self) {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->out_))->size_; i++) {
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(IOSObjectArray_Get(self->out_, i))) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoNSolveODE)

@implementation GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoNSolveODE:(GeogebraCommonKernelAlgosAlgoNSolveODE *)outer$
                           withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)fun {
  GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_withGeogebraCommonKernelGeosGeoList_(self, outer$, fun);
  return self;
}

- (jint)getDimension {
  return this$0_->dim_;
}

- (void)computeDerivativesWithDouble:(jdouble)t
                     withDoubleArray:(IOSDoubleArray *)y
                     withDoubleArray:(IOSDoubleArray *)yDot {
  IOSDoubleArray *input = [IOSDoubleArray arrayWithLength:this$0_->dim_ + 1];
  *IOSDoubleArray_GetRef(input, 0) = t;
  for (jint i = 0; i < this$0_->dim_; i++) {
    *IOSDoubleArray_GetRef(input, i + 1) = IOSDoubleArray_Get(nil_chk(y), i);
  }
  for (jint i = 0; i < this$0_->dim_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(yDot), i) = [((id<GeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(((id<GeogebraCommonKernelArithmeticFunctionalNVar>) check_protocol_cast([((GeogebraCommonKernelGeosGeoList *) nil_chk(fun1_)) getWithInt:i], @protocol(GeogebraCommonKernelArithmeticFunctionalNVar))))) evaluateWithDoubleArray:input];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(fun1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelAlgosAlgoNSolveODE:withGeogebraCommonKernelGeosGeoList:", "ODEN", NULL, 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "computeDerivativesWithDouble:withDoubleArray:withDoubleArray:", "computeDerivatives", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.kernel.algos.AlgoNSolveODE;", NULL, NULL,  },
    { "fun1_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN = { 2, "ODEN", "geogebra.common.kernel.algos", "AlgoNSolveODE", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN;
}

@end

void GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN *self, GeogebraCommonKernelAlgosAlgoNSolveODE *outer$, GeogebraCommonKernelGeosGeoList *fun) {
  GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_set_this$0_(self, outer$);
  NSObject_init(self);
  GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_set_fun1_(self, fun);
}

GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN *new_GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoNSolveODE *outer$, GeogebraCommonKernelGeosGeoList *fun) {
  GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN *self = [GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN alloc];
  GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_withGeogebraCommonKernelGeosGeoList_(self, outer$, fun);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoNSolveODE_ODEN)

@implementation GeogebraCommonKernelAlgosAlgoNSolveODE_$1

- (void)reset {
}

- (jboolean)requiresDenseOutput {
  return YES;
}

- (void)handleStepWithOrgApacheCommonsMathOdeSamplingStepInterpolator:(id<OrgApacheCommonsMathOdeSamplingStepInterpolator>)interpolator
                                                          withBoolean:(jboolean)isLast {
  jdouble t = [((id<OrgApacheCommonsMathOdeSamplingStepInterpolator>) nil_chk(interpolator)) getCurrentTime];
  IOSDoubleArray *y1 = [interpolator getInterpolatedState];
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(y1))->size_; i++) {
    [((JavaUtilArrayList *) nil_chk(IOSObjectArray_Get(nil_chk(this$0_->al_), i))) addWithId:[new_GeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(t, IOSDoubleArray_Get(y1, i), YES) autorelease]];
  }
}

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoNSolveODE:(GeogebraCommonKernelAlgosAlgoNSolveODE *)outer$ {
  GeogebraCommonKernelAlgosAlgoNSolveODE_$1_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "requiresDenseOutput", NULL, "Z", 0x1, NULL, NULL },
    { "handleStepWithOrgApacheCommonsMathOdeSamplingStepInterpolator:withBoolean:", "handleStep", "V", 0x1, "Lorg.apache.commons.math.ode.DerivativeException;", NULL },
    { "initWithGeogebraCommonKernelAlgosAlgoNSolveODE:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.kernel.algos.AlgoNSolveODE;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoNSolveODE_$1 = { 2, "", "geogebra.common.kernel.algos", "AlgoNSolveODE", 0x8008, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoNSolveODE_$1;
}

@end

void GeogebraCommonKernelAlgosAlgoNSolveODE_$1_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_(GeogebraCommonKernelAlgosAlgoNSolveODE_$1 *self, GeogebraCommonKernelAlgosAlgoNSolveODE *outer$) {
  GeogebraCommonKernelAlgosAlgoNSolveODE_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonKernelAlgosAlgoNSolveODE_$1 *new_GeogebraCommonKernelAlgosAlgoNSolveODE_$1_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_(GeogebraCommonKernelAlgosAlgoNSolveODE *outer$) {
  GeogebraCommonKernelAlgosAlgoNSolveODE_$1 *self = [GeogebraCommonKernelAlgosAlgoNSolveODE_$1 alloc];
  GeogebraCommonKernelAlgosAlgoNSolveODE_$1_initWithGeogebraCommonKernelAlgosAlgoNSolveODE_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoNSolveODE_$1)
