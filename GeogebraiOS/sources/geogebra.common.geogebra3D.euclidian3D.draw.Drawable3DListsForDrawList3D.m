//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DListsForDrawList3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/EuclidianView3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawList3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DLists.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DListsForDrawList3D.h"
#include "geogebra/common/geogebra3D/euclidian3D/openGL/Renderer.h"

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D () {
 @public
  GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D, view3D_, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)

@implementation GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, view3D);
  return self;
}

- (void)addWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawable {
  [super addWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:drawable];
  if (!([drawable isKindOfClass:[GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D class]])) {
    [((GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view3D_)) addOneGeoToPick];
  }
}

- (void)removeWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawable {
  [super removeWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:drawable];
  if (drawable != nil && !([drawable isKindOfClass:[GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D class]])) {
    [((GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *) nil_chk(view3D_)) removeOneGeoToPick];
  }
}

- (void)drawTextsWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer {
  for (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D * __strong d in nil_chk(IOSObjectArray_Get(nil_chk(lists_), GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_TEXTS))) {
    [((GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *) nil_chk(d)) drawLabelWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:renderer];
  }
  for (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D * __strong d in nil_chk(IOSObjectArray_Get(lists_, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_LISTS))) {
    [((GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *) nil_chk([((GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D *) nil_chk(((GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D *) check_class_cast(d, [GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D class])))) getDrawable3DLists])) drawLabelWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:renderer];
  }
}

- (void)dealloc {
  RELEASE_(view3D_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:", "Drawable3DListsForDrawList3D", NULL, 0x1, NULL, NULL },
    { "addWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:", "add", "V", 0x1, NULL, NULL },
    { "removeWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:", "remove", "V", 0x4, NULL, NULL },
    { "drawTextsWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:", "drawTexts", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "view3D_", NULL, 0x2, "Lgeogebra.common.geogebra3D.euclidian3D.EuclidianView3D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D = { 2, "Drawable3DListsForDrawList3D", "geogebra.common.geogebra3D.euclidian3D.draw", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D) {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists_init(self);
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_set_view3D_(self, view3D);
}

GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D) {
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *self = [GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D alloc];
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(self, view3D);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D)
