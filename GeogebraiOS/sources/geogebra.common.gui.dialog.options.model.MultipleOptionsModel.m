//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/MultipleOptionsModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "geogebra/common/gui/dialog/options/model/MultipleOptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/NumberOptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/main/Localization.h"
#include "java/util/List.h"

@interface GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel () {
 @public
  id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel, listener_, id<GeogebraCommonGuiDialogOptionsModelIComboListener>)

@implementation GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelIComboListener:(id<GeogebraCommonGuiDialogOptionsModelIComboListener>)listener {
  GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

- (id<JavaUtilList>)getChoichesWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)updateProperties {
  jint value0 = [self getValueAtWithInt:0];
  jboolean isEqual = YES;
  for (jint i = 0; i < [self getGeosLength]; i++) {
    if (value0 != [self getValueAtWithInt:i]) {
      isEqual = NO;
    }
  }
  [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk(listener_)) setSelectedIndexWithInt:isEqual ? value0 : -1];
}

- (void)fillModesWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc {
  for (NSString * __strong item in nil_chk([self getChoichesWithGeogebraCommonMainLocalization:loc])) {
    [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk([self getListener])) addItemWithNSString:item];
  }
}

- (id<GeogebraCommonGuiDialogOptionsModelIComboListener>)getListener {
  return listener_;
}

- (void)setListenerWithGeogebraCommonGuiDialogOptionsModelIComboListener:(id<GeogebraCommonGuiDialogOptionsModelIComboListener>)listener {
  GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_set_listener_(self, listener);
}

- (void)dealloc {
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelIComboListener:", "MultipleOptionsModel", NULL, 0x1, NULL, NULL },
    { "getChoichesWithGeogebraCommonMainLocalization:", "getChoiches", "Ljava.util.List;", 0x401, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "fillModesWithGeogebraCommonMainLocalization:", "fillModes", "V", 0x1, NULL, NULL },
    { "getListener", NULL, "Lgeogebra.common.gui.dialog.options.model.IComboListener;", 0x1, NULL, NULL },
    { "setListenerWithGeogebraCommonGuiDialogOptionsModelIComboListener:", "setListener", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MAX_CHOICES_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_MAX_CHOICES },
    { "listener_", NULL, 0x2, "Lgeogebra.common.gui.dialog.options.model.IComboListener;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel = { 2, "MultipleOptionsModel", "geogebra.common.gui.dialog.options.model", NULL, 0x401, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel *self, id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelNumberOptionsModel_init(self);
  GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_set_listener_(self, listener);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel)
