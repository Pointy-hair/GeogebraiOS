//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/geomgraph/index/MonotoneChain.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geomgraph/index/MonotoneChain.h"
#include "com/vividsolutions/jts/geomgraph/index/MonotoneChainEdge.h"
#include "com/vividsolutions/jts/geomgraph/index/SegmentIntersector.h"

@implementation ComVividsolutionsJtsGeomgraphIndexMonotoneChain

- (instancetype)initWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *)mce
                                                                    withInt:(jint)chainIndex {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChain_initWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_(self, mce, chainIndex);
  return self;
}

- (void)computeIntersectionsWithComVividsolutionsJtsGeomgraphIndexMonotoneChain:(ComVividsolutionsJtsGeomgraphIndexMonotoneChain *)mc
                       withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:(ComVividsolutionsJtsGeomgraphIndexSegmentIntersector *)si {
  [((ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *) nil_chk(self->mce_)) computeIntersectsForChainWithInt:chainIndex_ withComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:((ComVividsolutionsJtsGeomgraphIndexMonotoneChain *) nil_chk(mc))->mce_ withInt:mc->chainIndex_ withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:si];
}

- (void)dealloc {
  RELEASE_(mce_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge:withInt:", "MonotoneChain", NULL, 0x1, NULL, NULL },
    { "computeIntersectionsWithComVividsolutionsJtsGeomgraphIndexMonotoneChain:withComVividsolutionsJtsGeomgraphIndexSegmentIntersector:", "computeIntersections", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mce_", NULL, 0x0, "Lcom.vividsolutions.jts.geomgraph.index.MonotoneChainEdge;", NULL, NULL,  },
    { "chainIndex_", NULL, 0x0, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomgraphIndexMonotoneChain = { 2, "MonotoneChain", "com.vividsolutions.jts.geomgraph.index", NULL, 0x1, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomgraphIndexMonotoneChain;
}

@end

void ComVividsolutionsJtsGeomgraphIndexMonotoneChain_initWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_(ComVividsolutionsJtsGeomgraphIndexMonotoneChain *self, ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *mce, jint chainIndex) {
  NSObject_init(self);
  ComVividsolutionsJtsGeomgraphIndexMonotoneChain_set_mce_(self, mce);
  self->chainIndex_ = chainIndex;
}

ComVividsolutionsJtsGeomgraphIndexMonotoneChain *new_ComVividsolutionsJtsGeomgraphIndexMonotoneChain_initWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_(ComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge *mce, jint chainIndex) {
  ComVividsolutionsJtsGeomgraphIndexMonotoneChain *self = [ComVividsolutionsJtsGeomgraphIndexMonotoneChain alloc];
  ComVividsolutionsJtsGeomgraphIndexMonotoneChain_initWithComVividsolutionsJtsGeomgraphIndexMonotoneChainEdge_withInt_(self, mce, chainIndex);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomgraphIndexMonotoneChain)
