//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/alds/al/graphs/PrimMinimumSpanningTree.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/alds/SortableObject.h"
#include "geogebra/common/kernel/discrete/alds/al/graphs/PrimMinimumSpanningTree.h"
#include "geogebra/common/kernel/discrete/alds/ds/graphs/Vertex.h"
#include "geogebra/common/kernel/discrete/alds/ds/graphs/WeightedGraph.h"
#include "geogebra/common/kernel/discrete/alds/ds/heaps/Heap.h"
#include "geogebra/common/kernel/discrete/alds/ds/heaps/HeapFactory.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree () {
 @public
  id<JavaUtilMap> keyMap_;
  id<JavaUtilMap> predecessorMap_;
  GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *graph_;
  GeogebraCommonKernelDiscreteAldsDsGraphsVertex *root_;
}

- (id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap>)createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)graph
                                                                                                                   withJavaUtilSet:(id<JavaUtilSet>)removed;

- (void)initialize__WithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)graph
                           withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)root OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree, keyMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree, predecessorMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree, graph_, GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree, root_, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)

__attribute__((unused)) static id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap> GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withJavaUtilSet_(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *self, GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *graph, id<JavaUtilSet> removed);

__attribute__((unused)) static void GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initialize__WithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *self, GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *graph, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *root);

@implementation GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree

- (instancetype)initWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)graph
                           withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)root {
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(self, graph, root);
  return self;
}

- (GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *)compute {
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initialize__WithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(self, graph_, root_);
  id<JavaUtilSet> removed = [new_JavaUtilHashSet_init() autorelease];
  id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap> queue = GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withJavaUtilSet_(self, graph_, removed);
  while ([((id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap>) nil_chk(queue)) size] > 0) {
    GeogebraCommonKernelDiscreteAldsSortableObject *sortableObject = [queue extract];
    GeogebraCommonKernelDiscreteAldsDsGraphsVertex *u = [((GeogebraCommonKernelDiscreteAldsSortableObject *) nil_chk(sortableObject)) getObject];
    [removed addWithId:u];
    {
      IOSObjectArray *a__ = [((GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *) nil_chk(graph_)) getAllAdjacentVerticesWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:u];
      GeogebraCommonKernelDiscreteAldsDsGraphsVertex * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      GeogebraCommonKernelDiscreteAldsDsGraphsVertex * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        GeogebraCommonKernelDiscreteAldsDsGraphsVertex *v = *b__++;
        if (![removed containsWithId:v] && [graph_ getEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:u withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:v] < [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(keyMap_)) getWithId:v])) intValue]) {
          [((id<JavaUtilMap>) nil_chk(predecessorMap_)) putWithId:v withId:u];
          [keyMap_ putWithId:v withId:JavaLangInteger_valueOfWithInt_([graph_ getEdgeWeightWithGeogebraCommonKernelDiscreteAldsDsGraphsVertex:u withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:v])];
        }
      }
    }
    queue = GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withJavaUtilSet_(self, graph_, removed);
  }
  return self;
}

- (id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap>)createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)graph
                                                                                                                   withJavaUtilSet:(id<JavaUtilSet>)removed {
  return GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withJavaUtilSet_(self, graph, removed);
}

- (void)initialize__WithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *)graph
                           withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:(GeogebraCommonKernelDiscreteAldsDsGraphsVertex *)root {
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initialize__WithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(self, graph, root);
}

- (id<JavaUtilMap>)getKeyMap {
  return keyMap_;
}

- (id<JavaUtilMap>)getPredecessorMap {
  return predecessorMap_;
}

- (void)dealloc {
  RELEASE_(keyMap_);
  RELEASE_(predecessorMap_);
  RELEASE_(graph_);
  RELEASE_(root_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "PrimMinimumSpanningTree", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "Lgeogebra.common.kernel.discrete.alds.al.graphs.PrimMinimumSpanningTree;", 0x1, NULL, NULL },
    { "createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:withJavaUtilSet:", "createMinPriorityQueue", "Lgeogebra.common.kernel.discrete.alds.ds.heaps.Heap;", 0x2, NULL, NULL },
    { "initialize__WithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph:withGeogebraCommonKernelDiscreteAldsDsGraphsVertex:", "initialize", "V", 0x2, NULL, NULL },
    { "getKeyMap", NULL, "Ljava.util.Map;", 0x1, NULL, NULL },
    { "getPredecessorMap", NULL, "Ljava.util.Map;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "keyMap_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lgeogebra/common/kernel/discrete/alds/ds/graphs/Vertex;Ljava/lang/Integer;>;",  },
    { "predecessorMap_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lgeogebra/common/kernel/discrete/alds/ds/graphs/Vertex;Lgeogebra/common/kernel/discrete/alds/ds/graphs/Vertex;>;",  },
    { "graph_", NULL, 0x12, "Lgeogebra.common.kernel.discrete.alds.ds.graphs.WeightedGraph;", NULL, NULL,  },
    { "root_", NULL, 0x12, "Lgeogebra.common.kernel.discrete.alds.ds.graphs.Vertex;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree = { 2, "PrimMinimumSpanningTree", "geogebra.common.kernel.discrete.alds.al.graphs", NULL, 0x11, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree;
}

@end

void GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *self, GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *graph, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *root) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_set_graph_(self, graph);
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_set_root_(self, root);
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_setAndConsume_keyMap_(self, new_JavaUtilHashMap_initWithInt_([((GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *) nil_chk(graph)) numberOfVertices]));
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_setAndConsume_predecessorMap_(self, new_JavaUtilHashMap_initWithInt_([graph numberOfVertices]));
}

GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *new_GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *graph, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *root) {
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *self = [GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree alloc];
  GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(self, graph, root);
  return self;
}

id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap> GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_createMinPriorityQueueWithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withJavaUtilSet_(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *self, GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *graph, id<JavaUtilSet> removed) {
  id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap> heap = GeogebraCommonKernelDiscreteAldsDsHeapsHeapFactory_minHeap();
  for (GeogebraCommonKernelDiscreteAldsDsGraphsVertex * __strong vertex in nil_chk([((GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *) nil_chk(graph)) getVertices])) {
    if (![((id<JavaUtilSet>) nil_chk(removed)) containsWithId:vertex]) {
      [((id<GeogebraCommonKernelDiscreteAldsDsHeapsHeap>) nil_chk(heap)) insertWithGeogebraCommonKernelDiscreteAldsSortableObject:[new_GeogebraCommonKernelDiscreteAldsSortableObject_initWithId_withInt_(vertex, [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(self->keyMap_)) getWithId:vertex])) intValue]) autorelease]];
    }
  }
  return heap;
}

void GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree_initialize__WithGeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph_withGeogebraCommonKernelDiscreteAldsDsGraphsVertex_(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree *self, GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *graph, GeogebraCommonKernelDiscreteAldsDsGraphsVertex *root) {
  for (GeogebraCommonKernelDiscreteAldsDsGraphsVertex * __strong vertex in nil_chk([((GeogebraCommonKernelDiscreteAldsDsGraphsWeightedGraph *) nil_chk(graph)) getVertices])) {
    [((id<JavaUtilMap>) nil_chk(self->keyMap_)) putWithId:vertex withId:JavaLangInteger_valueOfWithInt_(JavaLangInteger_MAX_VALUE)];
    [((id<JavaUtilMap>) nil_chk(self->predecessorMap_)) putWithId:vertex withId:nil];
  }
  [((id<JavaUtilMap>) nil_chk(self->keyMap_)) putWithId:root withId:JavaLangInteger_valueOfWithInt_(0)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteAldsAlGraphsPrimMinimumSpanningTree)
