//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/util/GeometricShapeFactory.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Envelope.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/geom/LinearRing.h"
#include "com/vividsolutions/jts/geom/Polygon.h"
#include "com/vividsolutions/jts/geom/PrecisionModel.h"
#include "com/vividsolutions/jts/util/GeometricShapeFactory.h"
#include "java/lang/Math.h"

@implementation ComVividsolutionsJtsUtilGeometricShapeFactory

- (instancetype)init {
  ComVividsolutionsJtsUtilGeometricShapeFactory_init(self);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometryFactory:(ComVividsolutionsJtsGeomGeometryFactory *)geomFact {
  ComVividsolutionsJtsUtilGeometricShapeFactory_initWithComVividsolutionsJtsGeomGeometryFactory_(self, geomFact);
  return self;
}

- (void)setBaseWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)base {
  [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) setBaseWithComVividsolutionsJtsGeomCoordinate:base];
}

- (void)setCentreWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)centre {
  [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) setCentreWithComVividsolutionsJtsGeomCoordinate:centre];
}

- (void)setNumPointsWithInt:(jint)nPts {
  self->nPts_ = nPts;
}

- (void)setSizeWithDouble:(jdouble)size {
  [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) setSizeWithDouble:size];
}

- (void)setWidthWithDouble:(jdouble)width {
  [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) setWidthWithDouble:width];
}

- (void)setHeightWithDouble:(jdouble)height {
  [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) setHeightWithDouble:height];
}

- (ComVividsolutionsJtsGeomPolygon *)createRectangle {
  jint i;
  jint ipt = 0;
  jint nSide = nPts_ / 4;
  if (nSide < 1) nSide = 1;
  jdouble XsegLen = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk([((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) getEnvelope])) getWidth] / nSide;
  jdouble YsegLen = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk([dim_ getEnvelope])) getHeight] / nSide;
  IOSObjectArray *pts = [IOSObjectArray arrayWithLength:4 * nSide + 1 type:ComVividsolutionsJtsGeomCoordinate_class_()];
  ComVividsolutionsJtsGeomEnvelope *env = [dim_ getEnvelope];
  jdouble maxx = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env)) getMinX] + nSide * XsegLen;
  jdouble maxy = [env getMinY] + nSide * XsegLen;
  for (i = 0; i < nSide; i++) {
    jdouble x = [env getMinX] + i * XsegLen;
    jdouble y = [env getMinY];
    IOSObjectArray_Set(pts, ipt++, [self createCoordWithDouble:x withDouble:y]);
  }
  for (i = 0; i < nSide; i++) {
    jdouble x = [env getMaxX];
    jdouble y = [env getMinY] + i * YsegLen;
    IOSObjectArray_Set(pts, ipt++, [self createCoordWithDouble:x withDouble:y]);
  }
  for (i = 0; i < nSide; i++) {
    jdouble x = [env getMaxX] - i * XsegLen;
    jdouble y = [env getMaxY];
    IOSObjectArray_Set(pts, ipt++, [self createCoordWithDouble:x withDouble:y]);
  }
  for (i = 0; i < nSide; i++) {
    jdouble x = [env getMinX];
    jdouble y = [env getMaxY] - i * YsegLen;
    IOSObjectArray_Set(pts, ipt++, [self createCoordWithDouble:x withDouble:y]);
  }
  IOSObjectArray_SetAndConsume(pts, ipt++, new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(pts, 0)));
  ComVividsolutionsJtsGeomLinearRing *ring = [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(geomFact_)) createLinearRingWithComVividsolutionsJtsGeomCoordinateArray:pts];
  ComVividsolutionsJtsGeomPolygon *poly = [geomFact_ createPolygonWithComVividsolutionsJtsGeomLinearRing:ring withComVividsolutionsJtsGeomLinearRingArray:nil];
  return poly;
}

- (ComVividsolutionsJtsGeomPolygon *)createCircle {
  ComVividsolutionsJtsGeomEnvelope *env = [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) getEnvelope];
  jdouble xRadius = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env)) getWidth] / 2.0;
  jdouble yRadius = [env getHeight] / 2.0;
  jdouble centreX = [env getMinX] + xRadius;
  jdouble centreY = [env getMinY] + yRadius;
  IOSObjectArray *pts = [IOSObjectArray arrayWithLength:nPts_ + 1 type:ComVividsolutionsJtsGeomCoordinate_class_()];
  jint iPt = 0;
  for (jint i = 0; i < nPts_; i++) {
    jdouble ang = i * (2 * JavaLangMath_PI / nPts_);
    jdouble x = xRadius * JavaLangMath_cosWithDouble_(ang) + centreX;
    jdouble y = yRadius * JavaLangMath_sinWithDouble_(ang) + centreY;
    IOSObjectArray_Set(pts, iPt++, [self createCoordWithDouble:x withDouble:y]);
  }
  IOSObjectArray_SetAndConsume(pts, iPt, new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(pts, 0)));
  ComVividsolutionsJtsGeomLinearRing *ring = [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(geomFact_)) createLinearRingWithComVividsolutionsJtsGeomCoordinateArray:pts];
  ComVividsolutionsJtsGeomPolygon *poly = [geomFact_ createPolygonWithComVividsolutionsJtsGeomLinearRing:ring withComVividsolutionsJtsGeomLinearRingArray:nil];
  return poly;
}

- (ComVividsolutionsJtsGeomLineString *)createArcWithDouble:(jdouble)startAng
                                                 withDouble:(jdouble)angExtent {
  ComVividsolutionsJtsGeomEnvelope *env = [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) getEnvelope];
  jdouble xRadius = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env)) getWidth] / 2.0;
  jdouble yRadius = [env getHeight] / 2.0;
  jdouble centreX = [env getMinX] + xRadius;
  jdouble centreY = [env getMinY] + yRadius;
  jdouble angSize = angExtent;
  if (angSize <= 0.0 || angSize > 2 * JavaLangMath_PI) angSize = 2 * JavaLangMath_PI;
  jdouble angInc = angSize / (nPts_ - 1);
  IOSObjectArray *pts = [IOSObjectArray arrayWithLength:nPts_ type:ComVividsolutionsJtsGeomCoordinate_class_()];
  jint iPt = 0;
  for (jint i = 0; i < nPts_; i++) {
    jdouble ang = startAng + i * angInc;
    jdouble x = xRadius * JavaLangMath_cosWithDouble_(ang) + centreX;
    jdouble y = yRadius * JavaLangMath_sinWithDouble_(ang) + centreY;
    IOSObjectArray_Set(pts, iPt++, [self createCoordWithDouble:x withDouble:y]);
  }
  ComVividsolutionsJtsGeomLineString *line = [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(geomFact_)) createLineStringWithComVividsolutionsJtsGeomCoordinateArray:pts];
  return line;
}

- (ComVividsolutionsJtsGeomPolygon *)createArcPolygonWithDouble:(jdouble)startAng
                                                     withDouble:(jdouble)angExtent {
  ComVividsolutionsJtsGeomEnvelope *env = [((ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *) nil_chk(dim_)) getEnvelope];
  jdouble xRadius = [((ComVividsolutionsJtsGeomEnvelope *) nil_chk(env)) getWidth] / 2.0;
  jdouble yRadius = [env getHeight] / 2.0;
  jdouble centreX = [env getMinX] + xRadius;
  jdouble centreY = [env getMinY] + yRadius;
  jdouble angSize = angExtent;
  if (angSize <= 0.0 || angSize > 2 * JavaLangMath_PI) angSize = 2 * JavaLangMath_PI;
  jdouble angInc = angSize / (nPts_ - 1);
  IOSObjectArray *pts = [IOSObjectArray arrayWithLength:nPts_ + 2 type:ComVividsolutionsJtsGeomCoordinate_class_()];
  jint iPt = 0;
  IOSObjectArray_Set(pts, iPt++, [self createCoordWithDouble:centreX withDouble:centreY]);
  for (jint i = 0; i < nPts_; i++) {
    jdouble ang = startAng + angInc * i;
    jdouble x = xRadius * JavaLangMath_cosWithDouble_(ang) + centreX;
    jdouble y = yRadius * JavaLangMath_sinWithDouble_(ang) + centreY;
    IOSObjectArray_Set(pts, iPt++, [self createCoordWithDouble:x withDouble:y]);
  }
  IOSObjectArray_Set(pts, iPt++, [self createCoordWithDouble:centreX withDouble:centreY]);
  ComVividsolutionsJtsGeomLinearRing *ring = [((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(geomFact_)) createLinearRingWithComVividsolutionsJtsGeomCoordinateArray:pts];
  ComVividsolutionsJtsGeomPolygon *geom = [geomFact_ createPolygonWithComVividsolutionsJtsGeomLinearRing:ring withComVividsolutionsJtsGeomLinearRingArray:nil];
  return geom;
}

- (ComVividsolutionsJtsGeomCoordinate *)createCoordWithDouble:(jdouble)x
                                                   withDouble:(jdouble)y {
  ComVividsolutionsJtsGeomCoordinate *pt = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(x, y) autorelease];
  [((ComVividsolutionsJtsGeomPrecisionModel *) nil_chk([((ComVividsolutionsJtsGeomGeometryFactory *) nil_chk(geomFact_)) getPrecisionModel])) makePreciseWithComVividsolutionsJtsGeomCoordinate:pt];
  return pt;
}

- (void)dealloc {
  RELEASE_(geomFact_);
  RELEASE_(dim_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "GeometricShapeFactory", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometryFactory:", "GeometricShapeFactory", NULL, 0x1, NULL, NULL },
    { "setBaseWithComVividsolutionsJtsGeomCoordinate:", "setBase", "V", 0x1, NULL, NULL },
    { "setCentreWithComVividsolutionsJtsGeomCoordinate:", "setCentre", "V", 0x1, NULL, NULL },
    { "setNumPointsWithInt:", "setNumPoints", "V", 0x1, NULL, NULL },
    { "setSizeWithDouble:", "setSize", "V", 0x1, NULL, NULL },
    { "setWidthWithDouble:", "setWidth", "V", 0x1, NULL, NULL },
    { "setHeightWithDouble:", "setHeight", "V", 0x1, NULL, NULL },
    { "createRectangle", NULL, "Lcom.vividsolutions.jts.geom.Polygon;", 0x1, NULL, NULL },
    { "createCircle", NULL, "Lcom.vividsolutions.jts.geom.Polygon;", 0x1, NULL, NULL },
    { "createArcWithDouble:withDouble:", "createArc", "Lcom.vividsolutions.jts.geom.LineString;", 0x1, NULL, NULL },
    { "createArcPolygonWithDouble:withDouble:", "createArcPolygon", "Lcom.vividsolutions.jts.geom.Polygon;", 0x1, NULL, NULL },
    { "createCoordWithDouble:withDouble:", "createCoord", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geomFact_", NULL, 0x4, "Lcom.vividsolutions.jts.geom.GeometryFactory;", NULL, NULL,  },
    { "dim_", NULL, 0x4, "Lcom.vividsolutions.jts.util.GeometricShapeFactory$Dimensions;", NULL, NULL,  },
    { "nPts_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.vividsolutions.jts.util.GeometricShapeFactory$Dimensions;"};
  static const J2ObjcClassInfo _ComVividsolutionsJtsUtilGeometricShapeFactory = { 2, "GeometricShapeFactory", "com.vividsolutions.jts.util", NULL, 0x1, 13, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComVividsolutionsJtsUtilGeometricShapeFactory;
}

@end

void ComVividsolutionsJtsUtilGeometricShapeFactory_init(ComVividsolutionsJtsUtilGeometricShapeFactory *self) {
  ComVividsolutionsJtsUtilGeometricShapeFactory_initWithComVividsolutionsJtsGeomGeometryFactory_(self, [new_ComVividsolutionsJtsGeomGeometryFactory_init() autorelease]);
}

ComVividsolutionsJtsUtilGeometricShapeFactory *new_ComVividsolutionsJtsUtilGeometricShapeFactory_init() {
  ComVividsolutionsJtsUtilGeometricShapeFactory *self = [ComVividsolutionsJtsUtilGeometricShapeFactory alloc];
  ComVividsolutionsJtsUtilGeometricShapeFactory_init(self);
  return self;
}

void ComVividsolutionsJtsUtilGeometricShapeFactory_initWithComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsUtilGeometricShapeFactory *self, ComVividsolutionsJtsGeomGeometryFactory *geomFact) {
  NSObject_init(self);
  ComVividsolutionsJtsUtilGeometricShapeFactory_setAndConsume_dim_(self, new_ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions_initWithComVividsolutionsJtsUtilGeometricShapeFactory_(self));
  self->nPts_ = 100;
  ComVividsolutionsJtsUtilGeometricShapeFactory_set_geomFact_(self, geomFact);
}

ComVividsolutionsJtsUtilGeometricShapeFactory *new_ComVividsolutionsJtsUtilGeometricShapeFactory_initWithComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsGeomGeometryFactory *geomFact) {
  ComVividsolutionsJtsUtilGeometricShapeFactory *self = [ComVividsolutionsJtsUtilGeometricShapeFactory alloc];
  ComVividsolutionsJtsUtilGeometricShapeFactory_initWithComVividsolutionsJtsGeomGeometryFactory_(self, geomFact);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsUtilGeometricShapeFactory)

@implementation ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions

- (void)setBaseWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)base {
  ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions_set_base_(self, base);
}

- (void)setCentreWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)centre {
  ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions_set_centre_(self, centre);
}

- (void)setSizeWithDouble:(jdouble)size {
  height_ = size;
  width_ = size;
}

- (void)setWidthWithDouble:(jdouble)width {
  self->width_ = width;
}

- (void)setHeightWithDouble:(jdouble)height {
  self->height_ = height;
}

- (ComVividsolutionsJtsGeomEnvelope *)getEnvelope {
  if (base_ != nil) {
    return [new_ComVividsolutionsJtsGeomEnvelope_initWithDouble_withDouble_withDouble_withDouble_(base_->x_, base_->x_ + width_, base_->y_, base_->y_ + height_) autorelease];
  }
  if (centre_ != nil) {
    return [new_ComVividsolutionsJtsGeomEnvelope_initWithDouble_withDouble_withDouble_withDouble_(centre_->x_ - width_ / 2, centre_->x_ + width_ / 2, centre_->y_ - height_ / 2, centre_->y_ + height_ / 2) autorelease];
  }
  return [new_ComVividsolutionsJtsGeomEnvelope_initWithDouble_withDouble_withDouble_withDouble_(0, width_, 0, height_) autorelease];
}

- (instancetype)initWithComVividsolutionsJtsUtilGeometricShapeFactory:(ComVividsolutionsJtsUtilGeometricShapeFactory *)outer$ {
  ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions_initWithComVividsolutionsJtsUtilGeometricShapeFactory_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(base_);
  RELEASE_(centre_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setBaseWithComVividsolutionsJtsGeomCoordinate:", "setBase", "V", 0x1, NULL, NULL },
    { "setCentreWithComVividsolutionsJtsGeomCoordinate:", "setCentre", "V", 0x1, NULL, NULL },
    { "setSizeWithDouble:", "setSize", "V", 0x1, NULL, NULL },
    { "setWidthWithDouble:", "setWidth", "V", 0x1, NULL, NULL },
    { "setHeightWithDouble:", "setHeight", "V", 0x1, NULL, NULL },
    { "getEnvelope", NULL, "Lcom.vividsolutions.jts.geom.Envelope;", 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsUtilGeometricShapeFactory:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "base_", NULL, 0x1, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "centre_", NULL, 0x1, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "width_", NULL, 0x1, "D", NULL, NULL,  },
    { "height_", NULL, 0x1, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions = { 2, "Dimensions", "com.vividsolutions.jts.util", "GeometricShapeFactory", 0x4, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions;
}

@end

void ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions_initWithComVividsolutionsJtsUtilGeometricShapeFactory_(ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *self, ComVividsolutionsJtsUtilGeometricShapeFactory *outer$) {
  NSObject_init(self);
}

ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *new_ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions_initWithComVividsolutionsJtsUtilGeometricShapeFactory_(ComVividsolutionsJtsUtilGeometricShapeFactory *outer$) {
  ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions *self = [ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions alloc];
  ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions_initWithComVividsolutionsJtsUtilGeometricShapeFactory_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsUtilGeometricShapeFactory_Dimensions)
