//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/TooltipModel.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "geogebra/common/gui/dialog/options/model/MultipleOptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/TooltipModel.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/Localization.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"

@implementation GeogebraCommonGuiDialogOptionsModelTooltipModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelIComboListener:(id<GeogebraCommonGuiDialogOptionsModelIComboListener>)listener {
  GeogebraCommonGuiDialogOptionsModelTooltipModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

- (id<JavaUtilList>)getChoichesWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc {
  return JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ [((GeogebraCommonMainLocalization *) nil_chk(loc)) getMenuWithNSString:@"Labeling.automatic"], [loc getMenuWithNSString:@"on"], [loc getMenuWithNSString:@"off"], [loc getPlainWithNSString:@"Caption"], [loc getPlainWithNSString:@"NextCell"] } count:5 type:NSString_class_()]);
}

- (jboolean)isValidAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isDrawable];
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) setTooltipModeWithInt:value];
}

- (jint)getValueAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) getTooltipMode];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelIComboListener:", "TooltipModel", NULL, 0x1, NULL, NULL },
    { "getChoichesWithGeogebraCommonMainLocalization:", "getChoiches", "Ljava.util.List;", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelTooltipModel = { 2, "TooltipModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelTooltipModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelTooltipModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(GeogebraCommonGuiDialogOptionsModelTooltipModel *self, id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelMultipleOptionsModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
}

GeogebraCommonGuiDialogOptionsModelTooltipModel *new_GeogebraCommonGuiDialogOptionsModelTooltipModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelTooltipModel *self = [GeogebraCommonGuiDialogOptionsModelTooltipModel alloc];
  GeogebraCommonGuiDialogOptionsModelTooltipModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelTooltipModel)
