//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/DecoSegmentModel.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/DecoSegmentModel.h"
#include "geogebra/common/gui/dialog/options/model/IComboListener.h"
#include "geogebra/common/gui/dialog/options/model/NumberOptionsModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/geos/GeoSegment.h"

@interface GeogebraCommonGuiDialogOptionsModelDecoSegmentModel () {
 @public
  id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener_;
}

- (GeogebraCommonKernelGeosGeoSegment *)getGeoSegmentAtWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelDecoSegmentModel, listener_, id<GeogebraCommonGuiDialogOptionsModelIComboListener>)

__attribute__((unused)) static GeogebraCommonKernelGeosGeoSegment *GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getGeoSegmentAtWithInt_(GeogebraCommonGuiDialogOptionsModelDecoSegmentModel *self, jint index);

@implementation GeogebraCommonGuiDialogOptionsModelDecoSegmentModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelIComboListener:(id<GeogebraCommonGuiDialogOptionsModelIComboListener>)listener {
  GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

- (GeogebraCommonKernelGeosGeoSegment *)getGeoSegmentAtWithInt:(jint)index {
  return GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getGeoSegmentAtWithInt_(self, index);
}

- (void)updateProperties {
  GeogebraCommonKernelGeosGeoSegment *geo0 = GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getGeoSegmentAtWithInt_(self, 0);
  [((id<GeogebraCommonGuiDialogOptionsModelIComboListener>) nil_chk(listener_)) setSelectedIndexWithInt:[((GeogebraCommonKernelGeosGeoSegment *) nil_chk(geo0)) getDecorationType]];
}

- (jboolean)isValidAtWithInt:(jint)index {
  return ([[self getObjectAtWithInt:index] isKindOfClass:[GeogebraCommonKernelGeosGeoSegment class]]);
}

- (void)applyWithInt:(jint)index
             withInt:(jint)value {
  GeogebraCommonKernelGeosGeoSegment *geo = GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getGeoSegmentAtWithInt_(self, index);
  [((GeogebraCommonKernelGeosGeoSegment *) nil_chk(geo)) setDecorationTypeWithInt:value];
  [geo updateRepaint];
}

- (jint)getValueAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoSegment *) nil_chk(GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getGeoSegmentAtWithInt_(self, index))) getDecorationType];
}

+ (jint)getDecoTypeLength {
  return GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getDecoTypeLength();
}

- (void)dealloc {
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelIComboListener:", "DecoSegmentModel", NULL, 0x1, NULL, NULL },
    { "getGeoSegmentAtWithInt:", "getGeoSegmentAt", "Lgeogebra.common.kernel.geos.GeoSegment;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withInt:", "apply", "V", 0x4, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "I", 0x4, NULL, NULL },
    { "getDecoTypeLength", NULL, "I", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "listener_", NULL, 0x2, "Lgeogebra.common.gui.dialog.options.model.IComboListener;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelDecoSegmentModel = { 2, "DecoSegmentModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelDecoSegmentModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(GeogebraCommonGuiDialogOptionsModelDecoSegmentModel *self, id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelNumberOptionsModel_init(self);
  GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_set_listener_(self, listener);
}

GeogebraCommonGuiDialogOptionsModelDecoSegmentModel *new_GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(id<GeogebraCommonGuiDialogOptionsModelIComboListener> listener) {
  GeogebraCommonGuiDialogOptionsModelDecoSegmentModel *self = [GeogebraCommonGuiDialogOptionsModelDecoSegmentModel alloc];
  GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_initWithGeogebraCommonGuiDialogOptionsModelIComboListener_(self, listener);
  return self;
}

GeogebraCommonKernelGeosGeoSegment *GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getGeoSegmentAtWithInt_(GeogebraCommonGuiDialogOptionsModelDecoSegmentModel *self, jint index) {
  return (GeogebraCommonKernelGeosGeoSegment *) check_class_cast([self getObjectAtWithInt:index], [GeogebraCommonKernelGeosGeoSegment class]);
}

jint GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_getDecoTypeLength() {
  GeogebraCommonGuiDialogOptionsModelDecoSegmentModel_initialize();
  return ((IOSObjectArray *) nil_chk(GeogebraCommonKernelGeosGeoSegment_getDecoTypes()))->size_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelDecoSegmentModel)
