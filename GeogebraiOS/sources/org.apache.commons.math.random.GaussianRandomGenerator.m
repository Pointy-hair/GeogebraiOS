//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/random/GaussianRandomGenerator.java
//


#include "J2ObjC_source.h"
#include "org/apache/commons/math/random/GaussianRandomGenerator.h"
#include "org/apache/commons/math/random/RandomGenerator.h"

@interface OrgApacheCommonsMathRandomGaussianRandomGenerator () {
 @public
  id<OrgApacheCommonsMathRandomRandomGenerator> generator_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathRandomGaussianRandomGenerator, generator_, id<OrgApacheCommonsMathRandomRandomGenerator>)

@implementation OrgApacheCommonsMathRandomGaussianRandomGenerator

- (instancetype)initWithOrgApacheCommonsMathRandomRandomGenerator:(id<OrgApacheCommonsMathRandomRandomGenerator>)generator {
  OrgApacheCommonsMathRandomGaussianRandomGenerator_initWithOrgApacheCommonsMathRandomRandomGenerator_(self, generator);
  return self;
}

- (jdouble)nextNormalizedDouble {
  return [((id<OrgApacheCommonsMathRandomRandomGenerator>) nil_chk(generator_)) nextGaussian];
}

- (void)dealloc {
  RELEASE_(generator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathRandomRandomGenerator:", "GaussianRandomGenerator", NULL, 0x1, NULL, NULL },
    { "nextNormalizedDouble", NULL, "D", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "generator_", NULL, 0x12, "Lorg.apache.commons.math.random.RandomGenerator;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathRandomGaussianRandomGenerator = { 2, "GaussianRandomGenerator", "org.apache.commons.math.random", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathRandomGaussianRandomGenerator;
}

@end

void OrgApacheCommonsMathRandomGaussianRandomGenerator_initWithOrgApacheCommonsMathRandomRandomGenerator_(OrgApacheCommonsMathRandomGaussianRandomGenerator *self, id<OrgApacheCommonsMathRandomRandomGenerator> generator) {
  NSObject_init(self);
  OrgApacheCommonsMathRandomGaussianRandomGenerator_set_generator_(self, generator);
}

OrgApacheCommonsMathRandomGaussianRandomGenerator *new_OrgApacheCommonsMathRandomGaussianRandomGenerator_initWithOrgApacheCommonsMathRandomRandomGenerator_(id<OrgApacheCommonsMathRandomRandomGenerator> generator) {
  OrgApacheCommonsMathRandomGaussianRandomGenerator *self = [OrgApacheCommonsMathRandomGaussianRandomGenerator alloc];
  OrgApacheCommonsMathRandomGaussianRandomGenerator_initWithOrgApacheCommonsMathRandomRandomGenerator_(self, generator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathRandomGaussianRandomGenerator)
