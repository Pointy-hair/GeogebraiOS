//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoConicFociLengthND.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoConicFociLengthND.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonKernelAlgosAlgoConicFociLengthND

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)a
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  GeogebraCommonKernelAlgosAlgoConicFociLengthND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, label, A, B, a, orientation);
  return self;
}

- (void)initCoords {
}

- (void)setOrientationWithGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (GeogebraCommonKernelKernelNDGeoConicND *)newGeoConicWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setInput {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setInputOutput {
  [self setInput];
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:conic_];
  [self setDependencies];
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getConic {
  return conic_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getFocus1 {
  return A_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getFocus2 {
  return B_;
}

- (id<GeogebraCommonKernelArithmeticNumberValue>)getLength {
  return a_;
}

- (void)compute {
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic_)) setEllipseHyperbolaWithGeogebraCommonKernelGeosGeoPoint:[self getA2d] withGeogebraCommonKernelGeosGeoPoint:[self getB2d] withDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(a_)) getDouble]];
}

- (GeogebraCommonKernelGeosGeoPoint *)getA2d {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (GeogebraCommonKernelGeosGeoPoint *)getB2d {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(a_);
  RELEASE_(ageo_);
  RELEASE_(conic_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoConicFociLengthND", NULL, 0x1, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "setOrientationWithGeogebraCommonKernelKernelNDGeoDirectionND:", "setOrientation", "V", 0x404, NULL, NULL },
    { "newGeoConicWithGeogebraCommonKernelConstruction:", "newGeoConic", "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x404, NULL, NULL },
    { "setInput", NULL, "V", 0x404, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getConic", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x1, NULL, NULL },
    { "getFocus1", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getFocus2", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getLength", NULL, "Lgeogebra.common.kernel.arithmetic.NumberValue;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getA2d", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x404, NULL, NULL },
    { "getB2d", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "B_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "a_", NULL, 0x4, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "ageo_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "conic_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoConicFociLengthND = { 2, "AlgoConicFociLengthND", "geogebra.common.kernel.algos", NULL, 0x401, 13, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoConicFociLengthND;
}

@end

void GeogebraCommonKernelAlgosAlgoConicFociLengthND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelAlgosAlgoConicFociLengthND *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelArithmeticNumberValue> a, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoConicFociLengthND_set_A_(self, A);
  GeogebraCommonKernelAlgosAlgoConicFociLengthND_set_B_(self, B);
  GeogebraCommonKernelAlgosAlgoConicFociLengthND_set_a_(self, a);
  GeogebraCommonKernelAlgosAlgoConicFociLengthND_set_ageo_(self, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(a)) toGeoElement]);
  [self setOrientationWithGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
  GeogebraCommonKernelAlgosAlgoConicFociLengthND_set_conic_(self, [self newGeoConicWithGeogebraCommonKernelConstruction:cons]);
  [self setInputOutput];
  [self initCoords];
  [self compute];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conic_)) setLabelWithNSString:label];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoConicFociLengthND)
