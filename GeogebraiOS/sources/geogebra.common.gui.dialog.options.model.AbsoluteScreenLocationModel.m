//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/AbsoluteScreenLocationModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianStyleBarStatic.h"
#include "geogebra/common/euclidian/EuclidianViewInterfaceCommon.h"
#include "geogebra/common/gui/dialog/options/model/AbsoluteScreenLocationModel.h"
#include "geogebra/common/gui/dialog/options/model/BooleanOptionModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/geos/AbsoluteScreenLocateable.h"
#include "geogebra/common/kernel/geos/Furniture.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/App.h"
#include "java/util/ArrayList.h"

@interface GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel () {
 @public
  GeogebraCommonMainApp *app_;
}

- (id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>)getAbsoluteScreenLocateableWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel, app_, GeogebraCommonMainApp *)

__attribute__((unused)) static id<GeogebraCommonKernelGeosAbsoluteScreenLocateable> GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_getAbsoluteScreenLocateableWithInt_(GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel *self, jint index);

@implementation GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener>)listener {
  GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, app, listener);
  return self;
}

- (id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>)getAbsoluteScreenLocateableWithInt:(jint)index {
  return GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_getAbsoluteScreenLocateableWithInt_(self, index);
}

- (jboolean)getValueAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isPinned];
}

- (void)applyWithInt:(jint)index
         withBoolean:(jboolean)value {
  if ([GeogebraCommonKernelGeosAbsoluteScreenLocateable_class_() isInstance:[self getObjectAtWithInt:index]]) {
    id<GeogebraCommonKernelGeosAbsoluteScreenLocateable> geo = GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_getAbsoluteScreenLocateableWithInt_(self, index);
    id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon> ev = [((GeogebraCommonMainApp *) nil_chk(app_)) getActiveEuclidianView];
    if (value) {
      jint x = [((id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) toScreenCoordXWithDouble:[((id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>) nil_chk(geo)) getRealWorldLocX]];
      jint y = [ev toScreenCoordYWithDouble:[geo getRealWorldLocY]];
      if (![geo isAbsoluteScreenLocActive]) [geo setAbsoluteScreenLocWithInt:x withInt:y];
    }
    else {
      jdouble x = [((id<GeogebraCommonEuclidianEuclidianViewInterfaceCommon>) nil_chk(ev)) toRealWorldCoordXWithDouble:[((id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>) nil_chk(geo)) getAbsoluteScreenLocX]];
      jdouble y = [ev toRealWorldCoordYWithDouble:[geo getAbsoluteScreenLocY]];
      if ([geo isAbsoluteScreenLocActive]) [geo setRealWorldLocWithDouble:x withDouble:y];
    }
    [((id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>) nil_chk(geo)) setAbsoluteScreenLocActiveWithBoolean:value];
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk([geo toGeoElement])) updateRepaint];
  }
  else if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) isPinnable]) {
    GeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
    JavaUtilArrayList *al = [new_JavaUtilArrayList_init() autorelease];
    [al addWithId:[self getGeoAtWithInt:index]];
    geo = GeogebraCommonEuclidianEuclidianStyleBarStatic_applyFixPositionWithJavaUtilArrayList_withBoolean_withGeogebraCommonEuclidianEuclidianViewInterfaceCommon_(al, value, [((GeogebraCommonMainApp *) nil_chk(app_)) getActiveEuclidianView]);
  }
}

- (jboolean)isValidAtWithInt:(jint)index {
  GeogebraCommonKernelGeosGeoElement *geo = [self getGeoAtWithInt:index];
  if ([GeogebraCommonKernelGeosAbsoluteScreenLocateable_class_() isInstance:geo]) {
    id<GeogebraCommonKernelGeosAbsoluteScreenLocateable> absLoc = (id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelGeosAbsoluteScreenLocateable));
    if (![((id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>) nil_chk(absLoc)) isAbsoluteScreenLocateable] || [((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoBoolean] || [GeogebraCommonKernelGeosFurniture_class_() isInstance:geo]) return NO;
  }
  else if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isPinnable]) {
    return NO;
  }
  return YES;
}

- (void)dealloc {
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:", "AbsoluteScreenLocationModel", NULL, 0x1, NULL, NULL },
    { "getAbsoluteScreenLocateableWithInt:", "getAbsoluteScreenLocateable", "Lgeogebra.common.kernel.geos.AbsoluteScreenLocateable;", 0x2, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withBoolean:", "apply", "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel = { 2, "AbsoluteScreenLocationModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel *self, GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_set_app_(self, app);
}

GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel *new_GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(GeogebraCommonMainApp *app, id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel *self = [GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel alloc];
  GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_initWithGeogebraCommonMainApp_withGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, app, listener);
  return self;
}

id<GeogebraCommonKernelGeosAbsoluteScreenLocateable> GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel_getAbsoluteScreenLocateableWithInt_(GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel *self, jint index) {
  return (id<GeogebraCommonKernelGeosAbsoluteScreenLocateable>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(GeogebraCommonKernelGeosAbsoluteScreenLocateable));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelAbsoluteScreenLocationModel)
