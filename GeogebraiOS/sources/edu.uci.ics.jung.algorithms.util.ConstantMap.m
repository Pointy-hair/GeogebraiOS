//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/algorithms/util/ConstantMap.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/util/ConstantMap.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface EduUciIcsJungAlgorithmsUtilConstantMap () {
 @public
  id<JavaUtilMap> delegate_;
}

@end

J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsUtilConstantMap, delegate_, id<JavaUtilMap>)

@implementation EduUciIcsJungAlgorithmsUtilConstantMap

- (instancetype)initWithId:(id)value {
  EduUciIcsJungAlgorithmsUtilConstantMap_initWithId_(self, value);
  return self;
}

- (id)getWithId:(id)key {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) getWithId:nil];
}

- (void)clear {
  [((id<JavaUtilMap>) nil_chk(delegate_)) clear];
}

- (jboolean)containsKeyWithId:(id)key {
  return YES;
}

- (jboolean)containsValueWithId:(id)value {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) containsValueWithId:value];
}

- (id<JavaUtilSet>)entrySet {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) entrySet];
}

- (jboolean)isEqual:(id)o {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) isEqual:o];
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilMap>) nil_chk(delegate_)) hash]);
}

- (jboolean)isEmpty {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) isEmpty];
}

- (id<JavaUtilSet>)keySet {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) keySet];
}

- (id)putWithId:(id)key
         withId:(id)value {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) putWithId:key withId:value];
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)t {
  [((id<JavaUtilMap>) nil_chk(delegate_)) putAllWithJavaUtilMap:t];
}

- (id)removeWithId:(id)key {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) removeWithId:key];
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) size];
}

- (id<JavaUtilCollection>)values {
  return [((id<JavaUtilMap>) nil_chk(delegate_)) values];
}

- (void)dealloc {
  RELEASE_(delegate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:", "ConstantMap", NULL, 0x1, NULL, "(TV;)V" },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(TK;TV;)TV;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "values", NULL, "Ljava.util.Collection;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<TK;TV;>;",  },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsUtilConstantMap = { 2, "ConstantMap", "edu.uci.ics.jung.algorithms.util", NULL, 0x1, 15, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map<TK;TV;>;" };
  return &_EduUciIcsJungAlgorithmsUtilConstantMap;
}

@end

void EduUciIcsJungAlgorithmsUtilConstantMap_initWithId_(EduUciIcsJungAlgorithmsUtilConstantMap *self, id value) {
  NSObject_init(self);
  EduUciIcsJungAlgorithmsUtilConstantMap_set_delegate_(self, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(JavaUtilCollections_singletonMapWithId_withId_(nil, value)));
}

EduUciIcsJungAlgorithmsUtilConstantMap *new_EduUciIcsJungAlgorithmsUtilConstantMap_initWithId_(id value) {
  EduUciIcsJungAlgorithmsUtilConstantMap *self = [EduUciIcsJungAlgorithmsUtilConstantMap alloc];
  EduUciIcsJungAlgorithmsUtilConstantMap_initWithId_(self, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsUtilConstantMap)
