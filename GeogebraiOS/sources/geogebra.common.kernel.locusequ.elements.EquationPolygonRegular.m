//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationPolygonRegular.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericPolygon.h"
#include "geogebra/common/kernel/locusequ/elements/EquationPolygonRegular.h"

@implementation GeogebraCommonKernelLocusequElementsEquationPolygonRegular

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)element
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationPolygonRegular_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationPolygonRegular", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationPolygonRegular = { 2, "EquationPolygonRegular", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationPolygonRegular;
}

@end

void GeogebraCommonKernelLocusequElementsEquationPolygonRegular_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationPolygonRegular *self, GeogebraCommonKernelGeosGeoElement *element, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericPolygon_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  GeogebraCommonKernelGeosGeoPolygon *polygon = (GeogebraCommonKernelGeosGeoPolygon *) check_class_cast(element, [GeogebraCommonKernelGeosGeoPolygon class]);
  [self setSegmentsWithGeogebraCommonKernelKernelNDGeoSegmentNDArray:[((GeogebraCommonKernelGeosGeoPolygon *) nil_chk(polygon)) getSegments]];
}

GeogebraCommonKernelLocusequElementsEquationPolygonRegular *new_GeogebraCommonKernelLocusequElementsEquationPolygonRegular_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *element, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationPolygonRegular *self = [GeogebraCommonKernelLocusequElementsEquationPolygonRegular alloc];
  GeogebraCommonKernelLocusequElementsEquationPolygonRegular_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationPolygonRegular)
