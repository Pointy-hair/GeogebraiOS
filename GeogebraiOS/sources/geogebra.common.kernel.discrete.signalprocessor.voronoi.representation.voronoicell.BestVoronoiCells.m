//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/voronoicell/BestVoronoiCells.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/voronoicell/BestVoronoiCells.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/voronoicell/VVoronoiCell.h"
#include "java/util/Collection.h"

@interface GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells () {
 @public
  jint numberstored_;
  IOSDoubleArray *bestareas_;
  IOSObjectArray *bestcells_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells, bestareas_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells, bestcells_, IOSObjectArray *)

@implementation GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells

- (instancetype)initWithInt:(jint)number {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_(self, number);
  return self;
}

- (instancetype)initWithInt:(jint)number
     withJavaUtilCollection:(id<JavaUtilCollection>)voronoicells {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_withJavaUtilCollection_(self, number, voronoicells);
  return self;
}

- (jint)getBestStored {
  return numberstored_;
}

- (jdouble)getBestAreaWithInt:(jint)index {
  return IOSDoubleArray_Get(nil_chk(bestareas_), index);
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell *)getBestCellWithInt:(jint)index {
  return IOSObjectArray_Get(nil_chk(bestcells_), index);
}

- (jdouble)getTotalAreaOfBest {
  jdouble sum = 0;
  for (jint x = 0; x < numberstored_; x++) sum += IOSDoubleArray_Get(nil_chk(bestareas_), x);
  return sum;
}

- (jdouble)getAverageArea {
  jdouble sum = 0;
  if (numberstored_ == 0) return -1.0;
  for (jint x = 0; x < numberstored_; x++) sum += IOSDoubleArray_Get(nil_chk(bestareas_), x);
  return sum / (numberstored_);
}

- (jint)getAverageX {
  jint tmp = 0;
  if (numberstored_ == 0) return -1;
  for (jint x = 0; x < numberstored_; x++) tmp += ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell *) nil_chk(IOSObjectArray_Get(nil_chk(bestcells_), x)))->x_;
  return tmp / numberstored_;
}

- (jint)getAverageY {
  jint tmp = 0;
  if (numberstored_ == 0) return -1;
  for (jint x = 0; x < numberstored_; x++) tmp += ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell *) nil_chk(IOSObjectArray_Get(nil_chk(bestcells_), x)))->y_;
  return tmp / numberstored_;
}

- (void)findBestWithJavaUtilCollection:(id<JavaUtilCollection>)voronoicells {
  numberstored_ = 0;
  jdouble area;
  jint index, tmp;
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell *cell;
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint * __strong point in nil_chk(voronoicells)) {
    cell = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell *) check_class_cast(point, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell class]);
    area = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell *) nil_chk(cell)) getAreaOfCell];
    if (area < 0) continue;
    if (numberstored_ == 0) {
      numberstored_ = 1;
      *IOSDoubleArray_GetRef(nil_chk(bestareas_), 0) = area;
      IOSObjectArray_Set(nil_chk(bestcells_), 0, cell);
    }
    else {
      index = numberstored_;
      while (IOSDoubleArray_Get(nil_chk(bestareas_), index - 1) > area) {
        if (index > 1) {
          index--;
          continue;
        }
        index = 0;
        break;
      }
      if (index < bestareas_->size_) {
        if (numberstored_ < bestareas_->size_) {
          tmp = numberstored_;
          numberstored_++;
        }
        else {
          tmp = bestareas_->size_ - 1;
        }
        for (; tmp > index; tmp--) {
          *IOSDoubleArray_GetRef(bestareas_, tmp) = IOSDoubleArray_Get(bestareas_, tmp - 1);
          IOSObjectArray_Set(nil_chk(bestcells_), tmp, IOSObjectArray_Get(bestcells_, tmp - 1));
        }
        *IOSDoubleArray_GetRef(bestareas_, index) = area;
        IOSObjectArray_Set(nil_chk(bestcells_), index, cell);
      }
    }
  }
  for (tmp = numberstored_; tmp < ((IOSDoubleArray *) nil_chk(bestareas_))->size_; tmp++) {
    *IOSDoubleArray_GetRef(bestareas_, tmp) = 0.0;
    IOSObjectArray_Set(nil_chk(bestcells_), tmp, nil);
  }
}

- (void)dealloc {
  RELEASE_(bestareas_);
  RELEASE_(bestcells_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "BestVoronoiCells", NULL, 0x1, NULL, NULL },
    { "initWithInt:withJavaUtilCollection:", "BestVoronoiCells", NULL, 0x1, NULL, NULL },
    { "getBestStored", NULL, "I", 0x1, NULL, NULL },
    { "getBestAreaWithInt:", "getBestArea", "D", 0x1, NULL, NULL },
    { "getBestCellWithInt:", "getBestCell", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.voronoicell.VVoronoiCell;", 0x1, NULL, NULL },
    { "getTotalAreaOfBest", NULL, "D", 0x1, NULL, NULL },
    { "getAverageArea", NULL, "D", 0x1, NULL, NULL },
    { "getAverageX", NULL, "I", 0x1, NULL, NULL },
    { "getAverageY", NULL, "I", 0x1, NULL, NULL },
    { "findBestWithJavaUtilCollection:", "findBest", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "numberstored_", NULL, 0x2, "I", NULL, NULL,  },
    { "bestareas_", NULL, 0x2, "[D", NULL, NULL,  },
    { "bestcells_", NULL, 0x2, "[Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.voronoicell.VVoronoiCell;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells = { 2, "BestVoronoiCells", "geogebra.common.kernel.discrete.signalprocessor.voronoi.representation.voronoicell", NULL, 0x1, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells;
}

@end

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells *self, jint number) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_setAndConsume_bestareas_(self, [IOSDoubleArray newArrayWithLength:number]);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_setAndConsume_bestcells_(self, [IOSObjectArray newArrayWithLength:number type:GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellVVoronoiCell_class_()]);
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_(jint number) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_(self, number);
  return self;
}

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_withJavaUtilCollection_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells *self, jint number, id<JavaUtilCollection> voronoicells) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_(self, number);
  [self findBestWithJavaUtilCollection:voronoicells];
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_withJavaUtilCollection_(jint number, id<JavaUtilCollection> voronoicells) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells_initWithInt_withJavaUtilCollection_(self, number, voronoicells);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationVoronoicellBestVoronoiCells)
