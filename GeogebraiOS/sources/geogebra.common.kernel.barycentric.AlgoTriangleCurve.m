//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/barycentric/AlgoTriangleCurve.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/Equation.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/Traversing.h"
#include "geogebra/common/kernel/barycentric/AlgoTriangleCurve.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/implicit/AlgoDependentImplicitPoly.h"
#include "geogebra/common/kernel/implicit/GeoImplicitPoly.h"
#include "geogebra/common/plugin/Operation.h"

@interface GeogebraCommonKernelBarycentricAlgoTriangleCurve () {
 @public
  GeogebraCommonKernelGeosGeoPoint *A_, *B_, *C_;
  GeogebraCommonKernelImplicitGeoImplicitPoly *n_;
  GeogebraCommonKernelGeosGeoElement *poly_;
  GeogebraCommonKernelArithmeticEquation *eq_;
  IOSObjectArray *xcoef_, *ycoef_, *constant_;
  GeogebraCommonKernelImplicitAlgoDependentImplicitPoly *dd_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, A_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, B_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, C_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, n_, GeogebraCommonKernelImplicitGeoImplicitPoly *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, poly_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, eq_, GeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, xcoef_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, ycoef_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, constant_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTriangleCurve, dd_, GeogebraCommonKernelImplicitAlgoDependentImplicitPoly *)

__attribute__((unused)) static void GeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(GeogebraCommonKernelBarycentricAlgoTriangleCurve *self);

@implementation GeogebraCommonKernelBarycentricAlgoTriangleCurve

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)C
         withGeogebraCommonKernelImplicitGeoImplicitPoly:(GeogebraCommonKernelImplicitGeoImplicitPoly *)e
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)a
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)b
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)c {
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelImplicitGeoImplicitPoly_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, A, B, C, e, a, b, c);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_TriangleCurve();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, A_);
  IOSObjectArray_Set(input_, 1, B_);
  IOSObjectArray_Set(input_, 2, C_);
  IOSObjectArray_Set(input_, 3, [((GeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(n_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:poly_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoElement *)getResult {
  return poly_;
}

- (void)compute {
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(self);
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(C_);
  RELEASE_(n_);
  RELEASE_(poly_);
  RELEASE_(eq_);
  RELEASE_(xcoef_);
  RELEASE_(ycoef_);
  RELEASE_(constant_);
  RELEASE_(dd_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelImplicitGeoImplicitPoly:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoTriangleCurve", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "C_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "n_", NULL, 0x2, "Lgeogebra.common.kernel.implicit.GeoImplicitPoly;", NULL, NULL,  },
    { "poly_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "eq_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "xcoef_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "ycoef_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "constant_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "dd_", NULL, 0x2, "Lgeogebra.common.kernel.implicit.AlgoDependentImplicitPoly;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelBarycentricAlgoTriangleCurve = { 2, "AlgoTriangleCurve", "geogebra.common.kernel.barycentric", NULL, 0x1, 5, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelBarycentricAlgoTriangleCurve;
}

@end

void GeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelImplicitGeoImplicitPoly_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelBarycentricAlgoTriangleCurve *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, GeogebraCommonKernelImplicitGeoImplicitPoly *e, GeogebraCommonKernelGeosGeoNumeric *a, GeogebraCommonKernelGeosGeoNumeric *b, GeogebraCommonKernelGeosGeoNumeric *c) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_set_A_(self, A);
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_set_B_(self, B);
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_set_C_(self, C);
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_set_n_(self, e);
  GeogebraCommonKernelImplicitAlgoDependentImplicitPoly *d = (GeogebraCommonKernelImplicitAlgoDependentImplicitPoly *) check_class_cast([((GeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(self->n_)) getParentAlgorithm], [GeogebraCommonKernelImplicitAlgoDependentImplicitPoly class]);
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:d];
  GeogebraCommonKernelArithmeticExpressionNode *lhs = (GeogebraCommonKernelArithmeticExpressionNode *) check_class_cast([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelArithmeticEquation *) nil_chk([((GeogebraCommonKernelImplicitAlgoDependentImplicitPoly *) nil_chk(d)) getEquation])) getLHS])) deepCopyWithGeogebraCommonKernelKernel:self->kernel_], [GeogebraCommonKernelArithmeticExpressionNode class]);
  GeogebraCommonKernelArithmeticExpressionNode *rhs = (GeogebraCommonKernelArithmeticExpressionNode *) check_class_cast([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk([((GeogebraCommonKernelArithmeticEquation *) nil_chk([d getEquation])) getRHS])) deepCopyWithGeogebraCommonKernelKernel:self->kernel_], [GeogebraCommonKernelArithmeticExpressionNode class]);
  IOSObjectArray *abcExp = [IOSObjectArray arrayWithLength:3 type:GeogebraCommonKernelArithmeticExpressionNode_class_()];
  GeogebraCommonKernelArithmeticFunctionVariable *x = [new_GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(self->kernel_, @"x") autorelease];
  GeogebraCommonKernelArithmeticFunctionVariable *y = [new_GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(self->kernel_, @"y") autorelease];
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_setAndConsume_xcoef_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoNumeric_class_()]);
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_setAndConsume_ycoef_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoNumeric_class_()]);
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_setAndConsume_constant_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoNumeric_class_()]);
  for (jint i = 0; i < 3; i++) {
    IOSObjectArray_SetAndConsume(self->xcoef_, i, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
    IOSObjectArray_SetAndConsume(self->ycoef_, i, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
    IOSObjectArray_SetAndConsume(self->constant_, i, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
    IOSObjectArray_SetAndConsume(abcExp, i, new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, IOSObjectArray_Get(self->xcoef_, i), GeogebraCommonPluginOperationEnum_get_MULTIPLY(), x) autorelease], GeogebraCommonPluginOperationEnum_get_PLUS(), [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, IOSObjectArray_Get(self->ycoef_, i), GeogebraCommonPluginOperationEnum_get_MULTIPLY(), y) autorelease]) autorelease], GeogebraCommonPluginOperationEnum_get_PLUS(), IOSObjectArray_Get(self->constant_, i)));
  }
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_setAndConsume_eq_(self, new_GeogebraCommonKernelArithmeticEquation_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(self->kernel_, lhs, rhs));
  [self->eq_ traverseWithGeogebraCommonKernelArithmeticTraversing:GeogebraCommonKernelArithmeticTraversing_Replacer_getReplacerWithGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(a, IOSObjectArray_Get(abcExp, 0))];
  [self->eq_ traverseWithGeogebraCommonKernelArithmeticTraversing:GeogebraCommonKernelArithmeticTraversing_Replacer_getReplacerWithGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(b, IOSObjectArray_Get(abcExp, 1))];
  [self->eq_ traverseWithGeogebraCommonKernelArithmeticTraversing:GeogebraCommonKernelArithmeticTraversing_Replacer_getReplacerWithGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(c, IOSObjectArray_Get(abcExp, 2))];
  [self->eq_ setForceImplicitPoly];
  [self->eq_ initEquation];
  jboolean flag = [cons isSuppressLabelsActive];
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_setAndConsume_dd_(self, new_GeogebraCommonKernelImplicitAlgoDependentImplicitPoly_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticEquation_withBoolean_(cons, label, self->eq_, NO));
  [cons removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->dd_];
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_set_poly_(self, IOSObjectArray_Get(nil_chk([self->dd_ getOutput]), 0));
  [self setInputOutput];
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(self);
  [cons setSuppressLabelCreationWithBoolean:flag];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->poly_)) setLabelWithNSString:label];
}

GeogebraCommonKernelBarycentricAlgoTriangleCurve *new_GeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelImplicitGeoImplicitPoly_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, GeogebraCommonKernelImplicitGeoImplicitPoly *e, GeogebraCommonKernelGeosGeoNumeric *a, GeogebraCommonKernelGeosGeoNumeric *b, GeogebraCommonKernelGeosGeoNumeric *c) {
  GeogebraCommonKernelBarycentricAlgoTriangleCurve *self = [GeogebraCommonKernelBarycentricAlgoTriangleCurve alloc];
  GeogebraCommonKernelBarycentricAlgoTriangleCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelImplicitGeoImplicitPoly_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, A, B, C, e, a, b, c);
  return self;
}

void GeogebraCommonKernelBarycentricAlgoTriangleCurve_compute(GeogebraCommonKernelBarycentricAlgoTriangleCurve *self) {
  jdouble x1 = -((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->A_))->inhomX_;
  jdouble y1 = -self->A_->inhomY_;
  jdouble x2 = -((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->B_))->inhomX_;
  jdouble y2 = -self->B_->inhomY_;
  jdouble x3 = -((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->C_))->inhomX_;
  jdouble y3 = -self->C_->inhomY_;
  jdouble det = (x2 - x3) * (y1 - y3) + (x3 - x1) * (y2 - y3);
  if (GeogebraCommonKernelKernel_isZeroWithDouble_(det)) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->poly_)) setUndefined];
  }
  else {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(nil_chk(self->ycoef_), 0))) setValueWithDouble:(x3 - x2) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(nil_chk(self->xcoef_), 0))) setValueWithDouble:(y2 - y3) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(nil_chk(self->constant_), 0))) setValueWithDouble:((x3 - x2) * y3 + (y2 - y3) * x3) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->ycoef_, 1))) setValueWithDouble:(x1 - x3) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->xcoef_, 1))) setValueWithDouble:(y3 - y1) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->constant_, 1))) setValueWithDouble:((x1 - x3) * y1 + (y3 - y1) * x1) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->ycoef_, 2))) setValueWithDouble:(x2 - x1) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->xcoef_, 2))) setValueWithDouble:(y1 - y2) / det];
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(self->constant_, 2))) setValueWithDouble:((x2 - x1) * y2 + (y1 - y2) * x2) / det];
    [((GeogebraCommonKernelImplicitAlgoDependentImplicitPoly *) nil_chk(self->dd_)) update];
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->poly_)) update];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelBarycentricAlgoTriangleCurve)
