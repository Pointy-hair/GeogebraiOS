//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/ListUtils.java
//

#ifndef _OrgApacheCommonsCollections15ListUtils_H_
#define _OrgApacheCommonsCollections15ListUtils_H_

#include "J2ObjC_header.h"

@class IOSClass;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol OrgApacheCommonsCollections15Factory;
@protocol OrgApacheCommonsCollections15Predicate;
@protocol OrgApacheCommonsCollections15Transformer;

@interface OrgApacheCommonsCollections15ListUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<JavaUtilList>)fixedSizeListWithJavaUtilList:(id<JavaUtilList>)list;

+ (jint)hashCodeForListWithJavaUtilCollection:(id<JavaUtilCollection>)list;

+ (id<JavaUtilList>)intersectionWithJavaUtilList:(id<JavaUtilList>)list1
                                withJavaUtilList:(id<JavaUtilList>)list2;

+ (jboolean)isEqualListWithJavaUtilCollection:(id<JavaUtilCollection>)list1
                       withJavaUtilCollection:(id<JavaUtilCollection>)list2;

+ (id<JavaUtilList>)lazyListWithJavaUtilList:(id<JavaUtilList>)list
    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)factory;

+ (id<JavaUtilList>)predicatedListWithJavaUtilList:(id<JavaUtilList>)list
        withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate;

+ (id<JavaUtilList>)subtractWithJavaUtilList:(id<JavaUtilList>)list1
                            withJavaUtilList:(id<JavaUtilList>)list2;

+ (id<JavaUtilList>)sumWithJavaUtilList:(id<JavaUtilList>)list1
                       withJavaUtilList:(id<JavaUtilList>)list2;

+ (id<JavaUtilList>)synchronizedListWithJavaUtilList:(id<JavaUtilList>)list;

+ (id<JavaUtilList>)transformedListWithJavaUtilList:(id<JavaUtilList>)list
       withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)transformer;

+ (id<JavaUtilList>)typedListWithJavaUtilList:(id<JavaUtilList>)list
                                 withIOSClass:(IOSClass *)type;

+ (id<JavaUtilList>)union__WithJavaUtilList:(id<JavaUtilList>)list1
                           withJavaUtilList:(id<JavaUtilList>)list2;

+ (id<JavaUtilList>)unmodifiableListWithJavaUtilList:(id<JavaUtilList>)list;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsCollections15ListUtils)

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_EMPTY_LIST_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15ListUtils, EMPTY_LIST_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15ListUtils_init(OrgApacheCommonsCollections15ListUtils *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15ListUtils *new_OrgApacheCommonsCollections15ListUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_intersectionWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list1, id<JavaUtilList> list2);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_subtractWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list1, id<JavaUtilList> list2);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_sumWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list1, id<JavaUtilList> list2);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_union__WithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list1, id<JavaUtilList> list2);

FOUNDATION_EXPORT jboolean OrgApacheCommonsCollections15ListUtils_isEqualListWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> list1, id<JavaUtilCollection> list2);

FOUNDATION_EXPORT jint OrgApacheCommonsCollections15ListUtils_hashCodeForListWithJavaUtilCollection_(id<JavaUtilCollection> list);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_synchronizedListWithJavaUtilList_(id<JavaUtilList> list);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_unmodifiableListWithJavaUtilList_(id<JavaUtilList> list);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_predicatedListWithJavaUtilList_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilList> list, id<OrgApacheCommonsCollections15Predicate> predicate);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_typedListWithJavaUtilList_withIOSClass_(id<JavaUtilList> list, IOSClass *type);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_transformedListWithJavaUtilList_withOrgApacheCommonsCollections15Transformer_(id<JavaUtilList> list, id<OrgApacheCommonsCollections15Transformer> transformer);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_lazyListWithJavaUtilList_withOrgApacheCommonsCollections15Factory_(id<JavaUtilList> list, id<OrgApacheCommonsCollections15Factory> factory);

FOUNDATION_EXPORT id<JavaUtilList> OrgApacheCommonsCollections15ListUtils_fixedSizeListWithJavaUtilList_(id<JavaUtilList> list);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15ListUtils)

#endif // _OrgApacheCommonsCollections15ListUtils_H_
