//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/map/IdentityMap.java
//

#ifndef _OrgApacheCommonsCollections15MapIdentityMap_H_
#define _OrgApacheCommonsCollections15MapIdentityMap_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/collections15/map/AbstractHashedMap.h"

@protocol JavaUtilMap;

@interface OrgApacheCommonsCollections15MapIdentityMap : OrgApacheCommonsCollections15MapAbstractHashedMap < JavaIoSerializable, NSCopying >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)clone;

#pragma mark Protected

- (OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)createEntryWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)next
                                                                                                                                    withInt:(jint)hashCode
                                                                                                                                     withId:(id)key
                                                                                                                                     withId:(id)value;

- (jint)hash__WithId:(id)key;

- (jboolean)isEqualKeyWithId:(id)key1
                      withId:(id)key2;

- (jboolean)isEqualValueWithId:(id)value1
                        withId:(id)value2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15MapIdentityMap)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapIdentityMap_init(OrgApacheCommonsCollections15MapIdentityMap *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapIdentityMap_initWithInt_(OrgApacheCommonsCollections15MapIdentityMap *self, jint initialCapacity);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapIdentityMap_initWithInt_withFloat_(OrgApacheCommonsCollections15MapIdentityMap *self, jint initialCapacity, jfloat loadFactor);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_initWithInt_withFloat_(jint initialCapacity, jfloat loadFactor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapIdentityMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15MapIdentityMap *self, id<JavaUtilMap> map);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapIdentityMap *new_OrgApacheCommonsCollections15MapIdentityMap_initWithJavaUtilMap_(id<JavaUtilMap> map) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15MapIdentityMap)

@interface OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry : OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

#pragma mark Protected

- (instancetype)initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry:(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *)next
                                                                            withInt:(jint)hashCode
                                                                             withId:(id)key
                                                                             withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry *self, OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next, jint hashCode, id key, id value);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry *new_OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry_initWithOrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry_withInt_withId_withId_(OrgApacheCommonsCollections15MapAbstractHashedMap_HashEntry *next, jint hashCode, id key, id value) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15MapIdentityMap_IdentityEntry)

#endif // _OrgApacheCommonsCollections15MapIdentityMap_H_
