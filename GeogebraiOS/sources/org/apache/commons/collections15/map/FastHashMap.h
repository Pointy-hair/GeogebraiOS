//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/map/FastHashMap.java
//

#ifndef _OrgApacheCommonsCollections15MapFastHashMap_H_
#define _OrgApacheCommonsCollections15MapFastHashMap_H_

#include "J2ObjC_header.h"
#include "java/util/HashMap.h"

@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheCommonsCollections15MapFastHashMap : JavaUtilHashMap {
 @public
  JavaUtilHashMap *map_;
  jboolean fast_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
                  withFloat:(jfloat)factor;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)clear;

- (OrgApacheCommonsCollections15MapFastHashMap *)clone;

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)containsValueWithId:(id)value;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

- (id)getWithId:(id)key;

- (jboolean)getFast;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilSet>)keySet;

- (id)putWithId:(id)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)inArg;

- (id)removeWithId:(id)key;

- (void)setFastWithBoolean:(jboolean)fast;

- (jint)size;

- (id<JavaUtilCollection>)values;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsCollections15MapFastHashMap)

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15MapFastHashMap, map_, JavaUtilHashMap *)

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapFastHashMap_init(OrgApacheCommonsCollections15MapFastHashMap *self);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapFastHashMap *new_OrgApacheCommonsCollections15MapFastHashMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapFastHashMap_initWithInt_(OrgApacheCommonsCollections15MapFastHashMap *self, jint capacity);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapFastHashMap *new_OrgApacheCommonsCollections15MapFastHashMap_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapFastHashMap_initWithInt_withFloat_(OrgApacheCommonsCollections15MapFastHashMap *self, jint capacity, jfloat factor);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapFastHashMap *new_OrgApacheCommonsCollections15MapFastHashMap_initWithInt_withFloat_(jint capacity, jfloat factor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsCollections15MapFastHashMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15MapFastHashMap *self, id<JavaUtilMap> map);

FOUNDATION_EXPORT OrgApacheCommonsCollections15MapFastHashMap *new_OrgApacheCommonsCollections15MapFastHashMap_initWithJavaUtilMap_(id<JavaUtilMap> map) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsCollections15MapFastHashMap)

#endif // _OrgApacheCommonsCollections15MapFastHashMap_H_
