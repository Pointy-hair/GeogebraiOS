//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java
//

#ifndef _OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_H_
#define _OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/math/distribution/AbstractContinuousDistribution.h"
#include "org/apache/commons/math/distribution/ChiSquaredDistribution.h"

@class JavaLangDouble;
@protocol OrgApacheCommonsMathDistributionGammaDistribution;

#define OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_DEFAULT_INVERSE_ABSOLUTE_ACCURACY 1.0E-9

@interface OrgApacheCommonsMathDistributionChiSquaredDistributionImpl : OrgApacheCommonsMathDistributionAbstractContinuousDistribution < OrgApacheCommonsMathDistributionChiSquaredDistribution, JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithDouble:(jdouble)df;

- (instancetype)initWithDouble:(jdouble)df
                    withDouble:(jdouble)inverseCumAccuracy;

- (instancetype)initWithDouble:(jdouble)df
withOrgApacheCommonsMathDistributionGammaDistribution:(id<OrgApacheCommonsMathDistributionGammaDistribution>)g;

- (jdouble)cumulativeProbabilityWithDouble:(jdouble)x;

- (jdouble)densityWithId:(JavaLangDouble *)x;

- (jdouble)densityWithDouble:(jdouble)x;

- (jdouble)getDegreesOfFreedom;

- (jdouble)getNumericalMean;

- (jdouble)getNumericalVariance;

- (jdouble)getSupportLowerBound;

- (jdouble)getSupportUpperBound;

- (jdouble)inverseCumulativeProbabilityWithDouble:(jdouble)p;

- (void)setDegreesOfFreedomWithDouble:(jdouble)degreesOfFreedom;

- (void)setGammaWithOrgApacheCommonsMathDistributionGammaDistribution:(id<OrgApacheCommonsMathDistributionGammaDistribution>)g;

#pragma mark Protected

- (jdouble)getDomainLowerBoundWithDouble:(jdouble)p;

- (jdouble)getDomainUpperBoundWithDouble:(jdouble)p;

- (jdouble)getInitialDomainWithDouble:(jdouble)p;

- (jdouble)getSolverAbsoluteAccuracy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl, DEFAULT_INVERSE_ABSOLUTE_ACCURACY, jdouble)

FOUNDATION_EXPORT void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble df);

FOUNDATION_EXPORT OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *new_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_(jdouble df) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble df, id<OrgApacheCommonsMathDistributionGammaDistribution> g);

FOUNDATION_EXPORT OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *new_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withOrgApacheCommonsMathDistributionGammaDistribution_(jdouble df, id<OrgApacheCommonsMathDistributionGammaDistribution> g) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withDouble_(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *self, jdouble df, jdouble inverseCumAccuracy);

FOUNDATION_EXPORT OrgApacheCommonsMathDistributionChiSquaredDistributionImpl *new_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_withDouble_(jdouble df, jdouble inverseCumAccuracy) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathDistributionChiSquaredDistributionImpl)

#endif // _OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_H_
