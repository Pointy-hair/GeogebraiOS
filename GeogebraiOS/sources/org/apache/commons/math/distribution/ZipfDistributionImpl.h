//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/distribution/ZipfDistributionImpl.java
//

#ifndef _OrgApacheCommonsMathDistributionZipfDistributionImpl_H_
#define _OrgApacheCommonsMathDistributionZipfDistributionImpl_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/math/distribution/AbstractIntegerDistribution.h"
#include "org/apache/commons/math/distribution/ZipfDistribution.h"

@interface OrgApacheCommonsMathDistributionZipfDistributionImpl : OrgApacheCommonsMathDistributionAbstractIntegerDistribution < OrgApacheCommonsMathDistributionZipfDistribution, JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithInt:(jint)numberOfElements
                 withDouble:(jdouble)exponent;

- (jdouble)cumulativeProbabilityWithInt:(jint)x;

- (jdouble)getExponent;

- (jint)getNumberOfElements;

- (jint)getSupportLowerBound;

- (jint)getSupportUpperBound;

- (jdouble)probabilityWithInt:(jint)x;

- (void)setExponentWithDouble:(jdouble)s;

- (void)setNumberOfElementsWithInt:(jint)n;

#pragma mark Protected

- (jint)getDomainLowerBoundWithDouble:(jdouble)p;

- (jint)getDomainUpperBoundWithDouble:(jdouble)p;

- (jdouble)getNumericalMean;

- (jdouble)getNumericalVariance;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathDistributionZipfDistributionImpl)

FOUNDATION_EXPORT void OrgApacheCommonsMathDistributionZipfDistributionImpl_initWithInt_withDouble_(OrgApacheCommonsMathDistributionZipfDistributionImpl *self, jint numberOfElements, jdouble exponent);

FOUNDATION_EXPORT OrgApacheCommonsMathDistributionZipfDistributionImpl *new_OrgApacheCommonsMathDistributionZipfDistributionImpl_initWithInt_withDouble_(jint numberOfElements, jdouble exponent) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathDistributionZipfDistributionImpl)

#endif // _OrgApacheCommonsMathDistributionZipfDistributionImpl_H_
