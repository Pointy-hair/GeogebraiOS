//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/fraction/AbstractFormat.java
//

#ifndef _OrgApacheCommonsMathFractionAbstractFormat_H_
#define _OrgApacheCommonsMathFractionAbstractFormat_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/text/NumberFormat.h"

@class JavaLangStringBuffer;
@class JavaTextFieldPosition;
@class JavaTextParsePosition;
@class JavaUtilLocale;

@interface OrgApacheCommonsMathFractionAbstractFormat : JavaTextNumberFormat < JavaIoSerializable > {
 @public
  JavaTextNumberFormat *denominatorFormat_;
  JavaTextNumberFormat *numeratorFormat_;
}

#pragma mark Public

- (JavaLangStringBuffer *)formatWithDouble:(jdouble)value
                  withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                 withJavaTextFieldPosition:(JavaTextFieldPosition *)position;

- (JavaLangStringBuffer *)formatWithLong:(jlong)value
                withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
               withJavaTextFieldPosition:(JavaTextFieldPosition *)position;

- (JavaTextNumberFormat *)getDenominatorFormat;

- (JavaTextNumberFormat *)getNumeratorFormat;

- (void)setDenominatorFormatWithJavaTextNumberFormat:(JavaTextNumberFormat *)format;

- (void)setNumeratorFormatWithJavaTextNumberFormat:(JavaTextNumberFormat *)format;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithJavaTextNumberFormat:(JavaTextNumberFormat *)format;

- (instancetype)initWithJavaTextNumberFormat:(JavaTextNumberFormat *)numeratorFormat
                    withJavaTextNumberFormat:(JavaTextNumberFormat *)denominatorFormat;

+ (JavaTextNumberFormat *)getDefaultNumberFormat;

+ (JavaTextNumberFormat *)getDefaultNumberFormatWithJavaUtilLocale:(JavaUtilLocale *)locale;

+ (void)parseAndIgnoreWhitespaceWithNSString:(NSString *)source
                   withJavaTextParsePosition:(JavaTextParsePosition *)pos;

+ (jchar)parseNextCharacterWithNSString:(NSString *)source
              withJavaTextParsePosition:(JavaTextParsePosition *)pos;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathFractionAbstractFormat)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathFractionAbstractFormat, denominatorFormat_, JavaTextNumberFormat *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsMathFractionAbstractFormat, numeratorFormat_, JavaTextNumberFormat *)

FOUNDATION_EXPORT void OrgApacheCommonsMathFractionAbstractFormat_init(OrgApacheCommonsMathFractionAbstractFormat *self);

FOUNDATION_EXPORT void OrgApacheCommonsMathFractionAbstractFormat_initWithJavaTextNumberFormat_(OrgApacheCommonsMathFractionAbstractFormat *self, JavaTextNumberFormat *format);

FOUNDATION_EXPORT void OrgApacheCommonsMathFractionAbstractFormat_initWithJavaTextNumberFormat_withJavaTextNumberFormat_(OrgApacheCommonsMathFractionAbstractFormat *self, JavaTextNumberFormat *numeratorFormat, JavaTextNumberFormat *denominatorFormat);

FOUNDATION_EXPORT JavaTextNumberFormat *OrgApacheCommonsMathFractionAbstractFormat_getDefaultNumberFormat();

FOUNDATION_EXPORT JavaTextNumberFormat *OrgApacheCommonsMathFractionAbstractFormat_getDefaultNumberFormatWithJavaUtilLocale_(JavaUtilLocale *locale);

FOUNDATION_EXPORT void OrgApacheCommonsMathFractionAbstractFormat_parseAndIgnoreWhitespaceWithNSString_withJavaTextParsePosition_(NSString *source, JavaTextParsePosition *pos);

FOUNDATION_EXPORT jchar OrgApacheCommonsMathFractionAbstractFormat_parseNextCharacterWithNSString_withJavaTextParsePosition_(NSString *source, JavaTextParsePosition *pos);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathFractionAbstractFormat)

#endif // _OrgApacheCommonsMathFractionAbstractFormat_H_
