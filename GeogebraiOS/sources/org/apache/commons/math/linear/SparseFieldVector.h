//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/linear/SparseFieldVector.java
//

#ifndef _OrgApacheCommonsMathLinearSparseFieldVector_H_
#define _OrgApacheCommonsMathLinearSparseFieldVector_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "org/apache/commons/math/linear/FieldVector.h"

@class IOSObjectArray;
@protocol OrgApacheCommonsMathField;
@protocol OrgApacheCommonsMathFieldElement;
@protocol OrgApacheCommonsMathLinearFieldMatrix;

@interface OrgApacheCommonsMathLinearSparseFieldVector : NSObject < OrgApacheCommonsMathLinearFieldVector, JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field;

- (instancetype)initWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field
                                          withInt:(jint)dimension;

- (instancetype)initWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field
                                          withInt:(jint)dimension
                                          withInt:(jint)expectedSize;

- (instancetype)initWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field
        withOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)values;

- (instancetype)initWithOrgApacheCommonsMathLinearSparseFieldVector:(OrgApacheCommonsMathLinearSparseFieldVector *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)addWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)addWithOrgApacheCommonsMathLinearSparseFieldVector:(OrgApacheCommonsMathLinearSparseFieldVector *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)addWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)appendWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)appendWithOrgApacheCommonsMathLinearSparseFieldVector:(OrgApacheCommonsMathLinearSparseFieldVector *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)appendWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)appendWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)a;

- (id<OrgApacheCommonsMathLinearFieldVector>)copy__ OBJC_METHOD_FAMILY_NONE;

- (id)dotProductWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (id)dotProductWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)ebeDivideWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)ebeDivideWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)ebeMultiplyWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)ebeMultiplyWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (jboolean)isEqual:(id)obj;

- (IOSObjectArray *)getData;

- (jint)getDimension;

- (id)getEntryWithInt:(jint)index;

- (id<OrgApacheCommonsMathField>)getField;

- (id<OrgApacheCommonsMathLinearFieldVector>)getSubVectorWithInt:(jint)index
                                                         withInt:(jint)n;

- (NSUInteger)hash;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapAddWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapAddToSelfWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapDivideWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapDivideToSelfWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapInv;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapInvToSelf;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapMultiplyWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapMultiplyToSelfWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapSubtractWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldVector>)mapSubtractToSelfWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)d;

- (id<OrgApacheCommonsMathLinearFieldMatrix>)outerProductWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (id<OrgApacheCommonsMathLinearFieldMatrix>)outerProductWithOrgApacheCommonsMathLinearSparseFieldVector:(OrgApacheCommonsMathLinearSparseFieldVector *)v;

- (id<OrgApacheCommonsMathLinearFieldMatrix>)outerProductWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)projectionWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)projectionWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (void)setWithOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)value;

- (void)setEntryWithInt:(jint)index
withOrgApacheCommonsMathFieldElement:(id<OrgApacheCommonsMathFieldElement>)value;

- (void)setSubVectorWithInt:(jint)index
withOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (void)setSubVectorWithInt:(jint)index
withOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)subtractWithOrgApacheCommonsMathLinearFieldVector:(id<OrgApacheCommonsMathLinearFieldVector>)v;

- (OrgApacheCommonsMathLinearSparseFieldVector *)subtractWithOrgApacheCommonsMathLinearSparseFieldVector:(OrgApacheCommonsMathLinearSparseFieldVector *)v;

- (id<OrgApacheCommonsMathLinearFieldVector>)subtractWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)v;

- (IOSObjectArray *)toArray;

#pragma mark Protected

- (instancetype)initWithOrgApacheCommonsMathLinearSparseFieldVector:(OrgApacheCommonsMathLinearSparseFieldVector *)v
                                                            withInt:(jint)resize;

- (void)checkVectorDimensionsWithInt:(jint)n;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearSparseFieldVector)

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_(OrgApacheCommonsMathLinearSparseFieldVector *self, id<OrgApacheCommonsMathField> field);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearSparseFieldVector *new_OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_(id<OrgApacheCommonsMathField> field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_withInt_(OrgApacheCommonsMathLinearSparseFieldVector *self, id<OrgApacheCommonsMathField> field, jint dimension);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearSparseFieldVector *new_OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_withInt_(id<OrgApacheCommonsMathField> field, jint dimension) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathLinearSparseFieldVector_withInt_(OrgApacheCommonsMathLinearSparseFieldVector *self, OrgApacheCommonsMathLinearSparseFieldVector *v, jint resize);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearSparseFieldVector *new_OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathLinearSparseFieldVector_withInt_(OrgApacheCommonsMathLinearSparseFieldVector *v, jint resize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_withInt_withInt_(OrgApacheCommonsMathLinearSparseFieldVector *self, id<OrgApacheCommonsMathField> field, jint dimension, jint expectedSize);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearSparseFieldVector *new_OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_withInt_withInt_(id<OrgApacheCommonsMathField> field, jint dimension, jint expectedSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_withOrgApacheCommonsMathFieldElementArray_(OrgApacheCommonsMathLinearSparseFieldVector *self, id<OrgApacheCommonsMathField> field, IOSObjectArray *values);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearSparseFieldVector *new_OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathField_withOrgApacheCommonsMathFieldElementArray_(id<OrgApacheCommonsMathField> field, IOSObjectArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathLinearSparseFieldVector_(OrgApacheCommonsMathLinearSparseFieldVector *self, OrgApacheCommonsMathLinearSparseFieldVector *v);

FOUNDATION_EXPORT OrgApacheCommonsMathLinearSparseFieldVector *new_OrgApacheCommonsMathLinearSparseFieldVector_initWithOrgApacheCommonsMathLinearSparseFieldVector_(OrgApacheCommonsMathLinearSparseFieldVector *v) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearSparseFieldVector)

#endif // _OrgApacheCommonsMathLinearSparseFieldVector_H_
