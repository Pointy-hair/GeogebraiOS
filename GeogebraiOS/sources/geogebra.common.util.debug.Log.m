//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/util/debug/Log.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/Polynomial.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "geogebra/common/util/debug/Log.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"

@interface GeogebraCommonUtilDebugLog () {
 @public
  JavaLangStringBuilder *memoryLog_;
  GeogebraCommonUtilDebugLog_Level *logLevel_;
  GeogebraCommonUtilDebugLog_LogDestinationEnum *logDestination_;
  jboolean timeShown_;
  jboolean callerShown_;
}

- (void)logWithGeogebraCommonUtilDebugLog_Level:(GeogebraCommonUtilDebugLog_Level *)level
                                   withNSString:(NSString *)message;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonUtilDebugLog, memoryLog_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(GeogebraCommonUtilDebugLog, logLevel_, GeogebraCommonUtilDebugLog_Level *)
J2OBJC_FIELD_SETTER(GeogebraCommonUtilDebugLog, logDestination_, GeogebraCommonUtilDebugLog_LogDestinationEnum *)

static id<JavaUtilSet> GeogebraCommonUtilDebugLog_reportedImplementationNeeded_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonUtilDebugLog, reportedImplementationNeeded_, id<JavaUtilSet>)
J2OBJC_STATIC_FIELD_SETTER(GeogebraCommonUtilDebugLog, reportedImplementationNeeded_, id<JavaUtilSet>)

__attribute__((unused)) static void GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog *self, GeogebraCommonUtilDebugLog_Level *level, NSString *message);

__attribute__((unused)) static void GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(GeogebraCommonUtilDebugLog_LogDestinationEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonUtilDebugLog_LogDestinationEnum *new_GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(GeogebraCommonUtilDebugLog)

GeogebraCommonUtilDebugLog *GeogebraCommonUtilDebugLog_logger_;

@implementation GeogebraCommonUtilDebugLog

- (JavaLangStringBuilder *)getEntireLog {
  return memoryLog_;
}

- (void)setLogLevelWithGeogebraCommonUtilDebugLog_Level:(GeogebraCommonUtilDebugLog_Level *)logLevel {
  GeogebraCommonUtilDebugLog_set_logLevel_(self, logLevel);
}

- (void)setLogLevelWithNSString:(NSString *)logLevel {
  if (logLevel == nil) return;
  if ([@"ALERT" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, ALERT_);
  if ([@"EMERGENCY" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, EMERGENCY_);
  if ([@"CRITICAL" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, CRITICAL_);
  if ([@"ERROR" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, ERROR_);
  if ([@"WARN" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, WARN_);
  if ([@"INFO" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, INFO_);
  if ([@"NOTICE" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, NOTICE_);
  if ([@"DEBUG" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, DEBUG__);
  if ([@"TRACE" isEqual:logLevel]) GeogebraCommonUtilDebugLog_set_logLevel_(self, TRACE_);
}

- (GeogebraCommonUtilDebugLog_Level *)getLogLevel {
  return logLevel_;
}

- (void)setLogDestinationWithGeogebraCommonUtilDebugLog_LogDestinationEnum:(GeogebraCommonUtilDebugLog_LogDestinationEnum *)logDestination {
  GeogebraCommonUtilDebugLog_set_logDestination_(self, logDestination);
}

- (GeogebraCommonUtilDebugLog_LogDestinationEnum *)getLogDestination {
  return logDestination_;
}

- (jboolean)isTimeShown {
  return timeShown_;
}

- (void)setTimeShownWithBoolean:(jboolean)timeShown {
  self->timeShown_ = timeShown;
}

- (jboolean)isCallerShown {
  return callerShown_;
}

- (void)setCallerShownWithBoolean:(jboolean)callerShown {
  self->callerShown_ = callerShown;
}

- (void)logWithGeogebraCommonUtilDebugLog_Level:(GeogebraCommonUtilDebugLog_Level *)level
                                   withNSString:(NSString *)message
                                        withInt:(jint)depth {
  if (message == nil) {
    message = @"*null*";
  }
  if ([((GeogebraCommonUtilDebugLog_Level *) nil_chk(logLevel_)) getPriority] >= [((GeogebraCommonUtilDebugLog_Level *) nil_chk(level)) getPriority]) {
    NSString *caller = @"";
    if (callerShown_) {
      caller = [self getCallerWithInt:depth];
      if (((jint) [((NSString *) nil_chk(message)) length]) >= 21) {
        if ([((NSString *) nil_chk([((NSString *) nil_chk([message lowercaseString])) substring:0 endIndex:21])) isEqual:@"implementation needed"]) {
          if (![((id<JavaUtilSet>) nil_chk(GeogebraCommonUtilDebugLog_reportedImplementationNeeded_)) containsWithId:caller]) [GeogebraCommonUtilDebugLog_reportedImplementationNeeded_ addWithId:caller];
        }
      }
      caller = JreStrcat("$$", caller, @": ");
    }
    NSString *timeInfo = @"";
    if (timeShown_) {
      timeInfo = [self getTimeInfo];
      if (![@"" isEqual:timeInfo]) {
        timeInfo = JreStrcat("$C", timeInfo, ' ');
      }
    }
    NSString *logEntry = JreStrcat("$$$$$", timeInfo, level->text_, @": ", caller, message);
    [self printWithNSString:logEntry withGeogebraCommonUtilDebugLog_Level:level];
    if (logDestination_ != GeogebraCommonUtilDebugLog_LogDestinationEnum_get_WEB_CONSOLE()) {
      if ([((JavaLangStringBuilder *) nil_chk(memoryLog_)) length] > GeogebraCommonUtilDebugLog_LOGFILE_MAXLENGTH) [memoryLog_ setLengthWithInt:0];
      [memoryLog_ appendWithNSString:JreStrcat("$C", logEntry, 0x000a)];
    }
  }
}

- (void)printWithNSString:(NSString *)logEntry
withGeogebraCommonUtilDebugLog_Level:(GeogebraCommonUtilDebugLog_Level *)level {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setLogFileWithNSString:(NSString *)logFileName {
}

- (NSString *)getTimeInfo {
  return @"";
}

- (NSString *)getMemoryInfo {
  return @"";
}

- (NSString *)getCallerWithInt:(jint)depth {
  NSString *callerMethodName = nil;
  NSString *callerClassName = nil;
  jint callerLineNumber;
  @try {
    JavaLangThrowable *t = [new_JavaLangThrowable_init() autorelease];
    IOSObjectArray *elements = [t getStackTrace];
    callerMethodName = [((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(nil_chk(elements), depth))) getMethodName];
    callerClassName = [((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(elements, depth))) getClassName];
    callerLineNumber = [((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(elements, depth))) getLineNumber];
    if ([((NSString *) nil_chk(callerClassName)) isEqual:@"Unknown"]) {
      if ([((NSString *) nil_chk(callerMethodName)) isEqual:@"$fillInStackTrace"]) {
        if (elements->size_ < 10) {
          return @"?";
        }
        return [((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(elements, 9))) getMethodName];
      }
      if ([callerMethodName isEqual:@"fillInStackTrace"]) {
        if (elements->size_ < 11) {
          return @"?";
        }
        return [((JavaLangStackTraceElement *) nil_chk(IOSObjectArray_Get(elements, 10))) getMethodName];
      }
      return callerMethodName;
    }
  }
  @catch (JavaLangThrowable *t) {
    return @"?";
  }
  return JreStrcat("$C$CIC", callerClassName, '.', callerMethodName, '[', callerLineNumber, ']');
}

+ (void)debugWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_debugWithNSString_(message);
}

+ (void)debugWithNSString:(NSString *)message
                  withInt:(jint)depth {
  GeogebraCommonUtilDebugLog_debugWithNSString_withInt_(message, depth);
}

+ (void)errorWithNSString:(NSString *)message
                  withInt:(jint)depth {
  GeogebraCommonUtilDebugLog_errorWithNSString_withInt_(message, depth);
}

+ (void)noticeWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_noticeWithNSString_(message);
}

+ (void)debugWithId:(id)s {
  GeogebraCommonUtilDebugLog_debugWithId_(s);
}

- (void)logWithGeogebraCommonUtilDebugLog_Level:(GeogebraCommonUtilDebugLog_Level *)level
                                   withNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(self, level, message);
}

+ (void)infoWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_infoWithNSString_(message);
}

+ (void)errorWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_errorWithNSString_(message);
}

+ (void)warnWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_warnWithNSString_(message);
}

+ (void)emergencyWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_emergencyWithNSString_(message);
}

+ (void)alertWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_alertWithNSString_(message);
}

+ (void)traceWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_traceWithNSString_(message);
}

+ (void)criticalWithNSString:(NSString *)message {
  GeogebraCommonUtilDebugLog_criticalWithNSString_(message);
}

- (instancetype)init {
  GeogebraCommonUtilDebugLog_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(EMERGENCY_);
  RELEASE_(ALERT_);
  RELEASE_(CRITICAL_);
  RELEASE_(ERROR_);
  RELEASE_(WARN_);
  RELEASE_(NOTICE_);
  RELEASE_(INFO_);
  RELEASE_(DEBUG__);
  RELEASE_(TRACE_);
  RELEASE_(memoryLog_);
  RELEASE_(logLevel_);
  RELEASE_(logDestination_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [GeogebraCommonUtilDebugLog class]) {
    JreStrongAssignAndConsume(&GeogebraCommonUtilDebugLog_reportedImplementationNeeded_, nil, new_JavaUtilTreeSet_init());
    J2OBJC_SET_INITIALIZED(GeogebraCommonUtilDebugLog)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getEntireLog", NULL, "Ljava.lang.StringBuilder;", 0x1, NULL, NULL },
    { "setLogLevelWithGeogebraCommonUtilDebugLog_Level:", "setLogLevel", "V", 0x1, NULL, NULL },
    { "setLogLevelWithNSString:", "setLogLevel", "V", 0x1, NULL, NULL },
    { "getLogLevel", NULL, "Lgeogebra.common.util.debug.Log$Level;", 0x1, NULL, NULL },
    { "setLogDestinationWithGeogebraCommonUtilDebugLog_LogDestinationEnum:", "setLogDestination", "V", 0x1, NULL, NULL },
    { "getLogDestination", NULL, "Lgeogebra.common.util.debug.Log$LogDestination;", 0x1, NULL, NULL },
    { "isTimeShown", NULL, "Z", 0x1, NULL, NULL },
    { "setTimeShownWithBoolean:", "setTimeShown", "V", 0x1, NULL, NULL },
    { "isCallerShown", NULL, "Z", 0x1, NULL, NULL },
    { "setCallerShownWithBoolean:", "setCallerShown", "V", 0x1, NULL, NULL },
    { "logWithGeogebraCommonUtilDebugLog_Level:withNSString:withInt:", "log", "V", 0x1, NULL, NULL },
    { "printWithNSString:withGeogebraCommonUtilDebugLog_Level:", "print", "V", 0x404, NULL, NULL },
    { "setLogFileWithNSString:", "setLogFile", "V", 0x1, NULL, NULL },
    { "getTimeInfo", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getMemoryInfo", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getCallerWithInt:", "getCaller", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "debugWithNSString:", "debug", "V", 0x9, NULL, NULL },
    { "debugWithNSString:withInt:", "debug", "V", 0x9, NULL, NULL },
    { "errorWithNSString:withInt:", "error", "V", 0x9, NULL, NULL },
    { "noticeWithNSString:", "notice", "V", 0x9, NULL, NULL },
    { "debugWithId:", "debug", "V", 0x9, NULL, NULL },
    { "logWithGeogebraCommonUtilDebugLog_Level:withNSString:", "log", "V", 0x2, NULL, NULL },
    { "infoWithNSString:", "info", "V", 0x9, NULL, NULL },
    { "errorWithNSString:", "error", "V", 0x9, NULL, NULL },
    { "warnWithNSString:", "warn", "V", 0x9, NULL, NULL },
    { "emergencyWithNSString:", "emergency", "V", 0x9, NULL, NULL },
    { "alertWithNSString:", "alert", "V", 0x9, NULL, NULL },
    { "traceWithNSString:", "trace", "V", 0x9, NULL, NULL },
    { "criticalWithNSString:", "critical", "V", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger_", NULL, 0x9, "Lgeogebra.common.util.debug.Log;", &GeogebraCommonUtilDebugLog_logger_, NULL,  },
    { "reportedImplementationNeeded_", NULL, 0xa, "Ljava.util.Set;", &GeogebraCommonUtilDebugLog_reportedImplementationNeeded_, "Ljava/util/Set<Ljava/lang/String;>;",  },
    { "EMERGENCY_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "ALERT_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "CRITICAL_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "ERROR_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "WARN_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "NOTICE_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "INFO_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "DEBUG__", "DEBUG", 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "TRACE_", NULL, 0x11, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "LOGFILE_MAXLENGTH_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonUtilDebugLog_LOGFILE_MAXLENGTH },
    { "memoryLog_", NULL, 0x12, "Ljava.lang.StringBuilder;", NULL, NULL,  },
    { "logLevel_", NULL, 0x2, "Lgeogebra.common.util.debug.Log$Level;", NULL, NULL,  },
    { "logDestination_", NULL, 0x2, "Lgeogebra.common.util.debug.Log$LogDestination;", NULL, NULL,  },
    { "timeShown_", NULL, 0x2, "Z", NULL, NULL,  },
    { "callerShown_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.util.debug.Log$Level;", "Lgeogebra.common.util.debug.Log$LogDestination;"};
  static const J2ObjcClassInfo _GeogebraCommonUtilDebugLog = { 2, "Log", "geogebra.common.util.debug", NULL, 0x401, 30, methods, 17, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_GeogebraCommonUtilDebugLog;
}

@end

void GeogebraCommonUtilDebugLog_debugWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->DEBUG__, message);
  }
}

void GeogebraCommonUtilDebugLog_debugWithNSString_withInt_(NSString *message, jint depth) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    [GeogebraCommonUtilDebugLog_logger_ logWithGeogebraCommonUtilDebugLog_Level:GeogebraCommonUtilDebugLog_logger_->DEBUG__ withNSString:message withInt:depth];
  }
}

void GeogebraCommonUtilDebugLog_errorWithNSString_withInt_(NSString *message, jint depth) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    [GeogebraCommonUtilDebugLog_logger_ logWithGeogebraCommonUtilDebugLog_Level:GeogebraCommonUtilDebugLog_logger_->ERROR_ withNSString:message withInt:depth];
  }
}

void GeogebraCommonUtilDebugLog_noticeWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->NOTICE_, message);
  }
}

void GeogebraCommonUtilDebugLog_debugWithId_(id s) {
  GeogebraCommonUtilDebugLog_initialize();
  if ([GeogebraCommonKernelArithmeticExpressionValue_class_() isInstance:s]) {
    GeogebraCommonUtilDebugLog_debugWithNSString_withInt_(GeogebraCommonKernelArithmeticValidExpression_debugStringWithGeogebraCommonKernelArithmeticExpressionValue_((id<GeogebraCommonKernelArithmeticExpressionValue>) check_protocol_cast(s, @protocol(GeogebraCommonKernelArithmeticExpressionValue))), 5);
    return;
  }
  if ([s isKindOfClass:[GeogebraCommonKernelArithmeticPolynomial class]]) {
    IOSObjectArray *coeff = [((GeogebraCommonKernelArithmeticPolynomial *) nil_chk(((GeogebraCommonKernelArithmeticPolynomial *) check_class_cast(s, [GeogebraCommonKernelArithmeticPolynomial class])))) getCoeff];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coeff))->size_; i++) {
      for (jint j = 0; j < ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(coeff, i)))->size_; j++) {
        GeogebraCommonUtilDebugLog_debugWithNSString_withInt_(GeogebraCommonKernelArithmeticValidExpression_debugStringWithGeogebraCommonKernelArithmeticExpressionValue_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(coeff, i)), j)), 5);
      }
    }
  }
  if (s == nil) {
    GeogebraCommonUtilDebugLog_debugWithNSString_withInt_(@"<null>", 5);
  }
  else {
    GeogebraCommonUtilDebugLog_debugWithNSString_withInt_([s description], 5);
  }
}

void GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog *self, GeogebraCommonUtilDebugLog_Level *level, NSString *message) {
  [self logWithGeogebraCommonUtilDebugLog_Level:level withNSString:message withInt:4];
}

void GeogebraCommonUtilDebugLog_infoWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->INFO_, message);
  }
}

void GeogebraCommonUtilDebugLog_errorWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->ERROR_, message);
  }
}

void GeogebraCommonUtilDebugLog_warnWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->WARN_, message);
  }
}

void GeogebraCommonUtilDebugLog_emergencyWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->EMERGENCY_, message);
  }
}

void GeogebraCommonUtilDebugLog_alertWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->ALERT_, message);
  }
}

void GeogebraCommonUtilDebugLog_traceWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->TRACE_, message);
  }
}

void GeogebraCommonUtilDebugLog_criticalWithNSString_(NSString *message) {
  GeogebraCommonUtilDebugLog_initialize();
  if (GeogebraCommonUtilDebugLog_logger_ != nil) {
    GeogebraCommonUtilDebugLog_logWithGeogebraCommonUtilDebugLog_Level_withNSString_(GeogebraCommonUtilDebugLog_logger_, GeogebraCommonUtilDebugLog_logger_->CRITICAL_, message);
  }
}

void GeogebraCommonUtilDebugLog_init(GeogebraCommonUtilDebugLog *self) {
  NSObject_init(self);
  GeogebraCommonUtilDebugLog_setAndConsume_EMERGENCY_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 0, @"EMERGENCY"));
  GeogebraCommonUtilDebugLog_setAndConsume_ALERT_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 1, @"ALERT"));
  GeogebraCommonUtilDebugLog_setAndConsume_CRITICAL_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 2, @"CRITICAL"));
  GeogebraCommonUtilDebugLog_setAndConsume_ERROR_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 3, @"ERROR"));
  GeogebraCommonUtilDebugLog_setAndConsume_WARN_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 4, @"WARN"));
  GeogebraCommonUtilDebugLog_setAndConsume_NOTICE_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 5, @"NOTICE"));
  GeogebraCommonUtilDebugLog_setAndConsume_INFO_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 7, @"INFO"));
  GeogebraCommonUtilDebugLog_setAndConsume_DEBUG__(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 8, @"DEBUG"));
  GeogebraCommonUtilDebugLog_setAndConsume_TRACE_(self, new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, 9, @"TRACE"));
  GeogebraCommonUtilDebugLog_setAndConsume_memoryLog_(self, new_JavaLangStringBuilder_init());
  GeogebraCommonUtilDebugLog_set_logLevel_(self, self->DEBUG__);
  GeogebraCommonUtilDebugLog_set_logDestination_(self, GeogebraCommonUtilDebugLog_LogDestinationEnum_get_CONSOLES());
  self->timeShown_ = YES;
  self->callerShown_ = YES;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonUtilDebugLog)

@implementation GeogebraCommonUtilDebugLog_Level

- (instancetype)initWithGeogebraCommonUtilDebugLog:(GeogebraCommonUtilDebugLog *)outer$
                                           withInt:(jint)priority
                                      withNSString:(NSString *)text {
  GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, outer$, priority, text);
  return self;
}

- (jint)getPriority {
  return priority_;
}

- (void)dealloc {
  RELEASE_(text_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonUtilDebugLog:withInt:withNSString:", "Level", NULL, 0x0, NULL, NULL },
    { "getPriority", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "priority_", NULL, 0x0, "I", NULL, NULL,  },
    { "text_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonUtilDebugLog_Level = { 2, "Level", "geogebra.common.util.debug", "Log", 0x1, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonUtilDebugLog_Level;
}

@end

void GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(GeogebraCommonUtilDebugLog_Level *self, GeogebraCommonUtilDebugLog *outer$, jint priority, NSString *text) {
  NSObject_init(self);
  self->priority_ = priority;
  GeogebraCommonUtilDebugLog_Level_set_text_(self, text);
}

GeogebraCommonUtilDebugLog_Level *new_GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(GeogebraCommonUtilDebugLog *outer$, jint priority, NSString *text) {
  GeogebraCommonUtilDebugLog_Level *self = [GeogebraCommonUtilDebugLog_Level alloc];
  GeogebraCommonUtilDebugLog_Level_initWithGeogebraCommonUtilDebugLog_withInt_withNSString_(self, outer$, priority, text);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonUtilDebugLog_Level)

J2OBJC_INITIALIZED_DEFN(GeogebraCommonUtilDebugLog_LogDestinationEnum)

GeogebraCommonUtilDebugLog_LogDestinationEnum *GeogebraCommonUtilDebugLog_LogDestinationEnum_values_[4];

@implementation GeogebraCommonUtilDebugLog_LogDestinationEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *GeogebraCommonUtilDebugLog_LogDestinationEnum_values() {
  GeogebraCommonUtilDebugLog_LogDestinationEnum_initialize();
  return [IOSObjectArray arrayWithObjects:GeogebraCommonUtilDebugLog_LogDestinationEnum_values_ count:4 type:GeogebraCommonUtilDebugLog_LogDestinationEnum_class_()];
}

+ (IOSObjectArray *)values {
  return GeogebraCommonUtilDebugLog_LogDestinationEnum_values();
}

+ (GeogebraCommonUtilDebugLog_LogDestinationEnum *)valueOfWithNSString:(NSString *)name {
  return GeogebraCommonUtilDebugLog_LogDestinationEnum_valueOfWithNSString_(name);
}

GeogebraCommonUtilDebugLog_LogDestinationEnum *GeogebraCommonUtilDebugLog_LogDestinationEnum_valueOfWithNSString_(NSString *name) {
  GeogebraCommonUtilDebugLog_LogDestinationEnum_initialize();
  for (int i = 0; i < 4; i++) {
    GeogebraCommonUtilDebugLog_LogDestinationEnum *e = GeogebraCommonUtilDebugLog_LogDestinationEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [GeogebraCommonUtilDebugLog_LogDestinationEnum class]) {
    GeogebraCommonUtilDebugLog_LogDestinationEnum_FILE = new_GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(@"FILE", 0);
    GeogebraCommonUtilDebugLog_LogDestinationEnum_CONSOLE = new_GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(@"CONSOLE", 1);
    GeogebraCommonUtilDebugLog_LogDestinationEnum_WEB_CONSOLE = new_GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(@"WEB_CONSOLE", 2);
    GeogebraCommonUtilDebugLog_LogDestinationEnum_CONSOLES = new_GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(@"CONSOLES", 3);
    J2OBJC_SET_INITIALIZED(GeogebraCommonUtilDebugLog_LogDestinationEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "FILE", "FILE", 0x4019, "Lgeogebra.common.util.debug.Log$LogDestination;", &GeogebraCommonUtilDebugLog_LogDestinationEnum_FILE, NULL,  },
    { "CONSOLE", "CONSOLE", 0x4019, "Lgeogebra.common.util.debug.Log$LogDestination;", &GeogebraCommonUtilDebugLog_LogDestinationEnum_CONSOLE, NULL,  },
    { "WEB_CONSOLE", "WEB_CONSOLE", 0x4019, "Lgeogebra.common.util.debug.Log$LogDestination;", &GeogebraCommonUtilDebugLog_LogDestinationEnum_WEB_CONSOLE, NULL,  },
    { "CONSOLES", "CONSOLES", 0x4019, "Lgeogebra.common.util.debug.Log$LogDestination;", &GeogebraCommonUtilDebugLog_LogDestinationEnum_CONSOLES, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lgeogebra.common.util.debug.Log$LogDestination;"};
  static const J2ObjcClassInfo _GeogebraCommonUtilDebugLog_LogDestinationEnum = { 2, "LogDestination", "geogebra.common.util.debug", "Log", 0x4019, 0, NULL, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lgeogebra/common/util/debug/Log$LogDestination;>;" };
  return &_GeogebraCommonUtilDebugLog_LogDestinationEnum;
}

@end

void GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(GeogebraCommonUtilDebugLog_LogDestinationEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

GeogebraCommonUtilDebugLog_LogDestinationEnum *new_GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  GeogebraCommonUtilDebugLog_LogDestinationEnum *self = [GeogebraCommonUtilDebugLog_LogDestinationEnum alloc];
  GeogebraCommonUtilDebugLog_LogDestinationEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonUtilDebugLog_LogDestinationEnum)
