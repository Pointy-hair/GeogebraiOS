//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoPenStroke.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPenStroke.h"
#include "geogebra/common/kernel/geos/GeoPolyLine.h"
#include "geogebra/common/plugin/GeoClass.h"

@implementation GeogebraCommonKernelGeosGeoPenStroke

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points {
  GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, points);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 {
  GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_(self, cons1);
  return self;
}

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return GeogebraCommonPluginGeoClassEnum_get_PENSTROKE();
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return label_;
}

- (GeogebraCommonKernelGeosGeoElement *)copyInternalWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 {
  GeogebraCommonKernelGeosGeoPolyLine *ret = [new_GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_(cons1) autorelease];
  GeogebraCommonKernelGeosGeoPolyLine_set_points_(ret, GeogebraCommonKernelGeosGeoElement_copyPointsWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(cons1, points_));
  [ret setWithGeogebraCommonKernelGeosGeoElement:self];
  return ret;
}

- (jboolean)isPinnable {
  return YES;
}

- (jboolean)isLabelVisible {
  return NO;
}

- (jboolean)isLabelShowable {
  return NO;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointNDArray:", "GeoPenStroke", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:", "GeoPenStroke", NULL, 0x1, NULL, NULL },
    { "getGeoClassType", NULL, "Lgeogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "copyInternalWithGeogebraCommonKernelConstruction:", "copyInternal", "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "isPinnable", NULL, "Z", 0x1, NULL, NULL },
    { "isLabelVisible", NULL, "Z", 0x1, NULL, NULL },
    { "isLabelShowable", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosGeoPenStroke = { 2, "GeoPenStroke", "geogebra.common.kernel.geos", NULL, 0x1, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosGeoPenStroke;
}

@end

void GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonKernelGeosGeoPenStroke *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *points) {
  GeogebraCommonKernelGeosGeoPolyLine_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, points);
}

GeogebraCommonKernelGeosGeoPenStroke *new_GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *points) {
  GeogebraCommonKernelGeosGeoPenStroke *self = [GeogebraCommonKernelGeosGeoPenStroke alloc];
  GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(self, cons, points);
  return self;
}

void GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoPenStroke *self, GeogebraCommonKernelConstruction *cons1) {
  GeogebraCommonKernelGeosGeoPolyLine_initWithGeogebraCommonKernelConstruction_(self, cons1);
}

GeogebraCommonKernelGeosGeoPenStroke *new_GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *cons1) {
  GeogebraCommonKernelGeosGeoPenStroke *self = [GeogebraCommonKernelGeosGeoPenStroke alloc];
  GeogebraCommonKernelGeosGeoPenStroke_initWithGeogebraCommonKernelConstruction_(self, cons1);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosGeoPenStroke)
