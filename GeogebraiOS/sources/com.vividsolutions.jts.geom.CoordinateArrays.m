//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/geom/CoordinateArrays.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/CoordinateArrays.h"
#include "com/vividsolutions/jts/geom/CoordinateList.h"
#include "java/lang/System.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"

@interface ComVividsolutionsJtsGeomCoordinateArrays ()

+ (jboolean)isEqualReversedWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts1
                           withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts2;

@end

static IOSObjectArray *ComVividsolutionsJtsGeomCoordinateArrays_coordArrayType_;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsGeomCoordinateArrays, coordArrayType_, IOSObjectArray *)

__attribute__((unused)) static jboolean ComVividsolutionsJtsGeomCoordinateArrays_isEqualReversedWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts1, IOSObjectArray *pts2);

J2OBJC_INITIALIZED_DEFN(ComVividsolutionsJtsGeomCoordinateArrays)

@implementation ComVividsolutionsJtsGeomCoordinateArrays

+ (ComVividsolutionsJtsGeomCoordinate *)ptNotInListWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)testPts
                                                   withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  return ComVividsolutionsJtsGeomCoordinateArrays_ptNotInListWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(testPts, pts);
}

+ (jint)compareWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts1
               withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts2 {
  return ComVividsolutionsJtsGeomCoordinateArrays_compareWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(pts1, pts2);
}

+ (jint)increasingDirectionWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  return ComVividsolutionsJtsGeomCoordinateArrays_increasingDirectionWithComVividsolutionsJtsGeomCoordinateArray_(pts);
}

+ (jboolean)isEqualReversedWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts1
                           withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts2 {
  return ComVividsolutionsJtsGeomCoordinateArrays_isEqualReversedWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(pts1, pts2);
}

+ (IOSObjectArray *)copyDeepWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coordinates {
  return ComVividsolutionsJtsGeomCoordinateArrays_copyDeepWithComVividsolutionsJtsGeomCoordinateArray_(coordinates);
}

+ (IOSObjectArray *)toCoordinateArrayWithJavaUtilCollection:(id<JavaUtilCollection>)coordList {
  return ComVividsolutionsJtsGeomCoordinateArrays_toCoordinateArrayWithJavaUtilCollection_(coordList);
}

+ (jboolean)hasRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coord {
  return ComVividsolutionsJtsGeomCoordinateArrays_hasRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray_(coord);
}

+ (IOSObjectArray *)atLeastNCoordinatesOrNothingWithInt:(jint)n
            withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)c {
  return ComVividsolutionsJtsGeomCoordinateArrays_atLeastNCoordinatesOrNothingWithInt_withComVividsolutionsJtsGeomCoordinateArray_(n, c);
}

+ (IOSObjectArray *)removeRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coord {
  return ComVividsolutionsJtsGeomCoordinateArrays_removeRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray_(coord);
}

+ (void)reverseWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coord {
  ComVividsolutionsJtsGeomCoordinateArrays_reverseWithComVividsolutionsJtsGeomCoordinateArray_(coord);
}

+ (jboolean)equalsWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coord1
                  withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coord2 {
  return ComVividsolutionsJtsGeomCoordinateArrays_equalsWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(coord1, coord2);
}

+ (jboolean)equalsWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coord1
                  withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coord2
                                       withJavaUtilComparator:(id<JavaUtilComparator>)coordinateComparator {
  return ComVividsolutionsJtsGeomCoordinateArrays_equalsWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_withJavaUtilComparator_(coord1, coord2, coordinateComparator);
}

+ (ComVividsolutionsJtsGeomCoordinate *)minCoordinateWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coordinates {
  return ComVividsolutionsJtsGeomCoordinateArrays_minCoordinateWithComVividsolutionsJtsGeomCoordinateArray_(coordinates);
}

+ (void)scrollWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coordinates
                   withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)firstCoordinate {
  ComVividsolutionsJtsGeomCoordinateArrays_scrollWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinate_(coordinates, firstCoordinate);
}

+ (jint)indexOfWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)coordinate
          withComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)coordinates {
  return ComVividsolutionsJtsGeomCoordinateArrays_indexOfWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(coordinate, coordinates);
}

+ (IOSObjectArray *)extractWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts
                                                               withInt:(jint)start
                                                               withInt:(jint)end {
  return ComVividsolutionsJtsGeomCoordinateArrays_extractWithComVividsolutionsJtsGeomCoordinateArray_withInt_withInt_(pts, start, end);
}

- (instancetype)init {
  ComVividsolutionsJtsGeomCoordinateArrays_init(self);
  return self;
}

+ (void)initialize {
  if (self == [ComVividsolutionsJtsGeomCoordinateArrays class]) {
    JreStrongAssignAndConsume(&ComVividsolutionsJtsGeomCoordinateArrays_coordArrayType_, nil, [IOSObjectArray newArrayWithLength:0 type:ComVividsolutionsJtsGeomCoordinate_class_()]);
    J2OBJC_SET_INITIALIZED(ComVividsolutionsJtsGeomCoordinateArrays)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "ptNotInListWithComVividsolutionsJtsGeomCoordinateArray:withComVividsolutionsJtsGeomCoordinateArray:", "ptNotInList", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "compareWithComVividsolutionsJtsGeomCoordinateArray:withComVividsolutionsJtsGeomCoordinateArray:", "compare", "I", 0x9, NULL, NULL },
    { "increasingDirectionWithComVividsolutionsJtsGeomCoordinateArray:", "increasingDirection", "I", 0x9, NULL, NULL },
    { "isEqualReversedWithComVividsolutionsJtsGeomCoordinateArray:withComVividsolutionsJtsGeomCoordinateArray:", "isEqualReversed", "Z", 0xa, NULL, NULL },
    { "copyDeepWithComVividsolutionsJtsGeomCoordinateArray:", "copyDeep", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "toCoordinateArrayWithJavaUtilCollection:", "toCoordinateArray", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "hasRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray:", "hasRepeatedPoints", "Z", 0x9, NULL, NULL },
    { "atLeastNCoordinatesOrNothingWithInt:withComVividsolutionsJtsGeomCoordinateArray:", "atLeastNCoordinatesOrNothing", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "removeRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray:", "removeRepeatedPoints", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "reverseWithComVividsolutionsJtsGeomCoordinateArray:", "reverse", "V", 0x9, NULL, NULL },
    { "equalsWithComVividsolutionsJtsGeomCoordinateArray:withComVividsolutionsJtsGeomCoordinateArray:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsWithComVividsolutionsJtsGeomCoordinateArray:withComVividsolutionsJtsGeomCoordinateArray:withJavaUtilComparator:", "equals", "Z", 0x9, NULL, NULL },
    { "minCoordinateWithComVividsolutionsJtsGeomCoordinateArray:", "minCoordinate", "Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "scrollWithComVividsolutionsJtsGeomCoordinateArray:withComVividsolutionsJtsGeomCoordinate:", "scroll", "V", 0x9, NULL, NULL },
    { "indexOfWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinateArray:", "indexOf", "I", 0x9, NULL, NULL },
    { "extractWithComVividsolutionsJtsGeomCoordinateArray:withInt:withInt:", "extract", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coordArrayType_", NULL, 0x1a, "[Lcom.vividsolutions.jts.geom.Coordinate;", &ComVividsolutionsJtsGeomCoordinateArrays_coordArrayType_, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.vividsolutions.jts.geom.CoordinateArrays$ForwardComparator;", "Lcom.vividsolutions.jts.geom.CoordinateArrays$BidirectionalComparator;"};
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomCoordinateArrays = { 2, "CoordinateArrays", "com.vividsolutions.jts.geom", NULL, 0x1, 17, methods, 1, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_ComVividsolutionsJtsGeomCoordinateArrays;
}

@end

ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsGeomCoordinateArrays_ptNotInListWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *testPts, IOSObjectArray *pts) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(testPts))->size_; i++) {
    ComVividsolutionsJtsGeomCoordinate *testPt = IOSObjectArray_Get(testPts, i);
    if (ComVividsolutionsJtsGeomCoordinateArrays_indexOfWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(testPt, pts) < 0) return testPt;
  }
  return nil;
}

jint ComVividsolutionsJtsGeomCoordinateArrays_compareWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts1, IOSObjectArray *pts2) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  jint i = 0;
  while (i < ((IOSObjectArray *) nil_chk(pts1))->size_ && i < ((IOSObjectArray *) nil_chk(pts2))->size_) {
    jint compare = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts1, i))) compareToWithId:IOSObjectArray_Get(nil_chk(pts2), i)];
    if (compare != 0) return compare;
    i++;
  }
  if (i < ((IOSObjectArray *) nil_chk(pts2))->size_) return -1;
  if (i < pts1->size_) return 1;
  return 0;
}

jint ComVividsolutionsJtsGeomCoordinateArrays_increasingDirectionWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(pts))->size_ / 2; i++) {
    jint j = pts->size_ - 1 - i;
    jint comp = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts, i))) compareToWithId:IOSObjectArray_Get(pts, j)];
    if (comp != 0) return comp;
  }
  return 1;
}

jboolean ComVividsolutionsJtsGeomCoordinateArrays_isEqualReversedWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts1, IOSObjectArray *pts2) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(pts1))->size_; i++) {
    ComVividsolutionsJtsGeomCoordinate *p1 = IOSObjectArray_Get(pts1, i);
    ComVividsolutionsJtsGeomCoordinate *p2 = IOSObjectArray_Get(nil_chk(pts2), pts1->size_ - i - 1);
    if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1)) compareToWithId:p2] != 0) return NO;
  }
  return YES;
}

IOSObjectArray *ComVividsolutionsJtsGeomCoordinateArrays_copyDeepWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *coordinates) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  IOSObjectArray *copy_ = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(coordinates))->size_ type:ComVividsolutionsJtsGeomCoordinate_class_()];
  for (jint i = 0; i < coordinates->size_; i++) {
    IOSObjectArray_SetAndConsume(copy_, i, new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(coordinates, i)));
  }
  return copy_;
}

IOSObjectArray *ComVividsolutionsJtsGeomCoordinateArrays_toCoordinateArrayWithJavaUtilCollection_(id<JavaUtilCollection> coordList) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  return (IOSObjectArray *) check_class_cast([((id<JavaUtilCollection>) nil_chk(coordList)) toArrayWithNSObjectArray:ComVividsolutionsJtsGeomCoordinateArrays_coordArrayType_], [IOSObjectArray class]);
}

jboolean ComVividsolutionsJtsGeomCoordinateArrays_hasRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *coord) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  for (jint i = 1; i < ((IOSObjectArray *) nil_chk(coord))->size_; i++) {
    if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(coord, i - 1))) isEqual:IOSObjectArray_Get(coord, i)]) {
      return YES;
    }
  }
  return NO;
}

IOSObjectArray *ComVividsolutionsJtsGeomCoordinateArrays_atLeastNCoordinatesOrNothingWithInt_withComVividsolutionsJtsGeomCoordinateArray_(jint n, IOSObjectArray *c) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  return ((IOSObjectArray *) nil_chk(c))->size_ >= n ? c : [IOSObjectArray arrayWithObjects:(id[]){  } count:0 type:ComVividsolutionsJtsGeomCoordinate_class_()];
}

IOSObjectArray *ComVividsolutionsJtsGeomCoordinateArrays_removeRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *coord) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  if (!ComVividsolutionsJtsGeomCoordinateArrays_hasRepeatedPointsWithComVividsolutionsJtsGeomCoordinateArray_(coord)) return coord;
  ComVividsolutionsJtsGeomCoordinateList *coordList = [new_ComVividsolutionsJtsGeomCoordinateList_initWithComVividsolutionsJtsGeomCoordinateArray_withBoolean_(coord, NO) autorelease];
  return [coordList toCoordinateArray];
}

void ComVividsolutionsJtsGeomCoordinateArrays_reverseWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *coord) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  jint last = ((IOSObjectArray *) nil_chk(coord))->size_ - 1;
  jint mid = last / 2;
  for (jint i = 0; i <= mid; i++) {
    ComVividsolutionsJtsGeomCoordinate *tmp = IOSObjectArray_Get(coord, i);
    IOSObjectArray_Set(coord, i, IOSObjectArray_Get(coord, last - i));
    IOSObjectArray_Set(coord, last - i, tmp);
  }
}

jboolean ComVividsolutionsJtsGeomCoordinateArrays_equalsWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *coord1, IOSObjectArray *coord2) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  if (coord1 == coord2) return YES;
  if (coord1 == nil || coord2 == nil) return NO;
  if (((IOSObjectArray *) nil_chk(coord1))->size_ != ((IOSObjectArray *) nil_chk(coord2))->size_) return NO;
  for (jint i = 0; i < coord1->size_; i++) {
    if (![((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(coord1, i))) isEqual:IOSObjectArray_Get(coord2, i)]) return NO;
  }
  return YES;
}

jboolean ComVividsolutionsJtsGeomCoordinateArrays_equalsWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_withJavaUtilComparator_(IOSObjectArray *coord1, IOSObjectArray *coord2, id<JavaUtilComparator> coordinateComparator) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  if (coord1 == coord2) return YES;
  if (coord1 == nil || coord2 == nil) return NO;
  if (((IOSObjectArray *) nil_chk(coord1))->size_ != ((IOSObjectArray *) nil_chk(coord2))->size_) return NO;
  for (jint i = 0; i < coord1->size_; i++) {
    if ([((id<JavaUtilComparator>) nil_chk(coordinateComparator)) compareWithId:IOSObjectArray_Get(coord1, i) withId:IOSObjectArray_Get(coord2, i)] != 0) return NO;
  }
  return YES;
}

ComVividsolutionsJtsGeomCoordinate *ComVividsolutionsJtsGeomCoordinateArrays_minCoordinateWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *coordinates) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  ComVividsolutionsJtsGeomCoordinate *minCoord = nil;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coordinates))->size_; i++) {
    if (minCoord == nil || [minCoord compareToWithId:IOSObjectArray_Get(coordinates, i)] > 0) {
      minCoord = IOSObjectArray_Get(coordinates, i);
    }
  }
  return minCoord;
}

void ComVividsolutionsJtsGeomCoordinateArrays_scrollWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinate_(IOSObjectArray *coordinates, ComVividsolutionsJtsGeomCoordinate *firstCoordinate) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  jint i = ComVividsolutionsJtsGeomCoordinateArrays_indexOfWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(firstCoordinate, coordinates);
  if (i < 0) return;
  IOSObjectArray *newCoordinates = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(coordinates))->size_ type:ComVividsolutionsJtsGeomCoordinate_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(coordinates, i, newCoordinates, 0, coordinates->size_ - i);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(coordinates, 0, newCoordinates, coordinates->size_ - i, i);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(newCoordinates, 0, coordinates, 0, coordinates->size_);
}

jint ComVividsolutionsJtsGeomCoordinateArrays_indexOfWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsGeomCoordinate *coordinate, IOSObjectArray *coordinates) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coordinates))->size_; i++) {
    if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(coordinate)) isEqual:IOSObjectArray_Get(coordinates, i)]) {
      return i;
    }
  }
  return -1;
}

IOSObjectArray *ComVividsolutionsJtsGeomCoordinateArrays_extractWithComVividsolutionsJtsGeomCoordinateArray_withInt_withInt_(IOSObjectArray *pts, jint start, jint end) {
  ComVividsolutionsJtsGeomCoordinateArrays_initialize();
  jint len = end - start + 1;
  IOSObjectArray *extractPts = [IOSObjectArray arrayWithLength:len type:ComVividsolutionsJtsGeomCoordinate_class_()];
  jint iPts = 0;
  for (jint i = start; i <= end; i++) {
    IOSObjectArray_Set(extractPts, iPts++, IOSObjectArray_Get(nil_chk(pts), i));
  }
  return extractPts;
}

void ComVividsolutionsJtsGeomCoordinateArrays_init(ComVividsolutionsJtsGeomCoordinateArrays *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsGeomCoordinateArrays *new_ComVividsolutionsJtsGeomCoordinateArrays_init() {
  ComVividsolutionsJtsGeomCoordinateArrays *self = [ComVividsolutionsJtsGeomCoordinateArrays alloc];
  ComVividsolutionsJtsGeomCoordinateArrays_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomCoordinateArrays)

@implementation ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  IOSObjectArray *pts1 = (IOSObjectArray *) check_class_cast(o1, [IOSObjectArray class]);
  IOSObjectArray *pts2 = (IOSObjectArray *) check_class_cast(o2, [IOSObjectArray class]);
  return ComVividsolutionsJtsGeomCoordinateArrays_compareWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(pts1, pts2);
}

- (instancetype)init {
  ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator = { 2, "ForwardComparator", "com.vividsolutions.jts.geom", "CoordinateArrays", 0x9, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator;
}

@end

void ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator_init(ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator *new_ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator_init() {
  ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator *self = [ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator alloc];
  ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomCoordinateArrays_ForwardComparator)

@implementation ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  IOSObjectArray *pts1 = (IOSObjectArray *) check_class_cast(o1, [IOSObjectArray class]);
  IOSObjectArray *pts2 = (IOSObjectArray *) check_class_cast(o2, [IOSObjectArray class]);
  if (((IOSObjectArray *) nil_chk(pts1))->size_ < ((IOSObjectArray *) nil_chk(pts2))->size_) return -1;
  if (pts1->size_ > pts2->size_) return 1;
  if (pts1->size_ == 0) return 0;
  jint forwardComp = ComVividsolutionsJtsGeomCoordinateArrays_compareWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(pts1, pts2);
  jboolean isEqualRev = ComVividsolutionsJtsGeomCoordinateArrays_isEqualReversedWithComVividsolutionsJtsGeomCoordinateArray_withComVividsolutionsJtsGeomCoordinateArray_(pts1, pts2);
  if (isEqualRev) return 0;
  return forwardComp;
}

- (jint)OLDcompareWithId:(id)o1
                  withId:(id)o2 {
  IOSObjectArray *pts1 = (IOSObjectArray *) check_class_cast(o1, [IOSObjectArray class]);
  IOSObjectArray *pts2 = (IOSObjectArray *) check_class_cast(o2, [IOSObjectArray class]);
  if (((IOSObjectArray *) nil_chk(pts1))->size_ < ((IOSObjectArray *) nil_chk(pts2))->size_) return -1;
  if (pts1->size_ > pts2->size_) return 1;
  if (pts1->size_ == 0) return 0;
  jint dir1 = ComVividsolutionsJtsGeomCoordinateArrays_increasingDirectionWithComVividsolutionsJtsGeomCoordinateArray_(pts1);
  jint dir2 = ComVividsolutionsJtsGeomCoordinateArrays_increasingDirectionWithComVividsolutionsJtsGeomCoordinateArray_(pts2);
  jint i1 = dir1 > 0 ? 0 : pts1->size_ - 1;
  jint i2 = dir2 > 0 ? 0 : pts1->size_ - 1;
  for (jint i = 0; i < pts1->size_; i++) {
    jint comparePt = [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(IOSObjectArray_Get(pts1, i1))) compareToWithId:IOSObjectArray_Get(pts2, i2)];
    if (comparePt != 0) return comparePt;
    i1 += dir1;
    i2 += dir2;
  }
  return 0;
}

- (instancetype)init {
  ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "OLDcompareWithId:withId:", "OLDcompare", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator = { 2, "BidirectionalComparator", "com.vividsolutions.jts.geom", "CoordinateArrays", 0x9, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator;
}

@end

void ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator_init(ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator *new_ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator_init() {
  ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator *self = [ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator alloc];
  ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsGeomCoordinateArrays_BidirectionalComparator)
