//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoParametricDerivative.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/cas/AlgoParametricDerivative.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonKernelCasAlgoParametricDerivative () {
 @public
  GeogebraCommonKernelGeosGeoCurveCartesian *curve_, *paramDeriv_;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
           withGeogebraCommonKernelGeosGeoCurveCartesian:(GeogebraCommonKernelGeosGeoCurveCartesian *)curve;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoParametricDerivative, curve_, GeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoParametricDerivative, paramDeriv_, GeogebraCommonKernelGeosGeoCurveCartesian *)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoCurveCartesian_(GeogebraCommonKernelCasAlgoParametricDerivative *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoCurveCartesian *curve);

__attribute__((unused)) static GeogebraCommonKernelCasAlgoParametricDerivative *new_GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoCurveCartesian_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoCurveCartesian *curve) NS_RETURNS_RETAINED;

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoParametricDerivative_compute(GeogebraCommonKernelCasAlgoParametricDerivative *self);

@implementation GeogebraCommonKernelCasAlgoParametricDerivative

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
           withGeogebraCommonKernelGeosGeoCurveCartesian:(GeogebraCommonKernelGeosGeoCurveCartesian *)curve {
  GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, curve);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
           withGeogebraCommonKernelGeosGeoCurveCartesian:(GeogebraCommonKernelGeosGeoCurveCartesian *)curve {
  GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, curve);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_ParametricDerivative();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, curve_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:paramDeriv_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoCurveCartesian *)getParametricDerivative {
  return paramDeriv_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoParametricDerivative_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"ParametricDerivativeOfA" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk([((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(curve_)) toGeoElement])) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(curve_);
  RELEASE_(paramDeriv_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoCurveCartesian:", "AlgoParametricDerivative", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoCurveCartesian:", "AlgoParametricDerivative", NULL, 0x2, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getParametricDerivative", NULL, "Lgeogebra.common.kernel.geos.GeoCurveCartesian;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "curve_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "paramDeriv_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoParametricDerivative = { 2, "AlgoParametricDerivative", "geogebra.common.kernel.cas", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoParametricDerivative;
}

@end

void GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_(GeogebraCommonKernelCasAlgoParametricDerivative *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, curve);
  [((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->paramDeriv_)) setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoParametricDerivative *new_GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  GeogebraCommonKernelCasAlgoParametricDerivative *self = [GeogebraCommonKernelCasAlgoParametricDerivative alloc];
  GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, label, curve);
  return self;
}

void GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoCurveCartesian_(GeogebraCommonKernelCasAlgoParametricDerivative *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoParametricDerivative_set_curve_(self, curve);
  GeogebraCommonKernelCasAlgoParametricDerivative_set_paramDeriv_(self, (GeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast([((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(curve)) copyInternalWithGeogebraCommonKernelConstruction:cons], [GeogebraCommonKernelGeosGeoCurveCartesian class]));
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoParametricDerivative_compute(self);
}

GeogebraCommonKernelCasAlgoParametricDerivative *new_GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoCurveCartesian_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoCurveCartesian *curve) {
  GeogebraCommonKernelCasAlgoParametricDerivative *self = [GeogebraCommonKernelCasAlgoParametricDerivative alloc];
  GeogebraCommonKernelCasAlgoParametricDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoCurveCartesian_(self, cons, curve);
  return self;
}

void GeogebraCommonKernelCasAlgoParametricDerivative_compute(GeogebraCommonKernelCasAlgoParametricDerivative *self) {
  if (![((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->curve_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->paramDeriv_)) setUndefined];
    return;
  }
  [((GeogebraCommonKernelGeosGeoCurveCartesian *) nil_chk(self->paramDeriv_)) setParametricDerivativeWithGeogebraCommonKernelGeosGeoCurveCartesian:self->curve_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoParametricDerivative)
