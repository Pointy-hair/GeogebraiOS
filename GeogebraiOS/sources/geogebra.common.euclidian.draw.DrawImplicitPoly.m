//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/draw/DrawImplicitPoly.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/awt/GArea.h"
#include "geogebra/common/euclidian/Drawable.h"
#include "geogebra/common/euclidian/EuclidianView.h"
#include "geogebra/common/euclidian/draw/DrawImplicitPoly.h"
#include "geogebra/common/euclidian/draw/DrawLocus.h"
#include "geogebra/common/factories/AwtFactory.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLocus.h"
#include "geogebra/common/kernel/implicit/GeoImplicitPoly.h"

@interface GeogebraCommonEuclidianDrawDrawImplicitPoly () {
 @public
  GeogebraCommonKernelImplicitGeoImplicitPoly *implicitPoly_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawImplicitPoly, implicitPoly_, GeogebraCommonKernelImplicitGeoImplicitPoly *)

@implementation GeogebraCommonEuclidianDrawDrawImplicitPoly

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
             withGeogebraCommonKernelImplicitGeoImplicitPoly:(GeogebraCommonKernelImplicitGeoImplicitPoly *)implicitPoly {
  GeogebraCommonEuclidianDrawDrawImplicitPoly_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelImplicitGeoImplicitPoly_(self, view, implicitPoly);
  return self;
}

- (id<GeogebraCommonAwtGArea>)getShape {
  return [((GeogebraCommonFactoriesAwtFactory *) nil_chk(GeogebraCommonFactoriesAwtFactory_get_prototype_())) newArea];
}

- (GeogebraCommonKernelImplicitGeoImplicitPoly *)getPoly {
  return implicitPoly_;
}

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold {
  if ([((GeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(implicitPoly_)) getDeg] == 0) {
    return NO;
  }
  return [super hitWithInt:x withInt:y withInt:hitThreshold];
}

- (void)dealloc {
  RELEASE_(implicitPoly_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonEuclidianEuclidianView:withGeogebraCommonKernelImplicitGeoImplicitPoly:", "DrawImplicitPoly", NULL, 0x1, NULL, NULL },
    { "getShape", NULL, "Lgeogebra.common.awt.GArea;", 0x1, NULL, NULL },
    { "getPoly", NULL, "Lgeogebra.common.kernel.implicit.GeoImplicitPoly;", 0x1, NULL, NULL },
    { "hitWithInt:withInt:withInt:", "hit", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "implicitPoly_", NULL, 0x2, "Lgeogebra.common.kernel.implicit.GeoImplicitPoly;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonEuclidianDrawDrawImplicitPoly = { 2, "DrawImplicitPoly", "geogebra.common.euclidian.draw", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonEuclidianDrawDrawImplicitPoly;
}

@end

void GeogebraCommonEuclidianDrawDrawImplicitPoly_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelImplicitGeoImplicitPoly_(GeogebraCommonEuclidianDrawDrawImplicitPoly *self, GeogebraCommonEuclidianEuclidianView *view, GeogebraCommonKernelImplicitGeoImplicitPoly *implicitPoly) {
  GeogebraCommonEuclidianDrawDrawLocus_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelGeosGeoLocusND_(self, view, [((GeogebraCommonKernelImplicitGeoImplicitPoly *) nil_chk(implicitPoly)) getLocus]);
  GeogebraCommonEuclidianDrawable_set_view_(self, view);
  GeogebraCommonEuclidianDrawDrawImplicitPoly_set_implicitPoly_(self, implicitPoly);
  GeogebraCommonEuclidianDrawable_set_geo_(self, implicitPoly);
  [self update];
}

GeogebraCommonEuclidianDrawDrawImplicitPoly *new_GeogebraCommonEuclidianDrawDrawImplicitPoly_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelImplicitGeoImplicitPoly_(GeogebraCommonEuclidianEuclidianView *view, GeogebraCommonKernelImplicitGeoImplicitPoly *implicitPoly) {
  GeogebraCommonEuclidianDrawDrawImplicitPoly *self = [GeogebraCommonEuclidianDrawDrawImplicitPoly alloc];
  GeogebraCommonEuclidianDrawDrawImplicitPoly_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelImplicitGeoImplicitPoly_(self, view, implicitPoly);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonEuclidianDrawDrawImplicitPoly)
