//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/stat/descriptive/summary/Product.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/summary/Product.h"
#include "org/apache/commons/math/util/FastMath.h"

#define OrgApacheCommonsMathStatDescriptiveSummaryProduct_serialVersionUID 2824226005990582538LL

@interface OrgApacheCommonsMathStatDescriptiveSummaryProduct () {
 @public
  jlong n_;
  jdouble value_;
}

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathStatDescriptiveSummaryProduct, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathStatDescriptiveSummaryProduct

- (instancetype)init {
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_init(self);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathStatDescriptiveSummaryProduct:(OrgApacheCommonsMathStatDescriptiveSummaryProduct *)original {
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_initWithOrgApacheCommonsMathStatDescriptiveSummaryProduct_(self, original);
  return self;
}

- (void)incrementWithDouble:(jdouble)d {
  if (n_ == 0) {
    value_ = d;
  }
  else {
    value_ *= d;
  }
  n_++;
}

- (jdouble)getResult {
  return value_;
}

- (jlong)getN {
  return n_;
}

- (void)clear {
  value_ = JavaLangDouble_NaN;
  n_ = 0;
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                           withInt:(jint)begin
                           withInt:(jint)length {
  jdouble product = JavaLangDouble_NaN;
  if ([self testWithDoubleArray:values withInt:begin withInt:length]) {
    product = 1.0;
    for (jint i = begin; i < begin + length; i++) {
      product *= IOSDoubleArray_Get(nil_chk(values), i);
    }
  }
  return product;
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                   withDoubleArray:(IOSDoubleArray *)weights
                           withInt:(jint)begin
                           withInt:(jint)length {
  jdouble product = JavaLangDouble_NaN;
  if ([self testWithDoubleArray:values withDoubleArray:weights withInt:begin withInt:length]) {
    product = 1.0;
    for (jint i = begin; i < begin + length; i++) {
      product *= OrgApacheCommonsMathUtilFastMath_powWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(values), i), IOSDoubleArray_Get(nil_chk(weights), i));
    }
  }
  return product;
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                   withDoubleArray:(IOSDoubleArray *)weights {
  return [self evaluateWithDoubleArray:values withDoubleArray:weights withInt:0 withInt:((IOSDoubleArray *) nil_chk(values))->size_];
}

- (OrgApacheCommonsMathStatDescriptiveSummaryProduct *)copy__ {
  OrgApacheCommonsMathStatDescriptiveSummaryProduct *result = [new_OrgApacheCommonsMathStatDescriptiveSummaryProduct_init() autorelease];
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_copy__WithOrgApacheCommonsMathStatDescriptiveSummaryProduct_withOrgApacheCommonsMathStatDescriptiveSummaryProduct_(self, result);
  return result;
}

+ (void)copy__WithOrgApacheCommonsMathStatDescriptiveSummaryProduct:(OrgApacheCommonsMathStatDescriptiveSummaryProduct *)source
              withOrgApacheCommonsMathStatDescriptiveSummaryProduct:(OrgApacheCommonsMathStatDescriptiveSummaryProduct *)dest {
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_copy__WithOrgApacheCommonsMathStatDescriptiveSummaryProduct_withOrgApacheCommonsMathStatDescriptiveSummaryProduct_(source, dest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Product", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathStatDescriptiveSummaryProduct:", "Product", NULL, 0x1, NULL, NULL },
    { "incrementWithDouble:", "increment", "V", 0x1, NULL, NULL },
    { "getResult", NULL, "D", 0x1, NULL, NULL },
    { "getN", NULL, "J", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withInt:withInt:", "evaluate", "D", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withDoubleArray:withInt:withInt:", "evaluate", "D", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withDoubleArray:", "evaluate", "D", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.apache.commons.math.stat.descriptive.summary.Product;", 0x1, NULL, NULL },
    { "copy__WithOrgApacheCommonsMathStatDescriptiveSummaryProduct:withOrgApacheCommonsMathStatDescriptiveSummaryProduct:", "copy", "V", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathStatDescriptiveSummaryProduct_serialVersionUID },
    { "n_", NULL, 0x2, "J", NULL, NULL,  },
    { "value_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatDescriptiveSummaryProduct = { 2, "Product", "org.apache.commons.math.stat.descriptive.summary", NULL, 0x1, 11, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatDescriptiveSummaryProduct;
}

@end

void OrgApacheCommonsMathStatDescriptiveSummaryProduct_init(OrgApacheCommonsMathStatDescriptiveSummaryProduct *self) {
  OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  self->n_ = 0;
  self->value_ = JavaLangDouble_NaN;
}

OrgApacheCommonsMathStatDescriptiveSummaryProduct *new_OrgApacheCommonsMathStatDescriptiveSummaryProduct_init() {
  OrgApacheCommonsMathStatDescriptiveSummaryProduct *self = [OrgApacheCommonsMathStatDescriptiveSummaryProduct alloc];
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_init(self);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveSummaryProduct_initWithOrgApacheCommonsMathStatDescriptiveSummaryProduct_(OrgApacheCommonsMathStatDescriptiveSummaryProduct *self, OrgApacheCommonsMathStatDescriptiveSummaryProduct *original) {
  OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_copy__WithOrgApacheCommonsMathStatDescriptiveSummaryProduct_withOrgApacheCommonsMathStatDescriptiveSummaryProduct_(original, self);
}

OrgApacheCommonsMathStatDescriptiveSummaryProduct *new_OrgApacheCommonsMathStatDescriptiveSummaryProduct_initWithOrgApacheCommonsMathStatDescriptiveSummaryProduct_(OrgApacheCommonsMathStatDescriptiveSummaryProduct *original) {
  OrgApacheCommonsMathStatDescriptiveSummaryProduct *self = [OrgApacheCommonsMathStatDescriptiveSummaryProduct alloc];
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_initWithOrgApacheCommonsMathStatDescriptiveSummaryProduct_(self, original);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveSummaryProduct_copy__WithOrgApacheCommonsMathStatDescriptiveSummaryProduct_withOrgApacheCommonsMathStatDescriptiveSummaryProduct_(OrgApacheCommonsMathStatDescriptiveSummaryProduct *source, OrgApacheCommonsMathStatDescriptiveSummaryProduct *dest) {
  OrgApacheCommonsMathStatDescriptiveSummaryProduct_initialize();
  [((OrgApacheCommonsMathStatDescriptiveSummaryProduct *) nil_chk(dest)) setDataWithDoubleArray:[((OrgApacheCommonsMathStatDescriptiveSummaryProduct *) nil_chk(source)) getDataRef]];
  dest->n_ = source->n_;
  dest->value_ = source->value_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatDescriptiveSummaryProduct)
