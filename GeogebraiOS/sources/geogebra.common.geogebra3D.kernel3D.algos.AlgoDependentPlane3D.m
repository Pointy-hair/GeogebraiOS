//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentPlane3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoDependentPlane3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/Algos.h"
#include "geogebra/common/kernel/arithmetic/Equation.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/Inspecting.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/arithmetic/Polynomial.h"
#include "geogebra/common/plugin/Operation.h"
#include "java/lang/Throwable.h"

#define GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_serialVersionUID 1LL

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D () {
 @public
  GeogebraCommonKernelArithmeticEquation *equation_;
  id<GeogebraCommonKernelArithmeticNumberValue> num_;
  IOSObjectArray *ev_;
  GeogebraCommonKernelArithmeticExpressionNode *root_;
  GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *p_;
  GeogebraCommonKernelArithmeticExpressionNode *lhs0z_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, equation_, GeogebraCommonKernelArithmeticEquation *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, num_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, ev_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, root_, GeogebraCommonKernelArithmeticExpressionNode *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, p_, GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, lhs0z_, GeogebraCommonKernelArithmeticExpressionNode *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D, serialVersionUID, jlong)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelArithmeticEquation:(GeogebraCommonKernelArithmeticEquation *)equ {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

- (GeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return GeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_set_input_(self, [((GeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) getGeoElementVariables]);
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:p_];
  [self setDependencies];
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)getPlane {
  return p_;
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(self);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  if ([((GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(p_)) isLabelSet] || [((GeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) containsZ]) {
    return [((GeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithGeogebraCommonKernelStringTemplate:tpl];
  }
  if (lhs0z_ == nil) {
    GeogebraCommonKernelArithmeticExpressionNode *lhs = [((GeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) getLHS];
    GeogebraCommonKernelArithmeticFunctionVariable *z = [new_GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_withNSString_(kernel_, @"z") autorelease];
    GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_setAndConsume_lhs0z_(self, new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(kernel_, lhs, GeogebraCommonPluginOperationEnum_get_PLUS(), [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonPluginOperationEnum_withGeogebraCommonKernelArithmeticExpressionValue_(kernel_, [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withDouble_(kernel_, 0) autorelease], GeogebraCommonPluginOperationEnum_get_MULTIPLY(), z) autorelease]));
  }
  return [((GeogebraCommonKernelArithmeticEquation *) nil_chk(equation_)) toStringWithGeogebraCommonKernelStringTemplate:tpl withGeogebraCommonKernelArithmeticExpressionNode:lhs0z_];
}

- (void)dealloc {
  RELEASE_(equation_);
  RELEASE_(num_);
  RELEASE_(ev_);
  RELEASE_(root_);
  RELEASE_(p_);
  RELEASE_(lhs0z_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticEquation:", "AlgoDependentPlane3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getPlane", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_serialVersionUID },
    { "equation_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.Equation;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "ev_", NULL, 0x2, "[Lgeogebra.common.kernel.arithmetic.ExpressionValue;", NULL, NULL,  },
    { "root_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
    { "p_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", NULL, NULL,  },
    { "lhs0z_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D = { 2, "AlgoDependentPlane3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticEquation_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticEquation *equ) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_withBoolean_(self, cons, NO);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_setAndConsume_ev_(self, [IOSObjectArray newArrayWithLength:4 type:GeogebraCommonKernelArithmeticExpressionValue_class_()]);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_set_lhs0z_(self, nil);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_set_equation_(self, equ);
  GeogebraCommonKernelArithmeticPolynomial *lhs = [((GeogebraCommonKernelArithmeticEquation *) nil_chk(equ)) getNormalForm];
  IOSObjectArray_Set(self->ev_, 0, [((GeogebraCommonKernelArithmeticPolynomial *) nil_chk(lhs)) getCoefficientWithNSString:@"x"]);
  IOSObjectArray_Set(self->ev_, 1, [lhs getCoefficientWithNSString:@"y"]);
  IOSObjectArray_Set(self->ev_, 2, [lhs getCoefficientWithNSString:@"z"]);
  IOSObjectArray_Set(self->ev_, 3, [lhs getConstantCoefficient]);
  for (jint i = 0; i < 4; i++) {
    if (![((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) inspectWithGeogebraCommonKernelArithmeticInspecting:GeogebraCommonKernelArithmeticInspecting_get_dynamicGeosFinder_()]) {
      IOSObjectArray_Set(self->ev_, i, [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()]);
    }
    id<GeogebraCommonKernelArithmeticExpressionValue> eval = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, i))) evaluateWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()];
    [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(eval, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
  }
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) addToConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self withBoolean:NO];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_setAndConsume_p_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(self);
  [self->p_ setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticEquation_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelArithmeticEquation *equ) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticEquation_(self, cons, label, equ);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D *self) {
  @try {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(self->p_)) setEquationWithDouble:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(nil_chk(self->ev_), 0))) evaluateDouble] withDouble:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 1))) evaluateDouble] withDouble:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 2))) evaluateDouble] withDouble:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(IOSObjectArray_Get(self->ev_, 3))) evaluateDouble]];
  }
  @catch (JavaLangThrowable *e) {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(self->p_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDependentPlane3D)
