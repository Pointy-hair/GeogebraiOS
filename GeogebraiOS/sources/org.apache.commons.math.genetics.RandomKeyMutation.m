//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/genetics/RandomKeyMutation.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/genetics/AbstractListChromosome.h"
#include "org/apache/commons/math/genetics/Chromosome.h"
#include "org/apache/commons/math/genetics/GeneticAlgorithm.h"
#include "org/apache/commons/math/genetics/RandomKey.h"
#include "org/apache/commons/math/genetics/RandomKeyMutation.h"
#include "org/apache/commons/math/random/RandomGenerator.h"

@implementation OrgApacheCommonsMathGeneticsRandomKeyMutation

- (OrgApacheCommonsMathGeneticsChromosome *)mutateWithOrgApacheCommonsMathGeneticsChromosome:(OrgApacheCommonsMathGeneticsChromosome *)original {
  if (!([original isKindOfClass:[OrgApacheCommonsMathGeneticsRandomKey class]])) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_RANDOMKEY_MUTATION_WRONG_CLASS(), [IOSObjectArray arrayWithObjects:(id[]){ [[((OrgApacheCommonsMathGeneticsChromosome *) nil_chk(original)) getClass] getSimpleName] } count:1 type:NSObject_class_()]);
  }
  OrgApacheCommonsMathGeneticsRandomKey *originalRk = (OrgApacheCommonsMathGeneticsRandomKey *) check_class_cast(original, [OrgApacheCommonsMathGeneticsRandomKey class]);
  id<JavaUtilList> repr = [((OrgApacheCommonsMathGeneticsRandomKey *) nil_chk(originalRk)) getRepresentation];
  jint rInd = [((id<OrgApacheCommonsMathRandomRandomGenerator>) nil_chk(OrgApacheCommonsMathGeneticsGeneticAlgorithm_getRandomGenerator())) nextIntWithInt:[((id<JavaUtilList>) nil_chk(repr)) size]];
  id<JavaUtilList> newRepr = [new_JavaUtilArrayList_initWithJavaUtilCollection_(repr) autorelease];
  [newRepr setWithInt:rInd withId:JavaLangDouble_valueOfWithDouble_([((id<OrgApacheCommonsMathRandomRandomGenerator>) nil_chk(OrgApacheCommonsMathGeneticsGeneticAlgorithm_getRandomGenerator())) nextDouble])];
  return [originalRk newFixedLengthChromosomeWithJavaUtilList:newRepr];
}

- (instancetype)init {
  OrgApacheCommonsMathGeneticsRandomKeyMutation_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "mutateWithOrgApacheCommonsMathGeneticsChromosome:", "mutate", "Lorg.apache.commons.math.genetics.Chromosome;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathGeneticsRandomKeyMutation = { 2, "RandomKeyMutation", "org.apache.commons.math.genetics", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathGeneticsRandomKeyMutation;
}

@end

void OrgApacheCommonsMathGeneticsRandomKeyMutation_init(OrgApacheCommonsMathGeneticsRandomKeyMutation *self) {
  NSObject_init(self);
}

OrgApacheCommonsMathGeneticsRandomKeyMutation *new_OrgApacheCommonsMathGeneticsRandomKeyMutation_init() {
  OrgApacheCommonsMathGeneticsRandomKeyMutation *self = [OrgApacheCommonsMathGeneticsRandomKeyMutation alloc];
  OrgApacheCommonsMathGeneticsRandomKeyMutation_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathGeneticsRandomKeyMutation)
