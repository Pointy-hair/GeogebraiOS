//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationConicPartCircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoConicPartCircle.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationList.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/arith/EquationArithHelper.h"
#include "geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "geogebra/common/kernel/locusequ/elements/EquationConicPartCircle.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericConicPart.h"
#include "geogebra/common/kernel/locusequ/elements/EquationJoinPoints.h"

@implementation GeogebraCommonKernelLocusequElementsEquationConicPartCircle

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)conic
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

- (void)computeMatrix {
  GeogebraCommonKernelAlgosAlgoConicPartCircle *algo = (GeogebraCommonKernelAlgosAlgoConicPartCircle *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoConicPartCircle class]);
  GeogebraCommonKernelLocusequEquationPoint *center = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:[((GeogebraCommonKernelAlgosAlgoConicPartCircle *) nil_chk(algo)) getCenter]];
  GeogebraCommonKernelLocusequEquationPoint *startPoint = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:[algo getStartPoint]];
  [self setMatrixWithGeogebraCommonKernelLocusequArithEquationExpressionArray:[self matrixForCircleWithGeogebraCommonKernelLocusequEquationPoint:center withGeogebraCommonKernelLocusequArithEquationExpression:GeogebraCommonKernelLocusequArithEquationArithHelper_dist2WithGeogebraCommonKernelLocusequEquationPoint_withGeogebraCommonKernelLocusequEquationPoint_(center, startPoint)]];
}

- (GeogebraCommonKernelLocusequEquationList *)forPointImplWithGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)p {
  GeogebraCommonKernelLocusequEquationList *el = [super forPointImplWithGeogebraCommonKernelLocusequEquationPoint:p];
  if ([self isSector]) {
    GeogebraCommonKernelAlgosAlgoConicPartCircle *algo = (GeogebraCommonKernelAlgosAlgoConicPartCircle *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoConicPartCircle class]);
    GeogebraCommonKernelLocusequEquationPoint *center = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:[((GeogebraCommonKernelAlgosAlgoConicPartCircle *) nil_chk(algo)) getCenter]];
    GeogebraCommonKernelLocusequEquationPoint *startPoint = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:[algo getStartPoint]];
    GeogebraCommonKernelLocusequEquationPoint *endPoint = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:[algo getEndPoint]];
    [((GeogebraCommonKernelLocusequEquationList *) nil_chk(el)) addAllWithJavaUtilCollection:[((GeogebraCommonKernelLocusequElementsEquationJoinPoints *) [new_GeogebraCommonKernelLocusequElementsEquationJoinPoints_initWithGeogebraCommonKernelLocusequEquationPoint_withGeogebraCommonKernelLocusequEquationPoint_withGeogebraCommonKernelLocusequEquationScope_(center, startPoint, [self getScope]) autorelease]) forPointWithGeogebraCommonKernelLocusequEquationPoint:p]];
    [el addAllWithJavaUtilCollection:[((GeogebraCommonKernelLocusequElementsEquationJoinPoints *) [new_GeogebraCommonKernelLocusequElementsEquationJoinPoints_initWithGeogebraCommonKernelLocusequEquationPoint_withGeogebraCommonKernelLocusequEquationPoint_withGeogebraCommonKernelLocusequEquationScope_(center, endPoint, [self getScope]) autorelease]) forPointWithGeogebraCommonKernelLocusequEquationPoint:p]];
    el = [self orAllExpressionsWithGeogebraCommonKernelLocusequEquationList:el];
  }
  return el;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationConicPartCircle", NULL, 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
    { "forPointImplWithGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lgeogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationConicPartCircle = { 2, "EquationConicPartCircle", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationConicPartCircle;
}

@end

void GeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationConicPartCircle *self, GeogebraCommonKernelGeosGeoElement *conic, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericConicPart_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  [self computeMatrix];
}

GeogebraCommonKernelLocusequElementsEquationConicPartCircle *new_GeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *conic, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationConicPartCircle *self = [GeogebraCommonKernelLocusequElementsEquationConicPartCircle alloc];
  GeogebraCommonKernelLocusequElementsEquationConicPartCircle_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, conic, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationConicPartCircle)
