//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CommandDispatcherStats.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/commands/CommandDispatcherStats.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/statistics/CmdANOVA.h"
#include "geogebra/common/kernel/statistics/CmdBernoulli.h"
#include "geogebra/common/kernel/statistics/CmdBinomialDist.h"
#include "geogebra/common/kernel/statistics/CmdBoxPlot.h"
#include "geogebra/common/kernel/statistics/CmdCauchy.h"
#include "geogebra/common/kernel/statistics/CmdCell.h"
#include "geogebra/common/kernel/statistics/CmdCellRange.h"
#include "geogebra/common/kernel/statistics/CmdChiSquared.h"
#include "geogebra/common/kernel/statistics/CmdChiSquaredTest.h"
#include "geogebra/common/kernel/statistics/CmdClasses.h"
#include "geogebra/common/kernel/statistics/CmdColumn.h"
#include "geogebra/common/kernel/statistics/CmdColumnName.h"
#include "geogebra/common/kernel/statistics/CmdContingencyTable.h"
#include "geogebra/common/kernel/statistics/CmdCovariance.h"
#include "geogebra/common/kernel/statistics/CmdDotPlot.h"
#include "geogebra/common/kernel/statistics/CmdErlang.h"
#include "geogebra/common/kernel/statistics/CmdExponential.h"
#include "geogebra/common/kernel/statistics/CmdFDistribution.h"
#include "geogebra/common/kernel/statistics/CmdFillCells.h"
#include "geogebra/common/kernel/statistics/CmdFillColumn.h"
#include "geogebra/common/kernel/statistics/CmdFillRow.h"
#include "geogebra/common/kernel/statistics/CmdFit.h"
#include "geogebra/common/kernel/statistics/CmdFitExp.h"
#include "geogebra/common/kernel/statistics/CmdFitGrowth.h"
#include "geogebra/common/kernel/statistics/CmdFitImplicit.h"
#include "geogebra/common/kernel/statistics/CmdFitLineX.h"
#include "geogebra/common/kernel/statistics/CmdFitLineY.h"
#include "geogebra/common/kernel/statistics/CmdFitLog.h"
#include "geogebra/common/kernel/statistics/CmdFitLogistic.h"
#include "geogebra/common/kernel/statistics/CmdFitPoly.h"
#include "geogebra/common/kernel/statistics/CmdFitPow.h"
#include "geogebra/common/kernel/statistics/CmdFitSin.h"
#include "geogebra/common/kernel/statistics/CmdFrequency.h"
#include "geogebra/common/kernel/statistics/CmdFrequencyPolygon.h"
#include "geogebra/common/kernel/statistics/CmdFrequencyTable.h"
#include "geogebra/common/kernel/statistics/CmdGamma.h"
#include "geogebra/common/kernel/statistics/CmdGeometricMean.h"
#include "geogebra/common/kernel/statistics/CmdHarmonicMean.h"
#include "geogebra/common/kernel/statistics/CmdHistogram.h"
#include "geogebra/common/kernel/statistics/CmdHistogramRight.h"
#include "geogebra/common/kernel/statistics/CmdHyperGeometric.h"
#include "geogebra/common/kernel/statistics/CmdInverseBinomial.h"
#include "geogebra/common/kernel/statistics/CmdInverseCauchy.h"
#include "geogebra/common/kernel/statistics/CmdInverseChiSquared.h"
#include "geogebra/common/kernel/statistics/CmdInverseExponential.h"
#include "geogebra/common/kernel/statistics/CmdInverseFDistribution.h"
#include "geogebra/common/kernel/statistics/CmdInverseGamma.h"
#include "geogebra/common/kernel/statistics/CmdInverseHyperGeometric.h"
#include "geogebra/common/kernel/statistics/CmdInverseLogNormal.h"
#include "geogebra/common/kernel/statistics/CmdInverseLogistic.h"
#include "geogebra/common/kernel/statistics/CmdInverseNormal.h"
#include "geogebra/common/kernel/statistics/CmdInversePascal.h"
#include "geogebra/common/kernel/statistics/CmdInversePoisson.h"
#include "geogebra/common/kernel/statistics/CmdInverseTDistribution.h"
#include "geogebra/common/kernel/statistics/CmdInverseWeibull.h"
#include "geogebra/common/kernel/statistics/CmdInverseZipf.h"
#include "geogebra/common/kernel/statistics/CmdLogNormal.h"
#include "geogebra/common/kernel/statistics/CmdLogistic.h"
#include "geogebra/common/kernel/statistics/CmdMean.h"
#include "geogebra/common/kernel/statistics/CmdMeanX.h"
#include "geogebra/common/kernel/statistics/CmdMeanY.h"
#include "geogebra/common/kernel/statistics/CmdMedian.h"
#include "geogebra/common/kernel/statistics/CmdMode.h"
#include "geogebra/common/kernel/statistics/CmdNormal.h"
#include "geogebra/common/kernel/statistics/CmdNormalQuantilePlot.h"
#include "geogebra/common/kernel/statistics/CmdNormalize.h"
#include "geogebra/common/kernel/statistics/CmdNpR.h"
#include "geogebra/common/kernel/statistics/CmdOrdinalRank.h"
#include "geogebra/common/kernel/statistics/CmdPMCC.h"
#include "geogebra/common/kernel/statistics/CmdPascal.h"
#include "geogebra/common/kernel/statistics/CmdPercentile.h"
#include "geogebra/common/kernel/statistics/CmdPoisson.h"
#include "geogebra/common/kernel/statistics/CmdQ1.h"
#include "geogebra/common/kernel/statistics/CmdQ3.h"
#include "geogebra/common/kernel/statistics/CmdRSquare.h"
#include "geogebra/common/kernel/statistics/CmdRandomBinomial.h"
#include "geogebra/common/kernel/statistics/CmdRandomDiscrete.h"
#include "geogebra/common/kernel/statistics/CmdRandomElement.h"
#include "geogebra/common/kernel/statistics/CmdRandomNormal.h"
#include "geogebra/common/kernel/statistics/CmdRandomPoisson.h"
#include "geogebra/common/kernel/statistics/CmdRandomPolynomial.h"
#include "geogebra/common/kernel/statistics/CmdRandomUniform.h"
#include "geogebra/common/kernel/statistics/CmdResidualPlot.h"
#include "geogebra/common/kernel/statistics/CmdRootMeanSquare.h"
#include "geogebra/common/kernel/statistics/CmdRow.h"
#include "geogebra/common/kernel/statistics/CmdSD.h"
#include "geogebra/common/kernel/statistics/CmdSDX.h"
#include "geogebra/common/kernel/statistics/CmdSDY.h"
#include "geogebra/common/kernel/statistics/CmdSXX.h"
#include "geogebra/common/kernel/statistics/CmdSXY.h"
#include "geogebra/common/kernel/statistics/CmdSYY.h"
#include "geogebra/common/kernel/statistics/CmdSample.h"
#include "geogebra/common/kernel/statistics/CmdSampleSD.h"
#include "geogebra/common/kernel/statistics/CmdSampleSDX.h"
#include "geogebra/common/kernel/statistics/CmdSampleSDY.h"
#include "geogebra/common/kernel/statistics/CmdSampleVariance.h"
#include "geogebra/common/kernel/statistics/CmdShuffle.h"
#include "geogebra/common/kernel/statistics/CmdSigmaXX.h"
#include "geogebra/common/kernel/statistics/CmdSigmaXY.h"
#include "geogebra/common/kernel/statistics/CmdSigmaYY.h"
#include "geogebra/common/kernel/statistics/CmdSpearman.h"
#include "geogebra/common/kernel/statistics/CmdStemPlot.h"
#include "geogebra/common/kernel/statistics/CmdStepGraph.h"
#include "geogebra/common/kernel/statistics/CmdStickGraph.h"
#include "geogebra/common/kernel/statistics/CmdSumSquaredErrors.h"
#include "geogebra/common/kernel/statistics/CmdTDistribution.h"
#include "geogebra/common/kernel/statistics/CmdTMean2Estimate.h"
#include "geogebra/common/kernel/statistics/CmdTMeanEstimate.h"
#include "geogebra/common/kernel/statistics/CmdTTest.h"
#include "geogebra/common/kernel/statistics/CmdTTest2.h"
#include "geogebra/common/kernel/statistics/CmdTTestPaired.h"
#include "geogebra/common/kernel/statistics/CmdTiedRank.h"
#include "geogebra/common/kernel/statistics/CmdTriangular.h"
#include "geogebra/common/kernel/statistics/CmdUniform.h"
#include "geogebra/common/kernel/statistics/CmdVariance.h"
#include "geogebra/common/kernel/statistics/CmdWeibull.h"
#include "geogebra/common/kernel/statistics/CmdZMean2Estimate.h"
#include "geogebra/common/kernel/statistics/CmdZMean2Test.h"
#include "geogebra/common/kernel/statistics/CmdZMeanEstimate.h"
#include "geogebra/common/kernel/statistics/CmdZMeanTest.h"
#include "geogebra/common/kernel/statistics/CmdZProportion2Estimate.h"
#include "geogebra/common/kernel/statistics/CmdZProportion2Test.h"
#include "geogebra/common/kernel/statistics/CmdZProportionEstimate.h"
#include "geogebra/common/kernel/statistics/CmdZProportionTest.h"
#include "geogebra/common/kernel/statistics/CmdZipf.h"

@implementation GeogebraCommonKernelCommandsCommandDispatcherStats

- (GeogebraCommonKernelCommandsCommandProcessor *)dispatchWithGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)c
                                                                        withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  switch ([c ordinal]) {
    case GeogebraCommonKernelCommandsCommands_RandomElement:
    return [new_GeogebraCommonKernelStatisticsCmdRandomElement_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RandomPolynomial:
    return [new_GeogebraCommonKernelStatisticsCmdRandomPolynomial_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Classes:
    return [new_GeogebraCommonKernelStatisticsCmdClasses_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_OrdinalRank:
    return [new_GeogebraCommonKernelStatisticsCmdOrdinalRank_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TiedRank:
    return [new_GeogebraCommonKernelStatisticsCmdTiedRank_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_BoxPlot:
    return [new_GeogebraCommonKernelStatisticsCmdBoxPlot_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Histogram:
    return [new_GeogebraCommonKernelStatisticsCmdHistogram_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_HistogramRight:
    return [new_GeogebraCommonKernelStatisticsCmdHistogramRight_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_DotPlot:
    return [new_GeogebraCommonKernelStatisticsCmdDotPlot_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_StemPlot:
    return [new_GeogebraCommonKernelStatisticsCmdStemPlot_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_StickGraph:
    return [new_GeogebraCommonKernelStatisticsCmdStickGraph_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_StepGraph:
    return [new_GeogebraCommonKernelStatisticsCmdStepGraph_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ResidualPlot:
    return [new_GeogebraCommonKernelStatisticsCmdResidualPlot_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FrequencyPolygon:
    return [new_GeogebraCommonKernelStatisticsCmdFrequencyPolygon_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_NormalQuantilePlot:
    return [new_GeogebraCommonKernelStatisticsCmdNormalQuantilePlot_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FrequencyTable:
    return [new_GeogebraCommonKernelStatisticsCmdFrequencyTable_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ContingencyTable:
    return [new_GeogebraCommonKernelStatisticsCmdContingencyTable_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Mean:
    return [new_GeogebraCommonKernelStatisticsCmdMean_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Variance:
    return [new_GeogebraCommonKernelStatisticsCmdVariance_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SD:
    return [new_GeogebraCommonKernelStatisticsCmdSD_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SampleVariance:
    return [new_GeogebraCommonKernelStatisticsCmdSampleVariance_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SampleSD:
    return [new_GeogebraCommonKernelStatisticsCmdSampleSD_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Median:
    return [new_GeogebraCommonKernelStatisticsCmdMedian_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Q1:
    return [new_GeogebraCommonKernelStatisticsCmdQ1_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Q3:
    return [new_GeogebraCommonKernelStatisticsCmdQ3_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Mode:
    return [new_GeogebraCommonKernelStatisticsCmdMode_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SigmaXX:
    return [new_GeogebraCommonKernelStatisticsCmdSigmaXX_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SigmaXY:
    return [new_GeogebraCommonKernelStatisticsCmdSigmaXY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SigmaYY:
    return [new_GeogebraCommonKernelStatisticsCmdSigmaYY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Covariance:
    return [new_GeogebraCommonKernelStatisticsCmdCovariance_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SXY:
    return [new_GeogebraCommonKernelStatisticsCmdSXY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SXX:
    return [new_GeogebraCommonKernelStatisticsCmdSXX_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SYY:
    return [new_GeogebraCommonKernelStatisticsCmdSYY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_MeanX:
    return [new_GeogebraCommonKernelStatisticsCmdMeanX_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_MeanY:
    return [new_GeogebraCommonKernelStatisticsCmdMeanY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_CorrelationCoefficient:
    case GeogebraCommonKernelCommandsCommands_PMCC:
    return [new_GeogebraCommonKernelStatisticsCmdPMCC_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SampleSDX:
    return [new_GeogebraCommonKernelStatisticsCmdSampleSDX_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SampleSDY:
    return [new_GeogebraCommonKernelStatisticsCmdSampleSDY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SDX:
    return [new_GeogebraCommonKernelStatisticsCmdSDX_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SDY:
    return [new_GeogebraCommonKernelStatisticsCmdSDY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitLine:
    case GeogebraCommonKernelCommandsCommands_FitLineY:
    return [new_GeogebraCommonKernelStatisticsCmdFitLineY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitLineX:
    return [new_GeogebraCommonKernelStatisticsCmdFitLineX_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitPoly:
    return [new_GeogebraCommonKernelStatisticsCmdFitPoly_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitExp:
    return [new_GeogebraCommonKernelStatisticsCmdFitExp_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitLog:
    return [new_GeogebraCommonKernelStatisticsCmdFitLog_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitPow:
    return [new_GeogebraCommonKernelStatisticsCmdFitPow_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Fit:
    return [new_GeogebraCommonKernelStatisticsCmdFit_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitImplicit:
    return [new_GeogebraCommonKernelStatisticsCmdFitImplicit_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitGrowth:
    return [new_GeogebraCommonKernelStatisticsCmdFitGrowth_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitSin:
    return [new_GeogebraCommonKernelStatisticsCmdFitSin_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FitLogistic:
    return [new_GeogebraCommonKernelStatisticsCmdFitLogistic_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SumSquaredErrors:
    return [new_GeogebraCommonKernelStatisticsCmdSumSquaredErrors_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RSquare:
    return [new_GeogebraCommonKernelStatisticsCmdRSquare_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Sample:
    return [new_GeogebraCommonKernelStatisticsCmdSample_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Shuffle:
    return [new_GeogebraCommonKernelStatisticsCmdShuffle_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Spearman:
    return [new_GeogebraCommonKernelStatisticsCmdSpearman_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TTest:
    return [new_GeogebraCommonKernelStatisticsCmdTTest_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TTestPaired:
    return [new_GeogebraCommonKernelStatisticsCmdTTestPaired_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TTest2:
    return [new_GeogebraCommonKernelStatisticsCmdTTest2_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TMeanEstimate:
    return [new_GeogebraCommonKernelStatisticsCmdTMeanEstimate_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TMean2Estimate:
    return [new_GeogebraCommonKernelStatisticsCmdTMean2Estimate_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ChiSquaredTest:
    return [new_GeogebraCommonKernelStatisticsCmdChiSquaredTest_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ANOVA:
    return [new_GeogebraCommonKernelStatisticsCmdANOVA_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Percentile:
    return [new_GeogebraCommonKernelStatisticsCmdPercentile_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_GeometricMean:
    return [new_GeogebraCommonKernelStatisticsCmdGeometricMean_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_HarmonicMean:
    return [new_GeogebraCommonKernelStatisticsCmdHarmonicMean_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RootMeanSquare:
    return [new_GeogebraCommonKernelStatisticsCmdRootMeanSquare_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RandomNormal:
    return [new_GeogebraCommonKernelStatisticsCmdRandomNormal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RandomUniform:
    return [new_GeogebraCommonKernelStatisticsCmdRandomUniform_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RandomDiscrete:
    return [new_GeogebraCommonKernelStatisticsCmdRandomDiscrete_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RandomBinomial:
    return [new_GeogebraCommonKernelStatisticsCmdRandomBinomial_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RandomPoisson:
    return [new_GeogebraCommonKernelStatisticsCmdRandomPoisson_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Normal:
    return [new_GeogebraCommonKernelStatisticsCmdNormal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_LogNormal:
    return [new_GeogebraCommonKernelStatisticsCmdLogNormal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseLogNormal:
    return [new_GeogebraCommonKernelStatisticsCmdInverseLogNormal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Logistic:
    return [new_GeogebraCommonKernelStatisticsCmdLogistic_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseLogistic:
    return [new_GeogebraCommonKernelStatisticsCmdInverseLogistic_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseNormal:
    return [new_GeogebraCommonKernelStatisticsCmdInverseNormal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_BinomialDist:
    return [new_GeogebraCommonKernelStatisticsCmdBinomialDist_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Bernoulli:
    return [new_GeogebraCommonKernelStatisticsCmdBernoulli_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseBinomial:
    return [new_GeogebraCommonKernelStatisticsCmdInverseBinomial_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TDistribution:
    return [new_GeogebraCommonKernelStatisticsCmdTDistribution_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseTDistribution:
    return [new_GeogebraCommonKernelStatisticsCmdInverseTDistribution_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FDistribution:
    return [new_GeogebraCommonKernelStatisticsCmdFDistribution_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseFDistribution:
    return [new_GeogebraCommonKernelStatisticsCmdInverseFDistribution_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Gamma:
    return [new_GeogebraCommonKernelStatisticsCmdGamma_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseGamma:
    return [new_GeogebraCommonKernelStatisticsCmdInverseGamma_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Cauchy:
    return [new_GeogebraCommonKernelStatisticsCmdCauchy_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseCauchy:
    return [new_GeogebraCommonKernelStatisticsCmdInverseCauchy_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ChiSquared:
    return [new_GeogebraCommonKernelStatisticsCmdChiSquared_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseChiSquared:
    return [new_GeogebraCommonKernelStatisticsCmdInverseChiSquared_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Exponential:
    return [new_GeogebraCommonKernelStatisticsCmdExponential_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseExponential:
    return [new_GeogebraCommonKernelStatisticsCmdInverseExponential_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_HyperGeometric:
    return [new_GeogebraCommonKernelStatisticsCmdHyperGeometric_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseHyperGeometric:
    return [new_GeogebraCommonKernelStatisticsCmdInverseHyperGeometric_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Pascal:
    return [new_GeogebraCommonKernelStatisticsCmdPascal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InversePascal:
    return [new_GeogebraCommonKernelStatisticsCmdInversePascal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Poisson:
    return [new_GeogebraCommonKernelStatisticsCmdPoisson_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InversePoisson:
    return [new_GeogebraCommonKernelStatisticsCmdInversePoisson_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Weibull:
    return [new_GeogebraCommonKernelStatisticsCmdWeibull_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseWeibull:
    return [new_GeogebraCommonKernelStatisticsCmdInverseWeibull_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Zipf:
    return [new_GeogebraCommonKernelStatisticsCmdZipf_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_InverseZipf:
    return [new_GeogebraCommonKernelStatisticsCmdInverseZipf_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Triangular:
    return [new_GeogebraCommonKernelStatisticsCmdTriangular_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Uniform:
    return [new_GeogebraCommonKernelStatisticsCmdUniform_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Erlang:
    return [new_GeogebraCommonKernelStatisticsCmdErlang_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_CellRange:
    return [new_GeogebraCommonKernelStatisticsCmdCellRange_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Row:
    return [new_GeogebraCommonKernelStatisticsCmdRow_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Column:
    return [new_GeogebraCommonKernelStatisticsCmdColumn_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ColumnName:
    return [new_GeogebraCommonKernelStatisticsCmdColumnName_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FillRow:
    return [new_GeogebraCommonKernelStatisticsCmdFillRow_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FillColumn:
    return [new_GeogebraCommonKernelStatisticsCmdFillColumn_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FillCells:
    return [new_GeogebraCommonKernelStatisticsCmdFillCells_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Cell:
    return [new_GeogebraCommonKernelStatisticsCmdCell_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Frequency:
    return [new_GeogebraCommonKernelStatisticsCmdFrequency_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZProportionTest:
    return [new_GeogebraCommonKernelStatisticsCmdZProportionTest_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZProportion2Test:
    return [new_GeogebraCommonKernelStatisticsCmdZProportion2Test_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZProportionEstimate:
    return [new_GeogebraCommonKernelStatisticsCmdZProportionEstimate_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZProportion2Estimate:
    return [new_GeogebraCommonKernelStatisticsCmdZProportion2Estimate_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZMeanEstimate:
    return [new_GeogebraCommonKernelStatisticsCmdZMeanEstimate_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZMean2Estimate:
    return [new_GeogebraCommonKernelStatisticsCmdZMean2Estimate_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZMeanTest:
    return [new_GeogebraCommonKernelStatisticsCmdZMeanTest_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ZMean2Test:
    return [new_GeogebraCommonKernelStatisticsCmdZMean2Test_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_nPr:
    return [new_GeogebraCommonKernelStatisticsCmdNpR_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Normalize:
    return [new_GeogebraCommonKernelStatisticsCmdNormalize_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
  }
  return nil;
}

- (instancetype)init {
  GeogebraCommonKernelCommandsCommandDispatcherStats_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispatchWithGeogebraCommonKernelCommandsCommandsEnum:withGeogebraCommonKernelKernel:", "dispatch", "Lgeogebra.common.kernel.commands.CommandProcessor;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCommandDispatcherStats = { 2, "CommandDispatcherStats", "geogebra.common.kernel.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCommandDispatcherStats;
}

@end

void GeogebraCommonKernelCommandsCommandDispatcherStats_init(GeogebraCommonKernelCommandsCommandDispatcherStats *self) {
  NSObject_init(self);
}

GeogebraCommonKernelCommandsCommandDispatcherStats *new_GeogebraCommonKernelCommandsCommandDispatcherStats_init() {
  GeogebraCommonKernelCommandsCommandDispatcherStats *self = [GeogebraCommonKernelCommandsCommandDispatcherStats alloc];
  GeogebraCommonKernelCommandsCommandDispatcherStats_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCommandDispatcherStats)
