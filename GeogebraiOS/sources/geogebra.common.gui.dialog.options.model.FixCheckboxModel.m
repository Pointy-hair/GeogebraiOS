//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/FixCheckboxModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/BooleanOptionModel.h"
#include "geogebra/common/gui/dialog/options/model/FixCheckboxModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"

@interface GeogebraCommonGuiDialogOptionsModelFixCheckboxModel ()

- (GeogebraCommonKernelGeosGeoBoolean *)getBooleanAtWithInt:(jint)index;

@end

__attribute__((unused)) static GeogebraCommonKernelGeosGeoBoolean *GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_getBooleanAtWithInt_(GeogebraCommonGuiDialogOptionsModelFixCheckboxModel *self, jint index);

@implementation GeogebraCommonGuiDialogOptionsModelFixCheckboxModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener>)listener {
  GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  return self;
}

- (GeogebraCommonKernelGeosGeoBoolean *)getBooleanAtWithInt:(jint)index {
  return GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_getBooleanAtWithInt_(self, index);
}

- (jboolean)getValueAtWithInt:(jint)index {
  return [((GeogebraCommonKernelGeosGeoBoolean *) nil_chk(GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_getBooleanAtWithInt_(self, index))) isCheckboxFixed];
}

- (jboolean)isValidAtWithInt:(jint)index {
  id geo = [self getObjectAtWithInt:index];
  if ([geo isKindOfClass:[GeogebraCommonKernelGeosGeoBoolean class]]) {
    GeogebraCommonKernelGeosGeoBoolean *bool_ = (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(geo, [GeogebraCommonKernelGeosGeoBoolean class]);
    if (![((GeogebraCommonKernelGeosGeoBoolean *) nil_chk(bool_)) isIndependent]) {
      return NO;
    }
  }
  else {
    return NO;
  }
  return YES;
}

- (void)applyWithInt:(jint)index
         withBoolean:(jboolean)value {
  GeogebraCommonKernelGeosGeoBoolean *bool_ = GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_getBooleanAtWithInt_(self, index);
  [((GeogebraCommonKernelGeosGeoBoolean *) nil_chk(bool_)) setCheckboxFixedWithBoolean:value];
  [bool_ updateRepaint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener:", "FixCheckboxModel", NULL, 0x1, NULL, NULL },
    { "getBooleanAtWithInt:", "getBooleanAt", "Lgeogebra.common.kernel.geos.GeoBoolean;", 0x2, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "Z", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withBoolean:", "apply", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelFixCheckboxModel = { 2, "FixCheckboxModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelFixCheckboxModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(GeogebraCommonGuiDialogOptionsModelFixCheckboxModel *self, id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
}

GeogebraCommonGuiDialogOptionsModelFixCheckboxModel *new_GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener> listener) {
  GeogebraCommonGuiDialogOptionsModelFixCheckboxModel *self = [GeogebraCommonGuiDialogOptionsModelFixCheckboxModel alloc];
  GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
  return self;
}

GeogebraCommonKernelGeosGeoBoolean *GeogebraCommonGuiDialogOptionsModelFixCheckboxModel_getBooleanAtWithInt_(GeogebraCommonGuiDialogOptionsModelFixCheckboxModel *self, jint index) {
  return (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast([self getObjectAtWithInt:index], [GeogebraCommonKernelGeosGeoBoolean class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelFixCheckboxModel)
