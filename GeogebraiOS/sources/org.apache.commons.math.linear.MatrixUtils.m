//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/linear/MatrixUtils.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/Field.h"
#include "java/math/BigDecimal.h"
#include "java/util/Arrays.h"
#include "org/apache/commons/math/Field.h"
#include "org/apache/commons/math/FieldElement.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/fraction/BigFraction.h"
#include "org/apache/commons/math/fraction/Fraction.h"
#include "org/apache/commons/math/linear/AnyMatrix.h"
#include "org/apache/commons/math/linear/Array2DRowFieldMatrix.h"
#include "org/apache/commons/math/linear/Array2DRowRealMatrix.h"
#include "org/apache/commons/math/linear/ArrayFieldVector.h"
#include "org/apache/commons/math/linear/ArrayRealVector.h"
#include "org/apache/commons/math/linear/BigMatrix.h"
#include "org/apache/commons/math/linear/BigMatrixImpl.h"
#include "org/apache/commons/math/linear/BlockFieldMatrix.h"
#include "org/apache/commons/math/linear/BlockRealMatrix.h"
#include "org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.h"
#include "org/apache/commons/math/linear/FieldMatrix.h"
#include "org/apache/commons/math/linear/FieldVector.h"
#include "org/apache/commons/math/linear/MatrixIndexException.h"
#include "org/apache/commons/math/linear/MatrixUtils.h"
#include "org/apache/commons/math/linear/RealMatrix.h"
#include "org/apache/commons/math/linear/RealVector.h"

@interface OrgApacheCommonsMathLinearMatrixUtils ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheCommonsMathLinearMatrixUtils_init(OrgApacheCommonsMathLinearMatrixUtils *self);

__attribute__((unused)) static OrgApacheCommonsMathLinearMatrixUtils *new_OrgApacheCommonsMathLinearMatrixUtils_init() NS_RETURNS_RETAINED;

@interface OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter : OrgApacheCommonsMathLinearDefaultFieldMatrixPreservingVisitor {
 @public
  IOSObjectArray *data_;
}

- (instancetype)init;

- (void)startWithInt:(jint)rows
             withInt:(jint)columns
             withInt:(jint)startRow
             withInt:(jint)endRow
             withInt:(jint)startColumn
             withInt:(jint)endColumn;

- (void)visitWithInt:(jint)row
             withInt:(jint)column
withOrgApacheCommonsMathFieldElement:(OrgApacheCommonsMathFractionFraction *)value;

- (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)getConvertedMatrix;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter, data_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_init(OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter *self);

__attribute__((unused)) static OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter *new_OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter)

@interface OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter : OrgApacheCommonsMathLinearDefaultFieldMatrixPreservingVisitor {
 @public
  IOSObjectArray *data_;
}

- (instancetype)init;

- (void)startWithInt:(jint)rows
             withInt:(jint)columns
             withInt:(jint)startRow
             withInt:(jint)endRow
             withInt:(jint)startColumn
             withInt:(jint)endColumn;

- (void)visitWithInt:(jint)row
             withInt:(jint)column
withOrgApacheCommonsMathFieldElement:(OrgApacheCommonsMathFractionBigFraction *)value;

- (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)getConvertedMatrix;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter)

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter, data_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_init(OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter *self);

__attribute__((unused)) static OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter *new_OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter)

@implementation OrgApacheCommonsMathLinearMatrixUtils

- (instancetype)init {
  OrgApacheCommonsMathLinearMatrixUtils_init(self);
  return self;
}

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealMatrixWithInt:(jint)rows
                                                            withInt:(jint)columns {
  return OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(rows, columns);
}

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldMatrixWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field
                                                                                    withInt:(jint)rows
                                                                                    withInt:(jint)columns {
  return OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathField_withInt_withInt_(field, rows, columns);
}

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealMatrixWithDoubleArray2:(IOSObjectArray *)data {
  return OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithDoubleArray2_(data);
}

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldMatrixWithOrgApacheCommonsMathFieldElementArray2:(IOSObjectArray *)data {
  return OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathFieldElementArray2_(data);
}

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealIdentityMatrixWithInt:(jint)dimension {
  return OrgApacheCommonsMathLinearMatrixUtils_createRealIdentityMatrixWithInt_(dimension);
}

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldIdentityMatrixWithOrgApacheCommonsMathField:(id<OrgApacheCommonsMathField>)field
                                                                                            withInt:(jint)dimension {
  return OrgApacheCommonsMathLinearMatrixUtils_createFieldIdentityMatrixWithOrgApacheCommonsMathField_withInt_(field, dimension);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigIdentityMatrixWithInt:(jint)dimension {
  return OrgApacheCommonsMathLinearMatrixUtils_createBigIdentityMatrixWithInt_(dimension);
}

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRealDiagonalMatrixWithDoubleArray:(IOSDoubleArray *)diagonal {
  return OrgApacheCommonsMathLinearMatrixUtils_createRealDiagonalMatrixWithDoubleArray_(diagonal);
}

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createFieldDiagonalMatrixWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)diagonal {
  return OrgApacheCommonsMathLinearMatrixUtils_createFieldDiagonalMatrixWithOrgApacheCommonsMathFieldElementArray_(diagonal);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithDoubleArray2:(IOSObjectArray *)data {
  return OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithDoubleArray2_(data);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithJavaMathBigDecimalArray2:(IOSObjectArray *)data {
  return OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithJavaMathBigDecimalArray2_(data);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithJavaMathBigDecimalArray2:(IOSObjectArray *)data
                                                                           withBoolean:(jboolean)copyArray {
  return OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithJavaMathBigDecimalArray2_withBoolean_(data, copyArray);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createBigMatrixWithNSStringArray2:(IOSObjectArray *)data {
  return OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithNSStringArray2_(data);
}

+ (id<OrgApacheCommonsMathLinearRealVector>)createRealVectorWithDoubleArray:(IOSDoubleArray *)data {
  return OrgApacheCommonsMathLinearMatrixUtils_createRealVectorWithDoubleArray_(data);
}

+ (id<OrgApacheCommonsMathLinearFieldVector>)createFieldVectorWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)data {
  return OrgApacheCommonsMathLinearMatrixUtils_createFieldVectorWithOrgApacheCommonsMathFieldElementArray_(data);
}

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createRowRealMatrixWithDoubleArray:(IOSDoubleArray *)rowData {
  return OrgApacheCommonsMathLinearMatrixUtils_createRowRealMatrixWithDoubleArray_(rowData);
}

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createRowFieldMatrixWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)rowData {
  return OrgApacheCommonsMathLinearMatrixUtils_createRowFieldMatrixWithOrgApacheCommonsMathFieldElementArray_(rowData);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createRowBigMatrixWithDoubleArray:(IOSDoubleArray *)rowData {
  return OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithDoubleArray_(rowData);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createRowBigMatrixWithJavaMathBigDecimalArray:(IOSObjectArray *)rowData {
  return OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithJavaMathBigDecimalArray_(rowData);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createRowBigMatrixWithNSStringArray:(IOSObjectArray *)rowData {
  return OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithNSStringArray_(rowData);
}

+ (id<OrgApacheCommonsMathLinearRealMatrix>)createColumnRealMatrixWithDoubleArray:(IOSDoubleArray *)columnData {
  return OrgApacheCommonsMathLinearMatrixUtils_createColumnRealMatrixWithDoubleArray_(columnData);
}

+ (id<OrgApacheCommonsMathLinearFieldMatrix>)createColumnFieldMatrixWithOrgApacheCommonsMathFieldElementArray:(IOSObjectArray *)columnData {
  return OrgApacheCommonsMathLinearMatrixUtils_createColumnFieldMatrixWithOrgApacheCommonsMathFieldElementArray_(columnData);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createColumnBigMatrixWithDoubleArray:(IOSDoubleArray *)columnData {
  return OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithDoubleArray_(columnData);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createColumnBigMatrixWithJavaMathBigDecimalArray:(IOSObjectArray *)columnData {
  return OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithJavaMathBigDecimalArray_(columnData);
}

+ (id<OrgApacheCommonsMathLinearBigMatrix>)createColumnBigMatrixWithNSStringArray:(IOSObjectArray *)columnData {
  return OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithNSStringArray_(columnData);
}

+ (void)checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                     withInt:(jint)row {
  OrgApacheCommonsMathLinearMatrixUtils_checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, row);
}

+ (void)checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                        withInt:(jint)column {
  OrgApacheCommonsMathLinearMatrixUtils_checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, column);
}

+ (void)checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                           withInt:(jint)startRow
                                                           withInt:(jint)endRow
                                                           withInt:(jint)startColumn
                                                           withInt:(jint)endColumn {
  OrgApacheCommonsMathLinearMatrixUtils_checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_withInt_withInt_withInt_(m, startRow, endRow, startColumn, endColumn);
}

+ (void)checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)m
                                                      withIntArray:(IOSIntArray *)selectedRows
                                                      withIntArray:(IOSIntArray *)selectedColumns {
  OrgApacheCommonsMathLinearMatrixUtils_checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix_withIntArray_withIntArray_(m, selectedRows, selectedColumns);
}

+ (void)checkAdditionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)left
                               withOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)right {
  OrgApacheCommonsMathLinearMatrixUtils_checkAdditionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(left, right);
}

+ (void)checkSubtractionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)left
                                  withOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)right {
  OrgApacheCommonsMathLinearMatrixUtils_checkSubtractionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(left, right);
}

+ (void)checkMultiplicationCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)left
                                     withOrgApacheCommonsMathLinearAnyMatrix:(id<OrgApacheCommonsMathLinearAnyMatrix>)right {
  OrgApacheCommonsMathLinearMatrixUtils_checkMultiplicationCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(left, right);
}

+ (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)fractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix:(id<OrgApacheCommonsMathLinearFieldMatrix>)m {
  return OrgApacheCommonsMathLinearMatrixUtils_fractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(m);
}

+ (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix:(id<OrgApacheCommonsMathLinearFieldMatrix>)m {
  return OrgApacheCommonsMathLinearMatrixUtils_bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(m);
}

+ (void)serializeRealVectorWithOrgApacheCommonsMathLinearRealVector:(id<OrgApacheCommonsMathLinearRealVector>)vector
                                       withJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos {
  OrgApacheCommonsMathLinearMatrixUtils_serializeRealVectorWithOrgApacheCommonsMathLinearRealVector_withJavaIoObjectOutputStream_(vector, oos);
}

+ (void)deserializeRealVectorWithId:(id)instance
                       withNSString:(NSString *)fieldName
        withJavaIoObjectInputStream:(JavaIoObjectInputStream *)ois {
  OrgApacheCommonsMathLinearMatrixUtils_deserializeRealVectorWithId_withNSString_withJavaIoObjectInputStream_(instance, fieldName, ois);
}

+ (void)serializeRealMatrixWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix
                                       withJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)oos {
  OrgApacheCommonsMathLinearMatrixUtils_serializeRealMatrixWithOrgApacheCommonsMathLinearRealMatrix_withJavaIoObjectOutputStream_(matrix, oos);
}

+ (void)deserializeRealMatrixWithId:(id)instance
                       withNSString:(NSString *)fieldName
        withJavaIoObjectInputStream:(JavaIoObjectInputStream *)ois {
  OrgApacheCommonsMathLinearMatrixUtils_deserializeRealMatrixWithId_withNSString_withJavaIoObjectInputStream_(instance, fieldName, ois);
}

+ (IOSObjectArray *)__annotations_createBigIdentityMatrixWithInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createBigMatrixWithDoubleArray2_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createBigMatrixWithJavaMathBigDecimalArray2_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createBigMatrixWithJavaMathBigDecimalArray2_withBoolean_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createBigMatrixWithNSStringArray2_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createRowBigMatrixWithDoubleArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createRowBigMatrixWithJavaMathBigDecimalArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createRowBigMatrixWithNSStringArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createColumnBigMatrixWithDoubleArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createColumnBigMatrixWithJavaMathBigDecimalArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_createColumnBigMatrixWithNSStringArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MatrixUtils", NULL, 0x2, NULL, NULL },
    { "createRealMatrixWithInt:withInt:", "createRealMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x9, NULL, NULL },
    { "createFieldMatrixWithOrgApacheCommonsMathField:withInt:withInt:", "createFieldMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x9, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>(Lorg/apache/commons/math/Field<TT;>;II)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "createRealMatrixWithDoubleArray2:", "createRealMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x9, NULL, NULL },
    { "createFieldMatrixWithOrgApacheCommonsMathFieldElementArray2:", "createFieldMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x9, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>([[TT;)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "createRealIdentityMatrixWithInt:", "createRealIdentityMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x9, NULL, NULL },
    { "createFieldIdentityMatrixWithOrgApacheCommonsMathField:withInt:", "createFieldIdentityMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x9, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>(Lorg/apache/commons/math/Field<TT;>;I)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "createBigIdentityMatrixWithInt:", "createBigIdentityMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createRealDiagonalMatrixWithDoubleArray:", "createRealDiagonalMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x9, NULL, NULL },
    { "createFieldDiagonalMatrixWithOrgApacheCommonsMathFieldElementArray:", "createFieldDiagonalMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x9, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>([TT;)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "createBigMatrixWithDoubleArray2:", "createBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createBigMatrixWithJavaMathBigDecimalArray2:", "createBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createBigMatrixWithJavaMathBigDecimalArray2:withBoolean:", "createBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createBigMatrixWithNSStringArray2:", "createBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createRealVectorWithDoubleArray:", "createRealVector", "Lorg.apache.commons.math.linear.RealVector;", 0x9, NULL, NULL },
    { "createFieldVectorWithOrgApacheCommonsMathFieldElementArray:", "createFieldVector", "Lorg.apache.commons.math.linear.FieldVector;", 0x9, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>([TT;)Lorg/apache/commons/math/linear/FieldVector<TT;>;" },
    { "createRowRealMatrixWithDoubleArray:", "createRowRealMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x9, NULL, NULL },
    { "createRowFieldMatrixWithOrgApacheCommonsMathFieldElementArray:", "createRowFieldMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x9, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>([TT;)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "createRowBigMatrixWithDoubleArray:", "createRowBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createRowBigMatrixWithJavaMathBigDecimalArray:", "createRowBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createRowBigMatrixWithNSStringArray:", "createRowBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createColumnRealMatrixWithDoubleArray:", "createColumnRealMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x9, NULL, NULL },
    { "createColumnFieldMatrixWithOrgApacheCommonsMathFieldElementArray:", "createColumnFieldMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x9, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>([TT;)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "createColumnBigMatrixWithDoubleArray:", "createColumnBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createColumnBigMatrixWithJavaMathBigDecimalArray:", "createColumnBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "createColumnBigMatrixWithNSStringArray:", "createColumnBigMatrix", "Lorg.apache.commons.math.linear.BigMatrix;", 0x9, NULL, NULL },
    { "checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix:withInt:", "checkRowIndex", "V", 0x9, NULL, NULL },
    { "checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix:withInt:", "checkColumnIndex", "V", 0x9, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix:withInt:withInt:withInt:withInt:", "checkSubMatrixIndex", "V", 0x9, NULL, NULL },
    { "checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix:withIntArray:withIntArray:", "checkSubMatrixIndex", "V", 0x9, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "checkAdditionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:withOrgApacheCommonsMathLinearAnyMatrix:", "checkAdditionCompatible", "V", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "checkSubtractionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:withOrgApacheCommonsMathLinearAnyMatrix:", "checkSubtractionCompatible", "V", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "checkMultiplicationCompatibleWithOrgApacheCommonsMathLinearAnyMatrix:withOrgApacheCommonsMathLinearAnyMatrix:", "checkMultiplicationCompatible", "V", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "fractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix:", "fractionMatrixToRealMatrix", "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", 0x9, NULL, NULL },
    { "bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix:", "bigFractionMatrixToRealMatrix", "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", 0x9, NULL, NULL },
    { "serializeRealVectorWithOrgApacheCommonsMathLinearRealVector:withJavaIoObjectOutputStream:", "serializeRealVector", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "deserializeRealVectorWithId:withNSString:withJavaIoObjectInputStream:", "deserializeRealVector", "V", 0x9, "Ljava.lang.ClassNotFoundException;Ljava.io.IOException;", NULL },
    { "serializeRealMatrixWithOrgApacheCommonsMathLinearRealMatrix:withJavaIoObjectOutputStream:", "serializeRealMatrix", "V", 0x9, "Ljava.io.IOException;", NULL },
    { "deserializeRealMatrixWithId:withNSString:withJavaIoObjectInputStream:", "deserializeRealMatrix", "V", 0x9, "Ljava.lang.ClassNotFoundException;Ljava.io.IOException;", NULL },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter;", "Lorg.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearMatrixUtils = { 2, "MatrixUtils", "org.apache.commons.math.linear", NULL, 0x1, 39, methods, 0, NULL, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgApacheCommonsMathLinearMatrixUtils;
}

@end

void OrgApacheCommonsMathLinearMatrixUtils_init(OrgApacheCommonsMathLinearMatrixUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsMathLinearMatrixUtils *new_OrgApacheCommonsMathLinearMatrixUtils_init() {
  OrgApacheCommonsMathLinearMatrixUtils *self = [OrgApacheCommonsMathLinearMatrixUtils alloc];
  OrgApacheCommonsMathLinearMatrixUtils_init(self);
  return self;
}

id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(jint rows, jint columns) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return (rows * columns <= 4096) ? [new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithInt_withInt_(rows, columns) autorelease] : [new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithInt_withInt_(rows, columns) autorelease];
}

id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathField_withInt_withInt_(id<OrgApacheCommonsMathField> field, jint rows, jint columns) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return (rows * columns <= 4096) ? [new_OrgApacheCommonsMathLinearArray2DRowFieldMatrix_initWithOrgApacheCommonsMathField_withInt_withInt_(field, rows, columns) autorelease] : [new_OrgApacheCommonsMathLinearBlockFieldMatrix_initWithOrgApacheCommonsMathField_withInt_withInt_(field, rows, columns) autorelease];
}

id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithDoubleArray2_(IOSObjectArray *data) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return (((IOSObjectArray *) nil_chk(data))->size_ * ((IOSDoubleArray *) nil_chk(IOSObjectArray_Get(data, 0)))->size_ <= 4096) ? [new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_(data) autorelease] : [new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithDoubleArray2_(data) autorelease];
}

id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathFieldElementArray2_(IOSObjectArray *data) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return (((IOSObjectArray *) nil_chk(data))->size_ * ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(data, 0)))->size_ <= 4096) ? [new_OrgApacheCommonsMathLinearArray2DRowFieldMatrix_initWithOrgApacheCommonsMathFieldElementArray2_(data) autorelease] : [new_OrgApacheCommonsMathLinearBlockFieldMatrix_initWithOrgApacheCommonsMathFieldElementArray2_(data) autorelease];
}

id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealIdentityMatrixWithInt_(jint dimension) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  id<OrgApacheCommonsMathLinearRealMatrix> m = OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(dimension, dimension);
  for (jint i = 0; i < dimension; ++i) {
    [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(m)) setEntryWithInt:i withInt:i withDouble:1.0];
  }
  return m;
}

id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldIdentityMatrixWithOrgApacheCommonsMathField_withInt_(id<OrgApacheCommonsMathField> field, jint dimension) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  id<OrgApacheCommonsMathFieldElement> zero = [((id<OrgApacheCommonsMathField>) nil_chk(field)) getZero];
  id<OrgApacheCommonsMathFieldElement> one = [field getOne];
  IOSObjectArray *d = (IOSObjectArray *) check_class_cast(JavaLangReflectArray_newInstanceWithIOSClass_withIntArray_([((id<OrgApacheCommonsMathFieldElement>) nil_chk(zero)) getClass], [IOSIntArray arrayWithInts:(jint[]){ dimension, dimension } count:2]), [IOSObjectArray class]);
  for (jint row = 0; row < dimension; row++) {
    IOSObjectArray *dRow = IOSObjectArray_Get(nil_chk(d), row);
    JavaUtilArrays_fillWithNSObjectArray_withId_(dRow, zero);
    IOSObjectArray_Set(nil_chk(dRow), row, one);
  }
  return [new_OrgApacheCommonsMathLinearArray2DRowFieldMatrix_initWithOrgApacheCommonsMathFieldElementArray2_withBoolean_(d, NO) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigIdentityMatrixWithInt_(jint dimension) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  IOSObjectArray *d = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ dimension, dimension } type:JavaMathBigDecimal_class_()];
  for (jint row = 0; row < dimension; row++) {
    IOSObjectArray *dRow = IOSObjectArray_Get(d, row);
    JavaUtilArrays_fillWithNSObjectArray_withId_(dRow, OrgApacheCommonsMathLinearBigMatrixImpl_get_ZERO_());
    IOSObjectArray_Set(nil_chk(dRow), row, OrgApacheCommonsMathLinearBigMatrixImpl_get_ONE_());
  }
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(d, NO) autorelease];
}

id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRealDiagonalMatrixWithDoubleArray_(IOSDoubleArray *diagonal) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  id<OrgApacheCommonsMathLinearRealMatrix> m = OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(((IOSDoubleArray *) nil_chk(diagonal))->size_, diagonal->size_);
  for (jint i = 0; i < diagonal->size_; ++i) {
    [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(m)) setEntryWithInt:i withInt:i withDouble:IOSDoubleArray_Get(diagonal, i)];
  }
  return m;
}

id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createFieldDiagonalMatrixWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *diagonal) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  id<OrgApacheCommonsMathLinearFieldMatrix> m = OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathField_withInt_withInt_([((id<OrgApacheCommonsMathFieldElement>) nil_chk(IOSObjectArray_Get(nil_chk(diagonal), 0))) getField], diagonal->size_, diagonal->size_);
  for (jint i = 0; i < diagonal->size_; ++i) {
    [((id<OrgApacheCommonsMathLinearFieldMatrix>) nil_chk(m)) setEntryWithInt:i withInt:i withOrgApacheCommonsMathFieldElement:IOSObjectArray_Get(diagonal, i)];
  }
  return m;
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithDoubleArray2_(IOSObjectArray *data) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithDoubleArray2_(data) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithJavaMathBigDecimalArray2_(IOSObjectArray *data) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_(data) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithJavaMathBigDecimalArray2_withBoolean_(IOSObjectArray *data, jboolean copyArray) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(data, copyArray) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createBigMatrixWithNSStringArray2_(IOSObjectArray *data) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithNSStringArray2_(data) autorelease];
}

id<OrgApacheCommonsMathLinearRealVector> OrgApacheCommonsMathLinearMatrixUtils_createRealVectorWithDoubleArray_(IOSDoubleArray *data) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return [new_OrgApacheCommonsMathLinearArrayRealVector_initWithDoubleArray_withBoolean_(data, YES) autorelease];
}

id<OrgApacheCommonsMathLinearFieldVector> OrgApacheCommonsMathLinearMatrixUtils_createFieldVectorWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *data) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  return [new_OrgApacheCommonsMathLinearArrayFieldVector_initWithOrgApacheCommonsMathFieldElementArray_withBoolean_(data, YES) autorelease];
}

id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowRealMatrixWithDoubleArray_(IOSDoubleArray *rowData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nCols = ((IOSDoubleArray *) nil_chk(rowData))->size_;
  id<OrgApacheCommonsMathLinearRealMatrix> m = OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(1, nCols);
  for (jint i = 0; i < nCols; ++i) {
    [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(m)) setEntryWithInt:0 withInt:i withDouble:IOSDoubleArray_Get(rowData, i)];
  }
  return m;
}

id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowFieldMatrixWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *rowData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nCols = ((IOSObjectArray *) nil_chk(rowData))->size_;
  if (nCols == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_AT_LEAST_ONE_COLUMN(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  id<OrgApacheCommonsMathLinearFieldMatrix> m = OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathField_withInt_withInt_([((id<OrgApacheCommonsMathFieldElement>) nil_chk(IOSObjectArray_Get(rowData, 0))) getField], 1, nCols);
  for (jint i = 0; i < nCols; ++i) {
    [((id<OrgApacheCommonsMathLinearFieldMatrix>) nil_chk(m)) setEntryWithInt:0 withInt:i withOrgApacheCommonsMathFieldElement:IOSObjectArray_Get(rowData, i)];
  }
  return m;
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithDoubleArray_(IOSDoubleArray *rowData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nCols = ((IOSDoubleArray *) nil_chk(rowData))->size_;
  IOSObjectArray *data = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 1, nCols } type:JavaMathBigDecimal_class_()];
  for (jint i = 0; i < nCols; ++i) {
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(data, 0)), i, new_JavaMathBigDecimal_initWithDouble_(IOSDoubleArray_Get(rowData, i)));
  }
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(data, NO) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithJavaMathBigDecimalArray_(IOSObjectArray *rowData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nCols = ((IOSObjectArray *) nil_chk(rowData))->size_;
  IOSObjectArray *data = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 1, nCols } type:JavaMathBigDecimal_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(rowData, 0, IOSObjectArray_Get(data, 0), 0, nCols);
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(data, NO) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createRowBigMatrixWithNSStringArray_(IOSObjectArray *rowData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nCols = ((IOSObjectArray *) nil_chk(rowData))->size_;
  IOSObjectArray *data = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ 1, nCols } type:JavaMathBigDecimal_class_()];
  for (jint i = 0; i < nCols; ++i) {
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(data, 0)), i, new_JavaMathBigDecimal_initWithNSString_(IOSObjectArray_Get(rowData, i)));
  }
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(data, NO) autorelease];
}

id<OrgApacheCommonsMathLinearRealMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnRealMatrixWithDoubleArray_(IOSDoubleArray *columnData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nRows = ((IOSDoubleArray *) nil_chk(columnData))->size_;
  id<OrgApacheCommonsMathLinearRealMatrix> m = OrgApacheCommonsMathLinearMatrixUtils_createRealMatrixWithInt_withInt_(nRows, 1);
  for (jint i = 0; i < nRows; ++i) {
    [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(m)) setEntryWithInt:i withInt:0 withDouble:IOSDoubleArray_Get(columnData, i)];
  }
  return m;
}

id<OrgApacheCommonsMathLinearFieldMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnFieldMatrixWithOrgApacheCommonsMathFieldElementArray_(IOSObjectArray *columnData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nRows = ((IOSObjectArray *) nil_chk(columnData))->size_;
  if (nRows == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_AT_LEAST_ONE_ROW(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  id<OrgApacheCommonsMathLinearFieldMatrix> m = OrgApacheCommonsMathLinearMatrixUtils_createFieldMatrixWithOrgApacheCommonsMathField_withInt_withInt_([((id<OrgApacheCommonsMathFieldElement>) nil_chk(IOSObjectArray_Get(columnData, 0))) getField], nRows, 1);
  for (jint i = 0; i < nRows; ++i) {
    [((id<OrgApacheCommonsMathLinearFieldMatrix>) nil_chk(m)) setEntryWithInt:i withInt:0 withOrgApacheCommonsMathFieldElement:IOSObjectArray_Get(columnData, i)];
  }
  return m;
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithDoubleArray_(IOSDoubleArray *columnData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nRows = ((IOSDoubleArray *) nil_chk(columnData))->size_;
  IOSObjectArray *data = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ nRows, 1 } type:JavaMathBigDecimal_class_()];
  for (jint row = 0; row < nRows; row++) {
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(data, row)), 0, new_JavaMathBigDecimal_initWithDouble_(IOSDoubleArray_Get(columnData, row)));
  }
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(data, NO) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithJavaMathBigDecimalArray_(IOSObjectArray *columnData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nRows = ((IOSObjectArray *) nil_chk(columnData))->size_;
  IOSObjectArray *data = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ nRows, 1 } type:JavaMathBigDecimal_class_()];
  for (jint row = 0; row < nRows; row++) {
    IOSObjectArray_Set(nil_chk(IOSObjectArray_Get(data, row)), 0, IOSObjectArray_Get(columnData, row));
  }
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(data, NO) autorelease];
}

id<OrgApacheCommonsMathLinearBigMatrix> OrgApacheCommonsMathLinearMatrixUtils_createColumnBigMatrixWithNSStringArray_(IOSObjectArray *columnData) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint nRows = ((IOSObjectArray *) nil_chk(columnData))->size_;
  IOSObjectArray *data = [IOSObjectArray arrayWithDimensions:2 lengths:(jint[]){ nRows, 1 } type:JavaMathBigDecimal_class_()];
  for (jint row = 0; row < nRows; row++) {
    IOSObjectArray_SetAndConsume(nil_chk(IOSObjectArray_Get(data, row)), 0, new_JavaMathBigDecimal_initWithNSString_(IOSObjectArray_Get(columnData, row)));
  }
  return [new_OrgApacheCommonsMathLinearBigMatrixImpl_initWithJavaMathBigDecimalArray2_withBoolean_(data, NO) autorelease];
}

void OrgApacheCommonsMathLinearMatrixUtils_checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(id<OrgApacheCommonsMathLinearAnyMatrix> m, jint row) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  if (row < 0 || row >= [((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(m)) getRowDimension]) {
    @throw [new_OrgApacheCommonsMathLinearMatrixIndexException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ROW_INDEX_OUT_OF_RANGE(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(row), JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_([((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(m)) getRowDimension] - 1) } count:3 type:NSObject_class_()]) autorelease];
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(id<OrgApacheCommonsMathLinearAnyMatrix> m, jint column) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  if (column < 0 || column >= [((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(m)) getColumnDimension]) {
    @throw [new_OrgApacheCommonsMathLinearMatrixIndexException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_COLUMN_INDEX_OUT_OF_RANGE(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(column), JavaLangInteger_valueOfWithInt_(0), JavaLangInteger_valueOfWithInt_([((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(m)) getColumnDimension] - 1) } count:3 type:NSObject_class_()]) autorelease];
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_withInt_withInt_withInt_(id<OrgApacheCommonsMathLinearAnyMatrix> m, jint startRow, jint endRow, jint startColumn, jint endColumn) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  OrgApacheCommonsMathLinearMatrixUtils_checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, startRow);
  OrgApacheCommonsMathLinearMatrixUtils_checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, endRow);
  if (startRow > endRow) {
    @throw [new_OrgApacheCommonsMathLinearMatrixIndexException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INITIAL_ROW_AFTER_FINAL_ROW(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(startRow), JavaLangInteger_valueOfWithInt_(endRow) } count:2 type:NSObject_class_()]) autorelease];
  }
  OrgApacheCommonsMathLinearMatrixUtils_checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, startColumn);
  OrgApacheCommonsMathLinearMatrixUtils_checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, endColumn);
  if (startColumn > endColumn) {
    @throw [new_OrgApacheCommonsMathLinearMatrixIndexException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INITIAL_COLUMN_AFTER_FINAL_COLUMN(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(startColumn), JavaLangInteger_valueOfWithInt_(endColumn) } count:2 type:NSObject_class_()]) autorelease];
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_checkSubMatrixIndexWithOrgApacheCommonsMathLinearAnyMatrix_withIntArray_withIntArray_(id<OrgApacheCommonsMathLinearAnyMatrix> m, IOSIntArray *selectedRows, IOSIntArray *selectedColumns) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  if (((IOSIntArray *) nil_chk(selectedRows))->size_ * ((IOSIntArray *) nil_chk(selectedColumns))->size_ == 0) {
    if (selectedRows->size_ == 0) {
      @throw [new_OrgApacheCommonsMathLinearMatrixIndexException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_EMPTY_SELECTED_ROW_INDEX_ARRAY(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]) autorelease];
    }
    @throw [new_OrgApacheCommonsMathLinearMatrixIndexException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_EMPTY_SELECTED_COLUMN_INDEX_ARRAY(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]) autorelease];
  }
  {
    IOSIntArray *a__ = selectedRows;
    jint const *b__ = a__->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint row = *b__++;
      OrgApacheCommonsMathLinearMatrixUtils_checkRowIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, row);
    }
  }
  {
    IOSIntArray *a__ = selectedColumns;
    jint const *b__ = a__->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint column = *b__++;
      OrgApacheCommonsMathLinearMatrixUtils_checkColumnIndexWithOrgApacheCommonsMathLinearAnyMatrix_withInt_(m, column);
    }
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_checkAdditionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(id<OrgApacheCommonsMathLinearAnyMatrix> left, id<OrgApacheCommonsMathLinearAnyMatrix> right) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  if (([((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(left)) getRowDimension] != [((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(right)) getRowDimension]) || ([left getColumnDimension] != [right getColumnDimension])) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_ADDITION_COMPATIBLE_MATRICES(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([left getRowDimension]), JavaLangInteger_valueOfWithInt_([left getColumnDimension]), JavaLangInteger_valueOfWithInt_([right getRowDimension]), JavaLangInteger_valueOfWithInt_([right getColumnDimension]) } count:4 type:NSObject_class_()]);
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_checkSubtractionCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(id<OrgApacheCommonsMathLinearAnyMatrix> left, id<OrgApacheCommonsMathLinearAnyMatrix> right) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  if (([((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(left)) getRowDimension] != [((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(right)) getRowDimension]) || ([left getColumnDimension] != [right getColumnDimension])) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_SUBTRACTION_COMPATIBLE_MATRICES(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([left getRowDimension]), JavaLangInteger_valueOfWithInt_([left getColumnDimension]), JavaLangInteger_valueOfWithInt_([right getRowDimension]), JavaLangInteger_valueOfWithInt_([right getColumnDimension]) } count:4 type:NSObject_class_()]);
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_checkMultiplicationCompatibleWithOrgApacheCommonsMathLinearAnyMatrix_withOrgApacheCommonsMathLinearAnyMatrix_(id<OrgApacheCommonsMathLinearAnyMatrix> left, id<OrgApacheCommonsMathLinearAnyMatrix> right) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  if ([((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(left)) getColumnDimension] != [((id<OrgApacheCommonsMathLinearAnyMatrix>) nil_chk(right)) getRowDimension]) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_MULTIPLICATION_COMPATIBLE_MATRICES(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([left getRowDimension]), JavaLangInteger_valueOfWithInt_([left getColumnDimension]), JavaLangInteger_valueOfWithInt_([right getRowDimension]), JavaLangInteger_valueOfWithInt_([right getColumnDimension]) } count:4 type:NSObject_class_()]);
  }
}

OrgApacheCommonsMathLinearArray2DRowRealMatrix *OrgApacheCommonsMathLinearMatrixUtils_fractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(id<OrgApacheCommonsMathLinearFieldMatrix> m) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter *converter = [new_OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_init() autorelease];
  [((id<OrgApacheCommonsMathLinearFieldMatrix>) nil_chk(m)) walkInOptimizedOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:converter];
  return [converter getConvertedMatrix];
}

OrgApacheCommonsMathLinearArray2DRowRealMatrix *OrgApacheCommonsMathLinearMatrixUtils_bigFractionMatrixToRealMatrixWithOrgApacheCommonsMathLinearFieldMatrix_(id<OrgApacheCommonsMathLinearFieldMatrix> m) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter *converter = [new_OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_init() autorelease];
  [((id<OrgApacheCommonsMathLinearFieldMatrix>) nil_chk(m)) walkInOptimizedOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:converter];
  return [converter getConvertedMatrix];
}

void OrgApacheCommonsMathLinearMatrixUtils_serializeRealVectorWithOrgApacheCommonsMathLinearRealVector_withJavaIoObjectOutputStream_(id<OrgApacheCommonsMathLinearRealVector> vector, JavaIoObjectOutputStream *oos) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint n = [((id<OrgApacheCommonsMathLinearRealVector>) nil_chk(vector)) getDimension];
  [((JavaIoObjectOutputStream *) nil_chk(oos)) writeIntWithInt:n];
  for (jint i = 0; i < n; ++i) {
    [oos writeDoubleWithDouble:[vector getEntryWithInt:i]];
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_deserializeRealVectorWithId_withNSString_withJavaIoObjectInputStream_(id instance, NSString *fieldName, JavaIoObjectInputStream *ois) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  @try {
    jint n = [((JavaIoObjectInputStream *) nil_chk(ois)) readInt];
    IOSDoubleArray *data = [IOSDoubleArray arrayWithLength:n];
    for (jint i = 0; i < n; ++i) {
      *IOSDoubleArray_GetRef(data, i) = [ois readDouble];
    }
    id<OrgApacheCommonsMathLinearRealVector> vector = [new_OrgApacheCommonsMathLinearArrayRealVector_initWithDoubleArray_withBoolean_(data, NO) autorelease];
    JavaLangReflectField *f = [[nil_chk(instance) getClass] getDeclaredField:fieldName];
    [((JavaLangReflectField *) nil_chk(f)) setAccessibleWithBoolean:YES];
    [f setWithId:instance withId:vector];
  }
  @catch (JavaLangNoSuchFieldException *nsfe) {
    JavaIoIOException *ioe = [new_JavaIoIOException_init() autorelease];
    [ioe initCauseWithJavaLangThrowable:nsfe];
    @throw ioe;
  }
  @catch (JavaLangIllegalAccessException *iae) {
    JavaIoIOException *ioe = [new_JavaIoIOException_init() autorelease];
    [ioe initCauseWithJavaLangThrowable:iae];
    @throw ioe;
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_serializeRealMatrixWithOrgApacheCommonsMathLinearRealMatrix_withJavaIoObjectOutputStream_(id<OrgApacheCommonsMathLinearRealMatrix> matrix, JavaIoObjectOutputStream *oos) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  jint n = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getRowDimension];
  jint m = [matrix getColumnDimension];
  [((JavaIoObjectOutputStream *) nil_chk(oos)) writeIntWithInt:n];
  [oos writeIntWithInt:m];
  for (jint i = 0; i < n; ++i) {
    for (jint j = 0; j < m; ++j) {
      [oos writeDoubleWithDouble:[matrix getEntryWithInt:i withInt:j]];
    }
  }
}

void OrgApacheCommonsMathLinearMatrixUtils_deserializeRealMatrixWithId_withNSString_withJavaIoObjectInputStream_(id instance, NSString *fieldName, JavaIoObjectInputStream *ois) {
  OrgApacheCommonsMathLinearMatrixUtils_initialize();
  @try {
    jint n = [((JavaIoObjectInputStream *) nil_chk(ois)) readInt];
    jint m = [ois readInt];
    IOSObjectArray *data = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ n, m }];
    for (jint i = 0; i < n; ++i) {
      IOSDoubleArray *dataI = IOSObjectArray_Get(data, i);
      for (jint j = 0; j < m; ++j) {
        *IOSDoubleArray_GetRef(nil_chk(dataI), j) = [ois readDouble];
      }
    }
    id<OrgApacheCommonsMathLinearRealMatrix> matrix = [new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_withBoolean_(data, NO) autorelease];
    JavaLangReflectField *f = [[nil_chk(instance) getClass] getDeclaredField:fieldName];
    [((JavaLangReflectField *) nil_chk(f)) setAccessibleWithBoolean:YES];
    [f setWithId:instance withId:matrix];
  }
  @catch (JavaLangNoSuchFieldException *nsfe) {
    JavaIoIOException *ioe = [new_JavaIoIOException_init() autorelease];
    [ioe initCauseWithJavaLangThrowable:nsfe];
    @throw ioe;
  }
  @catch (JavaLangIllegalAccessException *iae) {
    JavaIoIOException *ioe = [new_JavaIoIOException_init() autorelease];
    [ioe initCauseWithJavaLangThrowable:iae];
    @throw ioe;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearMatrixUtils)

@implementation OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter

- (instancetype)init {
  OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_init(self);
  return self;
}

- (void)startWithInt:(jint)rows
             withInt:(jint)columns
             withInt:(jint)startRow
             withInt:(jint)endRow
             withInt:(jint)startColumn
             withInt:(jint)endColumn {
  OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_setAndConsume_data_(self, [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ rows, columns }]);
}

- (void)visitWithInt:(jint)row
             withInt:(jint)column
withOrgApacheCommonsMathFieldElement:(OrgApacheCommonsMathFractionFraction *)value {
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(data_), row)), column) = [((OrgApacheCommonsMathFractionFraction *) nil_chk(value)) doubleValue];
}

- (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)getConvertedMatrix {
  return [new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_withBoolean_(data_, NO) autorelease];
}

- (void)dealloc {
  RELEASE_(data_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FractionMatrixConverter", NULL, 0x1, NULL, NULL },
    { "startWithInt:withInt:withInt:withInt:withInt:withInt:", "start", "V", 0x1, NULL, NULL },
    { "visitWithInt:withInt:withOrgApacheCommonsMathFieldElement:", "visit", "V", 0x1, NULL, NULL },
    { "getConvertedMatrix", NULL, "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x2, "[[D", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.commons.math.fraction.Fraction;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter = { 2, "FractionMatrixConverter", "org.apache.commons.math.linear", "MatrixUtils", 0xa, 4, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor<Lorg/apache/commons/math/fraction/Fraction;>;" };
  return &_OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter;
}

@end

void OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_init(OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter *self) {
  OrgApacheCommonsMathLinearDefaultFieldMatrixPreservingVisitor_initWithOrgApacheCommonsMathFieldElement_(self, OrgApacheCommonsMathFractionFraction_get_ZERO_());
}

OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter *new_OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_init() {
  OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter *self = [OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter alloc];
  OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearMatrixUtils_FractionMatrixConverter)

@implementation OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter

- (instancetype)init {
  OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_init(self);
  return self;
}

- (void)startWithInt:(jint)rows
             withInt:(jint)columns
             withInt:(jint)startRow
             withInt:(jint)endRow
             withInt:(jint)startColumn
             withInt:(jint)endColumn {
  OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_setAndConsume_data_(self, [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ rows, columns }]);
}

- (void)visitWithInt:(jint)row
             withInt:(jint)column
withOrgApacheCommonsMathFieldElement:(OrgApacheCommonsMathFractionBigFraction *)value {
  *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(data_), row)), column) = [((OrgApacheCommonsMathFractionBigFraction *) nil_chk(value)) doubleValue];
}

- (OrgApacheCommonsMathLinearArray2DRowRealMatrix *)getConvertedMatrix {
  return [new_OrgApacheCommonsMathLinearArray2DRowRealMatrix_initWithDoubleArray2_withBoolean_(data_, NO) autorelease];
}

- (void)dealloc {
  RELEASE_(data_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "BigFractionMatrixConverter", NULL, 0x1, NULL, NULL },
    { "startWithInt:withInt:withInt:withInt:withInt:withInt:", "start", "V", 0x1, NULL, NULL },
    { "visitWithInt:withInt:withOrgApacheCommonsMathFieldElement:", "visit", "V", 0x1, NULL, NULL },
    { "getConvertedMatrix", NULL, "Lorg.apache.commons.math.linear.Array2DRowRealMatrix;", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x2, "[[D", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.commons.math.fraction.BigFraction;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter = { 2, "BigFractionMatrixConverter", "org.apache.commons.math.linear", "MatrixUtils", 0xa, 4, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Lorg/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor<Lorg/apache/commons/math/fraction/BigFraction;>;" };
  return &_OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter;
}

@end

void OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_init(OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter *self) {
  OrgApacheCommonsMathLinearDefaultFieldMatrixPreservingVisitor_initWithOrgApacheCommonsMathFieldElement_(self, OrgApacheCommonsMathFractionBigFraction_get_ZERO_());
}

OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter *new_OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_init() {
  OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter *self = [OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter alloc];
  OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearMatrixUtils_BigFractionMatrixConverter)
