//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CommandDispatcherAdvanced.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/advanced/CmdAffineRatio.h"
#include "geogebra/common/kernel/advanced/CmdApplyMatrix.h"
#include "geogebra/common/kernel/advanced/CmdAreCollinear.h"
#include "geogebra/common/kernel/advanced/CmdAreConcurrent.h"
#include "geogebra/common/kernel/advanced/CmdAreConcyclic.h"
#include "geogebra/common/kernel/advanced/CmdAreEqual.h"
#include "geogebra/common/kernel/advanced/CmdAreParallel.h"
#include "geogebra/common/kernel/advanced/CmdArePerpendicular.h"
#include "geogebra/common/kernel/advanced/CmdAsymptote.h"
#include "geogebra/common/kernel/advanced/CmdAttachCopyToView.h"
#include "geogebra/common/kernel/advanced/CmdAxes.h"
#include "geogebra/common/kernel/advanced/CmdAxisStepX.h"
#include "geogebra/common/kernel/advanced/CmdAxisStepY.h"
#include "geogebra/common/kernel/advanced/CmdCentroid.h"
#include "geogebra/common/kernel/advanced/CmdClosestPoint.h"
#include "geogebra/common/kernel/advanced/CmdCommonDenominator.h"
#include "geogebra/common/kernel/advanced/CmdCompleteSquare.h"
#include "geogebra/common/kernel/advanced/CmdComplexRoot.h"
#include "geogebra/common/kernel/advanced/CmdConstructionStep.h"
#include "geogebra/common/kernel/advanced/CmdContinuedFraction.h"
#include "geogebra/common/kernel/advanced/CmdCrossRatio.h"
#include "geogebra/common/kernel/advanced/CmdCurvature.h"
#include "geogebra/common/kernel/advanced/CmdCurvatureVector.h"
#include "geogebra/common/kernel/advanced/CmdDenominator.h"
#include "geogebra/common/kernel/advanced/CmdDeterminant.h"
#include "geogebra/common/kernel/advanced/CmdDimension.h"
#include "geogebra/common/kernel/advanced/CmdDirection.h"
#include "geogebra/common/kernel/advanced/CmdDirectrix.h"
#include "geogebra/common/kernel/advanced/CmdDivision.h"
#include "geogebra/common/kernel/advanced/CmdDivisorsList.h"
#include "geogebra/common/kernel/advanced/CmdDivisorsOrDivisorsSum.h"
#include "geogebra/common/kernel/advanced/CmdDynamicCoordinates.h"
#include "geogebra/common/kernel/advanced/CmdEccentricity.h"
#include "geogebra/common/kernel/advanced/CmdExcentricity.h"
#include "geogebra/common/kernel/advanced/CmdFactors.h"
#include "geogebra/common/kernel/advanced/CmdFinancialFV.h"
#include "geogebra/common/kernel/advanced/CmdFinancialNper.h"
#include "geogebra/common/kernel/advanced/CmdFinancialPV.h"
#include "geogebra/common/kernel/advanced/CmdFinancialPmt.h"
#include "geogebra/common/kernel/advanced/CmdFinancialRate.h"
#include "geogebra/common/kernel/advanced/CmdFirstAxis.h"
#include "geogebra/common/kernel/advanced/CmdFirstAxisLength.h"
#include "geogebra/common/kernel/advanced/CmdFlatten.h"
#include "geogebra/common/kernel/advanced/CmdFromBase.h"
#include "geogebra/common/kernel/advanced/CmdIdentity.h"
#include "geogebra/common/kernel/advanced/CmdImplicitPoly.h"
#include "geogebra/common/kernel/advanced/CmdIncircle.h"
#include "geogebra/common/kernel/advanced/CmdIndexOf.h"
#include "geogebra/common/kernel/advanced/CmdInsert.h"
#include "geogebra/common/kernel/advanced/CmdIntersectPath.h"
#include "geogebra/common/kernel/advanced/CmdIntersection.h"
#include "geogebra/common/kernel/advanced/CmdInvert.h"
#include "geogebra/common/kernel/advanced/CmdIsInRegion.h"
#include "geogebra/common/kernel/advanced/CmdIsPrime.h"
#include "geogebra/common/kernel/advanced/CmdIteration.h"
#include "geogebra/common/kernel/advanced/CmdIterationList.h"
#include "geogebra/common/kernel/advanced/CmdLeftRightSide.h"
#include "geogebra/common/kernel/advanced/CmdMatrixRank.h"
#include "geogebra/common/kernel/advanced/CmdMaximize.h"
#include "geogebra/common/kernel/advanced/CmdMinimize.h"
#include "geogebra/common/kernel/advanced/CmdNSolveODE.h"
#include "geogebra/common/kernel/advanced/CmdNumerator.h"
#include "geogebra/common/kernel/advanced/CmdOrdinal.h"
#include "geogebra/common/kernel/advanced/CmdOsculatingCircle.h"
#include "geogebra/common/kernel/advanced/CmdParameter.h"
#include "geogebra/common/kernel/advanced/CmdPathParameter.h"
#include "geogebra/common/kernel/advanced/CmdPolar.h"
#include "geogebra/common/kernel/advanced/CmdPrimeFactors.h"
#include "geogebra/common/kernel/advanced/CmdProve.h"
#include "geogebra/common/kernel/advanced/CmdProveDetails.h"
#include "geogebra/common/kernel/advanced/CmdReducedRowEchelonForm.h"
#include "geogebra/common/kernel/advanced/CmdRootList.h"
#include "geogebra/common/kernel/advanced/CmdRoots.h"
#include "geogebra/common/kernel/advanced/CmdRotateText.h"
#include "geogebra/common/kernel/advanced/CmdScientificText.h"
#include "geogebra/common/kernel/advanced/CmdSecondAxis.h"
#include "geogebra/common/kernel/advanced/CmdSecondAxisLength.h"
#include "geogebra/common/kernel/advanced/CmdSelectedElement.h"
#include "geogebra/common/kernel/advanced/CmdSelectedIndex.h"
#include "geogebra/common/kernel/advanced/CmdSlopeField.h"
#include "geogebra/common/kernel/advanced/CmdTaylorSeries.h"
#include "geogebra/common/kernel/advanced/CmdToBase.h"
#include "geogebra/common/kernel/advanced/CmdToComplexPolar.h"
#include "geogebra/common/kernel/advanced/CmdTranspose.h"
#include "geogebra/common/kernel/advanced/CmdUnion.h"
#include "geogebra/common/kernel/advanced/CmdUnique.h"
#include "geogebra/common/kernel/advanced/CmdVerticalText.h"
#include "geogebra/common/kernel/advanced/CmdZip.h"
#include "geogebra/common/kernel/commands/CmdPointList.h"
#include "geogebra/common/kernel/commands/CommandDispatcherAdvanced.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/commands/Commands.h"

@implementation GeogebraCommonKernelCommandsCommandDispatcherAdvanced

- (GeogebraCommonKernelCommandsCommandProcessor *)dispatchWithGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)c
                                                                        withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  switch ([c ordinal]) {
    case GeogebraCommonKernelCommandsCommands_Factors:
    return [new_GeogebraCommonKernelAdvancedCmdFactors_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_IntersectPath:
    case GeogebraCommonKernelCommandsCommands_IntersectRegion:
    return [new_GeogebraCommonKernelAdvancedCmdIntersectPath_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Direction:
    return [new_GeogebraCommonKernelAdvancedCmdDirection_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TaylorPolynomial:
    case GeogebraCommonKernelCommandsCommands_TaylorSeries:
    return [new_GeogebraCommonKernelAdvancedCmdTaylorSeries_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SecondAxis:
    case GeogebraCommonKernelCommandsCommands_MinorAxis:
    return [new_GeogebraCommonKernelAdvancedCmdSecondAxis_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SemiMinorAxisLength:
    case GeogebraCommonKernelCommandsCommands_SecondAxisLength:
    return [new_GeogebraCommonKernelAdvancedCmdSecondAxisLength_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Directrix:
    return [new_GeogebraCommonKernelAdvancedCmdDirectrix_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Numerator:
    return [new_GeogebraCommonKernelAdvancedCmdNumerator_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Denominator:
    return [new_GeogebraCommonKernelAdvancedCmdDenominator_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ComplexRoot:
    return [new_GeogebraCommonKernelAdvancedCmdComplexRoot_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SlopeField:
    return [new_GeogebraCommonKernelAdvancedCmdSlopeField_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Iteration:
    return [new_GeogebraCommonKernelAdvancedCmdIteration_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_PathParameter:
    return [new_GeogebraCommonKernelAdvancedCmdPathParameter_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Asymptote:
    return [new_GeogebraCommonKernelAdvancedCmdAsymptote_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_CurvatureVector:
    return [new_GeogebraCommonKernelAdvancedCmdCurvatureVector_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Curvature:
    return [new_GeogebraCommonKernelAdvancedCmdCurvature_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_OsculatingCircle:
    return [new_GeogebraCommonKernelAdvancedCmdOsculatingCircle_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_IterationList:
    return [new_GeogebraCommonKernelAdvancedCmdIterationList_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RootList:
    return [new_GeogebraCommonKernelAdvancedCmdRootList_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ImplicitCurve:
    return [new_GeogebraCommonKernelAdvancedCmdImplicitPoly_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Roots:
    return [new_GeogebraCommonKernelAdvancedCmdRoots_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AffineRatio:
    return [new_GeogebraCommonKernelAdvancedCmdAffineRatio_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_CrossRatio:
    return [new_GeogebraCommonKernelAdvancedCmdCrossRatio_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ClosestPoint:
    return [new_GeogebraCommonKernelAdvancedCmdClosestPoint_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_IsInRegion:
    return [new_GeogebraCommonKernelAdvancedCmdIsInRegion_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_PrimeFactors:
    return [new_GeogebraCommonKernelAdvancedCmdPrimeFactors_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_CompleteSquare:
    return [new_GeogebraCommonKernelAdvancedCmdCompleteSquare_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Union:
    return [new_GeogebraCommonKernelAdvancedCmdUnion_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ScientificText:
    return [new_GeogebraCommonKernelAdvancedCmdScientificText_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_VerticalText:
    return [new_GeogebraCommonKernelAdvancedCmdVerticalText_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_RotateText:
    return [new_GeogebraCommonKernelAdvancedCmdRotateText_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Ordinal:
    return [new_GeogebraCommonKernelAdvancedCmdOrdinal_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Parameter:
    return [new_GeogebraCommonKernelAdvancedCmdParameter_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Incircle:
    return [new_GeogebraCommonKernelAdvancedCmdIncircle_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SelectedElement:
    return [new_GeogebraCommonKernelAdvancedCmdSelectedElement_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SelectedIndex:
    return [new_GeogebraCommonKernelAdvancedCmdSelectedIndex_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Unique:
    return [new_GeogebraCommonKernelAdvancedCmdUnique_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Zip:
    return [new_GeogebraCommonKernelAdvancedCmdZip_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Intersection:
    return [new_GeogebraCommonKernelAdvancedCmdIntersection_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_PointList:
    return [new_GeogebraCommonKernelCommandsCmdPointList_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ApplyMatrix:
    return [new_GeogebraCommonKernelAdvancedCmdApplyMatrix_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Invert:
    return [new_GeogebraCommonKernelAdvancedCmdInvert_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Transpose:
    return [new_GeogebraCommonKernelAdvancedCmdTranspose_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ReducedRowEchelonForm:
    return [new_GeogebraCommonKernelAdvancedCmdReducedRowEchelonForm_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Determinant:
    return [new_GeogebraCommonKernelAdvancedCmdDeterminant_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Identity:
    return [new_GeogebraCommonKernelAdvancedCmdIdentity_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Centroid:
    return [new_GeogebraCommonKernelAdvancedCmdCentroid_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_MajorAxis:
    case GeogebraCommonKernelCommandsCommands_FirstAxis:
    return [new_GeogebraCommonKernelAdvancedCmdFirstAxis_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_SemiMajorAxisLength:
    case GeogebraCommonKernelCommandsCommands_FirstAxisLength:
    return [new_GeogebraCommonKernelAdvancedCmdFirstAxisLength_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AxisStepX:
    return [new_GeogebraCommonKernelAdvancedCmdAxisStepX_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AxisStepY:
    return [new_GeogebraCommonKernelAdvancedCmdAxisStepY_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ConstructionStep:
    return [new_GeogebraCommonKernelAdvancedCmdConstructionStep_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Polar:
    return [new_GeogebraCommonKernelAdvancedCmdPolar_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_LinearEccentricity:
    case GeogebraCommonKernelCommandsCommands_Excentricity:
    return [new_GeogebraCommonKernelAdvancedCmdExcentricity_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Eccentricity:
    return [new_GeogebraCommonKernelAdvancedCmdEccentricity_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Axes:
    return [new_GeogebraCommonKernelAdvancedCmdAxes_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_IndexOf:
    return [new_GeogebraCommonKernelAdvancedCmdIndexOf_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Flatten:
    return [new_GeogebraCommonKernelAdvancedCmdFlatten_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Insert:
    return [new_GeogebraCommonKernelAdvancedCmdInsert_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Prove:
    return [new_GeogebraCommonKernelAdvancedCmdProve_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ProveDetails:
    return [new_GeogebraCommonKernelAdvancedCmdProveDetails_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_DynamicCoordinates:
    return [new_GeogebraCommonKernelAdvancedCmdDynamicCoordinates_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Maximize:
    return [new_GeogebraCommonKernelAdvancedCmdMaximize_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Minimize:
    return [new_GeogebraCommonKernelAdvancedCmdMinimize_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AreCollinear:
    return [new_GeogebraCommonKernelAdvancedCmdAreCollinear_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AreParallel:
    return [new_GeogebraCommonKernelAdvancedCmdAreParallel_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AreConcyclic:
    return [new_GeogebraCommonKernelAdvancedCmdAreConcyclic_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ArePerpendicular:
    return [new_GeogebraCommonKernelAdvancedCmdArePerpendicular_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AreEqual:
    return [new_GeogebraCommonKernelAdvancedCmdAreEqual_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AreConcurrent:
    return [new_GeogebraCommonKernelAdvancedCmdAreConcurrent_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ToBase:
    return [new_GeogebraCommonKernelAdvancedCmdToBase_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FromBase:
    return [new_GeogebraCommonKernelAdvancedCmdFromBase_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ContinuedFraction:
    return [new_GeogebraCommonKernelAdvancedCmdContinuedFraction_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_AttachCopyToView:
    return [new_GeogebraCommonKernelAdvancedCmdAttachCopyToView_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Divisors:
    return [new_GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithGeogebraCommonKernelKernel_withBoolean_(kernel, NO) autorelease];
    case GeogebraCommonKernelCommandsCommands_DivisorsSum:
    return [new_GeogebraCommonKernelAdvancedCmdDivisorsOrDivisorsSum_initWithGeogebraCommonKernelKernel_withBoolean_(kernel, YES) autorelease];
    case GeogebraCommonKernelCommandsCommands_Dimension:
    return [new_GeogebraCommonKernelAdvancedCmdDimension_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_DivisorsList:
    return [new_GeogebraCommonKernelAdvancedCmdDivisorsList_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_IsPrime:
    return [new_GeogebraCommonKernelAdvancedCmdIsPrime_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_LeftSide:
    return [new_GeogebraCommonKernelAdvancedCmdLeftRightSide_initWithGeogebraCommonKernelKernel_withBoolean_(kernel, YES) autorelease];
    case GeogebraCommonKernelCommandsCommands_RightSide:
    return [new_GeogebraCommonKernelAdvancedCmdLeftRightSide_initWithGeogebraCommonKernelKernel_withBoolean_(kernel, NO) autorelease];
    case GeogebraCommonKernelCommandsCommands_Division:
    return [new_GeogebraCommonKernelAdvancedCmdDivision_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_MatrixRank:
    return [new_GeogebraCommonKernelAdvancedCmdMatrixRank_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_CommonDenominator:
    return [new_GeogebraCommonKernelAdvancedCmdCommonDenominator_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ToPoint:
    return [new_GeogebraCommonKernelAdvancedCmdToComplexPolar_initWithGeogebraCommonKernelKernel_withInt_(kernel, GeogebraCommonKernelKernel_COORD_CARTESIAN) autorelease];
    case GeogebraCommonKernelCommandsCommands_ToComplex:
    return [new_GeogebraCommonKernelAdvancedCmdToComplexPolar_initWithGeogebraCommonKernelKernel_withInt_(kernel, GeogebraCommonKernelKernel_COORD_COMPLEX) autorelease];
    case GeogebraCommonKernelCommandsCommands_ToPolar:
    return [new_GeogebraCommonKernelAdvancedCmdToComplexPolar_initWithGeogebraCommonKernelKernel_withInt_(kernel, GeogebraCommonKernelKernel_COORD_POLAR) autorelease];
    case GeogebraCommonKernelCommandsCommands_NSolveODE:
    return [new_GeogebraCommonKernelAdvancedCmdNSolveODE_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Rate:
    return [new_GeogebraCommonKernelAdvancedCmdFinancialRate_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Periods:
    return [new_GeogebraCommonKernelAdvancedCmdFinancialNper_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Payment:
    return [new_GeogebraCommonKernelAdvancedCmdFinancialPmt_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_PresentValue:
    return [new_GeogebraCommonKernelAdvancedCmdFinancialPV_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_FutureValue:
    return [new_GeogebraCommonKernelAdvancedCmdFinancialFV_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
  }
  return nil;
}

- (instancetype)init {
  GeogebraCommonKernelCommandsCommandDispatcherAdvanced_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispatchWithGeogebraCommonKernelCommandsCommandsEnum:withGeogebraCommonKernelKernel:", "dispatch", "Lgeogebra.common.kernel.commands.CommandProcessor;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCommandDispatcherAdvanced = { 2, "CommandDispatcherAdvanced", "geogebra.common.kernel.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCommandDispatcherAdvanced;
}

@end

void GeogebraCommonKernelCommandsCommandDispatcherAdvanced_init(GeogebraCommonKernelCommandsCommandDispatcherAdvanced *self) {
  NSObject_init(self);
}

GeogebraCommonKernelCommandsCommandDispatcherAdvanced *new_GeogebraCommonKernelCommandsCommandDispatcherAdvanced_init() {
  GeogebraCommonKernelCommandsCommandDispatcherAdvanced *self = [GeogebraCommonKernelCommandsCommandDispatcherAdvanced alloc];
  GeogebraCommonKernelCommandsCommandDispatcherAdvanced_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCommandDispatcherAdvanced)
