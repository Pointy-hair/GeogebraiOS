//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CommandDispatcherDiscrete.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/barycentric/CmdBarycenter.h"
#include "geogebra/common/kernel/barycentric/CmdCubic.h"
#include "geogebra/common/kernel/barycentric/CmdKimberling.h"
#include "geogebra/common/kernel/barycentric/CmdTriangleCurve.h"
#include "geogebra/common/kernel/barycentric/CmdTrilinear.h"
#include "geogebra/common/kernel/commands/CommandDispatcherDiscrete.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/discrete/CmdConvexHull.h"
#include "geogebra/common/kernel/discrete/CmdDelauneyTriangulation.h"
#include "geogebra/common/kernel/discrete/CmdHull.h"
#include "geogebra/common/kernel/discrete/CmdMinimumSpanningTree.h"
#include "geogebra/common/kernel/discrete/CmdShortestDistance.h"
#include "geogebra/common/kernel/discrete/CmdTravelingSalesman.h"
#include "geogebra/common/kernel/discrete/CmdVoronoi.h"

@implementation GeogebraCommonKernelCommandsCommandDispatcherDiscrete

- (GeogebraCommonKernelCommandsCommandProcessor *)dispatchWithGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)c
                                                                        withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  switch ([c ordinal]) {
    case GeogebraCommonKernelCommandsCommands_TriangleCenter:
    return [new_GeogebraCommonKernelBarycentricCmdKimberling_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Barycenter:
    return [new_GeogebraCommonKernelBarycentricCmdBarycenter_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Trilinear:
    return [new_GeogebraCommonKernelBarycentricCmdTrilinear_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Cubic:
    return [new_GeogebraCommonKernelBarycentricCmdCubic_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TriangleCurve:
    return [new_GeogebraCommonKernelBarycentricCmdTriangleCurve_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Voronoi:
    return [new_GeogebraCommonKernelDiscreteCmdVoronoi_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_Hull:
    return [new_GeogebraCommonKernelDiscreteCmdHull_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ConvexHull:
    return [new_GeogebraCommonKernelDiscreteCmdConvexHull_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_MinimumSpanningTree:
    return [new_GeogebraCommonKernelDiscreteCmdMinimumSpanningTree_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_DelauneyTriangulation:
    return [new_GeogebraCommonKernelDiscreteCmdDelauneyTriangulation_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_TravelingSalesman:
    return [new_GeogebraCommonKernelDiscreteCmdTravelingSalesman_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
    case GeogebraCommonKernelCommandsCommands_ShortestDistance:
    return [new_GeogebraCommonKernelDiscreteCmdShortestDistance_initWithGeogebraCommonKernelKernel_(kernel) autorelease];
  }
  return nil;
}

- (instancetype)init {
  GeogebraCommonKernelCommandsCommandDispatcherDiscrete_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispatchWithGeogebraCommonKernelCommandsCommandsEnum:withGeogebraCommonKernelKernel:", "dispatch", "Lgeogebra.common.kernel.commands.CommandProcessor;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCommandDispatcherDiscrete = { 2, "CommandDispatcherDiscrete", "geogebra.common.kernel.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCommandDispatcherDiscrete;
}

@end

void GeogebraCommonKernelCommandsCommandDispatcherDiscrete_init(GeogebraCommonKernelCommandsCommandDispatcherDiscrete *self) {
  NSObject_init(self);
}

GeogebraCommonKernelCommandsCommandDispatcherDiscrete *new_GeogebraCommonKernelCommandsCommandDispatcherDiscrete_init() {
  GeogebraCommonKernelCommandsCommandDispatcherDiscrete *self = [GeogebraCommonKernelCommandsCommandDispatcherDiscrete alloc];
  GeogebraCommonKernelCommandsCommandDispatcherDiscrete_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCommandDispatcherDiscrete)
