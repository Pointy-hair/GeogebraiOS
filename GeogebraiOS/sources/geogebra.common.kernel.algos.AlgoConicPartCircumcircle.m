//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoConicPartCircumcircle.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/LocusEquation.h"
#include "geogebra/common/kernel/algos/AlgoCircleThreePoints.h"
#include "geogebra/common/kernel/algos/AlgoConicPartCircumcircle.h"
#include "geogebra/common/kernel/algos/AlgoConicPartCircumcircleND.h"
#include "geogebra/common/kernel/algos/EquationElementInterface.h"
#include "geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoConicPart.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

__attribute__((unused)) static GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getA(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getB(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getC(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self);

@implementation GeogebraCommonKernelAlgosAlgoConicPartCircumcircle

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)C
                                                 withInt:(jint)type {
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, A, B, C, type);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)C
                                                 withInt:(jint)type {
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, A, B, C, type);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoCircleThreePoints *)getAlgo {
  return [new_GeogebraCommonKernelAlgosAlgoCircleThreePoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(cons_, GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getA(self), GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getB(self), GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getC(self)) autorelease];
}

- (GeogebraCommonKernelGeosGeoConicPart *)createConicPartWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                                                      withInt:(jint)type {
  return [new_GeogebraCommonKernelGeosGeoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(cons, type) autorelease];
}

- (GeogebraCommonKernelGeosGeoPoint *)getA {
  return GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getA(self);
}

- (GeogebraCommonKernelGeosGeoPoint *)getB {
  return GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getB(self);
}

- (GeogebraCommonKernelGeosGeoPoint *)getC {
  return GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getC(self);
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return GeogebraCommonKernelLocusEquation_eqnCircumcircleArcWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

- (GeogebraCommonKernelGeosGeoConicPart *)getConicPart {
  return (GeogebraCommonKernelGeosGeoConicPart *) check_class_cast([super getConicPart], [GeogebraCommonKernelGeosGeoConicPart class]);
}

- (void)computeSinglePoint {
  GeogebraCommonKernelGeosGeoPoint *midpoint = GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getA(self);
  GeogebraCommonKernelGeosGeoConic_setSinglePointWithGeogebraCommonKernelGeosGeoConic_withDouble_withDouble_((GeogebraCommonKernelGeosGeoConic *) check_class_cast(conicPart_, [GeogebraCommonKernelGeosGeoConic class]), ((GeogebraCommonKernelGeosGeoPoint *) nil_chk(midpoint))->inhomX_, midpoint->inhomY_);
  [super computeSinglePoint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoConicPartCircumcircle", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoConicPartCircumcircle", NULL, 0x1, NULL, NULL },
    { "getAlgo", NULL, "Lgeogebra.common.kernel.algos.AlgoCircleThreePoints;", 0x4, NULL, NULL },
    { "createConicPartWithGeogebraCommonKernelConstruction:withInt:", "createConicPart", "Lgeogebra.common.kernel.geos.GeoConicPart;", 0x4, NULL, NULL },
    { "getA", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x11, NULL, NULL },
    { "getB", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x11, NULL, NULL },
    { "getC", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x11, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lgeogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
    { "getConicPart", NULL, "Lgeogebra.common.kernel.geos.GeoConicPart;", 0x1, NULL, NULL },
    { "computeSinglePoint", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoConicPartCircumcircle = { 2, "AlgoConicPartCircumcircle", "geogebra.common.kernel.algos", NULL, 0x1, 11, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoConicPartCircumcircle;
}

@end

void GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircleND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, A, B, C, type);
}

GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *new_GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self = [GeogebraCommonKernelAlgosAlgoConicPartCircumcircle alloc];
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, A, B, C, type);
  return self;
}

void GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircleND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, A, B, C, type);
}

GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *new_GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self = [GeogebraCommonKernelAlgosAlgoConicPartCircumcircle alloc];
  GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, A, B, C, type);
  return self;
}

GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getA(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self) {
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->A_, [GeogebraCommonKernelGeosGeoPoint class]);
}

GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getB(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self) {
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->B_, [GeogebraCommonKernelGeosGeoPoint class]);
}

GeogebraCommonKernelGeosGeoPoint *GeogebraCommonKernelAlgosAlgoConicPartCircumcircle_getC(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle *self) {
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(self->C_, [GeogebraCommonKernelGeosGeoPoint class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoConicPartCircumcircle)
