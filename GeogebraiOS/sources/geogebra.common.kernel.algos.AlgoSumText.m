//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoSumText.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoSumText.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonKernelAlgosAlgoSumText () {
 @public
  GeogebraCommonKernelGeosGeoList *geoList_;
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoSumText, geoList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoSumText, sb_, JavaLangStringBuilder *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoSumText_compute(GeogebraCommonKernelAlgosAlgoSumText *self);

@implementation GeogebraCommonKernelAlgosAlgoSumText

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList {
  GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)Truncate {
  GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, Truncate);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Sum();
}

- (void)setInputOutput {
  if (Truncate_ == nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, geoList_);
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, geoList_);
    IOSObjectArray_Set(input_, 1, Truncate_);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:result_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getResult {
  return result_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoSumText_compute(self);
}

- (void)dealloc {
  RELEASE_(geoList_);
  RELEASE_(Truncate_);
  RELEASE_(result_);
  RELEASE_(sb_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:", "AlgoSumText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoSumText", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "Truncate_", NULL, 0x1, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "result_", NULL, 0x1, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoSumText = { 2, "AlgoSumText", "geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoSumText;
}

@end

void GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoSumText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, nil);
}

GeogebraCommonKernelAlgosAlgoSumText *new_GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoSumText *self = [GeogebraCommonKernelAlgosAlgoSumText alloc];
  GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelAlgosAlgoSumText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoNumeric *Truncate) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoSumText_set_geoList_(self, geoList);
  GeogebraCommonKernelAlgosAlgoSumText_set_Truncate_(self, Truncate);
  GeogebraCommonKernelAlgosAlgoSumText_setAndConsume_result_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoSumText_compute(self);
  [self->result_ setLabelWithNSString:label];
  [self->result_ setIsTextCommandWithBoolean:YES];
}

GeogebraCommonKernelAlgosAlgoSumText *new_GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoNumeric *Truncate) {
  GeogebraCommonKernelAlgosAlgoSumText *self = [GeogebraCommonKernelAlgosAlgoSumText alloc];
  GeogebraCommonKernelAlgosAlgoSumText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, geoList, Truncate);
  return self;
}

void GeogebraCommonKernelAlgosAlgoSumText_compute(GeogebraCommonKernelAlgosAlgoSumText *self) {
  jint truncate;
  jint size = [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) size];
  if (self->Truncate_ != nil) {
    truncate = J2ObjCFpToInt([self->Truncate_ getDouble]);
    if (truncate < 1 || truncate > size) {
      [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->result_)) setUndefined];
      return;
    }
    size = truncate;
  }
  if (![self->geoList_ isDefined] || size == 0) {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->result_)) setUndefined];
    return;
  }
  if (self->sb_ == nil) {
    GeogebraCommonKernelAlgosAlgoSumText_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
  }
  else {
    [self->sb_ setLengthWithInt:0];
  }
  for (jint i = 0; i < size; i++) {
    GeogebraCommonKernelGeosGeoElement *p = [self->geoList_ getWithInt:i];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(p)) isGeoText]) {
      [((JavaLangStringBuilder *) nil_chk(self->sb_)) appendWithNSString:[((GeogebraCommonKernelGeosGeoText *) check_class_cast(p, [GeogebraCommonKernelGeosGeoText class])) getTextString]];
    }
    else {
      [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->result_)) setUndefined];
      return;
    }
  }
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->result_)) setTextStringWithNSString:[((JavaLangStringBuilder *) nil_chk(self->sb_)) description]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoSumText)
