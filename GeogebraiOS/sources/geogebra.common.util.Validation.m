//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/util/Validation.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/util/TextObject.h"
#include "geogebra/common/util/Validation.h"
#include "java/lang/Double.h"
#include "java/lang/NumberFormatException.h"

static GeogebraCommonUtilValidation *GeogebraCommonUtilValidation_validation_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonUtilValidation, validation_, GeogebraCommonUtilValidation *)
J2OBJC_STATIC_FIELD_SETTER(GeogebraCommonUtilValidation, validation_, GeogebraCommonUtilValidation *)

@interface GeogebraCommonUtilValidation_DoubleValidator : NSObject

- (jdouble)validateDoubleWithGeogebraCommonUtilTextObject:(id<GeogebraCommonUtilTextObject>)tf
                                               withDouble:(jdouble)def;

- (jboolean)checkIntervalWithDouble:(jdouble)val;

- (instancetype)initWithGeogebraCommonUtilValidation:(GeogebraCommonUtilValidation *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonUtilValidation_DoubleValidator)

__attribute__((unused)) static jdouble GeogebraCommonUtilValidation_DoubleValidator_validateDoubleWithGeogebraCommonUtilTextObject_withDouble_(GeogebraCommonUtilValidation_DoubleValidator *self, id<GeogebraCommonUtilTextObject> tf, jdouble def);

__attribute__((unused)) static void GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation_DoubleValidator *self, GeogebraCommonUtilValidation *outer$);

__attribute__((unused)) static GeogebraCommonUtilValidation_DoubleValidator *new_GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonUtilValidation_DoubleValidator)

@interface GeogebraCommonUtilValidation_$1 : GeogebraCommonUtilValidation_DoubleValidator

- (jboolean)checkIntervalWithDouble:(jdouble)val;

- (instancetype)initWithGeogebraCommonUtilValidation:(GeogebraCommonUtilValidation *)outer$
                    withGeogebraCommonUtilValidation:(GeogebraCommonUtilValidation *)superOuter$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonUtilValidation_$1)

__attribute__((unused)) static void GeogebraCommonUtilValidation_$1_initWithGeogebraCommonUtilValidation_withGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation_$1 *self, GeogebraCommonUtilValidation *outer$, GeogebraCommonUtilValidation *superOuter$);

__attribute__((unused)) static GeogebraCommonUtilValidation_$1 *new_GeogebraCommonUtilValidation_$1_initWithGeogebraCommonUtilValidation_withGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation *outer$, GeogebraCommonUtilValidation *superOuter$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonUtilValidation_$1)

J2OBJC_INITIALIZED_DEFN(GeogebraCommonUtilValidation)

@implementation GeogebraCommonUtilValidation

+ (jdouble)validateDoubleWithGeogebraCommonUtilTextObject:(id<GeogebraCommonUtilTextObject>)tf
                                               withDouble:(jdouble)def {
  return GeogebraCommonUtilValidation_validateDoubleWithGeogebraCommonUtilTextObject_withDouble_(tf, def);
}

+ (jdouble)validateDoublePositiveWithGeogebraCommonUtilTextObject:(id<GeogebraCommonUtilTextObject>)tf
                                                       withDouble:(jdouble)def {
  return GeogebraCommonUtilValidation_validateDoublePositiveWithGeogebraCommonUtilTextObject_withDouble_(tf, def);
}

- (instancetype)init {
  GeogebraCommonUtilValidation_init(self);
  return self;
}

+ (void)initialize {
  if (self == [GeogebraCommonUtilValidation class]) {
    JreStrongAssignAndConsume(&GeogebraCommonUtilValidation_validation_, nil, new_GeogebraCommonUtilValidation_init());
    J2OBJC_SET_INITIALIZED(GeogebraCommonUtilValidation)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "validateDoubleWithGeogebraCommonUtilTextObject:withDouble:", "validateDouble", "D", 0x9, NULL, NULL },
    { "validateDoublePositiveWithGeogebraCommonUtilTextObject:withDouble:", "validateDoublePositive", "D", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "validation_", NULL, 0xa, "Lgeogebra.common.util.Validation;", &GeogebraCommonUtilValidation_validation_, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.util.Validation$DoubleValidator;"};
  static const J2ObjcClassInfo _GeogebraCommonUtilValidation = { 2, "Validation", "geogebra.common.util", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_GeogebraCommonUtilValidation;
}

@end

jdouble GeogebraCommonUtilValidation_validateDoubleWithGeogebraCommonUtilTextObject_withDouble_(id<GeogebraCommonUtilTextObject> tf, jdouble def) {
  GeogebraCommonUtilValidation_initialize();
  return GeogebraCommonUtilValidation_DoubleValidator_validateDoubleWithGeogebraCommonUtilTextObject_withDouble_([new_GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation_validation_) autorelease], tf, def);
}

jdouble GeogebraCommonUtilValidation_validateDoublePositiveWithGeogebraCommonUtilTextObject_withDouble_(id<GeogebraCommonUtilTextObject> tf, jdouble def) {
  GeogebraCommonUtilValidation_initialize();
    GeogebraCommonUtilValidation_DoubleValidator *dv;// = [new_GeogebraCommonUtilValidation_$1_initWithGeogebraCommonUtilValidation_withGeogebraCommonUtilValidation_(self, GeogebraCommonUtilValidation_validation_) autorelease];
  return GeogebraCommonUtilValidation_DoubleValidator_validateDoubleWithGeogebraCommonUtilTextObject_withDouble_(dv, tf, def);
}

void GeogebraCommonUtilValidation_init(GeogebraCommonUtilValidation *self) {
  NSObject_init(self);
}

GeogebraCommonUtilValidation *new_GeogebraCommonUtilValidation_init() {
  GeogebraCommonUtilValidation *self = [GeogebraCommonUtilValidation alloc];
  GeogebraCommonUtilValidation_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonUtilValidation)

@implementation GeogebraCommonUtilValidation_DoubleValidator

- (jdouble)validateDoubleWithGeogebraCommonUtilTextObject:(id<GeogebraCommonUtilTextObject>)tf
                                               withDouble:(jdouble)def {
  return GeogebraCommonUtilValidation_DoubleValidator_validateDoubleWithGeogebraCommonUtilTextObject_withDouble_(self, tf, def);
}

- (jboolean)checkIntervalWithDouble:(jdouble)val {
  return YES;
}

- (instancetype)initWithGeogebraCommonUtilValidation:(GeogebraCommonUtilValidation *)outer$ {
  GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "validateDoubleWithGeogebraCommonUtilTextObject:withDouble:", "validateDouble", "D", 0x2, NULL, NULL },
    { "checkIntervalWithDouble:", "checkInterval", "Z", 0x4, NULL, NULL },
    { "initWithGeogebraCommonUtilValidation:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonUtilValidation_DoubleValidator = { 2, "DoubleValidator", "geogebra.common.util", "Validation", 0x2, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonUtilValidation_DoubleValidator;
}

@end

jdouble GeogebraCommonUtilValidation_DoubleValidator_validateDoubleWithGeogebraCommonUtilTextObject_withDouble_(GeogebraCommonUtilValidation_DoubleValidator *self, id<GeogebraCommonUtilTextObject> tf, jdouble def) {
  jdouble val = JavaLangDouble_NaN;
  @try {
    val = JavaLangDouble_parseDoubleWithNSString_([((id<GeogebraCommonUtilTextObject>) nil_chk(tf)) getText]);
  }
  @catch (JavaLangNumberFormatException *e) {
    GeogebraCommonMainApp_debugWithNSString_(JreStrcat("$$", @"invalid number:", [((id<GeogebraCommonUtilTextObject>) nil_chk(tf)) getText]));
  }
  if (!JavaLangDouble_isNaNWithDouble_(val) && !JavaLangDouble_isInfiniteWithDouble_(val) && [self checkIntervalWithDouble:val]) return val;
  [((id<GeogebraCommonUtilTextObject>) nil_chk(tf)) setTextWithNSString:JreStrcat("D", def)];
  return def;
}

void GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation_DoubleValidator *self, GeogebraCommonUtilValidation *outer$) {
  NSObject_init(self);
}

GeogebraCommonUtilValidation_DoubleValidator *new_GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation *outer$) {
  GeogebraCommonUtilValidation_DoubleValidator *self = [GeogebraCommonUtilValidation_DoubleValidator alloc];
  GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonUtilValidation_DoubleValidator)

@implementation GeogebraCommonUtilValidation_$1

- (jboolean)checkIntervalWithDouble:(jdouble)val {
  return val > 0;
}

- (instancetype)initWithGeogebraCommonUtilValidation:(GeogebraCommonUtilValidation *)outer$
                    withGeogebraCommonUtilValidation:(GeogebraCommonUtilValidation *)superOuter$ {
  GeogebraCommonUtilValidation_$1_initWithGeogebraCommonUtilValidation_withGeogebraCommonUtilValidation_(self, outer$, superOuter$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkIntervalWithDouble:", "checkInterval", "Z", 0x4, NULL, NULL },
    { "initWithGeogebraCommonUtilValidation:withGeogebraCommonUtilValidation:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonUtilValidation", "validateDoublePositiveWithGeogebraCommonUtilTextObject:withDouble:" };
  static const J2ObjcClassInfo _GeogebraCommonUtilValidation_$1 = { 2, "", "geogebra.common.util", "Validation", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_GeogebraCommonUtilValidation_$1;
}

@end

void GeogebraCommonUtilValidation_$1_initWithGeogebraCommonUtilValidation_withGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation_$1 *self, GeogebraCommonUtilValidation *outer$, GeogebraCommonUtilValidation *superOuter$) {
  GeogebraCommonUtilValidation_DoubleValidator_initWithGeogebraCommonUtilValidation_(self, superOuter$);
}

GeogebraCommonUtilValidation_$1 *new_GeogebraCommonUtilValidation_$1_initWithGeogebraCommonUtilValidation_withGeogebraCommonUtilValidation_(GeogebraCommonUtilValidation *outer$, GeogebraCommonUtilValidation *superOuter$) {
  GeogebraCommonUtilValidation_$1 *self = [GeogebraCommonUtilValidation_$1 alloc];
  GeogebraCommonUtilValidation_$1_initWithGeogebraCommonUtilValidation_withGeogebraCommonUtilValidation_(self, outer$, superOuter$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonUtilValidation_$1)
