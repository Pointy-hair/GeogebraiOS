//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/barycentric/AlgoTrilinear.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/barycentric/AlgoTrilinear.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"

@interface GeogebraCommonKernelBarycentricAlgoTrilinear () {
 @public
  GeogebraCommonKernelGeosGeoPoint *P1_, *P2_, *P3_;
  id<GeogebraCommonKernelArithmeticNumberValue> v1_, v2_, v3_;
  GeogebraCommonKernelGeosGeoPoint *point_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTrilinear, P1_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTrilinear, P2_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTrilinear, P3_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTrilinear, v1_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTrilinear, v2_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTrilinear, v3_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelBarycentricAlgoTrilinear, point_, GeogebraCommonKernelGeosGeoPoint *)

__attribute__((unused)) static void GeogebraCommonKernelBarycentricAlgoTrilinear_compute(GeogebraCommonKernelBarycentricAlgoTrilinear *self);

@implementation GeogebraCommonKernelBarycentricAlgoTrilinear

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)C
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)a
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)c {
  GeogebraCommonKernelBarycentricAlgoTrilinear_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, A, B, C, a, b, c);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Trilinear();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:6 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, P1_);
  IOSObjectArray_Set(input_, 1, P2_);
  IOSObjectArray_Set(input_, 2, P3_);
  IOSObjectArray_Set(input_, 3, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(v1_)) toGeoElement]);
  IOSObjectArray_Set(input_, 4, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(v2_)) toGeoElement]);
  IOSObjectArray_Set(input_, 5, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(v3_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:point_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoPoint *)getResult {
  return point_;
}

- (void)compute {
  GeogebraCommonKernelBarycentricAlgoTrilinear_compute(self);
}

- (void)dealloc {
  RELEASE_(P1_);
  RELEASE_(P2_);
  RELEASE_(P3_);
  RELEASE_(v1_);
  RELEASE_(v2_);
  RELEASE_(v3_);
  RELEASE_(point_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoTrilinear", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "P1_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "P2_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "P3_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "v1_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "v2_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "v3_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "point_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelBarycentricAlgoTrilinear = { 2, "AlgoTrilinear", "geogebra.common.kernel.barycentric", NULL, 0x1, 5, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelBarycentricAlgoTrilinear;
}

@end

void GeogebraCommonKernelBarycentricAlgoTrilinear_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelBarycentricAlgoTrilinear *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, id<GeogebraCommonKernelArithmeticNumberValue> a, id<GeogebraCommonKernelArithmeticNumberValue> b, id<GeogebraCommonKernelArithmeticNumberValue> c) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelBarycentricAlgoTrilinear_set_P1_(self, A);
  GeogebraCommonKernelBarycentricAlgoTrilinear_set_P2_(self, B);
  GeogebraCommonKernelBarycentricAlgoTrilinear_set_P3_(self, C);
  GeogebraCommonKernelBarycentricAlgoTrilinear_set_v1_(self, a);
  GeogebraCommonKernelBarycentricAlgoTrilinear_set_v2_(self, b);
  GeogebraCommonKernelBarycentricAlgoTrilinear_set_v3_(self, c);
  GeogebraCommonKernelBarycentricAlgoTrilinear_setAndConsume_point_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelBarycentricAlgoTrilinear_compute(self);
  [self->point_ setLabelWithNSString:label];
}

GeogebraCommonKernelBarycentricAlgoTrilinear *new_GeogebraCommonKernelBarycentricAlgoTrilinear_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, id<GeogebraCommonKernelArithmeticNumberValue> a, id<GeogebraCommonKernelArithmeticNumberValue> b, id<GeogebraCommonKernelArithmeticNumberValue> c) {
  GeogebraCommonKernelBarycentricAlgoTrilinear *self = [GeogebraCommonKernelBarycentricAlgoTrilinear alloc];
  GeogebraCommonKernelBarycentricAlgoTrilinear_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, A, B, C, a, b, c);
  return self;
}

void GeogebraCommonKernelBarycentricAlgoTrilinear_compute(GeogebraCommonKernelBarycentricAlgoTrilinear *self) {
  jdouble p1 = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P2_)) distanceWithGeogebraCommonKernelGeosGeoPoint:self->P3_];
  jdouble p2 = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P1_)) distanceWithGeogebraCommonKernelGeosGeoPoint:self->P3_];
  jdouble p3 = [self->P1_ distanceWithGeogebraCommonKernelGeosGeoPoint:self->P2_];
  jdouble x = 0, y = 0, sum = 0;
  x = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->v1_)) getDouble] * p1 * self->P1_->inhomX_ + [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->v2_)) getDouble] * p2 * self->P2_->inhomX_ + [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->v3_)) getDouble] * p3 * ((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P3_))->inhomX_;
  y = [self->v1_ getDouble] * p1 * self->P1_->inhomY_ + [self->v2_ getDouble] * p2 * self->P2_->inhomY_ + [self->v3_ getDouble] * p3 * self->P3_->inhomY_;
  sum = [self->v1_ getDouble] * p1 + [self->v2_ getDouble] * p2 + [self->v3_ getDouble] * p3;
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->point_)) setCoordsWithDouble:x / sum withDouble:y / sum withDouble:1];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelBarycentricAlgoTrilinear)
