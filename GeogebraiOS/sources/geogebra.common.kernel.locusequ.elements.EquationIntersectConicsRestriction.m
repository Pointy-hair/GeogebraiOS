//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationIntersectConicsRestriction.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoIntersect.h"
#include "geogebra/common/kernel/algos/AlgoIntersectConics.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/locusequ/EquationElement.h"
#include "geogebra/common/kernel/locusequ/EquationList.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/elements/EquationIntersectConicsRestriction.h"
#include "geogebra/common/kernel/locusequ/elements/EquationIntersectRestriction.h"

@interface GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction () {
 @public
  GeogebraCommonKernelLocusequEquationElement *firstConic_;
  GeogebraCommonKernelLocusequEquationElement *secondConic_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction, firstConic_, GeogebraCommonKernelLocusequEquationElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction, secondConic_, GeogebraCommonKernelLocusequEquationElement *)

@implementation GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
          withGeogebraCommonKernelAlgosAlgoIntersectConics:(GeogebraCommonKernelAlgosAlgoIntersectConics *)algo
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoIntersectConics_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoIntersectConics *)getAlgo {
  return (GeogebraCommonKernelAlgosAlgoIntersectConics *) check_class_cast([super getAlgo], [GeogebraCommonKernelAlgosAlgoIntersectConics class]);
}

- (GeogebraCommonKernelLocusequEquationElement *)getFirstConic {
  if (self->firstConic_ == nil) {
    GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_set_firstConic_(self, [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithGeogebraCommonKernelGeosGeoElement:[((GeogebraCommonKernelAlgosAlgoIntersectConics *) nil_chk([self getAlgo])) getA]]);
  }
  return self->firstConic_;
}

- (GeogebraCommonKernelLocusequEquationElement *)getSecondConic {
  if (self->secondConic_ == nil) {
    GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_set_secondConic_(self, [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithGeogebraCommonKernelGeosGeoElement:[((GeogebraCommonKernelAlgosAlgoIntersectConics *) nil_chk([self getAlgo])) getB]]);
  }
  return secondConic_;
}

- (GeogebraCommonKernelLocusequEquationList *)forPointImplWithGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)p {
  GeogebraCommonKernelLocusequEquationList *list = [new_GeogebraCommonKernelLocusequEquationList_initWithInt_(2) autorelease];
  [list addAllWithJavaUtilCollection:[((GeogebraCommonKernelLocusequEquationElement *) nil_chk([self getFirstConic])) forPointWithGeogebraCommonKernelLocusequEquationPoint:p]];
  [list addAllWithJavaUtilCollection:[((GeogebraCommonKernelLocusequEquationElement *) nil_chk([self getSecondConic])) forPointWithGeogebraCommonKernelLocusequEquationPoint:p]];
  return list;
}

- (void)dealloc {
  RELEASE_(firstConic_);
  RELEASE_(secondConic_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosAlgoIntersectConics:withGeogebraCommonKernelLocusequEquationScope:", "EquationIntersectConicsRestriction", NULL, 0x1, NULL, NULL },
    { "getAlgo", NULL, "Lgeogebra.common.kernel.algos.AlgoIntersectConics;", 0x1, NULL, NULL },
    { "getFirstConic", NULL, "Lgeogebra.common.kernel.locusequ.EquationElement;", 0x4, NULL, NULL },
    { "getSecondConic", NULL, "Lgeogebra.common.kernel.locusequ.EquationElement;", 0x4, NULL, NULL },
    { "forPointImplWithGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lgeogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "firstConic_", NULL, 0x2, "Lgeogebra.common.kernel.locusequ.EquationElement;", NULL, NULL,  },
    { "secondConic_", NULL, 0x2, "Lgeogebra.common.kernel.locusequ.EquationElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction = { 2, "EquationIntersectConicsRestriction", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction;
}

@end

void GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoIntersectConics_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction *self, GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelAlgosAlgoIntersectConics *algo, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationIntersectRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoIntersect_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
}

GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction *new_GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoIntersectConics_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelAlgosAlgoIntersectConics *algo, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction *self = [GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction alloc];
  GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoIntersectConics_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationIntersectConicsRestriction)
