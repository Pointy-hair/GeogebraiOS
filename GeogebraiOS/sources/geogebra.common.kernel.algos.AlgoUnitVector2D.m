//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoUnitVector2D.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoUnitVector.h"
#include "geogebra/common/kernel/algos/AlgoUnitVector2D.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoVector.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"
#include "geogebra/common/util/MyMath.h"

@implementation GeogebraCommonKernelAlgosAlgoUnitVector2D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)inputGeo {
  GeogebraCommonKernelAlgosAlgoUnitVector2D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, inputGeo);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)createVectorWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonKernelGeosGeoVector *ret = [new_GeogebraCommonKernelGeosGeoVector_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
  ret->z_ = 0.0;
  return ret;
}

- (void)compute {
  [self setXY];
  length_ = GeogebraCommonUtilMyMath_lengthWithDouble_withDouble_(x_, y_);
  ((GeogebraCommonKernelGeosGeoVector *) nil_chk(((GeogebraCommonKernelGeosGeoVector *) check_class_cast(u_, [GeogebraCommonKernelGeosGeoVector class]))))->x_ = x_ / length_;
  ((GeogebraCommonKernelGeosGeoVector *) nil_chk(((GeogebraCommonKernelGeosGeoVector *) check_class_cast(u_, [GeogebraCommonKernelGeosGeoVector class]))))->y_ = y_ / length_;
}

- (void)setXY {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:", "AlgoUnitVector2D", NULL, 0x1, NULL, NULL },
    { "createVectorWithGeogebraCommonKernelConstruction:", "createVector", "Lgeogebra.common.kernel.kernelND.GeoVectorND;", 0x14, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setXY", NULL, "V", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x4, "D", NULL, NULL,  },
    { "y_", NULL, 0x4, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoUnitVector2D = { 2, "AlgoUnitVector2D", "geogebra.common.kernel.algos", NULL, 0x401, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoUnitVector2D;
}

@end

void GeogebraCommonKernelAlgosAlgoUnitVector2D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelAlgosAlgoUnitVector2D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *inputGeo) {
  GeogebraCommonKernelAlgosAlgoUnitVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, inputGeo);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoUnitVector2D)
