//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CmdRotate.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Transform.h"
#include "geogebra/common/kernel/TransformRotate.h"
#include "geogebra/common/kernel/algos/AlgoDispatcher.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CmdRotate.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonKernelCommandsCmdRotate ()

- (IOSObjectArray *)RotateWithNSString:(NSString *)label
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geoRot
withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)phi;

@end

__attribute__((unused)) static IOSObjectArray *GeogebraCommonKernelCommandsCmdRotate_process2WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(GeogebraCommonKernelCommandsCmdRotate *self, GeogebraCommonKernelArithmeticCommand *c, IOSObjectArray *arg, IOSBooleanArray *ok);

__attribute__((unused)) static IOSObjectArray *GeogebraCommonKernelCommandsCmdRotate_process3WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(GeogebraCommonKernelCommandsCmdRotate *self, GeogebraCommonKernelArithmeticCommand *c, IOSObjectArray *arg, IOSBooleanArray *ok);

__attribute__((unused)) static IOSObjectArray *GeogebraCommonKernelCommandsCmdRotate_RotateWithNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelCommandsCmdRotate *self, NSString *label, GeogebraCommonKernelGeosGeoElement *geoRot, id<GeogebraCommonKernelGeosGeoNumberValue> phi);

@implementation GeogebraCommonKernelCommandsCmdRotate

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelCommandsCmdRotate_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray arrayWithLength:n];
  IOSObjectArray *arg;
  switch (n) {
    case 2:
    arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
    return GeogebraCommonKernelCommandsCmdRotate_process2WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(self, c, arg, ok);
    case 3:
    arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
    return GeogebraCommonKernelCommandsCmdRotate_process3WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(self, c, arg, ok);
    default:
    @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

- (IOSObjectArray *)process2WithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                          withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)arg
                                                     withBooleanArray:(IOSBooleanArray *)ok {
  return GeogebraCommonKernelCommandsCmdRotate_process2WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(self, c, arg, ok);
}

- (IOSObjectArray *)process3WithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                          withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)arg
                                                     withBooleanArray:(IOSBooleanArray *)ok {
  return GeogebraCommonKernelCommandsCmdRotate_process3WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(self, c, arg, ok);
}

- (IOSObjectArray *)RotateWithNSString:(NSString *)label
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geoRot
withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)phi {
  return GeogebraCommonKernelCommandsCmdRotate_RotateWithNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(self, label, geoRot, phi);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdRotate", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, "Lgeogebra.common.main.MyError;", NULL },
    { "process2WithGeogebraCommonKernelArithmeticCommand:withGeogebraCommonKernelGeosGeoElementArray:withBooleanArray:", "process2", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
    { "process3WithGeogebraCommonKernelArithmeticCommand:withGeogebraCommonKernelGeosGeoElementArray:withBooleanArray:", "process3", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
    { "RotateWithNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoNumberValue:", "Rotate", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x12, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCmdRotate = { 2, "CmdRotate", "geogebra.common.kernel.commands", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCmdRotate;
}

@end

void GeogebraCommonKernelCommandsCmdRotate_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelCommandsCmdRotate *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelCommandsCmdRotate *new_GeogebraCommonKernelCommandsCmdRotate_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdRotate *self = [GeogebraCommonKernelCommandsCmdRotate alloc];
  GeogebraCommonKernelCommandsCmdRotate_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

IOSObjectArray *GeogebraCommonKernelCommandsCmdRotate_process2WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(GeogebraCommonKernelCommandsCmdRotate *self, GeogebraCommonKernelArithmeticCommand *c, IOSObjectArray *arg, IOSBooleanArray *ok) {
  if ((*IOSBooleanArray_GetRef(nil_chk(ok), 0) = YES) && (*IOSBooleanArray_GetRef(ok, 1) = ([GeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(nil_chk(arg), 1)]))) {
    id<GeogebraCommonKernelGeosGeoNumberValue> phi = (id<GeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(GeogebraCommonKernelGeosGeoNumberValue));
    return GeogebraCommonKernelCommandsCmdRotate_RotateWithNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(self, [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel], IOSObjectArray_Get(arg, 0), phi);
  }
  @throw [self argErrWithGeogebraCommonMainApp:self->app_ withNSString:[((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getName] withGeogebraCommonKernelArithmeticExpressionValue:GeogebraCommonKernelCommandsCommandProcessor_getBadArgWithBooleanArray_withGeogebraCommonKernelGeosGeoElementArray_(ok, arg)];
}

IOSObjectArray *GeogebraCommonKernelCommandsCmdRotate_process3WithGeogebraCommonKernelArithmeticCommand_withGeogebraCommonKernelGeosGeoElementArray_withBooleanArray_(GeogebraCommonKernelCommandsCmdRotate *self, GeogebraCommonKernelArithmeticCommand *c, IOSObjectArray *arg, IOSBooleanArray *ok) {
  if ((*IOSBooleanArray_GetRef(nil_chk(ok), 0) = YES) && (*IOSBooleanArray_GetRef(ok, 1) = ([GeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(nil_chk(arg), 1)])) && (*IOSBooleanArray_GetRef(ok, 2) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoPoint]))) {
    id<GeogebraCommonKernelGeosGeoNumberValue> phi = (id<GeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(GeogebraCommonKernelGeosGeoNumberValue));
    id<GeogebraCommonKernelKernelNDGeoPointND> Q = (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(GeogebraCommonKernelKernelNDGeoPointND));
    return [((GeogebraCommonKernelAlgosAlgoDispatcher *) nil_chk([self getAlgoDispatcher])) RotateWithNSString:[((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel] withGeogebraCommonKernelGeosGeoElement:IOSObjectArray_Get(arg, 0) withGeogebraCommonKernelGeosGeoNumberValue:phi withGeogebraCommonKernelKernelNDGeoPointND:Q];
  }
  @throw [self argErrWithGeogebraCommonMainApp:self->app_ withNSString:[((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getName] withGeogebraCommonKernelArithmeticExpressionValue:GeogebraCommonKernelCommandsCommandProcessor_getBadArgWithBooleanArray_withGeogebraCommonKernelGeosGeoElementArray_(ok, arg)];
}

IOSObjectArray *GeogebraCommonKernelCommandsCmdRotate_RotateWithNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelCommandsCmdRotate *self, NSString *label, GeogebraCommonKernelGeosGeoElement *geoRot, id<GeogebraCommonKernelGeosGeoNumberValue> phi) {
  GeogebraCommonKernelTransform *t = [new_GeogebraCommonKernelTransformRotate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoNumberValue_(self->cons_, phi) autorelease];
  return [t transformWithGeogebraCommonKernelGeosGeoElement:geoRot withNSString:label];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCmdRotate)
