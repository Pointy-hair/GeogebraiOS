//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/ObjectList.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/ObjectList.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/util/AbstractList.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList () {
 @public
  jint growBy_;
}

@end

@implementation GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList

- (instancetype)init {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)size {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_(self, size);
  return self;
}

- (instancetype)initWithInt:(jint)size
                    withInt:(jint)growBy {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(self, size, growBy);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)theObjects {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_(self, theObjects);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)theObjects
                              withInt:(jint)length {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_withInt_(self, theObjects, length);
  return self;
}

- (jint)capacity {
  return ((IOSObjectArray *) nil_chk(objects_))->size_;
}

- (jint)addReturnIndexWithId:(id)o {
  if (num_ >= ((IOSObjectArray *) nil_chk(objects_))->size_ && growBy_ > 0) {
    IOSObjectArray *temp = [IOSObjectArray arrayWithLength:objects_->size_ + growBy_ type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, 0, temp, 0, num_);
    GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_set_objects_(self, temp);
  }
  IOSObjectArray_Set(objects_, num_, o);
  ++num_;
  return num_ - 1;
}

- (jboolean)addWithId:(id)o {
  if (num_ >= ((IOSObjectArray *) nil_chk(objects_))->size_ && growBy_ > 0) {
    IOSObjectArray *temp = [IOSObjectArray arrayWithLength:objects_->size_ + growBy_ type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, 0, temp, 0, num_);
    GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_set_objects_(self, temp);
  }
  IOSObjectArray_Set(objects_, num_, o);
  ++num_;
  return YES;
}

- (void)setSizeWithInt:(jint)s {
  if (s > ((IOSObjectArray *) nil_chk(objects_))->size_) {
    IOSObjectArray *temp = [IOSObjectArray arrayWithLength:s type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, 0, temp, 0, num_);
    GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_set_objects_(self, temp);
  }
  num_ = s;
}

- (void)insertWithInt:(jint)i
               withId:(id)o {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, i, objects_, i + 1, num_ - i);
  IOSObjectArray_Set(nil_chk(objects_), i, o);
  ++num_;
}

- (jboolean)removeWithId:(id)o {
  jint index = [self findWithId:(id) o];
  if (index != -1) {
    [self removeIndexWithInt:index];
  }
  return index != -1;
}

- (void)removeIndexWithInt:(jint)i {
  --num_;
  IOSObjectArray_Set(nil_chk(objects_), i, IOSObjectArray_Get(objects_, num_));
}

- (void)removeIndexWithInt:(jint)first
                   withInt:(jint)last {
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, last + 1, objects_, first, num_ - last - 1);
  num_ -= last - first + 1;
}

- (void)orderedRemoveWithInt:(jint)i {
  if (i > 0 && i < num_ - 1) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, i + 1, objects_, i, num_ - i - 1);
  }
  --num_;
}

- (id)getWithInt:(jint)i {
  return (id) IOSObjectArray_Get(nil_chk(objects_), i);
}

- (id)wrapgetWithInt:(jint)i {
  return [self getWithInt:[self indexToRangeWithInt:i]];
}

- (id)getLast {
  return (id) IOSObjectArray_Get(nil_chk(objects_), num_ - 1);
}

- (id)setWithInt:(jint)i
          withId:(id)o {
  id current = (id) IOSObjectArray_Get(nil_chk(objects_), i);
  IOSObjectArray_Set(objects_, i, o);
  return current;
}

- (jint)findWithId:(id)o {
  for (jint i = 0; i < num_; ++i) {
    if (IOSObjectArray_Get(nil_chk(objects_), i) == o) return i;
  }
  return -1;
}

- (jint)findAfterIndexWithId:(id)o
                     withInt:(jint)index {
  for (jint i = index + 1; i < num_; ++i) {
    if (IOSObjectArray_Get(nil_chk(objects_), i) == o) return i;
  }
  return -1;
}

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *)copy__ {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *ol = [new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_(((IOSObjectArray *) nil_chk(objects_))->size_) autorelease];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, 0, ol->objects_, 0, num_);
  ol->num_ = num_;
  return ol;
}

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *)shrinkCopy {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *ol = [new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_(num_) autorelease];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, 0, ol->objects_, 0, num_);
  ol->num_ = num_;
  return ol;
}

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *)wrapCopyWithInt:(jint)start
                                                                                                    withInt:(jint)inc {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *ol = [new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_(((IOSObjectArray *) nil_chk(objects_))->size_) autorelease];
  for (jint i = 0, j = start; i < num_; ++i, j += inc) {
    IOSObjectArray_Set(ol->objects_, i, [self wrapgetWithInt:j]);
  }
  ol->num_ = num_;
  return ol;
}

- (void)shrink {
  if (((IOSObjectArray *) nil_chk(objects_))->size_ > num_) {
    IOSObjectArray *temp = [IOSObjectArray arrayWithLength:num_ type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(objects_, 0, temp, 0, num_);
    GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_set_objects_(self, temp);
  }
}

- (jint)indexToRangeWithInt:(jint)i {
  while (i < 0) i += num_;
  return i % num_;
}

- (jint)length {
  return ((IOSObjectArray *) nil_chk(objects_))->size_;
}

- (jint)removeDuplicates {
  jint count = 0;
  for (jint i = 0; i < num_; ++i) {
    for (jint j = i + 1; j < num_; ++j) {
      if (IOSObjectArray_Get(nil_chk(objects_), j) == IOSObjectArray_Get(objects_, i)) {
        [self removeIndexWithInt:j];
        --j;
        ++count;
      }
    }
  }
  return count;
}

- (NSString *)description {
  JavaLangStringBuffer *buf = [new_JavaLangStringBuffer_initWithNSString_(@"(") autorelease];
  for (jint i = 0; i < num_; ++i) {
    [buf appendWithNSString:NSString_valueOf_(IOSObjectArray_Get(nil_chk(objects_), i))];
    if (i < num_ - 1) {
      [buf appendWithNSString:@", "];
    }
  }
  [buf appendWithNSString:@")"];
  return [buf description];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_((IOSObjectArray *) check_class_cast(((GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *) nil_chk([self shrinkCopy]))->objects_, [IOSObjectArray class])))) iterator];
}

- (jint)size {
  return num_;
}

- (void)clear {
  num_ = 0;
}

- (void)dealloc {
  RELEASE_(objects_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ObjectList", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "ObjectList", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "ObjectList", NULL, 0x1, NULL, NULL },
    { "initWithNSObjectArray:", "ObjectList", NULL, 0x1, NULL, NULL },
    { "initWithNSObjectArray:withInt:", "ObjectList", NULL, 0x1, NULL, NULL },
    { "capacity", NULL, "I", 0x1, NULL, NULL },
    { "addReturnIndexWithId:", "addReturnIndex", "I", 0x1, NULL, "(TE;)I" },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "setSizeWithInt:", "setSize", "V", 0x1, NULL, NULL },
    { "insertWithInt:withId:", "insert", "V", 0x0, NULL, "(ITE;)V" },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeIndexWithInt:", "removeIndex", "V", 0x1, NULL, NULL },
    { "removeIndexWithInt:withInt:", "removeIndex", "V", 0x0, NULL, NULL },
    { "orderedRemoveWithInt:", "orderedRemove", "V", 0x0, NULL, NULL },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "wrapgetWithInt:", "wrapget", "TE;", 0x1, NULL, "(I)TE;" },
    { "getLast", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "setWithInt:withId:", "set", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "findWithId:", "find", "I", 0x1, NULL, "(TE;)I" },
    { "findAfterIndexWithId:withInt:", "findAfterIndex", "I", 0x0, NULL, "(TE;I)I" },
    { "copy__", "copy", "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.ObjectList;", 0x1, NULL, NULL },
    { "shrinkCopy", NULL, "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.ObjectList;", 0x0, NULL, NULL },
    { "wrapCopyWithInt:withInt:", "wrapCopy", "Lgeogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils.ObjectList;", 0x1, NULL, NULL },
    { "shrink", NULL, "V", 0x1, NULL, NULL },
    { "indexToRangeWithInt:", "indexToRange", "I", 0x0, NULL, NULL },
    { "length", NULL, "I", 0x0, NULL, NULL },
    { "removeDuplicates", NULL, "I", 0x0, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "objects_", NULL, 0x1, "[Ljava.lang.Object;", NULL, NULL,  },
    { "num_", NULL, 0x1, "I", NULL, NULL,  },
    { "growBy_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList = { 2, "ObjectList", "geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.utils", NULL, 0x1, 31, methods, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;" };
  return &_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList;
}

@end

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_init(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(self, 0, 0);
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_init() {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_init(self);
  return self;
}

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self, jint size) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(self, size, 0);
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_(jint size) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_(self, size);
  return self;
}

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self, jint size, jint growBy) {
  JavaUtilAbstractList_init(self);
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_set_objects_(self, nil);
  self->num_ = 0;
  self->growBy_ = 0;
  self->growBy_ = growBy;
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_setAndConsume_objects_(self, [IOSObjectArray newArrayWithLength:size type:NSObject_class_()]);
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(jint size, jint growBy) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(self, size, growBy);
  return self;
}

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self, IOSObjectArray *theObjects) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_withInt_(self, theObjects, ((IOSObjectArray *) nil_chk(theObjects))->size_);
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_(IOSObjectArray *theObjects) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_(self, theObjects);
  return self;
}

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_withInt_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self, IOSObjectArray *theObjects, jint length) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithInt_withInt_(self, length, 0);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(theObjects, 0, self->objects_, 0, length);
  self->num_ = length;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_withInt_(IOSObjectArray *theObjects, jint length) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList_initWithNSObjectArray_withInt_(self, theObjects, length);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsObjectList)
