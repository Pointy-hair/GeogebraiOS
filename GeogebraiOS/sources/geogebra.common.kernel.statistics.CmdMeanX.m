//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/statistics/CmdMeanX.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CmdOneOrTwoListsFunction.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/statistics/AlgoListMeanX.h"
#include "geogebra/common/kernel/statistics/CmdMeanX.h"
#include "geogebra/common/main/MyError.h"

__attribute__((unused)) static GeogebraCommonKernelGeosGeoElement *GeogebraCommonKernelStatisticsCmdMeanX_doCommandWithNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdMeanX *self, NSString *a, GeogebraCommonKernelGeosGeoList *b);

@implementation GeogebraCommonKernelStatisticsCmdMeanX

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelStatisticsCmdMeanX_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSObjectArray *arg;
  arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
  switch (n) {
    case 1:
    arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoList]) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdMeanX_doCommandWithNSString_withGeogebraCommonKernelGeosGeoList_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    default:
    @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)a
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)b {
  return GeogebraCommonKernelStatisticsCmdMeanX_doCommandWithNSString_withGeogebraCommonKernelGeosGeoList_(self, a, b);
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)a
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)b
                          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)c {
  @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:a withGeogebraCommonKernelArithmeticExpressionValue:b];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdMeanX", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, "Lgeogebra.common.main.MyError;", NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelGeosGeoList:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelStatisticsCmdMeanX = { 2, "CmdMeanX", "geogebra.common.kernel.statistics", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelStatisticsCmdMeanX;
}

@end

void GeogebraCommonKernelStatisticsCmdMeanX_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelStatisticsCmdMeanX *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdOneOrTwoListsFunction_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelStatisticsCmdMeanX *new_GeogebraCommonKernelStatisticsCmdMeanX_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelStatisticsCmdMeanX *self = [GeogebraCommonKernelStatisticsCmdMeanX alloc];
  GeogebraCommonKernelStatisticsCmdMeanX_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

GeogebraCommonKernelGeosGeoElement *GeogebraCommonKernelStatisticsCmdMeanX_doCommandWithNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdMeanX *self, NSString *a, GeogebraCommonKernelGeosGeoList *b) {
  GeogebraCommonKernelStatisticsAlgoListMeanX *algo = [new_GeogebraCommonKernelStatisticsAlgoListMeanX_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self->cons_, a, b) autorelease];
  return [algo getResult];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelStatisticsCmdMeanX)
