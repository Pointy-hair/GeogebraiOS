//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/view/probcalculator/StatisticsCollection.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/gui/view/probcalculator/StatisticsCollection.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/main/App.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@interface GeogebraCommonGuiViewProbcalculatorStatisticsCollection () {
 @public
  GeogebraCommonKernelConstruction *cons_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiViewProbcalculatorStatisticsCollection, cons_, GeogebraCommonKernelConstruction *)

@implementation GeogebraCommonGuiViewProbcalculatorStatisticsCollection

- (instancetype)init {
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_init(self);
  return self;
}

- (void)setChiSqDataWithInt:(jint)rows
                    withInt:(jint)columns {
  GeogebraCommonMainApp_debugWithNSString_(JreStrcat("I$I", rows, @" : ", columns));
  self->rows_ = rows;
  self->columns_ = columns;
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_setAndConsume_chiSquareData_(self, [IOSObjectArray newArrayWithDimensions:2 lengths:(jint[]){ rows + 2, columns + 2 } type:NSString_class_()]);
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_setAndConsume_observed_(self, [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ rows, columns }]);
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_setAndConsume_expected_(self, [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ rows, columns }]);
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_setAndConsume_diff_(self, [IOSDoubleArray newArrayWithDimensions:2 lengths:(jint[]){ rows, columns }]);
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_setAndConsume_columnSum_(self, [IOSDoubleArray newArrayWithLength:columns]);
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_setAndConsume_rowSum_(self, [IOSDoubleArray newArrayWithLength:rows]);
}

- (jdouble)getProportion {
  if (count_ > n_) return JavaLangDouble_NaN;
  return 1.0 * count_ / n_;
}

- (jdouble)getProportion2 {
  if (count2_ > n2_) return JavaLangDouble_NaN;
  return 1.0 * count2_ / n2_;
}

- (void)validate {
  if (sd_ < 0) {
    sd_ = JavaLangDouble_NaN;
  }
  if (sd2_ < 0) {
    sd2_ = JavaLangDouble_NaN;
  }
  if (n_ < 0) {
    n_ = JavaLangDouble_NaN;
  }
  if (n2_ < 0) {
    n2_ = JavaLangDouble_NaN;
  }
  if (!JavaLangDouble_isNaNWithDouble_(n_)) {
    n_ = JavaLangMath_roundWithDouble_(n_);
  }
  if (!JavaLangDouble_isNaNWithDouble_(n2_)) {
    n2_ = JavaLangMath_roundWithDouble_(n2_);
  }
  if (level_ < 0 || level_ > 1) {
    level_ = JavaLangDouble_NaN;
  }
}

- (void)dealloc {
  RELEASE_(cons_);
  RELEASE_(tail_);
  RELEASE_(chiSquareData_);
  RELEASE_(observed_);
  RELEASE_(expected_);
  RELEASE_(diff_);
  RELEASE_(columnSum_);
  RELEASE_(rowSum_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "StatisticsCollection", NULL, 0x1, NULL, NULL },
    { "setChiSqDataWithInt:withInt:", "setChiSqData", "V", 0x1, NULL, NULL },
    { "getProportion", NULL, "D", 0x1, NULL, NULL },
    { "getProportion2", NULL, "D", 0x1, NULL, NULL },
    { "validate", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cons_", NULL, 0x2, "Lgeogebra.common.kernel.Construction;", NULL, NULL,  },
    { "mean_", NULL, 0x1, "D", NULL, NULL,  },
    { "mean2_", NULL, 0x1, "D", NULL, NULL,  },
    { "sd_", NULL, 0x1, "D", NULL, NULL,  },
    { "sd2_", NULL, 0x1, "D", NULL, NULL,  },
    { "nullHyp_", NULL, 0x1, "D", NULL, NULL,  },
    { "me_", NULL, 0x1, "D", NULL, NULL,  },
    { "lower_", NULL, 0x1, "D", NULL, NULL,  },
    { "upper_", NULL, 0x1, "D", NULL, NULL,  },
    { "se_", NULL, 0x1, "D", NULL, NULL,  },
    { "testStat_", NULL, 0x1, "D", NULL, NULL,  },
    { "P_", NULL, 0x1, "D", NULL, NULL,  },
    { "df_", NULL, 0x1, "D", NULL, NULL,  },
    { "level_", NULL, 0x1, "D", NULL, NULL,  },
    { "n_", NULL, 0x1, "D", NULL, NULL,  },
    { "n2_", NULL, 0x1, "D", NULL, NULL,  },
    { "count_", NULL, 0x1, "D", NULL, NULL,  },
    { "count2_", NULL, 0x1, "D", NULL, NULL,  },
    { "total_", NULL, 0x1, "D", NULL, NULL,  },
    { "tail_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "pooled_", NULL, 0x1, "Z", NULL, NULL,  },
    { "chiSquareData_", NULL, 0x1, "[[Ljava.lang.String;", NULL, NULL,  },
    { "rows_", NULL, 0x1, "I", NULL, NULL,  },
    { "columns_", NULL, 0x1, "I", NULL, NULL,  },
    { "observed_", NULL, 0x1, "[[D", NULL, NULL,  },
    { "expected_", NULL, 0x1, "[[D", NULL, NULL,  },
    { "diff_", NULL, 0x1, "[[D", NULL, NULL,  },
    { "columnSum_", NULL, 0x1, "[D", NULL, NULL,  },
    { "rowSum_", NULL, 0x1, "[D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiViewProbcalculatorStatisticsCollection = { 2, "StatisticsCollection", "geogebra.common.gui.view.probcalculator", NULL, 0x1, 5, methods, 29, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiViewProbcalculatorStatisticsCollection;
}

@end

void GeogebraCommonGuiViewProbcalculatorStatisticsCollection_init(GeogebraCommonGuiViewProbcalculatorStatisticsCollection *self) {
  NSObject_init(self);
  self->mean_ = JavaLangDouble_NaN;
  self->mean2_ = JavaLangDouble_NaN;
  self->sd_ = JavaLangDouble_NaN;
  self->sd2_ = JavaLangDouble_NaN;
  self->nullHyp_ = JavaLangDouble_NaN;
  self->me_ = JavaLangDouble_NaN;
  self->lower_ = JavaLangDouble_NaN;
  self->upper_ = JavaLangDouble_NaN;
  self->se_ = JavaLangDouble_NaN;
  self->testStat_ = JavaLangDouble_NaN;
  self->P_ = JavaLangDouble_NaN;
  self->df_ = JavaLangDouble_NaN;
  self->n_ = JavaLangDouble_NaN;
  self->n2_ = JavaLangDouble_NaN;
  self->count_ = JavaLangDouble_NaN;
  self->count2_ = JavaLangDouble_NaN;
  self->level_ = .95;
}

GeogebraCommonGuiViewProbcalculatorStatisticsCollection *new_GeogebraCommonGuiViewProbcalculatorStatisticsCollection_init() {
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection *self = [GeogebraCommonGuiViewProbcalculatorStatisticsCollection alloc];
  GeogebraCommonGuiViewProbcalculatorStatisticsCollection_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiViewProbcalculatorStatisticsCollection)
