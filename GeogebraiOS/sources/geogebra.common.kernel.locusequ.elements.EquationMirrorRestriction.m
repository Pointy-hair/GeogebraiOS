//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationMirrorRestriction.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoMirror.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericMidpointRestriction.h"
#include "geogebra/common/kernel/locusequ/elements/EquationMirrorRestriction.h"
#include "geogebra/common/main/App.h"

@implementation GeogebraCommonKernelLocusequElementsEquationMirrorRestriction

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                   withGeogebraCommonKernelAlgosAlgoMirror:(GeogebraCommonKernelAlgosAlgoMirror *)algo
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationMirrorRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoMirror_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosAlgoMirror:withGeogebraCommonKernelLocusequEquationScope:", "EquationMirrorRestriction", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationMirrorRestriction = { 2, "EquationMirrorRestriction", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationMirrorRestriction;
}

@end

void GeogebraCommonKernelLocusequElementsEquationMirrorRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoMirror_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationMirrorRestriction *self, GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelAlgosAlgoMirror *algo, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericMidpointRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  GeogebraCommonKernelGeosGeoElement *p = IOSObjectArray_Get(nil_chk([((GeogebraCommonKernelAlgosAlgoMirror *) nil_chk(algo)) getInput]), 0);
  GeogebraCommonKernelGeosGeoElement *m = IOSObjectArray_Get(nil_chk([algo getInput]), 1);
  GeogebraCommonKernelGeosGeoElement *p_ = IOSObjectArray_Get(nil_chk([algo getOutput]), 0);
  if ([p isKindOfClass:[GeogebraCommonKernelGeosGeoPoint class]] && [m isKindOfClass:[GeogebraCommonKernelGeosGeoPoint class]]) {
    [self setEndsWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(p, [GeogebraCommonKernelGeosGeoPoint class]) withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(p_, [GeogebraCommonKernelGeosGeoPoint class])];
    [self setMidpointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(m, [GeogebraCommonKernelGeosGeoPoint class])];
  }
  else {
    GeogebraCommonMainApp_errorWithNSString_(@"unimplemented");
  }
}

GeogebraCommonKernelLocusequElementsEquationMirrorRestriction *new_GeogebraCommonKernelLocusequElementsEquationMirrorRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoMirror_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelAlgosAlgoMirror *algo, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationMirrorRestriction *self = [GeogebraCommonKernelLocusequElementsEquationMirrorRestriction alloc];
  GeogebraCommonKernelLocusequElementsEquationMirrorRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoMirror_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationMirrorRestriction)
