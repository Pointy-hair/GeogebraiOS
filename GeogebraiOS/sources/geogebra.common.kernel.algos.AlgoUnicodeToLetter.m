//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoUnicodeToLetter.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoUnicodeToLetter.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoText.h"

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoUnicodeToLetter_compute(GeogebraCommonKernelAlgosAlgoUnicodeToLetter *self);

@implementation GeogebraCommonKernelAlgosAlgoUnicodeToLetter

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)a {
  GeogebraCommonKernelAlgosAlgoUnicodeToLetter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, a);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_UnicodeToLetter();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(a_)) toGeoElement]);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getResult {
  return text_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoUnicodeToLetter_compute(self);
}

- (void)dealloc {
  RELEASE_(a_);
  RELEASE_(text_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoUnicodeToLetter", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "a_", NULL, 0x4, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "text_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoUnicodeToLetter = { 2, "AlgoUnicodeToLetter", "geogebra.common.kernel.algos", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoUnicodeToLetter;
}

@end

void GeogebraCommonKernelAlgosAlgoUnicodeToLetter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelAlgosAlgoUnicodeToLetter *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelArithmeticNumberValue> a) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoUnicodeToLetter_set_a_(self, a);
  GeogebraCommonKernelAlgosAlgoUnicodeToLetter_setAndConsume_text_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self->text_ setIsTextCommandWithBoolean:YES];
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoUnicodeToLetter_compute(self);
  [self->text_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoUnicodeToLetter *new_GeogebraCommonKernelAlgosAlgoUnicodeToLetter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelArithmeticNumberValue> a) {
  GeogebraCommonKernelAlgosAlgoUnicodeToLetter *self = [GeogebraCommonKernelAlgosAlgoUnicodeToLetter alloc];
  GeogebraCommonKernelAlgosAlgoUnicodeToLetter_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, a);
  return self;
}

void GeogebraCommonKernelAlgosAlgoUnicodeToLetter_compute(GeogebraCommonKernelAlgosAlgoUnicodeToLetter *self) {
  jchar ss = J2ObjCFpToUnichar([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->a_)) getDouble]);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setTextStringWithNSString:JreStrcat("C", ss)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoUnicodeToLetter)
