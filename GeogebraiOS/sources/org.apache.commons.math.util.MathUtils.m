//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/util/MathUtils.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/Arrays.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/exception/NonMonotonousSequenceException.h"
#include "org/apache/commons/math/exception/util/Localizable.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/util/FastMath.h"
#include "org/apache/commons/math/util/MathUtils.h"

#define OrgApacheCommonsMathUtilMathUtils_NB -1
#define OrgApacheCommonsMathUtilMathUtils_NS -1
#define OrgApacheCommonsMathUtilMathUtils_PB 1
#define OrgApacheCommonsMathUtilMathUtils_PS 1
#define OrgApacheCommonsMathUtilMathUtils_ZB 0
#define OrgApacheCommonsMathUtilMathUtils_ZS 0
#define OrgApacheCommonsMathUtilMathUtils_NAN_GAP 4194304
#define OrgApacheCommonsMathUtilMathUtils_SGN_MASK ((jlong) 0x8000000000000000LL)
#define OrgApacheCommonsMathUtilMathUtils_SGN_MASK_FLOAT ((jint) 0x80000000)

@interface OrgApacheCommonsMathUtilMathUtils ()

- (instancetype)init;

+ (jlong)addAndCheckWithLong:(jlong)a
                    withLong:(jlong)b
withOrgApacheCommonsMathExceptionUtilLocalizable:(id<OrgApacheCommonsMathExceptionUtilLocalizable>)pattern;

+ (void)checkBinomialWithInt:(jint)n
                     withInt:(jint)k;

+ (jdouble)roundUnscaledWithDouble:(jdouble)unscaled
                        withDouble:(jdouble)sign
                           withInt:(jint)roundingMethod;

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, NB, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, NS, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, PB, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, PS, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, ZB, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, ZS, jshort)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, NAN_GAP, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, SGN_MASK, jlong)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, SGN_MASK_FLOAT, jint)

static IOSLongArray *OrgApacheCommonsMathUtilMathUtils_FACTORIALS_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathUtilMathUtils, FACTORIALS_, IOSLongArray *)

__attribute__((unused)) static void OrgApacheCommonsMathUtilMathUtils_init(OrgApacheCommonsMathUtilMathUtils *self);

__attribute__((unused)) static OrgApacheCommonsMathUtilMathUtils *new_OrgApacheCommonsMathUtilMathUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static jlong OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_withOrgApacheCommonsMathExceptionUtilLocalizable_(jlong a, jlong b, id<OrgApacheCommonsMathExceptionUtilLocalizable> pattern);

__attribute__((unused)) static void OrgApacheCommonsMathUtilMathUtils_checkBinomialWithInt_withInt_(jint n, jint k);

__attribute__((unused)) static jdouble OrgApacheCommonsMathUtilMathUtils_roundUnscaledWithDouble_withDouble_withInt_(jdouble unscaled, jdouble sign, jint roundingMethod);

__attribute__((unused)) static void OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *new_OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsMathUtilMathUtils)

@implementation OrgApacheCommonsMathUtilMathUtils

- (instancetype)init {
  OrgApacheCommonsMathUtilMathUtils_init(self);
  return self;
}

+ (jint)addAndCheckWithInt:(jint)x
                   withInt:(jint)y {
  return OrgApacheCommonsMathUtilMathUtils_addAndCheckWithInt_withInt_(x, y);
}

+ (jlong)addAndCheckWithLong:(jlong)a
                    withLong:(jlong)b {
  return OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_(a, b);
}

+ (jlong)addAndCheckWithLong:(jlong)a
                    withLong:(jlong)b
withOrgApacheCommonsMathExceptionUtilLocalizable:(id<OrgApacheCommonsMathExceptionUtilLocalizable>)pattern {
  return OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_withOrgApacheCommonsMathExceptionUtilLocalizable_(a, b, pattern);
}

+ (jlong)binomialCoefficientWithInt:(jint)n
                            withInt:(jint)k {
  return OrgApacheCommonsMathUtilMathUtils_binomialCoefficientWithInt_withInt_(n, k);
}

+ (jdouble)binomialCoefficientDoubleWithInt:(jint)n
                                    withInt:(jint)k {
  return OrgApacheCommonsMathUtilMathUtils_binomialCoefficientDoubleWithInt_withInt_(n, k);
}

+ (jdouble)binomialCoefficientLogWithInt:(jint)n
                                 withInt:(jint)k {
  return OrgApacheCommonsMathUtilMathUtils_binomialCoefficientLogWithInt_withInt_(n, k);
}

+ (void)checkBinomialWithInt:(jint)n
                     withInt:(jint)k {
  OrgApacheCommonsMathUtilMathUtils_checkBinomialWithInt_withInt_(n, k);
}

+ (jint)compareToWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)eps {
  return OrgApacheCommonsMathUtilMathUtils_compareToWithDouble_withDouble_withDouble_(x, y, eps);
}

+ (jdouble)coshWithDouble:(jdouble)x {
  return OrgApacheCommonsMathUtilMathUtils_coshWithDouble_(x);
}

+ (jboolean)equalsWithFloat:(jfloat)x
                  withFloat:(jfloat)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_(x, y);
}

+ (jboolean)equalsIncludingNaNWithFloat:(jfloat)x
                              withFloat:(jfloat)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_(x, y);
}

+ (jboolean)equalsWithFloat:(jfloat)x
                  withFloat:(jfloat)y
                  withFloat:(jfloat)eps {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_withFloat_(x, y, eps);
}

+ (jboolean)equalsIncludingNaNWithFloat:(jfloat)x
                              withFloat:(jfloat)y
                              withFloat:(jfloat)eps {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_withFloat_(x, y, eps);
}

+ (jboolean)equalsWithFloat:(jfloat)x
                  withFloat:(jfloat)y
                    withInt:(jint)maxUlps {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_withInt_(x, y, maxUlps);
}

+ (jboolean)equalsIncludingNaNWithFloat:(jfloat)x
                              withFloat:(jfloat)y
                                withInt:(jint)maxUlps {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_withInt_(x, y, maxUlps);
}

+ (jboolean)equalsWithFloatArray:(IOSFloatArray *)x
                  withFloatArray:(IOSFloatArray *)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithFloatArray_withFloatArray_(x, y);
}

+ (jboolean)equalsIncludingNaNWithFloatArray:(IOSFloatArray *)x
                              withFloatArray:(IOSFloatArray *)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloatArray_withFloatArray_(x, y);
}

+ (jboolean)equalsWithDouble:(jdouble)x
                  withDouble:(jdouble)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_(x, y);
}

+ (jboolean)equalsIncludingNaNWithDouble:(jdouble)x
                              withDouble:(jdouble)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_(x, y);
}

+ (jboolean)equalsWithDouble:(jdouble)x
                  withDouble:(jdouble)y
                  withDouble:(jdouble)eps {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withDouble_(x, y, eps);
}

+ (jboolean)equalsIncludingNaNWithDouble:(jdouble)x
                              withDouble:(jdouble)y
                              withDouble:(jdouble)eps {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_withDouble_(x, y, eps);
}

+ (jboolean)equalsWithDouble:(jdouble)x
                  withDouble:(jdouble)y
                     withInt:(jint)maxUlps {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withInt_(x, y, maxUlps);
}

+ (jboolean)equalsIncludingNaNWithDouble:(jdouble)x
                              withDouble:(jdouble)y
                                 withInt:(jint)maxUlps {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_withInt_(x, y, maxUlps);
}

+ (jboolean)equalsWithDoubleArray:(IOSDoubleArray *)x
                  withDoubleArray:(IOSDoubleArray *)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsWithDoubleArray_withDoubleArray_(x, y);
}

+ (jboolean)equalsIncludingNaNWithDoubleArray:(IOSDoubleArray *)x
                              withDoubleArray:(IOSDoubleArray *)y {
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDoubleArray_withDoubleArray_(x, y);
}

+ (jlong)factorialWithInt:(jint)n {
  return OrgApacheCommonsMathUtilMathUtils_factorialWithInt_(n);
}

+ (jdouble)factorialDoubleWithInt:(jint)n {
  return OrgApacheCommonsMathUtilMathUtils_factorialDoubleWithInt_(n);
}

+ (jdouble)factorialLogWithInt:(jint)n {
  return OrgApacheCommonsMathUtilMathUtils_factorialLogWithInt_(n);
}

+ (jint)gcdWithInt:(jint)p
           withInt:(jint)q {
  return OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(p, q);
}

+ (jlong)gcdWithLong:(jlong)p
            withLong:(jlong)q {
  return OrgApacheCommonsMathUtilMathUtils_gcdWithLong_withLong_(p, q);
}

+ (jint)hash__WithDouble:(jdouble)value {
  return OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_(value);
}

+ (jint)hash__WithDoubleArray:(IOSDoubleArray *)value {
  return OrgApacheCommonsMathUtilMathUtils_hash__WithDoubleArray_(value);
}

+ (jbyte)indicatorWithByte:(jbyte)x {
  return OrgApacheCommonsMathUtilMathUtils_indicatorWithByte_(x);
}

+ (jdouble)indicatorWithDouble:(jdouble)x {
  return OrgApacheCommonsMathUtilMathUtils_indicatorWithDouble_(x);
}

+ (jfloat)indicatorWithFloat:(jfloat)x {
  return OrgApacheCommonsMathUtilMathUtils_indicatorWithFloat_(x);
}

+ (jint)indicatorWithInt:(jint)x {
  return OrgApacheCommonsMathUtilMathUtils_indicatorWithInt_(x);
}

+ (jlong)indicatorWithLong:(jlong)x {
  return OrgApacheCommonsMathUtilMathUtils_indicatorWithLong_(x);
}

+ (jshort)indicatorWithShort:(jshort)x {
  return OrgApacheCommonsMathUtilMathUtils_indicatorWithShort_(x);
}

+ (jint)lcmWithInt:(jint)a
           withInt:(jint)b {
  return OrgApacheCommonsMathUtilMathUtils_lcmWithInt_withInt_(a, b);
}

+ (jlong)lcmWithLong:(jlong)a
            withLong:(jlong)b {
  return OrgApacheCommonsMathUtilMathUtils_lcmWithLong_withLong_(a, b);
}

+ (jdouble)logWithDouble:(jdouble)base
              withDouble:(jdouble)x {
  return OrgApacheCommonsMathUtilMathUtils_logWithDouble_withDouble_(base, x);
}

+ (jint)mulAndCheckWithInt:(jint)x
                   withInt:(jint)y {
  return OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithInt_withInt_(x, y);
}

+ (jlong)mulAndCheckWithLong:(jlong)a
                    withLong:(jlong)b {
  return OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithLong_withLong_(a, b);
}

+ (jdouble)nextAfterWithDouble:(jdouble)d
                    withDouble:(jdouble)direction {
  return OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(d, direction);
}

+ (jdouble)scalbWithDouble:(jdouble)d
                   withInt:(jint)scaleFactor {
  return OrgApacheCommonsMathUtilMathUtils_scalbWithDouble_withInt_(d, scaleFactor);
}

+ (jdouble)normalizeAngleWithDouble:(jdouble)a
                         withDouble:(jdouble)center {
  return OrgApacheCommonsMathUtilMathUtils_normalizeAngleWithDouble_withDouble_(a, center);
}

+ (IOSDoubleArray *)normalizeArrayWithDoubleArray:(IOSDoubleArray *)values
                                       withDouble:(jdouble)normalizedSum {
  return OrgApacheCommonsMathUtilMathUtils_normalizeArrayWithDoubleArray_withDouble_(values, normalizedSum);
}

+ (jdouble)roundWithDouble:(jdouble)x
                   withInt:(jint)scale_ {
  return OrgApacheCommonsMathUtilMathUtils_roundWithDouble_withInt_(x, scale_);
}

+ (jdouble)roundWithDouble:(jdouble)x
                   withInt:(jint)scale_
                   withInt:(jint)roundingMethod {
  return OrgApacheCommonsMathUtilMathUtils_roundWithDouble_withInt_withInt_(x, scale_, roundingMethod);
}

+ (jfloat)roundWithFloat:(jfloat)x
                 withInt:(jint)scale_ {
  return OrgApacheCommonsMathUtilMathUtils_roundWithFloat_withInt_(x, scale_);
}

+ (jfloat)roundWithFloat:(jfloat)x
                 withInt:(jint)scale_
                 withInt:(jint)roundingMethod {
  return OrgApacheCommonsMathUtilMathUtils_roundWithFloat_withInt_withInt_(x, scale_, roundingMethod);
}

+ (jdouble)roundUnscaledWithDouble:(jdouble)unscaled
                        withDouble:(jdouble)sign
                           withInt:(jint)roundingMethod {
  return OrgApacheCommonsMathUtilMathUtils_roundUnscaledWithDouble_withDouble_withInt_(unscaled, sign, roundingMethod);
}

+ (jbyte)signWithByte:(jbyte)x {
  return OrgApacheCommonsMathUtilMathUtils_signWithByte_(x);
}

+ (jdouble)signWithDouble:(jdouble)x {
  return OrgApacheCommonsMathUtilMathUtils_signWithDouble_(x);
}

+ (jfloat)signWithFloat:(jfloat)x {
  return OrgApacheCommonsMathUtilMathUtils_signWithFloat_(x);
}

+ (jint)signWithInt:(jint)x {
  return OrgApacheCommonsMathUtilMathUtils_signWithInt_(x);
}

+ (jlong)signWithLong:(jlong)x {
  return OrgApacheCommonsMathUtilMathUtils_signWithLong_(x);
}

+ (jshort)signWithShort:(jshort)x {
  return OrgApacheCommonsMathUtilMathUtils_signWithShort_(x);
}

+ (jdouble)sinhWithDouble:(jdouble)x {
  return OrgApacheCommonsMathUtilMathUtils_sinhWithDouble_(x);
}

+ (jint)subAndCheckWithInt:(jint)x
                   withInt:(jint)y {
  return OrgApacheCommonsMathUtilMathUtils_subAndCheckWithInt_withInt_(x, y);
}

+ (jlong)subAndCheckWithLong:(jlong)a
                    withLong:(jlong)b {
  return OrgApacheCommonsMathUtilMathUtils_subAndCheckWithLong_withLong_(a, b);
}

+ (jint)powWithInt:(jint)k
           withInt:(jint)e {
  return OrgApacheCommonsMathUtilMathUtils_powWithInt_withInt_(k, e);
}

+ (jint)powWithInt:(jint)k
          withLong:(jlong)e {
  return OrgApacheCommonsMathUtilMathUtils_powWithInt_withLong_(k, e);
}

+ (jlong)powWithLong:(jlong)k
             withInt:(jint)e {
  return OrgApacheCommonsMathUtilMathUtils_powWithLong_withInt_(k, e);
}

+ (jlong)powWithLong:(jlong)k
            withLong:(jlong)e {
  return OrgApacheCommonsMathUtilMathUtils_powWithLong_withLong_(k, e);
}

+ (JavaMathBigInteger *)powWithJavaMathBigInteger:(JavaMathBigInteger *)k
                                          withInt:(jint)e {
  return OrgApacheCommonsMathUtilMathUtils_powWithJavaMathBigInteger_withInt_(k, e);
}

+ (JavaMathBigInteger *)powWithJavaMathBigInteger:(JavaMathBigInteger *)k
                                         withLong:(jlong)e {
  return OrgApacheCommonsMathUtilMathUtils_powWithJavaMathBigInteger_withLong_(k, e);
}

+ (JavaMathBigInteger *)powWithJavaMathBigInteger:(JavaMathBigInteger *)k
                           withJavaMathBigInteger:(JavaMathBigInteger *)e {
  return OrgApacheCommonsMathUtilMathUtils_powWithJavaMathBigInteger_withJavaMathBigInteger_(k, e);
}

+ (jdouble)distance1WithDoubleArray:(IOSDoubleArray *)p1
                    withDoubleArray:(IOSDoubleArray *)p2 {
  return OrgApacheCommonsMathUtilMathUtils_distance1WithDoubleArray_withDoubleArray_(p1, p2);
}

+ (jint)distance1WithIntArray:(IOSIntArray *)p1
                 withIntArray:(IOSIntArray *)p2 {
  return OrgApacheCommonsMathUtilMathUtils_distance1WithIntArray_withIntArray_(p1, p2);
}

+ (jdouble)distanceWithDoubleArray:(IOSDoubleArray *)p1
                   withDoubleArray:(IOSDoubleArray *)p2 {
  return OrgApacheCommonsMathUtilMathUtils_distanceWithDoubleArray_withDoubleArray_(p1, p2);
}

+ (jdouble)distanceWithIntArray:(IOSIntArray *)p1
                   withIntArray:(IOSIntArray *)p2 {
  return OrgApacheCommonsMathUtilMathUtils_distanceWithIntArray_withIntArray_(p1, p2);
}

+ (jdouble)distanceInfWithDoubleArray:(IOSDoubleArray *)p1
                      withDoubleArray:(IOSDoubleArray *)p2 {
  return OrgApacheCommonsMathUtilMathUtils_distanceInfWithDoubleArray_withDoubleArray_(p1, p2);
}

+ (jint)distanceInfWithIntArray:(IOSIntArray *)p1
                   withIntArray:(IOSIntArray *)p2 {
  return OrgApacheCommonsMathUtilMathUtils_distanceInfWithIntArray_withIntArray_(p1, p2);
}

+ (void)checkOrderWithDoubleArray:(IOSDoubleArray *)val
withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum:(OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *)dir
                      withBoolean:(jboolean)strict {
  OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_withBoolean_(val, dir, strict);
}

+ (void)checkOrderWithDoubleArray:(IOSDoubleArray *)val {
  OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_(val);
}

+ (void)checkOrderWithDoubleArray:(IOSDoubleArray *)val
                          withInt:(jint)dir
                      withBoolean:(jboolean)strict {
  OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_withInt_withBoolean_(val, dir, strict);
}

+ (jdouble)safeNormWithDoubleArray:(IOSDoubleArray *)v {
  return OrgApacheCommonsMathUtilMathUtils_safeNormWithDoubleArray_(v);
}

+ (void)initialize {
  if (self == [OrgApacheCommonsMathUtilMathUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsMathUtilMathUtils_FACTORIALS_, nil, [IOSLongArray newArrayWithLongs:(jlong[]){ 1l, 1l, 2l, 6l, 24l, 120l, 720l, 5040l, 40320l, 362880l, 3628800l, 39916800l, 479001600l, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, 355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l } count:21]);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsMathUtilMathUtils)
  }
}

+ (IOSObjectArray *)__annotations_equalsWithFloat_withFloat_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_equalsWithFloatArray_withFloatArray_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_nextAfterWithDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_scalbWithDouble_withInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_checkOrderWithDoubleArray_withInt_withBoolean_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MathUtils", NULL, 0x2, NULL, NULL },
    { "addAndCheckWithInt:withInt:", "addAndCheck", "I", 0x9, NULL, NULL },
    { "addAndCheckWithLong:withLong:", "addAndCheck", "J", 0x9, NULL, NULL },
    { "addAndCheckWithLong:withLong:withOrgApacheCommonsMathExceptionUtilLocalizable:", "addAndCheck", "J", 0xa, NULL, NULL },
    { "binomialCoefficientWithInt:withInt:", "binomialCoefficient", "J", 0x9, NULL, NULL },
    { "binomialCoefficientDoubleWithInt:withInt:", "binomialCoefficientDouble", "D", 0x9, NULL, NULL },
    { "binomialCoefficientLogWithInt:withInt:", "binomialCoefficientLog", "D", 0x9, NULL, NULL },
    { "checkBinomialWithInt:withInt:", "checkBinomial", "V", 0xa, "Ljava.lang.IllegalArgumentException;", NULL },
    { "compareToWithDouble:withDouble:withDouble:", "compareTo", "I", 0x9, NULL, NULL },
    { "coshWithDouble:", "cosh", "D", 0x9, NULL, NULL },
    { "equalsWithFloat:withFloat:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithFloat:withFloat:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "equalsWithFloat:withFloat:withFloat:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithFloat:withFloat:withFloat:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "equalsWithFloat:withFloat:withInt:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithFloat:withFloat:withInt:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "equalsWithFloatArray:withFloatArray:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithFloatArray:withFloatArray:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "equalsWithDouble:withDouble:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithDouble:withDouble:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "equalsWithDouble:withDouble:withDouble:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithDouble:withDouble:withDouble:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "equalsWithDouble:withDouble:withInt:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithDouble:withDouble:withInt:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "equalsWithDoubleArray:withDoubleArray:", "equals", "Z", 0x9, NULL, NULL },
    { "equalsIncludingNaNWithDoubleArray:withDoubleArray:", "equalsIncludingNaN", "Z", 0x9, NULL, NULL },
    { "factorialWithInt:", "factorial", "J", 0x9, NULL, NULL },
    { "factorialDoubleWithInt:", "factorialDouble", "D", 0x9, NULL, NULL },
    { "factorialLogWithInt:", "factorialLog", "D", 0x9, NULL, NULL },
    { "gcdWithInt:withInt:", "gcd", "I", 0x9, NULL, NULL },
    { "gcdWithLong:withLong:", "gcd", "J", 0x9, NULL, NULL },
    { "hash__WithDouble:", "hash", "I", 0x9, NULL, NULL },
    { "hash__WithDoubleArray:", "hash", "I", 0x9, NULL, NULL },
    { "indicatorWithByte:", "indicator", "B", 0x9, NULL, NULL },
    { "indicatorWithDouble:", "indicator", "D", 0x9, NULL, NULL },
    { "indicatorWithFloat:", "indicator", "F", 0x9, NULL, NULL },
    { "indicatorWithInt:", "indicator", "I", 0x9, NULL, NULL },
    { "indicatorWithLong:", "indicator", "J", 0x9, NULL, NULL },
    { "indicatorWithShort:", "indicator", "S", 0x9, NULL, NULL },
    { "lcmWithInt:withInt:", "lcm", "I", 0x9, NULL, NULL },
    { "lcmWithLong:withLong:", "lcm", "J", 0x9, NULL, NULL },
    { "logWithDouble:withDouble:", "log", "D", 0x9, NULL, NULL },
    { "mulAndCheckWithInt:withInt:", "mulAndCheck", "I", 0x9, NULL, NULL },
    { "mulAndCheckWithLong:withLong:", "mulAndCheck", "J", 0x9, NULL, NULL },
    { "nextAfterWithDouble:withDouble:", "nextAfter", "D", 0x9, NULL, NULL },
    { "scalbWithDouble:withInt:", "scalb", "D", 0x9, NULL, NULL },
    { "normalizeAngleWithDouble:withDouble:", "normalizeAngle", "D", 0x9, NULL, NULL },
    { "normalizeArrayWithDoubleArray:withDouble:", "normalizeArray", "[D", 0x9, "Ljava.lang.ArithmeticException;Ljava.lang.IllegalArgumentException;", NULL },
    { "roundWithDouble:withInt:", "round", "D", 0x9, NULL, NULL },
    { "roundWithDouble:withInt:withInt:", "round", "D", 0x9, NULL, NULL },
    { "roundWithFloat:withInt:", "round", "F", 0x9, NULL, NULL },
    { "roundWithFloat:withInt:withInt:", "round", "F", 0x9, NULL, NULL },
    { "roundUnscaledWithDouble:withDouble:withInt:", "roundUnscaled", "D", 0xa, NULL, NULL },
    { "signWithByte:", "sign", "B", 0x9, NULL, NULL },
    { "signWithDouble:", "sign", "D", 0x9, NULL, NULL },
    { "signWithFloat:", "sign", "F", 0x9, NULL, NULL },
    { "signWithInt:", "sign", "I", 0x9, NULL, NULL },
    { "signWithLong:", "sign", "J", 0x9, NULL, NULL },
    { "signWithShort:", "sign", "S", 0x9, NULL, NULL },
    { "sinhWithDouble:", "sinh", "D", 0x9, NULL, NULL },
    { "subAndCheckWithInt:withInt:", "subAndCheck", "I", 0x9, NULL, NULL },
    { "subAndCheckWithLong:withLong:", "subAndCheck", "J", 0x9, NULL, NULL },
    { "powWithInt:withInt:", "pow", "I", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "powWithInt:withLong:", "pow", "I", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "powWithLong:withInt:", "pow", "J", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "powWithLong:withLong:", "pow", "J", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "powWithJavaMathBigInteger:withInt:", "pow", "Ljava.math.BigInteger;", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "powWithJavaMathBigInteger:withLong:", "pow", "Ljava.math.BigInteger;", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "powWithJavaMathBigInteger:withJavaMathBigInteger:", "pow", "Ljava.math.BigInteger;", 0x9, "Ljava.lang.IllegalArgumentException;", NULL },
    { "distance1WithDoubleArray:withDoubleArray:", "distance1", "D", 0x9, NULL, NULL },
    { "distance1WithIntArray:withIntArray:", "distance1", "I", 0x9, NULL, NULL },
    { "distanceWithDoubleArray:withDoubleArray:", "distance", "D", 0x9, NULL, NULL },
    { "distanceWithIntArray:withIntArray:", "distance", "D", 0x9, NULL, NULL },
    { "distanceInfWithDoubleArray:withDoubleArray:", "distanceInf", "D", 0x9, NULL, NULL },
    { "distanceInfWithIntArray:withIntArray:", "distanceInf", "I", 0x9, NULL, NULL },
    { "checkOrderWithDoubleArray:withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum:withBoolean:", "checkOrder", "V", 0x9, NULL, NULL },
    { "checkOrderWithDoubleArray:", "checkOrder", "V", 0x9, NULL, NULL },
    { "checkOrderWithDoubleArray:withInt:withBoolean:", "checkOrder", "V", 0x9, NULL, NULL },
    { "safeNormWithDoubleArray:", "safeNorm", "D", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EPSILON_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheCommonsMathUtilMathUtils_EPSILON },
    { "SAFE_MIN_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheCommonsMathUtilMathUtils_SAFE_MIN },
    { "TWO_PI_", NULL, 0x19, "D", NULL, NULL, .constantValue.asDouble = OrgApacheCommonsMathUtilMathUtils_TWO_PI },
    { "NB_", NULL, 0x1a, "B", NULL, NULL, .constantValue.asChar = OrgApacheCommonsMathUtilMathUtils_NB },
    { "NS_", NULL, 0x1a, "S", NULL, NULL, .constantValue.asShort = OrgApacheCommonsMathUtilMathUtils_NS },
    { "PB_", NULL, 0x1a, "B", NULL, NULL, .constantValue.asChar = OrgApacheCommonsMathUtilMathUtils_PB },
    { "PS_", NULL, 0x1a, "S", NULL, NULL, .constantValue.asShort = OrgApacheCommonsMathUtilMathUtils_PS },
    { "ZB_", NULL, 0x1a, "B", NULL, NULL, .constantValue.asChar = OrgApacheCommonsMathUtilMathUtils_ZB },
    { "ZS_", NULL, 0x1a, "S", NULL, NULL, .constantValue.asShort = OrgApacheCommonsMathUtilMathUtils_ZS },
    { "NAN_GAP_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathUtilMathUtils_NAN_GAP },
    { "SGN_MASK_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathUtilMathUtils_SGN_MASK },
    { "SGN_MASK_FLOAT_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsMathUtilMathUtils_SGN_MASK_FLOAT },
    { "FACTORIALS_", NULL, 0x1a, "[J", &OrgApacheCommonsMathUtilMathUtils_FACTORIALS_, NULL,  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.math.util.MathUtils$OrderDirection;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathUtilMathUtils = { 2, "MathUtils", "org.apache.commons.math.util", NULL, 0x11, 79, methods, 13, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgApacheCommonsMathUtilMathUtils;
}

@end

void OrgApacheCommonsMathUtilMathUtils_init(OrgApacheCommonsMathUtilMathUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsMathUtilMathUtils *new_OrgApacheCommonsMathUtilMathUtils_init() {
  OrgApacheCommonsMathUtilMathUtils *self = [OrgApacheCommonsMathUtilMathUtils alloc];
  OrgApacheCommonsMathUtilMathUtils_init(self);
  return self;
}

jint OrgApacheCommonsMathUtilMathUtils_addAndCheckWithInt_withInt_(jint x, jint y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jlong s = (jlong) x + (jlong) y;
  if (s < JavaLangInteger_MIN_VALUE || s > JavaLangInteger_MAX_VALUE) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OVERFLOW_IN_ADDITION(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(x), JavaLangInteger_valueOfWithInt_(y) } count:2 type:NSObject_class_()]);
  }
  return (jint) s;
}

jlong OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_(jlong a, jlong b) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_withOrgApacheCommonsMathExceptionUtilLocalizable_(a, b, OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OVERFLOW_IN_ADDITION());
}

jlong OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_withOrgApacheCommonsMathExceptionUtilLocalizable_(jlong a, jlong b, id<OrgApacheCommonsMathExceptionUtilLocalizable> pattern) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jlong ret;
  if (a > b) {
    ret = OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_withOrgApacheCommonsMathExceptionUtilLocalizable_(b, a, pattern);
  }
  else {
    if (a < 0) {
      if (b < 0) {
        if (JavaLangLong_MIN_VALUE - b <= a) {
          ret = a + b;
        }
        else {
          @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(pattern, [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(a), JavaLangLong_valueOfWithLong_(b) } count:2 type:NSObject_class_()]);
        }
      }
      else {
        ret = a + b;
      }
    }
    else {
      if (a <= JavaLangLong_MAX_VALUE - b) {
        ret = a + b;
      }
      else {
        @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(pattern, [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(a), JavaLangLong_valueOfWithLong_(b) } count:2 type:NSObject_class_()]);
      }
    }
  }
  return ret;
}

jlong OrgApacheCommonsMathUtilMathUtils_binomialCoefficientWithInt_withInt_(jint n, jint k) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  OrgApacheCommonsMathUtilMathUtils_checkBinomialWithInt_withInt_(n, k);
  if ((n == k) || (k == 0)) {
    return 1;
  }
  if ((k == 1) || (k == n - 1)) {
    return n;
  }
  if (k > n / 2) return OrgApacheCommonsMathUtilMathUtils_binomialCoefficientWithInt_withInt_(n, n - k);
  jlong result = 1;
  if (n <= 61) {
    jint i = n - k + 1;
    for (jint j = 1; j <= k; j++) {
      result = result * i / j;
      i++;
    }
  }
  else if (n <= 66) {
    jint i = n - k + 1;
    for (jint j = 1; j <= k; j++) {
      jlong d = OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(i, j);
      result = (result / (j / d)) * (i / d);
      i++;
    }
  }
  else {
    jint i = n - k + 1;
    for (jint j = 1; j <= k; j++) {
      jlong d = OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(i, j);
      result = OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithLong_withLong_(result / (j / d), i / d);
      i++;
    }
  }
  return result;
}

jdouble OrgApacheCommonsMathUtilMathUtils_binomialCoefficientDoubleWithInt_withInt_(jint n, jint k) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  OrgApacheCommonsMathUtilMathUtils_checkBinomialWithInt_withInt_(n, k);
  if ((n == k) || (k == 0)) {
    return 1.0;
  }
  if ((k == 1) || (k == n - 1)) {
    return n;
  }
  if (k > n / 2) {
    return OrgApacheCommonsMathUtilMathUtils_binomialCoefficientDoubleWithInt_withInt_(n, n - k);
  }
  if (n < 67) {
    return OrgApacheCommonsMathUtilMathUtils_binomialCoefficientWithInt_withInt_(n, k);
  }
  jdouble result = 1.0;
  for (jint i = 1; i <= k; i++) {
    result *= (jdouble) (n - k + i) / (jdouble) i;
  }
  return OrgApacheCommonsMathUtilFastMath_floorWithDouble_(result + 0.5);
}

jdouble OrgApacheCommonsMathUtilMathUtils_binomialCoefficientLogWithInt_withInt_(jint n, jint k) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  OrgApacheCommonsMathUtilMathUtils_checkBinomialWithInt_withInt_(n, k);
  if ((n == k) || (k == 0)) {
    return 0;
  }
  if ((k == 1) || (k == n - 1)) {
    return OrgApacheCommonsMathUtilFastMath_logWithDouble_(n);
  }
  if (n < 67) {
    return OrgApacheCommonsMathUtilFastMath_logWithDouble_(OrgApacheCommonsMathUtilMathUtils_binomialCoefficientWithInt_withInt_(n, k));
  }
  if (n < 1030) {
    return OrgApacheCommonsMathUtilFastMath_logWithDouble_(OrgApacheCommonsMathUtilMathUtils_binomialCoefficientDoubleWithInt_withInt_(n, k));
  }
  if (k > n / 2) {
    return OrgApacheCommonsMathUtilMathUtils_binomialCoefficientLogWithInt_withInt_(n, n - k);
  }
  jdouble logSum = 0;
  for (jint i = n - k + 1; i <= n; i++) {
    logSum += OrgApacheCommonsMathUtilFastMath_logWithDouble_(i);
  }
  for (jint i = 2; i <= k; i++) {
    logSum -= OrgApacheCommonsMathUtilFastMath_logWithDouble_(i);
  }
  return logSum;
}

void OrgApacheCommonsMathUtilMathUtils_checkBinomialWithInt_withInt_(jint n, jint k) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (n < k) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_BINOMIAL_INVALID_PARAMETERS_ORDER(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(n), JavaLangInteger_valueOfWithInt_(k) } count:2 type:NSObject_class_()]);
  }
  if (n < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_BINOMIAL_NEGATIVE_PARAMETER(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(n) } count:1 type:NSObject_class_()]);
  }
}

jint OrgApacheCommonsMathUtilMathUtils_compareToWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble eps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withDouble_(x, y, eps)) {
    return 0;
  }
  else if (x < y) {
    return -1;
  }
  return 1;
}

jdouble OrgApacheCommonsMathUtilMathUtils_coshWithDouble_(jdouble x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (OrgApacheCommonsMathUtilFastMath_expWithDouble_(x) + OrgApacheCommonsMathUtilFastMath_expWithDouble_(-x)) / 2.0;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_(jfloat x, jfloat y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (JavaLangFloat_isNaNWithFloat_(x) && JavaLangFloat_isNaNWithFloat_(y)) || x == y;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_(jfloat x, jfloat y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (JavaLangFloat_isNaNWithFloat_(x) && JavaLangFloat_isNaNWithFloat_(y)) || OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_withInt_(x, y, 1);
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_withFloat_(jfloat x, jfloat y, jfloat eps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_withInt_(x, y, 1) || OrgApacheCommonsMathUtilFastMath_absWithFloat_(y - x) <= eps;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_withFloat_(jfloat x, jfloat y, jfloat eps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_(x, y) || (OrgApacheCommonsMathUtilFastMath_absWithFloat_(y - x) <= eps);
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_withInt_(jfloat x, jfloat y, jint maxUlps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  NSCAssert(maxUlps > 0 && maxUlps < OrgApacheCommonsMathUtilMathUtils_NAN_GAP, @"org/apache/commons/math/util/MathUtils.java:492 condition failed: assert maxUlps > 0 && maxUlps < NAN_GAP;");
  jint xInt = JavaLangFloat_floatToIntBitsWithFloat_(x);
  jint yInt = JavaLangFloat_floatToIntBitsWithFloat_(y);
  if (xInt < 0) {
    xInt = OrgApacheCommonsMathUtilMathUtils_SGN_MASK_FLOAT - xInt;
  }
  if (yInt < 0) {
    yInt = OrgApacheCommonsMathUtilMathUtils_SGN_MASK_FLOAT - yInt;
  }
  jboolean isEqual = OrgApacheCommonsMathUtilFastMath_absWithInt_(xInt - yInt) <= maxUlps;
  return isEqual && !JavaLangFloat_isNaNWithFloat_(x) && !JavaLangFloat_isNaNWithFloat_(y);
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_withInt_(jfloat x, jfloat y, jint maxUlps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (JavaLangFloat_isNaNWithFloat_(x) && JavaLangFloat_isNaNWithFloat_(y)) || OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_withInt_(x, y, maxUlps);
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithFloatArray_withFloatArray_(IOSFloatArray *x, IOSFloatArray *y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if ((x == nil) || (y == nil)) {
    return !((x == nil) ^ (y == nil));
  }
  if (((IOSFloatArray *) nil_chk(x))->size_ != ((IOSFloatArray *) nil_chk(y))->size_) {
    return NO;
  }
  for (jint i = 0; i < x->size_; ++i) {
    if (!OrgApacheCommonsMathUtilMathUtils_equalsWithFloat_withFloat_(IOSFloatArray_Get(x, i), IOSFloatArray_Get(y, i))) {
      return NO;
    }
  }
  return YES;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloatArray_withFloatArray_(IOSFloatArray *x, IOSFloatArray *y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if ((x == nil) || (y == nil)) {
    return !((x == nil) ^ (y == nil));
  }
  if (((IOSFloatArray *) nil_chk(x))->size_ != ((IOSFloatArray *) nil_chk(y))->size_) {
    return NO;
  }
  for (jint i = 0; i < x->size_; ++i) {
    if (!OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithFloat_withFloat_(IOSFloatArray_Get(x, i), IOSFloatArray_Get(y, i))) {
      return NO;
    }
  }
  return YES;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_(jdouble x, jdouble y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (JavaLangDouble_isNaNWithDouble_(x) && JavaLangDouble_isNaNWithDouble_(y)) || x == y;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_(jdouble x, jdouble y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (JavaLangDouble_isNaNWithDouble_(x) && JavaLangDouble_isNaNWithDouble_(y)) || OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withInt_(x, y, 1);
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble eps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_(x, y) || OrgApacheCommonsMathUtilFastMath_absWithDouble_(y - x) <= eps;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble eps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_(x, y) || (OrgApacheCommonsMathUtilFastMath_absWithDouble_(y - x) <= eps);
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withInt_(jdouble x, jdouble y, jint maxUlps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  NSCAssert(maxUlps > 0 && maxUlps < OrgApacheCommonsMathUtilMathUtils_NAN_GAP, @"org/apache/commons/math/util/MathUtils.java:682 condition failed: assert maxUlps > 0 && maxUlps < NAN_GAP;");
  jlong xInt = JavaLangDouble_doubleToLongBitsWithDouble_(x);
  jlong yInt = JavaLangDouble_doubleToLongBitsWithDouble_(y);
  if (xInt < 0) {
    xInt = OrgApacheCommonsMathUtilMathUtils_SGN_MASK - xInt;
  }
  if (yInt < 0) {
    yInt = OrgApacheCommonsMathUtilMathUtils_SGN_MASK - yInt;
  }
  return OrgApacheCommonsMathUtilFastMath_absWithLong_(xInt - yInt) <= maxUlps;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_withInt_(jdouble x, jdouble y, jint maxUlps) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (JavaLangDouble_isNaNWithDouble_(x) && JavaLangDouble_isNaNWithDouble_(y)) || OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_withInt_(x, y, maxUlps);
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsWithDoubleArray_withDoubleArray_(IOSDoubleArray *x, IOSDoubleArray *y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if ((x == nil) || (y == nil)) {
    return !((x == nil) ^ (y == nil));
  }
  if (((IOSDoubleArray *) nil_chk(x))->size_ != ((IOSDoubleArray *) nil_chk(y))->size_) {
    return NO;
  }
  for (jint i = 0; i < x->size_; ++i) {
    if (!OrgApacheCommonsMathUtilMathUtils_equalsWithDouble_withDouble_(IOSDoubleArray_Get(x, i), IOSDoubleArray_Get(y, i))) {
      return NO;
    }
  }
  return YES;
}

jboolean OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDoubleArray_withDoubleArray_(IOSDoubleArray *x, IOSDoubleArray *y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if ((x == nil) || (y == nil)) {
    return !((x == nil) ^ (y == nil));
  }
  if (((IOSDoubleArray *) nil_chk(x))->size_ != ((IOSDoubleArray *) nil_chk(y))->size_) {
    return NO;
  }
  for (jint i = 0; i < x->size_; ++i) {
    if (!OrgApacheCommonsMathUtilMathUtils_equalsIncludingNaNWithDouble_withDouble_(IOSDoubleArray_Get(x, i), IOSDoubleArray_Get(y, i))) {
      return NO;
    }
  }
  return YES;
}

jlong OrgApacheCommonsMathUtilMathUtils_factorialWithInt_(jint n) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (n < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_FACTORIAL_NEGATIVE_PARAMETER(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(n) } count:1 type:NSObject_class_()]);
  }
  if (n > 20) {
    @throw [new_JavaLangArithmeticException_initWithNSString_(@"factorial value is too large to fit in a long") autorelease];
  }
  return IOSLongArray_Get(nil_chk(OrgApacheCommonsMathUtilMathUtils_FACTORIALS_), n);
}

jdouble OrgApacheCommonsMathUtilMathUtils_factorialDoubleWithInt_(jint n) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (n < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_FACTORIAL_NEGATIVE_PARAMETER(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(n) } count:1 type:NSObject_class_()]);
  }
  if (n < 21) {
    return OrgApacheCommonsMathUtilMathUtils_factorialWithInt_(n);
  }
  return OrgApacheCommonsMathUtilFastMath_floorWithDouble_(OrgApacheCommonsMathUtilFastMath_expWithDouble_(OrgApacheCommonsMathUtilMathUtils_factorialLogWithInt_(n)) + 0.5);
}

jdouble OrgApacheCommonsMathUtilMathUtils_factorialLogWithInt_(jint n) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (n < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_FACTORIAL_NEGATIVE_PARAMETER(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(n) } count:1 type:NSObject_class_()]);
  }
  if (n < 21) {
    return OrgApacheCommonsMathUtilFastMath_logWithDouble_(OrgApacheCommonsMathUtilMathUtils_factorialWithInt_(n));
  }
  jdouble logSum = 0;
  for (jint i = 2; i <= n; i++) {
    logSum += OrgApacheCommonsMathUtilFastMath_logWithDouble_(i);
  }
  return logSum;
}

jint OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(jint p, jint q) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jint u = p;
  jint v = q;
  if ((u == 0) || (v == 0)) {
    if ((u == JavaLangInteger_MIN_VALUE) || (v == JavaLangInteger_MIN_VALUE)) {
      @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_GCD_OVERFLOW_32_BITS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(p), JavaLangInteger_valueOfWithInt_(q) } count:2 type:NSObject_class_()]);
    }
    return OrgApacheCommonsMathUtilFastMath_absWithInt_(u) + OrgApacheCommonsMathUtilFastMath_absWithInt_(v);
  }
  if (u > 0) {
    u = -u;
  }
  if (v > 0) {
    v = -v;
  }
  jint k = 0;
  while ((u & 1) == 0 && (v & 1) == 0 && k < 31) {
    u /= 2;
    v /= 2;
    k++;
  }
  if (k == 31) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_GCD_OVERFLOW_32_BITS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(p), JavaLangInteger_valueOfWithInt_(q) } count:2 type:NSObject_class_()]);
  }
  jint t = ((u & 1) == 1) ? v : -(u / 2);
  do {
    while ((t & 1) == 0) {
      t /= 2;
    }
    if (t > 0) {
      u = -t;
    }
    else {
      v = t;
    }
    t = (v - u) / 2;
  }
  while (t != 0);
  return -u * (LShift32(1, k));
}

jlong OrgApacheCommonsMathUtilMathUtils_gcdWithLong_withLong_(jlong p, jlong q) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jlong u = p;
  jlong v = q;
  if ((u == 0) || (v == 0)) {
    if ((u == JavaLangLong_MIN_VALUE) || (v == JavaLangLong_MIN_VALUE)) {
      @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_GCD_OVERFLOW_64_BITS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(p), JavaLangLong_valueOfWithLong_(q) } count:2 type:NSObject_class_()]);
    }
    return OrgApacheCommonsMathUtilFastMath_absWithLong_(u) + OrgApacheCommonsMathUtilFastMath_absWithLong_(v);
  }
  if (u > 0) {
    u = -u;
  }
  if (v > 0) {
    v = -v;
  }
  jint k = 0;
  while ((u & 1) == 0 && (v & 1) == 0 && k < 63) {
    u /= 2;
    v /= 2;
    k++;
  }
  if (k == 63) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_GCD_OVERFLOW_64_BITS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(p), JavaLangLong_valueOfWithLong_(q) } count:2 type:NSObject_class_()]);
  }
  jlong t = ((u & 1) == 1) ? v : -(u / 2);
  do {
    while ((t & 1) == 0) {
      t /= 2;
    }
    if (t > 0) {
      u = -t;
    }
    else {
      v = t;
    }
    t = (v - u) / 2;
  }
  while (t != 0);
  return -u * (LShift64(1LL, k));
}

jint OrgApacheCommonsMathUtilMathUtils_hash__WithDouble_(jdouble value) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return ((jint) [((JavaLangDouble *) [new_JavaLangDouble_initWithDouble_(value) autorelease]) hash]);
}

jint OrgApacheCommonsMathUtilMathUtils_hash__WithDoubleArray_(IOSDoubleArray *value) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return JavaUtilArrays_hashCodeWithDoubleArray_(value);
}

jbyte OrgApacheCommonsMathUtilMathUtils_indicatorWithByte_(jbyte x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x >= OrgApacheCommonsMathUtilMathUtils_ZB) ? OrgApacheCommonsMathUtilMathUtils_PB : OrgApacheCommonsMathUtilMathUtils_NB;
}

jdouble OrgApacheCommonsMathUtilMathUtils_indicatorWithDouble_(jdouble x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (JavaLangDouble_isNaNWithDouble_(x)) {
    return JavaLangDouble_NaN;
  }
  return (x >= 0.0) ? 1.0 : -1.0;
}

jfloat OrgApacheCommonsMathUtilMathUtils_indicatorWithFloat_(jfloat x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (JavaLangFloat_isNaNWithFloat_(x)) {
    return JavaLangFloat_NaN;
  }
  return (x >= 0.0f) ? 1.0f : -1.0f;
}

jint OrgApacheCommonsMathUtilMathUtils_indicatorWithInt_(jint x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x >= 0) ? 1 : -1;
}

jlong OrgApacheCommonsMathUtilMathUtils_indicatorWithLong_(jlong x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x >= 0LL) ? 1LL : -1LL;
}

jshort OrgApacheCommonsMathUtilMathUtils_indicatorWithShort_(jshort x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x >= OrgApacheCommonsMathUtilMathUtils_ZS) ? OrgApacheCommonsMathUtilMathUtils_PS : OrgApacheCommonsMathUtilMathUtils_NS;
}

jint OrgApacheCommonsMathUtilMathUtils_lcmWithInt_withInt_(jint a, jint b) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (a == 0 || b == 0) {
    return 0;
  }
  jint lcm = OrgApacheCommonsMathUtilFastMath_absWithInt_(OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithInt_withInt_(a / OrgApacheCommonsMathUtilMathUtils_gcdWithInt_withInt_(a, b), b));
  if (lcm == JavaLangInteger_MIN_VALUE) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_LCM_OVERFLOW_32_BITS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(a), JavaLangInteger_valueOfWithInt_(b) } count:2 type:NSObject_class_()]);
  }
  return lcm;
}

jlong OrgApacheCommonsMathUtilMathUtils_lcmWithLong_withLong_(jlong a, jlong b) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (a == 0 || b == 0) {
    return 0;
  }
  jlong lcm = OrgApacheCommonsMathUtilFastMath_absWithLong_(OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithLong_withLong_(a / OrgApacheCommonsMathUtilMathUtils_gcdWithLong_withLong_(a, b), b));
  if (lcm == JavaLangLong_MIN_VALUE) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_LCM_OVERFLOW_64_BITS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(a), JavaLangLong_valueOfWithLong_(b) } count:2 type:NSObject_class_()]);
  }
  return lcm;
}

jdouble OrgApacheCommonsMathUtilMathUtils_logWithDouble_withDouble_(jdouble base, jdouble x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilFastMath_logWithDouble_(x) / OrgApacheCommonsMathUtilFastMath_logWithDouble_(base);
}

jint OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithInt_withInt_(jint x, jint y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jlong m = ((jlong) x) * ((jlong) y);
  if (m < JavaLangInteger_MIN_VALUE || m > JavaLangInteger_MAX_VALUE) {
    @throw [new_JavaLangArithmeticException_initWithNSString_(@"overflow: mul") autorelease];
  }
  return (jint) m;
}

jlong OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithLong_withLong_(jlong a, jlong b) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jlong ret;
  NSString *msg = @"overflow: multiply";
  if (a > b) {
    ret = OrgApacheCommonsMathUtilMathUtils_mulAndCheckWithLong_withLong_(b, a);
  }
  else {
    if (a < 0) {
      if (b < 0) {
        if (a >= JavaLangLong_MAX_VALUE / b) {
          ret = a * b;
        }
        else {
          @throw [new_JavaLangArithmeticException_initWithNSString_(msg) autorelease];
        }
      }
      else if (b > 0) {
        if (JavaLangLong_MIN_VALUE / b <= a) {
          ret = a * b;
        }
        else {
          @throw [new_JavaLangArithmeticException_initWithNSString_(msg) autorelease];
        }
      }
      else {
        ret = 0;
      }
    }
    else if (a > 0) {
      if (a <= JavaLangLong_MAX_VALUE / b) {
        ret = a * b;
      }
      else {
        @throw [new_JavaLangArithmeticException_initWithNSString_(msg) autorelease];
      }
    }
    else {
      ret = 0;
    }
  }
  return ret;
}

jdouble OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(jdouble d, jdouble direction) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (JavaLangDouble_isNaNWithDouble_(d) || JavaLangDouble_isInfiniteWithDouble_(d)) {
    return d;
  }
  else if (d == 0) {
    return (direction < 0) ? -JavaLangDouble_MIN_VALUE : JavaLangDouble_MIN_VALUE;
  }
  jlong bits = JavaLangDouble_doubleToLongBitsWithDouble_(d);
  jlong sign = bits & -0x7fffffffffffffffLL - 1;
  jlong exponent = bits & (jlong) 0x7ff0000000000000LL;
  jlong mantissa = bits & (jlong) 0x000fffffffffffffLL;
  if (d * (direction - d) >= 0) {
    if (mantissa == (jlong) 0x000fffffffffffffLL) {
      return JavaLangDouble_longBitsToDoubleWithLong_(sign | (exponent + (jlong) 0x0010000000000000LL));
    }
    else {
      return JavaLangDouble_longBitsToDoubleWithLong_(sign | exponent | (mantissa + 1));
    }
  }
  else {
    if (mantissa == 0LL) {
      return JavaLangDouble_longBitsToDoubleWithLong_(sign | (exponent - (jlong) 0x0010000000000000LL) | (jlong) 0x000fffffffffffffLL);
    }
    else {
      return JavaLangDouble_longBitsToDoubleWithLong_(sign | exponent | (mantissa - 1));
    }
  }
}

jdouble OrgApacheCommonsMathUtilMathUtils_scalbWithDouble_withInt_(jdouble d, jint scaleFactor) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilFastMath_scalbWithDouble_withInt_(d, scaleFactor);
}

jdouble OrgApacheCommonsMathUtilMathUtils_normalizeAngleWithDouble_withDouble_(jdouble a, jdouble center) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return a - OrgApacheCommonsMathUtilMathUtils_TWO_PI * OrgApacheCommonsMathUtilFastMath_floorWithDouble_((a + OrgApacheCommonsMathUtilFastMath_PI - center) / OrgApacheCommonsMathUtilMathUtils_TWO_PI);
}

IOSDoubleArray *OrgApacheCommonsMathUtilMathUtils_normalizeArrayWithDoubleArray_withDouble_(IOSDoubleArray *values, jdouble normalizedSum) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (JavaLangDouble_isInfiniteWithDouble_(normalizedSum)) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NORMALIZE_INFINITE(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  if (JavaLangDouble_isNaNWithDouble_(normalizedSum)) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NORMALIZE_NAN(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  jdouble sum = 0.0;
  jint len = ((IOSDoubleArray *) nil_chk(values))->size_;
  IOSDoubleArray *out = [IOSDoubleArray arrayWithLength:len];
  for (jint i = 0; i < len; i++) {
    if (JavaLangDouble_isInfiniteWithDouble_(IOSDoubleArray_Get(values, i))) {
      @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INFINITE_ARRAY_ELEMENT(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(values, i)), JavaLangInteger_valueOfWithInt_(i) } count:2 type:NSObject_class_()]);
    }
    if (!JavaLangDouble_isNaNWithDouble_(IOSDoubleArray_Get(values, i))) {
      sum += IOSDoubleArray_Get(values, i);
    }
  }
  if (sum == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_ARRAY_SUMS_TO_ZERO(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  for (jint i = 0; i < len; i++) {
    if (JavaLangDouble_isNaNWithDouble_(IOSDoubleArray_Get(values, i))) {
      *IOSDoubleArray_GetRef(out, i) = JavaLangDouble_NaN;
    }
    else {
      *IOSDoubleArray_GetRef(out, i) = IOSDoubleArray_Get(values, i) * normalizedSum / sum;
    }
  }
  return out;
}

jdouble OrgApacheCommonsMathUtilMathUtils_roundWithDouble_withInt_(jdouble x, jint scale_) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilMathUtils_roundWithDouble_withInt_withInt_(x, scale_, JavaMathBigDecimal_ROUND_HALF_UP);
}

jdouble OrgApacheCommonsMathUtilMathUtils_roundWithDouble_withInt_withInt_(jdouble x, jint scale_, jint roundingMethod) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  @try {
    return [((JavaMathBigDecimal *) nil_chk(([((JavaMathBigDecimal *) [new_JavaMathBigDecimal_initWithNSString_(JavaLangDouble_toStringWithDouble_(x)) autorelease]) setScaleWithInt:scale_ withInt:roundingMethod]))) doubleValue];
  }
  @catch (JavaLangNumberFormatException *ex) {
    if (JavaLangDouble_isInfiniteWithDouble_(x)) {
      return x;
    }
    else {
      return JavaLangDouble_NaN;
    }
  }
}

jfloat OrgApacheCommonsMathUtilMathUtils_roundWithFloat_withInt_(jfloat x, jint scale_) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return OrgApacheCommonsMathUtilMathUtils_roundWithFloat_withInt_withInt_(x, scale_, JavaMathBigDecimal_ROUND_HALF_UP);
}

jfloat OrgApacheCommonsMathUtilMathUtils_roundWithFloat_withInt_withInt_(jfloat x, jint scale_, jint roundingMethod) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jfloat sign = OrgApacheCommonsMathUtilMathUtils_indicatorWithFloat_(x);
  jfloat factor = (jfloat) OrgApacheCommonsMathUtilFastMath_powWithDouble_withDouble_(10.0f, scale_) * sign;
  return (jfloat) OrgApacheCommonsMathUtilMathUtils_roundUnscaledWithDouble_withDouble_withInt_(x * factor, sign, roundingMethod) / factor;
}

jdouble OrgApacheCommonsMathUtilMathUtils_roundUnscaledWithDouble_withDouble_withInt_(jdouble unscaled, jdouble sign, jint roundingMethod) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  switch (roundingMethod) {
    case JavaMathBigDecimal_ROUND_CEILING:
    if (sign == -1) {
      unscaled = OrgApacheCommonsMathUtilFastMath_floorWithDouble_(OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_NEGATIVE_INFINITY));
    }
    else {
      unscaled = OrgApacheCommonsMathUtilFastMath_ceilWithDouble_(OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_POSITIVE_INFINITY));
    }
    break;
    case JavaMathBigDecimal_ROUND_DOWN:
    unscaled = OrgApacheCommonsMathUtilFastMath_floorWithDouble_(OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_NEGATIVE_INFINITY));
    break;
    case JavaMathBigDecimal_ROUND_FLOOR:
    if (sign == -1) {
      unscaled = OrgApacheCommonsMathUtilFastMath_ceilWithDouble_(OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_POSITIVE_INFINITY));
    }
    else {
      unscaled = OrgApacheCommonsMathUtilFastMath_floorWithDouble_(OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_NEGATIVE_INFINITY));
    }
    break;
    case JavaMathBigDecimal_ROUND_HALF_DOWN:
    {
      unscaled = OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_NEGATIVE_INFINITY);
      jdouble fraction = unscaled - OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled);
      if (fraction > 0.5) {
        unscaled = OrgApacheCommonsMathUtilFastMath_ceilWithDouble_(unscaled);
      }
      else {
        unscaled = OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled);
      }
      break;
    }
    case JavaMathBigDecimal_ROUND_HALF_EVEN:
    {
      jdouble fraction = unscaled - OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled);
      if (fraction > 0.5) {
        unscaled = OrgApacheCommonsMathUtilFastMath_ceilWithDouble_(unscaled);
      }
      else if (fraction < 0.5) {
        unscaled = OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled);
      }
      else {
        if (OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled) / 2.0 == OrgApacheCommonsMathUtilFastMath_floorWithDouble_(JavaLangMath_floorWithDouble_(unscaled) / 2.0)) {
          unscaled = OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled);
        }
        else {
          unscaled = OrgApacheCommonsMathUtilFastMath_ceilWithDouble_(unscaled);
        }
      }
      break;
    }
    case JavaMathBigDecimal_ROUND_HALF_UP:
    {
      unscaled = OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_POSITIVE_INFINITY);
      jdouble fraction = unscaled - OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled);
      if (fraction >= 0.5) {
        unscaled = OrgApacheCommonsMathUtilFastMath_ceilWithDouble_(unscaled);
      }
      else {
        unscaled = OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled);
      }
      break;
    }
    case JavaMathBigDecimal_ROUND_UNNECESSARY:
    if (unscaled != OrgApacheCommonsMathUtilFastMath_floorWithDouble_(unscaled)) {
      @throw [new_JavaLangArithmeticException_initWithNSString_(@"Inexact result from rounding") autorelease];
    }
    break;
    case JavaMathBigDecimal_ROUND_UP:
    unscaled = OrgApacheCommonsMathUtilFastMath_ceilWithDouble_(OrgApacheCommonsMathUtilMathUtils_nextAfterWithDouble_withDouble_(unscaled, JavaLangDouble_POSITIVE_INFINITY));
    break;
    default:
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INVALID_ROUNDING_METHOD(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(roundingMethod), @"ROUND_CEILING", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_CEILING), @"ROUND_DOWN", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_DOWN), @"ROUND_FLOOR", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_FLOOR), @"ROUND_HALF_DOWN", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_HALF_DOWN), @"ROUND_HALF_EVEN", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_HALF_EVEN), @"ROUND_HALF_UP", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_HALF_UP), @"ROUND_UNNECESSARY", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_UNNECESSARY), @"ROUND_UP", JavaLangInteger_valueOfWithInt_(JavaMathBigDecimal_ROUND_UP) } count:17 type:NSObject_class_()]);
  }
  return unscaled;
}

jbyte OrgApacheCommonsMathUtilMathUtils_signWithByte_(jbyte x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x == OrgApacheCommonsMathUtilMathUtils_ZB) ? OrgApacheCommonsMathUtilMathUtils_ZB : (x > OrgApacheCommonsMathUtilMathUtils_ZB) ? OrgApacheCommonsMathUtilMathUtils_PB : OrgApacheCommonsMathUtilMathUtils_NB;
}

jdouble OrgApacheCommonsMathUtilMathUtils_signWithDouble_(jdouble x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (JavaLangDouble_isNaNWithDouble_(x)) {
    return JavaLangDouble_NaN;
  }
  return (x == 0.0) ? 0.0 : (x > 0.0) ? 1.0 : -1.0;
}

jfloat OrgApacheCommonsMathUtilMathUtils_signWithFloat_(jfloat x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (JavaLangFloat_isNaNWithFloat_(x)) {
    return JavaLangFloat_NaN;
  }
  return (x == 0.0f) ? 0.0f : (x > 0.0f) ? 1.0f : -1.0f;
}

jint OrgApacheCommonsMathUtilMathUtils_signWithInt_(jint x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x == 0) ? 0 : (x > 0) ? 1 : -1;
}

jlong OrgApacheCommonsMathUtilMathUtils_signWithLong_(jlong x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x == 0LL) ? 0LL : (x > 0LL) ? 1LL : -1LL;
}

jshort OrgApacheCommonsMathUtilMathUtils_signWithShort_(jshort x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (x == OrgApacheCommonsMathUtilMathUtils_ZS) ? OrgApacheCommonsMathUtilMathUtils_ZS : (x > OrgApacheCommonsMathUtilMathUtils_ZS) ? OrgApacheCommonsMathUtilMathUtils_PS : OrgApacheCommonsMathUtilMathUtils_NS;
}

jdouble OrgApacheCommonsMathUtilMathUtils_sinhWithDouble_(jdouble x) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  return (OrgApacheCommonsMathUtilFastMath_expWithDouble_(x) - OrgApacheCommonsMathUtilFastMath_expWithDouble_(-x)) / 2.0;
}

jint OrgApacheCommonsMathUtilMathUtils_subAndCheckWithInt_withInt_(jint x, jint y) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jlong s = (jlong) x - (jlong) y;
  if (s < JavaLangInteger_MIN_VALUE || s > JavaLangInteger_MAX_VALUE) {
    @throw OrgApacheCommonsMathMathRuntimeException_createArithmeticExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OVERFLOW_IN_SUBTRACTION(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(x), JavaLangInteger_valueOfWithInt_(y) } count:2 type:NSObject_class_()]);
  }
  return (jint) s;
}

jlong OrgApacheCommonsMathUtilMathUtils_subAndCheckWithLong_withLong_(jlong a, jlong b) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jlong ret;
  NSString *msg = @"overflow: subtract";
  if (b == JavaLangLong_MIN_VALUE) {
    if (a < 0) {
      ret = a - b;
    }
    else {
      @throw [new_JavaLangArithmeticException_initWithNSString_(msg) autorelease];
    }
  }
  else {
    ret = OrgApacheCommonsMathUtilMathUtils_addAndCheckWithLong_withLong_withOrgApacheCommonsMathExceptionUtilLocalizable_(a, -b, OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OVERFLOW_IN_ADDITION());
  }
  return ret;
}

jint OrgApacheCommonsMathUtilMathUtils_powWithInt_withInt_(jint k, jint e) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (e < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_POWER_NEGATIVE_PARAMETERS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(k), JavaLangInteger_valueOfWithInt_(e) } count:2 type:NSObject_class_()]);
  }
  jint result = 1;
  jint k2p = k;
  while (e != 0) {
    if ((e & (jint) 0x1) != 0) {
      result *= k2p;
    }
    k2p *= k2p;
    e = RShift32(e, 1);
  }
  return result;
}

jint OrgApacheCommonsMathUtilMathUtils_powWithInt_withLong_(jint k, jlong e) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (e < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_POWER_NEGATIVE_PARAMETERS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(k), JavaLangLong_valueOfWithLong_(e) } count:2 type:NSObject_class_()]);
  }
  jint result = 1;
  jint k2p = k;
  while (e != 0) {
    if ((e & (jint) 0x1) != 0) {
      result *= k2p;
    }
    k2p *= k2p;
    e = RShift64(e, 1);
  }
  return result;
}

jlong OrgApacheCommonsMathUtilMathUtils_powWithLong_withInt_(jlong k, jint e) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (e < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_POWER_NEGATIVE_PARAMETERS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(k), JavaLangInteger_valueOfWithInt_(e) } count:2 type:NSObject_class_()]);
  }
  jlong result = 1l;
  jlong k2p = k;
  while (e != 0) {
    if ((e & (jint) 0x1) != 0) {
      result *= k2p;
    }
    k2p *= k2p;
    e = RShift32(e, 1);
  }
  return result;
}

jlong OrgApacheCommonsMathUtilMathUtils_powWithLong_withLong_(jlong k, jlong e) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (e < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_POWER_NEGATIVE_PARAMETERS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(k), JavaLangLong_valueOfWithLong_(e) } count:2 type:NSObject_class_()]);
  }
  jlong result = 1l;
  jlong k2p = k;
  while (e != 0) {
    if ((e & (jint) 0x1) != 0) {
      result *= k2p;
    }
    k2p *= k2p;
    e = RShift64(e, 1);
  }
  return result;
}

JavaMathBigInteger *OrgApacheCommonsMathUtilMathUtils_powWithJavaMathBigInteger_withInt_(JavaMathBigInteger *k, jint e) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (e < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_POWER_NEGATIVE_PARAMETERS(), [IOSObjectArray arrayWithObjects:(id[]){ k, JavaLangInteger_valueOfWithInt_(e) } count:2 type:NSObject_class_()]);
  }
  return [((JavaMathBigInteger *) nil_chk(k)) powWithInt:e];
}

JavaMathBigInteger *OrgApacheCommonsMathUtilMathUtils_powWithJavaMathBigInteger_withLong_(JavaMathBigInteger *k, jlong e) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (e < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_POWER_NEGATIVE_PARAMETERS(), [IOSObjectArray arrayWithObjects:(id[]){ k, JavaLangLong_valueOfWithLong_(e) } count:2 type:NSObject_class_()]);
  }
  JavaMathBigInteger *result = JavaMathBigInteger_get_ONE_();
  JavaMathBigInteger *k2p = k;
  while (e != 0) {
    if ((e & (jint) 0x1) != 0) {
      result = [((JavaMathBigInteger *) nil_chk(result)) multiplyWithJavaMathBigInteger:k2p];
    }
    k2p = [((JavaMathBigInteger *) nil_chk(k2p)) multiplyWithJavaMathBigInteger:k2p];
    e = RShift64(e, 1);
  }
  return result;
}

JavaMathBigInteger *OrgApacheCommonsMathUtilMathUtils_powWithJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *k, JavaMathBigInteger *e) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if ([((JavaMathBigInteger *) nil_chk(e)) compareToWithId:JavaMathBigInteger_get_ZERO_()] < 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_POWER_NEGATIVE_PARAMETERS(), [IOSObjectArray arrayWithObjects:(id[]){ k, e } count:2 type:NSObject_class_()]);
  }
  JavaMathBigInteger *result = JavaMathBigInteger_get_ONE_();
  JavaMathBigInteger *k2p = k;
  while (![((JavaMathBigInteger *) nil_chk(JavaMathBigInteger_get_ZERO_())) isEqual:e]) {
    if ([e testBitWithInt:0]) {
      result = [((JavaMathBigInteger *) nil_chk(result)) multiplyWithJavaMathBigInteger:k2p];
    }
    k2p = [((JavaMathBigInteger *) nil_chk(k2p)) multiplyWithJavaMathBigInteger:k2p];
    e = [e shiftRightWithInt:1];
  }
  return result;
}

jdouble OrgApacheCommonsMathUtilMathUtils_distance1WithDoubleArray_withDoubleArray_(IOSDoubleArray *p1, IOSDoubleArray *p2) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jdouble sum = 0;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(p1))->size_; i++) {
    sum += OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(p1, i) - IOSDoubleArray_Get(nil_chk(p2), i));
  }
  return sum;
}

jint OrgApacheCommonsMathUtilMathUtils_distance1WithIntArray_withIntArray_(IOSIntArray *p1, IOSIntArray *p2) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jint sum = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(p1))->size_; i++) {
    sum += OrgApacheCommonsMathUtilFastMath_absWithInt_(IOSIntArray_Get(p1, i) - IOSIntArray_Get(nil_chk(p2), i));
  }
  return sum;
}

jdouble OrgApacheCommonsMathUtilMathUtils_distanceWithDoubleArray_withDoubleArray_(IOSDoubleArray *p1, IOSDoubleArray *p2) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jdouble sum = 0;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(p1))->size_; i++) {
    jdouble dp = IOSDoubleArray_Get(p1, i) - IOSDoubleArray_Get(nil_chk(p2), i);
    sum += dp * dp;
  }
  return OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(sum);
}

jdouble OrgApacheCommonsMathUtilMathUtils_distanceWithIntArray_withIntArray_(IOSIntArray *p1, IOSIntArray *p2) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jdouble sum = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(p1))->size_; i++) {
    jdouble dp = IOSIntArray_Get(p1, i) - IOSIntArray_Get(nil_chk(p2), i);
    sum += dp * dp;
  }
  return OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_(sum);
}

jdouble OrgApacheCommonsMathUtilMathUtils_distanceInfWithDoubleArray_withDoubleArray_(IOSDoubleArray *p1, IOSDoubleArray *p2) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jdouble max = 0;
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(p1))->size_; i++) {
    max = OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(max, OrgApacheCommonsMathUtilFastMath_absWithDouble_(IOSDoubleArray_Get(p1, i) - IOSDoubleArray_Get(nil_chk(p2), i)));
  }
  return max;
}

jint OrgApacheCommonsMathUtilMathUtils_distanceInfWithIntArray_withIntArray_(IOSIntArray *p1, IOSIntArray *p2) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jint max = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(p1))->size_; i++) {
    max = OrgApacheCommonsMathUtilFastMath_maxWithInt_withInt_(max, OrgApacheCommonsMathUtilFastMath_absWithInt_(IOSIntArray_Get(p1, i) - IOSIntArray_Get(nil_chk(p2), i)));
  }
  return max;
}

void OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_withBoolean_(IOSDoubleArray *val, OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *dir, jboolean strict) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jdouble previous = IOSDoubleArray_Get(nil_chk(val), 0);
  jboolean ok = YES;
  jint max = val->size_;
  for (jint i = 1; i < max; i++) {
    switch ([dir ordinal]) {
      case OrgApacheCommonsMathUtilMathUtils_OrderDirection_INCREASING:
      if (strict) {
        if (IOSDoubleArray_Get(val, i) <= previous) {
          ok = NO;
        }
      }
      else {
        if (IOSDoubleArray_Get(val, i) < previous) {
          ok = NO;
        }
      }
      break;
      case OrgApacheCommonsMathUtilMathUtils_OrderDirection_DECREASING:
      if (strict) {
        if (IOSDoubleArray_Get(val, i) >= previous) {
          ok = NO;
        }
      }
      else {
        if (IOSDoubleArray_Get(val, i) > previous) {
          ok = NO;
        }
      }
      break;
      default:
      @throw [new_JavaLangIllegalArgumentException_init() autorelease];
    }
    if (!ok) {
      @throw [new_OrgApacheCommonsMathExceptionNonMonotonousSequenceException_initWithNSNumber_withNSNumber_withInt_withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_withBoolean_(JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(val, i)), JavaLangDouble_valueOfWithDouble_(previous), i, dir, strict) autorelease];
    }
    previous = IOSDoubleArray_Get(val, i);
  }
}

void OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_(IOSDoubleArray *val) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_withBoolean_(val, OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_get_INCREASING(), YES);
}

void OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_withInt_withBoolean_(IOSDoubleArray *val, jint dir, jboolean strict) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  if (dir > 0) {
    OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_withBoolean_(val, OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_get_INCREASING(), strict);
  }
  else {
    OrgApacheCommonsMathUtilMathUtils_checkOrderWithDoubleArray_withOrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_withBoolean_(val, OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_get_DECREASING(), strict);
  }
}

jdouble OrgApacheCommonsMathUtilMathUtils_safeNormWithDoubleArray_(IOSDoubleArray *v) {
  OrgApacheCommonsMathUtilMathUtils_initialize();
  jdouble rdwarf = 3.834e-20;
  jdouble rgiant = 1.304e+19;
  jdouble s1 = 0.0;
  jdouble s2 = 0.0;
  jdouble s3 = 0.0;
  jdouble x1max = 0.0;
  jdouble x3max = 0.0;
  jdouble floatn = ((IOSDoubleArray *) nil_chk(v))->size_;
  jdouble agiant = rgiant / floatn;
  for (jint i = 0; i < v->size_; i++) {
    jdouble xabs = JavaLangMath_absWithDouble_(IOSDoubleArray_Get(v, i));
    if (xabs < rdwarf || xabs > agiant) {
      if (xabs > rdwarf) {
        if (xabs > x1max) {
          jdouble r = x1max / xabs;
          s1 = 1.0 + s1 * r * r;
          x1max = xabs;
        }
        else {
          jdouble r = xabs / x1max;
          s1 += r * r;
        }
      }
      else {
        if (xabs > x3max) {
          jdouble r = x3max / xabs;
          s3 = 1.0 + s3 * r * r;
          x3max = xabs;
        }
        else {
          if (xabs != 0.0) {
            jdouble r = xabs / x3max;
            s3 += r * r;
          }
        }
      }
    }
    else {
      s2 += xabs * xabs;
    }
  }
  jdouble norm;
  if (s1 != 0.0) {
    norm = x1max * JavaLangMath_sqrtWithDouble_(s1 + (s2 / x1max) / x1max);
  }
  else {
    if (s2 == 0.0) {
      norm = x3max * JavaLangMath_sqrtWithDouble_(s3);
    }
    else {
      if (s2 >= x3max) {
        norm = JavaLangMath_sqrtWithDouble_(s2 * (1.0 + (x3max / s2) * (x3max * s3)));
      }
      else {
        norm = JavaLangMath_sqrtWithDouble_(x3max * ((s2 / x3max) + (x3max * s3)));
      }
    }
  }
  return norm;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathUtilMathUtils)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum)

OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_values_[2];

@implementation OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_values() {
  OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_values_ count:2 type:OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_class_()];
}

+ (IOSObjectArray *)values {
  return OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_values();
}

+ (OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *)valueOfWithNSString:(NSString *)name {
  return OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_valueOfWithNSString_(name);
}

OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_valueOfWithNSString_(NSString *name) {
  OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initialize();
  for (int i = 0; i < 2; i++) {
    OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *e = OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum class]) {
    OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_INCREASING = new_OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(@"INCREASING", 0);
    OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_DECREASING = new_OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(@"DECREASING", 1);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "INCREASING", "INCREASING", 0x4019, "Lorg.apache.commons.math.util.MathUtils$OrderDirection;", &OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_INCREASING, NULL,  },
    { "DECREASING", "DECREASING", 0x4019, "Lorg.apache.commons.math.util.MathUtils$OrderDirection;", &OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_DECREASING, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lorg.apache.commons.math.util.MathUtils$OrderDirection;"};
  static const J2ObjcClassInfo _OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum = { 2, "OrderDirection", "org.apache.commons.math.util", "MathUtils", 0x4019, 0, NULL, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/apache/commons/math/util/MathUtils$OrderDirection;>;" };
  return &_OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum;
}

@end

void OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *new_OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum *self = [OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum alloc];
  OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathUtilMathUtils_OrderDirectionEnum)
