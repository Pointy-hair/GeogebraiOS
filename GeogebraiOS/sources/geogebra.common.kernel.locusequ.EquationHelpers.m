//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/EquationHelpers.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationHelpers.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/TreeSet.h"

@implementation GeogebraCommonKernelLocusequEquationHelpers

+ (IOSObjectArray *)getDependentPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)element {
  return GeogebraCommonKernelLocusequEquationHelpers_getDependentPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement_(element);
}

+ (IOSObjectArray *)getPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)element {
  return GeogebraCommonKernelLocusequEquationHelpers_getPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement_(element);
}

+ (jint)countDependentPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)el {
  return GeogebraCommonKernelLocusequEquationHelpers_countDependentPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement_(el);
}

+ (jint)countPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)el {
  return GeogebraCommonKernelLocusequEquationHelpers_countPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement_(el);
}

- (instancetype)init {
  GeogebraCommonKernelLocusequEquationHelpers_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getDependentPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement:", "getDependentPredecessorPointsForElement", "[Lgeogebra.common.kernel.geos.GeoPoint;", 0x9, NULL, NULL },
    { "getPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement:", "getPredecessorPointsForElement", "[Lgeogebra.common.kernel.geos.GeoPoint;", 0x9, NULL, NULL },
    { "countDependentPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement:", "countDependentPredecessorsPoints", "I", 0x9, NULL, NULL },
    { "countPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement:", "countPredecessorsPoints", "I", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequEquationHelpers = { 2, "EquationHelpers", "geogebra.common.kernel.locusequ", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequEquationHelpers;
}

@end

IOSObjectArray *GeogebraCommonKernelLocusequEquationHelpers_getDependentPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *element) {
  GeogebraCommonKernelLocusequEquationHelpers_initialize();
  id<JavaUtilList> points = [new_JavaUtilArrayList_initWithInt_(10) autorelease];
  id<JavaUtilIterator> it = [((JavaUtilTreeSet *) nil_chk([((GeogebraCommonKernelGeosGeoElement *) nil_chk(element)) getAllPredecessors])) iterator];
  GeogebraCommonKernelGeosGeoElement *el;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    el = [it next];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(el)) isGeoPoint] && ![el isIndependent]) {
      [points addWithId:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(el, [GeogebraCommonKernelGeosGeoPoint class])];
    }
  }
  if ([element isGeoPoint]) {
    [points addWithId:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(element, [GeogebraCommonKernelGeosGeoPoint class])];
  }
  return [points toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[points size] type:GeogebraCommonKernelGeosGeoPoint_class_()]];
}

IOSObjectArray *GeogebraCommonKernelLocusequEquationHelpers_getPredecessorPointsForElementWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *element) {
  GeogebraCommonKernelLocusequEquationHelpers_initialize();
  id<JavaUtilList> points = [new_JavaUtilArrayList_initWithInt_(10) autorelease];
  id<JavaUtilIterator> it = [((JavaUtilTreeSet *) nil_chk([((GeogebraCommonKernelGeosGeoElement *) nil_chk(element)) getAllPredecessors])) iterator];
  GeogebraCommonKernelGeosGeoElement *el;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    el = [it next];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(el)) isGeoPoint]) {
      [points addWithId:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(el, [GeogebraCommonKernelGeosGeoPoint class])];
    }
  }
  return [points toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[points size] type:GeogebraCommonKernelGeosGeoPoint_class_()]];
}

jint GeogebraCommonKernelLocusequEquationHelpers_countDependentPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *el) {
  GeogebraCommonKernelLocusequEquationHelpers_initialize();
  id<JavaUtilIterator> it = [((JavaUtilTreeSet *) nil_chk([((GeogebraCommonKernelGeosGeoElement *) nil_chk(el)) getAllPredecessors])) iterator];
  jint count = 0;
  GeogebraCommonKernelGeosGeoElement *element;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    element = [it next];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(element)) isGeoPoint] && ![element isIndependent]) count++;
  }
  return count;
}

jint GeogebraCommonKernelLocusequEquationHelpers_countPredecessorsPointsWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *el) {
  GeogebraCommonKernelLocusequEquationHelpers_initialize();
  id<JavaUtilIterator> it = [((JavaUtilTreeSet *) nil_chk([((GeogebraCommonKernelGeosGeoElement *) nil_chk(el)) getAllPredecessors])) iterator];
  jint count = 0;
  GeogebraCommonKernelGeosGeoElement *element;
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    element = [it next];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(element)) isGeoPoint]) count++;
  }
  return count;
}

void GeogebraCommonKernelLocusequEquationHelpers_init(GeogebraCommonKernelLocusequEquationHelpers *self) {
  NSObject_init(self);
}

GeogebraCommonKernelLocusequEquationHelpers *new_GeogebraCommonKernelLocusequEquationHelpers_init() {
  GeogebraCommonKernelLocusequEquationHelpers *self = [GeogebraCommonKernelLocusequEquationHelpers alloc];
  GeogebraCommonKernelLocusequEquationHelpers_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequEquationHelpers)
