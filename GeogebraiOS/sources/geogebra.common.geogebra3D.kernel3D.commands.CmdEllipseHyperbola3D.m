//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/commands/CmdEllipseHyperbola3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoConicFociLength3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoEllipseFociLength3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoHyperbolaFociLength3D.h"
#include "geogebra/common/geogebra3D/kernel3D/commands/CmdEllipseHyperbola3D.h"
#include "geogebra/common/geogebra3D/kernel3D/commands/CommandProcessor3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Manager3DInterface.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CmdEllipseHyperbola.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D ()

- (GeogebraCommonKernelGeosGeoElement *)ellipseHyperbolaWithNSString:(NSString *)label
                          withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)a
                          withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)b
                          withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)v
                      withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

@end

@implementation GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                           withInt:(jint)type {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithGeogebraCommonKernelKernel_withInt_(self, kernel, type);
  return self;
}

- (GeogebraCommonKernelGeosGeoElement *)ellipseWithNSString:(NSString *)label
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)a
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)b
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)c {
  if ([((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] || [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(b)) isGeoElement3D] || [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(c)) isGeoElement3D]) {
    return [((id<GeogebraCommonKernelManager3DInterface>) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) EllipseHyperbola3DWithNSString:label withGeogebraCommonKernelKernelNDGeoPointND:a withGeogebraCommonKernelKernelNDGeoPointND:b withGeogebraCommonKernelKernelNDGeoPointND:c withInt:type_];
  }
  return [super ellipseWithNSString:label withGeogebraCommonKernelKernelNDGeoPointND:a withGeogebraCommonKernelKernelNDGeoPointND:b withGeogebraCommonKernelKernelNDGeoPointND:c];
}

- (IOSObjectArray *)process4WithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c
                          withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)arg
                                                     withBooleanArray:(IOSBooleanArray *)ok {
  if ((*IOSBooleanArray_GetRef(nil_chk(ok), 0) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 2) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 3) = ([GeogebraCommonKernelKernelNDGeoDirectionND_class_() isInstance:IOSObjectArray_Get(arg, 3)]))) {
    IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ [((id<GeogebraCommonKernelManager3DInterface>) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) EllipseHyperbola3DWithNSString:[((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel] withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(GeogebraCommonKernelKernelNDGeoPointND)) withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(GeogebraCommonKernelKernelNDGeoPointND)) withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(GeogebraCommonKernelKernelNDGeoPointND)) withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>) check_protocol_cast(IOSObjectArray_Get(arg, 3), @protocol(GeogebraCommonKernelKernelNDGeoDirectionND)) withInt:type_] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  if ((*IOSBooleanArray_GetRef(ok, 0) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoPoint])) && (*IOSBooleanArray_GetRef(ok, 2) = ([GeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(arg, 2)])) && (*IOSBooleanArray_GetRef(ok, 3) = ([GeogebraCommonKernelKernelNDGeoDirectionND_class_() isInstance:IOSObjectArray_Get(arg, 3)]))) {
    IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ [self ellipseHyperbolaWithNSString:[((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getLabel] withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(GeogebraCommonKernelKernelNDGeoPointND)) withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(IOSObjectArray_Get(arg, 1), @protocol(GeogebraCommonKernelKernelNDGeoPointND)) withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(arg, 2), @protocol(GeogebraCommonKernelGeosGeoNumberValue)) withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>) check_protocol_cast(IOSObjectArray_Get(arg, 3), @protocol(GeogebraCommonKernelKernelNDGeoDirectionND))] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
    return ret;
  }
  return nil;
}

- (GeogebraCommonKernelGeosGeoElement *)ellipseHyperbolaWithNSString:(NSString *)label
                          withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)a
                          withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)b
                          withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)v
                      withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  if (![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] && ![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(b)) isGeoElement3D] && orientation == [((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getXOYPlane]) {
    return [super ellipseHyperbolaWithNSString:label withGeogebraCommonKernelKernelNDGeoPointND:a withGeogebraCommonKernelKernelNDGeoPointND:b withGeogebraCommonKernelGeosGeoNumberValue:v];
  }
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D *algo;
  if (type_ == GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_HYPERBOLA) {
    algo = [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoHyperbolaFociLength3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoDirectionND_([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getConstruction], label, a, b, v, orientation) autorelease];
  }
  else {
    algo = [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoEllipseFociLength3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoDirectionND_([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getConstruction], label, a, b, v, orientation) autorelease];
  }
  return [((GeogebraCommonGeogebra3DKernel3DAlgosAlgoConicFociLength3D *) nil_chk(algo)) getConic];
}

- (GeogebraCommonKernelGeosGeoElement *)ellipseHyperbolaWithNSString:(NSString *)label
                          withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)a
                          withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)b
                          withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)v {
  id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation = GeogebraCommonGeogebra3DKernel3DCommandsCommandProcessor3D_getCurrentViewOrientationWithGeogebraCommonKernelKernel_withGeogebraCommonMainApp_(kernelA_, app_);
  if (orientation == nil) {
    if ([((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(a)) isGeoElement3D] || [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(b)) isGeoElement3D]) {
      orientation = [((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getXOYPlane];
    }
    else {
      return [super ellipseHyperbolaWithNSString:label withGeogebraCommonKernelKernelNDGeoPointND:a withGeogebraCommonKernelKernelNDGeoPointND:b withGeogebraCommonKernelGeosGeoNumberValue:v];
    }
  }
  return [self ellipseHyperbolaWithNSString:label withGeogebraCommonKernelKernelNDGeoPointND:a withGeogebraCommonKernelKernelNDGeoPointND:b withGeogebraCommonKernelGeosGeoNumberValue:v withGeogebraCommonKernelKernelNDGeoDirectionND:orientation];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:withInt:", "CmdEllipseHyperbola3D", NULL, 0x1, NULL, NULL },
    { "ellipseWithNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "ellipse", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
    { "process4WithGeogebraCommonKernelArithmeticCommand:withGeogebraCommonKernelGeosGeoElementArray:withBooleanArray:", "process4", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x4, "Lgeogebra.common.main.MyError;", NULL },
    { "ellipseHyperbolaWithNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoNumberValue:withGeogebraCommonKernelKernelNDGeoDirectionND:", "ellipseHyperbola", "Lgeogebra.common.kernel.geos.GeoElement;", 0x12, NULL, NULL },
    { "ellipseHyperbolaWithNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoNumberValue:", "ellipseHyperbola", "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D = { 2, "CmdEllipseHyperbola3D", "geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D *self, GeogebraCommonKernelKernel *kernel, jint type) {
  GeogebraCommonKernelCommandsCmdEllipseHyperbola_initWithGeogebraCommonKernelKernel_withInt_(self, kernel, type);
}

GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D *new_GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonKernelKernel *kernel, jint type) {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D *self = [GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D alloc];
  GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D_initWithGeogebraCommonKernelKernel_withInt_(self, kernel, type);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DCommandsCmdEllipseHyperbola3D)
