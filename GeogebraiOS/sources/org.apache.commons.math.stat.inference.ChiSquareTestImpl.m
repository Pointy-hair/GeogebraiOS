//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/distribution/ChiSquaredDistribution.h"
#include "org/apache/commons/math/distribution/ChiSquaredDistributionImpl.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/stat/inference/ChiSquareTestImpl.h"
#include "org/apache/commons/math/util/FastMath.h"

@interface OrgApacheCommonsMathStatInferenceChiSquareTestImpl () {
 @public
  id<OrgApacheCommonsMathDistributionChiSquaredDistribution> distribution_;
}

- (void)checkArrayWithLongArray2:(IOSObjectArray *)inArg;

- (void)checkRectangularWithLongArray2:(IOSObjectArray *)inArg;

- (void)checkPositiveWithDoubleArray:(IOSDoubleArray *)inArg;

- (void)checkNonNegativeWithLongArray:(IOSLongArray *)inArg;

- (void)checkNonNegativeWithLongArray2:(IOSObjectArray *)inArg;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathStatInferenceChiSquareTestImpl, distribution_, id<OrgApacheCommonsMathDistributionChiSquaredDistribution>)

__attribute__((unused)) static void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkArrayWithLongArray2_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSObjectArray *inArg);

__attribute__((unused)) static void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkRectangularWithLongArray2_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSObjectArray *inArg);

__attribute__((unused)) static void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkPositiveWithDoubleArray_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSDoubleArray *inArg);

__attribute__((unused)) static void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSLongArray *inArg);

__attribute__((unused)) static void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray2_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSObjectArray *inArg);

@implementation OrgApacheCommonsMathStatInferenceChiSquareTestImpl

- (instancetype)init {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_init(self);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathDistributionChiSquaredDistribution:(id<OrgApacheCommonsMathDistributionChiSquaredDistribution>)x {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_initWithOrgApacheCommonsMathDistributionChiSquaredDistribution_(self, x);
  return self;
}

- (jdouble)chiSquareWithDoubleArray:(IOSDoubleArray *)expected
                      withLongArray:(IOSLongArray *)observed {
  if (((IOSDoubleArray *) nil_chk(expected))->size_ < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_DIMENSION(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expected->size_), JavaLangInteger_valueOfWithInt_(2) } count:2 type:NSObject_class_()]);
  }
  if (expected->size_ != ((IOSLongArray *) nil_chk(observed))->size_) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_DIMENSIONS_MISMATCH_SIMPLE(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(expected->size_), JavaLangInteger_valueOfWithInt_(observed->size_) } count:2 type:NSObject_class_()]);
  }
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkPositiveWithDoubleArray_(self, expected);
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray_(self, observed);
  jdouble sumExpected = 0.0;
  jdouble sumObserved = 0.0;
  for (jint i = 0; i < observed->size_; i++) {
    sumExpected += IOSDoubleArray_Get(expected, i);
    sumObserved += IOSLongArray_Get(observed, i);
  }
  jdouble ratio = 1.0;
  jboolean rescale = NO;
  if (OrgApacheCommonsMathUtilFastMath_absWithDouble_(sumExpected - sumObserved) > 10E-6) {
    ratio = sumObserved / sumExpected;
    rescale = YES;
  }
  jdouble sumSq = 0.0;
  for (jint i = 0; i < observed->size_; i++) {
    if (rescale) {
      jdouble dev = IOSLongArray_Get(observed, i) - ratio * IOSDoubleArray_Get(expected, i);
      sumSq += dev * dev / (ratio * IOSDoubleArray_Get(expected, i));
    }
    else {
      jdouble dev = IOSLongArray_Get(observed, i) - IOSDoubleArray_Get(expected, i);
      sumSq += dev * dev / IOSDoubleArray_Get(expected, i);
    }
  }
  return sumSq;
}

- (jdouble)chiSquareTestWithDoubleArray:(IOSDoubleArray *)expected
                          withLongArray:(IOSLongArray *)observed {
  [((id<OrgApacheCommonsMathDistributionChiSquaredDistribution>) nil_chk(distribution_)) setDegreesOfFreedomWithDouble:((IOSDoubleArray *) nil_chk(expected))->size_ - 1.0];
  return 1.0 - [distribution_ cumulativeProbabilityWithDouble:[self chiSquareWithDoubleArray:expected withLongArray:observed]];
}

- (jboolean)chiSquareTestWithDoubleArray:(IOSDoubleArray *)expected
                           withLongArray:(IOSLongArray *)observed
                              withDouble:(jdouble)alpha {
  if ((alpha <= 0) || (alpha > 0.5)) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OUT_OF_BOUND_SIGNIFICANCE_LEVEL(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(alpha), JavaLangInteger_valueOfWithInt_(0), JavaLangDouble_valueOfWithDouble_(0.5) } count:3 type:NSObject_class_()]);
  }
  return [self chiSquareTestWithDoubleArray:expected withLongArray:observed] < alpha;
}

- (jdouble)chiSquareWithLongArray2:(IOSObjectArray *)counts {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkArrayWithLongArray2_(self, counts);
  jint nRows = ((IOSObjectArray *) nil_chk(counts))->size_;
  jint nCols = ((IOSLongArray *) nil_chk(IOSObjectArray_Get(counts, 0)))->size_;
  IOSDoubleArray *rowSum = [IOSDoubleArray arrayWithLength:nRows];
  IOSDoubleArray *colSum = [IOSDoubleArray arrayWithLength:nCols];
  jdouble total = 0.0;
  for (jint row = 0; row < nRows; row++) {
    for (jint col = 0; col < nCols; col++) {
      *IOSDoubleArray_GetRef(rowSum, row) += IOSLongArray_Get(nil_chk(IOSObjectArray_Get(counts, row)), col);
      *IOSDoubleArray_GetRef(colSum, col) += IOSLongArray_Get(nil_chk(IOSObjectArray_Get(counts, row)), col);
      total += IOSLongArray_Get(nil_chk(IOSObjectArray_Get(counts, row)), col);
    }
  }
  jdouble sumSq = 0.0;
  jdouble expected = 0.0;
  for (jint row = 0; row < nRows; row++) {
    for (jint col = 0; col < nCols; col++) {
      expected = (IOSDoubleArray_Get(rowSum, row) * IOSDoubleArray_Get(colSum, col)) / total;
      sumSq += ((IOSLongArray_Get(nil_chk(IOSObjectArray_Get(counts, row)), col) - expected) * (IOSLongArray_Get(nil_chk(IOSObjectArray_Get(counts, row)), col) - expected)) / expected;
    }
  }
  return sumSq;
}

- (jdouble)chiSquareTestWithLongArray2:(IOSObjectArray *)counts {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkArrayWithLongArray2_(self, counts);
  jdouble df = ((jdouble) ((IOSObjectArray *) nil_chk(counts))->size_ - 1) * ((jdouble) ((IOSLongArray *) nil_chk(IOSObjectArray_Get(counts, 0)))->size_ - 1);
  [((id<OrgApacheCommonsMathDistributionChiSquaredDistribution>) nil_chk(distribution_)) setDegreesOfFreedomWithDouble:df];
  return 1 - [distribution_ cumulativeProbabilityWithDouble:[self chiSquareWithLongArray2:counts]];
}

- (jboolean)chiSquareTestWithLongArray2:(IOSObjectArray *)counts
                             withDouble:(jdouble)alpha {
  if ((alpha <= 0) || (alpha > 0.5)) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OUT_OF_BOUND_SIGNIFICANCE_LEVEL(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(alpha), JavaLangDouble_valueOfWithDouble_(0.0), JavaLangDouble_valueOfWithDouble_(0.5) } count:3 type:NSObject_class_()]);
  }
  return [self chiSquareTestWithLongArray2:counts] < alpha;
}

- (jdouble)chiSquareDataSetsComparisonWithLongArray:(IOSLongArray *)observed1
                                      withLongArray:(IOSLongArray *)observed2 {
  if (((IOSLongArray *) nil_chk(observed1))->size_ < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_DIMENSION(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(observed1->size_), JavaLangInteger_valueOfWithInt_(2) } count:2 type:NSObject_class_()]);
  }
  if (observed1->size_ != ((IOSLongArray *) nil_chk(observed2))->size_) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_DIMENSIONS_MISMATCH_SIMPLE(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(observed1->size_), JavaLangInteger_valueOfWithInt_(observed2->size_) } count:2 type:NSObject_class_()]);
  }
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray_(self, observed1);
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray_(self, observed2);
  jlong countSum1 = 0;
  jlong countSum2 = 0;
  jboolean unequalCounts = NO;
  jdouble weight = 0.0;
  for (jint i = 0; i < observed1->size_; i++) {
    countSum1 += IOSLongArray_Get(observed1, i);
    countSum2 += IOSLongArray_Get(observed2, i);
  }
  if (countSum1 == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OBSERVED_COUNTS_ALL_ZERO(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1) } count:1 type:NSObject_class_()]);
  }
  if (countSum2 == 0) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OBSERVED_COUNTS_ALL_ZERO(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(2) } count:1 type:NSObject_class_()]);
  }
  unequalCounts = (countSum1 != countSum2);
  if (unequalCounts) {
    weight = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_((jdouble) countSum1 / (jdouble) countSum2);
  }
  jdouble sumSq = 0.0;
  jdouble dev = 0.0;
  jdouble obs1 = 0.0;
  jdouble obs2 = 0.0;
  for (jint i = 0; i < observed1->size_; i++) {
    if (IOSLongArray_Get(observed1, i) == 0 && IOSLongArray_Get(observed2, i) == 0) {
      @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(i) } count:1 type:NSObject_class_()]);
    }
    else {
      obs1 = IOSLongArray_Get(observed1, i);
      obs2 = IOSLongArray_Get(observed2, i);
      if (unequalCounts) {
        dev = obs1 / weight - obs2 * weight;
      }
      else {
        dev = obs1 - obs2;
      }
      sumSq += (dev * dev) / (obs1 + obs2);
    }
  }
  return sumSq;
}

- (jdouble)chiSquareTestDataSetsComparisonWithLongArray:(IOSLongArray *)observed1
                                          withLongArray:(IOSLongArray *)observed2 {
  [((id<OrgApacheCommonsMathDistributionChiSquaredDistribution>) nil_chk(distribution_)) setDegreesOfFreedomWithDouble:(jdouble) ((IOSLongArray *) nil_chk(observed1))->size_ - 1];
  return 1 - [distribution_ cumulativeProbabilityWithDouble:[self chiSquareDataSetsComparisonWithLongArray:observed1 withLongArray:observed2]];
}

- (jboolean)chiSquareTestDataSetsComparisonWithLongArray:(IOSLongArray *)observed1
                                           withLongArray:(IOSLongArray *)observed2
                                              withDouble:(jdouble)alpha {
  if ((alpha <= 0) || (alpha > 0.5)) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_OUT_OF_BOUND_SIGNIFICANCE_LEVEL(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(alpha), JavaLangDouble_valueOfWithDouble_(0.0), JavaLangDouble_valueOfWithDouble_(0.5) } count:3 type:NSObject_class_()]);
  }
  return [self chiSquareTestDataSetsComparisonWithLongArray:observed1 withLongArray:observed2] < alpha;
}

- (void)checkArrayWithLongArray2:(IOSObjectArray *)inArg {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkArrayWithLongArray2_(self, inArg);
}

- (void)checkRectangularWithLongArray2:(IOSObjectArray *)inArg {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkRectangularWithLongArray2_(self, inArg);
}

- (void)checkPositiveWithDoubleArray:(IOSDoubleArray *)inArg {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkPositiveWithDoubleArray_(self, inArg);
}

- (void)checkNonNegativeWithLongArray:(IOSLongArray *)inArg {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray_(self, inArg);
}

- (void)checkNonNegativeWithLongArray2:(IOSObjectArray *)inArg {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray2_(self, inArg);
}

- (void)setDistributionWithOrgApacheCommonsMathDistributionChiSquaredDistribution:(id<OrgApacheCommonsMathDistributionChiSquaredDistribution>)value {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_set_distribution_(self, value);
}

- (void)dealloc {
  RELEASE_(distribution_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ChiSquareTestImpl", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathDistributionChiSquaredDistribution:", "ChiSquareTestImpl", NULL, 0x1, NULL, NULL },
    { "chiSquareWithDoubleArray:withLongArray:", "chiSquare", "D", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "chiSquareTestWithDoubleArray:withLongArray:", "chiSquareTest", "D", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.MathException;", NULL },
    { "chiSquareTestWithDoubleArray:withLongArray:withDouble:", "chiSquareTest", "Z", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.MathException;", NULL },
    { "chiSquareWithLongArray2:", "chiSquare", "D", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "chiSquareTestWithLongArray2:", "chiSquareTest", "D", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.MathException;", NULL },
    { "chiSquareTestWithLongArray2:withDouble:", "chiSquareTest", "Z", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.MathException;", NULL },
    { "chiSquareDataSetsComparisonWithLongArray:withLongArray:", "chiSquareDataSetsComparison", "D", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "chiSquareTestDataSetsComparisonWithLongArray:withLongArray:", "chiSquareTestDataSetsComparison", "D", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.MathException;", NULL },
    { "chiSquareTestDataSetsComparisonWithLongArray:withLongArray:withDouble:", "chiSquareTestDataSetsComparison", "Z", 0x1, "Ljava.lang.IllegalArgumentException;Lorg.apache.commons.math.MathException;", NULL },
    { "checkArrayWithLongArray2:", "checkArray", "V", 0x2, "Ljava.lang.IllegalArgumentException;", NULL },
    { "checkRectangularWithLongArray2:", "checkRectangular", "V", 0x2, NULL, NULL },
    { "checkPositiveWithDoubleArray:", "checkPositive", "V", 0x2, "Ljava.lang.IllegalArgumentException;", NULL },
    { "checkNonNegativeWithLongArray:", "checkNonNegative", "V", 0x2, "Ljava.lang.IllegalArgumentException;", NULL },
    { "checkNonNegativeWithLongArray2:", "checkNonNegative", "V", 0x2, "Ljava.lang.IllegalArgumentException;", NULL },
    { "setDistributionWithOrgApacheCommonsMathDistributionChiSquaredDistribution:", "setDistribution", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "distribution_", NULL, 0x2, "Lorg.apache.commons.math.distribution.ChiSquaredDistribution;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatInferenceChiSquareTestImpl = { 2, "ChiSquareTestImpl", "org.apache.commons.math.stat.inference", NULL, 0x1, 17, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatInferenceChiSquareTestImpl;
}

@end

void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_init(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self) {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_initWithOrgApacheCommonsMathDistributionChiSquaredDistribution_(self, [new_OrgApacheCommonsMathDistributionChiSquaredDistributionImpl_initWithDouble_(1.0) autorelease]);
}

OrgApacheCommonsMathStatInferenceChiSquareTestImpl *new_OrgApacheCommonsMathStatInferenceChiSquareTestImpl_init() {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self = [OrgApacheCommonsMathStatInferenceChiSquareTestImpl alloc];
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_init(self);
  return self;
}

void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_initWithOrgApacheCommonsMathDistributionChiSquaredDistribution_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, id<OrgApacheCommonsMathDistributionChiSquaredDistribution> x) {
  NSObject_init(self);
  [self setDistributionWithOrgApacheCommonsMathDistributionChiSquaredDistribution:x];
}

OrgApacheCommonsMathStatInferenceChiSquareTestImpl *new_OrgApacheCommonsMathStatInferenceChiSquareTestImpl_initWithOrgApacheCommonsMathDistributionChiSquaredDistribution_(id<OrgApacheCommonsMathDistributionChiSquaredDistribution> x) {
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self = [OrgApacheCommonsMathStatInferenceChiSquareTestImpl alloc];
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_initWithOrgApacheCommonsMathDistributionChiSquaredDistribution_(self, x);
  return self;
}

void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkArrayWithLongArray2_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSObjectArray *inArg) {
  if (((IOSObjectArray *) nil_chk(inArg))->size_ < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_DIMENSION(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(inArg->size_), JavaLangInteger_valueOfWithInt_(2) } count:2 type:NSObject_class_()]);
  }
  if (((IOSLongArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_ < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_DIMENSION(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(((IOSLongArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_), JavaLangInteger_valueOfWithInt_(2) } count:2 type:NSObject_class_()]);
  }
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkRectangularWithLongArray2_(self, inArg);
  OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray2_(self, inArg);
}

void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkRectangularWithLongArray2_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSObjectArray *inArg) {
  for (jint i = 1; i < ((IOSObjectArray *) nil_chk(inArg))->size_; i++) {
    if (((IOSLongArray *) nil_chk(IOSObjectArray_Get(inArg, i)))->size_ != ((IOSLongArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_) {
      @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_DIFFERENT_ROWS_LENGTHS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(((IOSLongArray *) nil_chk(IOSObjectArray_Get(inArg, i)))->size_), JavaLangInteger_valueOfWithInt_(((IOSLongArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_) } count:2 type:NSObject_class_()]);
    }
  }
}

void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkPositiveWithDoubleArray_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSDoubleArray *inArg) {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(inArg))->size_; i++) {
    if (IOSDoubleArray_Get(inArg, i) <= 0) {
      @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NOT_POSITIVE_ELEMENT_AT_INDEX(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(i), JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(inArg, i)) } count:2 type:NSObject_class_()]);
    }
  }
}

void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSLongArray *inArg) {
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(inArg))->size_; i++) {
    if (IOSLongArray_Get(inArg, i) < 0) {
      @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NEGATIVE_ELEMENT_AT_INDEX(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(i), JavaLangLong_valueOfWithLong_(IOSLongArray_Get(inArg, i)) } count:2 type:NSObject_class_()]);
    }
  }
}

void OrgApacheCommonsMathStatInferenceChiSquareTestImpl_checkNonNegativeWithLongArray2_(OrgApacheCommonsMathStatInferenceChiSquareTestImpl *self, IOSObjectArray *inArg) {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(inArg))->size_; i++) {
    for (jint j = 0; j < ((IOSLongArray *) nil_chk(IOSObjectArray_Get(inArg, i)))->size_; j++) {
      if (IOSLongArray_Get(nil_chk(IOSObjectArray_Get(inArg, i)), j) < 0) {
        @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NEGATIVE_ELEMENT_AT_2D_INDEX(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(i), JavaLangInteger_valueOfWithInt_(j), JavaLangLong_valueOfWithLong_(IOSLongArray_Get(nil_chk(IOSObjectArray_Get(inArg, i)), j)) } count:3 type:NSObject_class_()]);
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatInferenceChiSquareTestImpl)
