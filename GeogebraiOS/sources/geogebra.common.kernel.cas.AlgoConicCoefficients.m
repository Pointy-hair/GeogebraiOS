//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoConicCoefficients.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/cas/AlgoConicCoefficients.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"

@interface GeogebraCommonKernelCasAlgoConicCoefficients () {
 @public
  GeogebraCommonKernelGeosGeoConic *c_;
  GeogebraCommonKernelGeosGeoList *g_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoConicCoefficients, c_, GeogebraCommonKernelGeosGeoConic *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoConicCoefficients, g_, GeogebraCommonKernelGeosGeoList *)

@implementation GeogebraCommonKernelCasAlgoConicCoefficients

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c {
  GeogebraCommonKernelCasAlgoConicCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, c);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Coefficients();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, c_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:g_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoList *)getResult {
  return g_;
}

- (void)compute {
  if (![((GeogebraCommonKernelGeosGeoConic *) nil_chk(c_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoList *) nil_chk(g_)) setUndefined];
    return;
  }
  IOSDoubleArray *matrix = [c_ getFlatMatrix];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([((GeogebraCommonKernelGeosGeoList *) nil_chk(g_)) getWithInt:0], [GeogebraCommonKernelGeosGeoNumeric class])))) setValueWithDouble:IOSDoubleArray_Get(nil_chk(matrix), 0)];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([g_ getWithInt:1], [GeogebraCommonKernelGeosGeoNumeric class])))) setValueWithDouble:IOSDoubleArray_Get(matrix, 1)];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([g_ getWithInt:2], [GeogebraCommonKernelGeosGeoNumeric class])))) setValueWithDouble:IOSDoubleArray_Get(matrix, 2)];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([g_ getWithInt:3], [GeogebraCommonKernelGeosGeoNumeric class])))) setValueWithDouble:IOSDoubleArray_Get(matrix, 3) * 2];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([g_ getWithInt:4], [GeogebraCommonKernelGeosGeoNumeric class])))) setValueWithDouble:IOSDoubleArray_Get(matrix, 4) * 2];
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(((GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([g_ getWithInt:5], [GeogebraCommonKernelGeosGeoNumeric class])))) setValueWithDouble:IOSDoubleArray_Get(matrix, 5) * 2];
}

- (void)dealloc {
  RELEASE_(c_);
  RELEASE_(g_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoConic:", "AlgoConicCoefficients", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "c_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoConic;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoConicCoefficients = { 2, "AlgoConicCoefficients", "geogebra.common.kernel.cas", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoConicCoefficients;
}

@end

void GeogebraCommonKernelCasAlgoConicCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelCasAlgoConicCoefficients *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoConicCoefficients_set_c_(self, c);
  GeogebraCommonKernelCasAlgoConicCoefficients_setAndConsume_g_(self, new_GeogebraCommonKernelGeosGeoList_initWithGeogebraCommonKernelConstruction_(cons));
  IOSDoubleArray *matrix = [((GeogebraCommonKernelGeosGeoConic *) nil_chk(c)) getFlatMatrix];
  [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(cons, IOSDoubleArray_Get(nil_chk(matrix), 0)) autorelease]];
  [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(cons, IOSDoubleArray_Get(matrix, 1)) autorelease]];
  [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(cons, IOSDoubleArray_Get(matrix, 2)) autorelease]];
  [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(cons, IOSDoubleArray_Get(matrix, 3) * 2) autorelease]];
  [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(cons, IOSDoubleArray_Get(matrix, 4) * 2) autorelease]];
  [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(cons, IOSDoubleArray_Get(matrix, 5) * 2) autorelease]];
  [self setInputOutput];
  [self->g_ setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoConicCoefficients *new_GeogebraCommonKernelCasAlgoConicCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoConic *c) {
  GeogebraCommonKernelCasAlgoConicCoefficients *self = [GeogebraCommonKernelCasAlgoConicCoefficients alloc];
  GeogebraCommonKernelCasAlgoConicCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoConic_(self, cons, label, c);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoConicCoefficients)
