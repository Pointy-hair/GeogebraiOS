//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoCircle3DAxisPoint.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoCircle3DAxisPoint.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint () {
 @public
  id<GeogebraCommonKernelKernelNDGeoLineND> axis_;
  id<GeogebraCommonKernelKernelNDGeoPointND> point_;
  GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *circle_;
  GeogebraCommonKernelMatrixCoordSys *coordsys_;
  GeogebraCommonKernelMatrixCoords *center_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint, axis_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint, point_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint, circle_, GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint, coordsys_, GeogebraCommonKernelMatrixCoordSys *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint, center_, GeogebraCommonKernelMatrixCoords *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint *self);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)axis
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, axis, point);
  return self;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *)getCircle {
  return circle_;
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_compute(self);
}

+ (void)setCircleWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic
                     withGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)coordsys
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)center
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)d {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_setCircleWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelMatrixCoordSys_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(conic, coordsys, center, v1, d);
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Circle();
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"CircleOfAxisAThroughB" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(axis_, [GeogebraCommonKernelGeosGeoElement class])))) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(axis_);
  RELEASE_(point_);
  RELEASE_(circle_);
  RELEASE_(coordsys_);
  RELEASE_(center_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoLineND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoCircle3DAxisPoint", NULL, 0x1, NULL, NULL },
    { "getCircle", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoConic3D;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "setCircleWithGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelMatrixCoordSys:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "setCircle", "V", 0x19, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "axis_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
    { "point_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "circle_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoConic3D;", NULL, NULL,  },
    { "coordsys_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.CoordSys;", NULL, NULL,  },
    { "center_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint = { 2, "AlgoCircle3DAxisPoint", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> axis, id<GeogebraCommonKernelKernelNDGeoPointND> point) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_set_center_(self, GeogebraCommonKernelMatrixCoords_createInhomCoorsInD3());
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_set_axis_(self, axis);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_set_point_(self, point);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_setAndConsume_circle_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_setAndConsume_coordsys_(self, new_GeogebraCommonKernelMatrixCoordSys_initWithInt_(2));
  [self->circle_ setCoordSysWithGeogebraCommonKernelMatrixCoordSys:self->coordsys_];
  [self setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(axis, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(point, [GeogebraCommonKernelGeosGeoElement class]) } count:2 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ self->circle_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_compute(self);
  [self->circle_ setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> axis, id<GeogebraCommonKernelKernelNDGeoPointND> point) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, axis, point);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_compute(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint *self) {
  GeogebraCommonKernelMatrixCoords *p = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->point_)) getInhomCoordsInD3];
  GeogebraCommonKernelMatrixCoords *o = [((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(self->axis_)) getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension];
  GeogebraCommonKernelMatrixCoords *d = [self->axis_ getDirectionInD3];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(p)) projectLineWithGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:d withGeogebraCommonKernelMatrixCoords:self->center_ withDoubleArray:nil];
  GeogebraCommonKernelMatrixCoords *v1 = [p subWithGeogebraCommonKernelMatrixCoords:self->center_];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_setCircleWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelMatrixCoordSys_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(self->circle_, self->coordsys_, self->center_, v1, d);
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_setCircleWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelMatrixCoordSys_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelKernelNDGeoConicND *conic, GeogebraCommonKernelMatrixCoordSys *coordsys, GeogebraCommonKernelMatrixCoords *center, GeogebraCommonKernelMatrixCoords *v1, GeogebraCommonKernelMatrixCoords *d) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint_initialize();
  [((GeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys)) resetCoordSys];
  [coordsys addPointWithGeogebraCommonKernelMatrixCoords:center];
  [coordsys addVectorWithGeogebraCommonKernelMatrixCoords:v1];
  [coordsys addVectorWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(d)) crossProductWithGeogebraCommonKernelMatrixCoords:v1]];
  [coordsys makeOrthoMatrixWithBoolean:NO withBoolean:NO];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(v1)) calcNorm];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic)) setSphereNDWithGeogebraCommonKernelMatrixCoords:[new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_(0, 0) autorelease] withDouble:[v1 getNorm]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoCircle3DAxisPoint)
