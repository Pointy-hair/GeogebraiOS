//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/main/AppCompanion.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianView.h"
#include "geogebra/common/euclidian/EuclidianViewCompanion.h"
#include "geogebra/common/gui/layout/DockPanel.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/commands/CommandsConstants.h"
#include "geogebra/common/kernel/kernelND/ViewCreator.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/main/AppCompanion.h"
#include "geogebra/common/main/FontManager.h"
#include "geogebra/common/main/GuiManagerInterface.h"
#include "geogebra/common/main/settings/Settings.h"
#include "java/lang/StringBuilder.h"

@implementation GeogebraCommonMainAppCompanion

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app {
  GeogebraCommonMainAppCompanion_initWithGeogebraCommonMainApp_(self, app);
  return self;
}

- (GeogebraCommonKernelKernel *)newKernel {
  return [new_GeogebraCommonKernelKernel_initWithGeogebraCommonMainApp_(app_) autorelease];
}

- (jboolean)tableVisibleWithInt:(jint)table {
  return !(table == GeogebraCommonKernelCommandsCommandsConstants_TABLE_CAS || table == GeogebraCommonKernelCommandsCommandsConstants_TABLE_3D || table == GeogebraCommonKernelCommandsCommandsConstants_TABLE_ENGLISH);
}

- (void)getEuclidianViewXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                         withBoolean:(jboolean)asPreference {
  [((GeogebraCommonEuclidianEuclidianView *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app_)) getEuclidianView1])) getXMLWithJavaLangStringBuilder:sb withBoolean:asPreference];
  if ([app_ hasEuclidianView2EitherShowingOrNotWithInt:1]) {
    [((GeogebraCommonEuclidianEuclidianView *) nil_chk([app_ getEuclidianView2WithInt:1])) getXMLWithJavaLangStringBuilder:sb withBoolean:asPreference];
  }
}

- (GeogebraCommonEuclidianEuclidianViewCompanion *)createEuclidianViewForPlaneWithGeogebraCommonKernelKernelNDViewCreator:(id<GeogebraCommonKernelKernelNDViewCreator>)plane
                                                                                                              withBoolean:(jboolean)panelSettings {
  return nil;
}

- (void)storeViewCreators {
}

- (void)recallViewCreators {
}

- (void)resetEuclidianViewForPlaneIds {
}

- (id<GeogebraCommonGuiLayoutDockPanel>)createEuclidianDockPanelForPlaneWithInt:(jint)id_
                                                                   withNSString:(NSString *)plane {
  return nil;
}

- (GeogebraCommonMainSettingsSettings *)newSettings {
  return [new_GeogebraCommonMainSettingsSettings_initWithInt_(2) autorelease];
}

- (void)resetFonts {
  [((GeogebraCommonMainFontManager *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app_)) getFontManager])) setFontSizeWithInt:[app_ getGUIFontSize]];
  if (app_->euclidianView_ != nil) {
    [app_->euclidianView_ updateFonts];
  }
  if ([app_ getGuiManager] != nil) {
    [((id<GeogebraCommonMainGuiManagerInterface>) nil_chk([app_ getGuiManager])) updateFonts];
    if ([app_ hasEuclidianView2WithInt:1]) {
      [((GeogebraCommonEuclidianEuclidianView *) nil_chk([app_ getEuclidianView2WithInt:1])) updateFonts];
    }
  }
}

- (void)dealloc {
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonMainApp:", "AppCompanion", NULL, 0x1, NULL, NULL },
    { "newKernel", NULL, "Lgeogebra.common.kernel.Kernel;", 0x1, NULL, NULL },
    { "tableVisibleWithInt:", "tableVisible", "Z", 0x4, NULL, NULL },
    { "getEuclidianViewXMLWithJavaLangStringBuilder:withBoolean:", "getEuclidianViewXML", "V", 0x1, NULL, NULL },
    { "createEuclidianViewForPlaneWithGeogebraCommonKernelKernelNDViewCreator:withBoolean:", "createEuclidianViewForPlane", "Lgeogebra.common.euclidian.EuclidianViewCompanion;", 0x1, NULL, NULL },
    { "storeViewCreators", NULL, "V", 0x1, NULL, NULL },
    { "recallViewCreators", NULL, "V", 0x1, NULL, NULL },
    { "resetEuclidianViewForPlaneIds", NULL, "V", 0x1, NULL, NULL },
    { "createEuclidianDockPanelForPlaneWithInt:withNSString:", "createEuclidianDockPanelForPlane", "Lgeogebra.common.gui.layout.DockPanel;", 0x1, NULL, NULL },
    { "newSettings", NULL, "Lgeogebra.common.main.settings.Settings;", 0x1, NULL, NULL },
    { "resetFonts", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "app_", NULL, 0x4, "Lgeogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonMainAppCompanion = { 2, "AppCompanion", "geogebra.common.main", NULL, 0x1, 11, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMainAppCompanion;
}

@end

void GeogebraCommonMainAppCompanion_initWithGeogebraCommonMainApp_(GeogebraCommonMainAppCompanion *self, GeogebraCommonMainApp *app) {
  NSObject_init(self);
  GeogebraCommonMainAppCompanion_set_app_(self, app);
}

GeogebraCommonMainAppCompanion *new_GeogebraCommonMainAppCompanion_initWithGeogebraCommonMainApp_(GeogebraCommonMainApp *app) {
  GeogebraCommonMainAppCompanion *self = [GeogebraCommonMainAppCompanion alloc];
  GeogebraCommonMainAppCompanion_initWithGeogebraCommonMainApp_(self, app);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMainAppCompanion)
