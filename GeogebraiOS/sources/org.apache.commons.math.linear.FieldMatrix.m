//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/linear/FieldMatrix.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/math/Field.h"
#include "org/apache/commons/math/FieldElement.h"
#include "org/apache/commons/math/linear/FieldMatrix.h"
#include "org/apache/commons/math/linear/FieldMatrixChangingVisitor.h"
#include "org/apache/commons/math/linear/FieldMatrixPreservingVisitor.h"
#include "org/apache/commons/math/linear/FieldVector.h"
#include "org/apache/commons/math/linear/InvalidMatrixException.h"
#include "org/apache/commons/math/linear/MatrixIndexException.h"
#include "org/apache/commons/math/linear/MatrixVisitorException.h"
#include "org/apache/commons/math/linear/NonSquareMatrixException.h"

@interface OrgApacheCommonsMathLinearFieldMatrix : NSObject
@end

@implementation OrgApacheCommonsMathLinearFieldMatrix

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getField", NULL, "Lorg.apache.commons.math.Field;", 0x401, NULL, NULL },
    { "createMatrixWithInt:withInt:", "createMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, NULL, NULL },
    { "copy__", "copy", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, NULL, NULL },
    { "addWithOrgApacheCommonsMathLinearFieldMatrix:", "add", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "subtractWithOrgApacheCommonsMathLinearFieldMatrix:", "subtract", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "scalarAddWithOrgApacheCommonsMathFieldElement:", "scalarAdd", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "scalarMultiplyWithOrgApacheCommonsMathFieldElement:", "scalarMultiply", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, NULL, "(TT;)Lorg/apache/commons/math/linear/FieldMatrix<TT;>;" },
    { "multiplyWithOrgApacheCommonsMathLinearFieldMatrix:", "multiply", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "preMultiplyWithOrgApacheCommonsMathLinearFieldMatrix:", "preMultiply", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "getData", NULL, "[[Lorg.apache.commons.math.FieldElement;", 0x401, NULL, NULL },
    { "getSubMatrixWithInt:withInt:withInt:withInt:", "getSubMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getSubMatrixWithIntArray:withIntArray:", "getSubMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "copySubMatrixWithInt:withInt:withInt:withInt:withOrgApacheCommonsMathFieldElementArray2:", "copySubMatrix", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Ljava.lang.IllegalArgumentException;", NULL },
    { "copySubMatrixWithIntArray:withIntArray:withOrgApacheCommonsMathFieldElementArray2:", "copySubMatrix", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Ljava.lang.IllegalArgumentException;", NULL },
    { "setSubMatrixWithOrgApacheCommonsMathFieldElementArray2:withInt:withInt:", "setSubMatrix", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "getRowMatrixWithInt:", "getRowMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setRowMatrixWithInt:withOrgApacheCommonsMathLinearFieldMatrix:", "setRowMatrix", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getColumnMatrixWithInt:", "getColumnMatrix", "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setColumnMatrixWithInt:withOrgApacheCommonsMathLinearFieldMatrix:", "setColumnMatrix", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getRowVectorWithInt:", "getRowVector", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setRowVectorWithInt:withOrgApacheCommonsMathLinearFieldVector:", "setRowVector", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getColumnVectorWithInt:", "getColumnVector", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setColumnVectorWithInt:withOrgApacheCommonsMathLinearFieldVector:", "setColumnVector", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getRowWithInt:", "getRow", "[Lorg.apache.commons.math.FieldElement;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setRowWithInt:withOrgApacheCommonsMathFieldElementArray:", "setRow", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getColumnWithInt:", "getColumn", "[Lorg.apache.commons.math.FieldElement;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", NULL },
    { "setColumnWithInt:withOrgApacheCommonsMathFieldElementArray:", "setColumn", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.InvalidMatrixException;", NULL },
    { "getEntryWithInt:withInt:", "getEntry", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", "(II)TT;" },
    { "setEntryWithInt:withInt:withOrgApacheCommonsMathFieldElement:", "setEntry", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", "(IITT;)V" },
    { "addToEntryWithInt:withInt:withOrgApacheCommonsMathFieldElement:", "addToEntry", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", "(IITT;)V" },
    { "multiplyEntryWithInt:withInt:withOrgApacheCommonsMathFieldElement:", "multiplyEntry", "V", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;", "(IITT;)V" },
    { "transpose", NULL, "Lorg.apache.commons.math.linear.FieldMatrix;", 0x401, NULL, NULL },
    { "getTrace", NULL, "TT;", 0x401, "Lorg.apache.commons.math.linear.NonSquareMatrixException;", "()TT;" },
    { "operateWithOrgApacheCommonsMathFieldElementArray:", "operate", "[Lorg.apache.commons.math.FieldElement;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "operateWithOrgApacheCommonsMathLinearFieldVector:", "operate", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "preMultiplyWithOrgApacheCommonsMathFieldElementArray:", "preMultiply", "[Lorg.apache.commons.math.FieldElement;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "preMultiplyWithOrgApacheCommonsMathLinearFieldVector:", "preMultiply", "Lorg.apache.commons.math.linear.FieldVector;", 0x401, "Ljava.lang.IllegalArgumentException;", NULL },
    { "walkInRowOrderWithOrgApacheCommonsMathLinearFieldMatrixChangingVisitor:", "walkInRowOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixChangingVisitor<TT;>;)TT;" },
    { "walkInRowOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:", "walkInRowOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixPreservingVisitor<TT;>;)TT;" },
    { "walkInRowOrderWithOrgApacheCommonsMathLinearFieldMatrixChangingVisitor:withInt:withInt:withInt:withInt:", "walkInRowOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixChangingVisitor<TT;>;IIII)TT;" },
    { "walkInRowOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:withInt:withInt:withInt:withInt:", "walkInRowOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixPreservingVisitor<TT;>;IIII)TT;" },
    { "walkInColumnOrderWithOrgApacheCommonsMathLinearFieldMatrixChangingVisitor:", "walkInColumnOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixChangingVisitor<TT;>;)TT;" },
    { "walkInColumnOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:", "walkInColumnOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixPreservingVisitor<TT;>;)TT;" },
    { "walkInColumnOrderWithOrgApacheCommonsMathLinearFieldMatrixChangingVisitor:withInt:withInt:withInt:withInt:", "walkInColumnOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixChangingVisitor<TT;>;IIII)TT;" },
    { "walkInColumnOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:withInt:withInt:withInt:withInt:", "walkInColumnOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixPreservingVisitor<TT;>;IIII)TT;" },
    { "walkInOptimizedOrderWithOrgApacheCommonsMathLinearFieldMatrixChangingVisitor:", "walkInOptimizedOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixChangingVisitor<TT;>;)TT;" },
    { "walkInOptimizedOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:", "walkInOptimizedOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixPreservingVisitor<TT;>;)TT;" },
    { "walkInOptimizedOrderWithOrgApacheCommonsMathLinearFieldMatrixChangingVisitor:withInt:withInt:withInt:withInt:", "walkInOptimizedOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixChangingVisitor<TT;>;IIII)TT;" },
    { "walkInOptimizedOrderWithOrgApacheCommonsMathLinearFieldMatrixPreservingVisitor:withInt:withInt:withInt:withInt:", "walkInOptimizedOrder", "TT;", 0x401, "Lorg.apache.commons.math.linear.MatrixIndexException;Lorg.apache.commons.math.linear.MatrixVisitorException;", "(Lorg/apache/commons/math/linear/FieldMatrixPreservingVisitor<TT;>;IIII)TT;" },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathLinearFieldMatrix = { 2, "FieldMatrix", "org.apache.commons.math.linear", NULL, 0x609, 49, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "<T::Lorg/apache/commons/math/FieldElement<TT;>;>Ljava/lang/Object;Lorg/apache/commons/math/linear/AnyMatrix;" };
  return &_OrgApacheCommonsMathLinearFieldMatrix;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathLinearFieldMatrix)
