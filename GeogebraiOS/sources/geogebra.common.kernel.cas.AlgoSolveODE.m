//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoSolveODE.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/MyPoint.h"
#include "geogebra/common/kernel/algos/AlgoDenominator.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoNumerator.h"
#include "geogebra/common/kernel/arithmetic/FunctionalNVar.h"
#include "geogebra/common/kernel/cas/AlgoSolveODE.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoLocus.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "java/util/ArrayList.h"
#include "org/apache/commons/math/ode/DerivativeException.h"
#include "org/apache/commons/math/ode/FirstOrderDifferentialEquations.h"
#include "org/apache/commons/math/ode/FirstOrderIntegrator.h"
#include "org/apache/commons/math/ode/IntegratorException.h"
#include "org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegrator.h"
#include "org/apache/commons/math/ode/sampling/StepHandler.h"
#include "org/apache/commons/math/ode/sampling/StepInterpolator.h"

@interface GeogebraCommonKernelCasAlgoSolveODE () {
 @public
  id<GeogebraCommonKernelArithmeticFunctionalNVar> f0_;
  id<GeogebraCommonKernelArithmeticFunctionalNVar> f1_;
  GeogebraCommonKernelGeosGeoNumeric *x_, *y_, *end_, *step_;
  GeogebraCommonKernelGeosGeoLocus *locus_;
  GeogebraCommonKernelAlgosAlgoNumerator *numAlgo_;
  GeogebraCommonKernelAlgosAlgoDenominator *denAlgo_;
  id<GeogebraCommonKernelArithmeticFunctionalNVar> num_;
  id<GeogebraCommonKernelArithmeticFunctionalNVar> den_;
  id<OrgApacheCommonsMathOdeSamplingStepHandler> stepHandler_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, f0_, id<GeogebraCommonKernelArithmeticFunctionalNVar>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, f1_, id<GeogebraCommonKernelArithmeticFunctionalNVar>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, x_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, y_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, end_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, step_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, locus_, GeogebraCommonKernelGeosGeoLocus *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, numAlgo_, GeogebraCommonKernelAlgosAlgoNumerator *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, denAlgo_, GeogebraCommonKernelAlgosAlgoDenominator *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, num_, id<GeogebraCommonKernelArithmeticFunctionalNVar>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, den_, id<GeogebraCommonKernelArithmeticFunctionalNVar>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, stepHandler_, id<OrgApacheCommonsMathOdeSamplingStepHandler>)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoSolveODE_compute(GeogebraCommonKernelCasAlgoSolveODE *self);

@interface GeogebraCommonKernelCasAlgoSolveODE_ODE : NSObject < OrgApacheCommonsMathOdeFirstOrderDifferentialEquations > {
 @public
  id<GeogebraCommonKernelArithmeticFunctionalNVar> f_;
}

- (instancetype)initWithGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)f;

- (jint)getDimension;

- (void)computeDerivativesWithDouble:(jdouble)t
                     withDoubleArray:(IOSDoubleArray *)y
                     withDoubleArray:(IOSDoubleArray *)yDot;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelCasAlgoSolveODE_ODE)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE_ODE, f_, id<GeogebraCommonKernelArithmeticFunctionalNVar>)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoSolveODE_ODE_initWithGeogebraCommonKernelArithmeticFunctionalNVar_(GeogebraCommonKernelCasAlgoSolveODE_ODE *self, id<GeogebraCommonKernelArithmeticFunctionalNVar> f);

__attribute__((unused)) static GeogebraCommonKernelCasAlgoSolveODE_ODE *new_GeogebraCommonKernelCasAlgoSolveODE_ODE_initWithGeogebraCommonKernelArithmeticFunctionalNVar_(id<GeogebraCommonKernelArithmeticFunctionalNVar> f) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelCasAlgoSolveODE_ODE)

@interface GeogebraCommonKernelCasAlgoSolveODE_ODE2 : NSObject < OrgApacheCommonsMathOdeFirstOrderDifferentialEquations > {
 @public
  id<GeogebraCommonKernelArithmeticFunctionalNVar> y0_, y1_;
}

- (instancetype)initWithGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)y
                    withGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)x;

- (jint)getDimension;

- (void)computeDerivativesWithDouble:(jdouble)t
                     withDoubleArray:(IOSDoubleArray *)y
                     withDoubleArray:(IOSDoubleArray *)yDot;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelCasAlgoSolveODE_ODE2)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE_ODE2, y0_, id<GeogebraCommonKernelArithmeticFunctionalNVar>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE_ODE2, y1_, id<GeogebraCommonKernelArithmeticFunctionalNVar>)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoSolveODE_ODE2_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_(GeogebraCommonKernelCasAlgoSolveODE_ODE2 *self, id<GeogebraCommonKernelArithmeticFunctionalNVar> y, id<GeogebraCommonKernelArithmeticFunctionalNVar> x);

__attribute__((unused)) static GeogebraCommonKernelCasAlgoSolveODE_ODE2 *new_GeogebraCommonKernelCasAlgoSolveODE_ODE2_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_(id<GeogebraCommonKernelArithmeticFunctionalNVar> y, id<GeogebraCommonKernelArithmeticFunctionalNVar> x) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelCasAlgoSolveODE_ODE2)

@interface GeogebraCommonKernelCasAlgoSolveODE_$1 : NSObject < OrgApacheCommonsMathOdeSamplingStepHandler > {
 @public
  GeogebraCommonKernelCasAlgoSolveODE *this$0_;
}

- (void)reset;

- (jboolean)requiresDenseOutput;

- (void)handleStepWithOrgApacheCommonsMathOdeSamplingStepInterpolator:(id<OrgApacheCommonsMathOdeSamplingStepInterpolator>)interpolator
                                                          withBoolean:(jboolean)isLast;

- (instancetype)initWithGeogebraCommonKernelCasAlgoSolveODE:(GeogebraCommonKernelCasAlgoSolveODE *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelCasAlgoSolveODE_$1)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE_$1, this$0_, GeogebraCommonKernelCasAlgoSolveODE *)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoSolveODE_$1_initWithGeogebraCommonKernelCasAlgoSolveODE_(GeogebraCommonKernelCasAlgoSolveODE_$1 *self, GeogebraCommonKernelCasAlgoSolveODE *outer$);

__attribute__((unused)) static GeogebraCommonKernelCasAlgoSolveODE_$1 *new_GeogebraCommonKernelCasAlgoSolveODE_$1_initWithGeogebraCommonKernelCasAlgoSolveODE_(GeogebraCommonKernelCasAlgoSolveODE *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelCasAlgoSolveODE_$1)

@implementation GeogebraCommonKernelCasAlgoSolveODE

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)f0
        withGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)f1
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)x
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)y
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)end
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)step {
  GeogebraCommonKernelCasAlgoSolveODE_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, f0, f1, x, y, end, step);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_SolveODE();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:f1_ == nil ? 5 : 6 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  jint i = 0;
  IOSObjectArray_Set(input_, i++, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(f0_, [GeogebraCommonKernelGeosGeoElement class]));
  if (f1_ != nil) IOSObjectArray_Set(input_, i++, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(f1_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, i++, x_);
  IOSObjectArray_Set(input_, i++, y_);
  IOSObjectArray_Set(input_, i++, end_);
  IOSObjectArray_Set(input_, i++, step_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:locus_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoLocus *)getResult {
  return locus_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoSolveODE_compute(self);
}

- (void)remove {
  if (removed_) return;
  [super remove];
  if (f1_ == nil) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(f0_, [GeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:numAlgo_];
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(f0_, [GeogebraCommonKernelGeosGeoElement class])))) removeAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:denAlgo_];
  }
}

- (void)dealloc {
  RELEASE_(f0_);
  RELEASE_(f1_);
  RELEASE_(x_);
  RELEASE_(y_);
  RELEASE_(end_);
  RELEASE_(step_);
  RELEASE_(locus_);
  RELEASE_(al_);
  RELEASE_(numAlgo_);
  RELEASE_(denAlgo_);
  RELEASE_(num_);
  RELEASE_(den_);
  RELEASE_(stepHandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticFunctionalNVar:withGeogebraCommonKernelArithmeticFunctionalNVar:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoSolveODE", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoLocus;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f0_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
    { "f1_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
    { "x_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "y_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "end_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "step_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "locus_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLocus;", NULL, NULL,  },
    { "al_", NULL, 0x0, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/MyPoint;>;",  },
    { "numAlgo_", NULL, 0x2, "Lgeogebra.common.kernel.algos.AlgoNumerator;", NULL, NULL,  },
    { "denAlgo_", NULL, 0x2, "Lgeogebra.common.kernel.algos.AlgoDenominator;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
    { "den_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
    { "quotient_", NULL, 0x0, "Z", NULL, NULL,  },
    { "stepHandler_", NULL, 0x2, "Lorg.apache.commons.math.ode.sampling.StepHandler;", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.kernel.cas.AlgoSolveODE$ODE;", "Lgeogebra.common.kernel.cas.AlgoSolveODE$ODE2;"};
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoSolveODE = { 2, "AlgoSolveODE", "geogebra.common.kernel.cas", NULL, 0x1, 6, methods, 14, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoSolveODE;
}

@end

void GeogebraCommonKernelCasAlgoSolveODE_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCasAlgoSolveODE *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelArithmeticFunctionalNVar> f0, id<GeogebraCommonKernelArithmeticFunctionalNVar> f1, GeogebraCommonKernelGeosGeoNumeric *x, GeogebraCommonKernelGeosGeoNumeric *y, GeogebraCommonKernelGeosGeoNumeric *end, GeogebraCommonKernelGeosGeoNumeric *step) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoSolveODE_setAndConsume_stepHandler_(self, new_GeogebraCommonKernelCasAlgoSolveODE_$1_initWithGeogebraCommonKernelCasAlgoSolveODE_(self));
  GeogebraCommonKernelCasAlgoSolveODE_set_f0_(self, f0);
  GeogebraCommonKernelCasAlgoSolveODE_set_f1_(self, f1);
  GeogebraCommonKernelCasAlgoSolveODE_set_x_(self, x);
  GeogebraCommonKernelCasAlgoSolveODE_set_y_(self, y);
  GeogebraCommonKernelCasAlgoSolveODE_set_end_(self, end);
  GeogebraCommonKernelCasAlgoSolveODE_set_step_(self, step);
  if (f1 == nil) {
    GeogebraCommonKernelCasAlgoSolveODE_setAndConsume_numAlgo_(self, new_GeogebraCommonKernelAlgosAlgoNumerator_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionalNVar_(cons, f0));
    GeogebraCommonKernelCasAlgoSolveODE_setAndConsume_denAlgo_(self, new_GeogebraCommonKernelAlgosAlgoDenominator_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionalNVar_(cons, f0));
    [((GeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->numAlgo_];
    [cons removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:self->denAlgo_];
    GeogebraCommonKernelCasAlgoSolveODE_set_num_(self, (id<GeogebraCommonKernelArithmeticFunctionalNVar>) check_protocol_cast(IOSObjectArray_Get(nil_chk([self->numAlgo_ getGeoElements]), 0), @protocol(GeogebraCommonKernelArithmeticFunctionalNVar)));
    GeogebraCommonKernelCasAlgoSolveODE_set_den_(self, (id<GeogebraCommonKernelArithmeticFunctionalNVar>) check_protocol_cast(IOSObjectArray_Get(nil_chk([self->denAlgo_ getGeoElements]), 0), @protocol(GeogebraCommonKernelArithmeticFunctionalNVar)));
    self->quotient_ = ([((id<GeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(self->num_)) isDefined] && [((id<GeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(self->den_)) isDefined]);
    if (!self->quotient_) {
      [cons removeFromAlgorithmListWithGeogebraCommonKernelAlgosAlgoElement:self->numAlgo_];
      [cons removeFromAlgorithmListWithGeogebraCommonKernelAlgosAlgoElement:self->denAlgo_];
    }
  }
  else {
    GeogebraCommonKernelCasAlgoSolveODE_set_num_(self, f0);
    GeogebraCommonKernelCasAlgoSolveODE_set_den_(self, f1);
    self->quotient_ = YES;
  }
  GeogebraCommonKernelCasAlgoSolveODE_setAndConsume_locus_(self, new_GeogebraCommonKernelGeosGeoLocus_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoSolveODE_compute(self);
  [self->locus_ setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoSolveODE *new_GeogebraCommonKernelCasAlgoSolveODE_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelArithmeticFunctionalNVar> f0, id<GeogebraCommonKernelArithmeticFunctionalNVar> f1, GeogebraCommonKernelGeosGeoNumeric *x, GeogebraCommonKernelGeosGeoNumeric *y, GeogebraCommonKernelGeosGeoNumeric *end, GeogebraCommonKernelGeosGeoNumeric *step) {
  GeogebraCommonKernelCasAlgoSolveODE *self = [GeogebraCommonKernelCasAlgoSolveODE alloc];
  GeogebraCommonKernelCasAlgoSolveODE_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, f0, f1, x, y, end, step);
  return self;
}

void GeogebraCommonKernelCasAlgoSolveODE_compute(GeogebraCommonKernelCasAlgoSolveODE *self) {
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(self->f0_, [GeogebraCommonKernelGeosGeoElement class])))) isDefined] || ![((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->x_)) isDefined] || ![((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->y_)) isDefined] || ![((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->step_)) isDefined] || ![((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->end_)) isDefined] || GeogebraCommonKernelKernel_isZeroWithDouble_([self->step_ getDouble])) {
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(self->locus_)) setUndefined];
    return;
  }
  if (self->al_ == nil) GeogebraCommonKernelCasAlgoSolveODE_setAndConsume_al_(self, new_JavaUtilArrayList_init());
  else [self->al_ clear];
  id<OrgApacheCommonsMathOdeFirstOrderIntegrator> integrator = [new_OrgApacheCommonsMathOdeNonstiffClassicalRungeKuttaIntegrator_initWithDouble_([((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->step_)) getDouble]) autorelease];
  id<OrgApacheCommonsMathOdeFirstOrderDifferentialEquations> ode;
  if (!self->quotient_) {
    ode = [new_GeogebraCommonKernelCasAlgoSolveODE_ODE_initWithGeogebraCommonKernelArithmeticFunctionalNVar_(self->f0_) autorelease];
  }
  else {
    ode = [new_GeogebraCommonKernelCasAlgoSolveODE_ODE2_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_(self->num_, self->den_) autorelease];
  }
  [integrator addStepHandlerWithOrgApacheCommonsMathOdeSamplingStepHandler:self->stepHandler_];
  [((JavaUtilArrayList *) nil_chk(self->al_)) addWithId:[new_GeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_([((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->x_)) getDouble], [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->y_)) getDouble], NO) autorelease]];
  IOSDoubleArray *yy = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ [self->y_ getDouble] } count:1];
  IOSDoubleArray *yy2 = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ [self->x_ getDouble], [self->y_ getDouble] } count:2];
  @try {
    if (!self->quotient_) [integrator integrateWithOrgApacheCommonsMathOdeFirstOrderDifferentialEquations:ode withDouble:[self->x_ getDouble] withDoubleArray:yy withDouble:[((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->end_)) getDouble] withDoubleArray:yy];
    else [integrator integrateWithOrgApacheCommonsMathOdeFirstOrderDifferentialEquations:ode withDouble:0.0 withDoubleArray:yy2 withDouble:[((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->end_)) getDouble] withDoubleArray:yy2];
  }
  @catch (OrgApacheCommonsMathOdeDerivativeException *e) {
    [((OrgApacheCommonsMathOdeDerivativeException *) nil_chk(e)) printStackTrace];
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(self->locus_)) setDefinedWithBoolean:NO];
    return;
  }
  @catch (OrgApacheCommonsMathOdeIntegratorException *e) {
    [((OrgApacheCommonsMathOdeIntegratorException *) nil_chk(e)) printStackTrace];
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(self->locus_)) setDefinedWithBoolean:NO];
    return;
  }
  [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(self->locus_)) setPointsWithJavaUtilArrayList:self->al_];
  [self->locus_ setDefinedWithBoolean:YES];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoSolveODE)

@implementation GeogebraCommonKernelCasAlgoSolveODE_ODE

- (instancetype)initWithGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)f {
  GeogebraCommonKernelCasAlgoSolveODE_ODE_initWithGeogebraCommonKernelArithmeticFunctionalNVar_(self, f);
  return self;
}

- (jint)getDimension {
  return 1;
}

- (void)computeDerivativesWithDouble:(jdouble)t
                     withDoubleArray:(IOSDoubleArray *)y
                     withDoubleArray:(IOSDoubleArray *)yDot {
  IOSDoubleArray *input = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ t, IOSDoubleArray_Get(nil_chk(y), 0) } count:2];
  if ([f_ isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]] && [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(f_, [GeogebraCommonKernelGeosGeoFunction class])))) isFunctionOfY]) {
    *IOSDoubleArray_GetRef(nil_chk(yDot), 0) = [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(f_, [GeogebraCommonKernelGeosGeoFunction class])))) evaluateWithDouble:IOSDoubleArray_Get(y, 0)];
  }
  else *IOSDoubleArray_GetRef(nil_chk(yDot), 0) = [((id<GeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(f_)) evaluateWithDoubleArray:input];
}

- (void)dealloc {
  RELEASE_(f_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelArithmeticFunctionalNVar:", "ODE", NULL, 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "computeDerivativesWithDouble:withDoubleArray:withDoubleArray:", "computeDerivatives", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x0, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoSolveODE_ODE = { 2, "ODE", "geogebra.common.kernel.cas", "AlgoSolveODE", 0xa, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoSolveODE_ODE;
}

@end

void GeogebraCommonKernelCasAlgoSolveODE_ODE_initWithGeogebraCommonKernelArithmeticFunctionalNVar_(GeogebraCommonKernelCasAlgoSolveODE_ODE *self, id<GeogebraCommonKernelArithmeticFunctionalNVar> f) {
  NSObject_init(self);
  GeogebraCommonKernelCasAlgoSolveODE_ODE_set_f_(self, f);
}

GeogebraCommonKernelCasAlgoSolveODE_ODE *new_GeogebraCommonKernelCasAlgoSolveODE_ODE_initWithGeogebraCommonKernelArithmeticFunctionalNVar_(id<GeogebraCommonKernelArithmeticFunctionalNVar> f) {
  GeogebraCommonKernelCasAlgoSolveODE_ODE *self = [GeogebraCommonKernelCasAlgoSolveODE_ODE alloc];
  GeogebraCommonKernelCasAlgoSolveODE_ODE_initWithGeogebraCommonKernelArithmeticFunctionalNVar_(self, f);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoSolveODE_ODE)

@implementation GeogebraCommonKernelCasAlgoSolveODE_ODE2

- (instancetype)initWithGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)y
                    withGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)x {
  GeogebraCommonKernelCasAlgoSolveODE_ODE2_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_(self, y, x);
  return self;
}

- (jint)getDimension {
  return 2;
}

- (void)computeDerivativesWithDouble:(jdouble)t
                     withDoubleArray:(IOSDoubleArray *)y
                     withDoubleArray:(IOSDoubleArray *)yDot {
  IOSDoubleArray *input = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ IOSDoubleArray_Get(nil_chk(y), 0), IOSDoubleArray_Get(y, 1) } count:2];
  if ([y1_ isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]] && [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(y1_, [GeogebraCommonKernelGeosGeoFunction class])))) isFunctionOfY]) {
    *IOSDoubleArray_GetRef(nil_chk(yDot), 0) = [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(y1_, [GeogebraCommonKernelGeosGeoFunction class])))) evaluateWithDouble:IOSDoubleArray_Get(y, 1)];
  }
  else *IOSDoubleArray_GetRef(nil_chk(yDot), 0) = [((id<GeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(y1_)) evaluateWithDoubleArray:input];
  if ([y0_ isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]] && [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(y0_, [GeogebraCommonKernelGeosGeoFunction class])))) isFunctionOfY]) {
    *IOSDoubleArray_GetRef(nil_chk(yDot), 1) = [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(y0_, [GeogebraCommonKernelGeosGeoFunction class])))) evaluateWithDouble:IOSDoubleArray_Get(y, 1)];
  }
  else *IOSDoubleArray_GetRef(nil_chk(yDot), 1) = [((id<GeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(y0_)) evaluateWithDoubleArray:input];
}

- (void)dealloc {
  RELEASE_(y0_);
  RELEASE_(y1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelArithmeticFunctionalNVar:withGeogebraCommonKernelArithmeticFunctionalNVar:", "ODE2", NULL, 0x1, NULL, NULL },
    { "getDimension", NULL, "I", 0x1, NULL, NULL },
    { "computeDerivativesWithDouble:withDoubleArray:withDoubleArray:", "computeDerivatives", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "y0_", NULL, 0x0, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
    { "y1_", NULL, 0x0, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoSolveODE_ODE2 = { 2, "ODE2", "geogebra.common.kernel.cas", "AlgoSolveODE", 0xa, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoSolveODE_ODE2;
}

@end

void GeogebraCommonKernelCasAlgoSolveODE_ODE2_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_(GeogebraCommonKernelCasAlgoSolveODE_ODE2 *self, id<GeogebraCommonKernelArithmeticFunctionalNVar> y, id<GeogebraCommonKernelArithmeticFunctionalNVar> x) {
  NSObject_init(self);
  GeogebraCommonKernelCasAlgoSolveODE_ODE2_set_y0_(self, y);
  GeogebraCommonKernelCasAlgoSolveODE_ODE2_set_y1_(self, x);
}

GeogebraCommonKernelCasAlgoSolveODE_ODE2 *new_GeogebraCommonKernelCasAlgoSolveODE_ODE2_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_(id<GeogebraCommonKernelArithmeticFunctionalNVar> y, id<GeogebraCommonKernelArithmeticFunctionalNVar> x) {
  GeogebraCommonKernelCasAlgoSolveODE_ODE2 *self = [GeogebraCommonKernelCasAlgoSolveODE_ODE2 alloc];
  GeogebraCommonKernelCasAlgoSolveODE_ODE2_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_(self, y, x);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoSolveODE_ODE2)

@implementation GeogebraCommonKernelCasAlgoSolveODE_$1

- (void)reset {
}

- (jboolean)requiresDenseOutput {
  return NO;
}

- (void)handleStepWithOrgApacheCommonsMathOdeSamplingStepInterpolator:(id<OrgApacheCommonsMathOdeSamplingStepInterpolator>)interpolator
                                                          withBoolean:(jboolean)isLast {
  jdouble t = [((id<OrgApacheCommonsMathOdeSamplingStepInterpolator>) nil_chk(interpolator)) getCurrentTime];
  IOSDoubleArray *y1 = [interpolator getInterpolatedState];
  if (!this$0_->quotient_) {
    [((JavaUtilArrayList *) nil_chk(this$0_->al_)) addWithId:[new_GeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(t, IOSDoubleArray_Get(nil_chk(y1), 0), YES) autorelease]];
  }
  else {
    [((JavaUtilArrayList *) nil_chk(this$0_->al_)) addWithId:[new_GeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(IOSDoubleArray_Get(nil_chk(y1), 0), IOSDoubleArray_Get(y1, 1), YES) autorelease]];
  }
}

- (instancetype)initWithGeogebraCommonKernelCasAlgoSolveODE:(GeogebraCommonKernelCasAlgoSolveODE *)outer$ {
  GeogebraCommonKernelCasAlgoSolveODE_$1_initWithGeogebraCommonKernelCasAlgoSolveODE_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "requiresDenseOutput", NULL, "Z", 0x1, NULL, NULL },
    { "handleStepWithOrgApacheCommonsMathOdeSamplingStepInterpolator:withBoolean:", "handleStep", "V", 0x1, "Lorg.apache.commons.math.ode.DerivativeException;", NULL },
    { "initWithGeogebraCommonKernelCasAlgoSolveODE:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.kernel.cas.AlgoSolveODE;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoSolveODE_$1 = { 2, "", "geogebra.common.kernel.cas", "AlgoSolveODE", 0x8008, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoSolveODE_$1;
}

@end

void GeogebraCommonKernelCasAlgoSolveODE_$1_initWithGeogebraCommonKernelCasAlgoSolveODE_(GeogebraCommonKernelCasAlgoSolveODE_$1 *self, GeogebraCommonKernelCasAlgoSolveODE *outer$) {
  GeogebraCommonKernelCasAlgoSolveODE_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonKernelCasAlgoSolveODE_$1 *new_GeogebraCommonKernelCasAlgoSolveODE_$1_initWithGeogebraCommonKernelCasAlgoSolveODE_(GeogebraCommonKernelCasAlgoSolveODE *outer$) {
  GeogebraCommonKernelCasAlgoSolveODE_$1 *self = [GeogebraCommonKernelCasAlgoSolveODE_$1 alloc];
  GeogebraCommonKernelCasAlgoSolveODE_$1_initWithGeogebraCommonKernelCasAlgoSolveODE_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoSolveODE_$1)
