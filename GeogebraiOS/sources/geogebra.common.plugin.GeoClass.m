//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/plugin/GeoClass.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/plugin/GeoClass.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(GeogebraCommonPluginGeoClassEnum *self, NSString *name, jboolean is3D, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginGeoClassEnum *new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(NSString *name, jboolean is3D, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static void GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(GeogebraCommonPluginGeoClassEnum *self, NSString *name, NSString *xmlName, jboolean is3D, NSString *__name, jint __ordinal);

__attribute__((unused)) static GeogebraCommonPluginGeoClassEnum *new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(NSString *name, NSString *xmlName, jboolean is3D, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(GeogebraCommonPluginGeoClassEnum)

GeogebraCommonPluginGeoClassEnum *GeogebraCommonPluginGeoClassEnum_values_[53];

@implementation GeogebraCommonPluginGeoClassEnum

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)is3D
                    withNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(self, name, is3D, __name, __ordinal);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)xmlName
                     withBoolean:(jboolean)is3D
                    withNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(self, name, xmlName, is3D, __name, __ordinal);
  return self;
}

IOSObjectArray *GeogebraCommonPluginGeoClassEnum_values() {
  GeogebraCommonPluginGeoClassEnum_initialize();
  return [IOSObjectArray arrayWithObjects:GeogebraCommonPluginGeoClassEnum_values_ count:53 type:GeogebraCommonPluginGeoClassEnum_class_()];
}

+ (IOSObjectArray *)values {
  return GeogebraCommonPluginGeoClassEnum_values();
}

+ (GeogebraCommonPluginGeoClassEnum *)valueOfWithNSString:(NSString *)name {
  return GeogebraCommonPluginGeoClassEnum_valueOfWithNSString_(name);
}

GeogebraCommonPluginGeoClassEnum *GeogebraCommonPluginGeoClassEnum_valueOfWithNSString_(NSString *name) {
  GeogebraCommonPluginGeoClassEnum_initialize();
  for (int i = 0; i < 53; i++) {
    GeogebraCommonPluginGeoClassEnum *e = GeogebraCommonPluginGeoClassEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [GeogebraCommonPluginGeoClassEnum class]) {
    GeogebraCommonPluginGeoClassEnum_ANGLE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Angle", NO, @"ANGLE", 0);
    GeogebraCommonPluginGeoClassEnum_AXIS = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Axis", NO, @"AXIS", 1);
    GeogebraCommonPluginGeoClassEnum_BOOLEAN = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Boolean", NO, @"BOOLEAN", 2);
    GeogebraCommonPluginGeoClassEnum_BUTTON = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Button", NO, @"BUTTON", 3);
    GeogebraCommonPluginGeoClassEnum_TEXTFIELD = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"TextField", NO, @"TEXTFIELD", 4);
    GeogebraCommonPluginGeoClassEnum_CONIC = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Conic", NO, @"CONIC", 5);
    GeogebraCommonPluginGeoClassEnum_CONICPART = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"ConicPart", NO, @"CONICPART", 6);
    GeogebraCommonPluginGeoClassEnum_FUNCTION = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Function", NO, @"FUNCTION", 7);
    GeogebraCommonPluginGeoClassEnum_INTERVAL = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Interval", NO, @"INTERVAL", 8);
    GeogebraCommonPluginGeoClassEnum_FUNCTIONCONDITIONAL = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"FunctionConditional", NO, @"FUNCTIONCONDITIONAL", 9);
    GeogebraCommonPluginGeoClassEnum_IMAGE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Image", NO, @"IMAGE", 10);
    GeogebraCommonPluginGeoClassEnum_LINE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Line", NO, @"LINE", 11);
    GeogebraCommonPluginGeoClassEnum_LIST = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"List", NO, @"LIST", 12);
    GeogebraCommonPluginGeoClassEnum_LOCUS = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Locus", NO, @"LOCUS", 13);
    GeogebraCommonPluginGeoClassEnum_NUMERIC = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Numeric", NO, @"NUMERIC", 14);
    GeogebraCommonPluginGeoClassEnum_POINT = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Point", NO, @"POINT", 15);
    GeogebraCommonPluginGeoClassEnum_POLYGON = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Polygon", NO, @"POLYGON", 16);
    GeogebraCommonPluginGeoClassEnum_RAY = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Ray", NO, @"RAY", 17);
    GeogebraCommonPluginGeoClassEnum_SEGMENT = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Segment", NO, @"SEGMENT", 18);
    GeogebraCommonPluginGeoClassEnum_TEXT = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Text", NO, @"TEXT", 19);
    GeogebraCommonPluginGeoClassEnum_VECTOR = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Vector", NO, @"VECTOR", 20);
    GeogebraCommonPluginGeoClassEnum_CURVE_CARTESIAN = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"CurveCartesian", NO, @"CURVE_CARTESIAN", 21);
    GeogebraCommonPluginGeoClassEnum_CURVE_POLAR = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"CurvePolar", NO, @"CURVE_POLAR", 22);
    GeogebraCommonPluginGeoClassEnum_IMPLICIT_POLY = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"ImplicitPoly", NO, @"IMPLICIT_POLY", 23);
    GeogebraCommonPluginGeoClassEnum_IMPLICIT_CURVE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"ImplicitCurve", NO, @"IMPLICIT_CURVE", 24);
    GeogebraCommonPluginGeoClassEnum_FUNCTION_NVAR = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"FunctionNVar", NO, @"FUNCTION_NVAR", 25);
    GeogebraCommonPluginGeoClassEnum_POLYLINE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"PolyLine", NO, @"POLYLINE", 26);
    GeogebraCommonPluginGeoClassEnum_PENSTROKE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"PenStroke", NO, @"PENSTROKE", 27);
    GeogebraCommonPluginGeoClassEnum_SPLINE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"CurveCartesian", NO, @"SPLINE", 28);
    GeogebraCommonPluginGeoClassEnum_TURTLE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Turtle", NO, @"TURTLE", 29);
    GeogebraCommonPluginGeoClassEnum_CAS_CELL = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"CasCell", NO, @"CAS_CELL", 30);
    GeogebraCommonPluginGeoClassEnum_ANGLE3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Angle", @"Angle3D", YES, @"ANGLE3D", 31);
    GeogebraCommonPluginGeoClassEnum_POINT3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Point", @"Point3D", YES, @"POINT3D", 32);
    GeogebraCommonPluginGeoClassEnum_VECTOR3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Vector", @"Vector3D", YES, @"VECTOR3D", 33);
    GeogebraCommonPluginGeoClassEnum_SEGMENT3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Segment", @"Segment3D", YES, @"SEGMENT3D", 34);
    GeogebraCommonPluginGeoClassEnum_LINE3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Line", @"Line3D", YES, @"LINE3D", 35);
    GeogebraCommonPluginGeoClassEnum_RAY3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Ray", @"Ray3D", YES, @"RAY3D", 36);
    GeogebraCommonPluginGeoClassEnum_CONIC3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Conic", @"Conic3D", YES, @"CONIC3D", 37);
    GeogebraCommonPluginGeoClassEnum_CONICSECTION = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"ConicPart", @"Conic3DPart", YES, @"CONICSECTION", 38);
    GeogebraCommonPluginGeoClassEnum_AXIS3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Axis", @"Axis3D", YES, @"AXIS3D", 39);
    GeogebraCommonPluginGeoClassEnum_CURVE_CARTESIAN3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"CurveCartesian", @"CurveCartesian3D", YES, @"CURVE_CARTESIAN3D", 40);
    GeogebraCommonPluginGeoClassEnum_POLYGON3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Polygon", @"Polygon3D", YES, @"POLYGON3D", 41);
    GeogebraCommonPluginGeoClassEnum_PLANE3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Plane", @"Plane3D", YES, @"PLANE3D", 42);
    GeogebraCommonPluginGeoClassEnum_QUADRIC = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Quadric", YES, @"QUADRIC", 43);
    GeogebraCommonPluginGeoClassEnum_QUADRIC_PART = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Quadric", @"QuadricPart", YES, @"QUADRIC_PART", 44);
    GeogebraCommonPluginGeoClassEnum_QUADRIC_LIMITED = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Quadric", @"QuadricLimited", YES, @"QUADRIC_LIMITED", 45);
    GeogebraCommonPluginGeoClassEnum_POLYLINE3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"PolyLine", @"PolyLine3D", YES, @"POLYLINE3D", 46);
    GeogebraCommonPluginGeoClassEnum_POLYHEDRON = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Polyhedron", YES, @"POLYHEDRON", 47);
    GeogebraCommonPluginGeoClassEnum_NET = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Net", YES, @"NET", 48);
    GeogebraCommonPluginGeoClassEnum_SURFACECARTESIAN3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(@"Surface", @"SurfaceCartesian3D", YES, @"SURFACECARTESIAN3D", 49);
    GeogebraCommonPluginGeoClassEnum_CLIPPINGCUBE3D = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"ClippingCube3D", YES, @"CLIPPINGCUBE3D", 50);
    GeogebraCommonPluginGeoClassEnum_SPACE = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Space", YES, @"SPACE", 51);
    GeogebraCommonPluginGeoClassEnum_DEFAULT = new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(@"Default", NO, @"DEFAULT", 52);
    J2OBJC_SET_INITIALIZED(GeogebraCommonPluginGeoClassEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "ANGLE", "ANGLE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_ANGLE, NULL,  },
    { "AXIS", "AXIS", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_AXIS, NULL,  },
    { "BOOLEAN", "BOOLEAN", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_BOOLEAN, NULL,  },
    { "BUTTON", "BUTTON", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_BUTTON, NULL,  },
    { "TEXTFIELD", "TEXTFIELD", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_TEXTFIELD, NULL,  },
    { "CONIC", "CONIC", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CONIC, NULL,  },
    { "CONICPART", "CONICPART", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CONICPART, NULL,  },
    { "FUNCTION", "FUNCTION", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_FUNCTION, NULL,  },
    { "INTERVAL", "INTERVAL", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_INTERVAL, NULL,  },
    { "FUNCTIONCONDITIONAL", "FUNCTIONCONDITIONAL", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_FUNCTIONCONDITIONAL, NULL,  },
    { "IMAGE", "IMAGE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_IMAGE, NULL,  },
    { "LINE", "LINE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_LINE, NULL,  },
    { "LIST", "LIST", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_LIST, NULL,  },
    { "LOCUS", "LOCUS", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_LOCUS, NULL,  },
    { "NUMERIC", "NUMERIC", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_NUMERIC, NULL,  },
    { "POINT", "POINT", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_POINT, NULL,  },
    { "POLYGON", "POLYGON", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_POLYGON, NULL,  },
    { "RAY", "RAY", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_RAY, NULL,  },
    { "SEGMENT", "SEGMENT", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_SEGMENT, NULL,  },
    { "TEXT", "TEXT", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_TEXT, NULL,  },
    { "VECTOR", "VECTOR", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_VECTOR, NULL,  },
    { "CURVE_CARTESIAN", "CURVE_CARTESIAN", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CURVE_CARTESIAN, NULL,  },
    { "CURVE_POLAR", "CURVE_POLAR", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CURVE_POLAR, NULL,  },
    { "IMPLICIT_POLY", "IMPLICIT_POLY", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_IMPLICIT_POLY, NULL,  },
    { "IMPLICIT_CURVE", "IMPLICIT_CURVE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_IMPLICIT_CURVE, NULL,  },
    { "FUNCTION_NVAR", "FUNCTION_NVAR", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_FUNCTION_NVAR, NULL,  },
    { "POLYLINE", "POLYLINE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_POLYLINE, NULL,  },
    { "PENSTROKE", "PENSTROKE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_PENSTROKE, NULL,  },
    { "SPLINE", "SPLINE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_SPLINE, NULL,  },
    { "TURTLE", "TURTLE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_TURTLE, NULL,  },
    { "CAS_CELL", "CAS_CELL", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CAS_CELL, NULL,  },
    { "ANGLE3D", "ANGLE3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_ANGLE3D, NULL,  },
    { "POINT3D", "POINT3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_POINT3D, NULL,  },
    { "VECTOR3D", "VECTOR3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_VECTOR3D, NULL,  },
    { "SEGMENT3D", "SEGMENT3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_SEGMENT3D, NULL,  },
    { "LINE3D", "LINE3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_LINE3D, NULL,  },
    { "RAY3D", "RAY3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_RAY3D, NULL,  },
    { "CONIC3D", "CONIC3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CONIC3D, NULL,  },
    { "CONICSECTION", "CONICSECTION", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CONICSECTION, NULL,  },
    { "AXIS3D", "AXIS3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_AXIS3D, NULL,  },
    { "CURVE_CARTESIAN3D", "CURVE_CARTESIAN3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CURVE_CARTESIAN3D, NULL,  },
    { "POLYGON3D", "POLYGON3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_POLYGON3D, NULL,  },
    { "PLANE3D", "PLANE3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_PLANE3D, NULL,  },
    { "QUADRIC", "QUADRIC", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_QUADRIC, NULL,  },
    { "QUADRIC_PART", "QUADRIC_PART", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_QUADRIC_PART, NULL,  },
    { "QUADRIC_LIMITED", "QUADRIC_LIMITED", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_QUADRIC_LIMITED, NULL,  },
    { "POLYLINE3D", "POLYLINE3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_POLYLINE3D, NULL,  },
    { "POLYHEDRON", "POLYHEDRON", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_POLYHEDRON, NULL,  },
    { "NET", "NET", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_NET, NULL,  },
    { "SURFACECARTESIAN3D", "SURFACECARTESIAN3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_SURFACECARTESIAN3D, NULL,  },
    { "CLIPPINGCUBE3D", "CLIPPINGCUBE3D", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_CLIPPINGCUBE3D, NULL,  },
    { "SPACE", "SPACE", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_SPACE, NULL,  },
    { "DEFAULT", "DEFAULT", 0x4019, "Lgeogebra.common.plugin.GeoClass;", &GeogebraCommonPluginGeoClassEnum_DEFAULT, NULL,  },
    { "name_GeoClass_", "name", 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "xmlName_", NULL, 0x1, "Ljava.lang.String;", NULL, NULL,  },
    { "is3D_", NULL, 0x1, "Z", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lgeogebra.common.plugin.GeoClass;"};
  static const J2ObjcClassInfo _GeogebraCommonPluginGeoClassEnum = { 2, "GeoClass", "geogebra.common.plugin", NULL, 0x4011, 0, NULL, 56, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lgeogebra/common/plugin/GeoClass;>;" };
  return &_GeogebraCommonPluginGeoClassEnum;
}

@end

void GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(GeogebraCommonPluginGeoClassEnum *self, NSString *name, jboolean is3D, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  GeogebraCommonPluginGeoClassEnum_set_name_GeoClass_(self, name);
  GeogebraCommonPluginGeoClassEnum_set_xmlName_(self, name);
  self->is3D_ = is3D;
}

GeogebraCommonPluginGeoClassEnum *new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(NSString *name, jboolean is3D, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginGeoClassEnum *self = [GeogebraCommonPluginGeoClassEnum alloc];
  GeogebraCommonPluginGeoClassEnum_initWithNSString_withBoolean_withNSString_withInt_(self, name, is3D, __name, __ordinal);
  return self;
}

void GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(GeogebraCommonPluginGeoClassEnum *self, NSString *name, NSString *xmlName, jboolean is3D, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  GeogebraCommonPluginGeoClassEnum_set_name_GeoClass_(self, name);
  GeogebraCommonPluginGeoClassEnum_set_xmlName_(self, xmlName);
  self->is3D_ = is3D;
}

GeogebraCommonPluginGeoClassEnum *new_GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(NSString *name, NSString *xmlName, jboolean is3D, NSString *__name, jint __ordinal) {
  GeogebraCommonPluginGeoClassEnum *self = [GeogebraCommonPluginGeoClassEnum alloc];
  GeogebraCommonPluginGeoClassEnum_initWithNSString_withNSString_withBoolean_withNSString_withInt_(self, name, xmlName, is3D, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonPluginGeoClassEnum)
