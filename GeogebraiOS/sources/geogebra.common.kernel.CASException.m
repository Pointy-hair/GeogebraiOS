//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/CASException.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/CASException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"

#define GeogebraCommonKernelCASException_serialVersionUID 1LL

@interface GeogebraCommonKernelCASException () {
 @public
  NSString *key_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCASException, key_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelCASException, serialVersionUID, jlong)

@implementation GeogebraCommonKernelCASException

- (instancetype)initWithNSString:(NSString *)message {
  GeogebraCommonKernelCASException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  GeogebraCommonKernelCASException_initWithJavaLangThrowable_(self, cause);
  return self;
}

- (NSString *)getKey {
  if (key_ != nil) {
    return key_;
  }
  return @"CAS.GeneralErrorMessage";
}

- (void)setKeyWithNSString:(NSString *)key {
  GeogebraCommonKernelCASException_set_key_(self, key);
}

- (void)dealloc {
  RELEASE_(key_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "CASException", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangThrowable:", "CASException", NULL, 0x1, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setKeyWithNSString:", "setKey", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonKernelCASException_serialVersionUID },
    { "key_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCASException = { 2, "CASException", "geogebra.common.kernel", NULL, 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCASException;
}

@end

void GeogebraCommonKernelCASException_initWithNSString_(GeogebraCommonKernelCASException *self, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
}

GeogebraCommonKernelCASException *new_GeogebraCommonKernelCASException_initWithNSString_(NSString *message) {
  GeogebraCommonKernelCASException *self = [GeogebraCommonKernelCASException alloc];
  GeogebraCommonKernelCASException_initWithNSString_(self, message);
  return self;
}

void GeogebraCommonKernelCASException_initWithJavaLangThrowable_(GeogebraCommonKernelCASException *self, JavaLangThrowable *cause) {
  JavaLangRuntimeException_initWithNSString_(self, [((JavaLangThrowable *) nil_chk(cause)) getMessage]);
}

GeogebraCommonKernelCASException *new_GeogebraCommonKernelCASException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  GeogebraCommonKernelCASException *self = [GeogebraCommonKernelCASException alloc];
  GeogebraCommonKernelCASException_initWithJavaLangThrowable_(self, cause);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCASException)
