//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoConicPartConicPointsND.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoConicPart.h"
#include "geogebra/common/kernel/algos/AlgoConicPartConicPointsND.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/geos/GeoConicPart.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoConicPartND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonKernelAlgosAlgoConicPartConicPointsND ()

- (void)setIncidence;

@end

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_setIncidence(GeogebraCommonKernelAlgosAlgoConicPartConicPointsND *self);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_compute(GeogebraCommonKernelAlgosAlgoConicPartConicPointsND *self);

@implementation GeogebraCommonKernelAlgosAlgoConicPartConicPointsND

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)circle
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)startPoint
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)endPoint
                                                 withInt:(jint)type {
  GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(self, cons, label, circle, startPoint, endPoint, type);
  return self;
}

- (void)initCoords {
}

- (void)setTempValues {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (GeogebraCommonKernelKernelNDGeoConicND *)newGeoConicPartWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                                                        withInt:(jint)type {
  return [new_GeogebraCommonKernelGeosGeoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(cons, type) autorelease];
}

- (void)setIncidence {
  GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_setIncidence(self);
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getStartPoint {
  return startPoint_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getEndPoint {
  return endPoint_;
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getConic {
  return conic_;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, conic_);
  IOSObjectArray_Set(input_, 1, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(startPoint_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 2, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(endPoint_, [GeogebraCommonKernelGeosGeoElement class]));
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:conicPart_];
  [self setDependencies];
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_compute(self);
}

- (void)computeParemeters {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jdouble)getStartParameter {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jdouble)getEndParameter {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(startPoint_);
  RELEASE_(endPoint_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withInt:", "AlgoConicPartConicPointsND", NULL, 0x1, NULL, NULL },
    { "initCoords", NULL, "V", 0x4, NULL, NULL },
    { "setTempValues", NULL, "V", 0x404, NULL, NULL },
    { "newGeoConicPartWithGeogebraCommonKernelConstruction:withInt:", "newGeoConicPart", "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x4, NULL, NULL },
    { "setIncidence", NULL, "V", 0x2, NULL, NULL },
    { "getStartPoint", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getEndPoint", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x1, NULL, NULL },
    { "getConic", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "computeParemeters", NULL, "V", 0x404, NULL, NULL },
    { "getStartParameter", NULL, "D", 0x404, NULL, NULL },
    { "getEndParameter", NULL, "D", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "startPoint_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "endPoint_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoConicPartConicPointsND = { 2, "AlgoConicPartConicPointsND", "geogebra.common.kernel.algos", NULL, 0x401, 13, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoConicPartConicPointsND;
}

@end

void GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withInt_(GeogebraCommonKernelAlgosAlgoConicPartConicPointsND *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelKernelNDGeoConicND *circle, id<GeogebraCommonKernelKernelNDGeoPointND> startPoint, id<GeogebraCommonKernelKernelNDGeoPointND> endPoint, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(self, cons, type);
  GeogebraCommonKernelAlgosAlgoConicPart_set_conic_(self, circle);
  GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_set_startPoint_(self, startPoint);
  GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_set_endPoint_(self, endPoint);
  [self setTempValues];
  GeogebraCommonKernelAlgosAlgoConicPart_set_conicPart_(self, [self newGeoConicPartWithGeogebraCommonKernelConstruction:cons withInt:type]);
  [self setInputOutput];
  [self initCoords];
  GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_compute(self);
  GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_setIncidence(self);
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setLabelWithNSString:label];
}

void GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_setIncidence(GeogebraCommonKernelAlgosAlgoConicPartConicPointsND *self) {
}

void GeogebraCommonKernelAlgosAlgoConicPartConicPointsND_compute(GeogebraCommonKernelAlgosAlgoConicPartConicPointsND *self) {
  [self computeParemeters];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setWithGeogebraCommonKernelGeosGeoElement:self->conic_];
  [((id<GeogebraCommonKernelKernelNDGeoConicPartND>) check_protocol_cast(self->conicPart_, @protocol(GeogebraCommonKernelKernelNDGeoConicPartND))) setParametersWithDouble:[self getStartParameter] withDouble:[self getEndParameter] withBoolean:YES];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoConicPartConicPointsND)
