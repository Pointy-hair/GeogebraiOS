//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/openGL/PlotterText.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/openGL/Manager.h"
#include "geogebra/common/geogebra3D/euclidian3D/openGL/PlotterText.h"

@interface GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText () {
 @public
  GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText, manager_, GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)

@implementation GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:(GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)manager {
  GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText_initWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

- (void)rectangleWithInt:(jint)x
                 withInt:(jint)y
                 withInt:(jint)z
                 withInt:(jint)width
                 withInt:(jint)height {
  [((GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:GeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_TRIANGLES()];
  [manager_ textureWithDouble:0 withDouble:0];
  [manager_ vertexIntWithInt:x withInt:y withInt:z];
  [manager_ textureWithDouble:1 withDouble:0];
  [manager_ vertexIntWithInt:x + width withInt:y withInt:z];
  [manager_ textureWithDouble:1 withDouble:1];
  [manager_ vertexIntWithInt:x + width withInt:y + height withInt:z];
  [manager_ textureWithDouble:0 withDouble:0];
  [manager_ vertexIntWithInt:x withInt:y withInt:z];
  [manager_ textureWithDouble:1 withDouble:1];
  [manager_ vertexIntWithInt:x + width withInt:y + height withInt:z];
  [manager_ textureWithDouble:0 withDouble:1];
  [manager_ vertexIntWithInt:x withInt:y + height withInt:z];
  [manager_ endGeometry];
}

- (void)rectangleBoundsWithInt:(jint)x
                       withInt:(jint)y
                       withInt:(jint)z
                       withInt:(jint)width
                       withInt:(jint)height {
  [((GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *) nil_chk(manager_)) startGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum:GeogebraCommonGeogebra3DEuclidian3DOpenGLManager_TypeEnum_get_LINE_LOOP()];
  [manager_ vertexIntWithInt:x withInt:y withInt:z];
  [manager_ vertexIntWithInt:x + width withInt:y withInt:z];
  [manager_ vertexIntWithInt:x + width withInt:y + height withInt:z];
  [manager_ vertexIntWithInt:x withInt:y + height withInt:z];
  [manager_ endGeometry];
}

- (void)dealloc {
  RELEASE_(manager_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager:", "PlotterText", NULL, 0x1, NULL, NULL },
    { "rectangleWithInt:withInt:withInt:withInt:withInt:", "rectangle", "V", 0x1, NULL, NULL },
    { "rectangleBoundsWithInt:withInt:withInt:withInt:withInt:", "rectangleBounds", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "manager_", NULL, 0x2, "Lgeogebra.common.geogebra3D.euclidian3D.openGL.Manager;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText = { 2, "PlotterText", "geogebra.common.geogebra3D.euclidian3D.openGL", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText;
}

@end

void GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText_initWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText *self, GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  NSObject_init(self);
  GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText_set_manager_(self, manager);
}

GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText *new_GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText_initWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *manager) {
  GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText *self = [GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText alloc];
  GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText_initWithGeogebraCommonGeogebra3DEuclidian3DOpenGLManager_(self, manager);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterText)
