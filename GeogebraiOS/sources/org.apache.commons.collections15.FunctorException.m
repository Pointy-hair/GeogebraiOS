//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/FunctorException.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/io/PrintWriter.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Method.h"
#include "org/apache/commons/collections15/FunctorException.h"

@interface OrgApacheCommonsCollections15FunctorException () {
 @public
  JavaLangThrowable *rootCause_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15FunctorException, rootCause_, JavaLangThrowable *)

static jboolean OrgApacheCommonsCollections15FunctorException_JDK_SUPPORTS_NESTED_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15FunctorException, JDK_SUPPORTS_NESTED_, jboolean)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsCollections15FunctorException)

@implementation OrgApacheCommonsCollections15FunctorException

- (instancetype)init {
  OrgApacheCommonsCollections15FunctorException_init(self);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg {
  OrgApacheCommonsCollections15FunctorException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)rootCause {
  OrgApacheCommonsCollections15FunctorException_initWithJavaLangThrowable_(self, rootCause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)rootCause {
  OrgApacheCommonsCollections15FunctorException_initWithNSString_withJavaLangThrowable_(self, msg, rootCause);
  return self;
}

- (JavaLangThrowable *)getCause {
  return rootCause_;
}

- (void)printStackTrace {
  [self printStackTraceWithJavaIoPrintStream:JavaLangSystem_get_err_()];
}

- (void)printStackTraceWithJavaIoPrintStream:(JavaIoPrintStream *)outArg {
  @synchronized(outArg) {
    JavaIoPrintWriter *pw = [new_JavaIoPrintWriter_initWithJavaIoOutputStream_withBoolean_(outArg, NO) autorelease];
    [self printStackTraceWithJavaIoPrintWriter:pw];
    [pw flush];
  }
}

- (void)printStackTraceWithJavaIoPrintWriter:(JavaIoPrintWriter *)outArg {
  @synchronized(outArg) {
    [super printStackTraceWithJavaIoPrintWriter:outArg];
    if (rootCause_ != nil && OrgApacheCommonsCollections15FunctorException_JDK_SUPPORTS_NESTED_ == NO) {
      [((JavaIoPrintWriter *) nil_chk(outArg)) printWithNSString:@"Caused by: "];
      [rootCause_ printStackTraceWithJavaIoPrintWriter:outArg];
    }
  }
}

- (void)dealloc {
  RELEASE_(rootCause_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsCollections15FunctorException class]) {
    {
      jboolean flag = NO;
      @try {
        [JavaLangThrowable_class_() getDeclaredMethod:@"getCause" parameterTypes:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]];
        flag = YES;
      }
      @catch (JavaLangNoSuchMethodException *ex) {
        flag = NO;
      }
      OrgApacheCommonsCollections15FunctorException_JDK_SUPPORTS_NESTED_ = flag;
    }
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsCollections15FunctorException)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FunctorException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "FunctorException", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangThrowable:", "FunctorException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withJavaLangThrowable:", "FunctorException", NULL, 0x1, NULL, NULL },
    { "getCause", NULL, "Ljava.lang.Throwable;", 0x1, NULL, NULL },
    { "printStackTrace", NULL, "V", 0x1, NULL, NULL },
    { "printStackTraceWithJavaIoPrintStream:", "printStackTrace", "V", 0x1, NULL, NULL },
    { "printStackTraceWithJavaIoPrintWriter:", "printStackTrace", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "JDK_SUPPORTS_NESTED_", NULL, 0x1a, "Z", &OrgApacheCommonsCollections15FunctorException_JDK_SUPPORTS_NESTED_, NULL,  },
    { "rootCause_", NULL, 0x12, "Ljava.lang.Throwable;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15FunctorException = { 2, "FunctorException", "org.apache.commons.collections15", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsCollections15FunctorException;
}

@end

void OrgApacheCommonsCollections15FunctorException_init(OrgApacheCommonsCollections15FunctorException *self) {
  JavaLangRuntimeException_init(self);
  OrgApacheCommonsCollections15FunctorException_set_rootCause_(self, nil);
}

OrgApacheCommonsCollections15FunctorException *new_OrgApacheCommonsCollections15FunctorException_init() {
  OrgApacheCommonsCollections15FunctorException *self = [OrgApacheCommonsCollections15FunctorException alloc];
  OrgApacheCommonsCollections15FunctorException_init(self);
  return self;
}

void OrgApacheCommonsCollections15FunctorException_initWithNSString_(OrgApacheCommonsCollections15FunctorException *self, NSString *msg) {
  JavaLangRuntimeException_initWithNSString_(self, msg);
  OrgApacheCommonsCollections15FunctorException_set_rootCause_(self, nil);
}

OrgApacheCommonsCollections15FunctorException *new_OrgApacheCommonsCollections15FunctorException_initWithNSString_(NSString *msg) {
  OrgApacheCommonsCollections15FunctorException *self = [OrgApacheCommonsCollections15FunctorException alloc];
  OrgApacheCommonsCollections15FunctorException_initWithNSString_(self, msg);
  return self;
}

void OrgApacheCommonsCollections15FunctorException_initWithJavaLangThrowable_(OrgApacheCommonsCollections15FunctorException *self, JavaLangThrowable *rootCause) {
  JavaLangRuntimeException_initWithNSString_(self, (rootCause == nil ? nil : [rootCause getMessage]));
  OrgApacheCommonsCollections15FunctorException_set_rootCause_(self, rootCause);
}

OrgApacheCommonsCollections15FunctorException *new_OrgApacheCommonsCollections15FunctorException_initWithJavaLangThrowable_(JavaLangThrowable *rootCause) {
  OrgApacheCommonsCollections15FunctorException *self = [OrgApacheCommonsCollections15FunctorException alloc];
  OrgApacheCommonsCollections15FunctorException_initWithJavaLangThrowable_(self, rootCause);
  return self;
}

void OrgApacheCommonsCollections15FunctorException_initWithNSString_withJavaLangThrowable_(OrgApacheCommonsCollections15FunctorException *self, NSString *msg, JavaLangThrowable *rootCause) {
  JavaLangRuntimeException_initWithNSString_(self, msg);
  OrgApacheCommonsCollections15FunctorException_set_rootCause_(self, rootCause);
}

OrgApacheCommonsCollections15FunctorException *new_OrgApacheCommonsCollections15FunctorException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *rootCause) {
  OrgApacheCommonsCollections15FunctorException *self = [OrgApacheCommonsCollections15FunctorException alloc];
  OrgApacheCommonsCollections15FunctorException_initWithNSString_withJavaLangThrowable_(self, msg, rootCause);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15FunctorException)
