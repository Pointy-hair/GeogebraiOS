//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoIndexOf.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/advanced/AlgoIndexOf.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoText.h"

@interface GeogebraCommonKernelAdvancedAlgoIndexOf () {
 @public
  GeogebraCommonKernelGeosGeoElement *hayStack_;
  GeogebraCommonKernelGeosGeoElement *needle_;
  GeogebraCommonKernelGeosGeoNumeric *index_;
  id<GeogebraCommonKernelGeosGeoNumberValue> start_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIndexOf, hayStack_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIndexOf, needle_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIndexOf, index_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIndexOf, start_, id<GeogebraCommonKernelGeosGeoNumberValue>)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoIndexOf_compute(GeogebraCommonKernelAdvancedAlgoIndexOf *self);

@implementation GeogebraCommonKernelAdvancedAlgoIndexOf

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)needle
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)hayStack {
  GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, needle, hayStack);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)needle
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)hayStack
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)start {
  GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(self, cons, label, needle, hayStack, start);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_IndexOf();
}

- (void)setInputOutput {
  if (start_ == nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, needle_);
    IOSObjectArray_Set(input_, 1, hayStack_);
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, needle_);
    IOSObjectArray_Set(input_, 1, hayStack_);
    IOSObjectArray_Set(input_, 2, [start_ toGeoElement]);
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:index_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getResult {
  return index_;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoIndexOf_compute(self);
}

- (void)dealloc {
  RELEASE_(hayStack_);
  RELEASE_(needle_);
  RELEASE_(index_);
  RELEASE_(start_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:", "AlgoIndexOf", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoNumberValue:", "AlgoIndexOf", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "hayStack_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "needle_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "index_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "start_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumberValue;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoIndexOf = { 2, "AlgoIndexOf", "geogebra.common.kernel.advanced", NULL, 0x1, 6, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoIndexOf;
}

@end

void GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelAdvancedAlgoIndexOf *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *needle, GeogebraCommonKernelGeosGeoElement *hayStack) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoIndexOf_set_hayStack_(self, hayStack);
  GeogebraCommonKernelAdvancedAlgoIndexOf_set_needle_(self, needle);
  GeogebraCommonKernelAdvancedAlgoIndexOf_setAndConsume_index_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoIndexOf_compute(self);
  [self->index_ setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoIndexOf *new_GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *needle, GeogebraCommonKernelGeosGeoElement *hayStack) {
  GeogebraCommonKernelAdvancedAlgoIndexOf *self = [GeogebraCommonKernelAdvancedAlgoIndexOf alloc];
  GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, needle, hayStack);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelAdvancedAlgoIndexOf *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *needle, GeogebraCommonKernelGeosGeoElement *hayStack, id<GeogebraCommonKernelGeosGeoNumberValue> start) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoIndexOf_set_hayStack_(self, hayStack);
  GeogebraCommonKernelAdvancedAlgoIndexOf_set_needle_(self, needle);
  GeogebraCommonKernelAdvancedAlgoIndexOf_set_start_(self, start);
  GeogebraCommonKernelAdvancedAlgoIndexOf_setAndConsume_index_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoIndexOf_compute(self);
  [self->index_ setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoIndexOf *new_GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *needle, GeogebraCommonKernelGeosGeoElement *hayStack, id<GeogebraCommonKernelGeosGeoNumberValue> start) {
  GeogebraCommonKernelAdvancedAlgoIndexOf *self = [GeogebraCommonKernelAdvancedAlgoIndexOf alloc];
  GeogebraCommonKernelAdvancedAlgoIndexOf_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(self, cons, label, needle, hayStack, start);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoIndexOf_compute(GeogebraCommonKernelAdvancedAlgoIndexOf *self) {
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->index_)) setUndefined];
  jint startAt = self->start_ != nil ? J2ObjCFpToInt([self->start_ getDouble]) - 1 : 0;
  if (startAt < 0) {
    return;
  }
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->hayStack_)) isGeoText]) {
    if ([((GeogebraCommonKernelGeosGeoText *) check_class_cast(self->hayStack_, [GeogebraCommonKernelGeosGeoText class])) getTextString] == nil) {
      [self->index_ setUndefined];
      return;
    }
    jint pos = [((NSString *) nil_chk([((GeogebraCommonKernelGeosGeoText *) check_class_cast(self->hayStack_, [GeogebraCommonKernelGeosGeoText class])) getTextString])) indexOfString:[((GeogebraCommonKernelGeosGeoText *) nil_chk(((GeogebraCommonKernelGeosGeoText *) check_class_cast(self->needle_, [GeogebraCommonKernelGeosGeoText class])))) getTextString] fromIndex:startAt];
    if (pos > -1) {
      [self->index_ setValueWithDouble:pos + 1];
    }
    return;
  }
  jint size = [((GeogebraCommonKernelGeosGeoList *) check_class_cast(self->hayStack_, [GeogebraCommonKernelGeosGeoList class])) size];
  for (jint i = startAt; i < size; i++) {
    GeogebraCommonKernelGeosGeoElement *cmp = [((GeogebraCommonKernelGeosGeoList *) check_class_cast(self->hayStack_, [GeogebraCommonKernelGeosGeoList class])) getWithInt:i];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->needle_)) isEqualWithGeogebraCommonKernelGeosGeoElement:cmp]) {
      [self->index_ setValueWithDouble:i + 1];
      break;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoIndexOf)
