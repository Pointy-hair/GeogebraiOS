//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/functors/InstantiateFactory.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "org/apache/commons/collections15/Factory.h"
#include "org/apache/commons/collections15/FunctorException.h"
#include "org/apache/commons/collections15/functors/InstantiateFactory.h"

@interface OrgApacheCommonsCollections15FunctorsInstantiateFactory () {
 @public
  IOSClass *iClassToInstantiate_;
  IOSObjectArray *iParamTypes_;
  IOSObjectArray *iArgs_;
  JavaLangReflectConstructor *iConstructor_;
}

- (void)findConstructor;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15FunctorsInstantiateFactory, iClassToInstantiate_, IOSClass *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15FunctorsInstantiateFactory, iParamTypes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15FunctorsInstantiateFactory, iArgs_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15FunctorsInstantiateFactory, iConstructor_, JavaLangReflectConstructor *)

__attribute__((unused)) static void OrgApacheCommonsCollections15FunctorsInstantiateFactory_findConstructor(OrgApacheCommonsCollections15FunctorsInstantiateFactory *self);

@implementation OrgApacheCommonsCollections15FunctorsInstantiateFactory

+ (id<OrgApacheCommonsCollections15Factory>)getInstanceWithIOSClass:(IOSClass *)classToInstantiate
                                                  withIOSClassArray:(IOSObjectArray *)paramTypes
                                                  withNSObjectArray:(IOSObjectArray *)args {
  return OrgApacheCommonsCollections15FunctorsInstantiateFactory_getInstanceWithIOSClass_withIOSClassArray_withNSObjectArray_(classToInstantiate, paramTypes, args);
}

- (instancetype)initWithIOSClass:(IOSClass *)classToInstantiate {
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_(self, classToInstantiate);
  return self;
}

- (instancetype)initWithIOSClass:(IOSClass *)classToInstantiate
               withIOSClassArray:(IOSObjectArray *)paramTypes
               withNSObjectArray:(IOSObjectArray *)args {
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_withIOSClassArray_withNSObjectArray_(self, classToInstantiate, paramTypes, args);
  return self;
}

- (void)findConstructor {
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_findConstructor(self);
}

- (id)create {
  if (iConstructor_ == nil) {
    OrgApacheCommonsCollections15FunctorsInstantiateFactory_findConstructor(self);
  }
  @try {
    return (id) [((JavaLangReflectConstructor *) nil_chk(iConstructor_)) newInstanceWithNSObjectArray:iArgs_];
  }
  @catch (JavaLangInstantiationException *ex) {
    @throw [new_OrgApacheCommonsCollections15FunctorException_initWithNSString_withJavaLangThrowable_(@"InstantiateFactory: InstantiationException", ex) autorelease];
  }
  @catch (JavaLangIllegalAccessException *ex) {
    @throw [new_OrgApacheCommonsCollections15FunctorException_initWithNSString_withJavaLangThrowable_(@"InstantiateFactory: Constructor must be public", ex) autorelease];
  }
  @catch (JavaLangReflectInvocationTargetException *ex) {
    @throw [new_OrgApacheCommonsCollections15FunctorException_initWithNSString_withJavaLangThrowable_(@"InstantiateFactory: Constructor threw an exception", ex) autorelease];
  }
}

- (void)dealloc {
  RELEASE_(iClassToInstantiate_);
  RELEASE_(iParamTypes_);
  RELEASE_(iArgs_);
  RELEASE_(iConstructor_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstanceWithIOSClass:withIOSClassArray:withNSObjectArray:", "getInstance", "Lorg.apache.commons.collections15.Factory;", 0x9, NULL, "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;[Ljava/lang/Class;[Ljava/lang/Object;)Lorg/apache/commons/collections15/Factory<TT;>;" },
    { "initWithIOSClass:", "InstantiateFactory", NULL, 0x1, NULL, NULL },
    { "initWithIOSClass:withIOSClassArray:withNSObjectArray:", "InstantiateFactory", NULL, 0x1, NULL, NULL },
    { "findConstructor", NULL, "V", 0x2, NULL, NULL },
    { "create", NULL, "TT;", 0x1, NULL, "()TT;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x18, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15FunctorsInstantiateFactory_serialVersionUID },
    { "iClassToInstantiate_", NULL, 0x12, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<TT;>;",  },
    { "iParamTypes_", NULL, 0x12, "[Ljava.lang.Class;", NULL, NULL,  },
    { "iArgs_", NULL, 0x12, "[Ljava.lang.Object;", NULL, NULL,  },
    { "iConstructor_", NULL, 0x82, "Ljava.lang.reflect.Constructor;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15FunctorsInstantiateFactory = { 2, "InstantiateFactory", "org.apache.commons.collections15.functors", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/collections15/Factory<TT;>;Ljava/io/Serializable;" };
  return &_OrgApacheCommonsCollections15FunctorsInstantiateFactory;
}

@end

id<OrgApacheCommonsCollections15Factory> OrgApacheCommonsCollections15FunctorsInstantiateFactory_getInstanceWithIOSClass_withIOSClassArray_withNSObjectArray_(IOSClass *classToInstantiate, IOSObjectArray *paramTypes, IOSObjectArray *args) {
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_initialize();
  if (classToInstantiate == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Class to instantiate must not be null") autorelease];
  }
  if (((paramTypes == nil) && (args != nil)) || ((paramTypes != nil) && (args == nil)) || ((paramTypes != nil) && (args != nil) && (paramTypes->size_ != args->size_))) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Parameter types must match the arguments") autorelease];
  }
  if (paramTypes == nil || paramTypes->size_ == 0) {
    return [new_OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_(classToInstantiate) autorelease];
  }
  else {
    paramTypes = [paramTypes clone];
    args = [((IOSObjectArray *) nil_chk(args)) clone];
    return [new_OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_withIOSClassArray_withNSObjectArray_(classToInstantiate, paramTypes, args) autorelease];
  }
}

void OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_(OrgApacheCommonsCollections15FunctorsInstantiateFactory *self, IOSClass *classToInstantiate) {
  NSObject_init(self);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iConstructor_(self, nil);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iClassToInstantiate_(self, classToInstantiate);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iParamTypes_(self, nil);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iArgs_(self, nil);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_findConstructor(self);
}

OrgApacheCommonsCollections15FunctorsInstantiateFactory *new_OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_(IOSClass *classToInstantiate) {
  OrgApacheCommonsCollections15FunctorsInstantiateFactory *self = [OrgApacheCommonsCollections15FunctorsInstantiateFactory alloc];
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_(self, classToInstantiate);
  return self;
}

void OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_withIOSClassArray_withNSObjectArray_(OrgApacheCommonsCollections15FunctorsInstantiateFactory *self, IOSClass *classToInstantiate, IOSObjectArray *paramTypes, IOSObjectArray *args) {
  NSObject_init(self);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iConstructor_(self, nil);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iClassToInstantiate_(self, classToInstantiate);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iParamTypes_(self, paramTypes);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iArgs_(self, args);
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_findConstructor(self);
}

OrgApacheCommonsCollections15FunctorsInstantiateFactory *new_OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_withIOSClassArray_withNSObjectArray_(IOSClass *classToInstantiate, IOSObjectArray *paramTypes, IOSObjectArray *args) {
  OrgApacheCommonsCollections15FunctorsInstantiateFactory *self = [OrgApacheCommonsCollections15FunctorsInstantiateFactory alloc];
  OrgApacheCommonsCollections15FunctorsInstantiateFactory_initWithIOSClass_withIOSClassArray_withNSObjectArray_(self, classToInstantiate, paramTypes, args);
  return self;
}

void OrgApacheCommonsCollections15FunctorsInstantiateFactory_findConstructor(OrgApacheCommonsCollections15FunctorsInstantiateFactory *self) {
  @try {
    OrgApacheCommonsCollections15FunctorsInstantiateFactory_set_iConstructor_(self, [((IOSClass *) nil_chk(self->iClassToInstantiate_)) getConstructor:self->iParamTypes_]);
  }
  @catch (JavaLangNoSuchMethodException *ex) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"InstantiateFactory: The constructor must exist and be public ") autorelease];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15FunctorsInstantiateFactory)
