//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/scripting/CmdTurtleBack.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/geos/GeoTurtle.h"
#include "geogebra/common/kernel/scripting/CmdTurtleBack.h"
#include "geogebra/common/kernel/scripting/CmdTurtleCommand.h"
#include "geogebra/common/main/MyError.h"

@implementation GeogebraCommonKernelScriptingCmdTurtleBack

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelScriptingCmdTurtleBack_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (void)performTurtleCommandWithNSString:(NSString *)cname
withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)args {
  [((GeogebraCommonKernelGeosGeoTurtle *) nil_chk([self getTurtleWithGeogebraCommonKernelGeosGeoElementArray:args])) forwardWithDouble:-[self getNumArgWithNSString:cname withGeogebraCommonKernelGeosGeoElementArray:args]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdTurtleBack", NULL, 0x1, NULL, NULL },
    { "performTurtleCommandWithNSString:withGeogebraCommonKernelGeosGeoElementArray:", "performTurtleCommand", "V", 0x4, "Lgeogebra.common.main.MyError;", NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelScriptingCmdTurtleBack = { 2, "CmdTurtleBack", "geogebra.common.kernel.scripting", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelScriptingCmdTurtleBack;
}

@end

void GeogebraCommonKernelScriptingCmdTurtleBack_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelScriptingCmdTurtleBack *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelScriptingCmdTurtleCommand_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelScriptingCmdTurtleBack *new_GeogebraCommonKernelScriptingCmdTurtleBack_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelScriptingCmdTurtleBack *self = [GeogebraCommonKernelScriptingCmdTurtleBack alloc];
  GeogebraCommonKernelScriptingCmdTurtleBack_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelScriptingCmdTurtleBack)
