//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/MyNode.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/MyNode.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonKernelDiscreteMyNode

- (instancetype)initWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)id_ {
  GeogebraCommonKernelDiscreteMyNode_initWithGeogebraCommonKernelKernelNDGeoPointND_(self, id_);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@", @"Vertex:", id__);
}

- (void)dealloc {
  RELEASE_(id__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernelNDGeoPointND:", "MyNode", NULL, 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "id", 0x1, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteMyNode = { 2, "MyNode", "geogebra.common.kernel.discrete", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteMyNode;
}

@end

void GeogebraCommonKernelDiscreteMyNode_initWithGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelDiscreteMyNode *self, id<GeogebraCommonKernelKernelNDGeoPointND> id_) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteMyNode_set_id__(self, id_);
}

GeogebraCommonKernelDiscreteMyNode *new_GeogebraCommonKernelDiscreteMyNode_initWithGeogebraCommonKernelKernelNDGeoPointND_(id<GeogebraCommonKernelKernelNDGeoPointND> id_) {
  GeogebraCommonKernelDiscreteMyNode *self = [GeogebraCommonKernelDiscreteMyNode alloc];
  GeogebraCommonKernelDiscreteMyNode_initWithGeogebraCommonKernelKernelNDGeoPointND_(self, id_);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteMyNode)
