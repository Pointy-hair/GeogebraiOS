//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/cas/AlgoAsymptoteFunction.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/cas/AlgoAsymptoteFunction.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/plugin/EuclidianStyleConstants.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"

@interface GeogebraCommonCasAlgoAsymptoteFunction () {
 @public
  GeogebraCommonKernelGeosGeoFunction *f_;
  GeogebraCommonKernelGeosGeoList *g_;
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonCasAlgoAsymptoteFunction, f_, GeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonCasAlgoAsymptoteFunction, g_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonCasAlgoAsymptoteFunction, sb_, JavaLangStringBuilder *)

__attribute__((unused)) static void GeogebraCommonCasAlgoAsymptoteFunction_compute(GeogebraCommonCasAlgoAsymptoteFunction *self);

@implementation GeogebraCommonCasAlgoAsymptoteFunction

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f {
  GeogebraCommonCasAlgoAsymptoteFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(self, cons, label, f);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Asymptote();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, f_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:g_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoList *)getResult {
  return g_;
}

- (void)compute {
  GeogebraCommonCasAlgoAsymptoteFunction_compute(self);
}

- (void)dealloc {
  RELEASE_(f_);
  RELEASE_(g_);
  RELEASE_(sb_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoFunction:", "AlgoAsymptoteFunction", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonCasAlgoAsymptoteFunction = { 2, "AlgoAsymptoteFunction", "geogebra.common.cas", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonCasAlgoAsymptoteFunction;
}

@end

void GeogebraCommonCasAlgoAsymptoteFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonCasAlgoAsymptoteFunction *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonCasAlgoAsymptoteFunction_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
  GeogebraCommonCasAlgoAsymptoteFunction_set_f_(self, f);
  GeogebraCommonCasAlgoAsymptoteFunction_setAndConsume_g_(self, new_GeogebraCommonKernelGeosGeoList_initWithGeogebraCommonKernelConstruction_(cons));
  [self->g_ setLineTypeWithInt:GeogebraCommonPluginEuclidianStyleConstants_LINE_TYPE_DASHED_SHORT];
  [self->g_ setTypeStringForXMLWithNSString:@"line"];
  [self setInputOutput];
  GeogebraCommonCasAlgoAsymptoteFunction_compute(self);
  [self->g_ setLabelWithNSString:label];
}

GeogebraCommonCasAlgoAsymptoteFunction *new_GeogebraCommonCasAlgoAsymptoteFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonCasAlgoAsymptoteFunction *self = [GeogebraCommonCasAlgoAsymptoteFunction alloc];
  GeogebraCommonCasAlgoAsymptoteFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(self, cons, label, f);
  return self;
}

void GeogebraCommonCasAlgoAsymptoteFunction_compute(GeogebraCommonCasAlgoAsymptoteFunction *self) {
  if (![((GeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setUndefined];
    return;
  }
  @try {
    [((JavaLangStringBuilder *) nil_chk(self->sb_)) setLengthWithInt:0];
    [self->sb_ appendWithNSString:@"{"];
    [self->f_ getHorizontalPositiveAsymptoteWithGeogebraCommonKernelGeosGeoFunction:self->f_ withJavaLangStringBuilder:self->sb_];
    [self->f_ getHorizontalNegativeAsymptoteWithGeogebraCommonKernelGeosGeoFunction:self->f_ withJavaLangStringBuilder:self->sb_];
    [self->f_ getDiagonalPositiveAsymptoteWithGeogebraCommonKernelGeosGeoFunction:self->f_ withJavaLangStringBuilder:self->sb_];
    [self->f_ getDiagonalNegativeAsymptoteWithGeogebraCommonKernelGeosGeoFunction:self->f_ withJavaLangStringBuilder:self->sb_];
    [self->f_ getVerticalAsymptotesWithGeogebraCommonKernelGeosGeoFunction:self->f_ withJavaLangStringBuilder:self->sb_ withBoolean:NO];
    [self->sb_ appendWithNSString:@"}"];
    [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setWithGeogebraCommonKernelGeosGeoElement:[((GeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) getAlgebraProcessor])) evaluateToListWithNSString:[self->sb_ description]]];
  }
  @catch (JavaLangThrowable *th) {
    [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setUndefined];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonCasAlgoAsymptoteFunction)
