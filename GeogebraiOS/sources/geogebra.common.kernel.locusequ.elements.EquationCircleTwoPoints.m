//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationCircleTwoPoints.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoCircleTwoPoints.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/arith/EquationArithHelper.h"
#include "geogebra/common/kernel/locusequ/arith/EquationExpression.h"
#include "geogebra/common/kernel/locusequ/arith/EquationNumericValue.h"
#include "geogebra/common/kernel/locusequ/elements/EquationCircleTwoPoints.h"
#include "geogebra/common/kernel/locusequ/elements/EquationGenericConic.h"

@implementation GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)element
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  return self;
}

- (void)computeMatrix {
  IOSObjectArray *matrix = [IOSObjectArray arrayWithLength:6 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()];
  GeogebraCommonKernelAlgosAlgoCircleTwoPoints *algo = (GeogebraCommonKernelAlgosAlgoCircleTwoPoints *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getResult])) getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoCircleTwoPoints class]);
  GeogebraCommonKernelLocusequEquationPoint *ext = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast([((GeogebraCommonKernelAlgosAlgoCircleTwoPoints *) nil_chk(algo)) getExternalPoint], [GeogebraCommonKernelGeosGeoPoint class])];
  GeogebraCommonKernelLocusequEquationPoint *center = [((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast([algo getCenter], [GeogebraCommonKernelGeosGeoPoint class])];
  IOSObjectArray_Set(matrix, 0, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(1));
  IOSObjectArray_Set(matrix, 1, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(1));
  IOSObjectArray_Set(matrix, 2, GeogebraCommonKernelLocusequArithEquationArithHelper_diffWithGeogebraCommonKernelLocusequArithEquationExpressionArray_([IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelLocusequArithEquationArithHelper_sumWithGeogebraCommonKernelLocusequArithEquationExpressionArray_([IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelLocusequArithEquationArithHelper_timesWithGeogebraCommonKernelLocusequArithEquationExpressionArray_([IOSObjectArray arrayWithObjects:(id[]){ [((GeogebraCommonKernelLocusequEquationPoint *) nil_chk(center)) getXExpression], [center getXExpression] } count:2 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()]), GeogebraCommonKernelLocusequArithEquationArithHelper_timesWithGeogebraCommonKernelLocusequArithEquationExpressionArray_([IOSObjectArray arrayWithObjects:(id[]){ [center getYExpression], [center getYExpression] } count:2 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()]) } count:2 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()]), GeogebraCommonKernelLocusequArithEquationArithHelper_dist2WithGeogebraCommonKernelLocusequEquationPoint_withGeogebraCommonKernelLocusequEquationPoint_(ext, center) } count:2 type:GeogebraCommonKernelLocusequArithEquationExpression_class_()]));
  IOSObjectArray_Set(matrix, 3, GeogebraCommonKernelLocusequArithEquationNumericValue_fromWithDouble_(0));
  IOSObjectArray_Set(matrix, 4, [((GeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([center getXExpression])) getOpposite]);
  IOSObjectArray_Set(matrix, 5, [((GeogebraCommonKernelLocusequArithEquationExpression *) nil_chk([center getYExpression])) getOpposite]);
  [self setMatrixWithGeogebraCommonKernelLocusequArithEquationExpressionArray:matrix];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationCircleTwoPoints", NULL, 0x1, NULL, NULL },
    { "computeMatrix", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints = { 2, "EquationCircleTwoPoints", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints;
}

@end

void GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints *self, GeogebraCommonKernelGeosGeoElement *element, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationGenericConic_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  [self computeMatrix];
}

GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints *new_GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *element, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints *self = [GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints alloc];
  GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationCircleTwoPoints)
