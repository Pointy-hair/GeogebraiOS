//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedron.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoJoinPoints3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoPolygon3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedron.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "java/lang/Exception.h"
#include "java/util/ArrayList.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron ()

- (void)removePointWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)oldPoint;

@end

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_removePointWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *self, GeogebraCommonKernelGeosGeoElement *oldPoint);

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 : NSObject < GeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *this$0_;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1, this$0_, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$);

__attribute__((unused)) static GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1)

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 : NSObject < GeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *this$0_;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2, this$0_, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$);

__attribute__((unused)) static GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2)

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 : NSObject < GeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *this$0_;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3, this$0_, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$);

__attribute__((unused)) static GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3)

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 : NSObject < GeogebraCommonKernelAlgosAlgoElement_elementFactory > {
 @public
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *this$0_;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)newElement OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4, this$0_, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$);

__attribute__((unused)) static GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_initWithGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (jboolean)isFirstInputPointVisible {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isFirstInputPointLabelVisible {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)createFaces {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk(polyhedron_)) createFaces];
}

- (void)createOutputSegments {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputSegmentsHandler {
  return [new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self) autorelease]) autorelease];
}

- (void)createOutputPolygons {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPolygonsHandler {
  return [new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self) autorelease]) autorelease];
}

- (void)addAlgoToInput {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(input_))->size_; i++) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(input_, i))) addAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:self];
  }
}

- (void)updateOutput {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setOutput {
  [self updateOutput];
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)getPolyhedron {
  return [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(outputPolyhedron_)) getElementWithInt:0];
}

- (void)removeOutputExceptWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)keepGeo {
  for (jint i = 0; i < [super getOutputLength]; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [super getOutputWithInt:i];
    if (geo != keepGeo) {
      if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isGeoPoint]) {
        GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_removePointWithGeogebraCommonKernelGeosGeoElement_(self, geo);
      }
      else {
        [geo doRemove];
      }
    }
  }
}

- (void)removePointWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)oldPoint {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_removePointWithGeogebraCommonKernelGeosGeoElement_(self, oldPoint);
}

- (void)updateDependentGeos {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([self getPolyhedron])) update];
}

- (void)dealloc {
  RELEASE_(outputPoints_);
  RELEASE_(outputPolyhedron_);
  RELEASE_(polyhedron_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:", "AlgoPolyhedron", NULL, 0x4, NULL, NULL },
    { "isFirstInputPointVisible", NULL, "Z", 0x404, NULL, NULL },
    { "isFirstInputPointLabelVisible", NULL, "Z", 0x404, NULL, NULL },
    { "createFaces", NULL, "V", 0x4, NULL, NULL },
    { "createOutputSegments", NULL, "V", 0x404, NULL, NULL },
    { "createOutputSegmentsHandler", NULL, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x4, NULL, NULL },
    { "createOutputPolygons", NULL, "V", 0x404, NULL, NULL },
    { "createOutputPolygonsHandler", NULL, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", 0x4, NULL, NULL },
    { "addAlgoToInput", NULL, "V", 0x4, NULL, NULL },
    { "updateOutput", NULL, "V", 0x404, NULL, NULL },
    { "setOutput", NULL, "V", 0x4, NULL, NULL },
    { "getPolyhedron", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPolyhedron;", 0x1, NULL, NULL },
    { "removeOutputExceptWithGeogebraCommonKernelGeosGeoElement:", "removeOutputExcept", "V", 0x1, NULL, NULL },
    { "removePointWithGeogebraCommonKernelGeosGeoElement:", "removePoint", "V", 0x2, NULL, NULL },
    { "updateDependentGeos", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "outputPoints_", NULL, 0x4, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lgeogebra/common/kernel/algos/AlgoElement$OutputHandler<Lgeogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D;>;",  },
    { "outputPolyhedron_", NULL, 0x4, "Lgeogebra.common.kernel.algos.AlgoElement$OutputHandler;", NULL, "Lgeogebra/common/kernel/algos/AlgoElement$OutputHandler<Lgeogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron;>;",  },
    { "polyhedron_", NULL, 0x4, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPolyhedron;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron = { 2, "AlgoPolyhedron", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 15, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *self, GeogebraCommonKernelConstruction *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, c);
  [((GeogebraCommonKernelConstruction *) nil_chk(self->cons_)) addToAlgorithmListWithGeogebraCommonKernelAlgosAlgoElement:self];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_setAndConsume_outputPolyhedron_(self, new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self) autorelease]));
  [self->outputPolyhedron_ adjustOutputSizeWithInt:1];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_set_polyhedron_(self, [self getPolyhedron]);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_setAndConsume_outputPoints_(self, new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(self, [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self) autorelease]));
  [self createOutputPolygons];
  [self createOutputSegments];
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_removePointWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *self, GeogebraCommonKernelGeosGeoElement *oldPoint) {
  JavaUtilArrayList *algoList = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(oldPoint)) getAlgorithmList];
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(algoList)) size]; k++) {
    GeogebraCommonKernelAlgosAlgoElement *algo = [algoList getWithInt:k];
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(self->input_))->size_; j++) [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(self->input_, j))) removeFromUpdateSetsWithGeogebraCommonKernelAlgosAlgoElement:algo];
  }
  [oldPoint setParentAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:nil];
  GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *poly = [self getPolyhedron];
  for (jint k = 0; k < [algoList size]; k++) {
    GeogebraCommonKernelAlgosAlgoElement *algo = [algoList getWithInt:k];
    if ([algo isKindOfClass:[GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D class]] && [((GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D *) check_class_cast(algo, [GeogebraCommonGeogebra3DKernel3DAlgosAlgoJoinPoints3D class])))) getPoly] == poly) {
      continue;
    }
    else if ([algo isKindOfClass:[GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolygon3D class]] && [((GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolygon3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolygon3D *) check_class_cast(algo, [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolygon3D class])))) getPolyhedron] == poly) {
      continue;
    }
    [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(algo)) remove];
  }
  [algoList clear];
  [oldPoint doRemove];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)newElement {
  GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p = [new_GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_initWithGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  [p setParentAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:this$0_];
  return p;
}

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$ {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPolyhedron;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedron;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron", "initWithGeogebraCommonKernelConstruction:" };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 = { 2, "", "geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedron", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lgeogebra/common/kernel/algos/AlgoElement$elementFactory<Lgeogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron;>;" };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1 alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$1)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)newElement {
  GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p = [new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  [p setCoordsWithDouble:0 withDouble:0 withDouble:0 withDouble:1];
  [p setParentAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:this$0_];
  jboolean visible = NO;
  jboolean labelVisible = NO;
  jint size = [((GeogebraCommonKernelAlgosAlgoElement_OutputHandler *) nil_chk(this$0_->outputPoints_)) size];
  if (size > 0) {
    for (jint i = 0; i < size && !visible && !labelVisible; i++) {
      visible = (visible || [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([this$0_->outputPoints_ getElementWithInt:i])) isEuclidianVisible]);
      labelVisible = (labelVisible || [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([this$0_->outputPoints_ getElementWithInt:i])) getLabelVisible]);
    }
  }
  else {
    visible = [this$0_ isFirstInputPointVisible];
    labelVisible = [this$0_ isFirstInputPointLabelVisible];
  }
  [p setEuclidianVisibleWithBoolean:visible];
  if (!visible) {
    [p dontSetEuclidianVisibleBySetParentAlgorithm];
  }
  [p setLabelVisibleWithBoolean:labelVisible];
  if ([((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([this$0_ getPolyhedron])) getShowObjectCondition] != nil) {
    @try {
      [p setShowObjectConditionWithGeogebraCommonKernelGeosGeoBoolean:[((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([this$0_ getPolyhedron])) getShowObjectCondition]];
    }
    @catch (JavaLangException *e) {
    }
  }
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *) nil_chk([this$0_ getPolyhedron])) addPointCreatedWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:p];
  return p;
}

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$ {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedron;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron", "initWithGeogebraCommonKernelConstruction:" };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 = { 2, "", "geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedron", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lgeogebra/common/kernel/algos/AlgoElement$elementFactory<Lgeogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D;>;" };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2 alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$2)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3

- (GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *)newElement {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *s = [new_GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  return s;
}

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$ {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoSegment3D;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedron;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron", "createOutputSegmentsHandler" };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 = { 2, "", "geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedron", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lgeogebra/common/kernel/algos/AlgoElement$elementFactory<Lgeogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D;>;" };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3 alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$3)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)newElement {
  GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *p = [new_GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D_initWithGeogebraCommonKernelConstruction_(this$0_->cons_) autorelease];
  return p;
}

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *)outer$ {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newElement", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPolygon3D;", 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.geogebra3D.kernel3D.algos.AlgoPolyhedron;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron", "createOutputPolygonsHandler" };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 = { 2, "", "geogebra.common.geogebra3D.kernel3D.algos", "AlgoPolyhedron", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lgeogebra/common/kernel/algos/AlgoElement$elementFactory<Lgeogebra/common/geogebra3D/kernel3D/geos/GeoPolygon3D;>;" };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 *self, GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_set_this$0_(self, outer$);
  NSObject_init(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron *outer$) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4 alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4_initWithGeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedron_$4)
