//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectConic3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersect3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectConic3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoIntersectLineConic.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/AlgoIntersectND.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/main/Localization.h"

#define GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_serialVersionUID 1LL

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D () {
 @public
  IOSObjectArray *D_;
  GeogebraCommonKernelGeosGeoLine *g2d_;
  IOSObjectArray *points2d_;
  GeogebraCommonKernelMatrixCoords *p2d_;
}

- (void)setPointsUndefined;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D, D_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D, g2d_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D, points2d_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D, p2d_, GeogebraCommonKernelMatrixCoords *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D, serialVersionUID, jlong)

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_intersectWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D *self, GeogebraCommonKernelKernelNDGeoConicND *c, IOSObjectArray *P);

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setPointsUndefined(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D *self);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)firstGeo
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, firstGeo, c);
  return self;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, firstGeo_);
  IOSObjectArray_Set(input_, 1, c_);
  [self setOutputWithGeogebraCommonKernelGeosGeoElementArray:P_];
  [self noUndefinedPointsInAlgebraView];
  [self setDependencies];
}

- (IOSObjectArray *)getIntersectionPoints {
  return P_;
}

- (IOSObjectArray *)getLastDefinedIntersectionPoints {
  return D_;
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getConic {
  return c_;
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"IntersectionPointOfAB" withNSString:[((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk(firstGeo_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (GeogebraCommonKernelMatrixCoords *)getFirstGeoStartInhomCoords {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (GeogebraCommonKernelMatrixCoords *)getFirstGeoDirectionInD3 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)getFirstGeoRespectLimitedPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)compute {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_intersectWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(self, c_, P_);
}

- (void)intersectWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c
    withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:(IOSObjectArray *)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_intersectWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(self, c, P);
}

- (void)intersectLineIncludedWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c
                withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:(IOSObjectArray *)P
                                 withGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)cs
                                    withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)g {
  GeogebraCommonKernelAlgosAlgoIntersectLineConic_intersectLineConicWithGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelGeosGeoPointArray_withDouble_(g, c, points2d_, GeogebraCommonKernelKernel_STANDARD_PRECISION);
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(nil_chk(P), 0))) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) getPointWithDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(nil_chk(points2d_), 0)))->x_ withDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points2d_, 0)))->y_] withBoolean:NO];
  [self checkIsOnFirstGeoWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:IOSObjectArray_Get(P, 0)];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(P, 1))) setCoordsWithGeogebraCommonKernelMatrixCoords:[cs getPointWithDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points2d_, 1)))->x_ withDouble:((GeogebraCommonKernelGeosGeoPoint *) nil_chk(IOSObjectArray_Get(points2d_, 1)))->y_] withBoolean:NO];
  [self checkIsOnFirstGeoWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:IOSObjectArray_Get(P, 1)];
}

- (void)checkIsOnFirstGeoWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)p {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setPointsUndefined {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setPointsUndefined(self);
}

- (void)initForNearToRelationship {
}

- (GeogebraCommonKernelGeosGeoElement *)getFirtGeo {
  return firstGeo_;
}

- (void)dealloc {
  RELEASE_(firstGeo_);
  RELEASE_(c_);
  RELEASE_(P_);
  RELEASE_(D_);
  RELEASE_(g2d_);
  RELEASE_(points2d_);
  RELEASE_(p2d_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:", "AlgoIntersectConic3D", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoIntersectConic3D", NULL, 0x0, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getIntersectionPoints", NULL, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x11, NULL, NULL },
    { "getLastDefinedIntersectionPoints", NULL, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x4, NULL, NULL },
    { "getConic", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x0, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getFirstGeoStartInhomCoords", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x404, NULL, NULL },
    { "getFirstGeoDirectionInD3", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x404, NULL, NULL },
    { "getFirstGeoRespectLimitedPathWithGeogebraCommonKernelMatrixCoords:", "getFirstGeoRespectLimitedPath", "Z", 0x404, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "intersectWithGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:", "intersect", "V", 0x14, NULL, NULL },
    { "intersectLineIncludedWithGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:withGeogebraCommonKernelMatrixCoordSys:withGeogebraCommonKernelGeosGeoLine:", "intersectLineIncluded", "V", 0x4, NULL, NULL },
    { "checkIsOnFirstGeoWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:", "checkIsOnFirstGeo", "V", 0x404, NULL, NULL },
    { "setPointsUndefined", NULL, "V", 0x2, NULL, NULL },
    { "initForNearToRelationship", NULL, "V", 0x11, NULL, NULL },
    { "getFirtGeo", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_serialVersionUID },
    { "firstGeo_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "c_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
    { "P_", NULL, 0x4, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
    { "D_", NULL, 0x2, "[Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", NULL, NULL,  },
    { "g2d_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "points2d_", NULL, 0x2, "[Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "p2d_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D = { 2, "AlgoIntersectConic3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 17, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D *self, GeogebraCommonKernelConstruction *cons) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersect3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setAndConsume_p2d_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setAndConsume_g2d_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setAndConsume_points2d_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoPoint_class_()]);
  for (jint i = 0; i < 2; i++) {
    IOSObjectArray_SetAndConsume(self->points2d_, i, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  }
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *firstGeo, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_set_firstGeo_(self, firstGeo);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_set_c_(self, c);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setAndConsume_P_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_class_()]);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setAndConsume_D_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_class_()]);
  for (jint i = 0; i < 2; i++) {
    IOSObjectArray_SetAndConsume(self->P_, i, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
    IOSObjectArray_SetAndConsume(self->D_, i, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons));
  }
  [self setInputOutput];
  [self compute];
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_intersectWithGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D *self, GeogebraCommonKernelKernelNDGeoConicND *c, IOSObjectArray *P) {
  GeogebraCommonKernelMatrixCoordSys *cs = [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c)) getCoordSys];
  GeogebraCommonKernelMatrixCoords *o = [self getFirstGeoStartInhomCoords];
  GeogebraCommonKernelMatrixCoords *d = [self getFirstGeoDirectionInD3];
  GeogebraCommonKernelMatrixCoords *dp = IOSObjectArray_Get(nil_chk([((GeogebraCommonKernelMatrixCoordSys *) nil_chk(cs)) getNormalProjectionWithGeogebraCommonKernelMatrixCoords:d]), 1);
  if (!GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(dp)) getZ])) {
    GeogebraCommonKernelMatrixCoords *globalCoords = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
    GeogebraCommonKernelMatrixCoords *inPlaneCoords = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(o)) projectPlaneThruVWithGeogebraCommonKernelMatrixCoordMatrix:[cs getMatrixOrthonormal] withGeogebraCommonKernelMatrixCoords:d withGeogebraCommonKernelMatrixCoords:globalCoords withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(self->p2d_)) setXWithDouble:[inPlaneCoords getX]];
    [self->p2d_ setYWithDouble:[inPlaneCoords getY]];
    [self->p2d_ setZWithDouble:[inPlaneCoords getW]];
    if ([c isOnFullConicWithGeogebraCommonKernelMatrixCoords:self->p2d_ withDouble:GeogebraCommonKernelKernel_MIN_PRECISION] && [self getFirstGeoRespectLimitedPathWithGeogebraCommonKernelMatrixCoords:globalCoords]) [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(nil_chk(P), 0))) setCoordsWithGeogebraCommonKernelMatrixCoords:globalCoords withBoolean:NO];
    else GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setPointsUndefined(self);
  }
  else {
    GeogebraCommonKernelMatrixCoords *op = IOSObjectArray_Get(nil_chk([cs getNormalProjectionWithGeogebraCommonKernelMatrixCoords:o]), 1);
    if (!GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(op)) getZ])) {
      GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setPointsUndefined(self);
    }
    else {
      [((GeogebraCommonKernelGeosGeoLine *) nil_chk(self->g2d_)) setCoordsWithDouble:[dp getY] withDouble:-[dp getX] withDouble:-[dp getY] * [op getX] + [dp getX] * [op getY]];
      [self intersectLineIncludedWithGeogebraCommonKernelKernelNDGeoConicND:c withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:P withGeogebraCommonKernelMatrixCoordSys:cs withGeogebraCommonKernelGeosGeoLine:self->g2d_];
    }
  }
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_setPointsUndefined(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D *self) {
  for (jint i = 0; i < 2; i++) [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(IOSObjectArray_Get(nil_chk(self->P_), i))) setUndefined];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D)
