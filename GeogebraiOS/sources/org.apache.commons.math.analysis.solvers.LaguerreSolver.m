//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/analysis/solvers/LaguerreSolver.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "org/apache/commons/math/ConvergenceException.h"
#include "org/apache/commons/math/ConvergingAlgorithmImpl.h"
#include "org/apache/commons/math/FunctionEvaluationException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/MaxIterationsExceededException.h"
#include "org/apache/commons/math/analysis/UnivariateRealFunction.h"
#include "org/apache/commons/math/analysis/polynomials/PolynomialFunction.h"
#include "org/apache/commons/math/analysis/solvers/LaguerreSolver.h"
#include "org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.h"
#include "org/apache/commons/math/complex/Complex.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/util/FastMath.h"

@interface OrgApacheCommonsMathAnalysisSolversLaguerreSolver () {
 @public
  OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *p_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathAnalysisSolversLaguerreSolver, p_, OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)

@implementation OrgApacheCommonsMathAnalysisSolversLaguerreSolver

- (instancetype)initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f {
  OrgApacheCommonsMathAnalysisSolversLaguerreSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(self, f);
  return self;
}

- (instancetype)init {
  OrgApacheCommonsMathAnalysisSolversLaguerreSolver_init(self);
  return self;
}

- (OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)getPolynomialFunction {
  return [new_OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_initWithDoubleArray_([((OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *) nil_chk(p_)) getCoefficients]) autorelease];
}

- (jdouble)solveWithDouble:(jdouble)min
                withDouble:(jdouble)max {
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:p_ withDouble:min withDouble:max];
}

- (jdouble)solveWithDouble:(jdouble)min
                withDouble:(jdouble)max
                withDouble:(jdouble)initial {
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:p_ withDouble:min withDouble:max withDouble:initial];
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
             withDouble:(jdouble)min
             withDouble:(jdouble)max
             withDouble:(jdouble)initial {
  [self setMaximalIterationCountWithInt:maxEval];
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:max withDouble:initial];
}

- (jdouble)solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
                                                            withDouble:(jdouble)min
                                                            withDouble:(jdouble)max
                                                            withDouble:(jdouble)initial {
  if ([((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(f)) valueWithDouble:min] == 0.0) {
    return min;
  }
  if ([f valueWithDouble:max] == 0.0) {
    return max;
  }
  if ([f valueWithDouble:initial] == 0.0) {
    return initial;
  }
  [self verifyBracketingWithDouble:min withDouble:max withOrgApacheCommonsMathAnalysisUnivariateRealFunction:f];
  [self verifySequenceWithDouble:min withDouble:initial withDouble:max];
  if ([self isBracketingWithDouble:min withDouble:initial withOrgApacheCommonsMathAnalysisUnivariateRealFunction:f]) {
    return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:initial];
  }
  else {
    return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:initial withDouble:max];
  }
}

- (jdouble)solveWithInt:(jint)maxEval
withOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
             withDouble:(jdouble)min
             withDouble:(jdouble)max {
  [self setMaximalIterationCountWithInt:maxEval];
  return [self solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:f withDouble:min withDouble:max];
}

- (jdouble)solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>)f
                                                            withDouble:(jdouble)min
                                                            withDouble:(jdouble)max {
  if (!([f isKindOfClass:[OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction class]])) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_FUNCTION_NOT_POLYNOMIAL(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
  if ([((id<OrgApacheCommonsMathAnalysisUnivariateRealFunction>) nil_chk(f)) valueWithDouble:min] == 0.0) {
    return min;
  }
  if ([f valueWithDouble:max] == 0.0) {
    return max;
  }
  [self verifyBracketingWithDouble:min withDouble:max withOrgApacheCommonsMathAnalysisUnivariateRealFunction:f];
  IOSDoubleArray *coefficients = [((OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *) check_class_cast(f, [OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction class])) getCoefficients];
  IOSObjectArray *c = [IOSObjectArray arrayWithLength:((IOSDoubleArray *) nil_chk(coefficients))->size_ type:OrgApacheCommonsMathComplexComplex_class_()];
  for (jint i = 0; i < coefficients->size_; i++) {
    IOSObjectArray_SetAndConsume(c, i, new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(IOSDoubleArray_Get(coefficients, i), 0.0));
  }
  OrgApacheCommonsMathComplexComplex *initial = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(0.5 * (min + max), 0.0) autorelease];
  OrgApacheCommonsMathComplexComplex *z = [self solveWithOrgApacheCommonsMathComplexComplexArray:c withOrgApacheCommonsMathComplexComplex:initial];
  if ([self isRootOKWithDouble:min withDouble:max withOrgApacheCommonsMathComplexComplex:z]) {
    [self setResultWithDouble:[((OrgApacheCommonsMathComplexComplex *) nil_chk(z)) getReal] withInt:iterationCount_];
    return result_;
  }
  IOSObjectArray *root = [self solveAllWithOrgApacheCommonsMathComplexComplexArray:c withOrgApacheCommonsMathComplexComplex:initial];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(root))->size_; i++) {
    if ([self isRootOKWithDouble:min withDouble:max withOrgApacheCommonsMathComplexComplex:IOSObjectArray_Get(root, i)]) {
      [self setResultWithDouble:[((OrgApacheCommonsMathComplexComplex *) nil_chk(IOSObjectArray_Get(root, i))) getReal] withInt:iterationCount_];
      return result_;
    }
  }
  @throw [new_OrgApacheCommonsMathConvergenceException_init() autorelease];
}

- (jboolean)isRootOKWithDouble:(jdouble)min
                    withDouble:(jdouble)max
withOrgApacheCommonsMathComplexComplex:(OrgApacheCommonsMathComplexComplex *)z {
  jdouble tolerance = OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(relativeAccuracy_ * [((OrgApacheCommonsMathComplexComplex *) nil_chk(z)) abs], absoluteAccuracy_);
  return ([self isSequenceWithDouble:min withDouble:[z getReal] withDouble:max]) && (OrgApacheCommonsMathUtilFastMath_absWithDouble_([z getImaginary]) <= tolerance || [z abs] <= functionValueAccuracy_);
}

- (IOSObjectArray *)solveAllWithDoubleArray:(IOSDoubleArray *)coefficients
                                 withDouble:(jdouble)initial {
  IOSObjectArray *c = [IOSObjectArray arrayWithLength:((IOSDoubleArray *) nil_chk(coefficients))->size_ type:OrgApacheCommonsMathComplexComplex_class_()];
  OrgApacheCommonsMathComplexComplex *z = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(initial, 0.0) autorelease];
  for (jint i = 0; i < c->size_; i++) {
    IOSObjectArray_SetAndConsume(c, i, new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(IOSDoubleArray_Get(coefficients, i), 0.0));
  }
  return [self solveAllWithOrgApacheCommonsMathComplexComplexArray:c withOrgApacheCommonsMathComplexComplex:z];
}

- (IOSObjectArray *)solveAllWithOrgApacheCommonsMathComplexComplexArray:(IOSObjectArray *)coefficients
                                 withOrgApacheCommonsMathComplexComplex:(OrgApacheCommonsMathComplexComplex *)initial {
  jint n = ((IOSObjectArray *) nil_chk(coefficients))->size_ - 1;
  jint iterationCount = 0;
  if (n < 1) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NON_POSITIVE_POLYNOMIAL_DEGREE(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(n) } count:1 type:NSObject_class_()]);
  }
  IOSObjectArray *c = [IOSObjectArray arrayWithLength:n + 1 type:OrgApacheCommonsMathComplexComplex_class_()];
  for (jint i = 0; i <= n; i++) {
    IOSObjectArray_Set(c, i, IOSObjectArray_Get(coefficients, i));
  }
  IOSObjectArray *root = [IOSObjectArray arrayWithLength:n type:OrgApacheCommonsMathComplexComplex_class_()];
  for (jint i = 0; i < n; i++) {
    IOSObjectArray *subarray = [IOSObjectArray arrayWithLength:n - i + 1 type:OrgApacheCommonsMathComplexComplex_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(c, 0, subarray, 0, subarray->size_);
    IOSObjectArray_Set(root, i, [self solveWithOrgApacheCommonsMathComplexComplexArray:subarray withOrgApacheCommonsMathComplexComplex:initial]);
    OrgApacheCommonsMathComplexComplex *newc = IOSObjectArray_Get(c, n - i);
    OrgApacheCommonsMathComplexComplex *oldc = nil;
    for (jint j = n - i - 1; j >= 0; j--) {
      oldc = IOSObjectArray_Get(c, j);
      IOSObjectArray_Set(c, j, newc);
      newc = [((OrgApacheCommonsMathComplexComplex *) nil_chk(oldc)) addWithId:[((OrgApacheCommonsMathComplexComplex *) nil_chk(newc)) multiplyWithId:IOSObjectArray_Get(root, i)]];
    }
    iterationCount += self->iterationCount_;
  }
  resultComputed_ = YES;
  self->iterationCount_ = iterationCount;
  return root;
}

- (OrgApacheCommonsMathComplexComplex *)solveWithOrgApacheCommonsMathComplexComplexArray:(IOSObjectArray *)coefficients
                                                  withOrgApacheCommonsMathComplexComplex:(OrgApacheCommonsMathComplexComplex *)initial {
  jint n = ((IOSObjectArray *) nil_chk(coefficients))->size_ - 1;
  if (n < 1) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_NON_POSITIVE_POLYNOMIAL_DEGREE(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(n) } count:1 type:NSObject_class_()]);
  }
  OrgApacheCommonsMathComplexComplex *N = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(n, 0.0) autorelease];
  OrgApacheCommonsMathComplexComplex *N1 = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(n - 1, 0.0) autorelease];
  jint i = 1;
  OrgApacheCommonsMathComplexComplex *pv = nil;
  OrgApacheCommonsMathComplexComplex *dv = nil;
  OrgApacheCommonsMathComplexComplex *d2v = nil;
  OrgApacheCommonsMathComplexComplex *G = nil;
  OrgApacheCommonsMathComplexComplex *G2 = nil;
  OrgApacheCommonsMathComplexComplex *H = nil;
  OrgApacheCommonsMathComplexComplex *delta = nil;
  OrgApacheCommonsMathComplexComplex *denominator = nil;
  OrgApacheCommonsMathComplexComplex *z = initial;
  OrgApacheCommonsMathComplexComplex *oldz = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(JavaLangDouble_POSITIVE_INFINITY, JavaLangDouble_POSITIVE_INFINITY) autorelease];
  while (i <= maximalIterationCount_) {
    pv = IOSObjectArray_Get(coefficients, n);
    dv = OrgApacheCommonsMathComplexComplex_get_ZERO_();
    d2v = OrgApacheCommonsMathComplexComplex_get_ZERO_();
    for (jint j = n - 1; j >= 0; j--) {
      d2v = [((OrgApacheCommonsMathComplexComplex *) nil_chk(dv)) addWithId:[((OrgApacheCommonsMathComplexComplex *) nil_chk(z)) multiplyWithId:d2v]];
      dv = [((OrgApacheCommonsMathComplexComplex *) nil_chk(pv)) addWithId:[z multiplyWithId:dv]];
      pv = [((OrgApacheCommonsMathComplexComplex *) nil_chk(IOSObjectArray_Get(coefficients, j))) addWithId:[z multiplyWithId:pv]];
    }
    d2v = [((OrgApacheCommonsMathComplexComplex *) nil_chk(d2v)) multiplyWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(2.0, 0.0) autorelease]];
    jdouble tolerance = OrgApacheCommonsMathUtilFastMath_maxWithDouble_withDouble_(relativeAccuracy_ * [((OrgApacheCommonsMathComplexComplex *) nil_chk(z)) abs], absoluteAccuracy_);
    if ([((OrgApacheCommonsMathComplexComplex *) nil_chk(([z subtractWithId:oldz]))) abs] <= tolerance) {
      resultComputed_ = YES;
      iterationCount_ = i;
      return z;
    }
    if ([((OrgApacheCommonsMathComplexComplex *) nil_chk(pv)) abs] <= functionValueAccuracy_) {
      resultComputed_ = YES;
      iterationCount_ = i;
      return z;
    }
    G = [((OrgApacheCommonsMathComplexComplex *) nil_chk(dv)) divideWithId:pv];
    G2 = [((OrgApacheCommonsMathComplexComplex *) nil_chk(G)) multiplyWithId:G];
    H = [((OrgApacheCommonsMathComplexComplex *) nil_chk(G2)) subtractWithId:[((OrgApacheCommonsMathComplexComplex *) nil_chk(d2v)) divideWithId:pv]];
    delta = [N1 multiplyWithId:[((OrgApacheCommonsMathComplexComplex *) nil_chk(([N multiplyWithId:H]))) subtractWithId:G2]];
    OrgApacheCommonsMathComplexComplex *deltaSqrt = [((OrgApacheCommonsMathComplexComplex *) nil_chk(delta)) sqrt];
    OrgApacheCommonsMathComplexComplex *dplus = [G addWithId:deltaSqrt];
    OrgApacheCommonsMathComplexComplex *dminus = [G subtractWithId:deltaSqrt];
    denominator = [((OrgApacheCommonsMathComplexComplex *) nil_chk(dplus)) abs] > [((OrgApacheCommonsMathComplexComplex *) nil_chk(dminus)) abs] ? dplus : dminus;
    if ([denominator isEqual:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(0.0, 0.0) autorelease]]) {
      z = [z addWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(absoluteAccuracy_, absoluteAccuracy_) autorelease]];
      oldz = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_(JavaLangDouble_POSITIVE_INFINITY, JavaLangDouble_POSITIVE_INFINITY) autorelease];
    }
    else {
      oldz = z;
      z = [z subtractWithId:[N divideWithId:denominator]];
    }
    i++;
  }
  @throw [new_OrgApacheCommonsMathMaxIterationsExceededException_initWithInt_(maximalIterationCount_) autorelease];
}

- (void)dealloc {
  RELEASE_(p_);
  [super dealloc];
}

+ (IOSObjectArray *)__annotations_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_init {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getPolynomialFunction {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithDouble_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withDouble_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withDouble_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveAllWithDoubleArray_withDouble_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveAllWithOrgApacheCommonsMathComplexComplexArray_withOrgApacheCommonsMathComplexComplex_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_solveWithOrgApacheCommonsMathComplexComplexArray_withOrgApacheCommonsMathComplexComplex_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_p_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:", "LaguerreSolver", NULL, 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "init", "LaguerreSolver", NULL, 0x1, NULL, NULL },
    { "getPolynomialFunction", NULL, "Lorg.apache.commons.math.analysis.polynomials.PolynomialFunction;", 0x1, NULL, NULL },
    { "solveWithDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithInt:withOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithOrgApacheCommonsMathAnalysisUnivariateRealFunction:withDouble:withDouble:", "solve", "D", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "isRootOKWithDouble:withDouble:withOrgApacheCommonsMathComplexComplex:", "isRootOK", "Z", 0x4, NULL, NULL },
    { "solveAllWithDoubleArray:withDouble:", "solveAll", "[Lorg.apache.commons.math.complex.Complex;", 0x1, "Lorg.apache.commons.math.ConvergenceException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveAllWithOrgApacheCommonsMathComplexComplexArray:withOrgApacheCommonsMathComplexComplex:", "solveAll", "[Lorg.apache.commons.math.complex.Complex;", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
    { "solveWithOrgApacheCommonsMathComplexComplexArray:withOrgApacheCommonsMathComplexComplex:", "solve", "Lorg.apache.commons.math.complex.Complex;", 0x1, "Lorg.apache.commons.math.MaxIterationsExceededException;Lorg.apache.commons.math.FunctionEvaluationException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x12, "Lorg.apache.commons.math.analysis.polynomials.PolynomialFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathAnalysisSolversLaguerreSolver = { 2, "LaguerreSolver", "org.apache.commons.math.analysis.solvers", NULL, 0x1, 13, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathAnalysisSolversLaguerreSolver;
}

@end

void OrgApacheCommonsMathAnalysisSolversLaguerreSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(OrgApacheCommonsMathAnalysisSolversLaguerreSolver *self, id<OrgApacheCommonsMathAnalysisUnivariateRealFunction> f) {
  OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_withInt_withDouble_(self, f, 100, 1E-6);
  if ([f isKindOfClass:[OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction class]]) {
    OrgApacheCommonsMathAnalysisSolversLaguerreSolver_set_p_(self, (OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *) check_class_cast(f, [OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction class]));
  }
  else {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_FUNCTION_NOT_POLYNOMIAL(), [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  }
}

OrgApacheCommonsMathAnalysisSolversLaguerreSolver *new_OrgApacheCommonsMathAnalysisSolversLaguerreSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(id<OrgApacheCommonsMathAnalysisUnivariateRealFunction> f) {
  OrgApacheCommonsMathAnalysisSolversLaguerreSolver *self = [OrgApacheCommonsMathAnalysisSolversLaguerreSolver alloc];
  OrgApacheCommonsMathAnalysisSolversLaguerreSolver_initWithOrgApacheCommonsMathAnalysisUnivariateRealFunction_(self, f);
  return self;
}

void OrgApacheCommonsMathAnalysisSolversLaguerreSolver_init(OrgApacheCommonsMathAnalysisSolversLaguerreSolver *self) {
  OrgApacheCommonsMathAnalysisSolversUnivariateRealSolverImpl_initWithInt_withDouble_(self, 100, 1E-6);
  OrgApacheCommonsMathAnalysisSolversLaguerreSolver_set_p_(self, nil);
}

OrgApacheCommonsMathAnalysisSolversLaguerreSolver *new_OrgApacheCommonsMathAnalysisSolversLaguerreSolver_init() {
  OrgApacheCommonsMathAnalysisSolversLaguerreSolver *self = [OrgApacheCommonsMathAnalysisSolversLaguerreSolver alloc];
  OrgApacheCommonsMathAnalysisSolversLaguerreSolver_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathAnalysisSolversLaguerreSolver)
