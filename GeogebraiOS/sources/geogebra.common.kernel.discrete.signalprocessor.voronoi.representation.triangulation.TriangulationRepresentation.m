//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/TriangulationRepresentation.java
//


#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/eventqueue/VSiteEvent.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/AbstractRepresentation.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/SharedEdgeRemoval.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/SharedMinimumSpanningTree.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/TriangulationRepresentation.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/VHalfEdge.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/VVertex.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/statusstructure/VLinkedNode.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"

@interface GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation () {
 @public
  jint mode_;
  jint vertexnumber_;
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *calccutoff_;
  jint length_cutoff_;
  jdouble gradient_diff_before_cluster_cutoff_;
  JavaUtilArrayList *clusters_;
  jboolean update_statistics_;
  jint max_length_;
  jint min_length_;
  jint max_length_of_smallesttriangleedge_;
  jint max_length_from_minimumspanningtree_;
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *)createOuterEdge;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation, calccutoff_, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation, clusters_, JavaUtilArrayList *)

__attribute__((unused)) static GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_createOuterEdge(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self);

jboolean GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_SHOW_INTERNAL_TRIANGLES_ = NO;
jboolean GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_SHOW_EDGE_LENGTHS_ = NO;
jboolean GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_SHOW_DEBUG_INFO_ = NO;
jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MAX_EDGES_TO_REMOVE_ = -1;
jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_REDUCE_OUTER_BOUNDARIES_ = 1;
jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_GETSTATS_EXCLUDINGMSTSTATS_ = 2;
jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_MINSPANNINGTREE_ = 3;
jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_CLUSTERS_ = 4;

@implementation GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation

- (instancetype)init {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_init(self);
  return self;
}

- (instancetype)initWithInt:(jint)length_cutoff {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithInt_(self, length_cutoff);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *)calccutoff {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_(self, calccutoff);
  return self;
}

- (jint)getMode {
  return mode_;
}

- (void)setReduceOuterBoundariesMode {
  update_statistics_ = YES;
  mode_ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_REDUCE_OUTER_BOUNDARIES_;
}

- (void)setGetStatsMode {
  update_statistics_ = YES;
  mode_ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_MINSPANNINGTREE_;
}

- (void)setGetStatsExcludingMSTStatsMode {
  update_statistics_ = YES;
  mode_ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_GETSTATS_EXCLUDINGMSTSTATS_;
}

- (void)setDetermineMinSpanningTreeMode {
  update_statistics_ = NO;
  mode_ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_MINSPANNINGTREE_;
}

- (void)setDetermineClustersMode {
  update_statistics_ = NO;
  mode_ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_CLUSTERS_;
}

- (jint)calculateLengthCutoff {
  if (calccutoff_ != nil) {
    return [calccutoff_ calculateCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:self];
  }
  return length_cutoff_;
}

- (jint)getIntegerLengthCutoff {
  if (calccutoff_ != nil) {
    @throw [new_JavaLangRuntimeException_initWithNSString_(@"CalcCutOff object registered - length_cutoff variable is ignored") autorelease];
  }
  return length_cutoff_;
}

- (void)setIntegerLengthCutoffWithInt:(jint)_length_cutoff {
  if (calccutoff_ != nil) {
    @throw [new_JavaLangRuntimeException_initWithNSString_(@"CalcCutOff object registered - length_cutoff variable is ignored") autorelease];
  }
  self->length_cutoff_ = _length_cutoff;
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *)getCalcCutOff {
  return calccutoff_;
}

- (void)setCalcCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *)_calccutoff {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_set_calccutoff_(self, _calccutoff);
  self->length_cutoff_ = -1;
}

- (jint)getMaxLength {
  if (update_statistics_) {
    return max_length_;
  }
  @throw [new_JavaLangRuntimeException_initWithNSString_(@"Calculation of statistics are currently disabled") autorelease];
}

- (jint)getMinLength {
  if (update_statistics_) {
    return min_length_;
  }
  @throw [new_JavaLangRuntimeException_initWithNSString_(@"Calculation of statistics are currently disabled") autorelease];
}

- (jint)getMaxLengthOfSmallestTriangleEdge {
  if (update_statistics_) {
    return max_length_of_smallesttriangleedge_;
  }
  @throw [new_JavaLangRuntimeException_initWithNSString_(@"Calculation of statistics are currently disabled") autorelease];
}

- (jint)getMaxLengthOfMinimumSpanningTree {
  if (update_statistics_) {
    return max_length_from_minimumspanningtree_;
  }
  @throw [new_JavaLangRuntimeException_initWithNSString_(@"Calculation of statistics are currently disabled") autorelease];
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *)createPointWithDouble:(jdouble)x
                                                                         withDouble:(jdouble)y {
  return [new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithDouble_withDouble_(x, y) autorelease];
}

- (void)beginAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_set_vertexpoints_(self, points);
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint * __strong point in nil_chk(points)) {
    GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *vertex = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) check_class_cast(point, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex class]);
    [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(vertex)) clearEdges];
  }
  if (update_statistics_) {
    max_length_ = -1;
    min_length_ = -1;
    max_length_of_smallesttriangleedge_ = -1;
    max_length_from_minimumspanningtree_ = -1;
  }
  [((JavaUtilArrayList *) nil_chk(clusters_)) clear];
  vertexnumber_ = 1;
}

- (void)siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3 {
}

- (void)circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                   withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                   withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3
                                                                                            withInt:(jint)circle_x
                                                                                            withInt:(jint)circle_y {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *v1 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) check_class_cast([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiEventqueueVSiteEvent *) nil_chk(((GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *) nil_chk(n1))->siteevent_)) getPoint], [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex class]);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *v2 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) check_class_cast([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *) nil_chk(n2))->siteevent_ getPoint], [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex class]);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *v3 = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) check_class_cast([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *) nil_chk(n3))->siteevent_ getPoint], [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex class]);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *e1, *e2, *e3;
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(v1)) addEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:e1 = [new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_(vertexnumber_, v1) autorelease]];
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(v2)) addEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:e2 = [new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_(vertexnumber_, v2) autorelease]];
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(v3)) addEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:e3 = [new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_(vertexnumber_, v3) autorelease]];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_set_next_(e1, e2);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_set_next_(e2, e3);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_set_next_(e3, e1);
  if (update_statistics_) {
    IOSIntArray *lengths = [IOSIntArray arrayWithInts:(jint[]){ [e1 getLength], [e2 getLength], [e3 getLength] } count:3];
    JavaUtilArrays_sortWithIntArray_(lengths);
    if (IOSIntArray_Get(lengths, 2) > max_length_) max_length_ = IOSIntArray_Get(lengths, 2);
    if (min_length_ < 0 || IOSIntArray_Get(lengths, 0) < min_length_) min_length_ = IOSIntArray_Get(lengths, 0);
    if (IOSIntArray_Get(lengths, 0) > max_length_of_smallesttriangleedge_) max_length_of_smallesttriangleedge_ = IOSIntArray_Get(lengths, 0);
  }
  vertexnumber_++;
}

- (void)endAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points
                                withDouble:(jdouble)lastsweeplineposition
withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)headnode {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *outeredge = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_createOuterEdge(self);
  if (outeredge != nil) {
    if (mode_ == GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_GETSTATS_EXCLUDINGMSTSTATS_) {
    }
    else if (mode_ == GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_CLUSTERS_) {
      max_length_from_minimumspanningtree_ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationSharedMinimumSpanningTree_determineMSTUsingPrimsAlgorithmWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_withDouble_withJavaUtilArrayList_(outeredge->vertex_, gradient_diff_before_cluster_cutoff_, clusters_);
    }
    else {
      max_length_from_minimumspanningtree_ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationSharedMinimumSpanningTree_determineMSTUsingPrimsAlgorithmWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_(outeredge->vertex_);
    }
    if (mode_ == GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_REDUCE_OUTER_BOUNDARIES_) {
      jint length_cutoff = [self calculateLengthCutoff];
      GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationSharedEdgeRemoval_removeEdgesInOrderFromOuterBoundaryWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_withInt_(outeredge, length_cutoff);
    }
  }
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *)createOuterEdge {
  return GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_createOuterEdge(self);
}

- (JavaUtilArrayList *)getPointsFormingOutterBoundary {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *outeredge = [self findOuterEdge];
  if (outeredge == nil || outeredge->next_ == nil) {
    return nil;
  }
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *curredge = outeredge;
  JavaUtilArrayList *pointlist = [new_JavaUtilArrayList_init() autorelease];
  do {
    [pointlist addWithId:((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(curredge))->vertex_];
  }
  while ((curredge = curredge->next_)->next_ != nil && curredge != outeredge);
  if (curredge == outeredge) {
    [pointlist addWithId:((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(curredge))->vertex_];
  }
  return pointlist;
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *)findOuterEdge {
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint * __strong point in nil_chk(vertexpoints_)) {
    GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *vertex = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) check_class_cast(point, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex class]);
    if ([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(vertex)) hasEdges] == NO) {
      continue;
    }
    for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge * __strong edge in nil_chk([vertex getEdges])) {
      if ([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge)) isOuterEdge]) {
        return edge;
      }
    }
  }
  return nil;
}

- (void)dealloc {
  RELEASE_(vertexpoints_);
  RELEASE_(calccutoff_);
  RELEASE_(clusters_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TriangulationRepresentation", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "TriangulationRepresentation", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff:", "TriangulationRepresentation", NULL, 0x1, NULL, NULL },
    { "getMode", NULL, "I", 0x1, NULL, NULL },
    { "setReduceOuterBoundariesMode", NULL, "V", 0x1, NULL, NULL },
    { "setGetStatsMode", NULL, "V", 0x1, NULL, NULL },
    { "setGetStatsExcludingMSTStatsMode", NULL, "V", 0x1, NULL, NULL },
    { "setDetermineMinSpanningTreeMode", NULL, "V", 0x1, NULL, NULL },
    { "setDetermineClustersMode", NULL, "V", 0x1, NULL, NULL },
    { "calculateLengthCutoff", NULL, "I", 0x1, NULL, NULL },
    { "getIntegerLengthCutoff", NULL, "I", 0x1, NULL, NULL },
    { "setIntegerLengthCutoffWithInt:", "setIntegerLengthCutoff", "V", 0x1, NULL, NULL },
    { "getCalcCutOff", NULL, "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation.TriangulationRepresentation$CalcCutOff;", 0x1, NULL, NULL },
    { "setCalcCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff:", "setCalcCutOff", "V", 0x1, NULL, NULL },
    { "getMaxLength", NULL, "I", 0x1, NULL, NULL },
    { "getMinLength", NULL, "I", 0x1, NULL, NULL },
    { "getMaxLengthOfSmallestTriangleEdge", NULL, "I", 0x1, NULL, NULL },
    { "getMaxLengthOfMinimumSpanningTree", NULL, "I", 0x1, NULL, NULL },
    { "createPointWithDouble:withDouble:", "createPoint", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.VPoint;", 0x1, NULL, NULL },
    { "beginAlgorithmWithJavaUtilCollection:", "beginAlgorithm", "V", 0x1, NULL, NULL },
    { "siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "siteEvent", "V", 0x1, NULL, NULL },
    { "circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withInt:withInt:", "circleEvent", "V", 0x1, NULL, NULL },
    { "endAlgorithmWithJavaUtilCollection:withDouble:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "endAlgorithm", "V", 0x1, NULL, NULL },
    { "createOuterEdge", NULL, "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation.VHalfEdge;", 0x2, NULL, NULL },
    { "getPointsFormingOutterBoundary", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "findOuterEdge", NULL, "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation.VHalfEdge;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "OUTER_VERTEXNUMBER_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_OUTER_VERTEXNUMBER },
    { "SHOW_INTERNAL_TRIANGLES_", NULL, 0x9, "Z", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_SHOW_INTERNAL_TRIANGLES_, NULL,  },
    { "SHOW_EDGE_LENGTHS_", NULL, 0x9, "Z", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_SHOW_EDGE_LENGTHS_, NULL,  },
    { "SHOW_DEBUG_INFO_", NULL, 0x9, "Z", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_SHOW_DEBUG_INFO_, NULL,  },
    { "MAX_EDGES_TO_REMOVE_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MAX_EDGES_TO_REMOVE_, NULL,  },
    { "MODE_REDUCE_OUTER_BOUNDARIES_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_REDUCE_OUTER_BOUNDARIES_, NULL,  },
    { "MODE_GETSTATS_EXCLUDINGMSTSTATS_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_GETSTATS_EXCLUDINGMSTSTATS_, NULL,  },
    { "MODE_DETERMINE_MINSPANNINGTREE_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_MINSPANNINGTREE_, NULL,  },
    { "MODE_DETERMINE_CLUSTERS_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_MODE_DETERMINE_CLUSTERS_, NULL,  },
    { "mode_", NULL, 0x2, "I", NULL, NULL,  },
    { "vertexnumber_", NULL, 0x2, "I", NULL, NULL,  },
    { "vertexpoints_", NULL, 0x1, "Ljava.util.Collection;", NULL, "Ljava/util/Collection<Lgeogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint;>;",  },
    { "calccutoff_", NULL, 0x2, "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation.TriangulationRepresentation$CalcCutOff;", NULL, NULL,  },
    { "length_cutoff_", NULL, 0x2, "I", NULL, NULL,  },
    { "gradient_diff_before_cluster_cutoff_", NULL, 0x2, "D", NULL, NULL,  },
    { "clusters_", NULL, 0x12, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/VCluster;>;",  },
    { "update_statistics_", NULL, 0x2, "Z", NULL, NULL,  },
    { "max_length_", NULL, 0x2, "I", NULL, NULL,  },
    { "min_length_", NULL, 0x2, "I", NULL, NULL,  },
    { "max_length_of_smallesttriangleedge_", NULL, 0x2, "I", NULL, NULL,  },
    { "max_length_from_minimumspanningtree_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation.TriangulationRepresentation$CalcCutOff;"};
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation = { 2, "TriangulationRepresentation", "geogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation", NULL, 0x1, 26, methods, 21, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation;
}

@end

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_init(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation_init(self);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_set_calccutoff_(self, nil);
  self->length_cutoff_ = -1;
  self->gradient_diff_before_cluster_cutoff_ = 1.2;
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_setAndConsume_clusters_(self, new_JavaUtilArrayList_init());
  self->max_length_ = -1;
  self->min_length_ = -1;
  self->max_length_of_smallesttriangleedge_ = -1;
  self->max_length_from_minimumspanningtree_ = -1;
  [self setReduceOuterBoundariesMode];
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_init() {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_init(self);
  return self;
}

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithInt_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self, jint length_cutoff) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_init(self);
  [self setIntegerLengthCutoffWithInt:length_cutoff];
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithInt_(jint length_cutoff) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithInt_(self, length_cutoff);
  return self;
}

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self, GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *calccutoff) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_init(self);
  [self setCalcCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff:calccutoff];
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *calccutoff) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_(self, calccutoff);
  return self;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_createOuterEdge(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *self) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *currvertex = nil;
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *firstvertex = nil;
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *firstedge = nil;
  {
    for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint * __strong point in nil_chk(self->vertexpoints_)) {
      GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *vertex = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) check_class_cast(point, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex class]);
      if ([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(vertex)) hasEdges] == NO) continue;
      for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge * __strong edge in nil_chk([vertex getEdges])) {
        if ([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge)) getConnectedVertex])) isConnectedToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:vertex]) {
          continue;
        }
        firstvertex = vertex;
        currvertex = [edge getConnectedVertex];
        [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(currvertex)) addEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:firstedge = [new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_OUTER_VERTEXNUMBER, currvertex) autorelease]];
        goto break_outerloop;
      }
    }
  }
  break_outerloop: ;
  if (currvertex == nil) {
    return nil;
  }
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *nextvertex;
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *prevedge = firstedge;
  do {
    nextvertex = nil;
    for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge * __strong edge in nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(currvertex)) getEdges])) {
      if ([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge)) getConnectedVertex])) isConnectedToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:currvertex]) continue;
      nextvertex = [edge getConnectedVertex];
      break;
    }
    if (nextvertex == nil) {
      @throw [new_JavaLangRuntimeException_initWithNSString_(@"Edge's in invalid state - didn't find next vertex") autorelease];
    }
    [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(nextvertex)) addEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:prevedge = [new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_initWithInt_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_withGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_OUTER_VERTEXNUMBER, nextvertex, prevedge) autorelease]];
  }
  while ((currvertex = nextvertex) != firstvertex);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge_set_next_(nil_chk(firstedge), prevedge);
  return firstedge;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation)

@implementation GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff

- (jint)calculateCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *)representation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:", "calculateCutOff", "I", 0x401, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff = { 2, "CalcCutOff", "geogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation", "TriangulationRepresentation", 0x409, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff;
}

@end

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_init(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff)
