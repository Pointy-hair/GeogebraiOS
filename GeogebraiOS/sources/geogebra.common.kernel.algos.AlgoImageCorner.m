//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoImageCorner.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoImageCorner.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoImage.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"

@interface GeogebraCommonKernelAlgosAlgoImageCorner () {
 @public
  GeogebraCommonKernelGeosGeoImage *img_;
  GeogebraCommonKernelGeosGeoPoint *corner_;
  id<GeogebraCommonKernelArithmeticNumberValue> number_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoImageCorner, img_, GeogebraCommonKernelGeosGeoImage *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoImageCorner, corner_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoImageCorner, number_, id<GeogebraCommonKernelArithmeticNumberValue>)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoImageCorner_compute(GeogebraCommonKernelAlgosAlgoImageCorner *self);

@implementation GeogebraCommonKernelAlgosAlgoImageCorner

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoImage:(GeogebraCommonKernelGeosGeoImage *)img
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)number {
  GeogebraCommonKernelAlgosAlgoImageCorner_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoImage_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, img, number);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Corner();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, img_);
  IOSObjectArray_Set(input_, 1, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(number_)) toGeoElement]);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:corner_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoPoint *)getCorner {
  return corner_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoImageCorner_compute(self);
}

- (jboolean)euclidianViewUpdate {
  [((GeogebraCommonKernelKernel *) nil_chk(kernel_)) notifyUpdateWithGeogebraCommonKernelGeosGeoElement:img_];
  GeogebraCommonKernelAlgosAlgoImageCorner_compute(self);
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(corner_)) update];
  return YES;
}

- (void)dealloc {
  RELEASE_(img_);
  RELEASE_(corner_);
  RELEASE_(number_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoImage:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoImageCorner", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCorner", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "euclidianViewUpdate", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "img_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoImage;", NULL, NULL,  },
    { "corner_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "number_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoImageCorner = { 2, "AlgoImageCorner", "geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoImageCorner;
}

@end

void GeogebraCommonKernelAlgosAlgoImageCorner_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoImage_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelAlgosAlgoImageCorner *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoImage *img, id<GeogebraCommonKernelArithmeticNumberValue> number) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoImageCorner_set_img_(self, img);
  GeogebraCommonKernelAlgosAlgoImageCorner_set_number_(self, number);
  GeogebraCommonKernelAlgosAlgoImageCorner_setAndConsume_corner_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoImageCorner_compute(self);
  [self->corner_ setLabelWithNSString:label];
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) registerEuclidianViewCEWithGeogebraCommonKernelEuclidianViewCE:self];
}

GeogebraCommonKernelAlgosAlgoImageCorner *new_GeogebraCommonKernelAlgosAlgoImageCorner_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoImage_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoImage *img, id<GeogebraCommonKernelArithmeticNumberValue> number) {
  GeogebraCommonKernelAlgosAlgoImageCorner *self = [GeogebraCommonKernelAlgosAlgoImageCorner alloc];
  GeogebraCommonKernelAlgosAlgoImageCorner_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoImage_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, img, number);
  return self;
}

void GeogebraCommonKernelAlgosAlgoImageCorner_compute(GeogebraCommonKernelAlgosAlgoImageCorner *self) {
  [((GeogebraCommonKernelGeosGeoImage *) nil_chk(self->img_)) calculateCornerPointWithGeogebraCommonKernelGeosGeoPoint:self->corner_ withInt:J2ObjCFpToInt([((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(self->number_)) getDouble])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoImageCorner)
