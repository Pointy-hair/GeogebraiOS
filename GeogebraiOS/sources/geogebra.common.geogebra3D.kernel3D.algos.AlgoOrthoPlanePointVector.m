//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlanePointVector.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlanePoint.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoPlanePointVector.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)vector {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, point, vector);
  return self;
}

- (GeogebraCommonKernelMatrixCoords *)getNormal {
  return [((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(((id<GeogebraCommonKernelKernelNDGeoVectorND>) check_protocol_cast([self getSecondInput], @protocol(GeogebraCommonKernelKernelNDGeoVectorND))))) getCoordsInD3];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoVectorND:", "AlgoOrthoPlanePointVector", NULL, 0x1, NULL, NULL },
    { "getNormal", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector = { 2, "AlgoOrthoPlanePointVector", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> point, id<GeogebraCommonKernelKernelNDGeoVectorND> vector) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, point, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(vector, [GeogebraCommonKernelGeosGeoElement class]));
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> point, id<GeogebraCommonKernelKernelNDGeoVectorND> vector) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoVectorND_(self, cons, label, point, vector);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoPlanePointVector)
