//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/move/ggtapi/models/json/JSONBoolean.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "geogebra/common/move/ggtapi/models/json/JSONBoolean.h"
#include "geogebra/common/move/ggtapi/models/json/JSONValue.h"
#include "java/lang/Boolean.h"
#include "java/lang/StringBuffer.h"

@interface GeogebraCommonMoveGgtapiModelsJsonJSONBoolean () {
 @public
  jboolean value_;
}

- (instancetype)initWithBoolean:(jboolean)value;

@end

static GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_FALSE__;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonMoveGgtapiModelsJsonJSONBoolean, FALSE__, GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *)

static GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_TRUE__;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonMoveGgtapiModelsJsonJSONBoolean, TRUE__, GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *)

__attribute__((unused)) static void GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *self, jboolean value);

__attribute__((unused)) static GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *new_GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(jboolean value) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(GeogebraCommonMoveGgtapiModelsJsonJSONBoolean)

@implementation GeogebraCommonMoveGgtapiModelsJsonJSONBoolean

+ (GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *)getInstanceWithBoolean:(jboolean)b {
  return GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_getInstanceWithBoolean_(b);
}

- (instancetype)initWithBoolean:(jboolean)value {
  GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(self, value);
  return self;
}

- (jboolean)booleanValue {
  return value_;
}

- (GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *)isBoolean {
  return self;
}

- (NSString *)description {
  return JavaLangBoolean_toStringWithBoolean_(value_);
}

- (void)appendToWithJavaLangStringBuffer:(JavaLangStringBuffer *)b {
  [((JavaLangStringBuffer *) nil_chk(b)) appendWithNSString:JavaLangBoolean_toStringWithBoolean_(value_)];
}

+ (void)initialize {
  if (self == [GeogebraCommonMoveGgtapiModelsJsonJSONBoolean class]) {
    JreStrongAssignAndConsume(&GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_FALSE__, nil, new_GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(NO));
    JreStrongAssignAndConsume(&GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_TRUE__, nil, new_GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(YES));
    J2OBJC_SET_INITIALIZED(GeogebraCommonMoveGgtapiModelsJsonJSONBoolean)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstanceWithBoolean:", "getInstance", "Lgeogebra.common.move.ggtapi.models.json.JSONBoolean;", 0x9, NULL, NULL },
    { "initWithBoolean:", "JSONBoolean", NULL, 0x2, NULL, NULL },
    { "booleanValue", NULL, "Z", 0x1, NULL, NULL },
    { "isBoolean", NULL, "Lgeogebra.common.move.ggtapi.models.json.JSONBoolean;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "appendToWithJavaLangStringBuffer:", "appendTo", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FALSE__", "FALSE", 0x1a, "Lgeogebra.common.move.ggtapi.models.json.JSONBoolean;", &GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_FALSE__, NULL,  },
    { "TRUE__", "TRUE", 0x1a, "Lgeogebra.common.move.ggtapi.models.json.JSONBoolean;", &GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_TRUE__, NULL,  },
    { "value_", NULL, 0x12, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonMoveGgtapiModelsJsonJSONBoolean = { 2, "JSONBoolean", "geogebra.common.move.ggtapi.models.json", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonMoveGgtapiModelsJsonJSONBoolean;
}

@end

GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_getInstanceWithBoolean_(jboolean b) {
  GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initialize();
  if (b) {
    return GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_TRUE__;
  }
  else {
    return GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_FALSE__;
  }
}

void GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *self, jboolean value) {
  GeogebraCommonMoveGgtapiModelsJsonJSONValue_init(self);
  self->value_ = value;
}

GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *new_GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(jboolean value) {
  GeogebraCommonMoveGgtapiModelsJsonJSONBoolean *self = [GeogebraCommonMoveGgtapiModelsJsonJSONBoolean alloc];
  GeogebraCommonMoveGgtapiModelsJsonJSONBoolean_initWithBoolean_(self, value);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonMoveGgtapiModelsJsonJSONBoolean)
