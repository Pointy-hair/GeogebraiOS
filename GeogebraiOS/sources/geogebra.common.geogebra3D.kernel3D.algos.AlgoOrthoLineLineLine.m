//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoLineLineLine.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoLineLine.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoOrthoLineLineLine.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordMatrixUtil.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine () {
 @public
  id<GeogebraCommonKernelKernelNDGeoLineND> line2_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine, line2_, id<GeogebraCommonKernelKernelNDGeoLineND>)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line1
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line2 {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, line1, line2);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_OrthogonalLine();
}

- (void)setOriginAndDirection2 {
  GeogebraCommonKernelMatrixCoords *o2 = [((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line2_)) getPointInDWithInt:3 withDouble:0])) getInhomCoordsInSameDimension];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_set_direction2_(self, [((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk([line2_ getPointInDWithInt:3 withDouble:1])) getInhomCoordsInSameDimension])) subWithGeogebraCommonKernelMatrixCoords:o2]);
  IOSObjectArray *points = GeogebraCommonKernelMatrixCoordMatrixUtil_nearestPointsFromTwoLinesWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(origin1_, direction1_, o2, direction2_);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_set_origin_(self, IOSObjectArray_Get(nil_chk(points), 0));
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"LinePerpendicularToAandB" withNSString:[((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line1_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoLineND>) nil_chk(line2_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(line2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoLineND:withGeogebraCommonKernelKernelNDGeoLineND:", "AlgoOrthoLineLineLine", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setOriginAndDirection2", NULL, "V", 0x4, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "line2_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoLineND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine = { 2, "AlgoOrthoLineLineLine", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> line1, id<GeogebraCommonKernelKernelNDGeoLineND> line2) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, line1);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine_set_line2_(self, line2);
  [self setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(line1, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(line2, [GeogebraCommonKernelGeosGeoElement class]) } count:2 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ [self getLine] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
  [self compute];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *) nil_chk([self getLine])) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> line1, id<GeogebraCommonKernelKernelNDGeoLineND> line2) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, line1, line2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoOrthoLineLineLine)
