//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/export/pstricks/TextGraphicsForIneq.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianView.h"
#include "geogebra/common/export/TextGraphics.h"
#include "geogebra/common/export/pstricks/TextGraphicsForIneq.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/FunctionalNVar.h"
#include "geogebra/common/kernel/arithmetic/Inequality.h"
#include "geogebra/common/kernel/geos/GeoElement.h"

@implementation GeogebraCommonExportPstricksTextGraphicsForIneq

- (instancetype)initWithGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)geo2
                        withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)ineq2
                            withGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)euclidianView {
  GeogebraCommonExportPstricksTextGraphicsForIneq_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticInequality_withGeogebraCommonEuclidianEuclidianView_(self, geo2, ineq2, euclidianView);
  return self;
}

- (void)dealloc {
  RELEASE_(ds_);
  RELEASE_(ineq_);
  RELEASE_(view_);
  RELEASE_(geo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelArithmeticFunctionalNVar:withGeogebraCommonKernelArithmeticInequality:withGeogebraCommonEuclidianEuclidianView:", "TextGraphicsForIneq", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ds_", NULL, 0x4, "[D", NULL, NULL,  },
    { "ineq_", NULL, 0x4, "Lgeogebra.common.kernel.arithmetic.Inequality;", NULL, NULL,  },
    { "view_", NULL, 0x4, "Lgeogebra.common.euclidian.EuclidianView;", NULL, NULL,  },
    { "geo_", NULL, 0x4, "Lgeogebra.common.kernel.arithmetic.FunctionalNVar;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonExportPstricksTextGraphicsForIneq = { 2, "TextGraphicsForIneq", "geogebra.common.export.pstricks", NULL, 0x1, 1, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonExportPstricksTextGraphicsForIneq;
}

@end

void GeogebraCommonExportPstricksTextGraphicsForIneq_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticInequality_withGeogebraCommonEuclidianEuclidianView_(GeogebraCommonExportPstricksTextGraphicsForIneq *self, id<GeogebraCommonKernelArithmeticFunctionalNVar> geo2, GeogebraCommonKernelArithmeticInequality *ineq2, GeogebraCommonEuclidianEuclidianView *euclidianView) {
  GeogebraCommonExportTextGraphics_init(self);
  GeogebraCommonExportPstricksTextGraphicsForIneq_set_geo_(self, geo2);
  GeogebraCommonExportPstricksTextGraphicsForIneq_set_ineq_(self, ineq2);
  GeogebraCommonExportPstricksTextGraphicsForIneq_set_view_(self, euclidianView);
  GeogebraCommonExportPstricksTextGraphicsForIneq_set_ds_(self, [((GeogebraCommonKernelKernel *) nil_chk([((id<GeogebraCommonKernelArithmeticFunctionalNVar>) nil_chk(self->geo_)) getKernel])) getViewBoundsForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *) check_class_cast(self->geo_, [GeogebraCommonKernelGeosGeoElement class])]);
}

GeogebraCommonExportPstricksTextGraphicsForIneq *new_GeogebraCommonExportPstricksTextGraphicsForIneq_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticInequality_withGeogebraCommonEuclidianEuclidianView_(id<GeogebraCommonKernelArithmeticFunctionalNVar> geo2, GeogebraCommonKernelArithmeticInequality *ineq2, GeogebraCommonEuclidianEuclidianView *euclidianView) {
  GeogebraCommonExportPstricksTextGraphicsForIneq *self = [GeogebraCommonExportPstricksTextGraphicsForIneq alloc];
  GeogebraCommonExportPstricksTextGraphicsForIneq_initWithGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticInequality_withGeogebraCommonEuclidianEuclidianView_(self, geo2, ineq2, euclidianView);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonExportPstricksTextGraphicsForIneq)
