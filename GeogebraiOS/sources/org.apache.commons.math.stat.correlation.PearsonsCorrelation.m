//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/commons/math/MathException.h"
#include "org/apache/commons/math/MathRuntimeException.h"
#include "org/apache/commons/math/distribution/TDistribution.h"
#include "org/apache/commons/math/distribution/TDistributionImpl.h"
#include "org/apache/commons/math/exception/DimensionMismatchException.h"
#include "org/apache/commons/math/exception/NullArgumentException.h"
#include "org/apache/commons/math/exception/util/LocalizedFormats.h"
#include "org/apache/commons/math/linear/BlockRealMatrix.h"
#include "org/apache/commons/math/linear/RealMatrix.h"
#include "org/apache/commons/math/stat/correlation/Covariance.h"
#include "org/apache/commons/math/stat/correlation/PearsonsCorrelation.h"
#include "org/apache/commons/math/stat/regression/SimpleRegression.h"
#include "org/apache/commons/math/util/FastMath.h"

@interface OrgApacheCommonsMathStatCorrelationPearsonsCorrelation () {
 @public
  id<OrgApacheCommonsMathLinearRealMatrix> correlationMatrix_;
  jint nObs_;
}

- (void)checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation, correlationMatrix_, id<OrgApacheCommonsMathLinearRealMatrix>)

__attribute__((unused)) static void OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix);

@implementation OrgApacheCommonsMathStatCorrelationPearsonsCorrelation

- (instancetype)init {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_init(self);
  return self;
}

- (instancetype)initWithDoubleArray2:(IOSObjectArray *)data {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithDoubleArray2_(self, data);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathStatCorrelationCovariance:(OrgApacheCommonsMathStatCorrelationCovariance *)covariance {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathStatCorrelationCovariance_(self, covariance);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)covarianceMatrix
                                                     withInt:(jint)numberOfObservations {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_withInt_(self, covarianceMatrix, numberOfObservations);
  return self;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getCorrelationMatrix {
  return correlationMatrix_;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getCorrelationStandardErrors {
  jint nVars = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(correlationMatrix_)) getColumnDimension];
  IOSObjectArray *out = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ nVars, nVars }];
  for (jint i = 0; i < nVars; i++) {
    for (jint j = 0; j < nVars; j++) {
      jdouble r = [correlationMatrix_ getEntryWithInt:i withInt:j];
      *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(out, i)), j) = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_((1 - r * r) / (nObs_ - 2));
    }
  }
  return [new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithDoubleArray2_(out) autorelease];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)getCorrelationPValues {
  id<OrgApacheCommonsMathDistributionTDistribution> tDistribution = [new_OrgApacheCommonsMathDistributionTDistributionImpl_initWithDouble_(nObs_ - 2) autorelease];
  jint nVars = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(correlationMatrix_)) getColumnDimension];
  IOSObjectArray *out = [IOSDoubleArray arrayWithDimensions:2 lengths:(jint[]){ nVars, nVars }];
  for (jint i = 0; i < nVars; i++) {
    for (jint j = 0; j < nVars; j++) {
      if (i == j) {
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(out, i)), j) = 0.0;
      }
      else {
        jdouble r = [correlationMatrix_ getEntryWithInt:i withInt:j];
        jdouble t = OrgApacheCommonsMathUtilFastMath_absWithDouble_(r * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_((nObs_ - 2) / (1 - r * r)));
        *IOSDoubleArray_GetRef(nil_chk(IOSObjectArray_Get(out, i)), j) = 2 * [tDistribution cumulativeProbabilityWithDouble:-t];
      }
    }
  }
  return [new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithDoubleArray2_(out) autorelease];
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)computeCorrelationMatrixWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  jint nVars = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getColumnDimension];
  id<OrgApacheCommonsMathLinearRealMatrix> outMatrix = [new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithInt_withInt_(nVars, nVars) autorelease];
  for (jint i = 0; i < nVars; i++) {
    for (jint j = 0; j < i; j++) {
      jdouble corr = [self correlationWithDoubleArray:[matrix getColumnWithInt:i] withDoubleArray:[matrix getColumnWithInt:j]];
      [outMatrix setEntryWithInt:i withInt:j withDouble:corr];
      [outMatrix setEntryWithInt:j withInt:i withDouble:corr];
    }
    [outMatrix setEntryWithInt:i withInt:i withDouble:1.0];
  }
  return outMatrix;
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)computeCorrelationMatrixWithDoubleArray2:(IOSObjectArray *)data {
  return [self computeCorrelationMatrixWithOrgApacheCommonsMathLinearRealMatrix:[new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithDoubleArray2_(data) autorelease]];
}

- (jdouble)correlationWithDoubleArray:(IOSDoubleArray *)xArray
                      withDoubleArray:(IOSDoubleArray *)yArray {
  OrgApacheCommonsMathStatRegressionSimpleRegression *regression = [new_OrgApacheCommonsMathStatRegressionSimpleRegression_init() autorelease];
  if (((IOSDoubleArray *) nil_chk(xArray))->size_ != ((IOSDoubleArray *) nil_chk(yArray))->size_) {
    @throw [new_OrgApacheCommonsMathExceptionDimensionMismatchException_initWithInt_withInt_(xArray->size_, yArray->size_) autorelease];
  }
  else if (xArray->size_ < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_DIMENSION(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(xArray->size_), JavaLangInteger_valueOfWithInt_(2) } count:2 type:NSObject_class_()]);
  }
  else {
    for (jint i = 0; i < xArray->size_; i++) {
      [regression addDataWithDouble:IOSDoubleArray_Get(xArray, i) withDouble:IOSDoubleArray_Get(yArray, i)];
    }
    return [regression getR];
  }
}

- (id<OrgApacheCommonsMathLinearRealMatrix>)covarianceToCorrelationWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)covarianceMatrix {
  jint nVars = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(covarianceMatrix)) getColumnDimension];
  id<OrgApacheCommonsMathLinearRealMatrix> outMatrix = [new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithInt_withInt_(nVars, nVars) autorelease];
  for (jint i = 0; i < nVars; i++) {
    jdouble sigma = OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_([covarianceMatrix getEntryWithInt:i withInt:i]);
    [outMatrix setEntryWithInt:i withInt:i withDouble:1.0];
    for (jint j = 0; j < i; j++) {
      jdouble entry_ = [covarianceMatrix getEntryWithInt:i withInt:j] / (sigma * OrgApacheCommonsMathUtilFastMath_sqrtWithDouble_([covarianceMatrix getEntryWithInt:j withInt:j]));
      [outMatrix setEntryWithInt:i withInt:j withDouble:entry_];
      [outMatrix setEntryWithInt:j withInt:i withDouble:entry_];
    }
  }
  return outMatrix;
}

- (void)checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix:(id<OrgApacheCommonsMathLinearRealMatrix>)matrix {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
}

- (void)dealloc {
  RELEASE_(correlationMatrix_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "PearsonsCorrelation", NULL, 0x1, NULL, NULL },
    { "initWithDoubleArray2:", "PearsonsCorrelation", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathLinearRealMatrix:", "PearsonsCorrelation", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathStatCorrelationCovariance:", "PearsonsCorrelation", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathLinearRealMatrix:withInt:", "PearsonsCorrelation", NULL, 0x1, NULL, NULL },
    { "getCorrelationMatrix", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
    { "getCorrelationStandardErrors", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
    { "getCorrelationPValues", NULL, "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, "Lorg.apache.commons.math.MathException;", NULL },
    { "computeCorrelationMatrixWithOrgApacheCommonsMathLinearRealMatrix:", "computeCorrelationMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
    { "computeCorrelationMatrixWithDoubleArray2:", "computeCorrelationMatrix", "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
    { "correlationWithDoubleArray:withDoubleArray:", "correlation", "D", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "covarianceToCorrelationWithOrgApacheCommonsMathLinearRealMatrix:", "covarianceToCorrelation", "Lorg.apache.commons.math.linear.RealMatrix;", 0x1, NULL, NULL },
    { "checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix:", "checkSufficientData", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "correlationMatrix_", NULL, 0x12, "Lorg.apache.commons.math.linear.RealMatrix;", NULL, NULL,  },
    { "nObs_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatCorrelationPearsonsCorrelation = { 2, "PearsonsCorrelation", "org.apache.commons.math.stat.correlation", NULL, 0x1, 13, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatCorrelationPearsonsCorrelation;
}

@end

void OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_init(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self) {
  NSObject_init(self);
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_set_correlationMatrix_(self, nil);
  self->nObs_ = 0;
}

OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *new_OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_init() {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self = [OrgApacheCommonsMathStatCorrelationPearsonsCorrelation alloc];
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_init(self);
  return self;
}

void OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithDoubleArray2_(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self, IOSObjectArray *data) {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_(self, [new_OrgApacheCommonsMathLinearBlockRealMatrix_initWithDoubleArray2_(data) autorelease]);
}

OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *new_OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithDoubleArray2_(IOSObjectArray *data) {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self = [OrgApacheCommonsMathStatCorrelationPearsonsCorrelation alloc];
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithDoubleArray2_(self, data);
  return self;
}

void OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  NSObject_init(self);
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  self->nObs_ = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getRowDimension];
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_set_correlationMatrix_(self, [self computeCorrelationMatrixWithOrgApacheCommonsMathLinearRealMatrix:matrix]);
}

OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *new_OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_(id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self = [OrgApacheCommonsMathStatCorrelationPearsonsCorrelation alloc];
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_(self, matrix);
  return self;
}

void OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathStatCorrelationCovariance_(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self, OrgApacheCommonsMathStatCorrelationCovariance *covariance) {
  NSObject_init(self);
  id<OrgApacheCommonsMathLinearRealMatrix> covarianceMatrix = [((OrgApacheCommonsMathStatCorrelationCovariance *) nil_chk(covariance)) getCovarianceMatrix];
  if (covarianceMatrix == nil) {
    @throw [new_OrgApacheCommonsMathExceptionNullArgumentException_initWithOrgApacheCommonsMathExceptionUtilLocalizable_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_COVARIANCE_MATRIX()) autorelease];
  }
  self->nObs_ = [covariance getN];
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_set_correlationMatrix_(self, [self covarianceToCorrelationWithOrgApacheCommonsMathLinearRealMatrix:covarianceMatrix]);
}

OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *new_OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathStatCorrelationCovariance_(OrgApacheCommonsMathStatCorrelationCovariance *covariance) {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self = [OrgApacheCommonsMathStatCorrelationPearsonsCorrelation alloc];
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathStatCorrelationCovariance_(self, covariance);
  return self;
}

void OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_withInt_(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self, id<OrgApacheCommonsMathLinearRealMatrix> covarianceMatrix, jint numberOfObservations) {
  NSObject_init(self);
  self->nObs_ = numberOfObservations;
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_set_correlationMatrix_(self, [self covarianceToCorrelationWithOrgApacheCommonsMathLinearRealMatrix:covarianceMatrix]);
}

OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *new_OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_withInt_(id<OrgApacheCommonsMathLinearRealMatrix> covarianceMatrix, jint numberOfObservations) {
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self = [OrgApacheCommonsMathStatCorrelationPearsonsCorrelation alloc];
  OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_initWithOrgApacheCommonsMathLinearRealMatrix_withInt_(self, covarianceMatrix, numberOfObservations);
  return self;
}

void OrgApacheCommonsMathStatCorrelationPearsonsCorrelation_checkSufficientDataWithOrgApacheCommonsMathLinearRealMatrix_(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation *self, id<OrgApacheCommonsMathLinearRealMatrix> matrix) {
  jint nRows = [((id<OrgApacheCommonsMathLinearRealMatrix>) nil_chk(matrix)) getRowDimension];
  jint nCols = [matrix getColumnDimension];
  if (nRows < 2 || nCols < 2) {
    @throw OrgApacheCommonsMathMathRuntimeException_createIllegalArgumentExceptionWithOrgApacheCommonsMathExceptionUtilLocalizable_withNSObjectArray_(OrgApacheCommonsMathExceptionUtilLocalizedFormatsEnum_get_INSUFFICIENT_ROWS_AND_COLUMNS(), [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(nRows), JavaLangInteger_valueOfWithInt_(nCols) } count:2 type:NSObject_class_()]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatCorrelationPearsonsCorrelation)
