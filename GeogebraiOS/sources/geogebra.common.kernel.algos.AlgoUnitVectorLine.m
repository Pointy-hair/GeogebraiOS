//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoUnitVectorLine.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoUnitVector2D.h"
#include "geogebra/common/kernel/algos/AlgoUnitVectorLine.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonKernelAlgosAlgoUnitVectorLine

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g {
  GeogebraCommonKernelAlgosAlgoUnitVectorLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, g);
  return self;
}

- (void)setXY {
  x_ = ((GeogebraCommonKernelGeosGeoLine *) nil_chk(((GeogebraCommonKernelGeosGeoLine *) check_class_cast(inputGeo_, [GeogebraCommonKernelGeosGeoLine class]))))->y_;
  y_ = -((GeogebraCommonKernelGeosGeoLine *) nil_chk(((GeogebraCommonKernelGeosGeoLine *) check_class_cast(inputGeo_, [GeogebraCommonKernelGeosGeoLine class]))))->x_;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getInputStartPoint {
  return [((GeogebraCommonKernelGeosGeoLine *) nil_chk(((GeogebraCommonKernelGeosGeoLine *) check_class_cast(inputGeo_, [GeogebraCommonKernelGeosGeoLine class])))) getStartPoint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoLineND:", "AlgoUnitVectorLine", NULL, 0x1, NULL, NULL },
    { "setXY", NULL, "V", 0x14, NULL, NULL },
    { "getInputStartPoint", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x14, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoUnitVectorLine = { 2, "AlgoUnitVectorLine", "geogebra.common.kernel.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoUnitVectorLine;
}

@end

void GeogebraCommonKernelAlgosAlgoUnitVectorLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelAlgosAlgoUnitVectorLine *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> g) {
  GeogebraCommonKernelAlgosAlgoUnitVector2D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(g, [GeogebraCommonKernelGeosGeoElement class]));
}

GeogebraCommonKernelAlgosAlgoUnitVectorLine *new_GeogebraCommonKernelAlgosAlgoUnitVectorLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> g) {
  GeogebraCommonKernelAlgosAlgoUnitVectorLine *self = [GeogebraCommonKernelAlgosAlgoUnitVectorLine alloc];
  GeogebraCommonKernelAlgosAlgoUnitVectorLine_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_(self, cons, label, g);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoUnitVectorLine)
