//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/commands/CmdDilate3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/commands/CmdDilate3D.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Manager3DInterface.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/CmdDilate.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)DilateWithNSString:(NSString *)label
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geoDil
withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)point {
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geoDil)) isGeoElement3D] || [((GeogebraCommonKernelGeosGeoElement *) nil_chk(point)) isGeoElement3D]) {
    return [((id<GeogebraCommonKernelManager3DInterface>) nil_chk([((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getManager3D])) Dilate3DWithNSString:label withGeogebraCommonKernelGeosGeoElement:geoDil withGeogebraCommonKernelArithmeticNumberValue:r withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(point, @protocol(GeogebraCommonKernelKernelNDGeoPointND))];
  }
  return [super DilateWithNSString:label withGeogebraCommonKernelGeosGeoElement:geoDil withGeogebraCommonKernelArithmeticNumberValue:r withGeogebraCommonKernelGeosGeoElement:point];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdDilate3D", NULL, 0x1, NULL, NULL },
    { "DilateWithNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelGeosGeoElement:", "Dilate", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D = { 2, "CmdDilate3D", "geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdDilate_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D *new_GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D *self = [GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D alloc];
  GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DCommandsCmdDilate3D)
