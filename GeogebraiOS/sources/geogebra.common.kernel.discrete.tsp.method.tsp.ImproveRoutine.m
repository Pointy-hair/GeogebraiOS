//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/tsp/method/tsp/ImproveRoutine.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/tsp/method/tsp/ImproveRoutine.h"
#include "geogebra/common/kernel/discrete/tsp/method/tsp/TspImprovement.h"
#include "java/lang/Error.h"
#include "java/lang/StringBuilder.h"
#include "java/util/List.h"

@implementation GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine

- (instancetype)initWithGeogebraCommonKernelDiscreteTspMethodTspTspImprovementArray:(IOSObjectArray *)algorithm {
  GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine_initWithGeogebraCommonKernelDiscreteTspMethodTspTspImprovementArray_(self, algorithm);
  return self;
}

- (jboolean)methodWithJavaUtilList:(id<JavaUtilList>)route {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->algorithm_))->size_; i++) {
    if ([((id<GeogebraCommonKernelDiscreteTspMethodTspTspImprovement>) nil_chk(IOSObjectArray_Get(self->algorithm_, i))) methodWithJavaUtilList:route]) {
      return YES;
    }
  }
  return NO;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  jboolean isFirst = YES;
  {
    IOSObjectArray *a__ = self->algorithm_;
    id<GeogebraCommonKernelDiscreteTspMethodTspTspImprovement> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<GeogebraCommonKernelDiscreteTspMethodTspTspImprovement> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<GeogebraCommonKernelDiscreteTspMethodTspTspImprovement> tsp = *b__++;
      if (isFirst) {
        isFirst = NO;
      }
      else {
        [sb appendWithNSString:@" -> "];
      }
      [sb appendWithId:tsp];
    }
  }
  return [sb description];
}

- (jboolean)methodWithIntArray:(IOSIntArray *)route
              withDoubleArray2:(IOSObjectArray *)table {
  @throw [new_JavaLangError_initWithNSString_(@"Unimplemented method") autorelease];
}

- (void)dealloc {
  RELEASE_(algorithm_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelDiscreteTspMethodTspTspImprovementArray:", "ImproveRoutine", NULL, 0x81, NULL, NULL },
    { "methodWithJavaUtilList:", "method", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "methodWithIntArray:withDoubleArray2:", "method", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "algorithm_", NULL, 0x0, "[Lgeogebra.common.kernel.discrete.tsp.method.tsp.TspImprovement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine = { 2, "ImproveRoutine", "geogebra.common.kernel.discrete.tsp.method.tsp", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine;
}

@end

void GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine_initWithGeogebraCommonKernelDiscreteTspMethodTspTspImprovementArray_(GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine *self, IOSObjectArray *algorithm) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine_set_algorithm_(self, algorithm);
}

GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine *new_GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine_initWithGeogebraCommonKernelDiscreteTspMethodTspTspImprovementArray_(IOSObjectArray *algorithm) {
  GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine *self = [GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine alloc];
  GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine_initWithGeogebraCommonKernelDiscreteTspMethodTspTspImprovementArray_(self, algorithm);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteTspMethodTspImproveRoutine)
