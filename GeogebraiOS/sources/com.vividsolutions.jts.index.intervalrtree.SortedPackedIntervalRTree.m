//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/index/intervalrtree/SortedPackedIntervalRTree.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/index/ItemVisitor.h"
#include "com/vividsolutions/jts/index/intervalrtree/IntervalRTreeBranchNode.h"
#include "com/vividsolutions/jts/index/intervalrtree/IntervalRTreeLeafNode.h"
#include "com/vividsolutions/jts/index/intervalrtree/IntervalRTreeNode.h"
#include "com/vividsolutions/jts/index/intervalrtree/SortedPackedIntervalRTree.h"
#include "com/vividsolutions/jts/io/WKTWriter.h"
#include "java/io/PrintStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree () {
 @public
  id<JavaUtilList> leaves_;
  ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *root_;
  jint level_;
}

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *)buildTree;

- (void)buildLevelWithJavaUtilList:(id<JavaUtilList>)src
                  withJavaUtilList:(id<JavaUtilList>)dest;

- (void)printNodeWithComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode:(ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *)node;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree, leaves_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree, root_, ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *)

__attribute__((unused)) static void ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init__(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self);

__attribute__((unused)) static ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildTree(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self);

__attribute__((unused)) static void ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildLevelWithJavaUtilList_withJavaUtilList_(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self, id<JavaUtilList> src, id<JavaUtilList> dest);

@implementation ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree

- (instancetype)init {
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init(self);
  return self;
}

- (void)insertWithDouble:(jdouble)min
              withDouble:(jdouble)max
                  withId:(id)item {
  if (root_ != nil) @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Index cannot be added to once it has been queried") autorelease];
  [((id<JavaUtilList>) nil_chk(leaves_)) addWithId:[new_ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeLeafNode_initWithDouble_withDouble_withId_(min, max, item) autorelease]];
}

- (void)init__ {
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init__(self);
}

- (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *)buildTree {
  return ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildTree(self);
}

- (void)buildLevelWithJavaUtilList:(id<JavaUtilList>)src
                  withJavaUtilList:(id<JavaUtilList>)dest {
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildLevelWithJavaUtilList_withJavaUtilList_(self, src, dest);
}

- (void)printNodeWithComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode:(ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *)node {
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:ComVividsolutionsJtsIoWKTWriter_toLineStringWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_([new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(((ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) nil_chk(node))->min_, level_) autorelease], [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(node->max_, level_) autorelease])];
}

- (void)queryWithDouble:(jdouble)min
             withDouble:(jdouble)max
withComVividsolutionsJtsIndexItemVisitor:(id<ComVividsolutionsJtsIndexItemVisitor>)visitor {
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init__(self);
  [((ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) nil_chk(root_)) queryWithDouble:min withDouble:max withComVividsolutionsJtsIndexItemVisitor:visitor];
}

- (void)dealloc {
  RELEASE_(leaves_);
  RELEASE_(root_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SortedPackedIntervalRTree", NULL, 0x1, NULL, NULL },
    { "insertWithDouble:withDouble:withId:", "insert", "V", 0x1, NULL, NULL },
    { "init__", "init", "V", 0x2, NULL, NULL },
    { "buildTree", NULL, "Lcom.vividsolutions.jts.index.intervalrtree.IntervalRTreeNode;", 0x2, NULL, NULL },
    { "buildLevelWithJavaUtilList:withJavaUtilList:", "buildLevel", "V", 0x2, NULL, NULL },
    { "printNodeWithComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode:", "printNode", "V", 0x2, NULL, NULL },
    { "queryWithDouble:withDouble:withComVividsolutionsJtsIndexItemVisitor:", "query", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "leaves_", NULL, 0x2, "Ljava.util.List;", NULL, NULL,  },
    { "root_", NULL, 0x2, "Lcom.vividsolutions.jts.index.intervalrtree.IntervalRTreeNode;", NULL, NULL,  },
    { "level_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree = { 2, "SortedPackedIntervalRTree", "com.vividsolutions.jts.index.intervalrtree", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree;
}

@end

void ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self) {
  NSObject_init(self);
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_setAndConsume_leaves_(self, new_JavaUtilArrayList_init());
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_set_root_(self, nil);
  self->level_ = 0;
}

ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *new_ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init() {
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self = [ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree alloc];
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init(self);
  return self;
}

void ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_init__(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self) {
  if (self->root_ != nil) return;
  ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_set_root_(self, ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildTree(self));
}

ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildTree(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self) {
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(self->leaves_, [new_ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator_init() autorelease]);
  id<JavaUtilList> src = self->leaves_;
  id<JavaUtilList> temp = nil;
  id<JavaUtilList> dest = [new_JavaUtilArrayList_init() autorelease];
  while (YES) {
    ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildLevelWithJavaUtilList_withJavaUtilList_(self, src, dest);
    if ([dest size] == 1) return (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) check_class_cast([dest getWithInt:0], [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode class]);
    temp = src;
    src = dest;
    dest = temp;
  }
}

void ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree_buildLevelWithJavaUtilList_withJavaUtilList_(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree *self, id<JavaUtilList> src, id<JavaUtilList> dest) {
  self->level_++;
  [((id<JavaUtilList>) nil_chk(dest)) clear];
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(src)) size]; i += 2) {
    ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *n1 = (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) check_class_cast([src getWithInt:i], [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode class]);
    ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *n2 = (i + 1 < [src size]) ? (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) check_class_cast([src getWithInt:i], [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode class]) : nil;
    if (n2 == nil) {
      [dest addWithId:n1];
    }
    else {
      ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *node = [new_ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeBranchNode_initWithComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_withComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_((ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) check_class_cast([src getWithInt:i], [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode class]), (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) check_class_cast([src getWithInt:i + 1], [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode class])) autorelease];
      [dest addWithId:node];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexIntervalrtreeSortedPackedIntervalRTree)
