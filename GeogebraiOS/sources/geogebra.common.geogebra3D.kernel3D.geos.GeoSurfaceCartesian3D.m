//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoSurfaceCartesian3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoSurfaceCartesian3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/Matrix/Coords3.h"
#include "geogebra/common/kernel/Matrix/CoordsDouble3.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoMacro.h"
#include "geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoSurfaceCartesianND.h"
#include "geogebra/common/kernel/kernelND/SurfaceEvaluable.h"
#include "geogebra/common/plugin/GeoClass.h"
#include "java/lang/Double.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D () {
 @public
  IOSDoubleArray *tmp_;
  GeogebraCommonKernelMatrixCoords *der1_, *der2_, *normal_;
  GeogebraCommonKernelMatrixCoordsDouble3 *p1_, *p2_;
  GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum *levelOfDetail_;
  jboolean trace_;
}

- (jboolean)setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)p
                                                              withDouble:(jdouble)u
                                                              withDouble:(jdouble)v
                                   withGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)n;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D, tmp_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D, der1_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D, der2_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D, normal_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D, p1_, GeogebraCommonKernelMatrixCoordsDouble3 *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D, p2_, GeogebraCommonKernelMatrixCoordsDouble3 *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D, levelOfDetail_, GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum *)

__attribute__((unused)) static jboolean GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3_withDouble_withDouble_withGeogebraCommonKernelMatrixCoords3_(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self, GeogebraCommonKernelMatrixCoords3 *p, jdouble u, jdouble v, GeogebraCommonKernelMatrixCoords3 *n);

@implementation GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
     withGeogebraCommonKernelArithmeticFunctionNVarArray:(IOSObjectArray *)fun {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionNVarArray_(self, c, fun);
  return self;
}

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *)curve {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_(self, curve);
  return self;
}

- (void)evaluatePointWithDouble:(jdouble)u
                     withDouble:(jdouble)v
withGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)p {
  *IOSDoubleArray_GetRef(nil_chk(tmp_), 0) = u;
  *IOSDoubleArray_GetRef(tmp_, 1) = v;
  [((GeogebraCommonKernelMatrixCoords3 *) nil_chk(p)) setWithDouble:[((GeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(IOSObjectArray_Get(nil_chk(fun_), 0))) evaluateWithDoubleArray:tmp_] withDouble:[((GeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(IOSObjectArray_Get(fun_, 1))) evaluateWithDoubleArray:tmp_] withDouble:[((GeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(IOSObjectArray_Get(fun_, 2))) evaluateWithDoubleArray:tmp_]];
}

- (jboolean)setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)p
                                                              withDouble:(jdouble)u
                                                              withDouble:(jdouble)v
                                   withGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)n {
  return GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3_withDouble_withDouble_withGeogebraCommonKernelMatrixCoords3_(self, p, u, v, n);
}

- (jboolean)evaluateNormalWithGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)p
                                                     withDouble:(jdouble)u
                                                     withDouble:(jdouble)v
                          withGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)n {
  *IOSDoubleArray_GetRef(nil_chk(tmp_), 0) = u;
  *IOSDoubleArray_GetRef(tmp_, 1) = v;
  jdouble val;
  for (jint i = 0; i < 3; i++) {
    val = [((GeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(fun1_), 0)), i))) evaluateWithDoubleArray:tmp_];
    if (JavaLangDouble_isNaNWithDouble_(val)) {
      return GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3_withDouble_withDouble_withGeogebraCommonKernelMatrixCoords3_(self, p, u, v, n);
    }
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(der1_)) setWithInt:i + 1 withDouble:val];
    val = [((GeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(fun1_, 1)), i))) evaluateWithDoubleArray:tmp_];
    if (JavaLangDouble_isNaNWithDouble_(val)) {
      return GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3_withDouble_withDouble_withGeogebraCommonKernelMatrixCoords3_(self, p, u, v, n);
    }
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(der2_)) setWithInt:i + 1 withDouble:val];
  }
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(normal_)) setCrossProductWithGeogebraCommonKernelMatrixCoords:der1_ withGeogebraCommonKernelMatrixCoords:der2_];
  [((GeogebraCommonKernelMatrixCoords3 *) nil_chk(n)) setNormalizedIfPossibleWithGeogebraCommonKernelMatrixCoords:normal_];
  return YES;
}

- (GeogebraCommonKernelGeosGeoElement *)copy__ {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_(self) autorelease];
}

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)Geo {
  return NO;
}

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *geoSurface = (GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *) check_class_cast(geo, [GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D class]);
  GeogebraCommonKernelKernelNDGeoSurfaceCartesianND_setAndConsume_fun_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelArithmeticFunctionNVar_class_()]);
  for (jint i = 0; i < 3; i++) {
    IOSObjectArray_SetAndConsume(fun_, i, new_GeogebraCommonKernelArithmeticFunctionNVar_initWithGeogebraCommonKernelArithmeticFunctionNVar_withGeogebraCommonKernelKernel_(IOSObjectArray_Get(((GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *) nil_chk(geoSurface))->fun_, i), kernel_));
  }
  GeogebraCommonKernelKernelNDGeoSurfaceCartesianND_set_fun1_(self, nil);
  GeogebraCommonKernelKernelNDGeoSurfaceCartesianND_set_startParam_(self, ((GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *) nil_chk(geoSurface))->startParam_);
  GeogebraCommonKernelKernelNDGeoSurfaceCartesianND_set_endParam_(self, geoSurface->endParam_);
  isDefined__ = geoSurface->isDefined__;
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) getConstruction] != cons_ && [self isAlgoMacroOutput]) {
    if (![geo isIndependent]) {
      GeogebraCommonKernelAlgosAlgoMacro *algoMacro = (GeogebraCommonKernelAlgosAlgoMacro *) check_class_cast([self getParentAlgorithm], [GeogebraCommonKernelAlgosAlgoMacro class]);
      for (jint i = 0; i < 3; i++) [((GeogebraCommonKernelAlgosAlgoMacro *) nil_chk(algoMacro)) initFunctionWithGeogebraCommonKernelArithmeticFunctionNVar:IOSObjectArray_Get(fun_, i)];
    }
  }
}

- (jboolean)showInAlgebraView {
  return YES;
}

- (jboolean)showInEuclidianView {
  return YES;
}

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType {
  return GeogebraCommonPluginGeoClassEnum_get_SURFACECARTESIAN3D();
}

- (GeogebraCommonKernelMatrixCoords *)getLabelPosition {
  return [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
}

- (GeogebraCommonKernelMatrixCoords *)getMainDirection {
  return GeogebraCommonKernelMatrixCoords_get_VZ_();
}

- (jboolean)isGeoElement3D {
  return YES;
}

- (jboolean)isFillable {
  return YES;
}

- (GeogebraCommonKernelMatrixCoords *)evaluatePointWithDouble:(jdouble)u
                                                   withDouble:(jdouble)v {
  GeogebraCommonKernelMatrixCoords *p = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(3) autorelease];
  *IOSDoubleArray_GetRef(nil_chk(tmp_), 0) = u;
  *IOSDoubleArray_GetRef(tmp_, 1) = v;
  for (jint i = 0; i < 3; i++) {
    [p setWithInt:i + 1 withDouble:[((GeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(IOSObjectArray_Get(nil_chk(fun_), i))) evaluateWithDoubleArray:tmp_]];
  }
  return p;
}

- (GeogebraCommonKernelMatrixCoords *)evaluateNormalWithDouble:(jdouble)u
                                                    withDouble:(jdouble)v {
  return [new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, 1, 0) autorelease];
}

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  [super getXMLtagsWithJavaLangStringBuilder:sb];
  if ([self getLevelOfDetail] == GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_QUALITY()) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\t<levelOfDetailQuality val=\"true\"/>\n"];
  }
}

- (GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum *)getLevelOfDetail {
  return levelOfDetail_;
}

- (void)setLevelOfDetailWithGeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum:(GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum *)lod {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_set_levelOfDetail_(self, lod);
}

- (jboolean)hasLevelOfDetail {
  return YES;
}

- (jboolean)isTraceable {
  return YES;
}

- (void)setTraceWithBoolean:(jboolean)trace {
  self->trace_ = trace;
}

- (jboolean)getTrace {
  return trace_;
}

- (void)setUsingCasCommandWithNSString:(NSString *)ggbCasCmd
withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f
                           withBoolean:(jboolean)symbolic
withGeogebraCommonKernelArithmeticMyArbitraryConstant:(GeogebraCommonKernelArithmeticMyArbitraryConstant *)arbconst {
}

- (NSString *)getVarStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return nil;
}

- (IOSObjectArray *)getFunctionVariables {
  return nil;
}

- (void)clearCasEvalMapWithNSString:(NSString *)string {
}

- (IOSObjectArray *)getFunctions {
  return fun_;
}

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType {
  return GeogebraCommonKernelGeosGeoElement_HitTypeEnum_get_ON_FILLING();
}

- (void)setAllVisualPropertiesExceptEuclidianVisibleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                               withBoolean:(jboolean)keepAdvanced {
  [super setAllVisualPropertiesExceptEuclidianVisibleWithGeogebraCommonKernelGeosGeoElement:geo withBoolean:keepAdvanced];
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) hasLevelOfDetail]) {
    GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_set_levelOfDetail_(self, [((id<GeogebraCommonKernelKernelNDSurfaceEvaluable>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelKernelNDSurfaceEvaluable))) getLevelOfDetail]);
  }
}

- (void)dealloc {
  RELEASE_(tmp_);
  RELEASE_(der1_);
  RELEASE_(der2_);
  RELEASE_(normal_);
  RELEASE_(p1_);
  RELEASE_(p2_);
  RELEASE_(levelOfDetail_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:", "GeoSurfaceCartesian3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelArithmeticFunctionNVarArray:", "GeoSurfaceCartesian3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D:", "GeoSurfaceCartesian3D", NULL, 0x1, NULL, NULL },
    { "evaluatePointWithDouble:withDouble:withGeogebraCommonKernelMatrixCoords3:", "evaluatePoint", "V", 0x1, NULL, NULL },
    { "setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3:withDouble:withDouble:withGeogebraCommonKernelMatrixCoords3:", "setNormalFromNeighbours", "Z", 0x2, NULL, NULL },
    { "evaluateNormalWithGeogebraCommonKernelMatrixCoords3:withDouble:withDouble:withGeogebraCommonKernelMatrixCoords3:", "evaluateNormal", "Z", 0x1, NULL, NULL },
    { "copy__", "copy", "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "isEqualWithGeogebraCommonKernelGeosGeoElement:", "isEqual", "Z", 0x1, NULL, NULL },
    { "setWithGeogebraCommonKernelGeosGeoElement:", "set", "V", 0x1, NULL, NULL },
    { "showInAlgebraView", NULL, "Z", 0x1, NULL, NULL },
    { "showInEuclidianView", NULL, "Z", 0x4, NULL, NULL },
    { "getGeoClassType", NULL, "Lgeogebra.common.plugin.GeoClass;", 0x1, NULL, NULL },
    { "getLabelPosition", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getMainDirection", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "isGeoElement3D", NULL, "Z", 0x1, NULL, NULL },
    { "isFillable", NULL, "Z", 0x1, NULL, NULL },
    { "evaluatePointWithDouble:withDouble:", "evaluatePoint", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "evaluateNormalWithDouble:withDouble:", "evaluateNormal", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getXMLtagsWithJavaLangStringBuilder:", "getXMLtags", "V", 0x4, NULL, NULL },
    { "getLevelOfDetail", NULL, "Lgeogebra.common.kernel.kernelND.SurfaceEvaluable$LevelOfDetail;", 0x1, NULL, NULL },
    { "setLevelOfDetailWithGeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum:", "setLevelOfDetail", "V", 0x1, NULL, NULL },
    { "hasLevelOfDetail", NULL, "Z", 0x1, NULL, NULL },
    { "isTraceable", NULL, "Z", 0x1, NULL, NULL },
    { "setTraceWithBoolean:", "setTrace", "V", 0x1, NULL, NULL },
    { "getTrace", NULL, "Z", 0x1, NULL, NULL },
    { "setUsingCasCommandWithNSString:withGeogebraCommonKernelGeosCasEvaluableFunction:withBoolean:withGeogebraCommonKernelArithmeticMyArbitraryConstant:", "setUsingCasCommand", "V", 0x1, NULL, NULL },
    { "getVarStringWithGeogebraCommonKernelStringTemplate:", "getVarString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFunctionVariables", NULL, "[Lgeogebra.common.kernel.arithmetic.FunctionVariable;", 0x1, NULL, NULL },
    { "clearCasEvalMapWithNSString:", "clearCasEvalMap", "V", 0x1, NULL, NULL },
    { "getFunctions", NULL, "[Lgeogebra.common.kernel.arithmetic.FunctionNVar;", 0x1, NULL, NULL },
    { "getLastHitType", NULL, "Lgeogebra.common.kernel.geos.GeoElement$HitType;", 0x11, NULL, NULL },
    { "setAllVisualPropertiesExceptEuclidianVisibleWithGeogebraCommonKernelGeosGeoElement:withBoolean:", "setAllVisualPropertiesExceptEuclidianVisible", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "tmp_", NULL, 0x2, "[D", NULL, NULL,  },
    { "der1_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "der2_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "normal_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "p1_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.CoordsDouble3;", NULL, NULL,  },
    { "p2_", NULL, 0x2, "Lgeogebra.common.kernel.Matrix.CoordsDouble3;", NULL, NULL,  },
    { "levelOfDetail_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.SurfaceEvaluable$LevelOfDetail;", NULL, NULL,  },
    { "trace_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D = { 2, "GeoSurfaceCartesian3D", "geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x1, 32, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self, GeogebraCommonKernelConstruction *c) {
  GeogebraCommonKernelKernelNDGeoSurfaceCartesianND_initWithGeogebraCommonKernelConstruction_(self, c);
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_tmp_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_der1_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_der2_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_normal_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_p1_(self, new_GeogebraCommonKernelMatrixCoordsDouble3_init());
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_p2_(self, new_GeogebraCommonKernelMatrixCoordsDouble3_init());
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_set_levelOfDetail_(self, GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_SPEED());
}

GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self = [GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D alloc];
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_(self, c);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionNVarArray_(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self, GeogebraCommonKernelConstruction *c, IOSObjectArray *fun) {
  GeogebraCommonKernelKernelNDGeoSurfaceCartesianND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionNVarArray_(self, c, fun);
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_tmp_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_der1_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_der2_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_normal_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_p1_(self, new_GeogebraCommonKernelMatrixCoordsDouble3_init());
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_p2_(self, new_GeogebraCommonKernelMatrixCoordsDouble3_init());
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_set_levelOfDetail_(self, GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_SPEED());
}

GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionNVarArray_(GeogebraCommonKernelConstruction *c, IOSObjectArray *fun) {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self = [GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D alloc];
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionNVarArray_(self, c, fun);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self, GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *curve) {
  GeogebraCommonKernelKernelNDGeoSurfaceCartesianND_initWithGeogebraCommonKernelConstruction_(self, ((GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *) nil_chk(curve))->cons_);
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_tmp_(self, [IOSDoubleArray newArrayWithLength:2]);
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_der1_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_der2_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_normal_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(3));
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_p1_(self, new_GeogebraCommonKernelMatrixCoordsDouble3_init());
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setAndConsume_p2_(self, new_GeogebraCommonKernelMatrixCoordsDouble3_init());
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_set_levelOfDetail_(self, GeogebraCommonKernelKernelNDSurfaceEvaluable_LevelOfDetailEnum_get_SPEED());
  [self setWithGeogebraCommonKernelGeosGeoElement:curve];
}

GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *curve) {
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self = [GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D alloc];
  GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_(self, curve);
  return self;
}

jboolean GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D_setNormalFromNeighboursWithGeogebraCommonKernelMatrixCoords3_withDouble_withDouble_withGeogebraCommonKernelMatrixCoords3_(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D *self, GeogebraCommonKernelMatrixCoords3 *p, jdouble u, jdouble v, GeogebraCommonKernelMatrixCoords3 *n) {
  [self evaluatePointWithDouble:u + GeogebraCommonKernelKernelNDSurfaceEvaluable_NUMERICAL_DELTA withDouble:v withGeogebraCommonKernelMatrixCoords3:self->p1_];
  if (![((GeogebraCommonKernelMatrixCoordsDouble3 *) nil_chk(self->p1_)) isDefined]) {
    return NO;
  }
  [self evaluatePointWithDouble:u withDouble:v + GeogebraCommonKernelKernelNDSurfaceEvaluable_NUMERICAL_DELTA withGeogebraCommonKernelMatrixCoords3:self->p2_];
  if (![((GeogebraCommonKernelMatrixCoordsDouble3 *) nil_chk(self->p2_)) isDefined]) {
    return NO;
  }
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(self->der1_)) setXWithDouble:self->p1_->x_ - [((GeogebraCommonKernelMatrixCoords3 *) nil_chk(p)) getXd]];
  [self->der1_ setYWithDouble:self->p1_->y_ - [p getYd]];
  [self->der1_ setZWithDouble:self->p1_->z_ - [p getZd]];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(self->der2_)) setXWithDouble:self->p2_->x_ - [p getXd]];
  [self->der2_ setYWithDouble:self->p2_->y_ - [p getYd]];
  [self->der2_ setZWithDouble:self->p2_->z_ - [p getZd]];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(self->normal_)) setCrossProductWithGeogebraCommonKernelMatrixCoords:self->der1_ withGeogebraCommonKernelMatrixCoords:self->der2_];
  [((GeogebraCommonKernelMatrixCoords3 *) nil_chk(n)) setNormalizedIfPossibleWithGeogebraCommonKernelMatrixCoords:self->normal_];
  return YES;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DGeosGeoSurfaceCartesian3D)
