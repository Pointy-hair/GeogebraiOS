//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/TransformDilate.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Transform.h"
#include "geogebra/common/kernel/TransformDilate.h"
#include "geogebra/common/kernel/algos/AlgoDilate.h"
#include "geogebra/common/kernel/algos/AlgoTransformation.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonKernelTransformDilate

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)ratio {
  GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, ratio);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)ratio
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)center {
  GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, ratio, center);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoTransformation *)getTransformAlgoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  GeogebraCommonKernelAlgosAlgoDilate *algo = [new_GeogebraCommonKernelAlgosAlgoDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(cons_, geo, ratio_, center_) autorelease];
  return algo;
}

- (void)dealloc {
  RELEASE_(ratio_);
  RELEASE_(center_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelArithmeticNumberValue:", "TransformDilate", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelKernelNDGeoPointND:", "TransformDilate", NULL, 0x1, NULL, NULL },
    { "getTransformAlgoWithGeogebraCommonKernelGeosGeoElement:", "getTransformAlgo", "Lgeogebra.common.kernel.algos.AlgoTransformation;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ratio_", NULL, 0x4, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "center_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelTransformDilate = { 2, "TransformDilate", "geogebra.common.kernel", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelTransformDilate;
}

@end

void GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelTransformDilate *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelArithmeticNumberValue> ratio) {
  GeogebraCommonKernelTransform_init(self);
  GeogebraCommonKernelTransformDilate_set_ratio_(self, ratio);
  GeogebraCommonKernelTransform_set_cons_(self, cons);
}

GeogebraCommonKernelTransformDilate *new_GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelArithmeticNumberValue> ratio) {
  GeogebraCommonKernelTransformDilate *self = [GeogebraCommonKernelTransformDilate alloc];
  GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, ratio);
  return self;
}

void GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelTransformDilate *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelArithmeticNumberValue> ratio, id<GeogebraCommonKernelKernelNDGeoPointND> center) {
  GeogebraCommonKernelTransform_init(self);
  GeogebraCommonKernelTransformDilate_set_ratio_(self, ratio);
  GeogebraCommonKernelTransformDilate_set_center_(self, center);
  GeogebraCommonKernelTransform_set_cons_(self, cons);
}

GeogebraCommonKernelTransformDilate *new_GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelArithmeticNumberValue> ratio, id<GeogebraCommonKernelKernelNDGeoPointND> center) {
  GeogebraCommonKernelTransformDilate *self = [GeogebraCommonKernelTransformDilate alloc];
  GeogebraCommonKernelTransformDilate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, ratio, center);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelTransformDilate)
