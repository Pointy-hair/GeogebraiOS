//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CmdBinomial.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoBinomial.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/CmdBinomial.h"
#include "geogebra/common/kernel/commands/CmdTwoNumFunction.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"

@implementation GeogebraCommonKernelCommandsCmdBinomial

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelCommandsCmdBinomial_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (GeogebraCommonKernelGeosGeoElement *)doCommandWithNSString:(NSString *)a
                withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
                withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)c {
  GeogebraCommonKernelAlgosAlgoBinomial *algo = [new_GeogebraCommonKernelAlgosAlgoBinomial_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_(cons_, a, b, c) autorelease];
  return [algo getResult];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdBinomial", NULL, 0x1, NULL, NULL },
    { "doCommandWithNSString:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelArithmeticNumberValue:", "doCommand", "Lgeogebra.common.kernel.geos.GeoElement;", 0x14, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCmdBinomial = { 2, "CmdBinomial", "geogebra.common.kernel.commands", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCmdBinomial;
}

@end

void GeogebraCommonKernelCommandsCmdBinomial_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelCommandsCmdBinomial *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdTwoNumFunction_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelCommandsCmdBinomial *new_GeogebraCommonKernelCommandsCmdBinomial_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdBinomial *self = [GeogebraCommonKernelCommandsCmdBinomial alloc];
  GeogebraCommonKernelCommandsCmdBinomial_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCmdBinomial)
