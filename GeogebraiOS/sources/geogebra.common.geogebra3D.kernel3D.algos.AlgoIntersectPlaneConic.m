//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectPlaneConic.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectConic3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectPlaneConic.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix4x4.h"
#include "geogebra/common/kernel/Matrix/CoordMatrixUtil.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoCoordSys2D.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic () {
 @public
  IOSObjectArray *intersection_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic, intersection_, IOSObjectArray *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c
           withGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, cons, labels, c, plane);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
           withGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, plane, c);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
           withGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, plane, c);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

- (void)compute {
  [self intersectWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>) check_protocol_cast([self getFirtGeo], @protocol(GeogebraCommonKernelKernelNDGeoCoordSys2D)) withGeogebraCommonKernelKernelNDGeoConicND:c_ withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:P_];
}

- (void)intersectWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane
                    withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c
       withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:(IOSObjectArray *)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_set_intersection_(self, GeogebraCommonKernelMatrixCoordMatrixUtil_intersectPlanesWithGeogebraCommonKernelMatrixCoordMatrix_withGeogebraCommonKernelMatrixCoordMatrix_([((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(plane)) getCoordSys])) getMatrixOrthonormal], [((GeogebraCommonKernelMatrixCoordSys *) nil_chk([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(c)) getCoordSys])) getMatrixOrthonormal]));
  [super intersectWithGeogebraCommonKernelKernelNDGeoConicND:c withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:P];
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Intersect();
}

- (GeogebraCommonKernelMatrixCoords *)getFirstGeoStartInhomCoords {
  return IOSObjectArray_Get(nil_chk(intersection_), 0);
}

- (GeogebraCommonKernelMatrixCoords *)getFirstGeoDirectionInD3 {
  return IOSObjectArray_Get(nil_chk(intersection_), 1);
}

- (jboolean)getFirstGeoRespectLimitedPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p {
  return YES;
}

- (void)checkIsOnFirstGeoWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)p {
}

- (void)dealloc {
  RELEASE_(intersection_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonKernelKernelNDGeoCoordSys2D:", "AlgoIntersectPlaneConic", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoCoordSys2D:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoIntersectPlaneConic", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoCoordSys2D:withGeogebraCommonKernelKernelNDGeoConicND:", "AlgoIntersectPlaneConic", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:", "AlgoIntersectPlaneConic", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "intersectWithGeogebraCommonKernelKernelNDGeoCoordSys2D:withGeogebraCommonKernelKernelNDGeoConicND:withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3DArray:", "intersect", "V", 0x11, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getFirstGeoStartInhomCoords", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
    { "getFirstGeoDirectionInD3", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x4, NULL, NULL },
    { "getFirstGeoRespectLimitedPathWithGeogebraCommonKernelMatrixCoords:", "getFirstGeoRespectLimitedPath", "Z", 0x4, NULL, NULL },
    { "checkIsOnFirstGeoWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:", "checkIsOnFirstGeo", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "intersection_", NULL, 0x2, "[Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic = { 2, "AlgoIntersectPlaneConic", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 11, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, plane, c);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelKernelNDGeoConicND *c, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(self, cons, labels, c, plane);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, plane, c);
  GeogebraCommonKernelGeosGeoElement_setLabelsWithNSStringArray_withGeogebraCommonKernelGeosGeoElementArray_(labels, self->P_);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, labels, plane, c);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(plane, [GeogebraCommonKernelGeosGeoElement class]), c);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane, GeogebraCommonKernelKernelNDGeoConicND *c) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoConicND_(self, cons, plane, c);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self, GeogebraCommonKernelConstruction *cons) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectConic3D_initWithGeogebraCommonKernelConstruction_(self, cons);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *cons) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic_initWithGeogebraCommonKernelConstruction_(self, cons);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlaneConic)
