//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/Geo3DVec.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/Geo3DVec.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/MyDouble.h"
#include "geogebra/common/kernel/arithmetic/MyList.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "geogebra/common/kernel/arithmetic/VectorNDValue.h"
#include "geogebra/common/kernel/geos/GeoVec2D.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/kernel/kernelND/Geo3DVec.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVecInterface.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/HashSet.h"
#include "org/apache/commons/math/complex/Complex.h"

@interface GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec () {
 @public
  jint mode_;
  GeogebraCommonKernelKernel *kernel_;
  JavaLangStringBuilder *sbToString_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec, kernel_, GeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec, sbToString_, JavaLangStringBuilder *)

__attribute__((unused)) static jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self);

__attribute__((unused)) static NSString *GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonKernelStringTemplate *tpl);

__attribute__((unused)) static NSString *GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonKernelStringTemplate *tpl);

@implementation GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                        withDouble:(jdouble)x
                                        withDouble:(jdouble)y
                                        withDouble:(jdouble)z {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(self, kernel, x, y, z);
  return self;
}

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)v {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(self, v);
  return self;
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1 {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(self) autorelease];
}

- (void)resolveVariables {
}

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)p
withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)q {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(self, kernel, p, q);
  return self;
}

- (void)setXWithDouble:(jdouble)x {
  self->x_ = x;
}

- (void)setYWithDouble:(jdouble)y {
  self->y_ = y;
}

- (void)setZWithDouble:(jdouble)z {
  self->z_ = z;
}

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z {
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

- (void)setCoordsWithDoubleArray:(IOSDoubleArray *)a {
  x_ = IOSDoubleArray_Get(nil_chk(a), 0);
  y_ = IOSDoubleArray_Get(a, 1);
  z_ = IOSDoubleArray_Get(a, 2);
}

- (void)setCoordsWithGeogebraCommonKernelGeosGeoVec3D:(GeogebraCommonKernelGeosGeoVec3D *)v {
  x_ = ((GeogebraCommonKernelGeosGeoVec3D *) nil_chk(v))->x_;
  y_ = v->y_;
  z_ = v->z_;
}

- (jdouble)getX {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(self);
}

- (jdouble)getY {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(self);
}

- (jdouble)getZ {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(self);
}

- (IOSDoubleArray *)getCoords {
  IOSDoubleArray *res = [IOSDoubleArray arrayWithDoubles:(jdouble[]){ x_, y_, z_ } count:3];
  return res;
}

- (jdouble)length {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(self);
}

+ (jdouble)lengthWithDoubleArray:(IOSDoubleArray *)a {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDoubleArray_(a);
}

+ (jdouble)lengthWithDouble:(jdouble)a
                 withDouble:(jdouble)b
                 withDouble:(jdouble)c {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(a, b, c);
}

- (void)makeUnitVector {
  jdouble len = GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(self);
  x_ = x_ / len;
  y_ = y_ / len;
}

- (jboolean)equalsWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v {
  return GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x_, [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(v)) getX]) && GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(y_, [v getY]);
}

+ (void)addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
           withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
           withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                       withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
           withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)addWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)a
                     withGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)b
                    withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
           withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
           withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                       withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)b
           withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)subWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)a
withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)b
withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)multWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                                                  withDouble:(jdouble)b
            withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

+ (void)innerWithGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)a
             withGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)b
                  withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_innerWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelArithmeticMyDouble_(a, b, c);
}

+ (void)complexMultiplyWithGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)a
                       withGeogebraCommonKernelKernelNDGeoVecInterface:(id<GeogebraCommonKernelKernelNDGeoVecInterface>)b
                                  withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_complexMultiplyWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelGeosGeoVec2D_(a, b, c);
}

+ (void)divWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)a
                                                 withDouble:(jdouble)b
           withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_divWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(a, b, c);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)getVector {
  return self;
}

- (jboolean)isConstant {
  return YES;
}

- (jboolean)isLeaf {
  return YES;
}

- (JavaUtilHashSet *)getVariables {
  return nil;
}

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (jboolean)isNumberValue {
  return NO;
}

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev {
  return ev == self;
}

- (jboolean)evaluatesTo3DVector {
  return YES;
}

- (IOSDoubleArray *)getPointAsDouble {
  return [IOSDoubleArray arrayWithDoubles:(jdouble[]){ GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(self), GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(self), GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(self) } count:3];
}

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (GeogebraCommonKernelKernel *)getKernel {
  return kernel_;
}

- (jboolean)isEqualWithGeogebraCommonKernelKernelNDGeo3DVec:(id<GeogebraCommonKernelKernelNDGeo3DVec>)vec {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *v = (GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) check_class_cast(vec, [GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec class]);
  return GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(x_, ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(v))->x_) && GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(y_, v->y_) && GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(z_, v->z_);
}

- (void)multiplyMatrix3x3WithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list
                  withGeogebraCommonKernelArithmeticVectorNDValue:(id<GeogebraCommonKernelArithmeticVectorNDValue>)rt {
  jdouble a, b, c, d, e, f, g, h, i, xx, yy, zz;
  id<GeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<GeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
  xx = [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
  yy = [v getY];
  zz = [v getZ];
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 0))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  e = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  f = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 1))) evaluateDouble];
  g = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 2))) evaluateDouble];
  h = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 2))) evaluateDouble];
  i = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 2))) evaluateDouble];
  x_ = a * xx + b * yy + c * zz;
  y_ = d * xx + e * yy + f * zz;
  z_ = g * xx + h * yy + i * zz;
  return;
}

- (void)multiplyMatrix4x4WithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list
                  withGeogebraCommonKernelArithmeticVectorNDValue:(id<GeogebraCommonKernelArithmeticVectorNDValue>)rt {
  jdouble m, n, o, p, xx, yy, zz, ww;
  jboolean vector = NO;
  if ([GeogebraCommonKernelKernelNDGeoPointND_class_() isInstance:rt]) {
    id<GeogebraCommonKernelKernelNDGeoPointND> point = (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(rt, @protocol(GeogebraCommonKernelKernelNDGeoPointND));
    GeogebraCommonKernelMatrixCoords *coords = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getCoordsInD3];
    xx = [((GeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX];
    yy = [coords getY];
    zz = [coords getZ];
    ww = [coords getW];
  }
  else {
    id<GeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<GeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
    xx = [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
    yy = [v getY];
    zz = [v getZ];
    ww = 0;
    vector = YES;
  }
  m = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 3))) evaluateDouble];
  n = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 3))) evaluateDouble];
  o = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 3))) evaluateDouble];
  p = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 3))) evaluateDouble];
  jdouble w = m * xx + n * yy + o * zz + p * ww;
  if (vector && !GeogebraCommonKernelKernel_isZeroWithDouble_(w)) {
    x_ = JavaLangDouble_NaN;
    y_ = JavaLangDouble_NaN;
    z_ = JavaLangDouble_NaN;
    return;
  }
  jdouble a, b, c, d, e, f, g, h, i, j, k, l;
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 0))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 0))) evaluateDouble];
  e = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  f = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  g = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 1))) evaluateDouble];
  h = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 1))) evaluateDouble];
  i = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 2))) evaluateDouble];
  j = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 2))) evaluateDouble];
  k = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 2))) evaluateDouble];
  l = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 3, 2))) evaluateDouble];
  x_ = a * xx + b * yy + c * zz + d * ww;
  y_ = e * xx + f * yy + g * zz + h * ww;
  z_ = i * xx + j * yy + k * zz + l * ww;
  if (!vector) {
    x_ = x_ / w;
    y_ = y_ / w;
    z_ = z_ / w;
  }
}

- (void)multiplyMatrix3x2WithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list
                  withGeogebraCommonKernelArithmeticVectorNDValue:(id<GeogebraCommonKernelArithmeticVectorNDValue>)rt {
  jdouble a, b, d, e, g, h, xx, yy;
  id<GeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<GeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
  xx = [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
  yy = [v getY];
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  e = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  g = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 2))) evaluateDouble];
  h = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 2))) evaluateDouble];
  x_ = a * xx + b * yy;
  y_ = d * xx + e * yy;
  z_ = g * xx + h * yy;
  return;
}

+ (void)multiplyMatrixWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list
               withGeogebraCommonKernelArithmeticVectorNDValue:(id<GeogebraCommonKernelArithmeticVectorNDValue>)rt
                          withGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)ret {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multiplyMatrixWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticVectorNDValue_withGeogebraCommonKernelGeosGeoVec2D_(list, rt, ret);
}

- (jint)getMode {
  return self->mode_;
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)round {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(kernel_, JavaLangMath_roundWithDouble_(x_), JavaLangMath_roundWithDouble_(y_), JavaLangMath_roundWithDouble_(z_)) autorelease];
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)floor {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(kernel_, JavaLangMath_floorWithDouble_(x_), JavaLangMath_floorWithDouble_(y_), JavaLangMath_floorWithDouble_(z_)) autorelease];
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)ceil {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(kernel_, JavaLangMath_ceilWithDouble_(x_), JavaLangMath_ceilWithDouble_(y_), JavaLangMath_ceilWithDouble_(z_)) autorelease];
}

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap {
  return [new_GeogebraCommonKernelArithmeticExpressionNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_(kernel_, self) autorelease];
}

- (void)dealloc {
  RELEASE_(kernel_);
  RELEASE_(sbToString_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelKernel:withDouble:withDouble:withDouble:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "deepCopyWithGeogebraCommonKernelKernel:", "deepCopy", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "resolveVariables", NULL, "V", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelKernel:withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:", "Geo3DVec", NULL, 0x1, NULL, NULL },
    { "setXWithDouble:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithDouble:", "setY", "V", 0x1, NULL, NULL },
    { "setZWithDouble:", "setZ", "V", 0x1, NULL, NULL },
    { "setCoordsWithDouble:withDouble:withDouble:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithDoubleArray:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithGeogebraCommonKernelGeosGeoVec3D:", "setCoords", "V", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x11, NULL, NULL },
    { "getY", NULL, "D", 0x11, NULL, NULL },
    { "getZ", NULL, "D", 0x11, NULL, NULL },
    { "getCoords", NULL, "[D", 0x11, NULL, NULL },
    { "length", NULL, "D", 0x11, NULL, NULL },
    { "lengthWithDoubleArray:", "length", "D", 0x19, NULL, NULL },
    { "lengthWithDouble:withDouble:withDouble:", "length", "D", 0x19, NULL, NULL },
    { "makeUnitVector", NULL, "V", 0x11, NULL, NULL },
    { "equalsWithGeogebraCommonKernelGeosGeoVec2D:", "equals", "Z", 0x11, NULL, NULL },
    { "addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "add", "V", 0x19, NULL, NULL },
    { "addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "add", "V", 0x19, NULL, NULL },
    { "addWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "add", "V", 0x19, NULL, NULL },
    { "vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "vectorProduct", "V", 0x19, NULL, NULL },
    { "subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "sub", "V", 0x19, NULL, NULL },
    { "subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "sub", "V", 0x19, NULL, NULL },
    { "subWithGeogebraCommonKernelGeosGeoVec2D:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "sub", "V", 0x19, NULL, NULL },
    { "multWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withDouble:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "mult", "V", 0x19, NULL, NULL },
    { "innerWithGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelArithmeticMyDouble:", "inner", "V", 0x19, NULL, NULL },
    { "complexMultiplyWithGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelKernelNDGeoVecInterface:withGeogebraCommonKernelGeosGeoVec2D:", "complexMultiply", "V", 0x19, NULL, NULL },
    { "divWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:withDouble:withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec:", "div", "V", 0x19, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getVector", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x11, NULL, NULL },
    { "isConstant", NULL, "Z", 0x11, NULL, NULL },
    { "isLeaf", NULL, "Z", 0x11, NULL, NULL },
    { "getVariables", NULL, "Ljava.util.HashSet;", 0x11, NULL, NULL },
    { "toValueStringWithGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "toLaTeXStringWithBoolean:withGeogebraCommonKernelStringTemplate:", "toLaTeXString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isNumberValue", NULL, "Z", 0x11, NULL, NULL },
    { "containsWithGeogebraCommonKernelArithmeticExpressionValue:", "contains", "Z", 0x11, NULL, NULL },
    { "evaluatesTo3DVector", NULL, "Z", 0x1, NULL, NULL },
    { "getPointAsDouble", NULL, "[D", 0x1, NULL, NULL },
    { "toOutputValueStringWithGeogebraCommonKernelStringTemplate:", "toOutputValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getKernel", NULL, "Lgeogebra.common.kernel.Kernel;", 0x1, NULL, NULL },
    { "isEqualWithGeogebraCommonKernelKernelNDGeo3DVec:", "isEqual", "Z", 0x1, NULL, NULL },
    { "multiplyMatrix3x3WithGeogebraCommonKernelArithmeticMyList:withGeogebraCommonKernelArithmeticVectorNDValue:", "multiplyMatrix3x3", "V", 0x1, NULL, NULL },
    { "multiplyMatrix4x4WithGeogebraCommonKernelArithmeticMyList:withGeogebraCommonKernelArithmeticVectorNDValue:", "multiplyMatrix4x4", "V", 0x1, NULL, NULL },
    { "multiplyMatrix3x2WithGeogebraCommonKernelArithmeticMyList:withGeogebraCommonKernelArithmeticVectorNDValue:", "multiplyMatrix3x2", "V", 0x1, NULL, NULL },
    { "multiplyMatrixWithGeogebraCommonKernelArithmeticMyList:withGeogebraCommonKernelArithmeticVectorNDValue:withGeogebraCommonKernelGeosGeoVec2D:", "multiplyMatrix", "V", 0x9, NULL, NULL },
    { "getMode", NULL, "I", 0x1, NULL, NULL },
    { "round", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "floor", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "ceil", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.Geo3DVec;", 0x1, NULL, NULL },
    { "wrap", NULL, "Lgeogebra.common.kernel.arithmetic.ExpressionNode;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "D", NULL, NULL,  },
    { "y_", NULL, 0x1, "D", NULL, NULL,  },
    { "z_", NULL, 0x1, "D", NULL, NULL,  },
    { "mode_", NULL, 0x2, "I", NULL, NULL,  },
    { "kernel_", NULL, 0x2, "Lgeogebra.common.kernel.Kernel;", NULL, NULL,  },
    { "sbToString_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec = { 2, "Geo3DVec", "geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x11, 55, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec;
}

@end

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelArithmeticValidExpression_init(self);
  self->x_ = JavaLangDouble_NaN;
  self->y_ = JavaLangDouble_NaN;
  self->z_ = JavaLangDouble_NaN;
  self->mode_ = GeogebraCommonKernelKernel_COORD_CARTESIAN_3D;
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_setAndConsume_sbToString_(self, new_JavaLangStringBuilder_initWithInt_(50));
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_set_kernel_(self, kernel);
}

GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonKernelKernel *kernel, jdouble x, jdouble y, jdouble z) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(GeogebraCommonKernelKernel *kernel, jdouble x, jdouble y, jdouble z) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withDouble_withDouble_withDouble_(self, kernel, x, y, z);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *v) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_(self, ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(v))->kernel_);
  self->x_ = v->x_;
  self->y_ = v->y_;
  self->z_ = v->z_;
  self->mode_ = v->mode_;
}

GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *v) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(self, v);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonKernelKernel *kernel, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *q) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_(self, kernel);
  self->x_ = [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(q)) getX] - [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk(p)) getX];
  self->y_ = [q getY] - [p getY];
  self->z_ = [q getZ] - [p getZ];
}

GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *new_GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(GeogebraCommonKernelKernel *kernel, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *p, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *q) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self = [GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec alloc];
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initWithGeogebraCommonKernelKernel_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_(self, kernel, p, q);
  return self;
}

jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getX(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return self->x_;
}

jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getY(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return self->y_;
}

jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_getZ(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return self->z_;
}

jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_length(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self) {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(self->x_, self->y_, self->z_);
}

jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDoubleArray_(IOSDoubleArray *a) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(a), 0), IOSDoubleArray_Get(a, 1), IOSDoubleArray_Get(a, 2));
}

jdouble GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_lengthWithDouble_withDouble_withDouble_(jdouble a, jdouble b, jdouble c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  return JavaLangMath_sqrtWithDouble_(a * a + b * b + c * c);
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ + ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = a->y_ + b->y_;
  c->z_ = a->z_ + b->z_;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ + [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b)) getX];
  c->y_ = a->y_ + [b getY];
  c->z_ = a->z_;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_addWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a)) getX] + ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = [a getY] + b->y_;
  c->z_ = b->z_;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_vectorProductWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(id<GeogebraCommonKernelKernelNDGeoVecInterface> a, id<GeogebraCommonKernelKernelNDGeoVecInterface> b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  jdouble tempX = [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(a)) getY] * [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getZ] - [a getZ] * [b getY];
  jdouble tempY = -[a getX] * [b getZ] + [a getZ] * [b getX];
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->z_ = [a getX] * [b getY] - [a getY] * [b getX];
  c->x_ = tempX;
  c->y_ = tempY;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ - ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = a->y_ - b->y_;
  c->z_ = a->z_ - b->z_;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, GeogebraCommonKernelGeosGeoVec2D *b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ - [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(b)) getX];
  c->y_ = a->y_ - [b getY];
  c->z_ = a->z_;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_subWithGeogebraCommonKernelGeosGeoVec2D_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonKernelGeosGeoVec2D *a, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(a)) getX] - ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(b))->x_;
  c->y_ = [a getY] - b->y_;
  c->z_ = -b->z_;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, jdouble b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ * b;
  c->y_ = a->y_ * b;
  c->z_ = a->z_ * b;
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_innerWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelArithmeticMyDouble_(id<GeogebraCommonKernelKernelNDGeoVecInterface> a, id<GeogebraCommonKernelKernelNDGeoVecInterface> b, GeogebraCommonKernelArithmeticMyDouble *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  [((GeogebraCommonKernelArithmeticMyDouble *) nil_chk(c)) setWithDouble:[((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(a)) getX] * [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getX] + [a getY] * [b getY] + [a getZ] * [b getZ]];
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_complexMultiplyWithGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelKernelNDGeoVecInterface_withGeogebraCommonKernelGeosGeoVec2D_(id<GeogebraCommonKernelKernelNDGeoVecInterface> a, id<GeogebraCommonKernelKernelNDGeoVecInterface> b, GeogebraCommonKernelGeosGeoVec2D *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  if (!GeogebraCommonKernelKernel_isZeroWithDouble_([((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(a)) getZ]) || !GeogebraCommonKernelKernel_isZeroWithDouble_([((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getZ])) {
    [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c)) setXWithDouble:JavaLangDouble_NaN];
    [c setYWithDouble:JavaLangDouble_NaN];
    [c setModeWithInt:GeogebraCommonKernelKernel_COORD_COMPLEX];
    return;
  }
  OrgApacheCommonsMathComplexComplex *out = [new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_([a getX], [a getY]) autorelease];
  out = [out multiplyWithId:[new_OrgApacheCommonsMathComplexComplex_initWithDouble_withDouble_([((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(b)) getX], [b getY]) autorelease]];
  [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(c)) setXWithDouble:[((OrgApacheCommonsMathComplexComplex *) nil_chk(out)) getReal]];
  [c setYWithDouble:[out getImaginary]];
  [c setModeWithInt:GeogebraCommonKernelKernel_COORD_COMPLEX];
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_divWithGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_withDouble_withGeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *a, jdouble b, GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(c))->x_ = ((GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *) nil_chk(a))->x_ / b;
  c->y_ = a->y_ / b;
  c->z_ = a->z_ / b;
}

NSString *GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonKernelStringTemplate *tpl) {
  [((JavaLangStringBuilder *) nil_chk(self->sbToString_)) setLengthWithInt:0];
  [self->sbToString_ appendWithChar:'('];
  [self->sbToString_ appendWithNSString:[((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) formatWithDouble:self->x_ withGeogebraCommonKernelStringTemplate:tpl]];
  [self->sbToString_ appendWithNSString:@", "];
  [self->sbToString_ appendWithNSString:[self->kernel_ formatWithDouble:self->y_ withGeogebraCommonKernelStringTemplate:tpl]];
  [self->sbToString_ appendWithChar:')'];
  return [self->sbToString_ description];
}

NSString *GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toValueStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *self, GeogebraCommonKernelStringTemplate *tpl) {
  return GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

void GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_multiplyMatrixWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticVectorNDValue_withGeogebraCommonKernelGeosGeoVec2D_(GeogebraCommonKernelArithmeticMyList *list, id<GeogebraCommonKernelArithmeticVectorNDValue> rt, GeogebraCommonKernelGeosGeoVec2D *ret) {
  GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec_initialize();
  jdouble a, b, c, d, e, f, xx, yy, zz;
  id<GeogebraCommonKernelKernelNDGeoVecInterface> v = [((id<GeogebraCommonKernelArithmeticVectorNDValue>) nil_chk(rt)) getVector];
  xx = [((id<GeogebraCommonKernelKernelNDGeoVecInterface>) nil_chk(v)) getX];
  yy = [v getY];
  zz = [v getZ];
  a = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 0))) evaluateDouble];
  b = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 0))) evaluateDouble];
  c = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 0))) evaluateDouble];
  d = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 0, 1))) evaluateDouble];
  e = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 1, 1))) evaluateDouble];
  f = [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(list, 2, 1))) evaluateDouble];
  [((GeogebraCommonKernelGeosGeoVec2D *) nil_chk(ret)) setCoordsWithDouble:a * xx + b * yy + c * zz withDouble:d * xx + e * yy + f * zz];
  return;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec)
