//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoPlaneThreePoints.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoPlaneThreePoints.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/CoordSys.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoCoordSys2D.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> A_, B_, C_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints, A_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints, B_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints, C_, id<GeogebraCommonKernelKernelNDGeoPointND>)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)C {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, c, label, A, B, C);
  return self;
}

- (void)compute {
  GeogebraCommonKernelMatrixCoordSys *coordsys = [((id<GeogebraCommonKernelKernelNDGeoCoordSys2D>) nil_chk(cs_)) getCoordSys];
  if ((![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) isDefined]) || (![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) isDefined]) || (![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) isDefined])) {
    [((GeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys)) setUndefined];
    return;
  }
  [((GeogebraCommonKernelMatrixCoordSys *) nil_chk(coordsys)) resetCoordSys];
  GeogebraCommonKernelMatrixCoords *cA = [A_ getInhomCoordsInD3];
  GeogebraCommonKernelMatrixCoords *cB = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getInhomCoordsInD3];
  GeogebraCommonKernelMatrixCoords *cC = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getInhomCoordsInD3];
  [coordsys addPointWithGeogebraCommonKernelMatrixCoords:cA];
  [coordsys addPointWithGeogebraCommonKernelMatrixCoords:cB];
  [coordsys addPointWithGeogebraCommonKernelMatrixCoords:cC];
  if ([coordsys makeOrthoMatrixWithBoolean:NO withBoolean:NO]) {
    if ([coordsys isDefined]) {
      [coordsys setEquationVectorWithGeogebraCommonKernelMatrixCoords:cA withGeogebraCommonKernelMatrixCoords:cB withGeogebraCommonKernelMatrixCoords:cC];
    }
  }
}

- (id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)getCoordSys {
  return cs_;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Plane();
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"PlaneThroughABC" withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(cs_);
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(C_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoPlaneThreePoints", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getCoordSys", NULL, "Lgeogebra.common.kernel.kernelND.GeoCoordSys2D;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cs_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoCoordSys2D;", NULL, NULL,  },
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "C_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints = { 2, "AlgoPlaneThreePoints", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints *self, GeogebraCommonKernelConstruction *c, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, c);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_set_A_(self, A);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_set_B_(self, B);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_set_C_(self, C);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_setAndConsume_cs_(self, new_GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithGeogebraCommonKernelConstruction_(c));
  [self setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(A, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(B, [GeogebraCommonKernelGeosGeoElement class]), (GeogebraCommonKernelGeosGeoElement *) check_class_cast(C, [GeogebraCommonKernelGeosGeoElement class]) } count:3 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(self->cs_, [GeogebraCommonKernelGeosGeoElement class]) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
  [((GeogebraCommonKernelGeosGeoElement *) check_class_cast(self->cs_, [GeogebraCommonKernelGeosGeoElement class])) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *c, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, c, label, A, B, C);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPlaneThreePoints)
