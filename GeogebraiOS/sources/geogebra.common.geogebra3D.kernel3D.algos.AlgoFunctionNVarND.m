//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoFunctionNVarND.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoFunctionNVarND.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunctionNVar.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND ()

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)from
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)to;

- (void)setInputOutputWithGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)coords
                             withGeogebraCommonKernelGeosGeoNumericArray:(IOSObjectArray *)localVar;

+ (IOSDoubleArray *)getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)values;

@end

__attribute__((unused)) static void GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *from, IOSObjectArray *to);

__attribute__((unused)) static GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *from, IOSObjectArray *to) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSDoubleArray *GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray_(IOSObjectArray *values);

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)from
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)to {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, from, to);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)coords
             withGeogebraCommonKernelGeosGeoNumericArray:(IOSObjectArray *)localVar
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)from
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)to {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelGeosGeoNumericArray_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, label, coords, localVar, from, to);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
             withGeogebraCommonKernelGeosGeoFunctionNVar:(GeogebraCommonKernelGeosGeoFunctionNVar *)f
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)from
      withGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)to {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunctionNVar_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, label, f, from, to);
  return self;
}

- (void)setInputOutputWithGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)coords
                             withGeogebraCommonKernelGeosGeoNumericArray:(IOSObjectArray *)localVar {
  jint inputLength = ((IOSObjectArray *) nil_chk(from_))->size_ + ((IOSObjectArray *) nil_chk(to_))->size_;
  if (coords != nil) inputLength += coords->size_;
  else inputLength += 1;
  if (localVar != nil) inputLength += localVar->size_;
  IOSObjectArray *inputElements = [IOSObjectArray arrayWithLength:inputLength type:GeogebraCommonKernelGeosGeoElement_class_()];
  jint index = 0;
  if (coords != nil) for (jint i = 0; i < coords->size_; i++) {
    IOSObjectArray_Set(inputElements, index, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(coords, i), [GeogebraCommonKernelGeosGeoElement class]));
    index++;
  }
  else {
    IOSObjectArray_Set(inputElements, index, inputFunction_);
    index++;
  }
  for (jint i = 0; i < from_->size_; i++) {
    if (localVar != nil) {
      IOSObjectArray_Set(inputElements, index, IOSObjectArray_Get(localVar, i));
      index++;
    }
    IOSObjectArray_Set(inputElements, index, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(from_, i), [GeogebraCommonKernelGeosGeoElement class]));
    index++;
    IOSObjectArray_Set(inputElements, index, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(IOSObjectArray_Get(to_, i), [GeogebraCommonKernelGeosGeoElement class]));
    index++;
  }
  [super setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:inputElements withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ function_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
}

- (GeogebraCommonKernelGeosGeoFunctionNVar *)getFunction {
  return function_;
}

- (void)compute {
  if (inputFunction_ != nil) [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(function_)) setWithGeogebraCommonKernelGeosGeoElement:inputFunction_];
  [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(function_)) setIntervalWithDoubleArray:GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray_(from_) withDoubleArray:GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray_(to_)];
}

+ (IOSDoubleArray *)getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray:(IOSObjectArray *)values {
  return GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray_(values);
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Function();
}

- (void)dealloc {
  RELEASE_(inputFunction_);
  RELEASE_(function_);
  RELEASE_(from_);
  RELEASE_(to_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelArithmeticNumberValueArray:withGeogebraCommonKernelArithmeticNumberValueArray:", "AlgoFunctionNVarND", NULL, 0x2, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelArithmeticNumberValueArray:withGeogebraCommonKernelGeosGeoNumericArray:withGeogebraCommonKernelArithmeticNumberValueArray:withGeogebraCommonKernelArithmeticNumberValueArray:", "AlgoFunctionNVarND", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoFunctionNVar:withGeogebraCommonKernelArithmeticNumberValueArray:withGeogebraCommonKernelArithmeticNumberValueArray:", "AlgoFunctionNVarND", NULL, 0x1, NULL, NULL },
    { "setInputOutputWithGeogebraCommonKernelArithmeticNumberValueArray:withGeogebraCommonKernelGeosGeoNumericArray:", "setInputOutput", "V", 0x2, NULL, NULL },
    { "getFunction", NULL, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray:", "getDouble", "[D", 0xa, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputFunction_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "function_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoFunctionNVar;", NULL, NULL,  },
    { "from_", NULL, 0x4, "[Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "to_", NULL, 0x4, "[Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND = { 2, "AlgoFunctionNVarND", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *from, IOSObjectArray *to) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_set_from_(self, from);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_set_to_(self, to);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *from, IOSObjectArray *to) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, from, to);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelGeosGeoNumericArray_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *self, GeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *coords, IOSObjectArray *localVar, IOSObjectArray *from, IOSObjectArray *to) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, from, to);
  IOSObjectArray *funVar = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(localVar))->size_ type:GeogebraCommonKernelArithmeticFunctionVariable_class_()];
  for (jint i = 0; i < localVar->size_; i++) {
    IOSObjectArray_SetAndConsume(funVar, i, new_GeogebraCommonKernelArithmeticFunctionVariable_initWithGeogebraCommonKernelKernel_(self->kernel_));
    [((GeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(funVar, i))) setVarStringWithNSString:[((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(IOSObjectArray_Get(localVar, i))) getLabelWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()]];
  }
  IOSObjectArray *exp = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(coords))->size_ type:GeogebraCommonKernelArithmeticExpressionNode_class_()];
  IOSObjectArray *fun = [IOSObjectArray arrayWithLength:coords->size_ type:GeogebraCommonKernelArithmeticFunctionNVar_class_()];
  for (jint i = 0; i < coords->size_; i++) {
    IOSObjectArray_Set(exp, i, [((GeogebraCommonKernelKernel *) nil_chk(self->kernel_)) convertNumberValueToExpressionNodeWithGeogebraCommonKernelGeosGeoElement:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(coords, i))) toGeoElement]]);
    for (jint j = 0; j < localVar->size_; j++) IOSObjectArray_Set(exp, i, [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk([((GeogebraCommonKernelArithmeticExpressionNode *) nil_chk(IOSObjectArray_Get(exp, i))) replaceWithGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(localVar, j) withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(funVar, j)])) wrap]);
    IOSObjectArray_SetAndConsume(fun, i, new_GeogebraCommonKernelArithmeticFunctionNVar_initWithGeogebraCommonKernelArithmeticExpressionNode_withGeogebraCommonKernelArithmeticFunctionVariableArray_(IOSObjectArray_Get(exp, i), funVar));
  }
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_setAndConsume_function_(self, new_GeogebraCommonKernelGeosGeoFunctionNVar_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticFunctionNVar_(cons, IOSObjectArray_Get(fun, 0)));
  [self setInputOutputWithGeogebraCommonKernelArithmeticNumberValueArray:coords withGeogebraCommonKernelGeosGeoNumericArray:localVar];
  [self compute];
  [self->function_ setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelGeosGeoNumericArray_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonKernelConstruction *cons, NSString *label, IOSObjectArray *coords, IOSObjectArray *localVar, IOSObjectArray *from, IOSObjectArray *to) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelGeosGeoNumericArray_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, label, coords, localVar, from, to);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunctionNVar_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunctionNVar *f, IOSObjectArray *from, IOSObjectArray *to) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, from, to);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_set_inputFunction_(self, f);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_set_function_(self, (GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast([((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->inputFunction_)) copy__], [GeogebraCommonKernelGeosGeoFunctionNVar class]));
  [self setInputOutputWithGeogebraCommonKernelArithmeticNumberValueArray:nil withGeogebraCommonKernelGeosGeoNumericArray:nil];
  [self compute];
  [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(self->function_)) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunctionNVar_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunctionNVar *f, IOSObjectArray *from, IOSObjectArray *to) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunctionNVar_withGeogebraCommonKernelArithmeticNumberValueArray_withGeogebraCommonKernelArithmeticNumberValueArray_(self, cons, label, f, from, to);
  return self;
}

IOSDoubleArray *GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_getDoubleWithGeogebraCommonKernelArithmeticNumberValueArray_(IOSObjectArray *values) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND_initialize();
  IOSDoubleArray *ret = [IOSDoubleArray arrayWithLength:((IOSObjectArray *) nil_chk(values))->size_];
  for (jint i = 0; i < values->size_; i++) {
    *IOSDoubleArray_GetRef(ret, i) = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(IOSObjectArray_Get(values, i))) getDouble];
  }
  return ret;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoFunctionNVarND)
