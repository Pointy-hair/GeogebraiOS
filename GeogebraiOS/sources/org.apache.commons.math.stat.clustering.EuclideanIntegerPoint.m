//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Collection.h"
#include "org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.h"
#include "org/apache/commons/math/util/MathUtils.h"

#define OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_serialVersionUID 3946024775784901369LL

@interface OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint () {
 @public
  IOSIntArray *point_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint, point_, IOSIntArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint

- (instancetype)initWithIntArray:(IOSIntArray *)point {
  OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_initWithIntArray_(self, point);
  return self;
}

- (IOSIntArray *)getPoint {
  return point_;
}

- (jdouble)distanceFromWithId:(OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *)p {
  return OrgApacheCommonsMathUtilMathUtils_distanceWithIntArray_withIntArray_(point_, [((OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *) nil_chk(p)) getPoint]);
}

- (OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *)centroidOfWithJavaUtilCollection:(id<JavaUtilCollection>)points {
  IOSIntArray *centroid = [IOSIntArray arrayWithLength:((IOSIntArray *) nil_chk([self getPoint]))->size_];
  for (OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint * __strong p in nil_chk(points)) {
    for (jint i = 0; i < centroid->size_; i++) {
      *IOSIntArray_GetRef(centroid, i) += IOSIntArray_Get(nil_chk([((OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *) nil_chk(p)) getPoint]), i);
    }
  }
  for (jint i = 0; i < centroid->size_; i++) {
    *IOSIntArray_GetRef(centroid, i) /= [points size];
  }
  return [new_OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_initWithIntArray_(centroid) autorelease];
}

- (jboolean)isEqual:(id)other {
  if (!([other isKindOfClass:[OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint class]])) {
    return NO;
  }
  IOSIntArray *otherPoint = [((OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *) nil_chk(((OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *) check_class_cast(other, [OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint class])))) getPoint];
  if (((IOSIntArray *) nil_chk(point_))->size_ != ((IOSIntArray *) nil_chk(otherPoint))->size_) {
    return NO;
  }
  for (jint i = 0; i < point_->size_; i++) {
    if (IOSIntArray_Get(point_, i) != IOSIntArray_Get(otherPoint, i)) {
      return NO;
    }
  }
  return YES;
}

- (NSUInteger)hash {
  jint hashCode = 0;
  {
    IOSIntArray *a__ = point_;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangInteger *i = JavaLangInteger_valueOfWithInt_(*b__++);
      hashCode += ((jint) [i hash]) * 13 + 7;
    }
  }
  return hashCode;
}

- (NSString *)description {
  JavaLangStringBuilder *buff = [new_JavaLangStringBuilder_initWithNSString_(@"(") autorelease];
  IOSIntArray *coordinates = [self getPoint];
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(coordinates))->size_; i++) {
    [buff appendWithInt:IOSIntArray_Get(coordinates, i)];
    if (i < coordinates->size_ - 1) {
      [buff appendWithNSString:@","];
    }
  }
  [buff appendWithNSString:@")"];
  return [buff description];
}

- (void)dealloc {
  RELEASE_(point_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIntArray:", "EuclideanIntegerPoint", NULL, 0x1, NULL, NULL },
    { "getPoint", NULL, "[I", 0x1, NULL, NULL },
    { "distanceFromWithId:", "distanceFrom", "D", 0x1, NULL, NULL },
    { "centroidOfWithJavaUtilCollection:", "centroidOf", "Lorg.apache.commons.math.stat.clustering.EuclideanIntegerPoint;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_serialVersionUID },
    { "point_", NULL, 0x12, "[I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint = { 2, "EuclideanIntegerPoint", "org.apache.commons.math.stat.clustering", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lorg/apache/commons/math/stat/clustering/Clusterable<Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;>;Ljava/io/Serializable;" };
  return &_OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint;
}

@end

void OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_initWithIntArray_(OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *self, IOSIntArray *point) {
  NSObject_init(self);
  OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_set_point_(self, point);
}

OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *new_OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_initWithIntArray_(IOSIntArray *point) {
  OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint *self = [OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint alloc];
  OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint_initWithIntArray_(self, point);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatClusteringEuclideanIntegerPoint)
