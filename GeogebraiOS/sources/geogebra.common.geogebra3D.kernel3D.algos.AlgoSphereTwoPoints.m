//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoSphereTwoPoints.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoSphereTwoPoints.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoSphereNDTwoPoints.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "geogebra/common/main/Localization.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, M, P);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, M, P);
  return self;
}

- (GeogebraCommonKernelKernelNDGeoQuadricND *)createSphereNDWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *sphere = [new_GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
  return sphere;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Sphere();
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *)getSphere {
  return (GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) check_class_cast([self getSphereND], [GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D class]);
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"SphereThroughAwithCenterB" withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getP])) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getM])) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoSphereTwoPoints", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoSphereTwoPoints", NULL, 0x1, NULL, NULL },
    { "createSphereNDWithGeogebraCommonKernelConstruction:", "createSphereND", "Lgeogebra.common.kernel.kernelND.GeoQuadricND;", 0x4, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getSphere", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoQuadric3D;", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints = { 2, "AlgoSphereTwoPoints", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, M, P);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, M, P);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonKernelAlgosAlgoSphereNDTwoPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, M, P);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelKernelNDGeoPointND> P) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, M, P);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoSphereTwoPoints)
