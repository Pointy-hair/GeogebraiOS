//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoVerticalText.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/CircularDefinitionException.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/advanced/AlgoRotateText.h"
#include "geogebra/common/kernel/advanced/AlgoVerticalText.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonKernelAdvancedAlgoVerticalText () {
 @public
  GeogebraCommonKernelGeosGeoText *text_;
  GeogebraCommonKernelGeosGeoText *args_;
  GeogebraCommonKernelGeosGeoPoint *startPoint_, *startPointCopy_;
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoVerticalText, text_, GeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoVerticalText, args_, GeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoVerticalText, startPoint_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoVerticalText, startPointCopy_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoVerticalText, sb_, JavaLangStringBuilder *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoVerticalText_compute(GeogebraCommonKernelAdvancedAlgoVerticalText *self);

@implementation GeogebraCommonKernelAdvancedAlgoVerticalText

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)args {
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(self, cons, label, args);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)args {
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_(self, cons, args);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)args
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p {
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, args, p);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)args
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p {
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(self, cons, args, p);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_VerticalText();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, args_);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(args_)) addTextDescendantWithGeogebraCommonKernelGeosGeoText:text_];
  if (startPoint_ == nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, args_);
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, args_);
    IOSObjectArray_Set(input_, 1, startPoint_);
  }
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getResult {
  return text_;
}

- (void)compute {
  GeogebraCommonKernelAdvancedAlgoVerticalText_compute(self);
}

- (jboolean)isLaTeXTextCommand {
  return YES;
}

- (void)dealloc {
  RELEASE_(text_);
  RELEASE_(args_);
  RELEASE_(startPoint_);
  RELEASE_(startPointCopy_);
  RELEASE_(sb_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoText:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoText:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoText:withGeogebraCommonKernelGeosGeoPoint:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoText:withGeogebraCommonKernelGeosGeoPoint:", "AlgoVerticalText", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "isLaTeXTextCommand", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "text_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "args_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "startPoint_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "startPointCopy_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoVerticalText = { 2, "AlgoVerticalText", "geogebra.common.kernel.advanced", NULL, 0x1, 9, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoVerticalText;
}

@end

void GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelAdvancedAlgoVerticalText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *args) {
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(self, cons, args, nil);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoVerticalText *new_GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *args) {
  GeogebraCommonKernelAdvancedAlgoVerticalText *self = [GeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_(self, cons, label, args);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelAdvancedAlgoVerticalText *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoText *args) {
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(self, cons, args, nil);
}

GeogebraCommonKernelAdvancedAlgoVerticalText *new_GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoText *args) {
  GeogebraCommonKernelAdvancedAlgoVerticalText *self = [GeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_(self, cons, args);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelAdvancedAlgoVerticalText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *args, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(self, cons, args, p);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoVerticalText *new_GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoText *args, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelAdvancedAlgoVerticalText *self = [GeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(self, cons, label, args, p);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelAdvancedAlgoVerticalText *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoText *args, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoVerticalText_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
  GeogebraCommonKernelAdvancedAlgoVerticalText_set_args_(self, args);
  GeogebraCommonKernelAdvancedAlgoVerticalText_set_startPoint_(self, p);
  GeogebraCommonKernelAdvancedAlgoVerticalText_setAndConsume_text_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self->text_ setIsTextCommandWithBoolean:YES];
  if (self->startPoint_ != nil) {
    GeogebraCommonKernelAdvancedAlgoVerticalText_set_startPointCopy_(self, (GeogebraCommonKernelGeosGeoPoint *) check_class_cast([self->startPoint_ copyInternalWithGeogebraCommonKernelConstruction:cons], [GeogebraCommonKernelGeosGeoPoint class]));
    @try {
      [self->text_ setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:self->startPointCopy_];
    }
    @catch (GeogebraCommonKernelCircularDefinitionException *e) {
      [((GeogebraCommonKernelCircularDefinitionException *) nil_chk(e)) printStackTrace];
    }
    [self->text_ setAlwaysFixedWithBoolean:YES];
  }
  [self setInputOutput];
  GeogebraCommonKernelAdvancedAlgoVerticalText_compute(self);
}

GeogebraCommonKernelAdvancedAlgoVerticalText *new_GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoText *args, GeogebraCommonKernelGeosGeoPoint *p) {
  GeogebraCommonKernelAdvancedAlgoVerticalText *self = [GeogebraCommonKernelAdvancedAlgoVerticalText alloc];
  GeogebraCommonKernelAdvancedAlgoVerticalText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoPoint_(self, cons, args, p);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoVerticalText_compute(GeogebraCommonKernelAdvancedAlgoVerticalText *self) {
  if (![((GeogebraCommonKernelGeosGeoText *) nil_chk(self->args_)) isDefined] || (self->startPoint_ != nil && ![self->startPoint_ isDefined])) {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setTextStringWithNSString:@""];
    return;
  }
  [((JavaLangStringBuilder *) nil_chk(self->sb_)) setLengthWithInt:0];
  GeogebraCommonKernelAdvancedAlgoRotateText_appendRotatedTextWithJavaLangStringBuilder_withGeogebraCommonKernelGeosGeoText_withDouble_(self->sb_, self->args_, 90);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setTextStringWithNSString:[self->sb_ description]];
  [self->text_ setLaTeXWithBoolean:YES withBoolean:NO];
  if (self->startPointCopy_ != nil) {
    [self->startPointCopy_ setCoordsWithGeogebraCommonKernelGeosGeoVec3D:self->startPoint_];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoVerticalText)
