//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3D.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePoints3DOrientation.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoAnglePolygon3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoAngle3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoAnglePointsND.h"
#include "geogebra/common/kernel/algos/AlgoAnglePolygonND.h"
#include "geogebra/common/kernel/geos/GeoAngle.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"
#include "geogebra/common/kernel/kernelND/GeoDirectionND.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)poly {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, poly);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)poly
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoAnglePointsND *)newAlgoAnglePointsWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 {
  return [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePoints3DOrientation_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoDirectionND_(cons1, [self getPolygon]) autorelease];
}

- (GeogebraCommonKernelGeosGeoAngle *)newGeoAngleWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 {
  return GeogebraCommonGeogebra3DKernel3DGeosGeoAngle3D_newAngle3DWithDefaultIntervalWithGeogebraCommonKernelConstruction_(cons1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoPolygon:", "AlgoAnglePolygon3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelGeosGeoPolygon:withGeogebraCommonKernelKernelNDGeoDirectionND:", "AlgoAnglePolygon3D", NULL, 0x1, NULL, NULL },
    { "newAlgoAnglePointsWithGeogebraCommonKernelConstruction:", "newAlgoAnglePoints", "Lgeogebra.common.kernel.algos.AlgoAnglePointsND;", 0x4, NULL, NULL },
    { "newGeoAngleWithGeogebraCommonKernelConstruction:", "newGeoAngle", "Lgeogebra.common.kernel.geos.GeoAngle;", 0x14, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D = { 2, "AlgoAnglePolygon3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, nil);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, labels, poly);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonKernelAlgosAlgoAnglePolygonND_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoPolygon *poly, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonKernelKernelNDGeoDirectionND_(self, cons, labels, poly, orientation);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoAnglePolygon3D)
