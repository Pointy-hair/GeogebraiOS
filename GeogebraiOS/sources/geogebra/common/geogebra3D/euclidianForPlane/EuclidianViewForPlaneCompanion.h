//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidianForPlane/EuclidianViewForPlaneCompanion.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_H_
#define _GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidianFor3D/EuclidianViewFor3DCompanion.h"

@class GeogebraCommonEuclidianDrawDrawAngle;
@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelAlgosAlgoElement;
@class GeogebraCommonKernelGeosGeoAngle;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelMatrixCoordMatrix;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonMainSettingsAbstractSettings;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonAwtGGraphics2D;
@protocol GeogebraCommonGuiLayoutDockPanel;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoPlaneND;
@protocol GeogebraCommonKernelKernelNDViewCreator;

@interface GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion : GeogebraCommonGeogebra3DEuclidianFor3DEuclidianViewFor3DCompanion

#pragma mark Public

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view;

- (void)addExistingGeos;

- (void)attachView;

- (void)doRemove;

- (GeogebraCommonKernelMatrixCoords *)getCoordsForViewWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords;

- (GeogebraCommonKernelMatrixCoords *)getCoordsFromViewWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords;

- (GeogebraCommonKernelMatrixCoords *)getCoordsFromViewWithDouble:(jdouble)x
                                                       withDouble:(jdouble)y;

- (id<GeogebraCommonKernelKernelNDGeoDirectionND>)getDirection;

- (JavaUtilArrayList *)getFreeInputPointsWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algoParent;

- (NSString *)getFromPlaneString;

- (jint)getId;

- (GeogebraCommonKernelMatrixCoordMatrix *)getInverseMatrix;

- (GeogebraCommonKernelMatrixCoordMatrix *)getMatrix;

- (id<GeogebraCommonKernelKernelNDViewCreator>)getPlane;

- (id<GeogebraCommonKernelKernelNDGeoPlaneND>)getPlaneContaining;

- (NSString *)getTranslatedFromPlaneString;

- (void)getXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbxml
                            withBoolean:(jboolean)asPreference;

- (void)getXMLidWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbxml;

- (jboolean)goToZPlusWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

- (jboolean)hasForParentWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)initViewWithGeogebraCommonKernelKernelNDViewCreator:(id<GeogebraCommonKernelKernelNDViewCreator>)plane OBJC_METHOD_FAMILY_NONE;

- (jboolean)isDefault2D;

- (jboolean)isMoveableWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isVisibleInThisViewWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)paintWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)removeFromGuiAndKernel;

- (void)setDockPanelWithGeogebraCommonGuiLayoutDockPanel:(id<GeogebraCommonGuiLayoutDockPanel>)panel;

- (void)setPlaneWithGeogebraCommonKernelKernelNDViewCreator:(id<GeogebraCommonKernelKernelNDViewCreator>)plane;

- (void)settingsChangedWithGeogebraCommonMainSettingsAbstractSettings:(GeogebraCommonMainSettingsAbstractSettings *)settings;

- (void)setTransform;

- (void)setTransformRegardingView;

- (void)setXYMinMaxForUpdateSize;

- (jboolean)showGridWithBoolean:(jboolean)show;

- (void)updateAllDrawablesWithBoolean:(jboolean)repaint;

- (void)updateCenterAndOrientationRegardingView;

- (void)updateForPlane;

- (void)updateMatrix;

- (void)updateScaleRegardingView;

- (jboolean)viewOrientationForClockwiseWithBoolean:(jboolean)clockwise;

#pragma mark Protected

- (GeogebraCommonEuclidianDrawDrawAngle *)newDrawAngleWithGeogebraCommonKernelGeosGeoAngle:(GeogebraCommonKernelGeosGeoAngle *)geo OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_initWithGeogebraCommonEuclidianEuclidianView_(GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *self, GeogebraCommonEuclidianEuclidianView *view);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion *new_GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_initWithGeogebraCommonEuclidianEuclidianView_(GeogebraCommonEuclidianEuclidianView *view) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion)

#endif // _GeogebraCommonGeogebra3DEuclidianForPlaneEuclidianViewForPlaneCompanion_H_
