//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidianFor3D/CurveEvaluableFor3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_H_
#define _GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/kernelND/CurveEvaluable.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D;
@class GeogebraCommonKernelGeosGeoElement;
@class IOSDoubleArray;

@interface GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D : NSObject < GeogebraCommonKernelKernelNDCurveEvaluable >

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)parent;

- (jdouble)distanceMaxWithDoubleArray:(IOSDoubleArray *)p1
                      withDoubleArray:(IOSDoubleArray *)p2;

- (void)evaluateCurveWithDouble:(jdouble)t
                withDoubleArray:(IOSDoubleArray *)outArg;

- (IOSDoubleArray *)getDefinedIntervalWithDouble:(jdouble)a
                                      withDouble:(jdouble)b;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (jboolean)getTrace;

- (jboolean)isClosedPath;

- (jboolean)isFunctionInX;

- (IOSDoubleArray *)newDoubleArray OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelGeosGeoElement *)toGeoElement;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *self, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *parent);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D *new_GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *parent) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D)

#endif // _GeogebraCommonGeogebra3DEuclidianFor3DCurveEvaluableFor3D_H_
