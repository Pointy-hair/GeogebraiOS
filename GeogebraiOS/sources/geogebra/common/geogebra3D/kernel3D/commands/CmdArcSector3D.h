//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/commands/CmdArcSector3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_H_
#define _GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/commands/CmdArcSector.h"

@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelKernelNDGeoConicND;
@protocol GeogebraCommonKernelGeosGeoNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D : GeogebraCommonKernelCommandsCmdArcSector

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                           withInt:(jint)type;

#pragma mark Protected

- (GeogebraCommonKernelGeosGeoElement *)arcSectorWithNSString:(NSString *)label
                   withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic
                   withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)start
                   withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)end;

- (GeogebraCommonKernelGeosGeoElement *)arcSectorWithNSString:(NSString *)label
                   withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic
                   withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)start
                   withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)end;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D *self, GeogebraCommonKernelKernel *kernel, jint type);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D *new_GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonKernelKernel *kernel, jint type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D)

#endif // _GeogebraCommonGeogebra3DKernel3DCommandsCmdArcSector3D_H_
