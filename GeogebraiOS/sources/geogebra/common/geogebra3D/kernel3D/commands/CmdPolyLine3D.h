//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/commands/CmdPolyLine3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D_H_
#define _GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/commands/CmdPolyLine.h"

@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoList;
@class GeogebraCommonKernelKernel;
@class IOSObjectArray;

@interface GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D : GeogebraCommonKernelCommandsCmdPolyLine

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

#pragma mark Protected

- (jboolean)checkIs3DWithBoolean:(jboolean)is3D
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)PolyLineWithNSStringArray:(IOSObjectArray *)labels
          withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)pointList;

- (IOSObjectArray *)PolyLineWithNSStringArray:(IOSObjectArray *)labels
withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                                  withBoolean:(jboolean)penStroke
                                  withBoolean:(jboolean)is3D;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D *self, GeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D *new_GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D)

#endif // _GeogebraCommonGeogebra3DKernel3DCommandsCmdPolyLine3D_H_
