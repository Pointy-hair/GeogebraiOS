//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoAxis3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoLine3D.h"
#include "geogebra/common/kernel/kernelND/GeoAxisND.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class JavaLangStringBuilder;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D : GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D < GeogebraCommonKernelKernelNDGeoAxisND >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                                 withInt:(jint)type;

- (GeogebraCommonKernelMatrixCoords *)getDirectionInD3;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (NSString *)getLabelWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (jboolean)getShowNumbers;

- (jint)getTickSize;

- (jint)getTickStyle;

- (jint)getType;

- (NSString *)getUnitLabel;

- (jboolean)isAvailableAtConstructionStepWithInt:(jint)step;

- (jboolean)isAxis;

- (jboolean)isDefined;

- (jboolean)isLabelSet;

- (jboolean)isRenameable;

- (jboolean)isTraceable;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (void)getCoordsXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *self, GeogebraCommonKernelConstruction *cons);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *cons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_initWithGeogebraCommonKernelConstruction_withInt_(GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *self, GeogebraCommonKernelConstruction *c, jint type);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_initWithGeogebraCommonKernelConstruction_withInt_(GeogebraCommonKernelConstruction *c, jint type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoAxis3D_H_
