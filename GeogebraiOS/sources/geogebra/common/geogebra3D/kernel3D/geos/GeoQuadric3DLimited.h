//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DLimited.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3DLimitedOrPart.h"
#include "geogebra/common/geogebra3D/kernel3D/transform/MirrorableAtPlane.h"
#include "geogebra/common/kernel/geos/Dilateable.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/Transformable.h"
#include "geogebra/common/kernel/geos/Translateable.h"
#include "geogebra/common/kernel/kernelND/GeoQuadric3DLimitedInterface.h"
#include "geogebra/common/kernel/kernelND/GeoQuadricND.h"
#include "geogebra/common/kernel/kernelND/HasHeight.h"
#include "geogebra/common/kernel/kernelND/HasVolume.h"
#include "geogebra/common/kernel/kernelND/RotateableND.h"

@class GeogebraCommonAwtGColor;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart;
@class GeogebraCommonKernelArithmeticMyDouble;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoBoolean;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoElement_HitTypeEnum;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class GeogebraCommonKernelMatrixCoordMatrix;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelKernelNDGeoSegmentND;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited : GeogebraCommonKernelKernelNDGeoQuadricND < GeogebraCommonKernelGeosGeoNumberValue, GeogebraCommonKernelKernelNDHasVolume, GeogebraCommonKernelKernelNDHasHeight, GeogebraCommonKernelKernelNDRotateableND, GeogebraCommonKernelGeosTranslateable, GeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane, GeogebraCommonKernelGeosTransformable, GeogebraCommonKernelGeosDilateable, GeogebraCommonKernelKernelNDGeoQuadric3DLimitedInterface, GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimitedOrPart >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited:(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *)quadric;

- (void)calcVolume;

- (GeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)dilateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)rval
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)S;

- (GeogebraCommonKernelKernelNDGeoConicND *)getBottom;

- (jdouble)getBottomParameter;

- (jint)getDimension;

- (GeogebraCommonKernelMatrixCoords *)getDirection;

- (jdouble)getDouble;

- (GeogebraCommonKernelMatrixCoords *)getEigenvec3DWithInt:(jint)i;

- (IOSDoubleArray *)getFlatMatrix;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (jdouble)getHalfAxisWithInt:(jint)i;

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (GeogebraCommonKernelMatrixCoords *)getMidpoint;

- (GeogebraCommonKernelMatrixCoords *)getMidpoint2D;

- (GeogebraCommonKernelMatrixCoords *)getMidpoint3D;

- (GeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (jdouble)getOrientedHeight;

- (GeogebraCommonKernelMatrixCoords *)getOrigin;

- (jdouble)getRadius;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *)getSide;

- (GeogebraCommonKernelMatrixCoordMatrix *)getSymetricMatrix;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *)getTop;

- (jdouble)getTopParameter;

- (NSString *)getTypeString;

- (jdouble)getVolume;

- (jboolean)hasFiniteVolume;

- (void)initLabelsIncludingBottomWithNSStringArray:(IOSObjectArray *)labels OBJC_METHOD_FAMILY_NONE;

- (void)initLabelsNoBottomWithNSStringArray:(IOSObjectArray *)labels OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)Geo;

- (jboolean)isFillable;

- (jboolean)isGeoElement3D;

- (jboolean)isNumberValue;

- (jboolean)isTranslateable;

- (void)mirrorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g;

- (void)remove;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
                  withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S
             withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)origin
           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)direction
                                     withDouble:(jdouble)r
                                     withDouble:(jdouble)min
                                     withDouble:(jdouble)max;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setAlphaValueWithFloat:(jfloat)alpha;

- (void)setBottomTopWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)bottom2
            withGeogebraCommonGeogebra3DKernel3DGeosGeoConic3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D *)top;

- (void)setConeWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)origin
               withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)direction
                                         withDouble:(jdouble)r
                                         withDouble:(jdouble)bottomParameter
                                         withDouble:(jdouble)topParameter;

- (void)setCylinderWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)origin
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)direction
                                             withDouble:(jdouble)r
                                             withDouble:(jdouble)bottomParameter
                                             withDouble:(jdouble)topParameter;

- (void)setEuclidianVisibleWithBoolean:(jboolean)visible;

- (void)setLimitsWithDouble:(jdouble)bottomParameter
                 withDouble:(jdouble)topParameter;

- (void)setLineThicknessWithInt:(jint)th;

- (void)setLineTypeWithInt:(jint)type;

- (void)setLineTypeHiddenWithInt:(jint)type;

- (void)setObjColorWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color;

- (void)setShowObjectConditionWithGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)cond;

- (void)setSideWithGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart:(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DPart *)side;

- (void)setSilentTop;

- (void)setSphereNDWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
                   withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)setSphereNDWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
                 withGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)segment;

- (void)setTraceWithBoolean:(jboolean)trace;

- (jboolean)showInAlgebraView;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)translateWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

- (void)updatePartsVisualStyle;

- (void)updateVisualStyle;

#pragma mark Protected

- (JavaLangStringBuilder *)buildValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)setColorVisualStyleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)showInEuclidianView;

- (void)singlePoint;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *new_GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *self, GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *quadric);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *new_GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_initWithGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited *quadric) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3DLimited_H_
