//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/transform/MirrorableAtPlane.h"
#include "geogebra/common/kernel/MatrixTransformable.h"
#include "geogebra/common/kernel/Path.h"
#include "geogebra/common/kernel/geos/Dilateable.h"
#include "geogebra/common/kernel/geos/Traceable.h"
#include "geogebra/common/kernel/geos/Transformable.h"
#include "geogebra/common/kernel/geos/Translateable.h"
#include "geogebra/common/kernel/kernelND/GeoCoordSys.h"
#include "geogebra/common/kernel/kernelND/GeoCoordSys1DInterface.h"
#include "geogebra/common/kernel/kernelND/GeoLineND.h"
#include "geogebra/common/kernel/kernelND/RotateableND.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelMatrixCoordMatrix;
@class GeogebraCommonKernelMatrixCoordSys;
@class GeogebraCommonKernelMatrixCoords;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D : GeogebraCommonGeogebra3DKernel3DGeosGeoElement3D < GeogebraCommonKernelPath, GeogebraCommonKernelKernelNDGeoLineND, GeogebraCommonKernelKernelNDGeoCoordSys, GeogebraCommonKernelKernelNDGeoCoordSys1DInterface, GeogebraCommonKernelGeosTranslateable, GeogebraCommonKernelMatrixTransformable, GeogebraCommonKernelGeosTraceable, GeogebraCommonKernelKernelNDRotateableND, GeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane, GeogebraCommonKernelGeosTransformable, GeogebraCommonKernelGeosDilateable > {
 @public
  GeogebraCommonKernelMatrixCoordSys *coordsys_;
  id<GeogebraCommonKernelKernelNDGeoPointND> startPoint_;
  id<GeogebraCommonKernelKernelNDGeoPointND> endPoint_;
  JavaUtilArrayList *pointsOnLine_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                             withBoolean:(jboolean)isIntersection;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)O
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)I;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)O
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)I
                                             withBoolean:(jboolean)isIntersection;

- (void)addPointOnLineWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)dilateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)rval
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)S;

- (jdouble)distanceWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g;

- (GeogebraCommonKernelMatrixCoords *)getCartesianEquationVectorWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m;

- (GeogebraCommonKernelMatrixCoordSys *)getCoordSys;

- (GeogebraCommonKernelMatrixCoords *)getDirectionForEquation;

- (GeogebraCommonKernelMatrixCoords *)getDirectionInD3;

- (GeogebraCommonKernelMatrixCoords *)getEndInhomCoords;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getEndPoint;

- (GeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (GeogebraCommonKernelMatrixCoords *)getMainDirection;

- (jdouble)getParamOnLineWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (GeogebraCommonKernelMatrixCoords *)getPointWithDouble:(jdouble)lambda;

- (GeogebraCommonKernelMatrixCoords *)getPointInDWithInt:(jint)dimension
                                              withDouble:(jdouble)lambda;

- (JavaUtilArrayList *)getPointsOnLine;

- (GeogebraCommonKernelMatrixCoords *)getStartInhomCoords;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getStartPoint;

- (jboolean)getTrace;

- (jdouble)getUnit;

- (jboolean)isDefined;

- (jboolean)isIntersection;

- (jboolean)isMatrixTransformable;

- (jboolean)isOnFullLineWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p
                                                  withDouble:(jdouble)eps;

- (jboolean)isOnPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords
                                              withDouble:(jdouble)eps;

- (jboolean)isOnPathWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)PI
                                                    withDouble:(jdouble)eps;

- (jboolean)isPath;

- (jboolean)isTraceable;

- (jboolean)isTranslateable;

- (jboolean)isValidCoordWithDouble:(jdouble)x;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22;

- (void)mirrorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)pathChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)pointChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (jboolean)respectLimitedPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords
                                                        withDouble:(jdouble)eps;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                  withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S
             withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setCoordWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

- (void)setCoordWithGeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D:(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)geo;

- (void)setCoordWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)O
                withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)I;

- (void)setCoordFromPointsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)a_O
                          withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)a_I;

- (void)setLineThroughWithDouble:(jdouble)pointX
                      withDouble:(jdouble)pointY;

- (void)setPointsOnLineWithJavaUtilArrayList:(JavaUtilArrayList *)points;

- (void)setToExplicit;

- (void)setToImplicit;

- (void)setToParametricWithNSString:(NSString *)parameter;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (void)translateWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

#pragma mark Protected

- (GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)createWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, coordsys_, GeogebraCommonKernelMatrixCoordSys *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, startPoint_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, endPoint_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D, pointsOnLine_, JavaUtilArrayList *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, GeogebraCommonKernelConstruction *c, jboolean isIntersection);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, GeogebraCommonKernelConstruction *c, GeogebraCommonKernelMatrixCoords *O, GeogebraCommonKernelMatrixCoords *V);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> O, id<GeogebraCommonKernelKernelNDGeoPointND> I);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> O, id<GeogebraCommonKernelKernelNDGeoPointND> I, jboolean isIntersection);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D_H_
