//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoConicSection.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoConic3D.h"
#include "geogebra/common/kernel/kernelND/GeoConicSectionInterface.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelPathParameter;
@class GeogebraCommonPluginGeoClassEnum;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection : GeogebraCommonGeogebra3DKernel3DGeosGeoConic3D < GeogebraCommonKernelKernelNDGeoConicSectionInterface >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                             withBoolean:(jboolean)isIntersection;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (jdouble)getParameterEndWithInt:(jint)index;

- (jdouble)getParameterExtentWithInt:(jint)index;

- (jdouble)getParameterStartWithInt:(jint)index;

- (jboolean)isInRegionWithDouble:(jdouble)x0
                      withDouble:(jdouble)y0;

- (void)pointChangedWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)P
                   withGeogebraCommonKernelPathParameter:(GeogebraCommonKernelPathParameter *)pp
                                             withBoolean:(jboolean)checkSection;

- (void)setParametersWithDouble:(jdouble)bottom0
                     withDouble:(jdouble)bottom1
                     withDouble:(jdouble)top0
                     withDouble:(jdouble)top1;

#pragma mark Protected

- (void)pathChangedWithoutCheckEllipseWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)P
                                     withGeogebraCommonKernelPathParameter:(GeogebraCommonKernelPathParameter *)pp
                                                               withBoolean:(jboolean)checkSection;

- (void)pathChangedWithoutCheckHyperbolaWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)P
                                       withGeogebraCommonKernelPathParameter:(GeogebraCommonKernelPathParameter *)pp
                                                                 withBoolean:(jboolean)checkSection;

- (void)pathChangedWithoutCheckParabolaWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)P
                                      withGeogebraCommonKernelPathParameter:(GeogebraCommonKernelPathParameter *)pp
                                                                withBoolean:(jboolean)checkSection;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *self, GeogebraCommonKernelConstruction *c, jboolean isIntersection);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *new_GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonKernelConstruction *c, jboolean isIntersection) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_H_
