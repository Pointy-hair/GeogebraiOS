//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyLine3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/geos/GeoPolyLine.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoCurveCartesian;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSObjectArray;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D : GeogebraCommonKernelGeosGeoPolyLine

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points;

- (void)calcIsPlanar;

- (void)calcLength;

- (GeogebraCommonKernelGeosGeoElement *)copyInternalWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons OBJC_METHOD_FAMILY_NONE;

- (void)dilateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (GeogebraCommonKernelGeosGeoPoint *)getPointWithInt:(jint)i;

- (jboolean)isAllVertexLabelsSet;

- (jboolean)isGeoElement3D;

- (jboolean)isOnPathWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
                                                    withDouble:(jdouble)eps;

- (jboolean)isPlanar;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q;

- (void)pathChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)pointChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)toGeoCurveCartesianWithGeogebraCommonKernelGeosGeoCurveCartesian:(GeogebraCommonKernelGeosGeoCurveCartesian *)curve;

- (void)translateWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

#pragma mark Protected

- (id<GeogebraCommonKernelKernelNDGeoPointND>)createNewPoint;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D *self, GeogebraCommonKernelConstruction *c, IOSObjectArray *points);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_(GeogebraCommonKernelConstruction *c, IOSObjectArray *points) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoPolyLine3D_H_
