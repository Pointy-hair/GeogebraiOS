//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoVector3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoVec4D.h"
#include "geogebra/common/geogebra3D/kernel3D/transform/MirrorableAtPlane.h"
#include "geogebra/common/kernel/MatrixTransformable.h"
#include "geogebra/common/kernel/arithmetic3D/Vector3DValue.h"
#include "geogebra/common/kernel/geos/Dilateable.h"
#include "geogebra/common/kernel/geos/SpreadsheetTraceable.h"
#include "geogebra/common/kernel/geos/Traceable.h"
#include "geogebra/common/kernel/geos/Transformable.h"
#include "geogebra/common/kernel/kernelND/CoordStyle.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"
#include "geogebra/common/kernel/kernelND/RotateableND.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoElement_HitTypeEnum;
@class GeogebraCommonKernelGeosGeoElement_TraceModesEnumEnum;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D : GeogebraCommonGeogebra3DKernel3DGeosGeoVec4D < GeogebraCommonKernelKernelNDGeoVectorND, GeogebraCommonKernelArithmetic3DVector3DValue, GeogebraCommonKernelGeosSpreadsheetTraceable, GeogebraCommonKernelKernelNDRotateableND, GeogebraCommonKernelGeosTraceable, GeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane, GeogebraCommonKernelGeosTransformable, GeogebraCommonKernelGeosDilateable, GeogebraCommonKernelMatrixTransformable, GeogebraCommonKernelKernelNDCoordStyle >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                              withDouble:(jdouble)x
                                              withDouble:(jdouble)y
                                              withDouble:(jdouble)z;

- (void)addToSpreadsheetTraceListWithJavaUtilArrayList:(JavaUtilArrayList *)spreadsheetTraceList;

- (GeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)dilateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)rval
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)S;

- (jboolean)evaluatesTo3DVector;

- (jboolean)evaluatesToVectorNotPoint;

- (GeogebraCommonKernelMatrixCoords *)getCoordsInD2;

- (GeogebraCommonKernelMatrixCoords *)getCoordsInD3;

- (GeogebraCommonKernelMatrixCoords *)getDirectionInD3;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (IOSDoubleArray *)getInhomCoords;

- (void)getInhomCoordsWithDoubleArray:(IOSDoubleArray *)coords;

- (GeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (IOSDoubleArray *)getPointAsDouble;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getStartPoint;

- (IOSObjectArray *)getStartPoints;

- (jboolean)getTrace;

- (NSString *)getTraceDialogAsValues;

- (GeogebraCommonKernelGeosGeoElement_TraceModesEnumEnum *)getTraceModes;

- (GeogebraCommonGeogebra3DKernel3DGeosGeo3DVec *)getVector;

- (jboolean)hasAbsoluteLocation;

- (void)initStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                                                         withInt:(jint)number OBJC_METHOD_FAMILY_NONE;

- (jboolean)isAlwaysFixed;

- (jboolean)isCasEvaluableObject;

- (jboolean)isDefined;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isFinite;

- (jboolean)isGeoVector;

- (jboolean)isInfinite;

- (jboolean)isLaTeXDrawableGeo;

- (jboolean)isMatrixTransformable;

- (jboolean)isPath;

- (jboolean)isTraceable;

- (void)matrixTransformWithDouble:(jdouble)a
                       withDouble:(jdouble)b
                       withDouble:(jdouble)c
                       withDouble:(jdouble)d;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22;

- (void)mirrorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)removeStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                  withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)S
             withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setCartesian;

- (void)setCartesian3D;

- (void)setComplex;

- (void)setCoordsWithDoubleArray:(IOSDoubleArray *)vals;

- (void)setPolar;

- (void)setSpherical;

- (void)setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (void)setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                                                        withInt:(jint)number;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (void)setWaitForStartPoint;

- (jboolean)showInAlgebraView;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)updateColumnHeadingsForTraceValues;

- (void)updateLocation;

- (void)updateStartPointPosition;

#pragma mark Protected

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)moveVectorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)rwTransVec
                      withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)endPosition;

- (jboolean)showInEuclidianView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_initWithGeogebraCommonKernelConstruction_withDouble_withDouble_withDouble_(GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *self, GeogebraCommonKernelConstruction *c, jdouble x, jdouble y, jdouble z);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_initWithGeogebraCommonKernelConstruction_withDouble_withDouble_withDouble_(GeogebraCommonKernelConstruction *c, jdouble x, jdouble y, jdouble z) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_H_
