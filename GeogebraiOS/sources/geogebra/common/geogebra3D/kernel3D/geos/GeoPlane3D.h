//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoCoords4D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/transform/MirrorableAtPlane.h"
#include "geogebra/common/kernel/arithmetic/Functional2Var.h"
#include "geogebra/common/kernel/geos/Dilateable.h"
#include "geogebra/common/kernel/geos/Traceable.h"
#include "geogebra/common/kernel/geos/Transformable.h"
#include "geogebra/common/kernel/geos/Translateable.h"
#include "geogebra/common/kernel/kernelND/GeoPlaneND.h"
#include "geogebra/common/kernel/kernelND/RotateableND.h"
#include "geogebra/common/kernel/kernelND/ViewCreator.h"

@class GeogebraCommonEuclidianEuclidianViewCompanion;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoElement_HitTypeEnum;
@class GeogebraCommonKernelMatrixCoordMatrix;
@class GeogebraCommonKernelMatrixCoordSys;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D : GeogebraCommonGeogebra3DKernel3DGeosGeoElement3D < GeogebraCommonKernelArithmeticFunctional2Var, GeogebraCommonKernelKernelNDViewCreator, GeogebraCommonGeogebra3DKernel3DGeosGeoCoords4D, GeogebraCommonKernelKernelNDGeoPlaneND, GeogebraCommonKernelGeosTranslateable, GeogebraCommonKernelGeosTraceable, GeogebraCommonKernelKernelNDRotateableND, GeogebraCommonGeogebra3DKernel3DTransformMirrorableAtPlane, GeogebraCommonKernelGeosTransformable, GeogebraCommonKernelGeosDilateable > {
 @public
  jdouble xmin_, xmax_, ymin_, ymax_;
  jdouble xPlateMin_, xPlateMax_, yPlateMin_, yPlateMax_;
  jboolean gridVisible_;
  jboolean plateVisible_;
  jdouble dx_;
  jdouble dy_;
  GeogebraCommonKernelMatrixCoordSys *coordsys_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                                              withDouble:(jdouble)a
                                              withDouble:(jdouble)b
                                              withDouble:(jdouble)c
                                              withDouble:(jdouble)d;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)createView2D;

- (void)dilateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)rval
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)S;

- (jdouble)distanceWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (jdouble)distanceWithSignWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)doRemove;

- (GeogebraCommonKernelMatrixCoords *)evaluateNormalWithDouble:(jdouble)u
                                                    withDouble:(jdouble)v;

- (GeogebraCommonKernelMatrixCoords *)evaluatePointWithDouble:(jdouble)u
                                                   withDouble:(jdouble)v;

- (GeogebraCommonKernelMatrixCoordSys *)getCoordSys;

- (NSString *)getDefaultLabel;

- (GeogebraCommonKernelMatrixCoords *)getDirectionInD3;

- (jfloat)getFading;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (jdouble)getGridXd;

- (jdouble)getGridYd;

- (GeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (GeogebraCommonKernelMatrixCoords *)getMainDirection;

- (jdouble)getMaxParameterWithInt:(jint)index;

- (jdouble)getMeasure;

- (jdouble)getMinParameterWithInt:(jint)index;

- (IOSObjectArray *)getNormalProjectionWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords;

- (GeogebraCommonKernelMatrixCoordMatrix *)getParametricMatrix;

- (GeogebraCommonKernelMatrixCoords *)getPointWithDouble:(jdouble)x2d
                                              withDouble:(jdouble)y2d;

- (IOSObjectArray *)getProjectionWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)oldCoords
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)willingCoords
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)willingDirection;

- (jboolean)getTrace;

- (jdouble)getXmax;

- (jdouble)getXmin;

- (jdouble)getXPlateMax;

- (jdouble)getXPlateMin;

- (jdouble)getYmax;

- (jdouble)getYmin;

- (jdouble)getYPlateMax;

- (jdouble)getYPlateMin;

- (jboolean)hasView2DVisible;

- (jboolean)isDefined;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)Geo;

- (jboolean)isFillable;

- (jboolean)isGeoPlane;

- (jboolean)isGridVisible;

- (jboolean)isInRegionWithDouble:(jdouble)x0
                      withDouble:(jdouble)y0;

- (jboolean)isInRegionWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (jboolean)isMoveable;

- (jboolean)isPlateVisible;

- (jboolean)isRegion;

- (jboolean)isTraceable;

- (jboolean)isTranslateable;

- (void)mirrorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)pointChangedForRegionWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)regionChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)removeView2D;

- (void)rotateWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)rot
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)center;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiVal;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiVal
                  withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiVal
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiVal
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q
             withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z
                 withDouble:(jdouble)w;

- (void)setCoordSysWithGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)cs;

- (void)setEquationWithDouble:(jdouble)a
                   withDouble:(jdouble)b
                   withDouble:(jdouble)c
                   withDouble:(jdouble)d;

- (void)setEuclidianViewForPlaneWithGeogebraCommonEuclidianEuclidianViewCompanion:(GeogebraCommonEuclidianEuclidianViewCompanion *)view;

- (void)setFadingWithFloat:(jfloat)fading;

- (void)setGridCornersWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2;

- (void)setGridDistancesWithDouble:(jdouble)dx
                        withDouble:(jdouble)dy;

- (jboolean)setGridVisibleWithBoolean:(jboolean)grid;

- (void)setPlateCornersWithDouble:(jdouble)x1
                       withDouble:(jdouble)y1
                       withDouble:(jdouble)x2
                       withDouble:(jdouble)y2;

- (void)setPlateVisibleWithBoolean:(jboolean)flag;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (void)setView2DVisibleWithBoolean:(jboolean)flag;

- (void)setVisualStyleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)showInAlgebraView;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)translateWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

- (void)update;

#pragma mark Protected

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)showInEuclidianView;

@end

J2OBJC_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D, coordsys_, GeogebraCommonKernelMatrixCoordSys *)

FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_VAR_STRING_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D, VAR_STRING_, IOSObjectArray *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_withDouble_(GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, jdouble a, jdouble b, jdouble c, jdouble d);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_withDouble_(GeogebraCommonKernelConstruction *cons, NSString *label, jdouble a, jdouble b, jdouble c, jdouble d) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_H_
