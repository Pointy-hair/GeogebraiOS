//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedronNet.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPolyhedron.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelConstructionElementCycle;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSObjectArray;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelKernelNDGeoSegmentND;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet : GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (void)clearIndexes;

- (void)createFaces;

- (id<GeogebraCommonKernelKernelNDGeoSegmentND>)createNewSegmentWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)startPoint
                                                                withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)endPoint
                                                          withGeogebraCommonKernelConstructionElementCycle:(GeogebraCommonKernelConstructionElementCycle *)key;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)createPolygonWithGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                                                                                                           withInt:(jint)index;

- (jdouble)getDouble;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (NSString *)getTypeString;

- (jboolean)isGeoPolyhedron;

- (void)setEuclidianVisibleWithBoolean:(jboolean)visible;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringMinimalWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *new_GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet_H_
