//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoSegment3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_H_
#define _GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoCoordSys1D.h"
#include "geogebra/common/kernel/kernelND/GeoSegmentND.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D;
@class GeogebraCommonKernelArithmeticMyDouble;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoElement_HitTypeEnum;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelMyPoint;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonKernelTransform;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelPathMover;

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D : GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D < GeogebraCommonKernelKernelNDGeoSegmentND >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p1
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p2;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p1
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p2
                                             withBoolean:(jboolean)isIntersection;

- (jboolean)allowOutlyingIntersections;

- (GeogebraCommonKernelGeosGeoElement *)copyFreeSegment OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelGeosGeoElement *)copyInternalWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons2 OBJC_METHOD_FAMILY_NONE;

- (id<GeogebraCommonKernelPathMover>)createPathMover;

- (IOSObjectArray *)createTransformedObjectWithGeogebraCommonKernelTransform:(GeogebraCommonKernelTransform *)t
                                                                withNSString:(NSString *)labelTrans;

- (jdouble)getDouble;

- (GeogebraCommonKernelGeosGeoElement *)getEndPointAsGeoElement;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (jdouble)getLength;

- (jdouble)getMaxParameter;

- (IOSObjectArray *)getMetas;

- (jint)getMetasLength;

- (jdouble)getMinParameter;

- (GeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (GeogebraCommonKernelMatrixCoords *)getPointCoordsWithDouble:(jdouble)parameter;

- (jdouble)getPointXWithDouble:(jdouble)parameter;

- (jdouble)getPointYWithDouble:(jdouble)parameter;

- (GeogebraCommonKernelGeosGeoElement *)getStartPointAsGeoElement;

- (jboolean)isAllEndpointsLabelsSet;

- (jboolean)isClosedPath;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isEqualWithGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)geo;

- (jboolean)isGeoLine;

- (jboolean)isGeoSegment;

- (jboolean)isIntersectionPointIncidentWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p
                                                                 withDouble:(jdouble)eps;

- (jboolean)isLimitedPath;

- (jboolean)isNumberValue;

- (jboolean)isOnPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p
                                              withDouble:(jdouble)eps;

- (jboolean)isValidCoordWithDouble:(jdouble)x;

- (jboolean)keepsTypeOnGeometricTransform;

- (void)modifyInputPointsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
                         withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q;

- (void)modifyInputPolyAndPointsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)poly
                            withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
                            withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q;

- (void)removePointOnLineWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (jboolean)respectLimitedPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p
                                                        withDouble:(jdouble)eps;

- (jboolean)respectLimitedPathWithDouble:(jdouble)parameter;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setAllowOutlyingIntersectionsWithBoolean:(jboolean)flag;

- (void)setCoordsWithGeogebraCommonKernelMyPoint:(GeogebraCommonKernelMyPoint *)locusPoint
                 withGeogebraCommonKernelMyPoint:(GeogebraCommonKernelMyPoint *)locusPoint2;

- (void)setFromMetaWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)poly;

- (void)setKeepTypeOnGeometricTransformWithBoolean:(jboolean)flag;

- (void)setPointsWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)start
                 withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)end;

- (void)setSegmentWithGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)seg;

- (void)setStandardStartPoint;

- (void)setTwoPointsInhomCoordsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)start
                               withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)end;

- (jboolean)showInAlgebraView;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (GeogebraCommonGeogebra3DKernel3DGeosGeoCoordSys1D *)createWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons2;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)showInEuclidianView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> p1, id<GeogebraCommonKernelKernelNDGeoPointND> p2);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> p1, id<GeogebraCommonKernelKernelNDGeoPointND> p2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> p1, id<GeogebraCommonKernelKernelNDGeoPointND> p2, jboolean isIntersection);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D *new_GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> p1, id<GeogebraCommonKernelKernelNDGeoPointND> p2, jboolean isIntersection) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D)

#endif // _GeogebraCommonGeogebra3DKernel3DGeosGeoSegment3D_H_
