//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/ConstructionDefaults3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_H_
#define _GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/ConstructionDefaults.h"

@class GeogebraCommonAwtGColor;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class JavaLangStringBuilder;

#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_INTERSECTION_CURVE 3150
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_AXIS3D 3103
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_CURVECARTESIAN3D 3106
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_PLANE3D 3200
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_POLYHEDRON 3300
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_QUADRIC 3301
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_FUNCTION_NVAR 3302
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_SURFACECARTESIAN3D 3304
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_NET 3305
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_PLANE3D_ALPHA 0.5f
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_PLANE3D_GRID_THICKNESS 1
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_PLANE3D_FADING 0.1f
#define GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_DEFAULT_POLYHEDRON_ALPHA 0.4f

@interface GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D : GeogebraCommonKernelConstructionDefaults

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (void)createDefaultGeoElements;

- (jint)getDefaultTypeWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

#pragma mark Protected

- (void)getXMLWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                           withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_INTERSECTION_CURVE, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_AXIS3D, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_CURVECARTESIAN3D, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_PLANE3D, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_POLYHEDRON, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_QUADRIC, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_FUNCTION_NVAR, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_SURFACECARTESIAN3D, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_NET, jint)

FOUNDATION_EXPORT GeogebraCommonAwtGColor *GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_colCurveCartesian3D_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, colCurveCartesian3D_, GeogebraCommonAwtGColor *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_PLANE3D_ALPHA, jfloat)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_PLANE3D_GRID_THICKNESS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_PLANE3D_FADING, jfloat)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, DEFAULT_POLYHEDRON_ALPHA, jfloat)

FOUNDATION_EXPORT GeogebraCommonAwtGColor *GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_colIntersectionCurve_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, colIntersectionCurve_, GeogebraCommonAwtGColor *)

FOUNDATION_EXPORT GeogebraCommonAwtGColor *GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_colXAXIS_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, colXAXIS_, GeogebraCommonAwtGColor *)

FOUNDATION_EXPORT GeogebraCommonAwtGColor *GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_colYAXIS_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, colYAXIS_, GeogebraCommonAwtGColor *)

FOUNDATION_EXPORT GeogebraCommonAwtGColor *GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_colZAXIS_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D, colZAXIS_, GeogebraCommonAwtGColor *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D *self, GeogebraCommonKernelConstruction *cons);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D *new_GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *cons) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D)

#endif // _GeogebraCommonGeogebra3DKernel3DConstructionDefaults3D_H_
