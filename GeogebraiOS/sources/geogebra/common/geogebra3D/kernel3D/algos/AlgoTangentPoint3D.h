//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoTangentPoint3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_H_
#define _GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoTangentPointND.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelKernelNDAlgoIntersectND;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class IOSObjectArray;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D : GeogebraCommonKernelAlgosAlgoTangentPointND

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c;

- (void)initForNearToRelationship OBJC_METHOD_FAMILY_NONE;

+ (void)initForNearToRelationshipWithGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)tangentPoints
                                       withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)tangent
                                 withGeogebraCommonKernelKernelNDAlgoIntersectND:(GeogebraCommonKernelKernelNDAlgoIntersectND *)algoIntersect OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (jboolean)checkUndefined;

- (jboolean)isIntersectionPointIncident;

- (void)setPolar;

- (void)setTangentFromPolarWithInt:(jint)i;

- (void)setTangents;

- (void)updatePolarLine;

- (void)updateTangents;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoPointND> P, GeogebraCommonKernelKernelNDGeoConicND *c);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoPointND> P, GeogebraCommonKernelKernelNDGeoConicND *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_initForNearToRelationshipWithGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDAlgoIntersectND_(IOSObjectArray *tangentPoints, id<GeogebraCommonKernelKernelNDGeoLineND> tangent, GeogebraCommonKernelKernelNDAlgoIntersectND *algoIntersect);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D)

#endif // _GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentPoint3D_H_
