//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoTangentCurve3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_H_
#define _GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoLinePoint.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D;
@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelStringTemplate;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D : GeogebraCommonGeogebra3DKernel3DAlgosAlgoLinePoint

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)f;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getLine;

- (jint)getRelatedModeID;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getTangent;

- (void)initialize__WithGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)f1 OBJC_METHOD_FAMILY_NONE;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (GeogebraCommonKernelMatrixCoords *)getDirection;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getPoint;

- (void)setInputOutput;

#pragma mark Package-Private

- (GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)getCurve;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *f);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *f) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D)

#endif // _GeogebraCommonGeogebra3DKernel3DAlgosAlgoTangentCurve3D_H_
