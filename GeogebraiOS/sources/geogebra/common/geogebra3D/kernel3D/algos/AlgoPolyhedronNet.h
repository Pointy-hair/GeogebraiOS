//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoPolyhedronNet.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_H_
#define _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet;
@class GeogebraCommonKernelAlgosAlgoElement_OutputHandler;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoPolygon;
@class GeogebraCommonKernelMatrixCoords;
@class IOSObjectArray;
@protocol GeogebraCommonKernelAlgosGetCommand;
@protocol GeogebraCommonKernelArithmeticNumberValue;

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet : GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D {
 @public
  GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p_;
  id<GeogebraCommonKernelArithmeticNumberValue> v_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputNet_;
  jint bottomPointsLength_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPointsBottom_, *outputPointsSide_, *outputPointsTop_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputSegmentsBottom_, *outputSegmentsSide_, *outputSegmentsTop_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPolygonsBottom_, *outputPolygonsSide_, *outputPolygonsTop_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                       withNSStringArray:(IOSObjectArray *)labels
   withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)p
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)v;

- (void)compute;

- (id<GeogebraCommonKernelAlgosGetCommand>)getClassName;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedronNet *)getNet;

- (jint)getRelatedModeID;

#pragma mark Protected

- (void)adjustOutputSizeWithInt:(jint)n;

- (void)computeWithDouble:(jdouble)f
withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)bottomPolygon
withGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)points;

- (void)createNetWithInt:(jint)n;

- (jint)getPointLengthFromLabelsLengthWithInt:(jint)length;

+ (IOSObjectArray *)getPointsCoordsWithGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)polygon;

- (void)rotateWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)point
                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)pointCoords
                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)projectCoords
                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vs
                                                      withDouble:(jdouble)f
                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)fd
                                                      withDouble:(jdouble)dist
                                                     withBoolean:(jboolean)test;

- (void)setOutputSideTopWithInt:(jint)n
withGeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPolygon3D *)polygon
                        withInt:(jint)step
withGeogebraCommonKernelKernelNDGeoSegmentNDArray:(IOSObjectArray *)segments;

- (void)updateBottomWithInt:(jint)newBottomPointsLength;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, p_, GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, v_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputNet_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputPointsBottom_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputPointsSide_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputPointsTop_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputSegmentsBottom_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputSegmentsSide_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputSegmentsTop_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputPolygonsBottom_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputPolygonsSide_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet, outputPolygonsTop_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet *self, GeogebraCommonKernelConstruction *c, IOSObjectArray *labels, GeogebraCommonGeogebra3DKernel3DGeosGeoPolyhedron *p, id<GeogebraCommonKernelArithmeticNumberValue> v);

FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_getPointsCoordsWithGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelGeosGeoPolygon *polygon);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet)

#endif // _GeogebraCommonGeogebra3DKernel3DAlgosAlgoPolyhedronNet_H_
