//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoRotate3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D_H_
#define _GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoTransformation.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDRotateableND;

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D : GeogebraCommonKernelAlgosAlgoTransformation {
 @public
  GeogebraCommonKernelGeosGeoElement *inGeo_, *outGeo_;
  id<GeogebraCommonKernelKernelNDRotateableND> out_;
  id<GeogebraCommonKernelArithmeticNumberValue> angle_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)inArg
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)angle;

- (GeogebraCommonKernelGeosGeoElement *)getResult;

#pragma mark Protected

- (GeogebraCommonKernelGeosGeoElement *)copy__WithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelGeosGeoElement *)copyInternalWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelGeosGeoElement *)getResultTemplateWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setOutput;

- (void)setTransformedObjectWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g2;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D, inGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D, outGeo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D, out_, id<GeogebraCommonKernelKernelNDRotateableND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D, angle_, id<GeogebraCommonKernelArithmeticNumberValue>)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *inArg, id<GeogebraCommonKernelArithmeticNumberValue> angle);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D)

#endif // _GeogebraCommonGeogebra3DKernel3DAlgosAlgoRotate3D_H_
