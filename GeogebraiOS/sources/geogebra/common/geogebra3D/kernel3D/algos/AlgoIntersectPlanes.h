//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectPlanes.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_H_
#define _GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoIntersectCoordSys.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeoElement3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D;
@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelMatrixCoordSys;
@protocol GeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol GeogebraCommonKernelKernelNDGeoPlaneND;

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes : GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectCoordSys

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPlaneND:(id<GeogebraCommonKernelKernelNDGeoPlaneND>)cs1
              withGeogebraCommonKernelKernelNDGeoPlaneND:(id<GeogebraCommonKernelKernelNDGeoPlaneND>)cs2;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPlaneND:(id<GeogebraCommonKernelKernelNDGeoPlaneND>)cs1
              withGeogebraCommonKernelKernelNDGeoPlaneND:(id<GeogebraCommonKernelKernelNDGeoPlaneND>)cs2;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

+ (jint)getConfigPlanePlaneWithGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)cs1
                           withGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)cs2;

+ (jint)getConfigPlanePlaneWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane1
                           withGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane2;

+ (GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getIntersectPlanePlaneWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                                       withGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)cs1
                                                                       withGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)cs2;

+ (GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *)getIntersectPlanePlaneWithGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)cs1
                                                                         withGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)cs2;

#pragma mark Protected

- (GeogebraCommonGeogebra3DKernel3DGeosGeoElement3D *)createIntersectionWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (NSString *)getIntersectionTypeString;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes)

FOUNDATION_EXPORT jint GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_RESULTCATEGORY_NA_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_NA_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_NA_, jint)

FOUNDATION_EXPORT jint GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_RESULTCATEGORY_GENERAL_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_GENERAL_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_GENERAL_, jint)

FOUNDATION_EXPORT jint GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_RESULTCATEGORY_PARALLEL_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_PARALLEL_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_PARALLEL_, jint)

FOUNDATION_EXPORT jint GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_RESULTCATEGORY_CONTAINED_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_CONTAINED_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes, RESULTCATEGORY_CONTAINED_, jint)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPlaneND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs1, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs2);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPlaneND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs1, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPlaneND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs1, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs2);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPlaneND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs1, id<GeogebraCommonKernelKernelNDGeoPlaneND> cs2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_getIntersectPlanePlaneWithGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(id<GeogebraCommonKernelKernelNDGeoCoordSys2D> cs1, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> cs2);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DGeosGeoLine3D *GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_getIntersectPlanePlaneWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelMatrixCoordSys_withGeogebraCommonKernelMatrixCoordSys_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelMatrixCoordSys *cs1, GeogebraCommonKernelMatrixCoordSys *cs2);

FOUNDATION_EXPORT jint GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_getConfigPlanePlaneWithGeogebraCommonKernelKernelNDGeoCoordSys2D_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane1, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane2);

FOUNDATION_EXPORT jint GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_getConfigPlanePlaneWithGeogebraCommonKernelMatrixCoordSys_withGeogebraCommonKernelMatrixCoordSys_(GeogebraCommonKernelMatrixCoordSys *cs1, GeogebraCommonKernelMatrixCoordSys *cs2);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes)

#endif // _GeogebraCommonGeogebra3DKernel3DAlgosAlgoIntersectPlanes_H_
