//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/transform/TransformMirror3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_H_
#define _GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/TransformMirror.h"

@class GeogebraCommonKernelAlgosAlgoTransformation;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@protocol GeogebraCommonKernelKernelNDGeoCoordSys2D;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D : GeogebraCommonKernelTransformMirror

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
           withGeogebraCommonKernelKernelNDGeoCoordSys2D:(id<GeogebraCommonKernelKernelNDGeoCoordSys2D>)plane;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point;

#pragma mark Protected

- (GeogebraCommonKernelAlgosAlgoTransformation *)getTransformAlgoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> point);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D *new_GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> point) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoLineND> line);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D *new_GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoLineND> line) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D *new_GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoCoordSys2D_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoCoordSys2D> plane) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D)

#endif // _GeogebraCommonGeogebra3DKernel3DTransformTransformMirror3D_H_
