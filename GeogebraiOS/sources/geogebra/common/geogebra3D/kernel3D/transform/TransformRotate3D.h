//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/transform/TransformRotate3D.java
//

#ifndef _GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D_H_
#define _GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/TransformRotate.h"

@class GeogebraCommonKernelAlgosAlgoTransformation;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@protocol GeogebraCommonKernelGeosGeoNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D : GeogebraCommonKernelTransformRotate

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)angle
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)angle
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)center
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

#pragma mark Protected

- (GeogebraCommonKernelAlgosAlgoTransformation *)getTransformAlgoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoNumberValue> angle, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D *new_GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoNumberValue> angle, id<GeogebraCommonKernelKernelNDGeoPointND> center, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoNumberValue> angle, id<GeogebraCommonKernelKernelNDGeoLineND> line);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D *new_GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoNumberValue_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosGeoNumberValue> angle, id<GeogebraCommonKernelKernelNDGeoLineND> line) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D)

#endif // _GeogebraCommonGeogebra3DKernel3DTransformTransformRotate3D_H_
