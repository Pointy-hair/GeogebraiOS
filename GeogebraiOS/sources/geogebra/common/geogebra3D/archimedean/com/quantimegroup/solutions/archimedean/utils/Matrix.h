//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/utils/Matrix.java
//

#ifndef _GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_H_
#define _GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_H_

#include "J2ObjC_header.h"

@class GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple;
@class IOSObjectArray;

@interface GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix : NSObject {
 @public
  IOSObjectArray *mat__;
}

#pragma mark Protected

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)timesWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B;

#pragma mark Package-Private

- (instancetype)init;

- (instancetype)initWithDoubleArray2:(IOSObjectArray *)m;

- (instancetype)initWithInt:(jint)numRow
                    withInt:(jint)numCol;

- (instancetype)initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)m;

- (instancetype)initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)X
                    withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)Y
                    withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)Z;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)adjoint;

- (jdouble)determinant;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)dividedByWithDouble:(jdouble)x;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)dividedByWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B;

- (void)dividedByEqualsWithDouble:(jdouble)x;

- (jboolean)equalsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)m;

+ (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)identityWithInt:(jint)r;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)inverse;

- (IOSObjectArray *)mat;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)minorWithInt:(jint)r
                                                                                             withInt:(jint)c;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)minusWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B;

- (jint)numColumns;

- (jint)numRows;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)plusWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)timesWithDouble:(jdouble)x;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)timesWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *)p;

- (void)timesEqualsWithDouble:(jdouble)x;

- (void)timesEqualsWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix:(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)B;

- (GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *)transpose;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix, mat__, IOSObjectArray *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_init(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, jint numRow, jint numCol);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithInt_withInt_(jint numRow, jint numCol) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *X, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Y, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Z);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_withGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *X, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Y, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsOrderedTriple *Z) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithDoubleArray2_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, IOSObjectArray *m);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithDoubleArray2_(IOSObjectArray *m) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_identityWithInt_(jint r);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *self, GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *m);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_initWithGeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix *m) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix)

#endif // _GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanUtilsMatrix_H_
