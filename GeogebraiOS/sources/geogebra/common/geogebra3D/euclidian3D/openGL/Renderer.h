//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/openGL/Renderer.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_H_
#define _GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_H_

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class GeogebraCommonAwtGColor;
@class GeogebraCommonAwtGPoint;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForView;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DHitting;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLManager;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLTextures;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoNumeric;
@class GeogebraCommonKernelMatrixCoordMatrix4x4;
@class GeogebraCommonKernelMatrixCoords;
@class IOSByteArray;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSObjectArray;
@protocol GeogebraCommonAwtGBufferedImage;

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_MOUSE_PICK_DEPTH 10
#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ARROW_TYPE_NONE 0
#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ARROW_TYPE_SIMPLE 1
#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PICKING_MODE_OBJECTS 0
#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PICKING_MODE_LABELS 1
#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_EYE_LEFT 0
#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_EYE_RIGHT 1

@interface GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer : NSObject {
 @public
  IOSObjectArray *drawHits_;
  jint pickingLoop_;
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForView *drawable3DLists_;
  GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D_;
  GeogebraCommonKernelMatrixCoordMatrix4x4 *m_drawingMatrix_;
  GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *geometryManager_;
  GeogebraCommonGeogebra3DEuclidian3DOpenGLTextures *textures_;
  GeogebraCommonAwtGPoint *mouse_;
  jboolean waitForPick_;
  jint pickingMode_;
  jboolean enableClipPlanes__;
  jboolean waitForUpdateClipPlanes_;
  jint oldGeoToPickSize_;
  jint geoToPickSize_;
  jboolean needsNewPickingBuffer_;
  jboolean waitForUpdateClearColor_;
  jint left_;
  jint right_;
  jint bottom_;
  jint top_;
  jboolean waitForDisableStencilLines_;
  jboolean waitForSetStencilLines_;
  jdouble eyeToScreenDistance_;
  jdouble perspNear_;
  jdouble perspLeft_;
  jdouble perspRight_;
  jdouble perspBottom_;
  jdouble perspTop_;
  jdouble perspFar_;
  jdouble perspDistratio_;
  jdouble perspFocus_;
  GeogebraCommonKernelMatrixCoords *perspEye_;
  jdouble glassesEyeSep_;
  jdouble glassesEyeSep1_;
  jdouble glassesEyesSide_;
  jdouble glassesEyesSide1_;
  jdouble glassesEyesHeight_;
  jdouble glassesEyesHeight1_;
  jint eye_;
  jdouble obliqueX_;
  jdouble obliqueY_;
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum *exportType_;
  jint export_n_;
  jdouble export_val_;
  jdouble export_min_;
  jdouble export_max_;
  jdouble export_step_;
  jint export_i_;
  GeogebraCommonKernelGeosGeoNumeric *export_num_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view;

- (void)addOneGeoToPick;

- (void)bindTextureWithInt:(jint)index;

- (void)createAlphaTextureWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D *)label
                                             withGeogebraCommonAwtGBufferedImage:(id<GeogebraCommonAwtGBufferedImage>)bimg;

- (id<GeogebraCommonAwtGBufferedImage>)createBufferedImageWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D *)label;

- (void)disableAlphaTest;

- (void)disableBlending;

- (void)disableClipPlanesIfNeeded;

- (void)disableCulling;

- (void)disableDepthMask;

- (void)disableDepthTest;

- (void)disableLighting;

- (void)disableMultisample;

- (void)disableTextures;

- (void)disableTextures2D;

- (void)display;

- (void)drawCompletingCursorWithDouble:(jdouble)value
  withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)color;

- (void)drawCursorWithInt:(jint)type;

- (void)drawMouseCursor;

- (void)drawPolygonWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)n
              withGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)v;

- (void)drawScene;

- (void)drawViewInFrontOf;

- (void)enableAlphaTest;

- (void)enableBlending;

- (void)enableClipPlanesIfNeeded;

- (void)enableCulling;

- (void)enableDash;

- (void)enableDepthMask;

- (void)enableDepthTest;

- (void)enableFading;

- (void)enableLighting;

- (void)enableMultisample;

- (void)enableTextures;

- (void)enableTextures2D;

- (void)endPolygons;

- (void)exportToClipboard;

+ (jint)firstPowerOfTwoGreaterThanWithInt:(jint)val;

- (void)genTextures2DWithInt:(jint)number
                withIntArray:(IOSIntArray *)index;

- (jint)getBottom;

- (jdouble)getEyeSep;

- (jdouble)getEyeToScreenDistance;

- (GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)getGeometryManager;

- (jint)getHeight;

- (GeogebraCommonGeogebra3DEuclidian3DHitting *)getHitting;

- (IOSDoubleArray *)getIntervalInFrustumWithDoubleArray:(IOSDoubleArray *)minmax
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                            withBoolean:(jboolean)extendedDepth;

- (GeogebraCommonKernelGeosGeoElement *)getLabelHitWithGeogebraCommonAwtGPoint:(GeogebraCommonAwtGPoint *)mouseLoc;

- (jint)getLeft;

- (GeogebraCommonKernelMatrixCoordMatrix4x4 *)getMatrix;

- (GeogebraCommonKernelMatrixCoords *)getObliqueOrthoDirection;

- (jdouble)getObliqueX;

- (jdouble)getObliqueY;

- (GeogebraCommonKernelMatrixCoords *)getPerspEye;

- (jint)getRight;

- (jdouble)getScreenZFromPickingDepthWithDouble:(jdouble)z;

- (GeogebraCommonGeogebra3DEuclidian3DOpenGLTextures *)getTextures;

- (jint)getTop;

- (jint)getVisibleDepth;

- (jint)getWidth;

- (void)glLoadNameWithInt:(jint)loop;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (void)initLighting OBJC_METHOD_FAMILY_NONE;

- (void)initMatrix OBJC_METHOD_FAMILY_NONE;

- (void)pickWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)d
                                                      withBoolean:(jboolean)intersection
withGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (void)pickWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)d
withGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (void)pickIntersectionCurves;

- (void)pickLabelWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)d;

- (void)removeOneGeoToPick;

- (void)resetMatrix;

- (void)resumeAnimator;

- (void)setArrowLengthWithDouble:(jdouble)a_arrowLength;

- (void)setArrowTypeWithInt:(jint)a_arrowType;

- (void)setArrowWidthWithDouble:(jdouble)a_arrowWidth;

- (void)setClearColorWithFloat:(jfloat)r
                     withFloat:(jfloat)g
                     withFloat:(jfloat)b
                     withFloat:(jfloat)a;

- (void)setClipPlanesWithDoubleArray2:(IOSObjectArray *)minMax;

- (void)setColorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)color;

- (void)setColorWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color;

- (void)setColorMaskWithBoolean:(jboolean)r
                    withBoolean:(jboolean)g
                    withBoolean:(jboolean)b
                    withBoolean:(jboolean)a;

- (void)setCullFaceBack;

- (void)setCullFaceFront;

- (void)setDashTextureWithInt:(jint)index;

- (void)setDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForView:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForView *)dl;

- (void)setEnableClipPlanesWithBoolean:(jboolean)flag;

- (void)setHitsWithGeogebraCommonAwtGPoint:(GeogebraCommonAwtGPoint *)mouseLoc
                                   withInt:(jint)threshold;

- (void)setLabelOriginWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)origin;

- (void)setLayerWithFloat:(jfloat)l;

- (void)setLineWidthWithDouble:(jdouble)width;

- (void)setMatrixWithGeogebraCommonKernelMatrixCoordMatrix4x4:(GeogebraCommonKernelMatrixCoordMatrix4x4 *)a_matrix;

- (void)setMouseLocWithGeogebraCommonAwtGPoint:(GeogebraCommonAwtGPoint *)p
                                       withInt:(jint)pickingMode;

- (void)setNearWithDouble:(jdouble)val;

- (void)setTextureLinear;

- (void)setTextureNearest;

- (void)setViewWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)w
               withInt:(jint)h;

- (void)setWaitForDisableStencilLines;

- (void)setWaitForSetStencilLines;

- (void)setWaitForUpdateClearColor;

- (jint)startPolygonsWithInt:(jint)old;

- (void)textureImage2DWithInt:(jint)sizeX
                      withInt:(jint)sizeY
                withByteArray:(IOSByteArray *)buf;

- (void)updateGlassesValues;

- (void)updateOrthoValues;

- (void)updateProjectionObliqueValues;

- (void)uploadToGeoGebraTube;

- (jboolean)useLogicalPicking;

#pragma mark Protected

- (void)clearColorBuffer;

- (void)clearDepthBuffer;

+ (IOSObjectArray *)createDrawableListForPickingWithInt:(jint)bufSize;

- (GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)createManager;

- (void)disableClipPlanes;

- (void)disableStencilLines;

- (void)doPick;

- (void)draw;

- (void)drawFaceToScreen;

- (void)drawNotTransp;

- (void)drawSurfacesOutline;

- (void)drawTransp;

- (void)drawTranspNotCurved;

- (void)enableClipPlanes;

- (void)enableNormalNormalized;

- (void)enablePolygonOffsetFill;

- (void)exportImage;

- (IOSFloatArray *)getLightPosition;

- (void)initRenderingValues OBJC_METHOD_FAMILY_NONE;

- (void)initShaders OBJC_METHOD_FAMILY_NONE;

- (jboolean)intersectsMouse3DWithDouble:(jdouble)zNear
                             withDouble:(jdouble)zFar
                             withDouble:(jdouble)mouseZ;

- (void)pushSceneMatrix;

- (void)setAlphaFunc;

- (void)setBlendFunc;

- (void)setBufferLeft;

- (void)setBufferRight;

- (void)setColorWithFloat:(jfloat)r
                withFloat:(jfloat)g
                withFloat:(jfloat)b
                withFloat:(jfloat)a;

- (void)setColorMask;

- (void)setColorMaterial;

- (void)setDepthFunc;

- (void)setDrawLeft;

- (void)setDrawRight;

- (void)setGLForPicking;

- (void)setLightWithInt:(jint)light;

- (void)setLightAmbiantDiffuseWithFloat:(jfloat)ambiant0
                              withFloat:(jfloat)diffuse0
                              withFloat:(jfloat)ambiant1
                              withFloat:(jfloat)diffuse1;

- (void)setLightModel;

- (void)setLightPosition;

- (void)setLightPositionWithFloatArray:(IOSFloatArray *)values;

- (void)setMatrixView;

- (void)setProjectionMatrix;

- (void)setProjectionMatrixForPicking;

- (void)setStencilFuncWithInt:(jint)value;

- (void)setStencilLines;

- (void)setView;

- (void)unsetMatrixView;

- (void)updateClearColor;

- (void)updatePerspValues;

- (void)updateViewAndDrawables;

- (void)useShaderProgram;

- (void)viewGlasses;

- (void)viewOblique;

- (void)viewOrtho;

- (void)viewPersp;

@end

J2OBJC_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, drawHits_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, drawable3DLists_, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForView *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, view3D_, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, m_drawingMatrix_, GeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, geometryManager_, GeogebraCommonGeogebra3DEuclidian3DOpenGLManager *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, textures_, GeogebraCommonGeogebra3DEuclidian3DOpenGLTextures *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, mouse_, GeogebraCommonAwtGPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, perspEye_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, exportType_, GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, export_num_, GeogebraCommonKernelGeosGeoNumeric *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, MOUSE_PICK_DEPTH, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, ARROW_TYPE_NONE, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, ARROW_TYPE_SIMPLE, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, PICKING_MODE_OBJECTS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, PICKING_MODE_LABELS, jint)

FOUNDATION_EXPORT IOSFloatArray *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_LIGHT_POSITION_W_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, LIGHT_POSITION_W_, IOSFloatArray *)

FOUNDATION_EXPORT IOSFloatArray *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_LIGHT_POSITION_D_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, LIGHT_POSITION_D_, IOSFloatArray *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, EYE_LEFT, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer, EYE_RIGHT, jint)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view);

FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_createDrawableListForPickingWithInt_(jint bufSize);

FOUNDATION_EXPORT jint GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_firstPowerOfTwoGreaterThanWithInt_(jint val);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer)

typedef NS_ENUM(NSUInteger, GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingType) {
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingType_POINT_OR_CURVE = 0,
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingType_SURFACE = 1,
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingType_LABEL = 2,
};

@interface GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_values();

+ (GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum)

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_values_[];

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_POINT_OR_CURVE GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingType_POINT_OR_CURVE]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum, POINT_OR_CURVE)

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_SURFACE GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingType_SURFACE]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum, SURFACE)

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_LABEL GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingType_LABEL]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum, LABEL)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum)

typedef NS_ENUM(NSUInteger, GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType) {
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_NONE = 0,
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_ANIMATEDGIF = 1,
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_THUMBNAIL_IN_GGBFILE = 2,
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_PNG = 3,
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_CLIPBOARD = 4,
  GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_UPLOAD_TO_GEOGEBRATUBE = 5,
};

@interface GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values();

+ (GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum)

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum *GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values_[];

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_NONE GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_NONE]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum, NONE)

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_ANIMATEDGIF GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_ANIMATEDGIF]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum, ANIMATEDGIF)

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_THUMBNAIL_IN_GGBFILE GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_THUMBNAIL_IN_GGBFILE]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum, THUMBNAIL_IN_GGBFILE)

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_PNG GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_PNG]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum, PNG)

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_CLIPBOARD GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_CLIPBOARD]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum, CLIPBOARD)

#define GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_UPLOAD_TO_GEOGEBRATUBE GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum_values_[GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportType_UPLOAD_TO_GEOGEBRATUBE]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum, UPLOAD_TO_GEOGEBRATUBE)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_ExportTypeEnum)

#endif // _GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_H_
