//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/EuclidianController3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/EuclidianController.h"

@class GeogebraCommonAwtGPoint;
@class GeogebraCommonEuclidianEuclidianControllerCompanion;
@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonEuclidianEventAbstractEvent;
@class GeogebraCommonEuclidianEventPointerEventTypeEnum;
@class GeogebraCommonEuclidianHits;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DTextDispatcher3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D;
@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelGeosGeoAngle;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class GeogebraCommonKernelMatrixCoordMatrix4x4;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonMainApp;
@class GeogebraCommonUtilAsyncOperation;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol GeogebraCommonEuclidianPreviewable;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelGeosGeoNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelKernelNDGeoVectorND;

#define GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_ANGLE_TO_DEGREES 0.017453292519943295
#define GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_ANGLE_MAX 90

@interface GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D : GeogebraCommonEuclidianEuclidianController {
 @public
  IOSDoubleArray *zMinMax_;
  GeogebraCommonKernelMatrixCoordMatrix4x4 *currentPlane_;
  GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D_;
  GeogebraCommonKernelMatrixCoords *pickPoint_;
  jboolean viewRotationOccured_;
  JavaUtilArrayList *selectedCS2D_;
  jboolean mouseMoved_;
  GeogebraCommonEuclidianEventAbstractEvent *mouseEvent_;
  jdouble startPointZ_;
  JavaUtilArrayList *selectedCS1D_;
  JavaUtilArrayList *selectedQuadric_;
  JavaUtilArrayList *selectedQuadricLimited_;
  JavaUtilArrayList *selectedPolyhedron_;
  GeogebraCommonKernelMatrixCoords *translationVec3D_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app;

- (void)addOffsetForTranslationWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o;

- (void)clearSelected;

- (jboolean)createIntersectionCurveWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)A
                                   withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)B;

- (jboolean)cursor3DVisibleForCurrentModeWithInt:(jint)cursorType;

- (JavaUtilArrayList *)getIntersectionCurves;

- (GeogebraCommonKernelGeosGeoElement *)getMovedGeoPoint;

- (GeogebraCommonKernelMatrixCoords *)getNormalTranslateDirection;

- (jint)getPointMoveMode;

- (jboolean)hasInput3D;

- (void)processModeLock;

- (IOSObjectArray *)rotateAroundLineWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geoRot
                                withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)phi
                                 withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

+ (NSString *)rotateObjectWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
                                       withNSString:(NSString *)inputText
                                        withBoolean:(jboolean)clockwise
        withGeogebraCommonKernelGeosGeoPolygonArray:(IOSObjectArray *)polys
     withGeogebraCommonKernelKernelNDGeoLineNDArray:(IOSObjectArray *)lines
        withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)selGeos
withGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *)ec;

- (void)setDialogOccurred;

- (void)setHandledGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setModeWithInt:(jint)newMode;

- (void)setMovedGeoPointWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setStartPointLocation;

- (void)setStartPointLocationWithOriginWithDouble:(jdouble)x
                                       withDouble:(jdouble)y;

- (void)setView3DWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view;

- (void)showDrawingPadPopupWithGeogebraCommonAwtGPoint:(GeogebraCommonAwtGPoint *)mouseLoc1;

- (void)transformCoords;

- (void)update;

- (void)updateInput3D;

- (void)updateOwnDrawablesNow;

- (jboolean)useInputDepthForHitting;

- (jboolean)viewOrientationForClockwiseWithBoolean:(jboolean)clockwise
         withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)line;

- (void)wrapMouseDraggedWithGeogebraCommonEuclidianEventAbstractEvent:(GeogebraCommonEuclidianEventAbstractEvent *)event
                                                          withBoolean:(jboolean)startCapture;

- (void)wrapMousePressedWithGeogebraCommonEuclidianEventAbstractEvent:(GeogebraCommonEuclidianEventAbstractEvent *)e;

- (void)wrapMouseReleasedWithGeogebraCommonEuclidianEventAbstractEvent:(GeogebraCommonEuclidianEventAbstractEvent *)e;

#pragma mark Protected

- (GeogebraCommonEuclidianHits *)addPointCreatedForMouseReleasedWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (jint)addSelectedCS1DWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                               withInt:(jint)max
                                           withBoolean:(jboolean)addMoreThanOneAllowed;

- (jint)addSelectedCS2DWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                               withInt:(jint)max
                                           withBoolean:(jboolean)addMoreThanOneAllowed;

- (jint)addSelectedPlaneWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                withInt:(jint)max
                                            withBoolean:(jboolean)addMoreThanOneAllowed;

- (jint)addSelectedPlanesForAngleWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                         withInt:(jint)count;

- (jint)addSelectedPolygon3DWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                    withInt:(jint)max
                                                withBoolean:(jboolean)addMoreThanOneAllowed;

- (jint)addSelectedPolyhedronWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                     withInt:(jint)max
                                                 withBoolean:(jboolean)addMoreThanOneAllowed;

- (jint)addSelectedQuadricWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                  withInt:(jint)max
                                              withBoolean:(jboolean)addMoreThanOneAllowed;

- (jint)addSelectedQuadricLimitedWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                         withInt:(jint)max
                                                     withBoolean:(jboolean)addMoreThanOneAllowed;

- (IOSObjectArray *)archimedeanSolidWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                       withGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)name;

- (void)calcRWcoords;

- (jboolean)checkXYMinMaxWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

- (GeogebraCommonKernelGeosGeoElement *)chooseGeoWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                                           withBoolean:(jboolean)includeFixed;

- (GeogebraCommonKernelGeosGeoElement *)chooseGeoWithJavaUtilArrayList:(JavaUtilArrayList *)geos
                                                           withBoolean:(jboolean)includeFixed
                                                           withBoolean:(jboolean)includeConstants;

- (IOSObjectArray *)circleAxisPointWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (void)circleOrSphereWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)num;

- (jboolean)circlePointRadiusDirectionWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (jboolean)coneTwoPointsRadiusWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (GeogebraCommonKernelGeosGeoAngle *)createAngle3D;

- (void)createNewPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)sourcePoint;

- (void)createNewPointForModeOtherWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (void)createNewPointForModePointWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                      withBoolean:(jboolean)complex;

- (jboolean)createNewPointInRegionPossibleWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic;

- (void)createNewPointIntersectionWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)intersectionPoint;

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)createVectorForTranslation;

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)createVectorForTranslationWithNSString:(NSString *)label;

- (jboolean)cylinderTwoPointsRadiusWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (IOSObjectArray *)extrusionOrConifyWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (GeogebraCommonKernelMatrixCoordMatrix4x4 *)getCurrentPlane;

- (GeogebraCommonKernelMatrixCoords *)getMouseLocRW;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getNewPointWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                                             withBoolean:(jboolean)onPathPossible
                                                                             withBoolean:(jboolean)inRegionPossible
                                                                             withBoolean:(jboolean)intersectPossible
                                                                             withBoolean:(jboolean)complex;

- (GeogebraCommonEuclidianHits *)getRegionHitsWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (jboolean)getSelectablesWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (IOSObjectArray *)getSelectedCS1D;

- (IOSObjectArray *)getSelectedCS2D;

- (IOSObjectArray *)getSelectedLines3D;

- (IOSObjectArray *)getSelectedPlanes;

- (IOSObjectArray *)getSelectedPoints3D;

- (IOSObjectArray *)getSelectedPolygons3D;

- (IOSObjectArray *)getSelectedPolyhedron;

- (IOSObjectArray *)getSelectedQuadric;

- (IOSObjectArray *)getSelectedQuadricLimited;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getSingleIntersectionPointWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (jdouble)getStartPointZ;

- (GeogebraCommonGeogebra3DEuclidian3DTextDispatcher3D *)getTextDispatcher;

- (void)handleMovedElementDependent;

- (void)handleMovedElementFreeWithGeogebraCommonEuclidianEventPointerEventTypeEnum:(GeogebraCommonEuclidianEventPointerEventTypeEnum *)type;

- (jboolean)handleMovedElementFreePlane;

- (void)handleMovedElementMultiple;

- (void)initNewModeWithInt:(jint)mode OBJC_METHOD_FAMILY_NONE;

- (IOSObjectArray *)intersectWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (void)moveDependentWithBoolean:(jboolean)repaint;

- (void)movePointOnCurrentPlaneWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)point
                                                                      withBoolean:(jboolean)useOldMouse;

- (void)movePointWithOffsetWithBoolean:(jboolean)repaint;

- (void)moveTextAbsoluteLocation;

- (void)moveVector;

- (GeogebraCommonEuclidianEuclidianControllerCompanion *)newCompanion OBJC_METHOD_FAMILY_NONE;

- (IOSObjectArray *)orthogonalWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (IOSObjectArray *)orthogonalPlaneWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (IOSObjectArray *)parallelPlaneWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (IOSObjectArray *)planeContainingWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits0;

- (IOSObjectArray *)polygon;

- (IOSObjectArray *)polyhedronNetWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (void)processMouseMoved;

- (void)processMouseMovedWithGeogebraCommonEuclidianEventAbstractEvent:(GeogebraCommonEuclidianEventAbstractEvent *)e;

- (void)processReleaseForMovedGeoPointWithBoolean:(jboolean)rightClick;

- (jboolean)processRightPressFor3D;

- (jboolean)processRightReleaseFor3DWithGeogebraCommonEuclidianEventPointerEventTypeEnum:(GeogebraCommonEuclidianEventPointerEventTypeEnum *)type;

- (jboolean)processRotate3DView;

- (void)processSelectionRectangleWithBoolean:(jboolean)alt
                                 withBoolean:(jboolean)isControlDown;

- (IOSObjectArray *)pyramidOrPrismWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (jint)selPolygons3D;

- (void)setCurrentPlaneWithGeogebraCommonKernelMatrixCoordMatrix4x4:(GeogebraCommonKernelMatrixCoordMatrix4x4 *)plane;

- (void)setDragCursorIfMoveView;

- (void)setMouseInformationWithGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)point;

- (void)setMouseMovedEventWithGeogebraCommonEuclidianEventAbstractEvent:(GeogebraCommonEuclidianEventAbstractEvent *)e;

- (void)setStartPointLocationWithDouble:(jdouble)x
                             withDouble:(jdouble)y
                             withDouble:(jdouble)z;

- (void)setTranslateStartWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                    withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)vec;

- (void)showPopupMenuChooseGeoWithJavaUtilArrayList:(JavaUtilArrayList *)selectedGeos1
                    withGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (jboolean)spherePointRadiusWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (IOSObjectArray *)switchModeForCircleOrSphere2WithInt:(jint)mode;

- (void)switchModeForMousePressedWithGeogebraCommonEuclidianEventAbstractEvent:(GeogebraCommonEuclidianEventAbstractEvent *)e;

- (jboolean)switchModeForMouseReleasedWithInt:(jint)mode
              withGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                  withBoolean:(jboolean)changedKernel
                                  withBoolean:(jboolean)control
withGeogebraCommonEuclidianEventPointerEventTypeEnum:(GeogebraCommonEuclidianEventPointerEventTypeEnum *)type;

- (jboolean)switchModeForProcessModeWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits
                                                        withBoolean:(jboolean)isControlDown
                               withGeogebraCommonUtilAsyncOperation:(GeogebraCommonUtilAsyncOperation *)callback;

- (void)switchModeForRemovePolygonsWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (IOSObjectArray *)switchModeForThreePointsWithInt:(jint)mode;

- (id<GeogebraCommonEuclidianPreviewable>)switchPreviewableForInitNewModeWithInt:(jint)mode;

- (void)udpateStartPoint;

- (void)updateMovedGeoPointStartValuesWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords;

- (void)updatePastePreviewPosition;

- (void)updateStartPointWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p;

- (void)updateTranslationVector;

- (void)updateTranslationVectorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)point;

- (jboolean)viewHasHitsForMouseDragged;

- (jboolean)viewInFrontOfWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

- (jboolean)volumeWithGeogebraCommonEuclidianHits:(GeogebraCommonEuclidianHits *)hits;

#pragma mark Package-Private

- (jint)selCS1D;

- (jint)selCS2D;

- (jint)selPlanes;

- (jint)selPolyhedron;

- (jint)selQuadric;

- (jint)selQuadricLimited;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, zMinMax_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, currentPlane_, GeogebraCommonKernelMatrixCoordMatrix4x4 *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, view3D_, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, pickPoint_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, selectedCS2D_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, mouseEvent_, GeogebraCommonEuclidianEventAbstractEvent *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, selectedCS1D_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, selectedQuadric_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, selectedQuadricLimited_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, selectedPolyhedron_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, translationVec3D_, GeogebraCommonKernelMatrixCoords *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, ANGLE_TO_DEGREES, jdouble)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D, ANGLE_MAX, jint)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_initWithGeogebraCommonMainApp_(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *self, GeogebraCommonMainApp *app);

FOUNDATION_EXPORT NSString *GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_rotateObjectWithGeogebraCommonMainApp_withNSString_withBoolean_withGeogebraCommonKernelGeosGeoPolygonArray_withGeogebraCommonKernelKernelNDGeoLineNDArray_withGeogebraCommonKernelGeosGeoElementArray_withGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_(GeogebraCommonMainApp *app, NSString *inputText, jboolean clockwise, IOSObjectArray *polys, IOSObjectArray *lines, IOSObjectArray *selGeos, GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *ec);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D)

@interface GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve : NSObject {
 @public
  GeogebraCommonKernelGeosGeoElement *geo1_, *geo2_, *result_;
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *drawable_;
  jboolean hitted_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *)outer$
                                          withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo1
                                          withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo2
                                          withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)result
                                                                     withBoolean:(jboolean)hitted
                           withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawable;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve, geo1_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve, geo2_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve, result_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve, drawable_, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withBoolean_withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *outer$, GeogebraCommonKernelGeosGeoElement *geo1, GeogebraCommonKernelGeosGeoElement *geo2, GeogebraCommonKernelGeosGeoElement *result, jboolean hitted, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *drawable);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve *new_GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withBoolean_withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D *outer$, GeogebraCommonKernelGeosGeoElement *geo1, GeogebraCommonKernelGeosGeoElement *geo2, GeogebraCommonKernelGeosGeoElement *result, jboolean hitted, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *drawable) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_IntersectionCurve)

#endif // _GeogebraCommonGeogebra3DEuclidian3DEuclidianController3D_H_
