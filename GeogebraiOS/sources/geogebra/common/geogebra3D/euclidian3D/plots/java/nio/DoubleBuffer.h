//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/DoubleBuffer.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer_H_
#define _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"
#include "java/lang/Comparable.h"

@class GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;
@class IOSDoubleArray;

@interface GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer : GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBuffer < JavaLangComparable >

#pragma mark Public

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)allocateWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (IOSDoubleArray *)array;

- (jint)arrayOffset;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)asReadOnlyBuffer;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)compact;

- (jint)compareToWithId:(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)otherBuffer;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)duplicate;

- (jboolean)isEqual:(id)other;

- (jdouble)get;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)getWithDoubleArray:(IOSDoubleArray *)dest;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)getWithDoubleArray:(IOSDoubleArray *)dest
                                                                            withInt:(jint)off
                                                                            withInt:(jint)len;

- (jdouble)getWithInt:(jint)index;

- (jboolean)hasArray;

- (jboolean)isDirect;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithDouble:(jdouble)d;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithDoubleArray:(IOSDoubleArray *)src;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithDoubleArray:(IOSDoubleArray *)src
                                                                            withInt:(jint)off
                                                                            withInt:(jint)len;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer:(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)src;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithInt:(jint)index
                                                                 withDouble:(jdouble)d;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)slice;

- (NSString *)description;

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)wrapWithDoubleArray:(IOSDoubleArray *)array;

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)wrapWithDoubleArray:(IOSDoubleArray *)array
                                                                             withInt:(jint)start
                                                                             withInt:(jint)len;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity;

- (IOSDoubleArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer)

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer_allocateWithInt_(jint capacity);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer_wrapWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer_wrapWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint len);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer_initWithInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer)

#endif // _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer_H_
