//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/FloatBuffer.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_H_
#define _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"
#include "java/lang/Comparable.h"

@class GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;
@class IOSFloatArray;

@interface GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer : GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBuffer < JavaLangComparable >

#pragma mark Public

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)allocateWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (IOSFloatArray *)array;

- (jint)arrayOffset;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)asReadOnlyBuffer;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)compact;

- (jint)compareToWithId:(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)otherBuffer;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)duplicate;

- (jboolean)isEqual:(id)other;

- (jfloat)get;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)getWithFloatArray:(IOSFloatArray *)dest;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)getWithFloatArray:(IOSFloatArray *)dest
                                                                          withInt:(jint)off
                                                                          withInt:(jint)len;

- (jfloat)getWithInt:(jint)index;

- (jboolean)hasArray;

- (jboolean)isDirect;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithFloat:(jfloat)f;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithFloatArray:(IOSFloatArray *)src;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithFloatArray:(IOSFloatArray *)src
                                                                          withInt:(jint)off
                                                                          withInt:(jint)len;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer:(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)src;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)putWithInt:(jint)index
                                                                 withFloat:(jfloat)f;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)slice;

- (NSString *)description;

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)wrapWithFloatArray:(IOSFloatArray *)array;

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)wrapWithFloatArray:(IOSFloatArray *)array
                                                                           withInt:(jint)start
                                                                           withInt:(jint)len;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity;

- (IOSFloatArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer)

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_allocateWithInt_(jint capacity);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_wrapWithFloatArray_(IOSFloatArray *array);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_wrapWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint start, jint len);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_initWithInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer)

#endif // _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer_H_
