//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/FloatArrayBuffer.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer_H_
#define _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/FloatBuffer.h"

@class GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder;
@class IOSFloatArray;

@interface GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer : GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer {
 @public
  IOSFloatArray *backingArray_;
  jint offset_;
}

#pragma mark Public

- (jfloat)get;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatBuffer *)getWithFloatArray:(IOSFloatArray *)dest
                                                                          withInt:(jint)off
                                                                          withInt:(jint)len;

- (jfloat)getWithInt:(jint)index;

- (jboolean)isDirect;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order;

#pragma mark Package-Private

- (instancetype)initWithFloatArray:(IOSFloatArray *)array;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
             withFloatArray:(IOSFloatArray *)backingArray
                    withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer, backingArray_, IOSFloatArray *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer_initWithFloatArray_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer *self, IOSFloatArray *array);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer_initWithInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer *self, jint capacity);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer_initWithInt_withFloatArray_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer *self, jint capacity, IOSFloatArray *backingArray, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer)

#endif // _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioFloatArrayBuffer_H_
