//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ReadWriteDoubleArrayBuffer.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_H_
#define _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/DoubleArrayBuffer.h"

@class GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer;
@class IOSDoubleArray;

@interface GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer : GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer

#pragma mark Public

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)asReadOnlyBuffer;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)compact;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)duplicate;

- (jboolean)isReadOnly;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithDouble:(jdouble)c;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithDoubleArray:(IOSDoubleArray *)src
                                                                            withInt:(jint)off
                                                                            withInt:(jint)len;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)putWithInt:(jint)index
                                                                 withDouble:(jdouble)c;

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleBuffer *)slice;

#pragma mark Protected

- (IOSDoubleArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

#pragma mark Package-Private

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)array;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
            withDoubleArray:(IOSDoubleArray *)backingArray
                    withInt:(jint)arrayOffset;

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *)copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer:(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer *)other
                                                                                                                                                  withInt:(jint)markOfOther OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer)

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioDoubleArrayBuffer *other, jint markOfOther);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_initWithDoubleArray_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *self, IOSDoubleArray *array);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_initWithDoubleArray_(IOSDoubleArray *array) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_initWithInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *self, jint capacity);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_initWithInt_withDoubleArray_withInt_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *self, jint capacity, IOSDoubleArray *backingArray, jint arrayOffset);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer *new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_initWithInt_withDoubleArray_withInt_(jint capacity, IOSDoubleArray *backingArray, jint arrayOffset) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer)

#endif // _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadWriteDoubleArrayBuffer_H_
