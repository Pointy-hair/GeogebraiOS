//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/Hitting.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DHitting_H_
#define _GeogebraCommonGeogebra3DEuclidian3DHitting_H_

#include "J2ObjC_header.h"

@class GeogebraCommonAwtGPoint;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelMatrixCoords;

@interface GeogebraCommonGeogebra3DEuclidian3DHitting : NSObject {
 @public
  GeogebraCommonKernelMatrixCoords *origin_;
  GeogebraCommonKernelMatrixCoords *direction_;
  GeogebraCommonAwtGPoint *pos_;
  GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view_;
  jint threshold_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view;

- (GeogebraCommonKernelGeosGeoElement *)getLabelHitWithGeogebraCommonAwtGPoint:(GeogebraCommonAwtGPoint *)mouseLoc;

- (jint)getThreshold;

- (jboolean)isInsideClippingWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p;

- (jboolean)isSphere;

- (void)setHitsWithGeogebraCommonAwtGPoint:(GeogebraCommonAwtGPoint *)mouseLoc
                                   withInt:(jint)threshold;

#pragma mark Protected

- (void)setHits;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DHitting)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DHitting, origin_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DHitting, direction_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DHitting, pos_, GeogebraCommonAwtGPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DHitting, view_, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DHitting_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DHitting *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DHitting *new_GeogebraCommonGeogebra3DEuclidian3DHitting_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DHitting)

#endif // _GeogebraCommonGeogebra3DEuclidian3DHitting_H_
