//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawSurface3DOld.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DSurfaces.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@protocol GeogebraCommonKernelKernelNDSurfaceEvaluable;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces {
 @public
  id<GeogebraCommonKernelKernelNDSurfaceEvaluable> surface_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d
                          withGeogebraCommonKernelKernelNDSurfaceEvaluable:(id<GeogebraCommonKernelKernelNDSurfaceEvaluable>)surface;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawOutlineWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jint)getPickOrder;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

#pragma mark Protected

- (void)drawSurfaceGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)updateColors;

- (jboolean)updateForItSelf;

- (void)updateForView;

#pragma mark Package-Private

- (void)drawGeometryHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld, surface_, id<GeogebraCommonKernelKernelNDSurfaceEvaluable>)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDSurfaceEvaluable_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, id<GeogebraCommonKernelKernelNDSurfaceEvaluable> surface);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDSurfaceEvaluable_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, id<GeogebraCommonKernelKernelNDSurfaceEvaluable> surface) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawSurface3DOld_H_
