//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawConic3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Previewable.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DCurves.h"
#include "geogebra/common/kernel/arithmetic/Functional2Var.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DHitting;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class GeogebraCommonKernelMatrixCoords;
@class IOSDoubleArray;
@class IOSObjectArray;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DCurves < GeogebraCommonKernelArithmeticFunctional2Var, GeogebraCommonEuclidianPreviewable > {
 @public
  GeogebraCommonKernelMatrixCoords *m_;
  GeogebraCommonKernelMatrixCoords *d_;
  IOSObjectArray *points_;
  IOSDoubleArray *minmax_;
  GeogebraCommonKernelKernelNDGeoConicND *conic_;
  GeogebraCommonKernelMatrixCoords *ev1_, *ev2_;
  jdouble e1_, e2_;
  jint longitude_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3d
                                withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (jboolean)doHighlighting;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawInObjFormatWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawNotTransparentSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawTranspWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

- (GeogebraCommonKernelMatrixCoords *)evaluateNormalWithDouble:(jdouble)u
                                                    withDouble:(jdouble)v;

- (GeogebraCommonKernelMatrixCoords *)evaluatePointWithDouble:(jdouble)u
                                                   withDouble:(jdouble)v;

- (jdouble)getMaxParameterWithInt:(jint)index;

- (jdouble)getMinParameterWithInt:(jint)index;

- (jint)getPickOrder;

- (jboolean)hitWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (jboolean)hitForListWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (jboolean)isTransparent;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)setGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a_geo;

- (void)updateMousePosWithDouble:(jdouble)x
                      withDouble:(jdouble)y;

- (void)updatePreview;

#pragma mark Protected

- (void)checkVisibleAndSetBoundingBox;

- (void)drawGeometryForPickingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
              withGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (jdouble)getEllipseSurfaceExtent;

- (jdouble)getEllipseSurfaceStart;

- (IOSDoubleArray *)getLineMinMaxWithInt:(jint)i;

- (IOSDoubleArray *)getParabolaMinMax;

- (jboolean)isSector;

- (void)updateCircleWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateColors;

- (void)updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (jboolean)updateForItSelf;

- (void)updateForView;

- (void)updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (void)updateIntersectingLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (void)updateLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateParabolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateParabolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (void)updateParallelLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (void)updateSinglePointWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D, m_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D, d_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D, points_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D, minmax_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D, conic_, GeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D, ev1_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D, ev2_, GeogebraCommonKernelMatrixCoords *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, GeogebraCommonKernelKernelNDGeoConicND *conic);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, GeogebraCommonKernelKernelNDGeoConicND *conic) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D_H_
