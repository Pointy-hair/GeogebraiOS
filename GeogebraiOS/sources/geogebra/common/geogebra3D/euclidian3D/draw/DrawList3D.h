//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawList3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DHitting;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum;
@class GeogebraCommonKernelGeosGeoList;
@class GeogebraCommonKernelMatrixCoords;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D
                                       withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geo;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawForPickingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
                                                                                                               withBoolean:(jboolean)intersection
                                                     withGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawLabelWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jboolean)drawLabelForPickingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawNotTransparentSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawOutlineWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawTranspWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DListsForDrawList3D *)getDrawable3DLists;

- (jint)getPickOrder;

- (jboolean)hitWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (jboolean)isTransparent;

- (void)removeAllGeosToPick;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)setWaitForReset;

- (void)setWaitForUpdateVisualStyle;

#pragma mark Protected

- (void)clearTraceForViewChanged;

- (jdouble)getColorShift;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)getDrawablePickedWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawableSource;

- (jboolean)isLabelVisible;

- (jboolean)updateForItSelf;

- (void)updateForView;

- (void)updateLabel;

- (void)updateLabelPosition;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, GeogebraCommonKernelGeosGeoList *geo);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, GeogebraCommonKernelGeosGeoList *geo) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawList3D_H_
