//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawPlaneConstant3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawPlane3D.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlane3D

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                        withGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)a_plane3D
                     withGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *)xAxis
                     withGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *)yAxis;

#pragma mark Protected

- (jboolean)isGridVisible;

- (void)setMinMax;

- (jboolean)updateForItSelf;

- (void)updateForView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_withGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *a_plane3D, GeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *xAxis, GeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *yAxis);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D_withGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_withGeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *a_plane3D, GeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *xAxis, GeogebraCommonGeogebra3DEuclidian3DDrawDrawAxis3D *yAxis) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPlaneConstant3D_H_
