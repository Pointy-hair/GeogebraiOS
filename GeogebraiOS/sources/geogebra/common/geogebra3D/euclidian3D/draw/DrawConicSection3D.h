//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawConicSection3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawConic3D.h"

@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection;
@class IOSDoubleArray;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawConic3D

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3d
                   withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection:(GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *)conic;

#pragma mark Protected

- (jdouble)getEndWithInt:(jint)i;

- (jdouble)getExtentWithInt:(jint)i;

- (IOSDoubleArray *)getLineMinMaxWithInt:(jint)i;

- (IOSDoubleArray *)getParabolaMinMax;

- (jdouble)getStartWithInt:(jint)i;

- (void)updateCircleWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateEllipseWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (jboolean)updateForItSelf;

- (void)updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateHyperbolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (void)updateIntersectingLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (void)updateLinesWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)updateParabolaWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *conic);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoConicSection_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3d, GeogebraCommonGeogebra3DKernel3DGeosGeoConicSection *conic) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawConicSection3D_H_
