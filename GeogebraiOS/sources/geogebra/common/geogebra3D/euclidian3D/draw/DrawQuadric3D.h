//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawQuadric3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Previewable.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DSurfaces.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DHitting;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D;
@class GeogebraCommonKernelMatrixCoords;
@class IOSDoubleArray;
@class JavaUtilArrayList;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces < GeogebraCommonEuclidianPreviewable > {
 @public
  jint longitude_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D
                                                     withJavaUtilArrayList:(JavaUtilArrayList *)selectedPoints
                                                                   withInt:(jint)type;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d
                      withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *)a_quadric;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawOutlineWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

- (jint)getPickOrder;

- (jboolean)hitWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (jboolean)isTransparent;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)updateMousePosWithDouble:(jdouble)xRW
                      withDouble:(jdouble)yRW;

- (void)updatePreview;

#pragma mark Protected

- (void)drawSurfaceGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (IOSDoubleArray *)getMinMax;

- (void)setSurfaceVWithFloat:(jfloat)min
                   withFloat:(jfloat)max
withGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterSurface *)surface;

- (jboolean)updateForItSelf;

- (void)updateForView;

#pragma mark Package-Private

- (void)drawGeometryHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *a_quadric);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *a_quadric) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withInt_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, JavaUtilArrayList *selectedPoints, jint type);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withInt_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, JavaUtilArrayList *selectedPoints, jint type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawQuadric3D_H_
