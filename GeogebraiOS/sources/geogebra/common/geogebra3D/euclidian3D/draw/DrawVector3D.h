//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawVector3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/DrawJoinPoints.h"

@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush;
@class GeogebraCommonKernelMatrixCoords;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelKernelNDGeoVectorND;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawJoinPoints

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D
                                                     withJavaUtilArrayList:(JavaUtilArrayList *)selectedPoints;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D
                               withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)vector;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

#pragma mark Protected

- (IOSObjectArray *)calcPoints;

- (void)setArrowTypeAfterWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)setArrowTypeBeforeWithGeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush:(GeogebraCommonGeogebra3DEuclidian3DOpenGLPlotterBrush *)brush;

- (void)setPreviewableCoordsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)firstPoint
                            withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)secondPoint;

- (void)setStartEndPointsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p1
                         withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p2;

- (void)updateForView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, id<GeogebraCommonKernelKernelNDGeoVectorND> vector);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, id<GeogebraCommonKernelKernelNDGeoVectorND> vector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, JavaUtilArrayList *selectedPoints);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, JavaUtilArrayList *selectedPoints) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawVector3D_H_
