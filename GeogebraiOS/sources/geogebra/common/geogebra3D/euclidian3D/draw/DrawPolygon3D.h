//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawPolygon3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Previewable.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DSurfaces.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DHitting;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum;
@class GeogebraCommonGeogebra3DEuclidian3DPolygonTriangulation;
@class GeogebraCommonKernelGeosGeoPolygon;
@class GeogebraCommonKernelMatrixCoords;
@class IOSObjectArray;
@class JavaUtilArrayList;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces < GeogebraCommonEuclidianPreviewable >

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                                     withJavaUtilArrayList:(JavaUtilArrayList *)selectedPoints;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                    withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)polygon;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)disposePreview;

- (jboolean)doHighlighting;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawOutlineWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

+ (void)drawPolygonWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
                                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)polygon
             withGeogebraCommonGeogebra3DEuclidian3DPolygonTriangulation:(GeogebraCommonGeogebra3DEuclidian3DPolygonTriangulation *)pt
                               withGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)vertices
                                                                 withInt:(jint)verticesLength;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

- (jint)getPickOrder;

- (jboolean)hitWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)updateMousePosWithDouble:(jdouble)xRW
                      withDouble:(jdouble)yRW;

- (void)updatePreview;

#pragma mark Protected

- (void)drawGeometryForPickingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
              withGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (void)drawSurfaceGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jboolean)updateForItSelf;

- (void)updateForView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonKernelGeosGeoPolygon *polygon);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonKernelGeosGeoPolygon *polygon) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_drawPolygonWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_withGeogebraCommonKernelGeosGeoPolygon_withGeogebraCommonGeogebra3DEuclidian3DPolygonTriangulation_withGeogebraCommonKernelMatrixCoordsArray_withInt_(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *renderer, GeogebraCommonKernelGeosGeoPolygon *polygon, GeogebraCommonGeogebra3DEuclidian3DPolygonTriangulation *pt, IOSObjectArray *vertices, jint verticesLength);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPoints);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPoints) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolygon3D_H_
