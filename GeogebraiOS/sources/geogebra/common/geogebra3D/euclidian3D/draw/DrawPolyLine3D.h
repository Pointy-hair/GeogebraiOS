//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawPolyLine3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Previewable.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DCurves.h"

@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoPolyLine;
@class GeogebraCommonKernelMatrixCoords;
@class IOSDoubleArray;
@class JavaUtilArrayList;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DCurves < GeogebraCommonEuclidianPreviewable >

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                                     withJavaUtilArrayList:(JavaUtilArrayList *)selectedPoints
                                   withGeogebraCommonKernelGeosGeoPolyLine:(GeogebraCommonKernelGeosGeoPolyLine *)p;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                    withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)p;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

- (IOSDoubleArray *)getDrawMinMax;

- (jint)getPickOrder;

- (void)setDrawMinMaxWithDouble:(jdouble)drawMin
                     withDouble:(jdouble)drawMax;

- (void)updateMousePosWithDouble:(jdouble)xRW
                      withDouble:(jdouble)yRW;

- (void)updatePreview;

#pragma mark Protected

- (jint)getLineThickness;

- (jboolean)updateForItSelf;

- (void)updateForItSelfWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p1
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p2;

- (void)updateForView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonKernelGeosGeoElement *p);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonKernelGeosGeoElement *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withGeogebraCommonKernelGeosGeoPolyLine_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPoints, GeogebraCommonKernelGeosGeoPolyLine *p);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withGeogebraCommonKernelGeosGeoPolyLine_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPoints, GeogebraCommonKernelGeosGeoPolyLine *p) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPolyLine3D_H_
