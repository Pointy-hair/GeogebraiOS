//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DSurfaces.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces_H_

#include "J2ObjC_header.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonKernelGeosGeoElement;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D {
 @public
  jboolean elementHasChanged_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3d
                                    withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a_geo;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)drawHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawNotTransparentSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawTranspWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jboolean)isTransparent;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)setWaitForUpdate;

#pragma mark Protected

- (void)drawGeometryForPickingIntersectionWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawSurfaceGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jdouble)getColorShift;

- (void)updateColors;

- (void)updateForView;

#pragma mark Package-Private

- (void)drawGeometryHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d, GeogebraCommonKernelGeosGeoElement *a_geo);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3d);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces_H_
