//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawExtrusionOrConify3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Previewable.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DSurfaces.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer;
@class GeogebraCommonKernelGeosGeoNumeric;
@class GeogebraCommonKernelGeosGeoPolygon;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class JavaUtilArrayList;
@protocol GeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion;

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DSurfaces < GeogebraCommonEuclidianPreviewable > {
 @public
  GeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer *extrusionComputer_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                                     withJavaUtilArrayList:(JavaUtilArrayList *)selectedPolygons
                                                     withJavaUtilArrayList:(JavaUtilArrayList *)selectedConics;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)createPolyhedron;

- (void)disposePreview;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawOutlineWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jint)getPickOrder;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)updateMousePosWithDouble:(jdouble)xRW
                      withDouble:(jdouble)yRW;

- (void)updatePreview;

#pragma mark Protected

- (void)drawSurfaceGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (id<GeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>)getAlgoWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)basis
                                                                        withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)height;

- (id<GeogebraCommonGeogebra3DKernel3DAlgosAlgoForExtrusion>)getAlgoWithGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)basis
                                                                    withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)height;

- (jboolean)updateForItSelf;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D, extrusionComputer_, GeogebraCommonGeogebra3DKernel3DAlgosExtrusionComputer *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withJavaUtilArrayList_withJavaUtilArrayList_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, JavaUtilArrayList *selectedPolygons, JavaUtilArrayList *selectedConics);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawExtrusionOrConify3D_H_
