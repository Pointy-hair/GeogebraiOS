//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/Drawable3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/DrawableND.h"
#include "java/util/Comparator.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DHits3D;
@class GeogebraCommonGeogebra3DEuclidian3DHitting;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelMatrixCoords;
@class JavaUtilTreeSet;
@protocol GeogebraCommonAwtGGraphics2D;

#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_PICKED_DILATATION 1.3f
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_POINT_ON_PATH_DILATATION 1.01f
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_GRID3D_THICKNESS 0.005f
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_PICK_ORDER_MAX 4
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_PICK_ORDER_POINT 0
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_PICK_ORDER_TEXT 1
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_PICK_ORDER_PATH 2
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_PICK_ORDER_SURFACE 3
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_DEFAULT 0
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_POINTS 1
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_CURVES 2
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_CLIPPED_CURVES 3
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_SURFACES 4
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_CLOSED_SURFACES_NOT_CURVED 5
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_CLOSED_SURFACES_CURVED 6
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_CLIPPED_SURFACES 7
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_TEXTS 8
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_LISTS 9
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_DRAW_TYPE_MAX 10
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_COLOR_SHIFT_SURFACE 0.75
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_COLOR_SHIFT_CURVES 0.75
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_COLOR_SHIFT_POINTS 0.86
#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_COLOR_SHIFT_NONE 0.0

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D : GeogebraCommonEuclidianDrawableND {
 @public
  jboolean waitForReset_;
  GeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D *label_;
  GeogebraCommonKernelMatrixCoords *color_, *colorHighlighted_, *surfaceColor_, *surfaceColorHighlighted_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D
                                    withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a_geo;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (jint)comparePickingToWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)d
                                                                  withBoolean:(jboolean)checkPickOrder;

- (void)disposePreview;

- (jboolean)doHighlighting;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawForPickingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
                                                                                                               withBoolean:(jboolean)intersection
                                                     withGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawHidingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawInObjFormatWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawLabelWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jboolean)drawLabelForPickingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawNotTransparentSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawOutlineWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawPreviewWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawTranspWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

- (GeogebraCommonKernelGeosGeoElement *)getGeoElement;

- (GeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)getPickingType;

- (jint)getPickOrder;

- (jdouble)getZPickFar;

- (jdouble)getZPickNear;

- (jboolean)hasPickableLable;

- (jboolean)hitWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (jboolean)hitForListWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (void)hitIfVisibleAndPickableWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting
                                withGeogebraCommonGeogebra3DEuclidian3DHits3D:(GeogebraCommonGeogebra3DEuclidian3DHits3D *)hits;

- (jboolean)isTracing;

- (jboolean)isTransparent;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)resetHatch;

- (void)setGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a_geo;

- (void)setLabelWaitForUpdate;

- (void)setPickingTypeWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (void)setWaitForReset;

- (void)setWaitForUpdate;

- (void)setWaitForUpdateVisualStyle;

- (void)setZPickWithDouble:(jdouble)zNear
                withDouble:(jdouble)zFar;

- (void)update;

- (void)updateForHitting;

- (jboolean)waitForUpdate;

#pragma mark Protected

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists
                                                                               withInt:(jint)type;

- (void)clearTraceForViewChanged;

- (void)doRemoveGeometryIndexWithInt:(jint)index;

- (void)drawGeomWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
     withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *)index;

- (void)drawGeometryForPickingWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
              withGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer_PickingTypeEnum *)type;

- (void)drawGeometryForPickingIntersectionWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
        withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *)index;

- (void)drawTracesHidingSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawTracesNotTranspSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawTracesOutlineWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
                                                                   withBoolean:(jboolean)hidden;

- (void)drawTracesTranspSurfaceWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

+ (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)coords;

+ (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)boundsMin
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)boundsMax;

+ (void)enlargeBoundsToDiagonalWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                               withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max
                               withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)center
                               withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                               withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v2
                                                         withDouble:(jdouble)r1
                                                         withDouble:(jdouble)r2;

- (jfloat)getAlpha;

- (jdouble)getColorShift;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)getDrawablePicked;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)getDrawablePickedWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawableSource;

- (jint)getGeometryIndex;

- (jfloat)getLabelOffsetX;

- (jfloat)getLabelOffsetY;

- (jint)getLayer;

- (jint)getReusableGeometryIndex;

- (jint)getReusableSurfaceIndex;

- (jint)getSurfaceIndex;

- (GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)getView3D;

- (jboolean)hasTrace;

- (jboolean)hasTransparentAlpha;

- (jboolean)hitLabelWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting
                     withGeogebraCommonGeogebra3DEuclidian3DHits3D:(GeogebraCommonGeogebra3DEuclidian3DHits3D *)hits;

- (jboolean)isLabelVisible;

- (jboolean)isVisible;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D *)newDrawLabel3DWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *)newTraceIndex OBJC_METHOD_FAMILY_NONE;

- (void)recordTrace;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists
                                                                                    withInt:(jint)type;

- (void)removeGeometryIndexWithInt:(jint)index;

- (void)setAlphaWithFloat:(jfloat)alpha;

- (void)setColorsWithDouble:(jdouble)alpha
withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)color
withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)colorHighlighted;

- (void)setColorsOutlined;

- (void)setDrawingColorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)color;

- (void)setGeometryIndexWithInt:(jint)index;

- (void)setHighlightingColor;

- (void)setLineTextureHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)setSurfaceHighlightingColor;

- (void)setSurfaceIndexWithInt:(jint)index;

- (void)setView3DWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D;

- (void)updateAlpha;

- (void)updateColors;

- (jboolean)updateForItSelf;

- (void)updateForView;

- (void)updateLabel;

- (void)updateLabelPosition;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, label_, GeogebraCommonGeogebra3DEuclidian3DDrawDrawLabel3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, color_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, colorHighlighted_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, surfaceColor_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, surfaceColorHighlighted_, GeogebraCommonKernelMatrixCoords *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, PICKED_DILATATION, jfloat)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, POINT_ON_PATH_DILATATION, jfloat)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, GRID3D_THICKNESS, jfloat)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_PICK_ORDER_MAX, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_PICK_ORDER_POINT, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_PICK_ORDER_TEXT, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_PICK_ORDER_PATH, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_PICK_ORDER_SURFACE, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_DEFAULT, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_POINTS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_CURVES, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_CLIPPED_CURVES, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_SURFACES, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_CLOSED_SURFACES_NOT_CURVED, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_CLOSED_SURFACES_CURVED, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_CLIPPED_SURFACES, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_TEXTS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_LISTS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, DRAW_TYPE_MAX, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, COLOR_SHIFT_SURFACE, jdouble)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, COLOR_SHIFT_CURVES, jdouble)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, COLOR_SHIFT_POINTS, jdouble)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D, COLOR_SHIFT_NONE, jdouble)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D, GeogebraCommonKernelGeosGeoElement *a_geo);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_enlargeBoundsWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *min, GeogebraCommonKernelMatrixCoords *max, GeogebraCommonKernelMatrixCoords *boundsMin, GeogebraCommonKernelMatrixCoords *boundsMax);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_enlargeBoundsWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *min, GeogebraCommonKernelMatrixCoords *max, GeogebraCommonKernelMatrixCoords *coords);

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_enlargeBoundsToDiagonalWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_withDouble_withDouble_(GeogebraCommonKernelMatrixCoords *min, GeogebraCommonKernelMatrixCoords *max, GeogebraCommonKernelMatrixCoords *center, GeogebraCommonKernelMatrixCoords *v1, GeogebraCommonKernelMatrixCoords *v2, jdouble r1, jdouble r2);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D)

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_drawableComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)d1
               withId:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)d2;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_drawableComparator)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_drawableComparator_init(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_drawableComparator *self);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_drawableComparator *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_drawableComparator_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_drawableComparator)

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_setComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(JavaUtilTreeSet *)set1
               withId:(JavaUtilTreeSet *)set2;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_setComparator)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_setComparator_init(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_setComparator *self);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_setComparator *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_setComparator_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_setComparator)

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex : NSObject {
 @public
  jint geom_, surface_;
  GeogebraCommonKernelMatrixCoords *center_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)outer$
                                                                  withInt:(jint)geom
                                                                  withInt:(jint)surface;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)outer$
                                                                  withInt:(jint)geom
                                                                  withInt:(jint)surface
                                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)center;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex)

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex, center_, GeogebraCommonKernelMatrixCoords *)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex_initWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_withInt_withInt_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *self, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *outer$, jint geom, jint surface);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex_initWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_withInt_withInt_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *outer$, jint geom, jint surface) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex_initWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_withInt_withInt_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *self, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *outer$, jint geom, jint surface, GeogebraCommonKernelMatrixCoords *center);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex_initWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_withInt_withInt_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *outer$, jint geom, jint surface, GeogebraCommonKernelMatrixCoords *center) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_H_
