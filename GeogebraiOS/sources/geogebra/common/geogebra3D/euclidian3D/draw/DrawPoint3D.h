//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/draw/DrawPoint3D.java
//

#ifndef _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_H_
#define _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Previewable.h"
#include "geogebra/common/geogebra3D/euclidian3D/draw/Drawable3DCurves.h"
#include "geogebra/common/kernel/arithmetic/Functional2Var.h"

@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists;
@class GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex;
@class GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D;
@class GeogebraCommonGeogebra3DEuclidian3DHitting;
@class GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer;
@class GeogebraCommonKernelMatrixCoords;
@class IOSDoubleArray;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

#define GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_DRAW_POINT_FACTOR 1.5f

@interface GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D : GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DCurves < GeogebraCommonEuclidianPreviewable, GeogebraCommonKernelArithmeticFunctional2Var >

#pragma mark Public

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)a_view3D;

- (instancetype)initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D:(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *)view3D
                                withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point;

- (void)addToDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)disposePreview;

- (void)drawGeometryWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawGeometryHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)drawInObjFormatWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (void)enlargeBoundsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)min
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)max;

- (GeogebraCommonKernelMatrixCoords *)evaluateNormalWithDouble:(jdouble)u
                                                    withDouble:(jdouble)v;

- (GeogebraCommonKernelMatrixCoords *)evaluatePointWithDouble:(jdouble)u
                                                   withDouble:(jdouble)v;

- (jdouble)getMaxParameterWithInt:(jint)index;

- (jdouble)getMinParameterWithInt:(jint)index;

- (jint)getPickOrder;

- (jboolean)hitWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

+ (jboolean)hitWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting
                         withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)p
        withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *)drawable
                                                      withInt:(jint)pointSize
                         withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)project
                                              withDoubleArray:(IOSDoubleArray *)parameters
                                                  withBoolean:(jboolean)checkRealPointSize;

- (jboolean)hitForListWithGeogebraCommonGeogebra3DEuclidian3DHitting:(GeogebraCommonGeogebra3DEuclidian3DHitting *)hitting;

- (void)removeFromDrawable3DListsWithGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3DLists *)lists;

- (void)updateMousePosWithDouble:(jdouble)xRW
                      withDouble:(jdouble)yRW;

- (void)updatePreview;

#pragma mark Protected

- (void)doRemoveGeometryIndexWithInt:(jint)index;

- (void)drawGeomWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer
     withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex:(GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *)index;

- (jdouble)getColorShift;

- (jfloat)getLabelOffsetX;

- (jfloat)getLabelOffsetY;

- (GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_TraceIndex *)newTraceIndex OBJC_METHOD_FAMILY_NONE;

- (void)setLineTextureHiddenWithGeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer:(GeogebraCommonGeogebra3DEuclidian3DOpenGLRenderer *)renderer;

- (jboolean)updateForItSelf;

- (void)updateForView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D, DRAW_POINT_FACTOR, jfloat)

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, id<GeogebraCommonKernelKernelNDGeoPointND> point);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *view3D, id<GeogebraCommonKernelKernelNDGeoPointND> point) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D *self, GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D);

FOUNDATION_EXPORT GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D *new_GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_initWithGeogebraCommonGeogebra3DEuclidian3DEuclidianView3D_(GeogebraCommonGeogebra3DEuclidian3DEuclidianView3D *a_view3D) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jboolean GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_hitWithGeogebraCommonGeogebra3DEuclidian3DHitting_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D_withInt_withGeogebraCommonKernelMatrixCoords_withDoubleArray_withBoolean_(GeogebraCommonGeogebra3DEuclidian3DHitting *hitting, GeogebraCommonKernelMatrixCoords *p, GeogebraCommonGeogebra3DEuclidian3DDrawDrawable3D *drawable, jint pointSize, GeogebraCommonKernelMatrixCoords *project, IOSDoubleArray *parameters, jboolean checkRealPointSize);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D)

#endif // _GeogebraCommonGeogebra3DEuclidian3DDrawDrawPoint3D_H_
