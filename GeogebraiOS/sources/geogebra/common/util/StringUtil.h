//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/util/StringUtil.java
//

#ifndef _GeogebraCommonUtilStringUtil_H_
#define _GeogebraCommonUtilStringUtil_H_

#include "J2ObjC_header.h"

@class GeogebraCommonAwtGColor;
@class GeogebraCommonAwtGFont;
@class IOSByteArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol JavaLangIterable;

@interface GeogebraCommonUtilStringUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (NSString *)cannonicNumberWithNSString:(NSString *)str;

+ (NSString *)cannonicNumber2WithNSString:(NSString *)str;

+ (jint)checkBracketsBackwardWithNSString:(NSString *)parseString;

+ (NSString *)convertToHexWithByteArray:(IOSByteArray *)data;

+ (NSString *)encodeXMLWithNSString:(NSString *)str;

+ (void)encodeXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                              withNSString:(NSString *)str;

+ (jdouble)estimateHeightWithNSString:(NSString *)string
           withGeogebraCommonAwtGFont:(GeogebraCommonAwtGFont *)font;

+ (jdouble)estimateLengthWithNSString:(NSString *)label
           withGeogebraCommonAwtGFont:(GeogebraCommonAwtGFont *)font;

+ (jdouble)estimateLengthHTMLWithNSString:(NSString *)label
               withGeogebraCommonAwtGFont:(GeogebraCommonAwtGFont *)font;

+ (NSString *)fixVerticalBarsWithNSString:(NSString *)parseString;

+ (id)formatWithNSString:(NSString *)sub
              withDouble:(jdouble)x0
              withDouble:(jdouble)x1
              withDouble:(jdouble)x2
              withDouble:(jdouble)x3;

+ (NSString *)ignoreIndicesWithNSString:(NSString *)text;

+ (jboolean)isDigitWithChar:(jchar)ch;

+ (jboolean)isInequalityWithNSString:(NSString *)str;

+ (jboolean)isLetterWithChar:(jchar)c;

+ (jboolean)isLetterOrDigitWithChar:(jchar)c;

+ (jboolean)isLetterOrDigitOrUnderscoreWithChar:(jchar)character;

+ (jboolean)isNotEqualWithNSString:(NSString *)str;

+ (jboolean)isNumberWithNSString:(NSString *)text;

+ (jboolean)isWhitespaceWithChar:(jchar)c;

+ (NSString *)joinTokensWithJavaLangIterable:(id<JavaLangIterable>)tokens
                                withNSString:(NSString *)delimiter;

+ (jdouble)parseDoubleWithNSString:(NSString *)s;

+ (jchar)processQuotesWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                   withNSString:(NSString *)content
                                       withChar:(jchar)ret;

+ (NSString *)removeLeadingSlashWithNSString:(NSString *)filename;

+ (NSString *)removeSpacesWithNSString:(NSString *)str;

+ (NSString *)repeatWithChar:(jchar)c
                     withInt:(jint)count;

+ (jboolean)representsMultipleExpressionsWithNSString:(NSString *)evalText;

+ (JavaLangStringBuilder *)resetStringBuilderWithJavaLangStringBuilder:(JavaLangStringBuilder *)high;

+ (NSString *)stringWithNSString:(NSString *)s
                         withInt:(jint)n;

+ (NSString *)toHexStringWithChar:(jchar)c;

+ (NSString *)toHexStringWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)col;

+ (NSString *)toHexStringWithInt:(jint)i;

+ (NSString *)toHexStringWithNSString:(NSString *)s;

+ (NSString *)toHtmlColorWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color;

+ (NSString *)toHTMLStringWithNSString:(NSString *)title;

+ (NSString *)toHTMLStringWithNSString:(NSString *)str
                           withBoolean:(jboolean)encodeLTGT;

+ (NSString *)toLaTeXStringWithNSString:(NSString *)str
                            withBoolean:(jboolean)convertGreekLetters;

+ (NSString *)toLowerCaseWithNSString:(NSString *)s;

+ (NSString *)toUpperCaseWithNSString:(NSString *)s;

+ (NSString *)trimSpacesWithNSString:(NSString *)str;

+ (JavaUtilArrayList *)wholeWordTokenizeWithNSString:(NSString *)input;

+ (NSString *)wrapInExactWithNSString:(NSString *)s;

#pragma mark Protected

- (jboolean)isRightToLeftCharWithChar:(jchar)c;

- (NSString *)toLowerWithNSString:(NSString *)s;

- (NSString *)toUpperWithNSString:(NSString *)s;

@end

J2OBJC_STATIC_INIT(GeogebraCommonUtilStringUtil)

FOUNDATION_EXPORT GeogebraCommonUtilStringUtil *GeogebraCommonUtilStringUtil_prototype_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonUtilStringUtil, prototype_, GeogebraCommonUtilStringUtil *)
J2OBJC_STATIC_FIELD_SETTER(GeogebraCommonUtilStringUtil, prototype_, GeogebraCommonUtilStringUtil *)

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_convertToHexWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toHexStringWithChar_(jchar c);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toHexStringWithInt_(jint i);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toHexStringWithGeogebraCommonAwtGColor_(GeogebraCommonAwtGColor *col);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toHexStringWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toHTMLStringWithNSString_(NSString *title);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toHTMLStringWithNSString_withBoolean_(NSString *str, jboolean encodeLTGT);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_encodeXMLWithNSString_(NSString *str);

FOUNDATION_EXPORT void GeogebraCommonUtilStringUtil_encodeXMLWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *sb, NSString *str);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toLaTeXStringWithNSString_withBoolean_(NSString *str, jboolean convertGreekLetters);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_stringWithNSString_withInt_(NSString *s, jint n);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_removeSpacesWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_trimSpacesWithNSString_(NSString *str);

FOUNDATION_EXPORT JavaLangStringBuilder *GeogebraCommonUtilStringUtil_resetStringBuilderWithJavaLangStringBuilder_(JavaLangStringBuilder *high);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isNumberWithNSString_(NSString *text);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toLowerCaseWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toUpperCaseWithNSString_(NSString *s);

FOUNDATION_EXPORT jdouble GeogebraCommonUtilStringUtil_parseDoubleWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_repeatWithChar_withInt_(jchar c, jint count);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isLetterOrDigitWithChar_(jchar c);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isLetterOrDigitOrUnderscoreWithChar_(jchar character);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isDigitWithChar_(jchar ch);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isLetterWithChar_(jchar c);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isNotEqualWithNSString_(NSString *str);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isInequalityWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_ignoreIndicesWithNSString_(NSString *text);

FOUNDATION_EXPORT jint GeogebraCommonUtilStringUtil_checkBracketsBackwardWithNSString_(NSString *parseString);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_fixVerticalBarsWithNSString_(NSString *parseString);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_representsMultipleExpressionsWithNSString_(NSString *evalText);

FOUNDATION_EXPORT jdouble GeogebraCommonUtilStringUtil_estimateLengthHTMLWithNSString_withGeogebraCommonAwtGFont_(NSString *label, GeogebraCommonAwtGFont *font);

FOUNDATION_EXPORT jdouble GeogebraCommonUtilStringUtil_estimateLengthWithNSString_withGeogebraCommonAwtGFont_(NSString *label, GeogebraCommonAwtGFont *font);

FOUNDATION_EXPORT jdouble GeogebraCommonUtilStringUtil_estimateHeightWithNSString_withGeogebraCommonAwtGFont_(NSString *string, GeogebraCommonAwtGFont *font);

FOUNDATION_EXPORT id GeogebraCommonUtilStringUtil_formatWithNSString_withDouble_withDouble_withDouble_withDouble_(NSString *sub, jdouble x0, jdouble x1, jdouble x2, jdouble x3);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_wrapInExactWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_removeLeadingSlashWithNSString_(NSString *filename);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_toHtmlColorWithGeogebraCommonAwtGColor_(GeogebraCommonAwtGColor *color);

FOUNDATION_EXPORT JavaUtilArrayList *GeogebraCommonUtilStringUtil_wholeWordTokenizeWithNSString_(NSString *input);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_joinTokensWithJavaLangIterable_withNSString_(id<JavaLangIterable> tokens, NSString *delimiter);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_cannonicNumberWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *GeogebraCommonUtilStringUtil_cannonicNumber2WithNSString_(NSString *str);

FOUNDATION_EXPORT jboolean GeogebraCommonUtilStringUtil_isWhitespaceWithChar_(jchar c);

FOUNDATION_EXPORT jchar GeogebraCommonUtilStringUtil_processQuotesWithJavaLangStringBuilder_withNSString_withChar_(JavaLangStringBuilder *sb, NSString *content, jchar ret);

FOUNDATION_EXPORT void GeogebraCommonUtilStringUtil_init(GeogebraCommonUtilStringUtil *self);

FOUNDATION_EXPORT GeogebraCommonUtilStringUtil *new_GeogebraCommonUtilStringUtil_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonUtilStringUtil)

#endif // _GeogebraCommonUtilStringUtil_H_
