//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/view/spreadsheet/CellRangeProcessor.java
//

#ifndef _GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_H_
#define _GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_H_

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class GeogebraCommonGuiViewSpreadsheetCellRange;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoFunctionNVar;
@class GeogebraCommonKernelGeosGeoList;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol GeogebraCommonGuiViewSpreadsheetMyTable;

@interface GeogebraCommonGuiViewSpreadsheetCellRangeProcessor : NSObject

#pragma mark Public

- (instancetype)initWithGeogebraCommonGuiViewSpreadsheetMyTable:(id<GeogebraCommonGuiViewSpreadsheetMyTable>)table;

+ (JavaUtilArrayList *)cloneWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)containsGeoClassWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
             withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClass;

- (GeogebraCommonKernelGeosGeoList *)createCollectionListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                   withBoolean:(jboolean)copyByValue
                                                                   withBoolean:(jboolean)addToConstruction
                                                                   withBoolean:(jboolean)scanByColumn;

- (NSString *)createColumnMatrixExpressionWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                    withBoolean:(jboolean)copyByValue
                                                    withBoolean:(jboolean)addToConstruction;

- (GeogebraCommonKernelGeosGeoElement *)createListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                            withBoolean:(jboolean)scanByColumn
                                                            withBoolean:(jboolean)copyByValue;

- (GeogebraCommonKernelGeosGeoList *)createListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                         withBoolean:(jboolean)scanByColumn
                                                         withBoolean:(jboolean)copyByValue
                                                         withBoolean:(jboolean)isSorted
                                                         withBoolean:(jboolean)doStoreUndo
                                withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoTypeFilter
                                                         withBoolean:(jboolean)setLabel;

- (GeogebraCommonKernelGeosGeoElement *)createListFromColumnWithInt:(jint)column
                                                        withBoolean:(jboolean)copyByValue
                                                        withBoolean:(jboolean)isSorted
                                                        withBoolean:(jboolean)storeUndoInfo
                               withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoTypeFilter
                                                        withBoolean:(jboolean)addToConstruction;

- (GeogebraCommonKernelGeosGeoElement *)createMatrixWithInt:(jint)column1
                                                    withInt:(jint)column2
                                                    withInt:(jint)row1
                                                    withInt:(jint)row2
                                                withBoolean:(jboolean)copyByValue;

- (GeogebraCommonKernelGeosGeoElement *)createMatrixWithInt:(jint)column1
                                                    withInt:(jint)column2
                                                    withInt:(jint)row1
                                                    withInt:(jint)row2
                                                withBoolean:(jboolean)copyByValue
                                                withBoolean:(jboolean)transpose;

- (NSString *)createMatrixExpressionWithInt:(jint)column1
                                    withInt:(jint)column2
                                    withInt:(jint)row1
                                    withInt:(jint)row2
                                withBoolean:(jboolean)copyByValue
                                withBoolean:(jboolean)transpose;

- (void)createOperationTableWithGeogebraCommonGuiViewSpreadsheetCellRange:(GeogebraCommonGuiViewSpreadsheetCellRange *)cr
                              withGeogebraCommonKernelGeosGeoFunctionNVar:(GeogebraCommonKernelGeosGeoFunctionNVar *)fcn;

- (GeogebraCommonKernelGeosGeoList *)createPointGeoListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                 withBoolean:(jboolean)byValue
                                                                 withBoolean:(jboolean)leftToRight
                                                                 withBoolean:(jboolean)isSorted
                                                                 withBoolean:(jboolean)doStoreUndo
                                                                 withBoolean:(jboolean)doCreateFreePoints;

- (GeogebraCommonKernelGeosGeoElement *)createPolyLineWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                withBoolean:(jboolean)byValue
                                                                withBoolean:(jboolean)leftToRight;

- (GeogebraCommonKernelGeosGeoElement *)createPolyLineWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                                withBoolean:(jboolean)byValue
                                                                withBoolean:(jboolean)leftToRight
                                                                withBoolean:(jboolean)isSorted
                                                                withBoolean:(jboolean)doStoreUndo;

- (GeogebraCommonKernelGeosGeoElement *)createTableTextWithInt:(jint)column1
                                                       withInt:(jint)column2
                                                       withInt:(jint)row1
                                                       withInt:(jint)row2
                                                   withBoolean:(jboolean)copyByValue
                                                   withBoolean:(jboolean)transpose;

- (void)deleteColumnsWithInt:(jint)column1
                     withInt:(jint)column2;

- (void)deleteRowsWithInt:(jint)row1
                  withInt:(jint)row2;

- (NSString *)getCellRangeStringWithJavaUtilArrayList:(JavaUtilArrayList *)list;

- (NSString *)getCellRangeStringWithGeogebraCommonGuiViewSpreadsheetCellRange:(GeogebraCommonGuiViewSpreadsheetCellRange *)range;

- (NSString *)getCellRangeStringWithGeogebraCommonGuiViewSpreadsheetCellRange:(GeogebraCommonGuiViewSpreadsheetCellRange *)range
                                                                  withBoolean:(jboolean)onlyFirstRowColumn;

- (IOSObjectArray *)getColumnTitlesWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jint)getGeoCountWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
    withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClass;

- (IOSObjectArray *)getPointListTitlesWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                                                withBoolean:(jboolean)leftToRight;

- (void)insertColumnWithInt:(jint)column1
                    withInt:(jint)column2
                withBoolean:(jboolean)insertLeft;

- (void)insertRowWithInt:(jint)row1
                 withInt:(jint)row2
             withBoolean:(jboolean)insertAbove;

- (jboolean)is1DRangeListWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isAllColumnsWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isCreateMatrixPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isCreateOperationTablePossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isCreatePointListPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isMultiVarStatsPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList;

- (jboolean)isOneVarStatsPossibleWithJavaUtilArrayList:(JavaUtilArrayList *)rangeList
                  withGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClass;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor)

FOUNDATION_EXPORT void GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_initWithGeogebraCommonGuiViewSpreadsheetMyTable_(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor *self, id<GeogebraCommonGuiViewSpreadsheetMyTable> table);

FOUNDATION_EXPORT GeogebraCommonGuiViewSpreadsheetCellRangeProcessor *new_GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_initWithGeogebraCommonGuiViewSpreadsheetMyTable_(id<GeogebraCommonGuiViewSpreadsheetMyTable> table) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaUtilArrayList *GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_cloneWithJavaUtilArrayList_(JavaUtilArrayList *rangeList);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor)

typedef NS_ENUM(NSUInteger, GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction) {
  GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Left = 0,
  GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Right = 1,
  GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Up = 2,
  GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Down = 3,
};

@interface GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values();

+ (GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum *GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum)

FOUNDATION_EXPORT GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum *GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[];

#define GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Left GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Left]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Left)

#define GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Right GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Right]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Right)

#define GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Up GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Up]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Up)

#define GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_Down GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum_values_[GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_Direction_Down]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum, Down)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_DirectionEnum)

#endif // _GeogebraCommonGuiViewSpreadsheetCellRangeProcessor_H_
