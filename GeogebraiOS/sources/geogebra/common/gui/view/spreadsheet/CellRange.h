//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/view/spreadsheet/CellRange.java
//

#ifndef _GeogebraCommonGuiViewSpreadsheetCellRange_H_
#define _GeogebraCommonGuiViewSpreadsheetCellRange_H_

#include "J2ObjC_header.h"

@class GeogebraCommonAwtGPoint;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonMainApp;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSIntArray;
@class JavaUtilArrayList;

@interface GeogebraCommonGuiViewSpreadsheetCellRange : NSObject {
 @public
  GeogebraCommonMainApp *app_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app;

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
                                      withInt:(jint)anchorColumn
                                      withInt:(jint)anchorRow;

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
                                      withInt:(jint)anchorColumn
                                      withInt:(jint)anchorRow
                                      withInt:(jint)col2
                                      withInt:(jint)row2;

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
                                      withInt:(jint)anchorColumn
                                      withInt:(jint)anchorRow
                                      withInt:(jint)minColumn
                                      withInt:(jint)minRow
                                      withInt:(jint)maxColumn
                                      withInt:(jint)maxRow;

- (GeogebraCommonGuiViewSpreadsheetCellRange *)clone;

- (jboolean)containsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)containsWithGeogebraCommonAwtGPoint:(GeogebraCommonAwtGPoint *)location;

- (jboolean)containsGeoClassWithGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClass;

- (void)debug;

- (jboolean)isEqual:(id)obj;

- (IOSIntArray *)getActualDimensions;

- (GeogebraCommonGuiViewSpreadsheetCellRange *)getActualRange;

- (jint)getAnchorColumn;

- (jint)getAnchorRow;

- (jint)getGeoCountWithGeogebraCommonPluginGeoClassEnum:(GeogebraCommonPluginGeoClassEnum *)geoClass;

- (jint)getHeight;

- (jint)getMaxColumn;

- (jint)getMaxRow;

- (jint)getMinColumn;

- (jint)getMinRow;

- (jint)getWidth;

- (jboolean)hasEmptyCells;

- (NSUInteger)hash;

- (jboolean)hasSameAnchorWithGeogebraCommonGuiViewSpreadsheetCellRange:(GeogebraCommonGuiViewSpreadsheetCellRange *)cr;

- (jboolean)is1D;

- (jboolean)is2D;

- (jboolean)isColumn;

- (jboolean)isEmpty;

- (jboolean)isEmptyRange;

- (jboolean)isPartialColumn;

- (jboolean)isPartialRow;

- (jboolean)isPointList;

- (jboolean)isRow;

- (jboolean)isSingleCell;

- (jboolean)isValid;

- (void)setActualRange;

- (void)setCellRangeWithInt:(jint)anchorColumn
                    withInt:(jint)anchorRow;

- (void)setCellRangeWithInt:(jint)anchorColumn
                    withInt:(jint)anchorRow
                    withInt:(jint)col2
                    withInt:(jint)row2;

- (JavaUtilArrayList *)toCellListWithBoolean:(jboolean)scanByColumn;

- (JavaUtilArrayList *)toGeoLabelListWithBoolean:(jboolean)scanByColumn
                                     withBoolean:(jboolean)copyByValue;

- (JavaUtilArrayList *)toGeoList;

- (JavaUtilArrayList *)toGeoValueListWithBoolean:(jboolean)scanByColumn;

- (JavaUtilArrayList *)toPartialColumnList;

- (JavaUtilArrayList *)toPartialRowList;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonGuiViewSpreadsheetCellRange)

J2OBJC_FIELD_SETTER(GeogebraCommonGuiViewSpreadsheetCellRange, app_, GeogebraCommonMainApp *)

FOUNDATION_EXPORT void GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_(GeogebraCommonGuiViewSpreadsheetCellRange *self, GeogebraCommonMainApp *app);

FOUNDATION_EXPORT GeogebraCommonGuiViewSpreadsheetCellRange *new_GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_(GeogebraCommonMainApp *app) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_withInt_withInt_withInt_withInt_withInt_withInt_(GeogebraCommonGuiViewSpreadsheetCellRange *self, GeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint minColumn, jint minRow, jint maxColumn, jint maxRow);

FOUNDATION_EXPORT GeogebraCommonGuiViewSpreadsheetCellRange *new_GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_withInt_withInt_withInt_withInt_withInt_withInt_(GeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint minColumn, jint minRow, jint maxColumn, jint maxRow) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_withInt_withInt_withInt_withInt_(GeogebraCommonGuiViewSpreadsheetCellRange *self, GeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint col2, jint row2);

FOUNDATION_EXPORT GeogebraCommonGuiViewSpreadsheetCellRange *new_GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_withInt_withInt_withInt_withInt_(GeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow, jint col2, jint row2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_withInt_withInt_(GeogebraCommonGuiViewSpreadsheetCellRange *self, GeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow);

FOUNDATION_EXPORT GeogebraCommonGuiViewSpreadsheetCellRange *new_GeogebraCommonGuiViewSpreadsheetCellRange_initWithGeogebraCommonMainApp_withInt_withInt_(GeogebraCommonMainApp *app, jint anchorColumn, jint anchorRow) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonGuiViewSpreadsheetCellRange)

#endif // _GeogebraCommonGuiViewSpreadsheetCellRange_H_
