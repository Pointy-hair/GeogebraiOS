//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/export/pstricks/GeoGebraExport.java
//

#ifndef _GeogebraCommonExportPstricksGeoGebraExport_H_
#define _GeogebraCommonExportPstricksGeoGebraExport_H_

#include "J2ObjC_header.h"

@class GeogebraCommonAwtGColor;
@class GeogebraCommonEuclidianDrawableND;
@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelArithmeticInequality;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoAngle;
@class GeogebraCommonKernelGeosGeoConic;
@class GeogebraCommonKernelGeosGeoConicPart;
@class GeogebraCommonKernelGeosGeoCurveCartesian;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoElement_FillTypeEnum;
@class GeogebraCommonKernelGeosGeoFunction;
@class GeogebraCommonKernelGeosGeoFunctionNVar;
@class GeogebraCommonKernelGeosGeoLine;
@class GeogebraCommonKernelGeosGeoLocus;
@class GeogebraCommonKernelGeosGeoNumeric;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelGeosGeoPolyLine;
@class GeogebraCommonKernelGeosGeoPolygon;
@class GeogebraCommonKernelGeosGeoRay;
@class GeogebraCommonKernelGeosGeoSegment;
@class GeogebraCommonKernelGeosGeoText;
@class GeogebraCommonKernelGeosGeoTransferFunction;
@class GeogebraCommonKernelGeosGeoVector;
@class GeogebraCommonKernelImplicitGeoImplicitPoly;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonMainApp;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilHashMap;
@protocol GeogebraCommonAwtGGraphics2D;
@protocol GeogebraCommonExportPstricksExportSettings;
@protocol GeogebraCommonKernelArithmeticFunctionalNVar;

@interface GeogebraCommonExportPstricksGeoGebraExport : NSObject {
 @public
  jint beamerSlideNumber_;
  jdouble PRECISION_XRANGE_FUNCTION_;
  JavaLangStringBuilder *code_, *codePoint_, *codePreamble_, *codeFilledObject_, *codeBeginDoc_;
  GeogebraCommonKernelKernel *kernel_;
  GeogebraCommonKernelConstruction *construction_;
  GeogebraCommonEuclidianEuclidianView *euclidianView_;
  id<GeogebraCommonExportPstricksExportSettings> frame_;
  JavaUtilHashMap *CustomColor_;
  jdouble xunit_, yunit_, xmin_, xmax_, ymin_, ymax_;
  jint format__;
  jboolean isBeamer_;
  jint barNumber_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app;

- (void)generateAllCode;

- (GeogebraCommonMainApp *)getApp;

- (jdouble)getxmax;

- (jdouble)getXmax;

- (jdouble)getxmin;

- (jdouble)getXmin;

- (jdouble)getXunit;

- (jdouble)getymax;

- (jdouble)getYmax;

- (jdouble)getymin;

- (jdouble)getYmin;

- (jdouble)getYunit;

- (void)refreshSelectionRectangle;

- (void)setBeamerWithBoolean:(jboolean)beamer;

- (void)setFrameWithGeogebraCommonExportPstricksExportSettings:(id<GeogebraCommonExportPstricksExportSettings>)settingsFrame;

- (void)setxmaxWithDouble:(jdouble)xmax;

- (void)setXmaxWithDouble:(jdouble)xmax;

- (void)setxminWithDouble:(jdouble)xmin;

- (void)setXminWithDouble:(jdouble)xmin;

- (void)setXunitWithDouble:(jdouble)xunit;

- (void)setymaxWithDouble:(jdouble)ymax;

- (void)setYmaxWithDouble:(jdouble)ymax;

- (void)setyminWithDouble:(jdouble)ymin;

- (void)setYminWithDouble:(jdouble)ymin;

- (void)setYunitWithDouble:(jdouble)yunit;

#pragma mark Protected

- (void)addTextPackage;

- (void)ColorCodeWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color
                   withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (NSString *)createCustomColorWithInt:(jint)red
                               withInt:(jint)green
                               withInt:(jint)blue;

- (id<GeogebraCommonAwtGGraphics2D>)createGraphicsWithGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)ef
                                                      withGeogebraCommonKernelArithmeticInequality:(GeogebraCommonKernelArithmeticInequality *)inequality
                                                          withGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)euclidianView2;

- (void)drawAllElements;

- (void)drawAngleWithGeogebraCommonKernelGeosGeoAngle:(GeogebraCommonKernelGeosGeoAngle *)geo;

- (void)drawArcWithGeogebraCommonKernelGeosGeoAngle:(GeogebraCommonKernelGeosGeoAngle *)geo
                                    withDoubleArray:(IOSDoubleArray *)vertex
                                         withDouble:(jdouble)angSt
                                         withDouble:(jdouble)angEnd
                                         withDouble:(jdouble)r;

- (void)drawArrowArcWithGeogebraCommonKernelGeosGeoAngle:(GeogebraCommonKernelGeosGeoAngle *)geo
                                         withDoubleArray:(IOSDoubleArray *)vertex
                                              withDouble:(jdouble)angSt
                                              withDouble:(jdouble)angEnd
                                              withDouble:(jdouble)r
                                             withBoolean:(jboolean)clockwise;

- (void)drawBarChartOrHistogramWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)g;

- (void)drawBoxPlotWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawFunctionWithGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)geo;

- (void)drawGeoConicWithGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)geo;

- (void)drawGeoConicPartWithGeogebraCommonKernelGeosGeoConicPart:(GeogebraCommonKernelGeosGeoConicPart *)geo;

- (void)drawGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g
                                                 withBoolean:(jboolean)fromGeoList
                                                 withBoolean:(jboolean)trimmedInter;

- (void)drawGeoInequalitiesWithGeogebraCommonKernelGeosGeoFunctionNVar:(GeogebraCommonKernelGeosGeoFunctionNVar *)geo
                                withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)e;

- (void)drawGeoLineWithGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)geo;

- (void)drawGeoPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)geo;

- (void)drawGeoRayWithGeogebraCommonKernelGeosGeoRay:(GeogebraCommonKernelGeosGeoRay *)geo;

- (void)drawGeoSegmentWithGeogebraCommonKernelGeosGeoSegment:(GeogebraCommonKernelGeosGeoSegment *)geo;

- (void)drawGeoVectorWithGeogebraCommonKernelGeosGeoVector:(GeogebraCommonKernelGeosGeoVector *)geo;

- (void)drawHistogramOrBarChartBoxWithDoubleArray:(IOSDoubleArray *)values
                                  withDoubleArray:(IOSDoubleArray *)leftBorder
                                          withInt:(jint)length
                                       withDouble:(jdouble)width
           withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)g;

- (void)drawImplicitPolyWithGeogebraCommonKernelImplicitGeoImplicitPoly:(GeogebraCommonKernelImplicitGeoImplicitPoly *)geo;

- (void)drawIntegralWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawIntegralFunctionsWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawLabelWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                  withGeogebraCommonEuclidianDrawableND:(GeogebraCommonEuclidianDrawableND *)drawGeo;

- (void)drawLineWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)drawLocusWithGeogebraCommonKernelGeosGeoLocus:(GeogebraCommonKernelGeosGeoLocus *)geo;

- (JavaLangStringBuilder *)drawNoLatexFunctionWithGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)geo
                                                                           withDouble:(jdouble)xrangemax
                                                                           withDouble:(jdouble)xrangemin
                                                                              withInt:(jint)point
                                                                         withNSString:(NSString *)template_;

- (void)drawNyquistWithGeogebraCommonKernelGeosGeoTransferFunction:(GeogebraCommonKernelGeosGeoTransferFunction *)g;

- (JavaLangStringBuilder *)drawNyquistDiagramWithGeogebraCommonKernelGeosGeoTransferFunction:(GeogebraCommonKernelGeosGeoTransferFunction *)geo
                                                                                withNSString:(NSString *)template_
                                                                                withNSString:(NSString *)arrowMark
                                                                                withNSString:(NSString *)arrowCommand
                                                                                withNSString:(NSString *)reverseArrowCommand;

- (void)drawPolygonWithGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)geo;

- (void)drawPolyLineWithGeogebraCommonKernelGeosGeoPolyLine:(GeogebraCommonKernelGeosGeoPolyLine *)geo;

- (void)drawSingleCurveCartesianWithGeogebraCommonKernelGeosGeoCurveCartesian:(GeogebraCommonKernelGeosGeoCurveCartesian *)geo
                                                                  withBoolean:(jboolean)trasparency;

- (void)drawSliderWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawSlopeWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawSumTrapezoidalWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawSumUpperLowerWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)drawTextWithGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)geo;

- (void)drawTickWithGeogebraCommonKernelGeosGeoAngle:(GeogebraCommonKernelGeosGeoAngle *)geo
                                     withDoubleArray:(IOSDoubleArray *)vertex
                                          withDouble:(jdouble)angleTick;

- (void)endBeamerWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)fillSplineWithGeogebraCommonKernelGeosGeoCurveCartesianArray:(IOSObjectArray *)curves;

- (NSString *)formatWithDouble:(jdouble)d;

- (NSString *)getImplicitExprWithGeogebraCommonKernelImplicitGeoImplicitPoly:(GeogebraCommonKernelImplicitGeoImplicitPoly *)geo;

- (GeogebraCommonKernelStringTemplate *)getStringTemplate;

- (jboolean)isDoubleLineConicWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isEmptyWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isLatexFunctionWithNSString:(NSString *)s;

- (jboolean)isSinglePointConicWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)markWithDoubleArray:(IOSDoubleArray *)A
            withDoubleArray:(IOSDoubleArray *)B
                    withInt:(jint)deco
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)markAngleWithGeogebraCommonKernelGeosGeoAngle:(GeogebraCommonKernelGeosGeoAngle *)geo
                                           withDouble:(jdouble)r
                                      withDoubleArray:(IOSDoubleArray *)vertex
                                           withDouble:(jdouble)angSt
                                           withDouble:(jdouble)angEnd;

- (void)resizeFontWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jint)resizePtWithInt:(jint)size;

- (NSString *)sci2decWithDouble:(jdouble)d;

- (void)startBeamerWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonExportPstricksGeoGebraExport)

J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, code_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, codePoint_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, codePreamble_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, codeFilledObject_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, codeBeginDoc_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, kernel_, GeogebraCommonKernelKernel *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, construction_, GeogebraCommonKernelConstruction *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, euclidianView_, GeogebraCommonEuclidianEuclidianView *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, frame_, id<GeogebraCommonExportPstricksExportSettings>)
J2OBJC_FIELD_SETTER(GeogebraCommonExportPstricksGeoGebraExport, CustomColor_, JavaUtilHashMap *)

FOUNDATION_EXPORT void GeogebraCommonExportPstricksGeoGebraExport_initWithGeogebraCommonMainApp_(GeogebraCommonExportPstricksGeoGebraExport *self, GeogebraCommonMainApp *app);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonExportPstricksGeoGebraExport)

@interface GeogebraCommonExportPstricksGeoGebraExport_Info : NSObject

#pragma mark Public

- (instancetype)initWithGeogebraCommonExportPstricksGeoGebraExport:(GeogebraCommonExportPstricksGeoGebraExport *)outer$
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jfloat)getAlpha;

- (jdouble)getAngle;

- (GeogebraCommonKernelGeosGeoElement_FillTypeEnum *)getFillType;

- (GeogebraCommonAwtGColor *)getLinecolor;

- (jint)getY;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonExportPstricksGeoGebraExport_Info)

FOUNDATION_EXPORT void GeogebraCommonExportPstricksGeoGebraExport_Info_initWithGeogebraCommonExportPstricksGeoGebraExport_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonExportPstricksGeoGebraExport_Info *self, GeogebraCommonExportPstricksGeoGebraExport *outer$, GeogebraCommonKernelGeosGeoElement *geo);

FOUNDATION_EXPORT GeogebraCommonExportPstricksGeoGebraExport_Info *new_GeogebraCommonExportPstricksGeoGebraExport_Info_initWithGeogebraCommonExportPstricksGeoGebraExport_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonExportPstricksGeoGebraExport *outer$, GeogebraCommonKernelGeosGeoElement *geo) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonExportPstricksGeoGebraExport_Info)

#endif // _GeogebraCommonExportPstricksGeoGebraExport_H_
