//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/draw/DrawRay.java
//

#ifndef _GeogebraCommonEuclidianDrawDrawRay_H_
#define _GeogebraCommonEuclidianDrawDrawRay_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Drawable.h"
#include "geogebra/common/euclidian/Previewable.h"

@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelMatrixCoords;
@class JavaUtilArrayList;
@protocol GeogebraCommonAwtGBasicStroke;
@protocol GeogebraCommonAwtGGraphics2D;
@protocol GeogebraCommonAwtGRectangle;
@protocol GeogebraCommonKernelKernelNDGeoLineND;

@interface GeogebraCommonEuclidianDrawDrawRay : GeogebraCommonEuclidianDrawable < GeogebraCommonEuclidianPreviewable >

#pragma mark Public

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                                       withJavaUtilArrayList:(JavaUtilArrayList *)points;

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                   withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)ray;

- (void)disposePreview;

- (void)drawWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawPreviewWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawTraceWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (GeogebraCommonKernelGeosGeoElement *)getGeoElement;

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold;

- (jboolean)intersectsRectangleWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (jboolean)isInsideWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (void)setGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setIsVisible;

- (void)setStrokeWithGeogebraCommonAwtGBasicStroke:(id<GeogebraCommonAwtGBasicStroke>)objStroke;

- (void)update;

- (void)updateWithBoolean:(jboolean)showLabel;

- (void)updateWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)startPoint
              withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)direction
                                       withBoolean:(jboolean)showLabel;

- (void)updateMousePosWithDouble:(jdouble)mouseRWx
                      withDouble:(jdouble)mouseRWy;

- (void)updatePreview;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonEuclidianDrawDrawRay)

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawRay_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonEuclidianDrawDrawRay *self, GeogebraCommonEuclidianEuclidianView *view, id<GeogebraCommonKernelKernelNDGeoLineND> ray);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawRay *new_GeogebraCommonEuclidianDrawDrawRay_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonEuclidianEuclidianView *view, id<GeogebraCommonKernelKernelNDGeoLineND> ray) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawRay_initWithGeogebraCommonEuclidianEuclidianView_withJavaUtilArrayList_(GeogebraCommonEuclidianDrawDrawRay *self, GeogebraCommonEuclidianEuclidianView *view, JavaUtilArrayList *points);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawRay *new_GeogebraCommonEuclidianDrawDrawRay_initWithGeogebraCommonEuclidianEuclidianView_withJavaUtilArrayList_(GeogebraCommonEuclidianEuclidianView *view, JavaUtilArrayList *points) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonEuclidianDrawDrawRay)

#endif // _GeogebraCommonEuclidianDrawDrawRay_H_
