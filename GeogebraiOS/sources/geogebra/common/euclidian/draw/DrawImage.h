//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/draw/DrawImage.java
//

#ifndef _GeogebraCommonEuclidianDrawDrawImage_H_
#define _GeogebraCommonEuclidianDrawDrawImage_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Drawable.h"

@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoImage;
@protocol GeogebraCommonAwtGGraphics2D;
@protocol GeogebraCommonAwtGRectangle;

@interface GeogebraCommonEuclidianDrawDrawImage : GeogebraCommonEuclidianDrawable

#pragma mark Public

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                        withGeogebraCommonKernelGeosGeoImage:(GeogebraCommonKernelGeosGeoImage *)geoImage;

- (jboolean)checkInBackground;

- (void)drawWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g3;

- (id<GeogebraCommonAwtGRectangle>)getBounds;

- (GeogebraCommonKernelGeosGeoElement *)getGeoElement;

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold;

- (jboolean)hitLabelWithInt:(jint)x
                    withInt:(jint)y;

- (jboolean)intersectsRectangleWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (jboolean)isInsideWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (void)setGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)update;

#pragma mark Package-Private

- (jboolean)isInBackground;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonEuclidianDrawDrawImage)

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawImage_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelGeosGeoImage_(GeogebraCommonEuclidianDrawDrawImage *self, GeogebraCommonEuclidianEuclidianView *view, GeogebraCommonKernelGeosGeoImage *geoImage);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawImage *new_GeogebraCommonEuclidianDrawDrawImage_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelGeosGeoImage_(GeogebraCommonEuclidianEuclidianView *view, GeogebraCommonKernelGeosGeoImage *geoImage) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonEuclidianDrawDrawImage)

#endif // _GeogebraCommonEuclidianDrawDrawImage_H_
