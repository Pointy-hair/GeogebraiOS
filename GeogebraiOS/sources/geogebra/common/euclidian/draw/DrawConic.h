//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/draw/DrawConic.java
//

#ifndef _GeogebraCommonEuclidianDrawDrawConic_H_
#define _GeogebraCommonEuclidianDrawDrawConic_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Drawable.h"
#include "geogebra/common/euclidian/Previewable.h"

@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol GeogebraCommonAwtGAffineTransform;
@protocol GeogebraCommonAwtGArea;
@protocol GeogebraCommonAwtGGeneralPath;
@protocol GeogebraCommonAwtGGraphics2D;
@protocol GeogebraCommonAwtGRectangle;
@protocol GeogebraCommonAwtGShape;

#define GeogebraCommonEuclidianDrawDrawConic_PLOT_POINTS 32
#define GeogebraCommonEuclidianDrawDrawConic_MAX_PLOT_POINTS 300
#define GeogebraCommonEuclidianDrawDrawConic_HUGE_RADIUS 1.0E12

@interface GeogebraCommonEuclidianDrawDrawConic : GeogebraCommonEuclidianDrawable < GeogebraCommonEuclidianPreviewable > {
 @public
  GeogebraCommonKernelKernelNDGeoConicND *conic_;
  jboolean isVisible_;
  jboolean labelVisible_;
  IOSDoubleArray *labelCoords_;
  id<GeogebraCommonAwtGAffineTransform> transform_;
  id<GeogebraCommonAwtGShape> shape_DrawConic_;
  IOSDoubleArray *halfAxes_;
  jdouble x0_;
  jdouble y0_;
  id<GeogebraCommonAwtGGeneralPath> parabola_;
  jboolean firstHyperbola_;
  jdouble a_;
  jint points_;
  IOSObjectArray *ev_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                                       withJavaUtilArrayList:(JavaUtilArrayList *)points
                                       withJavaUtilArrayList:(JavaUtilArrayList *)selectedLines;

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                  withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c
                                                 withBoolean:(jboolean)ignoreSingularities;

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                                                     withInt:(jint)mode
                                       withJavaUtilArrayList:(JavaUtilArrayList *)points;

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                                                     withInt:(jint)mode
                                       withJavaUtilArrayList:(JavaUtilArrayList *)points
                                       withJavaUtilArrayList:(JavaUtilArrayList *)segments
                                       withJavaUtilArrayList:(JavaUtilArrayList *)conics;

- (void)disposePreview;

- (void)drawWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawPreviewWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawTraceWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (id<GeogebraCommonAwtGRectangle>)getBounds;

- (GeogebraCommonKernelKernelNDGeoConicND *)getConic;

- (GeogebraCommonKernelGeosGeoElement *)getGeoElement;

- (id<GeogebraCommonAwtGArea>)getShape;

- (jboolean)hitWithInt:(jint)hitX
               withInt:(jint)hitY
               withInt:(jint)hitThreshold;

- (jboolean)hitEllipseWithInt:(jint)hitX
                      withInt:(jint)hitY
                      withInt:(jint)hitThreshold;

- (jboolean)hitHyperbolaWithInt:(jint)hitX
                        withInt:(jint)hitY
                        withInt:(jint)hitThreshold;

- (jboolean)hitLinesWithInt:(jint)hitX
                    withInt:(jint)hitY
                    withInt:(jint)hitThreshold;

- (jboolean)intersectsRectangleWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (jboolean)isInsideWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (void)setGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setIgnoreSingularitiesWithBoolean:(jboolean)ignore;

- (void)update;

- (void)updateMousePosWithDouble:(jdouble)xRW
                      withDouble:(jdouble)yRW;

- (void)updatePreview;

#pragma mark Protected

- (jboolean)checkCircleEllipseParabolaOnScreenWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)viewRect;

- (jboolean)checkHyperbolaOnScreenWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)viewRect;

- (jboolean)checkIsOnFilling;

- (void)drawHyperbolaWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawLinesWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)updateCircle;

- (void)updateDoubleLine;

- (void)updateEllipse;

- (void)updateHyperboalSetTransformToPaths;

- (void)updateHyperbola;

- (void)updateHyperbolaAddPointWithInt:(jint)index
                            withDouble:(jdouble)x1
                            withDouble:(jdouble)y1;

- (void)updateHyperbolaClosePaths;

- (void)updateHyperbolaEdge;

- (void)updateHyperbolaLabelCoords;

- (void)updateHyperbolaResetPaths;

- (void)updateHyperbolaSetShape;

- (void)updateHyperbolaX0;

- (void)updateLines;

- (void)updateParabola;

- (void)updateParabolaEdge;

- (void)updateParabolaLabelCoords;

- (void)updateParabolaPath;

- (void)updateParabolaX0Y0;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonEuclidianDrawDrawConic)

J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawConic, conic_, GeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawConic, labelCoords_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawConic, transform_, id<GeogebraCommonAwtGAffineTransform>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawConic, shape_DrawConic_, id<GeogebraCommonAwtGShape>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawConic, halfAxes_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawConic, parabola_, id<GeogebraCommonAwtGGeneralPath>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawDrawConic, ev_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonEuclidianDrawDrawConic, PLOT_POINTS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonEuclidianDrawDrawConic, MAX_PLOT_POINTS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonEuclidianDrawDrawConic, HUGE_RADIUS, jdouble)

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoConicND_withBoolean_(GeogebraCommonEuclidianDrawDrawConic *self, GeogebraCommonEuclidianEuclidianView *view, GeogebraCommonKernelKernelNDGeoConicND *c, jboolean ignoreSingularities);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawConic *new_GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoConicND_withBoolean_(GeogebraCommonEuclidianEuclidianView *view, GeogebraCommonKernelKernelNDGeoConicND *c, jboolean ignoreSingularities) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withInt_withJavaUtilArrayList_(GeogebraCommonEuclidianDrawDrawConic *self, GeogebraCommonEuclidianEuclidianView *view, jint mode, JavaUtilArrayList *points);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawConic *new_GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withInt_withJavaUtilArrayList_(GeogebraCommonEuclidianEuclidianView *view, jint mode, JavaUtilArrayList *points) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withJavaUtilArrayList_withJavaUtilArrayList_(GeogebraCommonEuclidianDrawDrawConic *self, GeogebraCommonEuclidianEuclidianView *view, JavaUtilArrayList *points, JavaUtilArrayList *selectedLines);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawConic *new_GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withJavaUtilArrayList_withJavaUtilArrayList_(GeogebraCommonEuclidianEuclidianView *view, JavaUtilArrayList *points, JavaUtilArrayList *selectedLines) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withInt_withJavaUtilArrayList_withJavaUtilArrayList_withJavaUtilArrayList_(GeogebraCommonEuclidianDrawDrawConic *self, GeogebraCommonEuclidianEuclidianView *view, jint mode, JavaUtilArrayList *points, JavaUtilArrayList *segments, JavaUtilArrayList *conics);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawConic *new_GeogebraCommonEuclidianDrawDrawConic_initWithGeogebraCommonEuclidianEuclidianView_withInt_withJavaUtilArrayList_withJavaUtilArrayList_withJavaUtilArrayList_(GeogebraCommonEuclidianEuclidianView *view, jint mode, JavaUtilArrayList *points, JavaUtilArrayList *segments, JavaUtilArrayList *conics) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonEuclidianDrawDrawConic)

#endif // _GeogebraCommonEuclidianDrawDrawConic_H_
