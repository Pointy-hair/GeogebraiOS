//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/draw/DrawPoint.java
//

#ifndef _GeogebraCommonEuclidianDrawDrawPoint_H_
#define _GeogebraCommonEuclidianDrawDrawPoint_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/Drawable.h"

@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelGeosGeoElement;
@class IOSDoubleArray;
@protocol GeogebraCommonAwtGArea;
@protocol GeogebraCommonAwtGGraphics2D;
@protocol GeogebraCommonAwtGRectangle;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonEuclidianDrawDrawPoint : GeogebraCommonEuclidianDrawable

#pragma mark Public

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                  withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (instancetype)initWithGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view
                  withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
                                                 withBoolean:(jboolean)isPreview;

- (void)drawWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (id<GeogebraCommonAwtGRectangle>)getBounds;

- (id<GeogebraCommonAwtGArea>)getDot;

- (GeogebraCommonKernelGeosGeoElement *)getGeoElement;

+ (jint)getSelectionThresholdWithInt:(jint)threshold;

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold;

- (jboolean)intersectsRectangleWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (jboolean)isInsideWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (void)setGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setPointStyleWithInt:(jint)pointType;

- (void)update;

- (void)updateWithDoubleArray:(IOSDoubleArray *)coords2;

#pragma mark Protected

- (void)drawTraceWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

@end

J2OBJC_STATIC_INIT(GeogebraCommonEuclidianDrawDrawPoint)

FOUNDATION_EXPORT jint GeogebraCommonEuclidianDrawDrawPoint_getSelectionThresholdWithInt_(jint threshold);

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawPoint_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonEuclidianDrawDrawPoint *self, GeogebraCommonEuclidianEuclidianView *view, id<GeogebraCommonKernelKernelNDGeoPointND> P);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawPoint *new_GeogebraCommonEuclidianDrawDrawPoint_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonEuclidianEuclidianView *view, id<GeogebraCommonKernelKernelNDGeoPointND> P) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawDrawPoint_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(GeogebraCommonEuclidianDrawDrawPoint *self, GeogebraCommonEuclidianEuclidianView *view, id<GeogebraCommonKernelKernelNDGeoPointND> P, jboolean isPreview);

FOUNDATION_EXPORT GeogebraCommonEuclidianDrawDrawPoint *new_GeogebraCommonEuclidianDrawDrawPoint_initWithGeogebraCommonEuclidianEuclidianView_withGeogebraCommonKernelKernelNDGeoPointND_withBoolean_(GeogebraCommonEuclidianEuclidianView *view, id<GeogebraCommonKernelKernelNDGeoPointND> P, jboolean isPreview) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonEuclidianDrawDrawPoint)

#endif // _GeogebraCommonEuclidianDrawDrawPoint_H_
