//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/Drawable.java
//

#ifndef _GeogebraCommonEuclidianDrawable_H_
#define _GeogebraCommonEuclidianDrawable_H_

#include "J2ObjC_header.h"
#include "geogebra/common/euclidian/DrawableND.h"

@class GeogebraCommonAwtGColor;
@class GeogebraCommonAwtGFont;
@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelGeosGeoElement;
@protocol GeogebraCommonAwtGArea;
@protocol GeogebraCommonAwtGBasicStroke;
@protocol GeogebraCommonAwtGGraphics2D;
@protocol GeogebraCommonAwtGRectangle;
@protocol GeogebraCommonAwtGShape;
@protocol GeogebraCommonKernelKernelNDGeoElementND;

@interface GeogebraCommonEuclidianDrawable : GeogebraCommonEuclidianDrawableND {
 @public
  id<GeogebraCommonAwtGBasicStroke> objStroke_;
  id<GeogebraCommonAwtGBasicStroke> selStroke_;
  id<GeogebraCommonAwtGBasicStroke> decoStroke_;
  GeogebraCommonEuclidianEuclidianView *view_;
  GeogebraCommonKernelGeosGeoElement *geo_;
  jint xLabel_;
  jint yLabel_;
  jint mouseX_;
  jint mouseY_;
  NSString *labelDesc_;
  id<GeogebraCommonAwtGRectangle> labelRectangle_;
  id<GeogebraCommonAwtGShape> strokedShape_;
  id<GeogebraCommonAwtGShape> strokedShape2_;
  jboolean isTracing__;
}

#pragma mark Public

- (instancetype)init;

- (void)addLabelOffsetEnsureOnScreen;

- (void)addLabelOffsetEnsureOnScreenWithDouble:(jdouble)Xmultiplier
                                    withDouble:(jdouble)Ymultiplier;

- (void)drawWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawLabelWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)drawMultilineLaTeXWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2
                                withGeogebraCommonAwtGFont:(GeogebraCommonAwtGFont *)font
                               withGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)fgColor
                               withGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)bgColor;

- (void)forceLineTypeWithInt:(jint)type;

- (id<GeogebraCommonAwtGRectangle>)getBounds;

- (GeogebraCommonKernelGeosGeoElement *)getGeoElement;

- (id<GeogebraCommonAwtGArea>)getShape;

- (GeogebraCommonEuclidianEuclidianView *)getView;

- (jdouble)getxLabel;

- (jdouble)getyLabel;

- (jboolean)hitWithInt:(jint)x
               withInt:(jint)y
               withInt:(jint)hitThreshold;

- (jboolean)hitLabelWithInt:(jint)x
                    withInt:(jint)y;

- (jboolean)intersectsRectangleWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (jboolean)isEuclidianVisible;

- (jboolean)isFilled;

- (jboolean)isForceNoFill;

- (jboolean)isInsideWithGeogebraCommonAwtGRectangle:(id<GeogebraCommonAwtGRectangle>)rect;

- (jboolean)isTracing;

- (void)resetHatch;

- (void)setForceNoFillWithBoolean:(jboolean)forceNoFill;

- (void)setGeoElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setShapeWithGeogebraCommonAwtGArea:(id<GeogebraCommonAwtGArea>)shape;

- (void)update;

- (void)updateFontSize;

- (void)updateStrokesWithGeogebraCommonKernelKernelNDGeoElementND:(id<GeogebraCommonKernelKernelNDGeoElementND>)fromGeo;

- (void)updateStrokesWithGeogebraCommonKernelKernelNDGeoElementND:(id<GeogebraCommonKernelKernelNDGeoElementND>)fromGeo
                                                          withInt:(jint)minThickness;

- (void)updateStrokesJustLineThicknessWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)fromGeo;

#pragma mark Protected

- (jboolean)addLabelOffset;

- (void)drawMultilineTextWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2
                               withGeogebraCommonAwtGFont:(GeogebraCommonAwtGFont *)textFont;

- (void)drawTraceWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2;

- (void)fillWithGeogebraCommonAwtGGraphics2D:(id<GeogebraCommonAwtGGraphics2D>)g2
                 withGeogebraCommonAwtGShape:(id<GeogebraCommonAwtGShape>)fillShape
                                 withBoolean:(jboolean)usePureStroke;

- (GeogebraCommonAwtGColor *)getObjectColor;

#pragma mark Package-Private

- (jboolean)isSerif;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonEuclidianDrawable)

J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, objStroke_, id<GeogebraCommonAwtGBasicStroke>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, selStroke_, id<GeogebraCommonAwtGBasicStroke>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, decoStroke_, id<GeogebraCommonAwtGBasicStroke>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, view_, GeogebraCommonEuclidianEuclidianView *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, geo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, labelDesc_, NSString *)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, labelRectangle_, id<GeogebraCommonAwtGRectangle>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, strokedShape_, id<GeogebraCommonAwtGShape>)
J2OBJC_FIELD_SETTER(GeogebraCommonEuclidianDrawable, strokedShape2_, id<GeogebraCommonAwtGShape>)

FOUNDATION_EXPORT void GeogebraCommonEuclidianDrawable_init(GeogebraCommonEuclidianDrawable *self);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonEuclidianDrawable)

#endif // _GeogebraCommonEuclidianDrawable_H_
