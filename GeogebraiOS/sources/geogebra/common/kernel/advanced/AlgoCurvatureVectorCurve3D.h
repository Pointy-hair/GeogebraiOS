//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoCurvatureVectorCurve3D.java
//

#ifndef _GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D_H_
#define _GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"

@class GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D;
@class GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D;
@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D : GeogebraCommonKernelAlgosAlgoElement

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
      withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)arg
withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)arg2;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *)getVector;

- (void)remove;

#pragma mark Protected

- (void)setInputOutput;

#pragma mark Package-Private

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D)

FOUNDATION_EXPORT void GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *arg, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *arg2);

FOUNDATION_EXPORT GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D *new_GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *arg, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *arg2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *f);

FOUNDATION_EXPORT GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D *new_GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, GeogebraCommonGeogebra3DKernel3DGeosGeoCurveCartesian3D *f) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D)

#endif // _GeogebraCommonKernelAdvancedAlgoCurvatureVectorCurve3D_H_
