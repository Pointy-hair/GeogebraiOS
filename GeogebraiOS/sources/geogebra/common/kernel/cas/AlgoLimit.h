//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoLimit.java
//

#ifndef _GeogebraCommonKernelCasAlgoLimit_H_
#define _GeogebraCommonKernelCasAlgoLimit_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/AsynchronousCommand.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/cas/UsesCAS.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoFunction;
@class GeogebraCommonKernelGeosGeoNumeric;
@class JavaLangThrowable;
@protocol GeogebraCommonKernelArithmeticNumberValue;

@interface GeogebraCommonKernelCasAlgoLimit : GeogebraCommonKernelAlgosAlgoElement < GeogebraCommonKernelAsynchronousCommand, GeogebraCommonKernelCasUsesCAS > {
 @public
  GeogebraCommonKernelGeosGeoFunction *f_;
  id<GeogebraCommonKernelArithmeticNumberValue> num_;
  GeogebraCommonKernelGeosGeoNumeric *outNum_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)num;

- (void)compute;

- (NSString *)getCasInput;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (GeogebraCommonKernelGeosGeoNumeric *)getResult;

- (void)handleCASoutputWithNSString:(NSString *)output
                            withInt:(jint)requestID;

- (void)handleExceptionWithJavaLangThrowable:(JavaLangThrowable *)exception
                                     withInt:(jint)id_;

- (jboolean)useCacheing;

#pragma mark Protected

- (jint)getDirection;

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelCasAlgoLimit)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLimit, f_, GeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLimit, num_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLimit, outNum_, GeogebraCommonKernelGeosGeoNumeric *)

FOUNDATION_EXPORT void GeogebraCommonKernelCasAlgoLimit_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelCasAlgoLimit *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f, id<GeogebraCommonKernelArithmeticNumberValue> num);

FOUNDATION_EXPORT GeogebraCommonKernelCasAlgoLimit *new_GeogebraCommonKernelCasAlgoLimit_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f, id<GeogebraCommonKernelArithmeticNumberValue> num) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelCasAlgoLimit)

#endif // _GeogebraCommonKernelCasAlgoLimit_H_
