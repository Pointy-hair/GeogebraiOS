//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoSolveODE.java
//

#ifndef _GeogebraCommonKernelCasAlgoSolveODE_H_
#define _GeogebraCommonKernelCasAlgoSolveODE_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoLocus;
@class GeogebraCommonKernelGeosGeoNumeric;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelArithmeticFunctionalNVar;

@interface GeogebraCommonKernelCasAlgoSolveODE : GeogebraCommonKernelAlgosAlgoElement {
 @public
  JavaUtilArrayList *al_;
  jboolean quotient_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)f0
        withGeogebraCommonKernelArithmeticFunctionalNVar:(id<GeogebraCommonKernelArithmeticFunctionalNVar>)f1
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)x
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)y
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)end
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)step;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (GeogebraCommonKernelGeosGeoLocus *)getResult;

- (void)remove;

#pragma mark Protected

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelCasAlgoSolveODE)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoSolveODE, al_, JavaUtilArrayList *)

FOUNDATION_EXPORT void GeogebraCommonKernelCasAlgoSolveODE_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCasAlgoSolveODE *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelArithmeticFunctionalNVar> f0, id<GeogebraCommonKernelArithmeticFunctionalNVar> f1, GeogebraCommonKernelGeosGeoNumeric *x, GeogebraCommonKernelGeosGeoNumeric *y, GeogebraCommonKernelGeosGeoNumeric *end, GeogebraCommonKernelGeosGeoNumeric *step);

FOUNDATION_EXPORT GeogebraCommonKernelCasAlgoSolveODE *new_GeogebraCommonKernelCasAlgoSolveODE_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelArithmeticFunctionalNVar_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelArithmeticFunctionalNVar> f0, id<GeogebraCommonKernelArithmeticFunctionalNVar> f1, GeogebraCommonKernelGeosGeoNumeric *x, GeogebraCommonKernelGeosGeoNumeric *y, GeogebraCommonKernelGeosGeoNumeric *end, GeogebraCommonKernelGeosGeoNumeric *step) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelCasAlgoSolveODE)

#endif // _GeogebraCommonKernelCasAlgoSolveODE_H_
