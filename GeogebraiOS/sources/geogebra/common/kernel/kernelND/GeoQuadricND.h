//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/kernelND/GeoQuadricND.java
//

#ifndef _GeogebraCommonKernelKernelNDGeoQuadricND_H_
#define _GeogebraCommonKernelKernelNDGeoQuadricND_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/Traceable.h"
#include "geogebra/common/kernel/kernelND/GeoQuadricNDConstants.h"

@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoNumeric;
@class GeogebraCommonKernelMatrixCoordMatrix;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelStringTemplate;
@class IOSCharArray;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelKernelNDGeoSegmentND;

@interface GeogebraCommonKernelKernelNDGeoQuadricND : GeogebraCommonKernelGeosGeoElement < GeogebraCommonKernelKernelNDGeoQuadricNDConstants, GeogebraCommonKernelGeosTraceable > {
 @public
  jint matrixDim_;
  jint type_;
  IOSDoubleArray *matrix_;
  IOSDoubleArray *halfAxes_;
  jdouble linearEccentricity_;
  jdouble eccentricity_;
  jdouble p_;
  jboolean defined_;
  GeogebraCommonKernelMatrixCoords *midpoint_;
  IOSObjectArray *eigenvecND_;
  IOSDoubleArray *diagonal_;
  IOSDoubleArray *eigenval_;
  IOSDoubleArray *mu_;
  jboolean isIntersection_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                                 withInt:(jint)dimension;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                                 withInt:(jint)dimension
                                             withBoolean:(jboolean)isIntersection;

- (void)empty;

- (jint)getDimension;

- (GeogebraCommonKernelMatrixCoords *)getEigenvec3DWithInt:(jint)i;

- (IOSDoubleArray *)getFlatMatrix;

- (jdouble)getHalfAxisWithInt:(jint)i;

- (GeogebraCommonKernelMatrixCoords *)getMidpoint;

- (GeogebraCommonKernelMatrixCoords *)getMidpoint2D;

- (GeogebraCommonKernelMatrixCoords *)getMidpoint3D;

- (GeogebraCommonKernelMatrixCoordMatrix *)getSymetricMatrix;

- (jboolean)getTrace;

- (jint)getType;

- (jboolean)hasChangeableCoordParentNumbers;

- (jboolean)isDefined;

- (jboolean)isTraceable;

- (jboolean)moveFromChangeableCoordParentNumbersWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)rwTransVec
                                                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)endPosition
                                                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)viewDirection
                                                               withJavaUtilArrayList:(JavaUtilArrayList *)updateGeos
                                                               withJavaUtilArrayList:(JavaUtilArrayList *)tempMoveObjectList
                                            withGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view;

- (void)recordChangeableCoordParentNumbers;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setChangeableCoordParentWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)number
                                withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)direction;

- (void)setDefined;

- (void)setSphereNDWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)M
                                             withDouble:(jdouble)rad;

- (void)setSphereNDWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
                                                   withDouble:(jdouble)r;

- (void)setSphereNDWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
                   withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)setSphereNDWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
                 withGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)segment;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setTypeWithInt:(jint)type;

- (void)setUndefined;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (void)buildSphereNDStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbToValueString
              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (JavaLangStringBuilder *)buildValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (GeogebraCommonKernelMatrixCoordMatrix *)getSymetricMatrixWithDoubleArray:(IOSDoubleArray *)vals;

- (void)setAffineTransform;

- (void)setEigenvectors;

- (void)setFirstEigenvectorWithDoubleArray:(IOSDoubleArray *)coords;

- (void)setMatrixWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m;

- (void)setMatrixFromEigen;

- (void)setMidpointWithDouble:(jdouble)coord1
                   withDouble:(jdouble)coord2;

- (void)setMidpointWithDoubleArray:(IOSDoubleArray *)coords;

- (void)setSphereNDMatrixWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)M
                                                   withDouble:(jdouble)r;

- (void)singlePoint;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelKernelNDGeoQuadricND)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoQuadricND, matrix_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoQuadricND, halfAxes_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoQuadricND, midpoint_, GeogebraCommonKernelMatrixCoords *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoQuadricND, eigenvecND_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoQuadricND, diagonal_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoQuadricND, eigenval_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoQuadricND, mu_, IOSDoubleArray *)

FOUNDATION_EXPORT IOSCharArray *GeogebraCommonKernelKernelNDGeoQuadricND_VAR_STRING_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelKernelNDGeoQuadricND, VAR_STRING_, IOSCharArray *)

FOUNDATION_EXPORT void GeogebraCommonKernelKernelNDGeoQuadricND_initWithGeogebraCommonKernelConstruction_withInt_(GeogebraCommonKernelKernelNDGeoQuadricND *self, GeogebraCommonKernelConstruction *c, jint dimension);

FOUNDATION_EXPORT void GeogebraCommonKernelKernelNDGeoQuadricND_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelKernelNDGeoQuadricND *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT void GeogebraCommonKernelKernelNDGeoQuadricND_initWithGeogebraCommonKernelConstruction_withInt_withBoolean_(GeogebraCommonKernelKernelNDGeoQuadricND *self, GeogebraCommonKernelConstruction *c, jint dimension, jboolean isIntersection);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelKernelNDGeoQuadricND)

#endif // _GeogebraCommonKernelKernelNDGeoQuadricND_H_
