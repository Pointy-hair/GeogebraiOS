//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/kernelND/GeoConicPartParameters.java
//

#ifndef _GeogebraCommonKernelKernelNDGeoConicPartParameters_H_
#define _GeogebraCommonKernelKernelNDGeoConicPartParameters_H_

#include "J2ObjC_header.h"

@class GeogebraCommonKernelIntegrationEllipticArcLength;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelPathParameter;
@class JavaLangStringBuilder;

@interface GeogebraCommonKernelKernelNDGeoConicPartParameters : NSObject {
 @public
  jdouble paramStart_, paramEnd_, paramExtent_;
  jboolean posOrientation_;
  jint conic_part_type_;
  jdouble value_, area_, arcLength_;
  jboolean value_defined_;
  GeogebraCommonKernelIntegrationEllipticArcLength *ellipticArcLength_;
  jboolean allowOutlyingIntersections_;
  jboolean keepTypeOnGeometricTransform_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic
                                                       withInt:(jint)type;

- (void)clipEllipseParameterWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)P
                           withGeogebraCommonKernelPathParameter:(GeogebraCommonKernelPathParameter *)pp;

- (jdouble)getArcLength;

- (jdouble)getArea;

- (jdouble)getValue;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)isEqualWithGeogebraCommonKernelKernelNDGeoConicPartParameters:(GeogebraCommonKernelKernelNDGeoConicPartParameters *)other;

- (jboolean)isInRegionWithDouble:(jdouble)x0
                      withDouble:(jdouble)y0;

- (void)setWithGeogebraCommonKernelKernelNDGeoConicPartParameters:(GeogebraCommonKernelKernelNDGeoConicPartParameters *)cp;

- (void)setEllipseParameterWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)P
                          withGeogebraCommonKernelPathParameter:(GeogebraCommonKernelPathParameter *)pp;

- (void)setParametersWithBoolean:(jboolean)isDefined
                      withDouble:(jdouble)start
                      withDouble:(jdouble)end
                     withBoolean:(jboolean)positiveOrientation;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelKernelNDGeoConicPartParameters)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelKernelNDGeoConicPartParameters, ellipticArcLength_, GeogebraCommonKernelIntegrationEllipticArcLength *)

FOUNDATION_EXPORT void GeogebraCommonKernelKernelNDGeoConicPartParameters_initWithGeogebraCommonKernelKernelNDGeoConicND_withInt_(GeogebraCommonKernelKernelNDGeoConicPartParameters *self, GeogebraCommonKernelKernelNDGeoConicND *conic, jint type);

FOUNDATION_EXPORT GeogebraCommonKernelKernelNDGeoConicPartParameters *new_GeogebraCommonKernelKernelNDGeoConicPartParameters_initWithGeogebraCommonKernelKernelNDGeoConicND_withInt_(GeogebraCommonKernelKernelNDGeoConicND *conic, jint type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelKernelNDGeoConicPartParameters)

#endif // _GeogebraCommonKernelKernelNDGeoConicPartParameters_H_
