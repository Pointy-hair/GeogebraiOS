//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/Macro.java
//

#ifndef _GeogebraCommonKernelMacro_H_
#define _GeogebraCommonKernelMacro_H_

#include "J2ObjC_header.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernel;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelAlgosAlgoMacroInterface;
@protocol JavaUtilSet;

@interface GeogebraCommonKernelMacro : NSObject

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                      withNSString:(NSString *)cmdName;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                      withNSString:(NSString *)cmdName
       withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)input
       withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)output;

+ (void)addDependentElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                  withJavaUtilSet:(id<JavaUtilSet>)consElementSet
                                                  withJavaUtilSet:(id<JavaUtilSet>)usedAlgoIds;

+ (void)addSpecialInputElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                     withJavaUtilSet:(id<JavaUtilSet>)consElementSet;

+ (JavaLangStringBuilder *)buildMacroXMLWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                                       withJavaUtilSet:(id<JavaUtilSet>)macroConsElements;

- (NSString *)getCommandName;

- (JavaUtilArrayList *)getDependentGeos;

- (NSString *)getIconFileName;

- (IOSObjectArray *)getInputTypes;

- (GeogebraCommonKernelKernel *)getKernel;

- (GeogebraCommonKernelConstruction *)getMacroConstruction;

- (IOSObjectArray *)getMacroInput;

- (IOSObjectArray *)getMacroOutput;

- (NSString *)getNeededTypesString;

- (NSString *)getToolHelp;

- (NSString *)getToolName;

- (NSString *)getToolOrCommandName;

- (JavaUtilArrayList *)getUsedMacros;

- (void)getXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)initMacroWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)macroCons1
                                    withNSStringArray:(IOSObjectArray *)inputLabels
                                    withNSStringArray:(IOSObjectArray *)outputLabels OBJC_METHOD_FAMILY_NONE;

- (jboolean)isCopyCaptionsAndVisibility;

- (jboolean)isInMacroConstructionWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isShowInToolBar;

- (jboolean)isUsed;

- (void)registerAlgorithmWithGeogebraCommonKernelAlgosAlgoMacroInterface:(id<GeogebraCommonKernelAlgosAlgoMacroInterface>)algoMacro;

- (void)setCommandNameWithNSString:(NSString *)name;

- (void)setCopyCaptionsAndVisibilityWithBoolean:(jboolean)copyCaptions;

- (void)setIconFileNameWithNSString:(NSString *)name;

- (void)setShowInToolBarWithBoolean:(jboolean)showInToolBar;

- (void)setToolHelpWithNSString:(NSString *)toolHelp;

- (void)setToolNameWithNSString:(NSString *)name;

- (void)setUnused;

- (NSString *)description;

- (void)unregisterAlgorithmWithGeogebraCommonKernelAlgosAlgoMacroInterface:(id<GeogebraCommonKernelAlgosAlgoMacroInterface>)algoMacro;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelMacro)

FOUNDATION_EXPORT void GeogebraCommonKernelMacro_initWithGeogebraCommonKernelKernel_withNSString_withGeogebraCommonKernelGeosGeoElementArray_withGeogebraCommonKernelGeosGeoElementArray_(GeogebraCommonKernelMacro *self, GeogebraCommonKernelKernel *kernel, NSString *cmdName, IOSObjectArray *input, IOSObjectArray *output);

FOUNDATION_EXPORT GeogebraCommonKernelMacro *new_GeogebraCommonKernelMacro_initWithGeogebraCommonKernelKernel_withNSString_withGeogebraCommonKernelGeosGeoElementArray_withGeogebraCommonKernelGeosGeoElementArray_(GeogebraCommonKernelKernel *kernel, NSString *cmdName, IOSObjectArray *input, IOSObjectArray *output) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelMacro_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelMacro *self, GeogebraCommonKernelKernel *kernel, NSString *cmdName);

FOUNDATION_EXPORT GeogebraCommonKernelMacro *new_GeogebraCommonKernelMacro_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelKernel *kernel, NSString *cmdName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelMacro_addDependentElementWithGeogebraCommonKernelGeosGeoElement_withJavaUtilSet_withJavaUtilSet_(GeogebraCommonKernelGeosGeoElement *geo, id<JavaUtilSet> consElementSet, id<JavaUtilSet> usedAlgoIds);

FOUNDATION_EXPORT void GeogebraCommonKernelMacro_addSpecialInputElementWithGeogebraCommonKernelGeosGeoElement_withJavaUtilSet_(GeogebraCommonKernelGeosGeoElement *geo, id<JavaUtilSet> consElementSet);

FOUNDATION_EXPORT JavaLangStringBuilder *GeogebraCommonKernelMacro_buildMacroXMLWithGeogebraCommonKernelKernel_withJavaUtilSet_(GeogebraCommonKernelKernel *kernel, id<JavaUtilSet> macroConsElements);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelMacro)

#endif // _GeogebraCommonKernelMacro_H_
