//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic3D/MyVec3DNode.java
//

#ifndef _GeogebraCommonKernelArithmetic3DMyVec3DNode_H_
#define _GeogebraCommonKernelArithmetic3DMyVec3DNode_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/arithmetic/MyVecNDNode.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "geogebra/common/kernel/arithmetic3D/Vector3DValue.h"

@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class IOSDoubleArray;
@class JavaUtilHashSet;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelArithmeticInspecting;
@protocol GeogebraCommonKernelArithmeticTraversing;
@protocol GeogebraCommonKernelKernelNDGeo3DVec;

@interface GeogebraCommonKernelArithmetic3DMyVec3DNode : GeogebraCommonKernelArithmeticValidExpression < GeogebraCommonKernelArithmetic3DVector3DValue, GeogebraCommonKernelArithmeticMyVecNDNode >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)x
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)y
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)z;

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1;

- (jboolean)evaluatesTo3DVector;

- (jboolean)evaluatesToVectorNotPoint;

- (IOSDoubleArray *)getCoords;

- (jint)getDimension;

- (GeogebraCommonKernelKernel *)getKernel;

- (jint)getMode;

- (IOSDoubleArray *)getPointAsDouble;

- (JavaUtilHashSet *)getVariables;

- (id<GeogebraCommonKernelKernelNDGeo3DVec>)getVector;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getX;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getY;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getZ;

- (jboolean)hasCoords;

- (jboolean)inspectWithGeogebraCommonKernelArithmeticInspecting:(id<GeogebraCommonKernelArithmeticInspecting>)t;

- (jboolean)isCASVector;

- (jboolean)isConstant;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (jboolean)isPoint3DValue;

- (void)resolveVariables;

- (void)setCASVector;

- (void)setSphericalPolarCoordsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)r
                               withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)theta
                               withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)phi;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)traverseWithGeogebraCommonKernelArithmeticTraversing:(id<GeogebraCommonKernelArithmeticTraversing>)t;

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmetic3DMyVec3DNode)

FOUNDATION_EXPORT void GeogebraCommonKernelArithmetic3DMyVec3DNode_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelArithmetic3DMyVec3DNode *self, GeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT GeogebraCommonKernelArithmetic3DMyVec3DNode *new_GeogebraCommonKernelArithmetic3DMyVec3DNode_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmetic3DMyVec3DNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelArithmetic3DMyVec3DNode *self, GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> x, id<GeogebraCommonKernelArithmeticExpressionValue> y, id<GeogebraCommonKernelArithmeticExpressionValue> z);

FOUNDATION_EXPORT GeogebraCommonKernelArithmetic3DMyVec3DNode *new_GeogebraCommonKernelArithmetic3DMyVec3DNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> x, id<GeogebraCommonKernelArithmeticExpressionValue> y, id<GeogebraCommonKernelArithmeticExpressionValue> z) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmetic3DMyVec3DNode)

#endif // _GeogebraCommonKernelArithmetic3DMyVec3DNode_H_
