//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/parser/Parser.java
//

#ifndef _GeogebraCommonKernelParserParser_H_
#define _GeogebraCommonKernelParserParser_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/parser/ParserConstants.h"
#include "geogebra/common/kernel/parser/ParserInterface.h"

@class GeogebraCommonKernelArithmeticCommand;
@class GeogebraCommonKernelArithmeticEquation;
@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelArithmeticFunction;
@class GeogebraCommonKernelArithmeticFunctionNVar;
@class GeogebraCommonKernelArithmeticValidExpression;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelParserParseException;
@class GeogebraCommonKernelParserParserTokenManager;
@class GeogebraCommonKernelParserSimpleCharStream;
@class GeogebraCommonKernelParserToken;
@class JavaIoInputStream;
@class JavaIoReader;
@class JavaUtilVector;
@protocol GeogebraCommonKernelArithmetic3DVector3DValue;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelArithmeticVectorValue;

@interface GeogebraCommonKernelParserParser : NSObject < GeogebraCommonKernelParserParserInterface, GeogebraCommonKernelParserParserConstants > {
 @public
  GeogebraCommonKernelParserParserTokenManager *token_source_;
  GeogebraCommonKernelParserSimpleCharStream *jj_input_stream_;
  GeogebraCommonKernelParserToken *token_;
  GeogebraCommonKernelParserToken *jj_nt_;
}

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream
                             withNSString:(NSString *)encoding;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
              withGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (instancetype)initWithGeogebraCommonKernelParserParserTokenManager:(GeogebraCommonKernelParserParserTokenManager *)tm;

- (instancetype)initWithJavaIoReader:(JavaIoReader *)stream;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)ANDterm;

- (GeogebraCommonKernelArithmeticValidExpression *)buildCASExpression;

- (GeogebraCommonKernelArithmeticValidExpression *)buildMathPiperExpression;

- (GeogebraCommonKernelArithmeticValidExpression *)buildMaximaExpression;

- (GeogebraCommonKernelArithmeticValidExpression *)buildValidExpression;

- (id<GeogebraCommonKernelArithmeticVectorValue>)cartesianvector;

- (id<GeogebraCommonKernelArithmetic3DVector3DValue>)cartesianvector3D;

- (GeogebraCommonKernelArithmeticExpressionNode *)cartesianvector3D_special;

- (GeogebraCommonKernelArithmeticExpressionNode *)cartesianvector_special;

- (GeogebraCommonKernelArithmeticFunctionNVar *)casFunction;

- (GeogebraCommonKernelParserToken *)casVar;

- (GeogebraCommonKernelArithmeticExpressionNode *)cmdexpression;

- (GeogebraCommonKernelArithmeticValidExpression *)command;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)COMPAREterm;

- (void)disable_tracing;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)divterm;

- (void)enable_tracing;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)enelement;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)enfactorial;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)enpower;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)ensqrt;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)enunary;

- (GeogebraCommonKernelArithmeticEquation *)equation;

- (GeogebraCommonKernelArithmeticExpressionNode *)expression;

- (GeogebraCommonKernelArithmeticExpressionNode *)expressionnode;

- (GeogebraCommonKernelArithmeticExpressionNode *)expressionOrEquation;

- (GeogebraCommonKernelArithmeticFunction *)function;

- (GeogebraCommonKernelArithmeticExpressionNode *)functionExpressionnode;

- (GeogebraCommonKernelArithmeticFunctionNVar *)functionNVar;

- (GeogebraCommonKernelParserParseException *)generateParseException;

- (GeogebraCommonKernelKernel *)getKernel;

- (GeogebraCommonKernelParserToken *)getNextToken;

- (GeogebraCommonKernelParserToken *)getTokenWithInt:(jint)index;

- (GeogebraCommonKernelParserToken *)label;

- (JavaUtilVector *)labellist;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)list;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)listopnode;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)multterm;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)myDouble;

- (void)myReInitWithNSString:(NSString *)parseString;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)NOTterm;

- (GeogebraCommonKernelArithmeticExpressionNode *)numberFunction;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)numVecVariable;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)ORterm;

- (GeogebraCommonKernelArithmeticExpressionNode *)parseCmdExpressionWithNSString:(NSString *)parseString;

- (GeogebraCommonKernelArithmeticExpressionNode *)parseExpressionWithNSString:(NSString *)parseString;

- (GeogebraCommonKernelArithmeticFunction *)parseFunctionWithNSString:(NSString *)parseString;

- (GeogebraCommonKernelArithmeticFunctionNVar *)parseFunctionNVarWithNSString:(NSString *)parseString;

- (GeogebraCommonKernelArithmeticValidExpression *)parseGeoGebraCASWithNSString:(NSString *)parseString;

- (GeogebraCommonKernelArithmeticValidExpression *)parseGeoGebraExpressionWithNSString:(NSString *)parseString;

- (GeogebraCommonKernelArithmeticValidExpression *)parseGiacWithNSString:(NSString *)parseString;

- (NSString *)parseLabelWithNSString:(NSString *)parseString;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)plusminusnode;

- (id<GeogebraCommonKernelArithmeticVectorValue>)polarvector;

- (GeogebraCommonKernelArithmeticExpressionNode *)polarvector_special;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)powerdivterm;

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream;

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream
                       withNSString:(NSString *)encoding;

- (void)ReInitWithGeogebraCommonKernelParserParserTokenManager:(GeogebraCommonKernelParserParserTokenManager *)tm;

- (void)ReInitWithJavaIoReader:(JavaIoReader *)stream;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)setdifferencenode;

- (id<GeogebraCommonKernelArithmetic3DVector3DValue>)sphericalvector;

- (GeogebraCommonKernelArithmeticCommand *)spreadsheetRange;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelParserParser)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelParserParser, token_source_, GeogebraCommonKernelParserParserTokenManager *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelParserParser, jj_input_stream_, GeogebraCommonKernelParserSimpleCharStream *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelParserParser, token_, GeogebraCommonKernelParserToken *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelParserParser, jj_nt_, GeogebraCommonKernelParserToken *)

FOUNDATION_EXPORT void GeogebraCommonKernelParserParser_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelConstruction_(GeogebraCommonKernelParserParser *self, GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelConstruction *cons);

FOUNDATION_EXPORT GeogebraCommonKernelParserParser *new_GeogebraCommonKernelParserParser_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelConstruction_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelConstruction *cons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelParserParser_initWithJavaIoInputStream_(GeogebraCommonKernelParserParser *self, JavaIoInputStream *stream);

FOUNDATION_EXPORT GeogebraCommonKernelParserParser *new_GeogebraCommonKernelParserParser_initWithJavaIoInputStream_(JavaIoInputStream *stream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelParserParser_initWithJavaIoInputStream_withNSString_(GeogebraCommonKernelParserParser *self, JavaIoInputStream *stream, NSString *encoding);

FOUNDATION_EXPORT GeogebraCommonKernelParserParser *new_GeogebraCommonKernelParserParser_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *stream, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelParserParser_initWithJavaIoReader_(GeogebraCommonKernelParserParser *self, JavaIoReader *stream);

FOUNDATION_EXPORT GeogebraCommonKernelParserParser *new_GeogebraCommonKernelParserParser_initWithJavaIoReader_(JavaIoReader *stream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelParserParser_initWithGeogebraCommonKernelParserParserTokenManager_(GeogebraCommonKernelParserParser *self, GeogebraCommonKernelParserParserTokenManager *tm);

FOUNDATION_EXPORT GeogebraCommonKernelParserParser *new_GeogebraCommonKernelParserParser_initWithGeogebraCommonKernelParserParserTokenManager_(GeogebraCommonKernelParserParserTokenManager *tm) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelParserParser)

@interface GeogebraCommonKernelParserParser_JJCalls : NSObject {
 @public
  jint gen_;
  GeogebraCommonKernelParserToken *first_;
  jint arg_;
  GeogebraCommonKernelParserParser_JJCalls *next_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelParserParser_JJCalls)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelParserParser_JJCalls, first_, GeogebraCommonKernelParserToken *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelParserParser_JJCalls, next_, GeogebraCommonKernelParserParser_JJCalls *)

FOUNDATION_EXPORT void GeogebraCommonKernelParserParser_JJCalls_init(GeogebraCommonKernelParserParser_JJCalls *self);

FOUNDATION_EXPORT GeogebraCommonKernelParserParser_JJCalls *new_GeogebraCommonKernelParserParser_JJCalls_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelParserParser_JJCalls)

#endif // _GeogebraCommonKernelParserParser_H_
