//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/RepresentationFactory.java
//

#ifndef _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_H_
#define _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_H_

#include "J2ObjC_header.h"

@class GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation;
@class JavaUtilArrayList;

@interface GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory : NSObject

#pragma mark Public

+ (JavaUtilArrayList *)convertPointsToBoundaryProblemPointsWithJavaUtilArrayList:(JavaUtilArrayList *)points;

+ (JavaUtilArrayList *)convertPointsToSimpleTriangulationPointsWithJavaUtilArrayList:(JavaUtilArrayList *)points;

+ (JavaUtilArrayList *)convertPointsToTriangulationPointsWithJavaUtilArrayList:(JavaUtilArrayList *)points;

+ (JavaUtilArrayList *)convertPointsToVoronoiCellPointsWithJavaUtilArrayList:(JavaUtilArrayList *)points;

+ (JavaUtilArrayList *)convertPointsToVPointsWithJavaUtilArrayList:(JavaUtilArrayList *)points;

+ (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *)createBoundaryProblemRepresentation;

+ (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *)createSimpleTriangulationRepresentation;

+ (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *)createTriangulationRepresentation;

+ (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *)createVoronoiCellRepresentation;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory)

FOUNDATION_EXPORT GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createVoronoiCellRepresentation();

FOUNDATION_EXPORT GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createTriangulationRepresentation();

FOUNDATION_EXPORT GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createSimpleTriangulationRepresentation();

FOUNDATION_EXPORT GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createBoundaryProblemRepresentation();

FOUNDATION_EXPORT JavaUtilArrayList *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_convertPointsToVPointsWithJavaUtilArrayList_(JavaUtilArrayList *points);

FOUNDATION_EXPORT JavaUtilArrayList *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_convertPointsToVoronoiCellPointsWithJavaUtilArrayList_(JavaUtilArrayList *points);

FOUNDATION_EXPORT JavaUtilArrayList *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_convertPointsToTriangulationPointsWithJavaUtilArrayList_(JavaUtilArrayList *points);

FOUNDATION_EXPORT JavaUtilArrayList *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_convertPointsToSimpleTriangulationPointsWithJavaUtilArrayList_(JavaUtilArrayList *points);

FOUNDATION_EXPORT JavaUtilArrayList *GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_convertPointsToBoundaryProblemPointsWithJavaUtilArrayList_(JavaUtilArrayList *points);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory)

#endif // _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_H_
