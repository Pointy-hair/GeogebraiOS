//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/tsp/method/tsp/BranchBound.java
//

#ifndef _GeogebraCommonKernelDiscreteTspMethodTspBranchBound_H_
#define _GeogebraCommonKernelDiscreteTspMethodTspBranchBound_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"

@class GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit;
@class IOSDoubleArray;
@class IOSIntArray;
@class IOSObjectArray;
@protocol GeogebraCommonKernelDiscreteTspMethodTspTspImprovement;

@interface GeogebraCommonKernelDiscreteTspMethodTspBranchBound : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)limit
withGeogebraCommonKernelDiscreteTspMethodTspTspImprovement:(id<GeogebraCommonKernelDiscreteTspMethodTspTspImprovement>)opt;

- (GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit *)branchWithId:(id)panel
                                                             withDoubleArray2:(IOSObjectArray *)table
                                                              withDoubleArray:(IOSDoubleArray *)multipliers
                                                            withBooleanArray2:(IOSObjectArray *)edges
                                                            withBooleanArray2:(IOSObjectArray *)connect
                                                            withBooleanArray2:(IOSObjectArray *)disconnect
                                                                   withDouble:(jdouble)circuitLowerBound
                                                                      withInt:(jint)depth
                                                                   withDouble:(jdouble)percent;

- (void)copy__WithBooleanArray2:(IOSObjectArray *)arrays
              withBooleanArray2:(IOSObjectArray *)copy_ OBJC_METHOD_FAMILY_NONE;

- (IOSObjectArray *)createTableWithGeogebraCommonKernelDiscreteTspModelNodeArray:(IOSObjectArray *)nodes;

- (NSString *)EdgetoStringWithBooleanArray2:(IOSObjectArray *)edges;

- (IOSIntArray *)methodWithGeogebraCommonKernelDiscreteTspModelNodeArray:(IOSObjectArray *)nodes;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelDiscreteTspMethodTspBranchBound)

FOUNDATION_EXPORT void GeogebraCommonKernelDiscreteTspMethodTspBranchBound_initWithInt_withGeogebraCommonKernelDiscreteTspMethodTspTspImprovement_(GeogebraCommonKernelDiscreteTspMethodTspBranchBound *self, jint limit, id<GeogebraCommonKernelDiscreteTspMethodTspTspImprovement> opt);

FOUNDATION_EXPORT GeogebraCommonKernelDiscreteTspMethodTspBranchBound *new_GeogebraCommonKernelDiscreteTspMethodTspBranchBound_initWithInt_withGeogebraCommonKernelDiscreteTspMethodTspTspImprovement_(jint limit, id<GeogebraCommonKernelDiscreteTspMethodTspTspImprovement> opt) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelDiscreteTspMethodTspBranchBound)

@interface GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit : NSObject {
 @public
  jdouble cost_;
  IOSIntArray *route_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelDiscreteTspMethodTspBranchBound:(GeogebraCommonKernelDiscreteTspMethodTspBranchBound *)outer$
                                                               withIntArray:(IOSIntArray *)route
                                                                 withDouble:(jdouble)cost;

- (jdouble)getCost;

- (IOSIntArray *)getRoute;

- (void)setWithIntArray:(IOSIntArray *)route
             withDouble:(jdouble)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit, route_, IOSIntArray *)

FOUNDATION_EXPORT void GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit_initWithGeogebraCommonKernelDiscreteTspMethodTspBranchBound_withIntArray_withDouble_(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit *self, GeogebraCommonKernelDiscreteTspMethodTspBranchBound *outer$, IOSIntArray *route, jdouble cost);

FOUNDATION_EXPORT GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit *new_GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit_initWithGeogebraCommonKernelDiscreteTspMethodTspBranchBound_withIntArray_withDouble_(GeogebraCommonKernelDiscreteTspMethodTspBranchBound *outer$, IOSIntArray *route, jdouble cost) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Circuit)

@interface GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry : NSObject < JavaLangComparable > {
 @public
  jdouble cost_;
  jint s_;
  jint t_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelDiscreteTspMethodTspBranchBound:(GeogebraCommonKernelDiscreteTspMethodTspBranchBound *)outer$
                                                                    withInt:(jint)s
                                                                    withInt:(jint)t
                                                                 withDouble:(jdouble)cost;

- (jint)compareToWithId:(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry *)e;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry)

FOUNDATION_EXPORT void GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry_initWithGeogebraCommonKernelDiscreteTspMethodTspBranchBound_withInt_withInt_withDouble_(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry *self, GeogebraCommonKernelDiscreteTspMethodTspBranchBound *outer$, jint s, jint t, jdouble cost);

FOUNDATION_EXPORT GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry *new_GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry_initWithGeogebraCommonKernelDiscreteTspMethodTspBranchBound_withInt_withInt_withDouble_(GeogebraCommonKernelDiscreteTspMethodTspBranchBound *outer$, jint s, jint t, jdouble cost) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelDiscreteTspMethodTspBranchBound_Entry)

#endif // _GeogebraCommonKernelDiscreteTspMethodTspBranchBound_H_
