//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/RelationNumerical.java
//

#ifndef _GeogebraCommonKernelRelationNumerical_H_
#define _GeogebraCommonKernelRelationNumerical_H_

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"

@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoLine;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum;
@class GeogebraCommonMainLocalization;
@class JavaLangBoolean;
@protocol JavaUtilSet;
@protocol JavaUtilSortedSet;

@interface GeogebraCommonKernelRelationNumerical : NSObject

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

+ (NSString *)equalityStringWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)b
                                                       withBoolean:(jboolean)equal
                                withGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc;

+ (NSString *)intersectStringWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a
                             withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)b
                                                        withBoolean:(jboolean)intersects
                                 withGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc;

+ (NSString *)parallelStringWithGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)a
                            withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)b
                             withGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc;

+ (NSString *)perpendicularStringWithGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)a
                                 withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)b
                                                         withBoolean:(jboolean)perp
                                  withGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc;

- (id<JavaUtilSet>)relationWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a
                           withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)b;

+ (id<JavaUtilSortedSet>)sortAlphabeticallyWithJavaUtilSet:(id<JavaUtilSet>)reports;

+ (NSString *)triangleNonDegenerateStringWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                                         withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B
                                         withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)C
                                           withGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)loc;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelRelationNumerical)

FOUNDATION_EXPORT id<JavaUtilSortedSet> GeogebraCommonKernelRelationNumerical_sortAlphabeticallyWithJavaUtilSet_(id<JavaUtilSet> reports);

FOUNDATION_EXPORT void GeogebraCommonKernelRelationNumerical_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelRelationNumerical *self, GeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT GeogebraCommonKernelRelationNumerical *new_GeogebraCommonKernelRelationNumerical_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *GeogebraCommonKernelRelationNumerical_equalityStringWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withBoolean_withGeogebraCommonMainLocalization_(GeogebraCommonKernelGeosGeoElement *a, GeogebraCommonKernelGeosGeoElement *b, jboolean equal, GeogebraCommonMainLocalization *loc);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelRelationNumerical_parallelStringWithGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonMainLocalization_(GeogebraCommonKernelGeosGeoLine *a, GeogebraCommonKernelGeosGeoLine *b, GeogebraCommonMainLocalization *loc);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelRelationNumerical_triangleNonDegenerateStringWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonMainLocalization_(GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C, GeogebraCommonMainLocalization *loc);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelRelationNumerical_perpendicularStringWithGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_withBoolean_withGeogebraCommonMainLocalization_(GeogebraCommonKernelGeosGeoLine *a, GeogebraCommonKernelGeosGeoLine *b, jboolean perp, GeogebraCommonMainLocalization *loc);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelRelationNumerical_intersectStringWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_withBoolean_withGeogebraCommonMainLocalization_(GeogebraCommonKernelGeosGeoElement *a, GeogebraCommonKernelGeosGeoElement *b, jboolean intersects, GeogebraCommonMainLocalization *loc);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelRelationNumerical)

@interface GeogebraCommonKernelRelationNumerical_Report : NSObject {
 @public
  JavaLangBoolean *boolResult_;
  GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *symbolicCheck_;
  NSString *stringResult_;
}

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype)initWithJavaLangBoolean:(JavaLangBoolean *)boolres
withGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                           withNSString:(NSString *)stringres;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelRelationNumerical_Report)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelRelationNumerical_Report, boolResult_, JavaLangBoolean *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelRelationNumerical_Report, symbolicCheck_, GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelRelationNumerical_Report, stringResult_, NSString *)

FOUNDATION_EXPORT void GeogebraCommonKernelRelationNumerical_Report_initWithJavaLangBoolean_withGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(GeogebraCommonKernelRelationNumerical_Report *self, JavaLangBoolean *boolres, GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, NSString *stringres);

FOUNDATION_EXPORT GeogebraCommonKernelRelationNumerical_Report *new_GeogebraCommonKernelRelationNumerical_Report_initWithJavaLangBoolean_withGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withNSString_(JavaLangBoolean *boolres, GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, NSString *stringres) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelRelationNumerical_Report)

typedef NS_ENUM(NSUInteger, GeogebraCommonKernelRelationNumerical_Report_RelationCommand) {
  GeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreEqual = 0,
  GeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreParallel = 1,
  GeogebraCommonKernelRelationNumerical_Report_RelationCommand_ArePerpendicular = 2,
  GeogebraCommonKernelRelationNumerical_Report_RelationCommand_IsOnPath = 3,
};

@interface GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values();

+ (GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum)

FOUNDATION_EXPORT GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_[];

#define GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_AreEqual GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_[GeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreEqual]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum, AreEqual)

#define GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_AreParallel GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_[GeogebraCommonKernelRelationNumerical_Report_RelationCommand_AreParallel]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum, AreParallel)

#define GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_ArePerpendicular GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_[GeogebraCommonKernelRelationNumerical_Report_RelationCommand_ArePerpendicular]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum, ArePerpendicular)

#define GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_IsOnPath GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_values_[GeogebraCommonKernelRelationNumerical_Report_RelationCommand_IsOnPath]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum, IsOnPath)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum)

#endif // _GeogebraCommonKernelRelationNumerical_H_
