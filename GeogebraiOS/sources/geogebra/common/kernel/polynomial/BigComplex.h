//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/polynomial/BigComplex.java
//

#ifndef _GeogebraCommonKernelPolynomialBigComplex_H_
#define _GeogebraCommonKernelPolynomialBigComplex_H_

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaMathBigDecimal;
@class JavaMathMathContext;

@interface GeogebraCommonKernelPolynomialBigComplex : NSObject {
 @public
  JavaMathBigDecimal *real_;
  JavaMathBigDecimal *imag_;
}

#pragma mark Public

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)real;

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)real
                    withJavaMathBigDecimal:(JavaMathBigDecimal *)imag;

- (JavaMathBigDecimal *)absWithJavaMathMathContext:(JavaMathMathContext *)mc;

- (GeogebraCommonKernelPolynomialBigComplex *)addWithGeogebraCommonKernelPolynomialBigComplex:(GeogebraCommonKernelPolynomialBigComplex *)b
                                                                      withJavaMathMathContext:(JavaMathMathContext *)mc;

- (GeogebraCommonKernelPolynomialBigComplex *)addWithJavaMathBigDecimal:(JavaMathBigDecimal *)d
                                                withJavaMathMathContext:(JavaMathMathContext *)mc;

- (GeogebraCommonKernelPolynomialBigComplex *)divideWithGeogebraCommonKernelPolynomialBigComplex:(GeogebraCommonKernelPolynomialBigComplex *)b
                                                                         withJavaMathMathContext:(JavaMathMathContext *)mc;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (GeogebraCommonKernelPolynomialBigComplex *)multiplyWithGeogebraCommonKernelPolynomialBigComplex:(GeogebraCommonKernelPolynomialBigComplex *)b
                                                                           withJavaMathMathContext:(JavaMathMathContext *)mc;

- (GeogebraCommonKernelPolynomialBigComplex *)multiplyWithJavaMathBigDecimal:(JavaMathBigDecimal *)d
                                                     withJavaMathMathContext:(JavaMathMathContext *)mc;

- (GeogebraCommonKernelPolynomialBigComplex *)negate;

+ (JavaMathBigDecimal *)sqrtWithJavaMathBigDecimal:(JavaMathBigDecimal *)d
                           withJavaMathMathContext:(JavaMathMathContext *)mc;

- (GeogebraCommonKernelPolynomialBigComplex *)sqrtWithJavaMathMathContext:(JavaMathMathContext *)mc;

- (GeogebraCommonKernelPolynomialBigComplex *)subtractWithGeogebraCommonKernelPolynomialBigComplex:(GeogebraCommonKernelPolynomialBigComplex *)b
                                                                           withJavaMathMathContext:(JavaMathMathContext *)mc;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelPolynomialBigComplex)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelPolynomialBigComplex, real_, JavaMathBigDecimal *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelPolynomialBigComplex, imag_, JavaMathBigDecimal *)

FOUNDATION_EXPORT GeogebraCommonKernelPolynomialBigComplex *GeogebraCommonKernelPolynomialBigComplex_ZERO_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelPolynomialBigComplex, ZERO_, GeogebraCommonKernelPolynomialBigComplex *)

FOUNDATION_EXPORT GeogebraCommonKernelPolynomialBigComplex *GeogebraCommonKernelPolynomialBigComplex_ONE_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelPolynomialBigComplex, ONE_, GeogebraCommonKernelPolynomialBigComplex *)

FOUNDATION_EXPORT void GeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_(GeogebraCommonKernelPolynomialBigComplex *self, JavaMathBigDecimal *real);

FOUNDATION_EXPORT GeogebraCommonKernelPolynomialBigComplex *new_GeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_(JavaMathBigDecimal *real) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_withJavaMathBigDecimal_(GeogebraCommonKernelPolynomialBigComplex *self, JavaMathBigDecimal *real, JavaMathBigDecimal *imag);

FOUNDATION_EXPORT GeogebraCommonKernelPolynomialBigComplex *new_GeogebraCommonKernelPolynomialBigComplex_initWithJavaMathBigDecimal_withJavaMathBigDecimal_(JavaMathBigDecimal *real, JavaMathBigDecimal *imag) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaMathBigDecimal *GeogebraCommonKernelPolynomialBigComplex_sqrtWithJavaMathBigDecimal_withJavaMathMathContext_(JavaMathBigDecimal *d, JavaMathMathContext *mc);

FOUNDATION_EXPORT void GeogebraCommonKernelPolynomialBigComplex_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelPolynomialBigComplex)

#endif // _GeogebraCommonKernelPolynomialBigComplex_H_
