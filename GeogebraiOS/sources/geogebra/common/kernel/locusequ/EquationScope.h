//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/EquationScope.java
//

#ifndef _GeogebraCommonKernelLocusequEquationScope_H_
#define _GeogebraCommonKernelLocusequEquationScope_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/EquationScopeInterface.h"

@class GeogebraCommonKernelAlgosAlgoElement;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint;
@class GeogebraCommonKernelLocusequEquationElement;
@class GeogebraCommonKernelLocusequEquationElementMap;
@class GeogebraCommonKernelLocusequEquationList;
@class GeogebraCommonKernelLocusequEquationPoint;
@class GeogebraCommonKernelLocusequEquationPointMap;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;

@interface GeogebraCommonKernelLocusequEquationScope : NSObject < GeogebraCommonKernelAlgosEquationScopeInterface > {
 @public
  GeogebraCommonKernelLocusequEquationPointMap *pointMap_;
  GeogebraCommonKernelLocusequEquationElementMap *elementsMap_;
  id<JavaUtilSet> auxiliarPoints_;
  jint auxPointIndex_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)path
                      withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)movingPoint;

- (instancetype)initWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)locusPoint
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)movingPoint;

- (void)addPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)point
       withGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)symbolic;

- (id<JavaUtilCollection>)getAllPoints;

- (id<JavaUtilCollection>)getAllVariables;

- (id<JavaUtilSet>)getAuxiliarSymbolicPoints;

- (GeogebraCommonKernelLocusequEquationElement *)getElementWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)key;

- (GeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *)getNewAuxiliarPoint;

- (GeogebraCommonKernelLocusequEquationPoint *)getPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p;

- (GeogebraCommonKernelLocusequEquationList *)getRestrictionsFromAlgoWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algo;

- (void)identifyElementsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)orig
                        withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)target;

- (void)identifyPointsWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)orig
                      withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)target;

- (jboolean)isLocusPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p;

- (jboolean)isMovingPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p;

- (void)registerAuxiliarPointWithGeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint:(GeogebraCommonKernelLocusequEquationAuxiliarSymbolicPoint *)p;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelLocusequEquationScope)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationScope, pointMap_, GeogebraCommonKernelLocusequEquationPointMap *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationScope, elementsMap_, GeogebraCommonKernelLocusequEquationElementMap *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationScope, auxiliarPoints_, id<JavaUtilSet>)

FOUNDATION_EXPORT void GeogebraCommonKernelLocusequEquationScope_init(GeogebraCommonKernelLocusequEquationScope *self);

FOUNDATION_EXPORT GeogebraCommonKernelLocusequEquationScope *new_GeogebraCommonKernelLocusequEquationScope_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelLocusequEquationScope_initWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelLocusequEquationScope *self, GeogebraCommonKernelGeosGeoPoint *locusPoint, GeogebraCommonKernelGeosGeoPoint *movingPoint);

FOUNDATION_EXPORT GeogebraCommonKernelLocusequEquationScope *new_GeogebraCommonKernelLocusequEquationScope_initWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *locusPoint, GeogebraCommonKernelGeosGeoPoint *movingPoint) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelLocusequEquationScope_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelLocusequEquationScope *self, GeogebraCommonKernelGeosGeoElement *path, GeogebraCommonKernelGeosGeoPoint *movingPoint);

FOUNDATION_EXPORT GeogebraCommonKernelLocusequEquationScope *new_GeogebraCommonKernelLocusequEquationScope_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoElement *path, GeogebraCommonKernelGeosGeoPoint *movingPoint) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelLocusequEquationScope)

#endif // _GeogebraCommonKernelLocusequEquationScope_H_
