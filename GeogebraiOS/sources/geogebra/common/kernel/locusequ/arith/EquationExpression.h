//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/arith/EquationExpression.java
//

#ifndef _GeogebraCommonKernelLocusequArithEquationExpression_H_
#define _GeogebraCommonKernelLocusequArithEquationExpression_H_

#include "J2ObjC_header.h"

@class GeogebraCommonKernelLocusequEquationTranslator;

@interface GeogebraCommonKernelLocusequArithEquationExpression : NSObject {
 @public
  GeogebraCommonKernelLocusequArithEquationExpression *opposite_;
  GeogebraCommonKernelLocusequArithEquationExpression *inverse_;
}

#pragma mark Public

- (instancetype)init;

- (jdouble)computeValue;

- (jboolean)containsSymbolicValues;

- (GeogebraCommonKernelLocusequArithEquationExpression *)getInverse;

- (GeogebraCommonKernelLocusequArithEquationExpression *)getOpposite;

- (jboolean)isAbs;

- (jboolean)isAnySymbolicValue;

- (jboolean)isAuxiliarSymbolicValue;

- (jboolean)isDiff;

- (jboolean)isDiv;

- (jboolean)isExp;

- (jboolean)isInverse;

- (jboolean)isNumericValue;

- (jboolean)isOperator;

- (jboolean)isOpposite;

- (jboolean)isProduct;

- (jboolean)isSimplifiable;

- (jboolean)isSpecialSymbolicValue;

- (jboolean)isSqrt;

- (jboolean)isSum;

- (jboolean)isSymbolicValue;

- (jboolean)isTerm;

- (jlong)toLong;

- (NSString *)description;

- (id)translateWithGeogebraCommonKernelLocusequEquationTranslator:(GeogebraCommonKernelLocusequEquationTranslator *)translator;

#pragma mark Protected

- (jdouble)computeValueImpl;

- (jboolean)containsSymbolicValuesImpl;

- (id)translateImplWithGeogebraCommonKernelLocusequEquationTranslator:(GeogebraCommonKernelLocusequEquationTranslator *)translator;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelLocusequArithEquationExpression)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequArithEquationExpression, opposite_, GeogebraCommonKernelLocusequArithEquationExpression *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequArithEquationExpression, inverse_, GeogebraCommonKernelLocusequArithEquationExpression *)

FOUNDATION_EXPORT void GeogebraCommonKernelLocusequArithEquationExpression_init(GeogebraCommonKernelLocusequArithEquationExpression *self);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelLocusequArithEquationExpression)

#endif // _GeogebraCommonKernelLocusequArithEquationExpression_H_
