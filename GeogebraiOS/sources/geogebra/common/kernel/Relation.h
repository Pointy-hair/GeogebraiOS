//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/Relation.java
//

#ifndef _GeogebraCommonKernelRelation_H_
#define _GeogebraCommonKernelRelation_H_

#include "J2ObjC_header.h"

@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum;
@class GeogebraCommonMainApp;
@class IOSObjectArray;
@class JavaLangBoolean;

@interface GeogebraCommonKernelRelation : NSObject

#pragma mark Public

- (instancetype)init;

+ (JavaLangBoolean *)checkGenerallyWithGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                                                                 withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g1
                                                                 withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g2;

+ (IOSObjectArray *)getNDGConditionsWithGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum:(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *)command
                                                                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g1
                                                                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g2;

+ (void)showRelationWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
       withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)ra
       withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)rb;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelRelation)

FOUNDATION_EXPORT void GeogebraCommonKernelRelation_showRelationWithGeogebraCommonMainApp_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonMainApp *app, GeogebraCommonKernelGeosGeoElement *ra, GeogebraCommonKernelGeosGeoElement *rb);

FOUNDATION_EXPORT JavaLangBoolean *GeogebraCommonKernelRelation_checkGenerallyWithGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, GeogebraCommonKernelGeosGeoElement *g1, GeogebraCommonKernelGeosGeoElement *g2);

FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonKernelRelation_getNDGConditionsWithGeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelRelationNumerical_Report_RelationCommandEnum *command, GeogebraCommonKernelGeosGeoElement *g1, GeogebraCommonKernelGeosGeoElement *g2);

FOUNDATION_EXPORT void GeogebraCommonKernelRelation_init(GeogebraCommonKernelRelation *self);

FOUNDATION_EXPORT GeogebraCommonKernelRelation *new_GeogebraCommonKernelRelation_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelRelation)

#endif // _GeogebraCommonKernelRelation_H_
