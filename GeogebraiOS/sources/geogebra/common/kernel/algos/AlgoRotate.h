//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoRotate.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoRotate_H_
#define _GeogebraCommonKernelAlgosAlgoRotate_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoTransformation.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelStringTemplate;
@protocol GeogebraCommonKernelGeosGeoNumberValue;

@interface GeogebraCommonKernelAlgosAlgoRotate : GeogebraCommonKernelAlgosAlgoTransformation

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)A
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)angle;

- (void)compute;

- (jdouble)getAreaScaleFactor;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (jint)getRelatedModeID;

- (GeogebraCommonKernelGeosGeoElement *)getResult;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (GeogebraCommonKernelGeosGeoElement *)getResultTemplateWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setInputOutput;

- (void)setTransformedObjectWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g2;

#pragma mark Package-Private

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)A
              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)angle;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoRotate)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoRotate_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelAlgosAlgoRotate *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelGeosGeoNumberValue> angle);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoRotate *new_GeogebraCommonKernelAlgosAlgoRotate_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelGeosGeoNumberValue> angle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoRotate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelAlgosAlgoRotate *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelGeosGeoNumberValue> angle);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoRotate *new_GeogebraCommonKernelAlgosAlgoRotate_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoNumberValue_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *A, id<GeogebraCommonKernelGeosGeoNumberValue> angle) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoRotate)

#endif // _GeogebraCommonKernelAlgosAlgoRotate_H_
