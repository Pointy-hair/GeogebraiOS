//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoTangentPointND.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoTangentPointND_H_
#define _GeogebraCommonKernelAlgosAlgoTangentPointND_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/TangentAlgo.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoLine;
@class GeogebraCommonKernelKernelNDAlgoIntersectND;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class GeogebraCommonKernelStringTemplate;
@class IOSObjectArray;
@protocol GeogebraCommonKernelAlgosEquationElementInterface;
@protocol GeogebraCommonKernelAlgosEquationScopeInterface;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonKernelAlgosAlgoTangentPointND : GeogebraCommonKernelAlgosAlgoElement < GeogebraCommonKernelAlgosTangentAlgo > {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> P_;
  GeogebraCommonKernelKernelNDGeoConicND *c_;
  IOSObjectArray *tangents_;
  GeogebraCommonKernelGeosGeoLine *polar_;
  GeogebraCommonKernelKernelNDAlgoIntersectND *algoIntersect_;
  IOSObjectArray *tangentPoints_;
  jboolean equalLines_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c;

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (jint)getRelatedModeID;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getTangentPointWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)line;

- (jboolean)isLocusEquable;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (jboolean)checkUndefined;

- (jboolean)isIntersectionPointIncident;

- (void)setInputOutput;

- (void)setPolar;

- (void)setTangentFromPolarWithInt:(jint)i;

- (void)setTangents;

- (void)updatePolarLine;

- (void)updateTangents;

#pragma mark Package-Private

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoTangentPointND)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentPointND, P_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentPointND, c_, GeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentPointND, tangents_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentPointND, polar_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentPointND, algoIntersect_, GeogebraCommonKernelKernelNDAlgoIntersectND *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentPointND, tangentPoints_, IOSObjectArray *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoTangentPointND_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoTangentPointND *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoPointND> P, GeogebraCommonKernelKernelNDGeoConicND *c);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoTangentPointND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoTangentPointND *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P, GeogebraCommonKernelKernelNDGeoConicND *c);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoTangentPointND)

#endif // _GeogebraCommonKernelAlgosAlgoTangentPointND_H_
