//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAngleLinesND.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoAngleLinesND_H_
#define _GeogebraCommonKernelAlgosAlgoAngleLinesND_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoAngle.h"
#include "geogebra/common/kernel/algos/DrawInformationAlgo.h"

@class GeogebraCommonEuclidianDrawDrawAngle;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoAngle;
@class GeogebraCommonKernelStringTemplate;
@class IOSDoubleArray;
@class IOSObjectArray;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoLineND;

@interface GeogebraCommonKernelAlgosAlgoAngleLinesND : GeogebraCommonKernelAlgosAlgoAngle < GeogebraCommonKernelAlgosDrawInformationAlgo > {
 @public
  id<GeogebraCommonKernelKernelNDGeoLineND> g_, h_;
  GeogebraCommonKernelGeosGeoAngle *angle_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)h
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (GeogebraCommonKernelGeosGeoAngle *)getAngle;

- (jboolean)getCoordsInD3WithGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords;

- (id<GeogebraCommonKernelKernelNDGeoLineND>)getg;

- (id<GeogebraCommonKernelKernelNDGeoLineND>)geth;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
 withGeogebraCommonEuclidianDrawDrawAngle:(GeogebraCommonEuclidianDrawDrawAngle *)drawable;

#pragma mark Protected

- (instancetype)initWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
                    withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)h;

- (void)setInputWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
                withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)h
           withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setInputOutput;

#pragma mark Package-Private

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)h
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoAngleLinesND)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleLinesND, g_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleLinesND, h_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleLinesND, angle_, GeogebraCommonKernelGeosGeoAngle *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoAngleLinesND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelAlgosAlgoAngleLinesND *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoLineND> g, id<GeogebraCommonKernelKernelNDGeoLineND> h, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoAngleLinesND_initWithGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_(GeogebraCommonKernelAlgosAlgoAngleLinesND *self, id<GeogebraCommonKernelKernelNDGeoLineND> g, id<GeogebraCommonKernelKernelNDGeoLineND> h);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoAngleLinesND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelAlgosAlgoAngleLinesND *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> g, id<GeogebraCommonKernelKernelNDGeoLineND> h, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoAngleLinesND_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelAlgosAlgoAngleLinesND *self, GeogebraCommonKernelConstruction *cons);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoAngleLinesND)

#endif // _GeogebraCommonKernelAlgosAlgoAngleLinesND_H_
