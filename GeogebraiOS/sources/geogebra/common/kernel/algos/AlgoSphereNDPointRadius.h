//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoSphereNDPointRadius.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_H_
#define _GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernelNDGeoQuadricND;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelKernelNDGeoSegmentND;

#define GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_TYPE_RADIUS 0
#define GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_TYPE_SEGMENT 1

@interface GeogebraCommonKernelAlgosAlgoSphereNDPointRadius : GeogebraCommonKernelAlgosAlgoElement

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r;

- (void)compute;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getCenter;

- (GeogebraCommonKernelGeosGeoElement *)getRadiusGeo;

- (GeogebraCommonKernelKernelNDGeoQuadricND *)getSphereND;

- (void)setRadiusWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)newRadius;

#pragma mark Protected

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
            withGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)rgeo;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
            withGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)segment
                                             withBoolean:(jboolean)dummy;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)M
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r;

- (GeogebraCommonKernelKernelNDGeoQuadricND *)createSphereNDWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getM;

- (GeogebraCommonKernelGeosGeoElement *)getRGeo;

- (jint)getType;

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius, TYPE_RADIUS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius, TYPE_SEGMENT, jint)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelArithmeticNumberValue> r);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoSegmentND_withBoolean_(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelKernelNDGeoSegmentND> segment, jboolean dummy);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelArithmeticNumberValue> r);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoSegmentND_(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> M, id<GeogebraCommonKernelKernelNDGeoSegmentND> rgeo);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoSphereNDPointRadius)

#endif // _GeogebraCommonKernelAlgosAlgoSphereNDPointRadius_H_
