//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAngleVectorsND.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoAngleVectorsND_H_
#define _GeogebraCommonKernelAlgosAlgoAngleVectorsND_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoAngle.h"

@class GeogebraCommonEuclidianDrawDrawAngle;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoAngle;
@class GeogebraCommonKernelStringTemplate;
@class IOSDoubleArray;
@class IOSObjectArray;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoVectorND;

@interface GeogebraCommonKernelAlgosAlgoAngleVectorsND : GeogebraCommonKernelAlgosAlgoAngle {
 @public
  id<GeogebraCommonKernelKernelNDGeoVectorND> v_, w_;
  GeogebraCommonKernelGeosGeoAngle *angle_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)v
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)w;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)v
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)w
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (GeogebraCommonKernelGeosGeoAngle *)getAngle;

- (jboolean)getCoordsInD3WithGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)drawCoords;

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)getv;

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)getw;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (jboolean)updateDrawInfoWithDoubleArray:(IOSDoubleArray *)m
                          withDoubleArray:(IOSDoubleArray *)firstVec
 withGeogebraCommonEuclidianDrawDrawAngle:(GeogebraCommonEuclidianDrawDrawAngle *)drawable;

#pragma mark Protected

- (void)setInputWithGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)v
                withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)w
             withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)orientation;

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoAngleVectorsND)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleVectorsND, v_, id<GeogebraCommonKernelKernelNDGeoVectorND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleVectorsND, w_, id<GeogebraCommonKernelKernelNDGeoVectorND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAngleVectorsND, angle_, GeogebraCommonKernelGeosGeoAngle *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoAngleVectorsND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_(GeogebraCommonKernelAlgosAlgoAngleVectorsND *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoVectorND> w);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoAngleVectorsND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelAlgosAlgoAngleVectorsND *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoVectorND> w, id<GeogebraCommonKernelKernelNDGeoDirectionND> orientation);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoAngleVectorsND)

#endif // _GeogebraCommonKernelAlgosAlgoAngleVectorsND_H_
