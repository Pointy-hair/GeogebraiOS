//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoIntersectPolynomialConic.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_H_
#define _GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoSimpleRootsPolynomial.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoConic;
@class GeogebraCommonKernelGeosGeoFunction;
@class IOSObjectArray;

@interface GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic : GeogebraCommonKernelAlgosAlgoSimpleRootsPolynomial

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)h
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                                             withBoolean:(jboolean)setLabel
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)h
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (jint)getRelatedModeID;

#pragma mark Protected

- (jdouble)getYValueWithDouble:(jdouble)x;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunction *h, GeogebraCommonKernelGeosGeoConic *c);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic *new_GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunction *h, GeogebraCommonKernelGeosGeoConic *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withBoolean_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, jboolean setLabel, GeogebraCommonKernelGeosGeoFunction *h, GeogebraCommonKernelGeosGeoConic *c);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic *new_GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_initWithGeogebraCommonKernelConstruction_withNSStringArray_withBoolean_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, jboolean setLabel, GeogebraCommonKernelGeosGeoFunction *h, GeogebraCommonKernelGeosGeoConic *c) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic)

#endif // _GeogebraCommonKernelAlgosAlgoIntersectPolynomialConic_H_
