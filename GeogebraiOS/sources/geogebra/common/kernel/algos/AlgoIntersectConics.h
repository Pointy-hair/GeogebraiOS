//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoIntersectConics.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoIntersectConics_H_
#define _GeogebraCommonKernelAlgosAlgoIntersectConics_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/RestrictionAlgoForLocusEquation.h"
#include "geogebra/common/kernel/algos/AlgoIntersect.h"
#include "geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoConic;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelPointPairList;
@class IOSBooleanArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelAlgosEquationElementInterface;
@protocol GeogebraCommonKernelAlgosEquationScopeInterface;

#define GeogebraCommonKernelAlgosAlgoIntersectConics_DIST_MEMORY_SIZE 8

@interface GeogebraCommonKernelAlgosAlgoIntersectConics : GeogebraCommonKernelAlgosAlgoIntersect < GeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo, GeogebraCommonKernelRestrictionAlgoForLocusEquation > {
 @public
  JavaUtilArrayList *preexistPoints_;
  JavaUtilArrayList *newPoints_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)A
                    withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)B;

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (void)compute;

+ (void)distanceTableWithGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)D
                                                  withIntArray:(IOSIntArray *)age
                     withGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)Q
                                              withDoubleArray2:(IOSObjectArray *)table;

- (GeogebraCommonKernelGeosGeoConic *)getA;

- (GeogebraCommonKernelGeosGeoConic *)getB;

- (IOSObjectArray *)getBotanaPolynomialsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (IOSObjectArray *)getIntersectionPoints;

- (jint)getRelatedModeID;

- (void)initForNearToRelationship OBJC_METHOD_FAMILY_NONE;

- (void)intersectConicsWithGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)conic1
                       withGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)conic2
                  withGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)points;

- (jboolean)isLocusEquable;

- (jboolean)isNearToAlgorithm;

- (void)setInputOutput;

#pragma mark Protected

- (IOSObjectArray *)getLastDefinedIntersectionPoints;

#pragma mark Package-Private

+ (void)setNearToWithGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)P
                                          withBooleanArray:(IOSBooleanArray *)isPalive
                 withGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)Q
                                          withBooleanArray:(IOSBooleanArray *)isQonPath
                                          withDoubleArray2:(IOSObjectArray *)distTable
                     withGeogebraCommonKernelPointPairList:(GeogebraCommonKernelPointPairList *)pointList
                                              withIntArray:(IOSIntArray *)permutation;

+ (void)setNearToWithGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)P
                                          withBooleanArray:(IOSBooleanArray *)isPalive
                 withGeogebraCommonKernelGeosGeoPointArray:(IOSObjectArray *)Q
                                          withBooleanArray:(IOSBooleanArray *)isQonPath
                                          withDoubleArray2:(IOSObjectArray *)distTable
                     withGeogebraCommonKernelPointPairList:(GeogebraCommonKernelPointPairList *)pointList
                                              withIntArray:(IOSIntArray *)permutation
                                               withBoolean:(jboolean)needStrict
                                                withDouble:(jdouble)eps;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoIntersectConics)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIntersectConics, preexistPoints_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIntersectConics, newPoints_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelAlgosAlgoIntersectConics, DIST_MEMORY_SIZE, jint)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectConics_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelAlgosAlgoIntersectConics *self, GeogebraCommonKernelConstruction *cons);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoIntersectConics *new_GeogebraCommonKernelAlgosAlgoIntersectConics_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *cons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectConics_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelAlgosAlgoIntersectConics *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoConic *A, GeogebraCommonKernelGeosGeoConic *B);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoIntersectConics *new_GeogebraCommonKernelAlgosAlgoIntersectConics_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoConic_withGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoConic *A, GeogebraCommonKernelGeosGeoConic *B) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectConics_distanceTableWithGeogebraCommonKernelGeosGeoPointArray_withIntArray_withGeogebraCommonKernelGeosGeoPointArray_withDoubleArray2_(IOSObjectArray *D, IOSIntArray *age, IOSObjectArray *Q, IOSObjectArray *table);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectConics_setNearToWithGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withDoubleArray2_withGeogebraCommonKernelPointPairList_withIntArray_withBoolean_withDouble_(IOSObjectArray *P, IOSBooleanArray *isPalive, IOSObjectArray *Q, IOSBooleanArray *isQonPath, IOSObjectArray *distTable, GeogebraCommonKernelPointPairList *pointList, IOSIntArray *permutation, jboolean needStrict, jdouble eps);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectConics_setNearToWithGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withGeogebraCommonKernelGeosGeoPointArray_withBooleanArray_withDoubleArray2_withGeogebraCommonKernelPointPairList_withIntArray_(IOSObjectArray *P, IOSBooleanArray *isPalive, IOSObjectArray *Q, IOSBooleanArray *isQonPath, IOSObjectArray *distTable, GeogebraCommonKernelPointPairList *pointList, IOSIntArray *permutation);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoIntersectConics)

#endif // _GeogebraCommonKernelAlgosAlgoIntersectConics_H_
