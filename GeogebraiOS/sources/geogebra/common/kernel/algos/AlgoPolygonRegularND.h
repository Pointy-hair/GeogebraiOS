//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoPolygonRegularND.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoPolygonRegularND_H_
#define _GeogebraCommonKernelAlgosAlgoPolygonRegularND_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/PolygonAlgo.h"

@class GeogebraCommonKernelArithmeticMyDouble;
@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoPolygon;
@class IOSObjectArray;
@protocol GeogebraCommonKernelAlgosEquationElementInterface;
@protocol GeogebraCommonKernelAlgosEquationScopeInterface;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoDirectionND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonKernelAlgosAlgoPolygonRegularND : GeogebraCommonKernelAlgosAlgoElement < GeogebraCommonKernelAlgosPolygonAlgo > {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> A_;
  id<GeogebraCommonKernelKernelNDGeoPointND> B_;
  id<GeogebraCommonKernelArithmeticNumberValue> num_;
  jint numOld_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPolygon_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPoints_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputSegments_;
  id<GeogebraCommonKernelKernelNDGeoPointND> centerPoint_;
  GeogebraCommonKernelArithmeticMyDouble *rotAngle_;
  jboolean labelPointsAndSegments_;
  jboolean showNewSegmentsLabels_;
  jboolean showNewPointsLabels_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                       withNSStringArray:(IOSObjectArray *)labels
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A1
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B1
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)num
          withGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)direction;

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (void)calcArea;

- (void)compute;

- (void)computeWithInt:(jint)nd;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (jint)getCurrentPointsLength;

- (GeogebraCommonKernelGeosGeoPolygon *)getPoly;

- (jint)getRelatedModeID;

- (jboolean)isLocusEquable;

- (void)removeOutputExceptWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)keepGeo;

#pragma mark Protected

- (jboolean)checkUnDefinedWithInt:(jint)n;

- (GeogebraCommonKernelGeosGeoElement *)newGeoPointWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelGeosGeoPolygon *)newGeoPolygonWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons OBJC_METHOD_FAMILY_NONE;

- (void)rotateWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point;

- (void)rotatePointsWithInt:(jint)n
                 withDouble:(jdouble)alpha;

- (void)setCenterPointWithInt:(jint)n
                   withDouble:(jdouble)beta;

- (void)setDirectionWithGeogebraCommonKernelKernelNDGeoDirectionND:(id<GeogebraCommonKernelKernelNDGeoDirectionND>)direction;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoPolygonRegularND)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, A_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, B_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, num_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, outputPolygon_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, outputPoints_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, outputSegments_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, centerPoint_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolygonRegularND, rotAngle_, GeogebraCommonKernelArithmeticMyDouble *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolygonRegularND_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelKernelNDGeoDirectionND_(GeogebraCommonKernelAlgosAlgoPolygonRegularND *self, GeogebraCommonKernelConstruction *c, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoPointND> A1, id<GeogebraCommonKernelKernelNDGeoPointND> B1, id<GeogebraCommonKernelArithmeticNumberValue> num, id<GeogebraCommonKernelKernelNDGeoDirectionND> direction);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoPolygonRegularND)

#endif // _GeogebraCommonKernelAlgosAlgoPolygonRegularND_H_
