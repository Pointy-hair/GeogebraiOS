//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoLineBisectorSegment.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoLineBisectorSegment_H_
#define _GeogebraCommonKernelAlgosAlgoLineBisectorSegment_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/SymbolicParametersAlgo.h"
#include "geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"

@class GeogebraCommonKernelAlgosSymbolicParameters;
@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoLine;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelGeosGeoSegment;
@class GeogebraCommonKernelStringTemplate;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@protocol GeogebraCommonKernelAlgosEquationElementInterface;
@protocol GeogebraCommonKernelAlgosEquationScopeInterface;

@interface GeogebraCommonKernelAlgosAlgoLineBisectorSegment : GeogebraCommonKernelAlgosAlgoElement < GeogebraCommonKernelAlgosSymbolicParametersAlgo, GeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoSegment:(GeogebraCommonKernelGeosGeoSegment *)s;

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (void)compute;

- (IOSObjectArray *)getBotanaPolynomialsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (IOSIntArray *)getDegrees;

- (IOSObjectArray *)getExactCoordinatesWithJavaUtilHashMap:(JavaUtilHashMap *)values;

- (void)getFreeVariablesWithJavaUtilHashSet:(JavaUtilHashSet *)variables;

- (GeogebraCommonKernelGeosGeoElement *)getInputWithInt:(jint)i;

- (GeogebraCommonKernelGeosGeoLine *)getLine;

- (GeogebraCommonKernelGeosGeoPoint *)getMidPoint;

- (IOSObjectArray *)getPolynomials;

- (jint)getRelatedModeID;

- (GeogebraCommonKernelGeosGeoSegment *)getSegment;

- (GeogebraCommonKernelAlgosSymbolicParameters *)getSymbolicParameters;

- (jboolean)isLocusEquable;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (jint)getInputLengthForCommandDescription;

- (jint)getInputLengthForXML;

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoLineBisectorSegment)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoLineBisectorSegment_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoSegment_(GeogebraCommonKernelAlgosAlgoLineBisectorSegment *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoSegment *s);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoLineBisectorSegment *new_GeogebraCommonKernelAlgosAlgoLineBisectorSegment_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoSegment_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoSegment *s) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoLineBisectorSegment)

#endif // _GeogebraCommonKernelAlgosAlgoLineBisectorSegment_H_
