//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoIntersectLinePolyLine.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine_H_
#define _GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoPolyLine;
@class GeogebraCommonKernelStringTemplate;
@class IOSObjectArray;
@class JavaUtilTreeMap;
@protocol GeogebraCommonKernelGeosGeoPoly;
@protocol GeogebraCommonKernelKernelNDGeoLineND;

@interface GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine : GeogebraCommonKernelAlgosAlgoElement {
 @public
  id<GeogebraCommonKernelKernelNDGeoLineND> g_;
  GeogebraCommonKernelGeosGeoPolyLine *p_;
  id<GeogebraCommonKernelGeosGeoPoly> pi_;
  GeogebraCommonKernelAlgosAlgoElement_OutputHandler *outputPoints_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                       withNSStringArray:(IOSObjectArray *)labels
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
                     withGeogebraCommonKernelGeosGeoPoly:(id<GeogebraCommonKernelGeosGeoPoly>)p;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (jint)getRelatedModeID;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)createOutputPoints;

- (void)intersectionsCoordsWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
                             withGeogebraCommonKernelGeosGeoPolyLine:(GeogebraCommonKernelGeosGeoPolyLine *)p
                                                 withJavaUtilTreeMap:(JavaUtilTreeMap *)newCoords;

- (void)setInputOutput;

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine, g_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine, p_, GeogebraCommonKernelGeosGeoPolyLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine, pi_, id<GeogebraCommonKernelGeosGeoPoly>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine, outputPoints_, GeogebraCommonKernelAlgosAlgoElement_OutputHandler *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelGeosGeoPoly_(GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine *self, GeogebraCommonKernelConstruction *c, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoLineND> g, id<GeogebraCommonKernelGeosGeoPoly> p);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine *new_GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelGeosGeoPoly_(GeogebraCommonKernelConstruction *c, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoLineND> g, id<GeogebraCommonKernelGeosGeoPoly> p) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine)

#endif // _GeogebraCommonKernelAlgosAlgoIntersectLinePolyLine_H_
