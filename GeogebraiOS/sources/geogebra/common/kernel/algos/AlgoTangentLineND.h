//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoTangentLineND.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoTangentLineND_H_
#define _GeogebraCommonKernelAlgosAlgoTangentLineND_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/TangentAlgo.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoLine;
@class GeogebraCommonKernelKernelNDAlgoIntersectND;
@class GeogebraCommonKernelKernelNDGeoConicND;
@class GeogebraCommonKernelStringTemplate;
@class IOSObjectArray;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonKernelAlgosAlgoTangentLineND : GeogebraCommonKernelAlgosAlgoElement < GeogebraCommonKernelAlgosTangentAlgo > {
 @public
  id<GeogebraCommonKernelKernelNDGeoLineND> g_;
  GeogebraCommonKernelKernelNDGeoConicND *c_;
  IOSObjectArray *tangents_;
  GeogebraCommonKernelGeosGeoLine *diameter_;
  GeogebraCommonKernelKernelNDAlgoIntersectND *algoIntersect_;
  IOSObjectArray *tangentPoints_;
  jint i_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (jint)getRelatedModeID;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getTangentPointWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)conic
                                                                withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)line;

- (IOSObjectArray *)getTangents;

- (void)setInputOutput;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c;

- (jboolean)checkUndefined;

- (void)initDiameterAndDirection OBJC_METHOD_FAMILY_NONE;

- (void)setTangents;

- (void)updateDiameterLine;

- (void)updateTangentWithInt:(jint)index;

#pragma mark Package-Private

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
               withGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g
              withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)c;

- (GeogebraCommonKernelKernelNDGeoConicND *)getConic;

- (id<GeogebraCommonKernelKernelNDGeoLineND>)getLine;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoTangentLineND)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentLineND, g_, id<GeogebraCommonKernelKernelNDGeoLineND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentLineND, c_, GeogebraCommonKernelKernelNDGeoConicND *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentLineND, tangents_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentLineND, diameter_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentLineND, algoIntersect_, GeogebraCommonKernelKernelNDAlgoIntersectND *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoTangentLineND, tangentPoints_, IOSObjectArray *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoTangentLineND_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoTangentLineND *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoLineND> g, GeogebraCommonKernelKernelNDGeoConicND *c);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoTangentLineND_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoTangentLineND *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, id<GeogebraCommonKernelKernelNDGeoLineND> g, GeogebraCommonKernelKernelNDGeoConicND *c);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoTangentLineND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoLineND_withGeogebraCommonKernelKernelNDGeoConicND_(GeogebraCommonKernelAlgosAlgoTangentLineND *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoLineND> g, GeogebraCommonKernelKernelNDGeoConicND *c);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoTangentLineND)

#endif // _GeogebraCommonKernelAlgosAlgoTangentLineND_H_
