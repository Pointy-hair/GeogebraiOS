//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoElement.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoElement_H_
#define _GeogebraCommonKernelAlgosAlgoElement_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/EuclidianViewCE.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelStringTemplate;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class JavaUtilTreeSet;
@protocol GeogebraCommonKernelAlgosAlgoElement_elementFactory;
@protocol GeogebraCommonKernelAlgosEquationElementInterface;
@protocol GeogebraCommonKernelAlgosEquationScopeInterface;
@protocol GeogebraCommonKernelAlgosGetCommand;
@protocol GeogebraCommonKernelGeosToGeoElement;
@protocol JavaUtilList;

@interface GeogebraCommonKernelAlgosAlgoElement : GeogebraCommonKernelAlgosConstructionElement < GeogebraCommonKernelEuclidianViewCE > {
 @public
  IOSObjectArray *input_;
  jboolean stopUpdateCascade_;
  jboolean removed_;
  jboolean protectedInput_;
  JavaLangStringBuilder *sbAE_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (void)addPredecessorsToSetWithJavaUtilTreeSet:(JavaUtilTreeSet *)set
                                    withBoolean:(jboolean)onlyIndependent;

- (void)addRandomizablePredecessorsToSetWithJavaUtilTreeSet:(JavaUtilTreeSet *)set;

- (void)addToConstructionList;

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)element
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope;

- (jint)compareToWithId:(GeogebraCommonKernelAlgosConstructionElement *)obj;

- (void)compute;

- (jboolean)euclidianViewUpdate;

- (NSString *)getAlgebraDescriptionRegrOutWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (JavaUtilTreeSet *)getAllIndependentPredecessors;

- (id<GeogebraCommonKernelAlgosGetCommand>)getClassName;

- (NSString *)getCommandDescriptionWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)getCommandNameWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (jint)getConstructionIndex;

- (NSString *)getDefinitionDescriptionWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (JavaUtilArrayList *)getFreeInputPoints;

- (IOSObjectArray *)getGeoElements;

- (IOSObjectArray *)getInput;

- (GeogebraCommonKernelGeosGeoElement *)getInputWithInt:(jint)i;

- (IOSObjectArray *)getInputForUpdateSetPropagation;

- (JavaUtilArrayList *)getInputPoints;

- (jint)getMaxConstructionIndex;

- (jint)getMinConstructionIndex;

- (NSString *)getNameDescription;

- (IOSObjectArray *)getOutput;

- (GeogebraCommonKernelGeosGeoElement *)getOutputWithInt:(jint)i;

- (id<JavaUtilList>)getOutputHandler;

- (jint)getOutputLength;

- (GeogebraCommonKernelAlgosAlgoElement *)getUpdateAfterAlgo;

- (NSString *)getXML;

- (void)getXMLWithBoolean:(jboolean)getlistenersToo
withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)getXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                            withBoolean:(jboolean)includeOutputGeos;

- (void)getXML_OGPWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)getXML_OGPWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                withBoolean:(jboolean)includeOutputGeos;

- (jboolean)hasSingleOutputType;

- (void)initForNearToRelationship OBJC_METHOD_FAMILY_NONE;

- (jboolean)isAlgoElement;

- (jboolean)isConsProtocolBreakpoint;

- (jboolean)isGeoElement;

- (jboolean)isIndependent;

- (jboolean)isLaTeXTextCommand;

- (jboolean)isLocusEquable;

- (jboolean)isNearToAlgorithm;

- (void)notifyAdd;

- (void)notifyRemove;

- (void)remove;

- (void)removeWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)outArg;

- (void)removeOutputExceptWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)keepGeo;

- (void)removeOutputFromAlgebraView;

- (void)removeOutputFromPicking;

- (void)setOutputHandlerWithJavaUtilList:(id<JavaUtilList>)outputHandler;

- (void)setPrintedInXMLWithBoolean:(jboolean)flag;

- (void)setProtectedInputWithBoolean:(jboolean)flag;

- (void)setUpdateAfterAlgoWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)updateAfterAlgo;

- (NSString *)description;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)update;

+ (void)updateCascadeAlgosWithJavaUtilArrayList:(JavaUtilArrayList *)algos;

- (jboolean)updateUnlabeledRandomGeos;

- (jboolean)wantsConstructionProtocolUpdate;

#pragma mark Protected

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                             withBoolean:(jboolean)addToConstructionList;

- (void)doSetDependencies;

- (void)getCmdOutputXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
          withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)getExpXMLWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (jint)getInputLength;

- (jint)getInputLengthForCommandDescription;

- (jint)getInputLengthForCommandDescriptionMayNeedXOYPlane;

- (jint)getInputLengthForXML;

- (jint)getInputLengthForXMLMayNeedXOYPlane;

- (GeogebraCommonKernelGeosGeoElement *)getInputMaybeXOYPlaneWithInt:(jint)i;

- (void)getOutputXMLWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)isPrintedInXML;

- (void)refreshOutput;

- (void)removeOutput;

- (void)setDependencies;

- (void)setDependenciesOutputOnly;

- (void)setEfficientDependenciesWithGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)standardInput
                                withGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)efficientInput;

- (void)setInputOutput;

- (void)setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:(id<GeogebraCommonKernelGeosToGeoElement>)g;

- (void)setOutputWithGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)geo;

- (void)setOutputWithInt:(jint)i
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setOutputDependenciesWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)output;

- (void)setOutputLengthWithInt:(jint)n;

- (void)setStopUpdateCascadeWithBoolean:(jboolean)stopUpdateCascade;

- (NSString *)toExpStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)updateDependentGeos;

#pragma mark Package-Private

- (jboolean)doStopUpdateCascade;

+ (NSString *)getCommandStringWithGeogebraCommonKernelAlgosGetCommand:(id<GeogebraCommonKernelAlgosGetCommand>)classname;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoElement)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoElement, input_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoElement, sbAE_, JavaLangStringBuilder *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelAlgosAlgoElement *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonKernelAlgosAlgoElement *self, GeogebraCommonKernelConstruction *c, jboolean addToConstructionList);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelAlgosAlgoElement_getCommandStringWithGeogebraCommonKernelAlgosGetCommand_(id<GeogebraCommonKernelAlgosGetCommand> classname);

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoElement_updateCascadeAlgosWithJavaUtilArrayList_(JavaUtilArrayList *algos);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoElement)

@interface GeogebraCommonKernelAlgosAlgoElement_OutputHandler : NSObject {
 @public
  jboolean setLabels__;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)outer$
     withGeogebraCommonKernelAlgosAlgoElement_elementFactory:(id<GeogebraCommonKernelAlgosAlgoElement_elementFactory>)fac;

- (instancetype)initWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)outer$
     withGeogebraCommonKernelAlgosAlgoElement_elementFactory:(id<GeogebraCommonKernelAlgosAlgoElement_elementFactory>)fac
                                           withNSStringArray:(IOSObjectArray *)labels;

- (id)addLabelWithNSString:(NSString *)label;

- (void)addOutputWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                            withBoolean:(jboolean)setDependencies;

- (void)addOutputWithGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)geos
                                                 withBoolean:(jboolean)setDependencies
                                                 withBoolean:(jboolean)refresh;

- (void)adjustOutputSizeWithInt:(jint)size;

- (void)adjustOutputSizeWithInt:(jint)size
                    withBoolean:(jboolean)setDependencies;

- (void)augmentOutputSizeWithInt:(jint)size;

- (void)augmentOutputSizeWithInt:(jint)increment
                     withBoolean:(jboolean)setDependencies;

- (id)getElementWithInt:(jint)i;

- (IOSObjectArray *)getOutputWithGeogebraCommonKernelGeosGeoElementArray:(IOSObjectArray *)a;

- (void)removeFromHandler;

- (void)setIndexLabelsWithNSString:(NSString *)label;

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)labels;

- (void)setUndefined;

- (jint)size;

- (void)update;

- (void)updateLabels;

- (void)updateParentAlgorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoElement_OutputHandler)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(GeogebraCommonKernelAlgosAlgoElement_OutputHandler *self, GeogebraCommonKernelAlgosAlgoElement *outer$, id<GeogebraCommonKernelAlgosAlgoElement_elementFactory> fac);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoElement_OutputHandler *new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_(GeogebraCommonKernelAlgosAlgoElement *outer$, id<GeogebraCommonKernelAlgosAlgoElement_elementFactory> fac) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_withNSStringArray_(GeogebraCommonKernelAlgosAlgoElement_OutputHandler *self, GeogebraCommonKernelAlgosAlgoElement *outer$, id<GeogebraCommonKernelAlgosAlgoElement_elementFactory> fac, IOSObjectArray *labels);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoElement_OutputHandler *new_GeogebraCommonKernelAlgosAlgoElement_OutputHandler_initWithGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosAlgoElement_elementFactory_withNSStringArray_(GeogebraCommonKernelAlgosAlgoElement *outer$, id<GeogebraCommonKernelAlgosAlgoElement_elementFactory> fac, IOSObjectArray *labels) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoElement_OutputHandler)

@protocol GeogebraCommonKernelAlgosAlgoElement_elementFactory < NSObject, JavaObject >

- (id)newElement OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoElement_elementFactory)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoElement_elementFactory)

#endif // _GeogebraCommonKernelAlgosAlgoElement_H_
