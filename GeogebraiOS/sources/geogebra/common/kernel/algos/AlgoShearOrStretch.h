//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoShearOrStretch.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoShearOrStretch_H_
#define _GeogebraCommonKernelAlgosAlgoShearOrStretch_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoTransformation.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoConicPart;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoVec3D;
@protocol GeogebraCommonKernelArithmeticNumberValue;

@interface GeogebraCommonKernelAlgosAlgoShearOrStretch : GeogebraCommonKernelAlgosAlgoTransformation

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)inArg
                    withGeogebraCommonKernelGeosGeoVec3D:(GeogebraCommonKernelGeosGeoVec3D *)l
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)num
                                             withBoolean:(jboolean)shear;

- (void)compute;

- (jdouble)getAreaScaleFactor;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (GeogebraCommonKernelGeosGeoElement *)getResult;

- (jboolean)swapOrientationWithGeogebraCommonKernelGeosGeoConicPart:(GeogebraCommonKernelGeosGeoConicPart *)arc;

#pragma mark Protected

- (GeogebraCommonKernelGeosGeoElement *)getResultTemplateWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setInputOutput;

- (void)setTransformedObjectWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)g2;

- (void)transformLimitedPathWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)a
                            withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoShearOrStretch)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoShearOrStretch_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(GeogebraCommonKernelAlgosAlgoShearOrStretch *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *inArg, GeogebraCommonKernelGeosGeoVec3D *l, id<GeogebraCommonKernelArithmeticNumberValue> num, jboolean shear);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoShearOrStretch *new_GeogebraCommonKernelAlgosAlgoShearOrStretch_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *inArg, GeogebraCommonKernelGeosGeoVec3D *l, id<GeogebraCommonKernelArithmeticNumberValue> num, jboolean shear) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoShearOrStretch)

#endif // _GeogebraCommonKernelAlgosAlgoShearOrStretch_H_
