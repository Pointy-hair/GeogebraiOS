//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoPolyLine.java
//

#ifndef _GeogebraCommonKernelAlgosAlgoPolyLine_H_
#define _GeogebraCommonKernelAlgosAlgoPolyLine_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/GetPointsAlgo.h"

@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoList;
@class GeogebraCommonKernelGeosGeoPolyLine;
@class GeogebraCommonKernelStringTemplate;
@class IOSObjectArray;
@class JavaLangStringBuilder;

@interface GeogebraCommonKernelAlgosAlgoPolyLine : GeogebraCommonKernelAlgosAlgoElement < GeogebraCommonKernelAlgosGetPointsAlgo > {
 @public
  IOSObjectArray *points_;
  GeogebraCommonKernelGeosGeoList *geoList_;
  GeogebraCommonKernelGeosGeoPolyLine *poly_;
  JavaLangStringBuilder *sb_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                                             withBoolean:(jboolean)penStroke;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                                             withBoolean:(jboolean)penStroke;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                                             withBoolean:(jboolean)penStroke;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                                             withBoolean:(jboolean)penStroke;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                       withNSStringArray:(IOSObjectArray *)labels
         withGeogebraCommonKernelKernelNDGeoPointNDArray:(IOSObjectArray *)points
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                                             withBoolean:(jboolean)penStroke;

- (void)compute;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (IOSObjectArray *)getPoints;

- (GeogebraCommonKernelGeosGeoList *)getPointsList;

- (GeogebraCommonKernelGeosGeoPolyLine *)getPoly;

- (jint)getRelatedModeID;

- (void)setPointsListWithGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)newPts;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)update;

#pragma mark Protected

- (void)createPolyLine;

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelAlgosAlgoPolyLine)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolyLine, points_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolyLine, geoList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolyLine, poly_, GeogebraCommonKernelGeosGeoPolyLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoPolyLine, sb_, JavaLangStringBuilder *)

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoList *geoList);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoList *geoList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoList *geoList, jboolean penStroke);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, GeogebraCommonKernelGeosGeoList *geoList, jboolean penStroke) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointNDArray_withBoolean_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, IOSObjectArray *points, jboolean penStroke);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointNDArray_withBoolean_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, IOSObjectArray *points, jboolean penStroke) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_withBoolean_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *points, jboolean penStroke);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_withBoolean_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *points, jboolean penStroke) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, IOSObjectArray *points, GeogebraCommonKernelGeosGeoList *geoList);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, IOSObjectArray *points, GeogebraCommonKernelGeosGeoList *geoList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, IOSObjectArray *points, GeogebraCommonKernelGeosGeoList *geoList, jboolean penStroke);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *labels, IOSObjectArray *points, GeogebraCommonKernelGeosGeoList *geoList, jboolean penStroke) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelAlgosAlgoPolyLine *self, GeogebraCommonKernelConstruction *cons, IOSObjectArray *points, GeogebraCommonKernelGeosGeoList *geoList, jboolean penStroke);

FOUNDATION_EXPORT GeogebraCommonKernelAlgosAlgoPolyLine *new_GeogebraCommonKernelAlgosAlgoPolyLine_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointNDArray_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelConstruction *cons, IOSObjectArray *points, GeogebraCommonKernelGeosGeoList *geoList, jboolean penStroke) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelAlgosAlgoPolyLine)

#endif // _GeogebraCommonKernelAlgosAlgoPolyLine_H_
