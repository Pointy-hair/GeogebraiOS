//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/TransformShearOrStretch.java
//

#ifndef _GeogebraCommonKernelTransformShearOrStretch_H_
#define _GeogebraCommonKernelTransformShearOrStretch_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/Transform.h"

@class GeogebraCommonKernelAlgosAlgoTransformation;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoNumeric;
@class GeogebraCommonKernelGeosGeoVec3D;

@interface GeogebraCommonKernelTransformShearOrStretch : GeogebraCommonKernelTransform

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoVec3D:(GeogebraCommonKernelGeosGeoVec3D *)line
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)num
                                             withBoolean:(jboolean)shear;

- (jboolean)changesOrientation;

- (jboolean)isSimilar;

#pragma mark Protected

- (GeogebraCommonKernelAlgosAlgoTransformation *)getTransformAlgoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelTransformShearOrStretch)

FOUNDATION_EXPORT void GeogebraCommonKernelTransformShearOrStretch_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(GeogebraCommonKernelTransformShearOrStretch *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoVec3D *line, GeogebraCommonKernelGeosGeoNumeric *num, jboolean shear);

FOUNDATION_EXPORT GeogebraCommonKernelTransformShearOrStretch *new_GeogebraCommonKernelTransformShearOrStretch_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoVec3D *line, GeogebraCommonKernelGeosGeoNumeric *num, jboolean shear) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelTransformShearOrStretch)

#endif // _GeogebraCommonKernelTransformShearOrStretch_H_
