//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/implicit/PolynomialUtils.java
//

#ifndef _GeogebraCommonKernelImplicitPolynomialUtils_H_
#define _GeogebraCommonKernelImplicitPolynomialUtils_H_

#include "J2ObjC_header.h"

@class GeogebraCommonKernelImplicitGeoImplicitPoly;
@class GeogebraCommonKernelPolynomialBigPolynomial;
@class IOSDoubleArray;
@class IOSObjectArray;
@class OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction;

@interface GeogebraCommonKernelImplicitPolynomialUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSObjectArray *)coeffMinDegWithDoubleArray2:(IOSObjectArray *)coeff;

+ (jdouble)evalWithDoubleArray:(IOSDoubleArray *)c
                    withDouble:(jdouble)x;

+ (jint)getDegreeWithGeogebraCommonKernelPolynomialBigPolynomial:(GeogebraCommonKernelPolynomialBigPolynomial *)poly;

+ (jint)getDegreeWithDoubleArray:(IOSDoubleArray *)c;

+ (jint)getDegreeWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)p;

+ (jdouble)getLeadingCoeffWithDoubleArray:(IOSDoubleArray *)c;

+ (jdouble)getLeadingCoeffWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)p;

+ (IOSDoubleArray *)polynomialDivisionWithDoubleArray:(IOSDoubleArray *)cp
                                      withDoubleArray:(IOSDoubleArray *)cd;

+ (OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)polynomialDivisionWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)p
                                                                                 withOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction:(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *)d;

+ (jboolean)rootPolishingWithDoubleArray:(IOSDoubleArray *)pair
withGeogebraCommonKernelImplicitGeoImplicitPoly:(GeogebraCommonKernelImplicitGeoImplicitPoly *)p1
                         withDoubleArray:(IOSDoubleArray *)line;

+ (jboolean)rootPolishingWithDoubleArray:(IOSDoubleArray *)pair
withGeogebraCommonKernelImplicitGeoImplicitPoly:(GeogebraCommonKernelImplicitGeoImplicitPoly *)p1
withGeogebraCommonKernelImplicitGeoImplicitPoly:(GeogebraCommonKernelImplicitGeoImplicitPoly *)p2;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelImplicitPolynomialUtils)

FOUNDATION_EXPORT IOSDoubleArray *GeogebraCommonKernelImplicitPolynomialUtils_polynomialDivisionWithDoubleArray_withDoubleArray_(IOSDoubleArray *cp, IOSDoubleArray *cd);

FOUNDATION_EXPORT OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *GeogebraCommonKernelImplicitPolynomialUtils_polynomialDivisionWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_withOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *p, OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *d);

FOUNDATION_EXPORT jint GeogebraCommonKernelImplicitPolynomialUtils_getDegreeWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *p);

FOUNDATION_EXPORT jint GeogebraCommonKernelImplicitPolynomialUtils_getDegreeWithDoubleArray_(IOSDoubleArray *c);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelImplicitPolynomialUtils_getLeadingCoeffWithDoubleArray_(IOSDoubleArray *c);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelImplicitPolynomialUtils_getLeadingCoeffWithOrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction_(OrgApacheCommonsMathAnalysisPolynomialsPolynomialFunction *p);

FOUNDATION_EXPORT jint GeogebraCommonKernelImplicitPolynomialUtils_getDegreeWithGeogebraCommonKernelPolynomialBigPolynomial_(GeogebraCommonKernelPolynomialBigPolynomial *poly);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelImplicitPolynomialUtils_evalWithDoubleArray_withDouble_(IOSDoubleArray *c, jdouble x);

FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonKernelImplicitPolynomialUtils_coeffMinDegWithDoubleArray2_(IOSObjectArray *coeff);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelImplicitPolynomialUtils_rootPolishingWithDoubleArray_withGeogebraCommonKernelImplicitGeoImplicitPoly_withDoubleArray_(IOSDoubleArray *pair, GeogebraCommonKernelImplicitGeoImplicitPoly *p1, IOSDoubleArray *line);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelImplicitPolynomialUtils_rootPolishingWithDoubleArray_withGeogebraCommonKernelImplicitGeoImplicitPoly_withGeogebraCommonKernelImplicitGeoImplicitPoly_(IOSDoubleArray *pair, GeogebraCommonKernelImplicitGeoImplicitPoly *p1, GeogebraCommonKernelImplicitGeoImplicitPoly *p2);

FOUNDATION_EXPORT void GeogebraCommonKernelImplicitPolynomialUtils_init(GeogebraCommonKernelImplicitPolynomialUtils *self);

FOUNDATION_EXPORT GeogebraCommonKernelImplicitPolynomialUtils *new_GeogebraCommonKernelImplicitPolynomialUtils_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelImplicitPolynomialUtils)

#endif // _GeogebraCommonKernelImplicitPolynomialUtils_H_
