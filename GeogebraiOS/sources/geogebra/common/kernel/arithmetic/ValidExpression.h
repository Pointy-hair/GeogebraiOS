//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/ValidExpression.java
//

#ifndef _GeogebraCommonKernelArithmeticValidExpression_H_
#define _GeogebraCommonKernelArithmeticValidExpression_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"

@class GeogebraCommonKernelArithmeticAssignmentTypeEnum;
@class GeogebraCommonKernelArithmeticCommand;
@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelArithmeticFunction;
@class GeogebraCommonKernelArithmeticFunctionVariable;
@class GeogebraCommonKernelStringTemplate;
@class IOSObjectArray;
@class JavaUtilVector;
@protocol GeogebraCommonKernelArithmeticInspecting;
@protocol GeogebraCommonKernelArithmeticTraversing;
@protocol JavaUtilSet;

@interface GeogebraCommonKernelArithmeticValidExpression : NSObject < GeogebraCommonKernelArithmeticExpressionValue >

#pragma mark Public

- (instancetype)init;

- (void)addCommandsWithJavaUtilSet:(id<JavaUtilSet>)cmds;

- (void)addLabelWithNSString:(NSString *)label;

- (void)addLabelWithJavaUtilVector:(JavaUtilVector *)labellist;

- (jboolean)containsFunctionVariable;

+ (NSString *)debugStringWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)s;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)derivativeWithGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fv;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)evaluateWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (GeogebraCommonKernelArithmeticFunction *)evaluateComplex;

- (jdouble)evaluateDouble;

- (jboolean)evaluatesTo3DVector;

- (jboolean)evaluatesToList;

- (jboolean)evaluatesToNonComplex2DVector;

- (jboolean)evaluatesToNumberWithBoolean:(jboolean)def;

- (jboolean)evaluatesToText;

- (jboolean)evaluatesToVectorNotPoint;

- (NSString *)getAssignmentOperator;

- (NSString *)getAssignmentOperatorLaTeX;

- (GeogebraCommonKernelArithmeticAssignmentTypeEnum *)getAssignmentType;

- (NSString *)getDelayedAssignmentOperator;

- (NSString *)getDelayedAssignmentOperatorLaTeX;

- (NSString *)getLabel;

- (NSString *)getLabelWithInt:(jint)index;

- (NSString *)getLabelForAssignment;

- (IOSObjectArray *)getLabels;

- (GeogebraCommonKernelArithmeticCommand *)getTopLevelCommand;

- (jboolean)hasCoords;

- (jboolean)inspectWithGeogebraCommonKernelArithmeticInspecting:(id<GeogebraCommonKernelArithmeticInspecting>)t;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)integralWithGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fv;

- (jboolean)isExpressionNode;

- (jboolean)isGeoElement;

- (jboolean)isInTree;

- (jboolean)isKeepInputUsed;

- (jboolean)isTopLevelCommand;

- (jboolean)isVariable;

- (jint)labelCount;

- (void)setAssignmentTypeWithGeogebraCommonKernelArithmeticAssignmentTypeEnum:(GeogebraCommonKernelArithmeticAssignmentTypeEnum *)assignmentType;

- (void)setInTreeWithBoolean:(jboolean)flag;

- (void)setKeepInputUsedWithBoolean:(jboolean)keepInputUsed;

- (void)setLabelWithNSString:(NSString *)label;

- (void)setLabelsWithNSStringArray:(IOSObjectArray *)str;

- (NSString *)toAssignmentLaTeXStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toAssignmentStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)description;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)traverseWithGeogebraCommonKernelArithmeticTraversing:(id<GeogebraCommonKernelArithmeticTraversing>)t;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)unwrap;

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap;

#pragma mark Protected

+ (NSString *)printWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)x2
                                                         withBoolean:(jboolean)values
                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmeticValidExpression)

FOUNDATION_EXPORT NSString *GeogebraCommonKernelArithmeticValidExpression_debugStringWithGeogebraCommonKernelArithmeticExpressionValue_(id<GeogebraCommonKernelArithmeticExpressionValue> s);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelArithmeticValidExpression_printWithGeogebraCommonKernelArithmeticExpressionValue_withBoolean_withGeogebraCommonKernelStringTemplate_(id<GeogebraCommonKernelArithmeticExpressionValue> x2, jboolean values, GeogebraCommonKernelStringTemplate *tpl);

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticValidExpression_init(GeogebraCommonKernelArithmeticValidExpression *self);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmeticValidExpression)

#endif // _GeogebraCommonKernelArithmeticValidExpression_H_
