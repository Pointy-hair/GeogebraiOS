//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/Equation.java
//

#ifndef _GeogebraCommonKernelArithmeticEquation_H_
#define _GeogebraCommonKernelArithmeticEquation_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"

@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelArithmeticPolynomial;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginOperationEnum;
@class IOSObjectArray;
@class JavaUtilHashSet;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelArithmeticInspecting;
@protocol GeogebraCommonKernelArithmeticTraversing;

@interface GeogebraCommonKernelArithmeticEquation : GeogebraCommonKernelArithmeticValidExpression

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)lhs
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)rhs;

- (void)addVariableDegreeWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)gn;

- (void)applyOperationWithGeogebraCommonPluginOperationEnum:(GeogebraCommonPluginOperationEnum *)operation
          withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev
                                                withBoolean:(jboolean)switchOrder;

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev;

- (jboolean)containsZ;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1;

- (jint)degree;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)evaluateWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)getAssignmentOperator;

- (NSString *)getAssignmentOperatorLaTeX;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getCoefficientWithNSString:(NSString *)variables;

- (jdouble)getCoeffValueWithNSString:(NSString *)variables;

- (IOSObjectArray *)getGeoElementVariables;

- (GeogebraCommonKernelKernel *)getKernel;

- (GeogebraCommonKernelArithmeticExpressionNode *)getLHS;

- (GeogebraCommonKernelArithmeticPolynomial *)getNormalForm;

- (GeogebraCommonKernelArithmeticExpressionNode *)getRHS;

- (JavaUtilHashSet *)getVariables;

- (jboolean)hasVariableDegree;

- (void)initEquation OBJC_METHOD_FAMILY_NONE;

- (jboolean)inspectWithGeogebraCommonKernelArithmeticInspecting:(id<GeogebraCommonKernelArithmeticInspecting>)t;

- (jboolean)isConstant;

- (jboolean)isExplicitWithNSString:(NSString *)var;

- (jboolean)isForcedConic;

- (jboolean)isForcedImplicitPoly;

- (jboolean)isForcedLine;

- (jboolean)isForcedPlane;

- (jboolean)isForcedQuadric;

- (jboolean)isFunctionDependent;

- (jboolean)isImplicit;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (jboolean)isPolynomial;

- (jboolean)mayBePolynomial;

- (void)resolveVariables;

- (void)setForceConic;

- (void)setForceImplicitPoly;

- (void)setForceLine;

- (void)setForcePlane;

- (void)setForceQuadric;

- (void)setFunctionDependentWithBoolean:(jboolean)isFunctionDependent;

- (void)setIsPolynomialWithBoolean:(jboolean)b;

- (void)setLHSWithGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)lhs;

- (void)setRHSWithGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)rhs;

- (jint)singleDegree;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
            withGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)lhs1;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)traverseWithGeogebraCommonKernelArithmeticTraversing:(id<GeogebraCommonKernelArithmeticTraversing>)t;

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmeticEquation)

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticEquation_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelArithmeticEquation *self, GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> lhs, id<GeogebraCommonKernelArithmeticExpressionValue> rhs);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticEquation *new_GeogebraCommonKernelArithmeticEquation_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> lhs, id<GeogebraCommonKernelArithmeticExpressionValue> rhs) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmeticEquation)

#endif // _GeogebraCommonKernelArithmeticEquation_H_
