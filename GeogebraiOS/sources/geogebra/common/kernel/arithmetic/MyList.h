//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/MyList.java
//

#ifndef _GeogebraCommonKernelArithmeticMyList_H_
#define _GeogebraCommonKernelArithmeticMyList_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/arithmetic/GetItem.h"
#include "geogebra/common/kernel/arithmetic/ListValue.h"
#include "geogebra/common/kernel/arithmetic/ReplaceChildrenByValues.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"

@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelArithmeticFunctionVariable;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginOperationEnum;
@class IOSDoubleArray;
@class JavaUtilHashSet;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelArithmeticInspecting;
@protocol GeogebraCommonKernelArithmeticTraversing;

@interface GeogebraCommonKernelArithmeticMyList : GeogebraCommonKernelArithmeticValidExpression < GeogebraCommonKernelArithmeticListValue, GeogebraCommonKernelArithmeticReplaceChildrenByValues, GeogebraCommonKernelArithmeticGetItem >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                       withBoolean:(jboolean)isFlatList;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                           withInt:(jint)size;

- (void)addListElementWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)arg;

- (void)applyLeftWithGeogebraCommonPluginOperationEnum:(GeogebraCommonPluginOperationEnum *)operation
     withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)value
                withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)applyRightWithGeogebraCommonPluginOperationEnum:(GeogebraCommonPluginOperationEnum *)operation
      withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)value
                 withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)clear;

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyExGeoWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1;

- (jboolean)evaluatesToList;

+ (id<GeogebraCommonKernelArithmeticExpressionValue>)getCellWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list
                                                                                             withInt:(jint)row
                                                                                             withInt:(jint)col;

- (GeogebraCommonKernelArithmeticMyList *)getCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel2;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getItemWithInt:(jint)i;

- (GeogebraCommonKernelKernel *)getKernel;

- (jint)getLength;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getListElementWithInt:(jint)i;

- (jint)getMatrixCols;

- (jint)getMatrixRows;

- (GeogebraCommonKernelArithmeticMyList *)getMyList;

- (JavaUtilHashSet *)getVariables;

- (jboolean)inspectWithGeogebraCommonKernelArithmeticInspecting:(id<GeogebraCommonKernelArithmeticInspecting>)t;

- (GeogebraCommonKernelArithmeticMyList *)invert;

- (jboolean)isConstant;

- (jboolean)isDefined;

+ (jboolean)isElementOfWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)a
                                withGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)myList;

- (jboolean)isLeaf;

- (jboolean)isMatrix;

- (jboolean)isNumberValue;

+ (jboolean)listContainsWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list1
                        withGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list2
                          withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

+ (jboolean)listContainsStrictWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list1
                              withGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list2
                                withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)replaceChildrenByValuesWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jint)replaceVariablesWithNSString:(NSString *)varName
withGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fVar;

- (void)resolveVariables;

+ (GeogebraCommonKernelArithmeticMyList *)setDifferenceWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                             withGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list1
                                             withGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list2;

- (jint)size;

- (IOSDoubleArray *)toDouble;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)traverseWithGeogebraCommonKernelArithmeticTraversing:(id<GeogebraCommonKernelArithmeticTraversing>)t;

- (void)vectorProductWithGeogebraCommonKernelArithmeticMyList:(GeogebraCommonKernelArithmeticMyList *)list;

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmeticMyList)

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyList_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelArithmeticMyList *self, GeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyList *new_GeogebraCommonKernelArithmeticMyList_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyList_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonKernelArithmeticMyList *self, GeogebraCommonKernelKernel *kernel, jint size);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyList *new_GeogebraCommonKernelArithmeticMyList_initWithGeogebraCommonKernelKernel_withInt_(GeogebraCommonKernelKernel *kernel, jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyList_initWithGeogebraCommonKernelKernel_withBoolean_(GeogebraCommonKernelArithmeticMyList *self, GeogebraCommonKernelKernel *kernel, jboolean isFlatList);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyList *new_GeogebraCommonKernelArithmeticMyList_initWithGeogebraCommonKernelKernel_withBoolean_(GeogebraCommonKernelKernel *kernel, jboolean isFlatList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<GeogebraCommonKernelArithmeticExpressionValue> GeogebraCommonKernelArithmeticMyList_getCellWithGeogebraCommonKernelArithmeticMyList_withInt_withInt_(GeogebraCommonKernelArithmeticMyList *list, jint row, jint col);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelArithmeticMyList_isElementOfWithGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticMyList_(id<GeogebraCommonKernelArithmeticExpressionValue> a, GeogebraCommonKernelArithmeticMyList *myList);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelArithmeticMyList_listContainsWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelArithmeticMyList *list1, GeogebraCommonKernelArithmeticMyList *list2, GeogebraCommonKernelStringTemplate *tpl);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelArithmeticMyList_listContainsStrictWithGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelArithmeticMyList *list1, GeogebraCommonKernelArithmeticMyList *list2, GeogebraCommonKernelStringTemplate *tpl);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyList *GeogebraCommonKernelArithmeticMyList_setDifferenceWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticMyList_withGeogebraCommonKernelArithmeticMyList_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelArithmeticMyList *list1, GeogebraCommonKernelArithmeticMyList *list2);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmeticMyList)

#endif // _GeogebraCommonKernelArithmeticMyList_H_
