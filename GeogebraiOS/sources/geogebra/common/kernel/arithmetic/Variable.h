//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/Variable.java
//

#ifndef _GeogebraCommonKernelArithmeticVariable_H_
#define _GeogebraCommonKernelArithmeticVariable_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"

@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class JavaUtilHashSet;
@protocol GeogebraCommonKernelArithmeticExpressionValue;

@interface GeogebraCommonKernelArithmeticVariable : GeogebraCommonKernelArithmeticValidExpression

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                      withNSString:(NSString *)name;

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1;

- (jboolean)evaluatesToNumberWithBoolean:(jboolean)def;

- (GeogebraCommonKernelKernel *)getKernel;

- (NSString *)getName;

- (NSString *)getNameWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (JavaUtilHashSet *)getVariables;

- (jboolean)hasCoords;

- (jboolean)isConstant;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (jboolean)isVariable;

+ (id<GeogebraCommonKernelArithmeticExpressionValue>)replacementWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                                                                  withNSString:(NSString *)name;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)resolveAsExpressionValue;

- (void)resolveVariables;

- (void)setNameWithNSString:(NSString *)s;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap;

#pragma mark Protected

- (GeogebraCommonKernelGeosGeoElement *)resolveWithBoolean:(jboolean)allowAutoCreateGeoElement
                                               withBoolean:(jboolean)throwError;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmeticVariable)

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticVariable_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelArithmeticVariable *self, GeogebraCommonKernelKernel *kernel, NSString *name);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticVariable *new_GeogebraCommonKernelArithmeticVariable_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelKernel *kernel, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<GeogebraCommonKernelArithmeticExpressionValue> GeogebraCommonKernelArithmeticVariable_replacementWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelKernel *kernel, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmeticVariable)

#endif // _GeogebraCommonKernelArithmeticVariable_H_
