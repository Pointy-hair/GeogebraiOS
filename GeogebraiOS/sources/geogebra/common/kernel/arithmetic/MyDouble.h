//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/MyDouble.java
//

#ifndef _GeogebraCommonKernelArithmeticMyDouble_H_
#define _GeogebraCommonKernelArithmeticMyDouble_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "java/lang/Comparable.h"

@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelArithmeticFunctionVariable;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonMainLocalization;
@class JavaUtilHashSet;
@protocol GeogebraCommonKernelArithmeticEvaluatable;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelArithmeticVectorValue;

@interface GeogebraCommonKernelArithmeticMyDouble : GeogebraCommonKernelArithmeticValidExpression < GeogebraCommonKernelArithmeticNumberValue, JavaLangComparable > {
 @public
  GeogebraCommonKernelKernel *kernel_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                        withDouble:(jdouble)x;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                      withNSString:(NSString *)power;

- (instancetype)initWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)d;

- (GeogebraCommonKernelArithmeticMyDouble *)abs;

- (GeogebraCommonKernelArithmeticMyDouble *)acos;

- (GeogebraCommonKernelArithmeticMyDouble *)acosh;

+ (void)addWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)a
        withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
           withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c;

- (GeogebraCommonKernelArithmeticMyDouble *)applyWithGeogebraCommonKernelArithmeticEvaluatable:(id<GeogebraCommonKernelArithmeticEvaluatable>)lt;

- (GeogebraCommonKernelArithmeticMyDouble *)asin;

- (GeogebraCommonKernelArithmeticMyDouble *)asinh;

- (GeogebraCommonKernelArithmeticMyDouble *)atan;

- (GeogebraCommonKernelArithmeticMyDouble *)atan2WithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)y;

- (GeogebraCommonKernelArithmeticMyDouble *)atanh;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)betaWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)lt;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)betaIncompleteWithGeogebraCommonKernelArithmeticVectorValue:(id<GeogebraCommonKernelArithmeticVectorValue>)lt;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)betaIncompleteRegularizedWithGeogebraCommonKernelArithmeticVectorValue:(id<GeogebraCommonKernelArithmeticVectorValue>)lt;

- (GeogebraCommonKernelArithmeticMyDouble *)cbrt;

- (GeogebraCommonKernelArithmeticMyDouble *)ceil;

- (jint)compareToWithId:(id)arg0;

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev;

- (GeogebraCommonKernelArithmeticMyDouble *)cos;

- (GeogebraCommonKernelArithmeticMyDouble *)cosh;

- (GeogebraCommonKernelArithmeticMyDouble *)cosineIntegral;

- (GeogebraCommonKernelArithmeticMyDouble *)cot;

- (GeogebraCommonKernelArithmeticMyDouble *)coth;

- (GeogebraCommonKernelArithmeticMyDouble *)csc;

- (GeogebraCommonKernelArithmeticMyDouble *)csch;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)derivativeWithGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fv;

+ (void)divWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)a
           withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)b
           withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c;

- (jboolean)isEqual:(id)d;

- (GeogebraCommonKernelArithmeticMyDouble *)erf;

- (GeogebraCommonKernelArithmeticMyDouble *)exp;

- (GeogebraCommonKernelArithmeticMyDouble *)expIntegral;

- (GeogebraCommonKernelArithmeticMyDouble *)factorial;

- (GeogebraCommonKernelArithmeticMyDouble *)floor;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)fractionalPart;

- (GeogebraCommonKernelArithmeticMyDouble *)gamma;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)gammaIncompleteWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)lt;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)gammaIncompleteRegularizedWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)lt;

- (jdouble)getDouble;

- (GeogebraCommonKernelKernel *)getKernel;

- (GeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (JavaUtilHashSet *)getVariables;

- (NSUInteger)hash;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)integralWithGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fv;

- (GeogebraCommonKernelArithmeticMyDouble *)inverf;

- (jboolean)isAngle;

- (jboolean)isConstant;

- (jboolean)isDefined;

+ (jboolean)isFiniteWithDouble:(jdouble)d;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (GeogebraCommonKernelArithmeticMyDouble *)log;

- (GeogebraCommonKernelArithmeticMyDouble *)logWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)base;

- (GeogebraCommonKernelArithmeticMyDouble *)log10;

- (GeogebraCommonKernelArithmeticMyDouble *)log2;

+ (void)multWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)a
                                            withDouble:(jdouble)b
            withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c;

+ (void)multWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)a
         withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
            withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c;

+ (jdouble)parseDoubleWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)app
                                            withNSString:(NSString *)str;

+ (jdouble)parsePercentageWithGeogebraCommonMainLocalization:(GeogebraCommonMainLocalization *)app
                                                withNSString:(NSString *)str;

- (GeogebraCommonKernelArithmeticMyDouble *)polygammaWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)order;

+ (jdouble)powWithDouble:(jdouble)a
              withDouble:(jdouble)b;

+ (void)powWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)a
           withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)b
           withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c;

+ (void)powDoubleSgnChangeWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)a
                          withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)b
                          withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c;

- (GeogebraCommonKernelArithmeticMyDouble *)psi;

- (GeogebraCommonKernelArithmeticMyDouble *)random;

- (void)resolveVariables;

- (GeogebraCommonKernelArithmeticMyDouble *)round;

- (GeogebraCommonKernelArithmeticMyDouble *)roundWithDouble:(jdouble)digits;

- (GeogebraCommonKernelArithmeticMyDouble *)sec;

- (GeogebraCommonKernelArithmeticMyDouble *)sech;

- (void)setWithDouble:(jdouble)x;

- (void)setAngle;

- (GeogebraCommonKernelArithmeticMyDouble *)sgn;

- (GeogebraCommonKernelArithmeticMyDouble *)sin;

- (GeogebraCommonKernelArithmeticMyDouble *)sineIntegral;

- (GeogebraCommonKernelArithmeticMyDouble *)sinh;

- (GeogebraCommonKernelArithmeticMyDouble *)sqrt;

+ (void)subWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)a
        withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)b
           withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)c;

- (GeogebraCommonKernelArithmeticMyDouble *)tan;

- (GeogebraCommonKernelArithmeticMyDouble *)tanh;

- (GeogebraCommonKernelGeosGeoElement *)toGeoElement;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)zeta;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmeticMyDouble)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyDouble, kernel_, GeogebraCommonKernelKernel *)

FOUNDATION_EXPORT jdouble GeogebraCommonKernelArithmeticMyDouble_LARGEST_INTEGER_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelArithmeticMyDouble, LARGEST_INTEGER_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonKernelArithmeticMyDouble, LARGEST_INTEGER_, jdouble)

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelArithmeticMyDouble *self, GeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyDouble *new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(GeogebraCommonKernelArithmeticMyDouble *self, GeogebraCommonKernelKernel *kernel, jdouble x);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyDouble *new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withDouble_(GeogebraCommonKernelKernel *kernel, jdouble x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *self, GeogebraCommonKernelArithmeticMyDouble *d);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyDouble *new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelArithmeticMyDouble *self, GeogebraCommonKernelKernel *kernel, NSString *power);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyDouble *new_GeogebraCommonKernelArithmeticMyDouble_initWithGeogebraCommonKernelKernel_withNSString_(GeogebraCommonKernelKernel *kernel, NSString *power) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_addWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *a, id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_subWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *a, id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_multWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *a, id<GeogebraCommonKernelArithmeticNumberValue> b, GeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_multWithGeogebraCommonKernelArithmeticMyDouble_withDouble_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *a, jdouble b, GeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_divWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *a, GeogebraCommonKernelArithmeticMyDouble *b, GeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_powWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *a, GeogebraCommonKernelArithmeticMyDouble *b, GeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelArithmeticMyDouble_powWithDouble_withDouble_(jdouble a, jdouble b);

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyDouble_powDoubleSgnChangeWithGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyDouble *a, GeogebraCommonKernelArithmeticMyDouble *b, GeogebraCommonKernelArithmeticMyDouble *c);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelArithmeticMyDouble_parsePercentageWithGeogebraCommonMainLocalization_withNSString_(GeogebraCommonMainLocalization *app, NSString *str);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelArithmeticMyDouble_parseDoubleWithGeogebraCommonMainLocalization_withNSString_(GeogebraCommonMainLocalization *app, NSString *str);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelArithmeticMyDouble_isFiniteWithDouble_(jdouble d);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmeticMyDouble)

#endif // _GeogebraCommonKernelArithmeticMyDouble_H_
