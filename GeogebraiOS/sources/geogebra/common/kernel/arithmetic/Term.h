//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/Term.java
//

#ifndef _GeogebraCommonKernelArithmeticTerm_H_
#define _GeogebraCommonKernelArithmeticTerm_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/lang/Comparable.h"

@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class JavaLangStringBuilder;
@protocol GeogebraCommonKernelArithmeticExpressionValue;

@interface GeogebraCommonKernelArithmeticTerm : NSObject < JavaLangComparable, JavaIoSerializable > {
 @public
  id<GeogebraCommonKernelArithmeticExpressionValue> coefficient_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)coeff
                                                         withNSString:(NSString *)vars;

- (instancetype)initWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)coeff
                                            withJavaLangStringBuilder:(JavaLangStringBuilder *)vars;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                        withDouble:(jdouble)coeff
                                      withNSString:(NSString *)vars;

- (instancetype)initWithGeogebraCommonKernelArithmeticTerm:(GeogebraCommonKernelArithmeticTerm *)t
                            withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (jint)compareToWithId:(id)o;

- (jboolean)isEqual:(id)o;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getCoefficient;

- (NSUInteger)hash;

- (NSString *)description;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Package-Private

- (void)addToCoefficientWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)number
                                           withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (jboolean)containsWithNSString:(NSString *)var;

- (jint)degree;

- (jint)degreeWithChar:(jchar)var;

- (void)divideWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)number
                                 withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (NSString *)getVars;

- (jboolean)hasIntegerCoeff;

- (jboolean)hasNoVars;

- (void)multiplyWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)number
                                   withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (void)multiplyWithGeogebraCommonKernelArithmeticTerm:(GeogebraCommonKernelArithmeticTerm *)t
                        withGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (void)setCoefficientWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)coeff;

- (void)setVariablesWithNSString:(NSString *)vars;

- (void)setVariablesWithJavaLangStringBuilder:(JavaLangStringBuilder *)vars;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmeticTerm)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticTerm, coefficient_, id<GeogebraCommonKernelArithmeticExpressionValue>)

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelArithmeticExpressionValue_withNSString_(GeogebraCommonKernelArithmeticTerm *self, id<GeogebraCommonKernelArithmeticExpressionValue> coeff, NSString *vars);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticTerm *new_GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelArithmeticExpressionValue_withNSString_(id<GeogebraCommonKernelArithmeticExpressionValue> coeff, NSString *vars) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelKernel_withDouble_withNSString_(GeogebraCommonKernelArithmeticTerm *self, GeogebraCommonKernelKernel *kernel, jdouble coeff, NSString *vars);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticTerm *new_GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelKernel_withDouble_withNSString_(GeogebraCommonKernelKernel *kernel, jdouble coeff, NSString *vars) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelArithmeticExpressionValue_withJavaLangStringBuilder_(GeogebraCommonKernelArithmeticTerm *self, id<GeogebraCommonKernelArithmeticExpressionValue> coeff, JavaLangStringBuilder *vars);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticTerm *new_GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelArithmeticExpressionValue_withJavaLangStringBuilder_(id<GeogebraCommonKernelArithmeticExpressionValue> coeff, JavaLangStringBuilder *vars) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelArithmeticTerm_withGeogebraCommonKernelKernel_(GeogebraCommonKernelArithmeticTerm *self, GeogebraCommonKernelArithmeticTerm *t, GeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticTerm *new_GeogebraCommonKernelArithmeticTerm_initWithGeogebraCommonKernelArithmeticTerm_withGeogebraCommonKernelKernel_(GeogebraCommonKernelArithmeticTerm *t, GeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmeticTerm)

#endif // _GeogebraCommonKernelArithmeticTerm_H_
