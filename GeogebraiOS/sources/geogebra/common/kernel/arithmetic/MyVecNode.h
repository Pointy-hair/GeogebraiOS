//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/MyVecNode.java
//

#ifndef _GeogebraCommonKernelArithmeticMyVecNode_H_
#define _GeogebraCommonKernelArithmeticMyVecNode_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/arithmetic/MyVecNDNode.h"
#include "geogebra/common/kernel/arithmetic/ValidExpression.h"
#include "geogebra/common/kernel/arithmetic/VectorValue.h"

@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelGeosGeoVec2D;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelStringTemplate;
@class IOSDoubleArray;
@class JavaUtilHashSet;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelArithmeticInspecting;
@protocol GeogebraCommonKernelArithmeticTraversing;

@interface GeogebraCommonKernelArithmeticMyVecNode : GeogebraCommonKernelArithmeticValidExpression < GeogebraCommonKernelArithmeticVectorValue, GeogebraCommonKernelArithmeticMyVecNDNode > {
 @public
  id<GeogebraCommonKernelArithmeticExpressionValue> x_;
  id<GeogebraCommonKernelArithmeticExpressionValue> y_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel;

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)x
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)y;

- (jboolean)containsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)ev;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1;

- (jboolean)evaluatesToNonComplex2DVector;

- (jboolean)evaluatesToVectorNotPoint;

- (IOSDoubleArray *)getCoords;

- (jint)getDimension;

- (GeogebraCommonKernelKernel *)getKernel;

- (jint)getMode;

- (JavaUtilHashSet *)getVariables;

- (GeogebraCommonKernelGeosGeoVec2D *)getVector;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getX;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)getY;

- (jboolean)hasCoords;

- (jboolean)hasPolarCoords;

- (jboolean)inspectWithGeogebraCommonKernelArithmeticInspecting:(id<GeogebraCommonKernelArithmeticInspecting>)t;

- (jboolean)isCASVector;

- (jboolean)isConstant;

- (jboolean)isLeaf;

- (jboolean)isNumberValue;

- (void)resolveVariables;

- (void)setCASVector;

- (void)setModeWithInt:(jint)mode;

- (void)setPolarCoordsWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)r
                      withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)phi;

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)traverseWithGeogebraCommonKernelArithmeticTraversing:(id<GeogebraCommonKernelArithmeticTraversing>)t;

- (GeogebraCommonKernelArithmeticExpressionNode *)wrap;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelArithmeticMyVecNode)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyVecNode, x_, id<GeogebraCommonKernelArithmeticExpressionValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyVecNode, y_, id<GeogebraCommonKernelArithmeticExpressionValue>)

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyVecNode_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelArithmeticMyVecNode *self, GeogebraCommonKernelKernel *kernel);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyVecNode *new_GeogebraCommonKernelArithmeticMyVecNode_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelArithmeticMyVecNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelArithmeticMyVecNode *self, GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> x, id<GeogebraCommonKernelArithmeticExpressionValue> y);

FOUNDATION_EXPORT GeogebraCommonKernelArithmeticMyVecNode *new_GeogebraCommonKernelArithmeticMyVecNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> x, id<GeogebraCommonKernelArithmeticExpressionValue> y) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelArithmeticMyVecNode)

#endif // _GeogebraCommonKernelArithmeticMyVecNode_H_
