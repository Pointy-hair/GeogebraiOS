//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/prover/polynomial/Variable.java
//

#ifndef _GeogebraCommonKernelProverPolynomialVariable_H_
#define _GeogebraCommonKernelProverPolynomialVariable_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"

@class GeogebraCommonKernelGeosGeoElement;

@interface GeogebraCommonKernelProverPolynomialVariable : NSObject < JavaLangComparable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)free;

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)parent;

- (jint)compareToWithId:(GeogebraCommonKernelProverPolynomialVariable *)v;

- (jboolean)isEqual:(id)o;

- (jint)getId;

- (NSString *)getName;

- (GeogebraCommonKernelGeosGeoElement *)getParent;

- (GeogebraCommonKernelProverPolynomialVariable *)getTwin;

- (NSUInteger)hash;

- (jboolean)isFree;

- (void)setParentWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)parent;

- (void)setTwinWithGeogebraCommonKernelProverPolynomialVariable:(GeogebraCommonKernelProverPolynomialVariable *)twin;

- (NSString *)description;

- (NSString *)toTeX;

#pragma mark Protected

- (instancetype)initWithGeogebraCommonKernelProverPolynomialVariable:(GeogebraCommonKernelProverPolynomialVariable *)fv;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelProverPolynomialVariable)

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialVariable_init(GeogebraCommonKernelProverPolynomialVariable *self);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialVariable *new_GeogebraCommonKernelProverPolynomialVariable_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialVariable_initWithBoolean_(GeogebraCommonKernelProverPolynomialVariable *self, jboolean free);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialVariable *new_GeogebraCommonKernelProverPolynomialVariable_initWithBoolean_(jboolean free) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialVariable_initWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelProverPolynomialVariable *self, GeogebraCommonKernelGeosGeoElement *parent);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialVariable *new_GeogebraCommonKernelProverPolynomialVariable_initWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialVariable_initWithGeogebraCommonKernelProverPolynomialVariable_(GeogebraCommonKernelProverPolynomialVariable *self, GeogebraCommonKernelProverPolynomialVariable *fv);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialVariable *new_GeogebraCommonKernelProverPolynomialVariable_initWithGeogebraCommonKernelProverPolynomialVariable_(GeogebraCommonKernelProverPolynomialVariable *fv) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelProverPolynomialVariable)

#endif // _GeogebraCommonKernelProverPolynomialVariable_H_
