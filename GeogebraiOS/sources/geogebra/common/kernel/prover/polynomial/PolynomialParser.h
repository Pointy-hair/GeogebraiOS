//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/prover/polynomial/PolynomialParser.java
//

#ifndef _GeogebraCommonKernelProverPolynomialPolynomialParser_H_
#define _GeogebraCommonKernelProverPolynomialPolynomialParser_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/prover/polynomial/PolynomialParserConstants.h"

@class GeogebraCommonKernelProverPolynomialParseException;
@class GeogebraCommonKernelProverPolynomialPolynomial;
@class GeogebraCommonKernelProverPolynomialPolynomialParserTokenManager;
@class GeogebraCommonKernelProverPolynomialSimpleCharStream;
@class GeogebraCommonKernelProverPolynomialTerm;
@class GeogebraCommonKernelProverPolynomialToken;
@class GeogebraCommonKernelProverPolynomialVariable;
@class JavaIoInputStream;
@class JavaIoReader;
@class JavaUtilHashMap;
@protocol JavaUtilSet;

@interface GeogebraCommonKernelProverPolynomialPolynomialParser : NSObject < GeogebraCommonKernelProverPolynomialPolynomialParserConstants > {
 @public
  GeogebraCommonKernelProverPolynomialPolynomialParserTokenManager *token_source_;
  GeogebraCommonKernelProverPolynomialSimpleCharStream *jj_input_stream_;
  GeogebraCommonKernelProverPolynomialToken *token_;
  GeogebraCommonKernelProverPolynomialToken *jj_nt_;
}

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream
                             withNSString:(NSString *)encoding;

- (instancetype)initWithGeogebraCommonKernelProverPolynomialPolynomialParserTokenManager:(GeogebraCommonKernelProverPolynomialPolynomialParserTokenManager *)tm;

- (instancetype)initWithJavaIoReader:(JavaIoReader *)stream;

- (void)disable_tracing;

- (void)enable_tracing;

- (GeogebraCommonKernelProverPolynomialParseException *)generateParseException;

- (GeogebraCommonKernelProverPolynomialToken *)getNextToken;

- (GeogebraCommonKernelProverPolynomialToken *)getTokenWithInt:(jint)index;

+ (id<JavaUtilSet>)parseFactoredPolynomialSetWithNSString:(NSString *)string
                                          withJavaUtilSet:(id<JavaUtilSet>)variables;

+ (GeogebraCommonKernelProverPolynomialPolynomial *)parsePolynomialWithNSString:(NSString *)string
                                                                withJavaUtilSet:(id<JavaUtilSet>)variables;

+ (id<JavaUtilSet>)parsePolynomialFactorsWithNSString:(NSString *)string
                                      withJavaUtilSet:(id<JavaUtilSet>)variables;

- (GeogebraCommonKernelProverPolynomialPolynomial *)polynomialWithJavaUtilHashMap:(JavaUtilHashMap *)variables;

- (id<JavaUtilSet>)polynomialFactoredSetStartingPointWithJavaUtilHashMap:(JavaUtilHashMap *)variables;

- (id<JavaUtilSet>)polynomialFactorsStartingPointWithJavaUtilHashMap:(JavaUtilHashMap *)variables;

- (GeogebraCommonKernelProverPolynomialPolynomial *)polynomialStartingPointWithJavaUtilHashMap:(JavaUtilHashMap *)variables;

- (GeogebraCommonKernelProverPolynomialTerm *)powerWithJavaUtilHashMap:(JavaUtilHashMap *)variables;

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream;

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream
                       withNSString:(NSString *)encoding;

- (void)ReInitWithGeogebraCommonKernelProverPolynomialPolynomialParserTokenManager:(GeogebraCommonKernelProverPolynomialPolynomialParserTokenManager *)tm;

- (void)ReInitWithJavaIoReader:(JavaIoReader *)stream;

- (GeogebraCommonKernelProverPolynomialPolynomial *)termWithJavaUtilHashMap:(JavaUtilHashMap *)variables;

- (GeogebraCommonKernelProverPolynomialVariable *)variableWithJavaUtilHashMap:(JavaUtilHashMap *)variables;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelProverPolynomialPolynomialParser)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverPolynomialPolynomialParser, token_source_, GeogebraCommonKernelProverPolynomialPolynomialParserTokenManager *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverPolynomialPolynomialParser, jj_input_stream_, GeogebraCommonKernelProverPolynomialSimpleCharStream *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverPolynomialPolynomialParser, token_, GeogebraCommonKernelProverPolynomialToken *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelProverPolynomialPolynomialParser, jj_nt_, GeogebraCommonKernelProverPolynomialToken *)

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialPolynomial *GeogebraCommonKernelProverPolynomialPolynomialParser_parsePolynomialWithNSString_withJavaUtilSet_(NSString *string, id<JavaUtilSet> variables);

FOUNDATION_EXPORT id<JavaUtilSet> GeogebraCommonKernelProverPolynomialPolynomialParser_parsePolynomialFactorsWithNSString_withJavaUtilSet_(NSString *string, id<JavaUtilSet> variables);

FOUNDATION_EXPORT id<JavaUtilSet> GeogebraCommonKernelProverPolynomialPolynomialParser_parseFactoredPolynomialSetWithNSString_withJavaUtilSet_(NSString *string, id<JavaUtilSet> variables);

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialPolynomialParser_initWithJavaIoInputStream_(GeogebraCommonKernelProverPolynomialPolynomialParser *self, JavaIoInputStream *stream);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialPolynomialParser *new_GeogebraCommonKernelProverPolynomialPolynomialParser_initWithJavaIoInputStream_(JavaIoInputStream *stream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialPolynomialParser_initWithJavaIoInputStream_withNSString_(GeogebraCommonKernelProverPolynomialPolynomialParser *self, JavaIoInputStream *stream, NSString *encoding);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialPolynomialParser *new_GeogebraCommonKernelProverPolynomialPolynomialParser_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *stream, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialPolynomialParser_initWithJavaIoReader_(GeogebraCommonKernelProverPolynomialPolynomialParser *self, JavaIoReader *stream);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialPolynomialParser *new_GeogebraCommonKernelProverPolynomialPolynomialParser_initWithJavaIoReader_(JavaIoReader *stream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelProverPolynomialPolynomialParser_initWithGeogebraCommonKernelProverPolynomialPolynomialParserTokenManager_(GeogebraCommonKernelProverPolynomialPolynomialParser *self, GeogebraCommonKernelProverPolynomialPolynomialParserTokenManager *tm);

FOUNDATION_EXPORT GeogebraCommonKernelProverPolynomialPolynomialParser *new_GeogebraCommonKernelProverPolynomialPolynomialParser_initWithGeogebraCommonKernelProverPolynomialPolynomialParserTokenManager_(GeogebraCommonKernelProverPolynomialPolynomialParserTokenManager *tm) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelProverPolynomialPolynomialParser)

#endif // _GeogebraCommonKernelProverPolynomialPolynomialParser_H_
