//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/prover/AlgoAreConcurrent.java
//

#ifndef _GeogebraCommonKernelProverAlgoAreConcurrent_H_
#define _GeogebraCommonKernelProverAlgoAreConcurrent_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/SymbolicParametersAlgo.h"
#include "geogebra/common/kernel/algos/SymbolicParametersBotanaAlgoAre.h"

@class GeogebraCommonKernelAlgosSymbolicParameters;
@class GeogebraCommonKernelCommandsCommandsEnum;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoBoolean;
@class GeogebraCommonKernelGeosGeoLine;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilHashMap;
@class JavaUtilHashSet;

@interface GeogebraCommonKernelProverAlgoAreConcurrent : GeogebraCommonKernelAlgosAlgoElement < GeogebraCommonKernelAlgosSymbolicParametersAlgo, GeogebraCommonKernelAlgosSymbolicParametersBotanaAlgoAre >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)inputLine1
                     withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)inputLine2
                     withGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)inputLine3;

- (void)compute;

- (IOSObjectArray *)getBotanaPolynomials;

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName;

- (IOSIntArray *)getDegrees;

- (IOSObjectArray *)getExactCoordinatesWithJavaUtilHashMap:(JavaUtilHashMap *)values;

- (void)getFreeVariablesWithJavaUtilHashSet:(JavaUtilHashSet *)variables;

- (IOSObjectArray *)getPolynomials;

- (GeogebraCommonKernelGeosGeoBoolean *)getResult;

- (GeogebraCommonKernelAlgosSymbolicParameters *)getSymbolicParameters;

#pragma mark Protected

- (void)setInputOutput;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelProverAlgoAreConcurrent)

FOUNDATION_EXPORT void GeogebraCommonKernelProverAlgoAreConcurrent_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_(GeogebraCommonKernelProverAlgoAreConcurrent *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoLine *inputLine1, GeogebraCommonKernelGeosGeoLine *inputLine2, GeogebraCommonKernelGeosGeoLine *inputLine3);

FOUNDATION_EXPORT GeogebraCommonKernelProverAlgoAreConcurrent *new_GeogebraCommonKernelProverAlgoAreConcurrent_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_withGeogebraCommonKernelGeosGeoLine_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoLine *inputLine1, GeogebraCommonKernelGeosGeoLine *inputLine2, GeogebraCommonKernelGeosGeoLine *inputLine3) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelProverAlgoAreConcurrent)

#endif // _GeogebraCommonKernelProverAlgoAreConcurrent_H_
