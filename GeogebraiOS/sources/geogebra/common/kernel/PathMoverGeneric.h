//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/PathMoverGeneric.java
//

#ifndef _GeogebraCommonKernelPathMoverGeneric_H_
#define _GeogebraCommonKernelPathMoverGeneric_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/PathMover.h"

@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelPath;

@interface GeogebraCommonKernelPathMoverGeneric : NSObject < GeogebraCommonKernelPathMover > {
 @public
  jint MIN_STEPS_INSTANCE_;
  id<GeogebraCommonKernelPath> path_;
  jdouble start_param_;
  jdouble start_paramUP_;
  jdouble start_paramDOWN_;
  jdouble curr_param_;
  jdouble last_param_;
  jdouble param_extent_;
  jdouble min_param_;
  jdouble max_param_;
  jdouble max_step_width_;
  jdouble step_width_;
  jdouble offset_;
  jint mode_;
  jboolean posOrientation_;
  jboolean maxBorderSet_;
  jboolean minBorderSet_;
  jboolean lastMaxBorderSet_;
  jboolean lastMinBorderSet_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithGeogebraCommonKernelPath:(id<GeogebraCommonKernelPath>)path;

- (jboolean)biggerStep;

- (void)changeOrientation;

- (jdouble)getCurrentParameter;

- (void)getCurrentPositionWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (jboolean)getNextWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (jdouble)getStep;

- (jboolean)hasNext;

- (jboolean)hasPositiveOrientation;

- (void)init__WithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p OBJC_METHOD_FAMILY_NONE;

- (void)init__WithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                                                 withInt:(jint)min_steps OBJC_METHOD_FAMILY_NONE;

- (void)resetStartParameter;

- (jboolean)setStepWithDouble:(jdouble)step;

- (jboolean)smallerStep;

- (void)stepBack;

#pragma mark Protected

- (void)calcPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelPathMoverGeneric)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelPathMoverGeneric, path_, id<GeogebraCommonKernelPath>)

FOUNDATION_EXPORT void GeogebraCommonKernelPathMoverGeneric_initWithGeogebraCommonKernelPath_(GeogebraCommonKernelPathMoverGeneric *self, id<GeogebraCommonKernelPath> path);

FOUNDATION_EXPORT GeogebraCommonKernelPathMoverGeneric *new_GeogebraCommonKernelPathMoverGeneric_initWithGeogebraCommonKernelPath_(id<GeogebraCommonKernelPath> path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelPathMoverGeneric_init(GeogebraCommonKernelPathMoverGeneric *self);

FOUNDATION_EXPORT GeogebraCommonKernelPathMoverGeneric *new_GeogebraCommonKernelPathMoverGeneric_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelPathMoverGeneric)

#endif // _GeogebraCommonKernelPathMoverGeneric_H_
