//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoText.java
//

#ifndef _GeogebraCommonKernelGeosGeoText_H_
#define _GeogebraCommonKernelGeosGeoText_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/Locateable.h"
#include "geogebra/common/kernel/arithmetic/TextValue.h"
#include "geogebra/common/kernel/geos/AbsoluteScreenLocateable.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/SpreadsheetTraceable.h"
#include "geogebra/common/kernel/geos/TextProperties.h"

@class GeogebraCommonKernelArithmeticExpressionNode;
@class GeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum;
@class GeogebraCommonKernelArithmeticMyStringBuffer;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonMainApp;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonAwtGRectangle2D;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol JavaUtilComparator;

#define GeogebraCommonKernelGeosGeoText_FONTSIZE_EXTRA_SMALL 0
#define GeogebraCommonKernelGeosGeoText_FONTSIZE_VERY_SMALL 1
#define GeogebraCommonKernelGeosGeoText_FONTSIZE_SMALL 2
#define GeogebraCommonKernelGeosGeoText_FONTSIZE_MEDIUM 3
#define GeogebraCommonKernelGeosGeoText_FONTSIZE_LARGE 4
#define GeogebraCommonKernelGeosGeoText_FONTSIZE_VERY_LARGE 5
#define GeogebraCommonKernelGeosGeoText_FONTSIZE_EXTRA_LARGE 6

@interface GeogebraCommonKernelGeosGeoText : GeogebraCommonKernelGeosGeoElement < GeogebraCommonKernelLocateable, GeogebraCommonKernelGeosAbsoluteScreenLocateable, GeogebraCommonKernelArithmeticTextValue, GeogebraCommonKernelGeosTextProperties, GeogebraCommonKernelGeosSpreadsheetTraceable > {
 @public
  jboolean isTextCommand__;
  jboolean alwaysFixed_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)value;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
                                            withNSString:(NSString *)value;

- (instancetype)initWithGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)text;

- (void)addTextDescendantWithGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)text;

- (void)addToSpreadsheetTraceListWithJavaUtilArrayList:(JavaUtilArrayList *)spreadsheetTraceList;

+ (void)appendFontTagWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                   withBoolean:(jboolean)serifFont
                                    withDouble:(jdouble)fontSizeD
                                       withInt:(jint)fontStyle
                                   withBoolean:(jboolean)isLaTeX
                     withGeogebraCommonMainApp:(GeogebraCommonMainApp *)app;

- (void)calculateCornerPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)result
                                                         withInt:(jint)n;

- (GeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)doRemove;

- (jboolean)evaluatesToText;

- (jint)getAbsoluteScreenLocX;

- (jint)getAbsoluteScreenLocY;

- (id<GeogebraCommonAwtGRectangle2D>)getBoundingBox;

+ (id<JavaUtilComparator>)getComparator;

+ (jint)getFontSizeIndexWithDouble:(jdouble)d;

- (jdouble)getFontSizeMultiplier;

- (jint)getFontStyle;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (jint)getPrintDecimals;

- (jint)getPrintFigures;

- (jdouble)getRealWorldLocX;

- (jdouble)getRealWorldLocY;

- (jint)getRelatedModeID;

+ (jdouble)getRelativeFontSizeWithInt:(jint)index;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getStartPoint;

- (IOSObjectArray *)getStartPoints;

- (GeogebraCommonKernelStringTemplate *)getStringTemplate;

- (GeogebraCommonKernelArithmeticMyStringBuffer *)getText;

- (NSString *)getTextString;

- (GeogebraCommonKernelGeosGeoElement_TraceModesEnumEnum *)getTraceModes;

- (void)getXMLWithBoolean:(jboolean)getListenersToo
withJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)hasAbsoluteLocation;

- (jboolean)hasBackgroundColor;

- (jboolean)hasDrawable3D;

- (void)initSpreadsheetTraceableCase OBJC_METHOD_FAMILY_NONE;

- (void)initStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                                                         withInt:(jint)number OBJC_METHOD_FAMILY_NONE;

- (jboolean)isAbsoluteScreenLocActive;

- (jboolean)isAbsoluteScreenLocateable;

- (jboolean)isAlwaysFixed;

- (jboolean)isAuxiliaryObjectByDefault;

- (jboolean)isDefined;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isFixable;

- (jboolean)isGeoText;

- (jboolean)isLaTeX;

- (jboolean)isLaTeXDrawableGeo;

- (jboolean)isLaTeXTextCommand;

- (jboolean)isMathML;

- (jboolean)isMoveable;

- (jboolean)isNeedsUpdatedBoundingBox;

- (jboolean)isNumberValue;

- (jboolean)isPinnable;

- (jboolean)isRedefineable;

- (jboolean)isSerifFont;

- (jboolean)isSpreadsheetTraceable;

- (jboolean)isTextCommand;

- (jboolean)justFontSize;

- (void)removeStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setAbsoluteScreenLocWithInt:(jint)x
                            withInt:(jint)y;

- (void)setAbsoluteScreenLocActiveWithBoolean:(jboolean)flag;

- (void)setAlgoMacroOutputWithBoolean:(jboolean)isAlgoMacroOutput;

- (void)setAllVisualPropertiesExceptEuclidianVisibleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                               withBoolean:(jboolean)keepAdvanced;

- (void)setAlwaysFixedWithBoolean:(jboolean)alwaysFixed;

- (void)setBoundingBoxWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)w
                      withDouble:(jdouble)h;

- (void)setFontSizeMultiplierWithDouble:(jdouble)d;

- (void)setFontStyleWithInt:(jint)fontStyle;

- (void)setFormulaTypeWithGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum:(GeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum *)st;

- (void)setIsTextCommandWithBoolean:(jboolean)isCommand;

- (void)setLaTeXWithBoolean:(jboolean)b
                withBoolean:(jboolean)updateParentAlgo;

- (void)setMathMLWithBoolean:(jboolean)b;

- (void)setNeedsUpdatedBoundingBoxWithBoolean:(jboolean)needsUpdatedBoundingBox;

- (void)setPrintDecimalsWithInt:(jint)printDecimals
                    withBoolean:(jboolean)update;

- (void)setPrintFiguresWithInt:(jint)printFigures
                   withBoolean:(jboolean)update;

- (void)setRealWorldLocWithDouble:(jdouble)x
                       withDouble:(jdouble)y;

- (void)setSerifFontWithBoolean:(jboolean)serifFont;

- (void)setSpreadsheetTraceableWithGeogebraCommonKernelArithmeticExpressionNode:(GeogebraCommonKernelArithmeticExpressionNode *)leftTree
                              withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)value;

- (void)setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (void)setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                                                        withInt:(jint)number;

- (void)setTextStringWithNSString:(NSString *)text2;

- (void)setUndefined;

- (void)setVisualStyleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setWaitForStartPoint;

- (void)setZero;

- (jboolean)showInAlgebraView;

- (NSString *)toOutputValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl1;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl1;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl1;

- (void)update;

- (void)updateColumnHeadingsForTraceValues;

- (void)updateLocation;

- (void)updateVisualStyle;

- (jboolean)useSignificantFigures;

#pragma mark Protected

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)showInEuclidianView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoText)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoText, FONTSIZE_EXTRA_SMALL, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoText, FONTSIZE_VERY_SMALL, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoText, FONTSIZE_SMALL, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoText, FONTSIZE_MEDIUM, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoText, FONTSIZE_LARGE, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoText, FONTSIZE_VERY_LARGE, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoText, FONTSIZE_EXTRA_LARGE, jint)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoText *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoText *new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_withNSString_withNSString_(GeogebraCommonKernelGeosGeoText *self, GeogebraCommonKernelConstruction *c, NSString *label, NSString *value);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoText *new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_withNSString_withNSString_(GeogebraCommonKernelConstruction *c, NSString *label, NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelGeosGeoText *self, GeogebraCommonKernelConstruction *c, NSString *value);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoText *new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelConstruction *c, NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelGeosGeoText *self, GeogebraCommonKernelGeosGeoText *text);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoText *new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelGeosGeoText_(GeogebraCommonKernelGeosGeoText *text) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoText_getRelativeFontSizeWithInt_(jint index);

FOUNDATION_EXPORT jint GeogebraCommonKernelGeosGeoText_getFontSizeIndexWithDouble_(jdouble d);

FOUNDATION_EXPORT id<JavaUtilComparator> GeogebraCommonKernelGeosGeoText_getComparator();

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoText_appendFontTagWithJavaLangStringBuilder_withBoolean_withDouble_withInt_withBoolean_withGeogebraCommonMainApp_(JavaLangStringBuilder *sb, jboolean serifFont, jdouble fontSizeD, jint fontStyle, jboolean isLaTeX, GeogebraCommonMainApp *app);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoText)

#endif // _GeogebraCommonKernelGeosGeoText_H_
