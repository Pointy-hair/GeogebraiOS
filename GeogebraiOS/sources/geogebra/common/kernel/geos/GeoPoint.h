//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoPoint.java
//

#ifndef _GeogebraCommonKernelGeosGeoPoint_H_
#define _GeogebraCommonKernelGeosGeoPoint_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/MatrixTransformable.h"
#include "geogebra/common/kernel/PathOrPoint.h"
#include "geogebra/common/kernel/algos/SymbolicParametersAlgo.h"
#include "geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"
#include "geogebra/common/kernel/arithmetic/VectorValue.h"
#include "geogebra/common/kernel/geos/Animatable.h"
#include "geogebra/common/kernel/geos/ConicMirrorable.h"
#include "geogebra/common/kernel/geos/Dilateable.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/kernel/geos/Mirrorable.h"
#include "geogebra/common/kernel/geos/Transformable.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@class GeogebraCommonEuclidianEuclidianView;
@class GeogebraCommonKernelAlgosAlgoElement;
@class GeogebraCommonKernelAlgosSymbolicParameters;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoConic;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoElement_HitTypeEnum;
@class GeogebraCommonKernelGeosGeoElement_TraceModesEnumEnum;
@class GeogebraCommonKernelGeosGeoVec2D;
@class GeogebraCommonKernelKernel;
@class GeogebraCommonKernelLocateableList;
@class GeogebraCommonKernelMatrixCoordSys;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelMyPoint;
@class GeogebraCommonKernelPathParameter;
@class GeogebraCommonKernelRegionParameters;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSDoubleArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@class JavaUtilTreeSet;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoLineND;
@protocol GeogebraCommonKernelPath;
@protocol GeogebraCommonKernelPathMover;
@protocol GeogebraCommonKernelRegion;
@protocol JavaUtilComparator;

@interface GeogebraCommonKernelGeosGeoPoint : GeogebraCommonKernelGeosGeoVec3D < GeogebraCommonKernelArithmeticVectorValue, GeogebraCommonKernelPathOrPoint, GeogebraCommonKernelGeosMirrorable, GeogebraCommonKernelGeosDilateable, GeogebraCommonKernelMatrixTransformable, GeogebraCommonKernelGeosConicMirrorable, GeogebraCommonKernelKernelNDGeoPointND, GeogebraCommonKernelGeosAnimatable, GeogebraCommonKernelGeosTransformable, GeogebraCommonKernelAlgosSymbolicParametersAlgo, GeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo > {
 @public
  jdouble inhomX_;
  jdouble inhomY_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                             withBoolean:(jboolean)isHelper;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                              withDouble:(jdouble)x
                                              withDouble:(jdouble)y
                                              withDouble:(jdouble)z;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                            withGeogebraCommonKernelPath:(id<GeogebraCommonKernelPath>)path;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                          withGeogebraCommonKernelRegion:(id<GeogebraCommonKernelRegion>)region;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
                                              withDouble:(jdouble)x
                                              withDouble:(jdouble)y
                                              withDouble:(jdouble)z;

- (instancetype)initWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)point;

+ (void)addEqualSignToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sbToString
                                              withInt:(jint)toStringMode
                                              withInt:(jint)coordStyle;

- (void)addIncidenceWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                               withBoolean:(jboolean)isStartPoint;

- (jboolean)addIncidenceWithProbabilisticCheckingWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)addNonIncidenceWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)addToPathParameterWithDouble:(jdouble)a;

- (void)addToSpreadsheetTraceListWithJavaUtilArrayList:(JavaUtilArrayList *)spreadsheetTraceList;

+ (jdouble)affineRatioWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                      withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B
                      withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)C;

+ (void)buildValueStringWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                               withInt:(jint)toStringMode
                                            withDouble:(jdouble)x
                                            withDouble:(jdouble)y
                             withJavaLangStringBuilder:(JavaLangStringBuilder *)sbBuildValueString;

+ (void)buildValueStringCoordCartesian3DWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                                withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                            withDouble:(jdouble)x
                                                            withDouble:(jdouble)y
                                                            withDouble:(jdouble)z
                                             withJavaLangStringBuilder:(JavaLangStringBuilder *)sbBuildValueString;

+ (void)buildValueStringCoordSphericalWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                              withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl
                                                          withDouble:(jdouble)x
                                                          withDouble:(jdouble)y
                                                          withDouble:(jdouble)z
                                           withJavaLangStringBuilder:(JavaLangStringBuilder *)sbBuildValueString;

+ (NSString *)buildValueStringSeparatorWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
                               withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)clearPathParameter;

+ (jboolean)collinearWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A
                     withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)B
                     withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)C;

- (GeogebraCommonKernelGeosGeoPoint *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)createIncidenceList;

- (void)createNonIncidenceList;

- (id<GeogebraCommonKernelPathMover>)createPathMover;

+ (jdouble)detWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)P
              withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)Q;

- (void)dilateWithDouble:(jdouble)r;

- (void)dilateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)rval
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)S;

- (jdouble)distanceWithDouble:(jdouble)x
                   withDouble:(jdouble)y;

- (jdouble)distanceWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)P;

- (jdouble)distanceWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (jdouble)distanceSqrWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)P;

- (jdouble)distanceToPathWithGeogebraCommonKernelPathOrPoint:(id<GeogebraCommonKernelPathOrPoint>)path1;

- (jboolean)doAnimationStepWithDouble:(jdouble)frameRate;

+ (jboolean)doAnimationStepWithDouble:(jdouble)frameRate
withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
         withGeogebraCommonKernelPath:(id<GeogebraCommonKernelPath>)path;

- (void)doRemove;

- (jboolean)evaluatesToNonComplex2DVector;

- (jboolean)evaluatesToVectorNotPoint;

- (jdouble)getAnimationValue;

- (IOSObjectArray *)getBotanaPolynomialsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

+ (id<JavaUtilComparator>)getComparatorX;

- (JavaUtilArrayList *)getCoordParentNumbers;

- (GeogebraCommonKernelMatrixCoords *)getCoordsInDWithInt:(jint)dimension;

- (GeogebraCommonKernelMatrixCoords *)getCoordsInD2;

- (GeogebraCommonKernelMatrixCoords *)getCoordsInD2WithGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)coordSys;

- (GeogebraCommonKernelMatrixCoords *)getCoordsInD3;

- (IOSIntArray *)getDegrees;

- (jint)getDimension;

- (IOSObjectArray *)getExactCoordinatesWithJavaUtilHashMap:(JavaUtilHashMap *)values;

- (void)getFreeVariablesWithJavaUtilHashSet:(JavaUtilHashSet *)variables;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (JavaUtilArrayList *)getIncidenceList;

- (GeogebraCommonKernelMatrixCoords *)getInhomCoords;

- (void)getInhomCoordsWithDoubleArray:(IOSDoubleArray *)res;

- (GeogebraCommonKernelMatrixCoords *)getInhomCoordsInDWithInt:(jint)dimension;

- (GeogebraCommonKernelMatrixCoords *)getInhomCoordsInD2;

- (GeogebraCommonKernelMatrixCoords *)getInhomCoordsInD3;

- (jdouble)getInhomX;

- (jdouble)getInhomY;

- (jdouble)getInhomZ;

- (GeogebraCommonKernelMatrixCoords *)getLabelPosition;

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (GeogebraCommonKernelLocateableList *)getLocateableList;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (jint)getMoveMode;

- (JavaUtilArrayList *)getNonIncidenceList;

- (id<GeogebraCommonKernelPath>)getPath;

- (GeogebraCommonKernelPathParameter *)getPathParameter;

- (jint)getPointSize;

- (jint)getPointStyle;

- (void)getPolarCoordsWithDoubleArray:(IOSDoubleArray *)res;

- (IOSObjectArray *)getPolynomials;

- (id<GeogebraCommonKernelRegion>)getRegion;

- (GeogebraCommonKernelRegionParameters *)getRegionParameters;

- (jint)getRelatedModeID;

- (NSString *)getStartPointXML;

- (GeogebraCommonKernelAlgosSymbolicParameters *)getSymbolicParameters;

- (NSString *)getTraceDialogAsValues;

- (GeogebraCommonKernelGeosGeoElement_TraceModesEnumEnum *)getTraceModes;

- (NSString *)getTypeString;

- (GeogebraCommonKernelGeosGeoVec2D *)getVector;

- (jdouble)getX2D;

- (jdouble)getY2D;

- (jboolean)hasChangeableCoordParentNumbers;

- (jboolean)hasDrawable3D;

- (jboolean)hasLocateableList;

- (jboolean)hasPath;

- (jboolean)hasPolarParentNumbers;

- (jboolean)hasRegion;

- (jboolean)isAbsoluteStartPoint;

- (jboolean)isAnimatable;

- (jboolean)isCasEvaluableObject;

- (jboolean)isChangeable;

- (jboolean)isClosedPath;

- (jboolean)isDefined;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                               withDouble:(jdouble)eps;

- (jboolean)isEqualPointNDWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)geo;

- (jboolean)isFinite;

- (jboolean)isFixable;

- (jboolean)isFixed;

- (jboolean)isGeoPoint;

- (jboolean)isInfinite;

- (jboolean)isMatrixTransformable;

- (jboolean)isNumberValue;

- (jboolean)isOnPathWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)PI
                                                    withDouble:(jdouble)eps;

+ (jboolean)isPointChangeableWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)point;

- (jboolean)isPointInRegion;

- (jboolean)isPointOnPath;

- (jboolean)isRandomizable;

- (jboolean)isTranslateable;

- (void)matrixTransformWithDouble:(jdouble)a
                       withDouble:(jdouble)b
                       withDouble:(jdouble)c
                       withDouble:(jdouble)d;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22;

- (void)mirrorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)c;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g1;

- (void)moveDependenciesWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)oldGeo;

- (jboolean)moveFromChangeableCoordParentNumbersWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)rwTransVec
                                                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)targetPosition
                                                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)viewDirection
                                                               withJavaUtilArrayList:(JavaUtilArrayList *)updateGeos
                                                               withJavaUtilArrayList:(JavaUtilArrayList *)tempMoveObjectList
                                            withGeogebraCommonEuclidianEuclidianView:(GeogebraCommonEuclidianEuclidianView *)view;

- (jboolean)movePointWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)a
                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)b;

- (void)pathChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)pointChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

+ (void)pointChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                                                    withDouble:(jdouble)x
                                                    withDouble:(jdouble)y
                                                    withDouble:(jdouble)z;

- (void)randomizeForProbabilisticChecking;

- (void)removeIncidenceWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)removePath;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)point;

- (void)rotateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)phiValue
                 withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point;

+ (jboolean)samePositionWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)P
                        withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)Q;

- (void)setWithDouble:(jdouble)param1
           withDouble:(jdouble)param2
withGeogebraCommonKernelMyPoint:(GeogebraCommonKernelMyPoint *)leftPoint
withGeogebraCommonKernelMyPoint:(GeogebraCommonKernelMyPoint *)rightPoint;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p;

- (void)setAnimationValueWithDouble:(jdouble)val;

- (void)setCoordsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                          withBoolean:(jboolean)doPathOrRegion;

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z;

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)z
                 withDouble:(jdouble)w;

- (void)setCoordsWithGeogebraCommonKernelGeosGeoVec2D:(GeogebraCommonKernelGeosGeoVec2D *)v;

- (void)setCoordsWithGeogebraCommonKernelGeosGeoVec3D:(GeogebraCommonKernelGeosGeoVec3D *)v;

- (void)setCoords2DWithDouble:(jdouble)x
                   withDouble:(jdouble)y
                   withDouble:(jdouble)z;

- (void)setCoordsFromPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point;

- (void)setIncidenceListWithJavaUtilArrayList:(JavaUtilArrayList *)list;

- (void)setLocateableListWithGeogebraCommonKernelLocateableList:(GeogebraCommonKernelLocateableList *)locateableList;

- (void)setParentAlgorithmWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algorithm;

- (void)setPathWithGeogebraCommonKernelPath:(id<GeogebraCommonKernelPath>)p;

- (void)setPointSizeWithInt:(jint)i;

- (void)setPointStyleWithInt:(jint)style;

- (void)setPolarCoordsWithDouble:(jdouble)r
                      withDouble:(jdouble)phi;

- (void)setRegionWithGeogebraCommonKernelRegion:(id<GeogebraCommonKernelRegion>)a_region;

- (void)setUndefined;

- (void)setVisualStyleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setXWithDouble:(jdouble)x;

- (void)setYWithDouble:(jdouble)y;

- (void)setZWithDouble:(jdouble)z;

- (void)setZero;

- (jboolean)showInAlgebraView;

- (jboolean)showInEuclidianView;

- (void)showUndefinedInAlgebraViewWithBoolean:(jboolean)flag;

- (void)switchMoveModeWithInt:(jint)mode;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringMinimalWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringMinimalWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)translateWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v;

- (void)update;

- (void)updateColumnHeadingsForTraceValues;

- (void)updateCoords;

- (void)updateCoords2D;

- (void)updateCoordsFrom2DWithBoolean:(jboolean)doPathOrRegion;

- (void)updateCoordsFrom2DWithBoolean:(jboolean)doPathOrRegion
withGeogebraCommonKernelMatrixCoordSys:(GeogebraCommonKernelMatrixCoordSys *)coordsys;

- (IOSDoubleArray *)vectorToWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)QI;

#pragma mark Protected

+ (JavaUtilTreeSet *)getTempSet;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)setUndefinedCoords;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoPoint)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoPoint *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoPoint *new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonKernelGeosGeoPoint *self, GeogebraCommonKernelConstruction *c, jboolean isHelper);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoPoint *new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonKernelConstruction *c, jboolean isHelper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_(GeogebraCommonKernelGeosGeoPoint *self, GeogebraCommonKernelConstruction *c, NSString *label, jdouble x, jdouble y, jdouble z);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoPoint *new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withNSString_withDouble_withDouble_withDouble_(GeogebraCommonKernelConstruction *c, NSString *label, jdouble x, jdouble y, jdouble z) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withDouble_withDouble_withDouble_(GeogebraCommonKernelGeosGeoPoint *self, GeogebraCommonKernelConstruction *c, jdouble x, jdouble y, jdouble z);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoPoint *new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withDouble_withDouble_withDouble_(GeogebraCommonKernelConstruction *c, jdouble x, jdouble y, jdouble z) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelPath_(GeogebraCommonKernelGeosGeoPoint *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelPath> path);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoPoint *new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelPath_(GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelPath> path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(GeogebraCommonKernelGeosGeoPoint *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelRegion> region);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoPoint *new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelRegion_(GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelRegion> region) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *self, GeogebraCommonKernelGeosGeoPoint *point);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoPoint *new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *point) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jboolean GeogebraCommonKernelGeosGeoPoint_isPointChangeableWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *point);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelGeosGeoPoint_samePositionWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *P, GeogebraCommonKernelGeosGeoPoint *Q);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelGeosGeoPoint_collinearWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoPoint_detWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *P, GeogebraCommonKernelGeosGeoPoint *Q);

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoPoint_affineRatioWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoPoint *A, GeogebraCommonKernelGeosGeoPoint *B, GeogebraCommonKernelGeosGeoPoint *C);

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_addEqualSignToStringWithJavaLangStringBuilder_withInt_withInt_(JavaLangStringBuilder *sbToString, jint toStringMode, jint coordStyle);

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_buildValueStringCoordCartesian3DWithGeogebraCommonKernelKernel_withGeogebraCommonKernelStringTemplate_withDouble_withDouble_withDouble_withJavaLangStringBuilder_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelStringTemplate *tpl, jdouble x, jdouble y, jdouble z, JavaLangStringBuilder *sbBuildValueString);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelGeosGeoPoint_buildValueStringSeparatorWithGeogebraCommonKernelKernel_withGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelStringTemplate *tpl);

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_buildValueStringCoordSphericalWithGeogebraCommonKernelKernel_withGeogebraCommonKernelStringTemplate_withDouble_withDouble_withDouble_withJavaLangStringBuilder_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelStringTemplate *tpl, jdouble x, jdouble y, jdouble z, JavaLangStringBuilder *sbBuildValueString);

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_buildValueStringWithGeogebraCommonKernelKernel_withGeogebraCommonKernelStringTemplate_withInt_withDouble_withDouble_withJavaLangStringBuilder_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelStringTemplate *tpl, jint toStringMode, jdouble x, jdouble y, JavaLangStringBuilder *sbBuildValueString);

FOUNDATION_EXPORT JavaUtilTreeSet *GeogebraCommonKernelGeosGeoPoint_getTempSet();

FOUNDATION_EXPORT id<JavaUtilComparator> GeogebraCommonKernelGeosGeoPoint_getComparatorX();

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoPoint_pointChangedWithGeogebraCommonKernelKernelNDGeoPointND_withDouble_withDouble_withDouble_(id<GeogebraCommonKernelKernelNDGeoPointND> p, jdouble x, jdouble y, jdouble z);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelGeosGeoPoint_doAnimationStepWithDouble_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelPath_(jdouble frameRate, id<GeogebraCommonKernelKernelNDGeoPointND> p, id<GeogebraCommonKernelPath> path);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoPoint)

#endif // _GeogebraCommonKernelGeosGeoPoint_H_
