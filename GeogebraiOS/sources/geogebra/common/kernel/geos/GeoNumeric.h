//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoNumeric.java
//

#ifndef _GeogebraCommonKernelGeosGeoNumeric_H_
#define _GeogebraCommonKernelGeosGeoNumeric_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/geos/AbsoluteScreenLocateable.h"
#include "geogebra/common/kernel/geos/Animatable.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunctionable.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/HasExtendedAV.h"

@class GeogebraCommonKernelArithmeticFunctionVariable;
@class GeogebraCommonKernelArithmeticMyDouble;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoFunction;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonEuclidianEuclidianViewInterfaceSlim;
@protocol GeogebraCommonKernelArithmeticExpressionValue;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol JavaUtilComparator;
@protocol JavaUtilList;

#define GeogebraCommonKernelGeosGeoNumeric_DEFAULT_THICKNESS 2
#define GeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_THICKNESS 10

@interface GeogebraCommonKernelGeosGeoNumeric : GeogebraCommonKernelGeosGeoElement < GeogebraCommonKernelGeosGeoNumberValue, GeogebraCommonKernelGeosAbsoluteScreenLocateable, GeogebraCommonKernelGeosGeoFunctionable, GeogebraCommonKernelGeosAnimatable, GeogebraCommonKernelGeosHasExtendedAV > {
 @public
  jdouble value_;
  jboolean isDrawable__;
  jboolean hasAbsoluteScreenLocation_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                             withBoolean:(jboolean)setDefaults;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                              withDouble:(jdouble)x;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
                                              withDouble:(jdouble)x;

- (void)addEVSizeListenerWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim:(id<GeogebraCommonEuclidianEuclidianViewInterfaceSlim>)ev;

- (void)addToSpreadsheetTraceListWithJavaUtilArrayList:(JavaUtilArrayList *)spreadsheetTraceList;

- (jboolean)canHaveClickScript;

- (GeogebraCommonKernelGeosGeoNumeric *)copy__ OBJC_METHOD_FAMILY_NONE;

- (jboolean)doAnimationStepWithDouble:(jdouble)frameRate;

- (void)doRemove;

- (jint)getAbsoluteScreenLocX;

- (jint)getAbsoluteScreenLocY;

- (jdouble)getAnimationSpeed;

- (jdouble)getAnimationStep;

+ (id<JavaUtilComparator>)getComparator;

- (jdouble)getDouble;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (GeogebraCommonKernelGeosGeoFunction *)getGeoFunction;

- (jdouble)getIntervalMax;

- (GeogebraCommonKernelGeosGeoElement *)getIntervalMaxObject;

- (jdouble)getIntervalMin;

- (GeogebraCommonKernelGeosGeoElement *)getIntervalMinObject;

- (GeogebraCommonKernelGeosGeoElement_HitTypeEnum *)getLastHitType;

- (NSString *)getLaTeXdescription;

- (jint)getMinimumLineThickness;

- (id<JavaUtilList>)getMinMaxListeners;

- (GeogebraCommonKernelArithmeticMyDouble *)getNumber;

- (jdouble)getRealWorldLocX;

- (jdouble)getRealWorldLocY;

- (jint)getRelatedModeID;

- (jdouble)getSliderWidth;

- (jdouble)getSliderX;

- (jdouble)getSliderY;

- (jint)getSlopeTriangleSize;

- (jdouble)getValue;

- (jboolean)hasLineOpacity;

- (id<GeogebraCommonKernelArithmeticExpressionValue>)integralWithGeogebraCommonKernelArithmeticFunctionVariable:(GeogebraCommonKernelArithmeticFunctionVariable *)fv;

- (jboolean)isAbsoluteScreenLocActive;

- (jboolean)isAbsoluteScreenLocateable;

- (jboolean)isAnimatable;

- (jboolean)isCasEvaluableObject;

- (jboolean)isDefined;

- (jboolean)isDrawable;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isFillable;

- (jboolean)isFinite;

- (jboolean)isFixable;

- (jboolean)isGeoFunctionable;

- (jboolean)isGeoNumeric;

- (jboolean)isInfinite;

- (jboolean)isIntervalMaxActive;

- (jboolean)isIntervalMinActive;

- (jboolean)isLaTeXDrawableGeo;

- (jboolean)isNumberValue;

- (jboolean)isPinnable;

- (jboolean)isRandom;

- (jboolean)isShowingExtendedAV;

- (jboolean)isSlider;

- (jboolean)isSliderFixed;

- (jboolean)isSliderHorizontal;

- (void)moveDependenciesWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)oldGeo;

- (void)registerMinMaxListenerWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)removeEVSizeListenerWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim:(id<GeogebraCommonEuclidianEuclidianViewInterfaceSlim>)ev;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setAbsoluteScreenLocWithInt:(jint)x
                            withInt:(jint)y;

- (void)setAbsoluteScreenLocWithInt:(jint)x
                            withInt:(jint)y
                        withBoolean:(jboolean)force;

- (void)setAbsoluteScreenLocActiveWithBoolean:(jboolean)flag;

- (void)setAllVisualPropertiesExceptEuclidianVisibleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                               withBoolean:(jboolean)keepAdvanced;

- (void)setAnimatingWithBoolean:(jboolean)flag;

- (void)setDrawableWithBoolean:(jboolean)flag;

- (void)setDrawableWithBoolean:(jboolean)flag
                   withBoolean:(jboolean)visible;

- (void)setEuclidianVisibleWithBoolean:(jboolean)visible;

- (void)setIntervalMaxWithDouble:(jdouble)value;

- (void)setIntervalMaxWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)max;

- (void)setIntervalMinWithDouble:(jdouble)value;

- (void)setIntervalMinWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)min;

- (void)setRandomWithBoolean:(jboolean)random;

- (void)setRealWorldLocWithDouble:(jdouble)x
                       withDouble:(jdouble)y;

- (void)setShowExtendedAVWithBoolean:(jboolean)showExtendedAV;

- (void)setSliderFixedWithBoolean:(jboolean)isSliderFixed;

+ (GeogebraCommonKernelGeosGeoNumeric *)setSliderFromDefaultWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)num
                                                                                       withBoolean:(jboolean)isAngle;

- (void)setSliderHorizontalWithBoolean:(jboolean)sliderHorizontal;

- (void)setSliderLocationWithDouble:(jdouble)x
                         withDouble:(jdouble)y
                        withBoolean:(jboolean)force;

- (void)setSliderWidthWithDouble:(jdouble)width;

- (void)setSlopeTriangleSizeWithInt:(jint)i;

- (void)setUndefined;

- (void)setValueWithDouble:(jdouble)x;

- (void)setValueWithDouble:(jdouble)x
               withBoolean:(jboolean)changeAnimationValue;

- (void)setVisualStyleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setZero;

- (jboolean)showInAlgebraView;

- (jboolean)showInEuclidianView;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toStringMinimal;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringMinimal;

- (void)unregisterMinMaxListenerWithGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)geo;

- (void)update;

- (void)updateRandom;

- (void)updateRandomGeo;

- (void)updateRandomNoCascade;

#pragma mark Protected

- (void)getXMLsliderTagWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)isSliderable;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoNumeric)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_THICKNESS, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_THICKNESS, jint)

FOUNDATION_EXPORT jint GeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_WIDTH_PIXEL_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_, jint)

FOUNDATION_EXPORT jint GeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_WIDTH_PIXEL_ANGLE_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_ANGLE_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_WIDTH_PIXEL_ANGLE_, jint)

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_MIN_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MIN_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MIN_, jdouble)

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_MAX_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MAX_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_MAX_, jdouble)

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_INCREMENT_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_INCREMENT_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_INCREMENT_, jdouble)

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoNumeric_DEFAULT_SLIDER_SPEED_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_SPEED_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(GeogebraCommonKernelGeosGeoNumeric, DEFAULT_SLIDER_SPEED_, jdouble)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoNumeric *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoNumeric *new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonKernelGeosGeoNumeric *self, GeogebraCommonKernelConstruction *c, jboolean setDefaults);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoNumeric *new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withBoolean_(GeogebraCommonKernelConstruction *c, jboolean setDefaults) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withNSString_withDouble_(GeogebraCommonKernelGeosGeoNumeric *self, GeogebraCommonKernelConstruction *c, NSString *label, jdouble x);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoNumeric *new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withNSString_withDouble_(GeogebraCommonKernelConstruction *c, NSString *label, jdouble x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(GeogebraCommonKernelGeosGeoNumeric *self, GeogebraCommonKernelConstruction *c, jdouble x);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoNumeric *new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(GeogebraCommonKernelConstruction *c, jdouble x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT id<JavaUtilComparator> GeogebraCommonKernelGeosGeoNumeric_getComparator();

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoNumeric *GeogebraCommonKernelGeosGeoNumeric_setSliderFromDefaultWithGeogebraCommonKernelGeosGeoNumeric_withBoolean_(GeogebraCommonKernelGeosGeoNumeric *num, jboolean isAngle);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoNumeric)

#endif // _GeogebraCommonKernelGeosGeoNumeric_H_
