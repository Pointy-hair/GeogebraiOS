//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoTurtle.java
//

#ifndef _GeogebraCommonKernelGeosGeoTurtle_H_
#define _GeogebraCommonKernelGeosGeoTurtle_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "java/lang/Enum.h"

@class GeogebraCommonAwtGColor;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoElement_FillTypeEnum;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSDoubleArray;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonAwtGImage;
@protocol GeogebraCommonKernelGeosGeoTurtle_Command;
@protocol GeogebraCommonKernelGeosGeoTurtle_DrawState;
@protocol GeogebraCommonKernelKernelNDGeoPointND;

@interface GeogebraCommonKernelGeosGeoTurtle : GeogebraCommonKernelGeosGeoPoint {
 @public
  IOSDoubleArray *position_;
  GeogebraCommonAwtGColor *penColor_;
  jint penThickness_;
  jboolean penDown_;
  jdouble turnAngle_;
  jdouble sinAngle_;
  jdouble cosAngle_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label;

- (void)addCommandWithGeogebraCommonKernelGeosGeoTurtle_Command:(id<GeogebraCommonKernelGeosGeoTurtle_Command>)cmd;

- (void)addTurtleImageWithGeogebraCommonAwtGImage:(id<GeogebraCommonAwtGImage>)image;

- (void)clear;

- (GeogebraCommonKernelGeosGeoPoint *)copy__ OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelGeosGeoElement *)copyInternalWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 OBJC_METHOD_FAMILY_NONE;

- (jboolean)doAnimationStepWithDouble:(jdouble)frameRate;

- (void)forwardWithDouble:(jdouble)distance;

- (IOSDoubleArray *)getAngleRotators;

- (jdouble)getCurrentCommandProgress;

- (GeogebraCommonKernelGeosGeoElement_FillTypeEnum *)getFillType;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (jint)getNumberOfCompletedCommands;

- (GeogebraCommonAwtGColor *)getPenColor;

- (jboolean)getPenDown;

- (jint)getPenThickness;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getPosition;

- (jdouble)getSpeed;

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getStartPoint;

- (jdouble)getTurnAngle;

- (jint)getTurtle;

- (JavaUtilArrayList *)getTurtleCommandList;

- (JavaUtilArrayList *)getTurtleImageList;

- (jboolean)isAnimatable;

- (jboolean)isAutoUpdate;

- (jboolean)isDefined;

- (jboolean)isFillable;

- (jboolean)isGeoTurtle;

- (void)resetProgress;

- (void)setAutoUpdateWithBoolean:(jboolean)autoUpdate;

- (void)setCoordsWithDouble:(jdouble)x
                 withDouble:(jdouble)y;

- (void)setPenColorWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)penColor;

- (void)setPenColorWithInt:(jint)r
                   withInt:(jint)g
                   withInt:(jint)b;

- (void)setPenDownWithBoolean:(jboolean)penDown;

- (void)setPenThicknessWithInt:(jint)thickness;

- (void)setPositionWithDouble:(jdouble)x
                   withDouble:(jdouble)y;

- (void)setSpeedWithDouble:(jdouble)s;

- (void)setTurnAngleWithDouble:(jdouble)a;

- (void)setTurtleWithInt:(jint)index;

- (void)setUndefined;

- (void)stepTurtle;

- (void)stepTurtleWithDouble:(jdouble)nSteps;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (void)turnWithDouble:(jdouble)turnAngleChange;

#pragma mark Protected

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelGeosGeoTurtle, position_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelGeosGeoTurtle, penColor_, GeogebraCommonAwtGColor *)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelGeosGeoTurtle *self, GeogebraCommonKernelConstruction *c, NSString *label);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle *new_GeogebraCommonKernelGeosGeoTurtle_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelConstruction *c, NSString *label) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoTurtle *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle *new_GeogebraCommonKernelGeosGeoTurtle_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle)

typedef NS_ENUM(NSUInteger, GeogebraCommonKernelGeosGeoTurtle_CmdType) {
  GeogebraCommonKernelGeosGeoTurtle_CmdType_FORWARD = 0,
  GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_POSITION = 1,
  GeogebraCommonKernelGeosGeoTurtle_CmdType_TURN = 2,
  GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_COLOR = 3,
  GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_PEN = 4,
  GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_THICKNESS = 5,
};

@interface GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum : JavaLangEnum < NSCopying >

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values();

+ (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum)

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values_[];

#define GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_FORWARD GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values_[GeogebraCommonKernelGeosGeoTurtle_CmdType_FORWARD]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum, FORWARD)

#define GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_SET_POSITION GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values_[GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_POSITION]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum, SET_POSITION)

#define GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_TURN GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values_[GeogebraCommonKernelGeosGeoTurtle_CmdType_TURN]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum, TURN)

#define GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_SET_COLOR GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values_[GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_COLOR]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum, SET_COLOR)

#define GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_SET_PEN GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values_[GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_PEN]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum, SET_PEN)

#define GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_SET_THICKNESS GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum_values_[GeogebraCommonKernelGeosGeoTurtle_CmdType_SET_THICKNESS]
J2OBJC_ENUM_CONSTANT_GETTER(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum, SET_THICKNESS)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum)

@protocol GeogebraCommonKernelGeosGeoTurtle_Command < NSObject, JavaObject >

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

- (jdouble)getTime;

- (void)perform;

- (void)drawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds;

- (void)partialDrawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds
                                                        withDouble:(jdouble)progress;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_Command)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_Command)

@protocol GeogebraCommonKernelGeosGeoTurtle_DrawState < NSObject, JavaObject >

- (void)setPenWithBoolean:(jboolean)down;

- (void)moveWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)newPosition;

- (void)turnWithDouble:(jdouble)angle;

- (void)partialMoveWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)newPosition
                                                   withDouble:(jdouble)progress;

- (void)partialTurnWithDouble:(jdouble)angle
                   withDouble:(jdouble)progress;

- (void)setColorWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)color;

- (void)setThicknessWithInt:(jint)th;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_DrawState)

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_DrawState)

@interface GeogebraCommonKernelGeosGeoTurtle_CmdForward : NSObject < GeogebraCommonKernelGeosGeoTurtle_Command >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelGeosGeoTurtle:(GeogebraCommonKernelGeosGeoTurtle *)outer$
                                               withDouble:(jdouble)l;

- (void)drawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds;

- (jdouble)getTime;

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

- (void)partialDrawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds
                                                        withDouble:(jdouble)progress;

- (void)perform;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdForward)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_CmdForward_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_(GeogebraCommonKernelGeosGeoTurtle_CmdForward *self, GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble l);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdForward *new_GeogebraCommonKernelGeosGeoTurtle_CmdForward_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_(GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble l) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdForward)

@interface GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords : NSObject < GeogebraCommonKernelGeosGeoTurtle_Command > {
 @public
  jdouble destX_;
  jdouble destY_;
  GeogebraCommonKernelGeosGeoPoint *destination_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelGeosGeoTurtle:(GeogebraCommonKernelGeosGeoTurtle *)outer$
                                               withDouble:(jdouble)x
                                               withDouble:(jdouble)y;

- (void)drawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds;

- (jdouble)getTime;

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

- (void)partialDrawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds
                                                        withDouble:(jdouble)progress;

- (void)perform;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords, destination_, GeogebraCommonKernelGeosGeoPoint *)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_withDouble_(GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords *self, GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble x, jdouble y);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords *new_GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_withDouble_(GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble x, jdouble y) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords)

@interface GeogebraCommonKernelGeosGeoTurtle_CmdSetPosition : GeogebraCommonKernelGeosGeoTurtle_CmdSetCoords

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelGeosGeoTurtle:(GeogebraCommonKernelGeosGeoTurtle *)outer$
                                               withDouble:(jdouble)x
                                               withDouble:(jdouble)y;

- (jdouble)getTime;

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdSetPosition)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_CmdSetPosition_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_withDouble_(GeogebraCommonKernelGeosGeoTurtle_CmdSetPosition *self, GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble x, jdouble y);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdSetPosition *new_GeogebraCommonKernelGeosGeoTurtle_CmdSetPosition_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_withDouble_(GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble x, jdouble y) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdSetPosition)

@interface GeogebraCommonKernelGeosGeoTurtle_CmdTurn : NSObject < GeogebraCommonKernelGeosGeoTurtle_Command >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelGeosGeoTurtle:(GeogebraCommonKernelGeosGeoTurtle *)outer$
                                               withDouble:(jdouble)a;

- (void)drawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds;

- (jdouble)getTime;

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

- (void)partialDrawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds
                                                        withDouble:(jdouble)progress;

- (void)perform;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdTurn)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_CmdTurn_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_(GeogebraCommonKernelGeosGeoTurtle_CmdTurn *self, GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble a);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdTurn *new_GeogebraCommonKernelGeosGeoTurtle_CmdTurn_initWithGeogebraCommonKernelGeosGeoTurtle_withDouble_(GeogebraCommonKernelGeosGeoTurtle *outer$, jdouble a) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdTurn)

@interface GeogebraCommonKernelGeosGeoTurtle_CmdSetColor : NSObject < GeogebraCommonKernelGeosGeoTurtle_Command >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelGeosGeoTurtle:(GeogebraCommonKernelGeosGeoTurtle *)outer$
                              withGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)c;

- (void)drawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds;

- (jdouble)getTime;

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

- (void)partialDrawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds
                                                        withDouble:(jdouble)progress;

- (void)perform;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdSetColor)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_CmdSetColor_initWithGeogebraCommonKernelGeosGeoTurtle_withGeogebraCommonAwtGColor_(GeogebraCommonKernelGeosGeoTurtle_CmdSetColor *self, GeogebraCommonKernelGeosGeoTurtle *outer$, GeogebraCommonAwtGColor *c);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdSetColor *new_GeogebraCommonKernelGeosGeoTurtle_CmdSetColor_initWithGeogebraCommonKernelGeosGeoTurtle_withGeogebraCommonAwtGColor_(GeogebraCommonKernelGeosGeoTurtle *outer$, GeogebraCommonAwtGColor *c) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdSetColor)

@interface GeogebraCommonKernelGeosGeoTurtle_CmdSetPen : NSObject < GeogebraCommonKernelGeosGeoTurtle_Command >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelGeosGeoTurtle:(GeogebraCommonKernelGeosGeoTurtle *)outer$
                                              withBoolean:(jboolean)d;

- (void)drawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds;

- (jdouble)getTime;

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

- (void)partialDrawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds
                                                        withDouble:(jdouble)progress;

- (void)perform;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdSetPen)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_CmdSetPen_initWithGeogebraCommonKernelGeosGeoTurtle_withBoolean_(GeogebraCommonKernelGeosGeoTurtle_CmdSetPen *self, GeogebraCommonKernelGeosGeoTurtle *outer$, jboolean d);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdSetPen *new_GeogebraCommonKernelGeosGeoTurtle_CmdSetPen_initWithGeogebraCommonKernelGeosGeoTurtle_withBoolean_(GeogebraCommonKernelGeosGeoTurtle *outer$, jboolean d) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdSetPen)

@interface GeogebraCommonKernelGeosGeoTurtle_CmdSetThickness : NSObject < GeogebraCommonKernelGeosGeoTurtle_Command >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelGeosGeoTurtle:(GeogebraCommonKernelGeosGeoTurtle *)outer$
                                                  withInt:(jint)th;

- (void)drawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds;

- (jdouble)getTime;

- (GeogebraCommonKernelGeosGeoTurtle_CmdTypeEnum *)getType;

- (void)partialDrawWithGeogebraCommonKernelGeosGeoTurtle_DrawState:(id<GeogebraCommonKernelGeosGeoTurtle_DrawState>)ds
                                                        withDouble:(jdouble)progress;

- (void)perform;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoTurtle_CmdSetThickness)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoTurtle_CmdSetThickness_initWithGeogebraCommonKernelGeosGeoTurtle_withInt_(GeogebraCommonKernelGeosGeoTurtle_CmdSetThickness *self, GeogebraCommonKernelGeosGeoTurtle *outer$, jint th);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoTurtle_CmdSetThickness *new_GeogebraCommonKernelGeosGeoTurtle_CmdSetThickness_initWithGeogebraCommonKernelGeosGeoTurtle_withInt_(GeogebraCommonKernelGeosGeoTurtle *outer$, jint th) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoTurtle_CmdSetThickness)

#endif // _GeogebraCommonKernelGeosGeoTurtle_H_
