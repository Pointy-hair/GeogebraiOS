//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoRay.java
//

#ifndef _GeogebraCommonKernelGeosGeoRay_H_
#define _GeogebraCommonKernelGeosGeoRay_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/LimitedPath.h"
#include "geogebra/common/kernel/kernelND/GeoRayND.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoPoint;
@class GeogebraCommonKernelGeosGeoVec3D;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonKernelTransform;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelPathMover;

@interface GeogebraCommonKernelGeosGeoRay : GeogebraCommonKernelGeosGeoLine < GeogebraCommonKernelGeosLimitedPath, GeogebraCommonKernelKernelNDGeoRayND >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)A;

- (jboolean)allowOutlyingIntersections;

- (GeogebraCommonKernelGeosGeoElement *)copyFreeRay OBJC_METHOD_FAMILY_NONE;

- (GeogebraCommonKernelGeosGeoElement *)copyInternalWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 OBJC_METHOD_FAMILY_NONE;

- (id<GeogebraCommonKernelPathMover>)createPathMover;

- (IOSObjectArray *)createTransformedObjectWithGeogebraCommonKernelTransform:(GeogebraCommonKernelTransform *)t
                                                                withNSString:(NSString *)transformedLabel;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (jboolean)isAllEndpointsLabelsSet;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isGeoRay;

- (jboolean)isIntersectionPointIncidentWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)p
                                                                 withDouble:(jdouble)eps;

- (jboolean)isLimitedPath;

- (jboolean)isOnPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Pnd
                                              withDouble:(jdouble)eps;

- (jboolean)keepsTypeOnGeometricTransform;

- (void)pathChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)PI;

- (void)pointChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (jboolean)respectLimitedPathWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Pnd
                                                        withDouble:(jdouble)eps;

- (jboolean)respectLimitedPathWithDouble:(jdouble)parameter;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)s
           withGeogebraCommonKernelGeosGeoVec3D:(GeogebraCommonKernelGeosGeoVec3D *)direction;

- (void)setAllowOutlyingIntersectionsWithBoolean:(jboolean)flag;

- (void)setKeepTypeOnGeometricTransformWithBoolean:(jboolean)flag;

- (void)setVisualStyleWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

#pragma mark Protected

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoRay)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoRay_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelGeosGeoRay *self, GeogebraCommonKernelConstruction *c, GeogebraCommonKernelGeosGeoPoint *A);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoRay *new_GeogebraCommonKernelGeosGeoRay_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_(GeogebraCommonKernelConstruction *c, GeogebraCommonKernelGeosGeoPoint *A) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoRay_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoRay *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoRay *new_GeogebraCommonKernelGeosGeoRay_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoRay)

#endif // _GeogebraCommonKernelGeosGeoRay_H_
