//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoConic.java
//

#ifndef _GeogebraCommonKernelGeosGeoConic_H_
#define _GeogebraCommonKernelGeosGeoConic_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/algos/SymbolicParametersBotanaAlgo.h"
#include "geogebra/common/kernel/geos/ConicMirrorable.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonKernelGeosGeoLine;
@class GeogebraCommonKernelMatrixCoordSys;
@class GeogebraCommonKernelMatrixCoords;
@class GeogebraCommonPluginGeoClassEnum;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelArithmeticNumberValue;
@protocol GeogebraCommonKernelKernelNDGeoLineND;

@interface GeogebraCommonKernelGeosGeoConic : GeogebraCommonKernelKernelNDGeoConicND < GeogebraCommonKernelGeosConicMirrorable, GeogebraCommonKernelAlgosSymbolicParametersBotanaAlgo >

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
                                         withDoubleArray:(IOSDoubleArray *)coeffs;

- (instancetype)initWithGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)conic;

- (GeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (void)dilateWithGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)rval
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)S;

+ (jdouble)evalCoeffWithGeogebraCommonKernelArithmeticExpressionValueArray2:(IOSObjectArray *)ev
                                                                    withInt:(jint)i
                                                                    withInt:(jint)j;

- (void)fromLineWithGeogebraCommonKernelGeosGeoLine:(GeogebraCommonKernelGeosGeoLine *)line;

- (IOSObjectArray *)getBotanaPolynomialsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (IOSObjectArray *)getBotanaVarsWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (GeogebraCommonKernelMatrixCoordSys *)getCoordSys;

- (GeogebraCommonKernelMatrixCoords *)getDirection3DWithInt:(jint)i;

- (GeogebraCommonKernelMatrixCoords *)getDirectionInD3;

- (GeogebraCommonKernelMatrixCoords *)getEigenvec3DWithInt:(jint)i;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (GeogebraCommonKernelMatrixCoords *)getOrigin3DWithInt:(jint)i;

- (jdouble)getP;

- (JavaUtilArrayList *)getPointsOnConicWithInt:(jint)n;

- (jboolean)hasDrawable3D;

- (jboolean)hasLineOpacity;

- (jboolean)isCasEvaluableObject;

- (jboolean)isFillable;

- (jboolean)isInverseFillable;

- (void)matrixTransformWithDouble:(jdouble)a00
                       withDouble:(jdouble)a01
                       withDouble:(jdouble)a02
                       withDouble:(jdouble)a10
                       withDouble:(jdouble)a11
                       withDouble:(jdouble)a12
                       withDouble:(jdouble)a20
                       withDouble:(jdouble)a21
                       withDouble:(jdouble)a22;

- (void)mirrorWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)Q;

- (void)mirrorWithGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)mirror;

- (void)mirrorWithGeogebraCommonKernelKernelNDGeoLineND:(id<GeogebraCommonKernelKernelNDGeoLineND>)g1;

- (void)setCoeffsWithGeogebraCommonKernelArithmeticExpressionValueArray2:(IOSObjectArray *)coeff;

+ (void)setSinglePointWithGeogebraCommonKernelGeosGeoConic:(GeogebraCommonKernelGeosGeoConic *)conic
                                                withDouble:(jdouble)x
                                                withDouble:(jdouble)y;

#pragma mark Protected

- (jchar)getLabelDelimiter;

#pragma mark Package-Private

- (jdouble)getPhi;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoConic)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoConic *self, GeogebraCommonKernelConstruction *c);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoConic *new_GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelConstruction *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_withNSString_withDoubleArray_(GeogebraCommonKernelGeosGeoConic *self, GeogebraCommonKernelConstruction *c, NSString *label, IOSDoubleArray *coeffs);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoConic *new_GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_withNSString_withDoubleArray_(GeogebraCommonKernelConstruction *c, NSString *label, IOSDoubleArray *coeffs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelGeosGeoConic *self, GeogebraCommonKernelGeosGeoConic *conic);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoConic *new_GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelGeosGeoConic_(GeogebraCommonKernelGeosGeoConic *conic) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT jdouble GeogebraCommonKernelGeosGeoConic_evalCoeffWithGeogebraCommonKernelArithmeticExpressionValueArray2_withInt_withInt_(IOSObjectArray *ev, jint i, jint j);

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoConic_setSinglePointWithGeogebraCommonKernelGeosGeoConic_withDouble_withDouble_(GeogebraCommonKernelGeosGeoConic *conic, jdouble x, jdouble y);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoConic)

#endif // _GeogebraCommonKernelGeosGeoConic_H_
