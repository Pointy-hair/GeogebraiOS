//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoLocusND.java
//

#ifndef _GeogebraCommonKernelGeosGeoLocusND_H_
#define _GeogebraCommonKernelGeosGeoLocusND_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/Path.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/Traceable.h"

@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelMyPoint;
@class GeogebraCommonKernelStringTemplate;
@class GeogebraCommonPluginGeoClassEnum;
@class JavaLangStringBuilder;
@class JavaUtilArrayList;
@protocol GeogebraCommonKernelKernelNDGeoPointND;
@protocol GeogebraCommonKernelKernelNDGeoSegmentND;
@protocol GeogebraCommonKernelPathMover;

#define GeogebraCommonKernelGeosGeoLocusND_MAX_PATH_RUNS 10

@interface GeogebraCommonKernelGeosGeoLocusND : GeogebraCommonKernelGeosGeoElement < GeogebraCommonKernelPath, GeogebraCommonKernelGeosTraceable > {
 @public
  JavaUtilArrayList *myPointList_;
  jint closestPointIndex_;
  jdouble closestPointParameter_;
}

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c;

- (void)clearPoints;

- (GeogebraCommonKernelGeosGeoElement *)copy__ OBJC_METHOD_FAMILY_NONE;

- (id<GeogebraCommonKernelPathMover>)createPathMover;

- (GeogebraCommonPluginGeoClassEnum *)getGeoClassType;

- (jdouble)getMaxParameter;

- (jdouble)getMinParameter;

- (jint)getPointLength;

- (JavaUtilArrayList *)getPoints;

- (jboolean)getTrace;

- (jboolean)hasDrawable3D;

- (jboolean)isAuxiliaryObjectByDefault;

- (jboolean)isClosedPath;

- (jboolean)isDefined;

- (jboolean)isEqualWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (jboolean)isFillable;

- (jboolean)isGeoLocus;

- (jboolean)isInverseFillable;

- (jboolean)isLabelShowable;

- (jboolean)isLabelValueShowable;

- (jboolean)isOnPathWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
                                                    withDouble:(jdouble)eps;

- (jboolean)isPath;

- (jboolean)isTraceable;

- (void)pathChangedWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (void)setWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

- (void)setDefinedWithBoolean:(jboolean)flag;

- (void)setPointsWithJavaUtilArrayList:(JavaUtilArrayList *)al;

- (void)setTraceWithBoolean:(jboolean)trace;

- (void)setUndefined;

- (jboolean)showInAlgebraView;

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl;

#pragma mark Protected

- (jdouble)changingPointDistanceWithGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)segment;

- (jdouble)getChangingPointParameterWithGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)segment;

- (GeogebraCommonKernelMyPoint *)getClosestPoint;

- (void)getXMLtagsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (GeogebraCommonKernelGeosGeoLocusND *)newGeoLocus OBJC_METHOD_FAMILY_NONE;

- (id<GeogebraCommonKernelKernelNDGeoSegmentND>)newGeoSegment OBJC_METHOD_FAMILY_NONE;

- (void)setChangingPointWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P;

- (jboolean)showInEuclidianView;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoLocusND)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelGeosGeoLocusND, myPointList_, JavaUtilArrayList *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoLocusND, MAX_PATH_RUNS, jint)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoLocusND_initWithGeogebraCommonKernelConstruction_(GeogebraCommonKernelGeosGeoLocusND *self, GeogebraCommonKernelConstruction *c);

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoLocusND)

#endif // _GeogebraCommonKernelGeosGeoLocusND_H_
