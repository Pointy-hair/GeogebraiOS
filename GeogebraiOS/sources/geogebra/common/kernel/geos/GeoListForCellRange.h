//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoListForCellRange.java
//

#ifndef _GeogebraCommonKernelGeosGeoListForCellRange_H_
#define _GeogebraCommonKernelGeosGeoListForCellRange_H_

#include "J2ObjC_header.h"
#include "geogebra/common/kernel/geos/GeoList.h"

@class GeogebraCommonKernelAlgosAlgoElement;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelStatisticsAlgoCellRange;

@interface GeogebraCommonKernelGeosGeoListForCellRange : GeogebraCommonKernelGeosGeoList

#pragma mark Public

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
         withGeogebraCommonKernelStatisticsAlgoCellRange:(GeogebraCommonKernelStatisticsAlgoCellRange *)algo;

- (jboolean)addToUpdateSetsWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelGeosGeoListForCellRange)

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoListForCellRange_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelStatisticsAlgoCellRange_(GeogebraCommonKernelGeosGeoListForCellRange *self, GeogebraCommonKernelConstruction *c, GeogebraCommonKernelStatisticsAlgoCellRange *algo);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoListForCellRange *new_GeogebraCommonKernelGeosGeoListForCellRange_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelStatisticsAlgoCellRange_(GeogebraCommonKernelConstruction *c, GeogebraCommonKernelStatisticsAlgoCellRange *algo) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoListForCellRange)

#endif // _GeogebraCommonKernelGeosGeoListForCellRange_H_
