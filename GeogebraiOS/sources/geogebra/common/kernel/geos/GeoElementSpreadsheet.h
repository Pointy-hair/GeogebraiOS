//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoElementSpreadsheet.java
//

#ifndef _GeogebraCommonKernelGeosGeoElementSpreadsheet_H_
#define _GeogebraCommonKernelGeosGeoElementSpreadsheet_H_

#include "J2ObjC_header.h"

@class ComGoogleGwtRegexpSharedMatchResult;
@class ComGoogleGwtRegexpSharedRegExp;
@class GeogebraCommonAwtGPoint;
@class GeogebraCommonKernelConstruction;
@class GeogebraCommonKernelGeosGeoElement;
@class GeogebraCommonMainApp;

#define GeogebraCommonKernelGeosGeoElementSpreadsheet_MATCH_COLUMN_$ 1
#define GeogebraCommonKernelGeosGeoElementSpreadsheet_MATCH_COLUMN 2
#define GeogebraCommonKernelGeosGeoElementSpreadsheet_MATCH_ROW_$ 3
#define GeogebraCommonKernelGeosGeoElementSpreadsheet_MATCH_ROW 4

@interface GeogebraCommonKernelGeosGeoElementSpreadsheet : NSObject

#pragma mark Public

- (instancetype)init;

+ (GeogebraCommonKernelGeosGeoElement *)autoCreateWithNSString:(NSString *)label
                          withGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons;

+ (NSString *)getSpreadsheetCellNameWithInt:(jint)column
                                    withInt:(jint)row;

+ (jint)getSpreadsheetColumnWithComGoogleGwtRegexpSharedMatchResult:(ComGoogleGwtRegexpSharedMatchResult *)matcher;

+ (NSString *)getSpreadsheetColumnNameWithInt:(jint)column;

+ (NSString *)getSpreadsheetColumnNameWithNSString:(NSString *)label;

+ (GeogebraCommonAwtGPoint *)getSpreadsheetCoordsForLabelWithNSString:(NSString *)inputLabel;

+ (jint)getSpreadsheetRowWithComGoogleGwtRegexpSharedMatchResult:(ComGoogleGwtRegexpSharedMatchResult *)matcher;

+ (jboolean)hasSpreadsheetLabelWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo;

+ (jboolean)isSpreadsheetLabelWithNSString:(NSString *)str;

- (void)setSpreadsheetCellWithGeogebraCommonMainApp:(GeogebraCommonMainApp *)app
                                            withInt:(jint)row
                                            withInt:(jint)col
             withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)cellGeo;

+ (GeogebraCommonAwtGPoint *)spreadsheetIndicesWithNSString:(NSString *)cellName;

@end

J2OBJC_STATIC_INIT(GeogebraCommonKernelGeosGeoElementSpreadsheet)

FOUNDATION_EXPORT ComGoogleGwtRegexpSharedRegExp *GeogebraCommonKernelGeosGeoElementSpreadsheet_spreadsheetPattern_;
J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoElementSpreadsheet, spreadsheetPattern_, ComGoogleGwtRegexpSharedRegExp *)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoElementSpreadsheet, MATCH_COLUMN_$, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoElementSpreadsheet, MATCH_COLUMN, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoElementSpreadsheet, MATCH_ROW_$, jint)

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonKernelGeosGeoElementSpreadsheet, MATCH_ROW, jint)

FOUNDATION_EXPORT NSString *GeogebraCommonKernelGeosGeoElementSpreadsheet_getSpreadsheetColumnNameWithInt_(jint column);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelGeosGeoElementSpreadsheet_getSpreadsheetColumnNameWithNSString_(NSString *label);

FOUNDATION_EXPORT NSString *GeogebraCommonKernelGeosGeoElementSpreadsheet_getSpreadsheetCellNameWithInt_withInt_(jint column, jint row);

FOUNDATION_EXPORT GeogebraCommonAwtGPoint *GeogebraCommonKernelGeosGeoElementSpreadsheet_spreadsheetIndicesWithNSString_(NSString *cellName);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelGeosGeoElementSpreadsheet_hasSpreadsheetLabelWithGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelGeosGeoElement *geo);

FOUNDATION_EXPORT jboolean GeogebraCommonKernelGeosGeoElementSpreadsheet_isSpreadsheetLabelWithNSString_(NSString *str);

FOUNDATION_EXPORT jint GeogebraCommonKernelGeosGeoElementSpreadsheet_getSpreadsheetColumnWithComGoogleGwtRegexpSharedMatchResult_(ComGoogleGwtRegexpSharedMatchResult *matcher);

FOUNDATION_EXPORT jint GeogebraCommonKernelGeosGeoElementSpreadsheet_getSpreadsheetRowWithComGoogleGwtRegexpSharedMatchResult_(ComGoogleGwtRegexpSharedMatchResult *matcher);

FOUNDATION_EXPORT GeogebraCommonAwtGPoint *GeogebraCommonKernelGeosGeoElementSpreadsheet_getSpreadsheetCoordsForLabelWithNSString_(NSString *inputLabel);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoElement *GeogebraCommonKernelGeosGeoElementSpreadsheet_autoCreateWithNSString_withGeogebraCommonKernelConstruction_(NSString *label, GeogebraCommonKernelConstruction *cons);

FOUNDATION_EXPORT void GeogebraCommonKernelGeosGeoElementSpreadsheet_init(GeogebraCommonKernelGeosGeoElementSpreadsheet *self);

FOUNDATION_EXPORT GeogebraCommonKernelGeosGeoElementSpreadsheet *new_GeogebraCommonKernelGeosGeoElementSpreadsheet_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelGeosGeoElementSpreadsheet)

#endif // _GeogebraCommonKernelGeosGeoElementSpreadsheet_H_
