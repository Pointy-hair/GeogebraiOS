//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoListMax.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoListMax.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelAlgosAlgoListMax () {
 @public
  GeogebraCommonKernelGeosGeoList *geoList_;
  GeogebraCommonKernelGeosGeoList *freqList_;
  GeogebraCommonKernelGeosGeoNumeric *max_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoListMax, geoList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoListMax, freqList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoListMax, max_, GeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoListMax_compute(GeogebraCommonKernelAlgosAlgoListMax *self);

@implementation GeogebraCommonKernelAlgosAlgoListMax

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)freqList {
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList, freqList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList {
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList {
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(self, cons, geoList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)freqList {
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, geoList, freqList);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Max();
}

- (void)setInputOutput {
  if (freqList_ == nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, geoList_);
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, geoList_);
    IOSObjectArray_Set(input_, 1, freqList_);
  }
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:max_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getMax {
  return max_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoListMax_compute(self);
}

- (void)dealloc {
  RELEASE_(geoList_);
  RELEASE_(freqList_);
  RELEASE_(max_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "AlgoListMax", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:", "AlgoListMax", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:", "AlgoListMax", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "AlgoListMax", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getMax", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geoList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "freqList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "max_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoListMax = { 2, "AlgoListMax", "geogebra.common.kernel.algos", NULL, 0x1, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoListMax;
}

@end

void GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoListMax *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, geoList, freqList);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoListMax *new_GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoListMax *self = [GeogebraCommonKernelAlgosAlgoListMax alloc];
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList, freqList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoListMax *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, geoList, nil);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoListMax *new_GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoListMax *self = [GeogebraCommonKernelAlgosAlgoListMax alloc];
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, geoList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoListMax *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, geoList, nil);
}

GeogebraCommonKernelAlgosAlgoListMax *new_GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList) {
  GeogebraCommonKernelAlgosAlgoListMax *self = [GeogebraCommonKernelAlgosAlgoListMax alloc];
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(self, cons, geoList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoListMax *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoListMax_set_geoList_(self, geoList);
  GeogebraCommonKernelAlgosAlgoListMax_set_freqList_(self, freqList);
  GeogebraCommonKernelAlgosAlgoListMax_setAndConsume_max_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoListMax_compute(self);
}

GeogebraCommonKernelAlgosAlgoListMax *new_GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *geoList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoListMax *self = [GeogebraCommonKernelAlgosAlgoListMax alloc];
  GeogebraCommonKernelAlgosAlgoListMax_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, geoList, freqList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoListMax_compute(GeogebraCommonKernelAlgosAlgoListMax *self) {
  jint size = [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->geoList_)) size];
  if (![self->geoList_ isDefined] || size == 0) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setUndefined];
    return;
  }
  jdouble maxVal = JavaLangDouble_NEGATIVE_INFINITY;
  if (self->freqList_ == nil) {
    for (jint i = 0; i < size; i++) {
      GeogebraCommonKernelGeosGeoElement *geo = [self->geoList_ getWithInt:i];
      if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
        id<GeogebraCommonKernelArithmeticNumberValue> num = (id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelArithmeticNumberValue));
        maxVal = JavaLangMath_maxWithDouble_withDouble_(maxVal, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(num)) getDouble]);
      }
      else {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setUndefined];
        return;
      }
    }
  }
  else {
    if (![self->freqList_ isDefined] || [self->freqList_ size] != [self->geoList_ size]) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setUndefined];
      return;
    }
    jboolean hasPositiveFrequency = NO;
    for (jint i = 0; i < size; i++) {
      GeogebraCommonKernelGeosGeoElement *geo = [self->geoList_ getWithInt:i];
      GeogebraCommonKernelGeosGeoElement *freqGeo = [self->freqList_ getWithInt:i];
      if (!([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) || !([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:freqGeo])) {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setUndefined];
        return;
      }
      jdouble frequency = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(freqGeo, @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble];
      if (frequency < 0) {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setUndefined];
        return;
      }
      else if (frequency == 0) {
        continue;
      }
      hasPositiveFrequency = YES;
      id<GeogebraCommonKernelArithmeticNumberValue> num = (id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelArithmeticNumberValue));
      maxVal = JavaLangMath_maxWithDouble_withDouble_(maxVal, [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(num)) getDouble]);
    }
    if (!hasPositiveFrequency) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setUndefined];
      return;
    }
  }
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->max_)) setValueWithDouble:maxVal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoListMax)
