//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.h"
#include "edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.h"
#include "edu/uci/ics/jung/algorithms/util/WeightedChoice.h"
#include "edu/uci/ics/jung/graph/Graph.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Random.h"
#include "org/apache/commons/collections15/Factory.h"

@interface EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator () {
 @public
  jdouble clustering_exponent_;
  JavaUtilRandom *random_;
  jint num_connections_;
}

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator, random_, JavaUtilRandom *)

__attribute__((unused)) static void EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initialize__(EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self);

@implementation EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator

- (instancetype)initWithOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory
                    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)vertex_factory
                    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edge_factory
                                                     withInt:(jint)latticeSize
                                                  withDouble:(jdouble)clusteringExponent {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withDouble_(self, graph_factory, vertex_factory, edge_factory, latticeSize, clusteringExponent);
  return self;
}

- (instancetype)initWithOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory
                    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)vertex_factory
                    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edge_factory
                                                     withInt:(jint)row_count
                                                     withInt:(jint)col_count
                                                  withDouble:(jdouble)clusteringExponent {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_(self, graph_factory, vertex_factory, edge_factory, row_count, col_count, clusteringExponent);
  return self;
}

- (instancetype)initWithOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)graph_factory
                    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)vertex_factory
                    withOrgApacheCommonsCollections15Factory:(id<OrgApacheCommonsCollections15Factory>)edge_factory
                                                     withInt:(jint)row_count
                                                     withInt:(jint)col_count
                                                  withDouble:(jdouble)clusteringExponent
                                                 withBoolean:(jboolean)isToroidal {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_withBoolean_(self, graph_factory, vertex_factory, edge_factory, row_count, col_count, clusteringExponent, isToroidal);
  return self;
}

- (void)initialize__ {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initialize__(self);
}

- (void)setRandomWithJavaUtilRandom:(JavaUtilRandom *)random {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_set_random_(self, random);
}

- (void)setRandomSeedWithLong:(jlong)seed {
  [((JavaUtilRandom *) nil_chk(random_)) setSeedWithLong:seed];
}

- (void)setConnectionCountWithInt:(jint)num_connections {
  if (num_connections <= 0) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Number of new connections per vertex must be >= 1") autorelease];
  }
  self->num_connections_ = num_connections;
}

- (jint)getConnectionCount {
  return self->num_connections_;
}

- (id<EduUciIcsJungGraphGraph>)create {
  id<EduUciIcsJungGraphGraph> graph = [super create];
  EduUciIcsJungAlgorithmsUtilWeightedChoice *weighted_choice;
  for (jint i = 0; i < [((id<EduUciIcsJungGraphGraph>) nil_chk(graph)) getVertexCount]; i++) {
    id source = [self getVertexWithInt:i];
    jint row = [self getRowWithInt:i];
    jint col = [self getColWithInt:i];
    jint row_offset = row < row_count_ / 2 ? -row_count_ : row_count_;
    jint col_offset = col < col_count_ / 2 ? -col_count_ : col_count_;
    id<JavaUtilMap> vertex_weights = [new_JavaUtilHashMap_init() autorelease];
    for (jint j = 0; j < row_count_; j++) {
      for (jint k = 0; k < col_count_; k++) {
        if (j == row && k == col) continue;
        jint v_dist = JavaLangMath_absWithInt_(j - row);
        jint h_dist = JavaLangMath_absWithInt_(k - col);
        if (is_toroidal_) {
          v_dist = JavaLangMath_minWithInt_withInt_(v_dist, JavaLangMath_absWithInt_(j - row + row_offset));
          h_dist = JavaLangMath_minWithInt_withInt_(h_dist, JavaLangMath_absWithInt_(k - col + col_offset));
        }
        jint distance = v_dist + h_dist;
        if (distance < 2) continue;
        else [vertex_weights putWithId:[self getVertexWithInt:j withInt:k] withId:JavaLangFloat_valueOfWithFloat_((jfloat) JavaLangMath_powWithDouble_withDouble_(distance, -clustering_exponent_))];
      }
    }
    for (jint j = 0; j < self->num_connections_; j++) {
      weighted_choice = [new_EduUciIcsJungAlgorithmsUtilWeightedChoice_initWithJavaUtilMap_withJavaUtilRandom_(vertex_weights, random_) autorelease];
      id target = [weighted_choice nextItem];
      [graph addEdgeWithId:[((id<OrgApacheCommonsCollections15Factory>) nil_chk(edge_factory_)) create] withId:source withId:target];
    }
  }
  return graph;
}

- (void)dealloc {
  RELEASE_(random_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withInt:withDouble:", "KleinbergSmallWorldGenerator", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withInt:withInt:withDouble:", "KleinbergSmallWorldGenerator", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withOrgApacheCommonsCollections15Factory:withInt:withInt:withDouble:withBoolean:", "KleinbergSmallWorldGenerator", NULL, 0x1, NULL, NULL },
    { "initialize__", "initialize", "V", 0x2, NULL, NULL },
    { "setRandomWithJavaUtilRandom:", "setRandom", "V", 0x1, NULL, NULL },
    { "setRandomSeedWithLong:", "setRandomSeed", "V", 0x1, NULL, NULL },
    { "setConnectionCountWithInt:", "setConnectionCount", "V", 0x1, NULL, NULL },
    { "getConnectionCount", NULL, "I", 0x1, NULL, NULL },
    { "create", NULL, "Ledu.uci.ics.jung.graph.Graph;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "clustering_exponent_", NULL, 0x2, "D", NULL, NULL,  },
    { "random_", NULL, 0x2, "Ljava.util.Random;", NULL, NULL,  },
    { "num_connections_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"TV;", "TE;"};
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator = { 2, "KleinbergSmallWorldGenerator", "edu.uci.ics.jung.algorithms.generators.random", NULL, 0x1, 9, methods, 3, fields, 2, superclass_type_args, 0, NULL, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>Ledu/uci/ics/jung/algorithms/generators/Lattice2DGenerator<TV;TE;>;" };
  return &_EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator;
}

@end

void EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withDouble_(EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self, id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> vertex_factory, id<OrgApacheCommonsCollections15Factory> edge_factory, jint latticeSize, jdouble clusteringExponent) {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_(self, graph_factory, vertex_factory, edge_factory, latticeSize, latticeSize, clusteringExponent);
}

EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *new_EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withDouble_(id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> vertex_factory, id<OrgApacheCommonsCollections15Factory> edge_factory, jint latticeSize, jdouble clusteringExponent) {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self = [EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator alloc];
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withDouble_(self, graph_factory, vertex_factory, edge_factory, latticeSize, clusteringExponent);
  return self;
}

void EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_(EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self, id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> vertex_factory, id<OrgApacheCommonsCollections15Factory> edge_factory, jint row_count, jint col_count, jdouble clusteringExponent) {
  EduUciIcsJungAlgorithmsGeneratorsLattice2DGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withBoolean_(self, graph_factory, vertex_factory, edge_factory, row_count, col_count, YES);
  self->num_connections_ = 1;
  self->clustering_exponent_ = clusteringExponent;
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initialize__(self);
}

EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *new_EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_(id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> vertex_factory, id<OrgApacheCommonsCollections15Factory> edge_factory, jint row_count, jint col_count, jdouble clusteringExponent) {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self = [EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator alloc];
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_(self, graph_factory, vertex_factory, edge_factory, row_count, col_count, clusteringExponent);
  return self;
}

void EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_withBoolean_(EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self, id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> vertex_factory, id<OrgApacheCommonsCollections15Factory> edge_factory, jint row_count, jint col_count, jdouble clusteringExponent, jboolean isToroidal) {
  EduUciIcsJungAlgorithmsGeneratorsLattice2DGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withBoolean_(self, graph_factory, vertex_factory, edge_factory, row_count, col_count, isToroidal);
  self->num_connections_ = 1;
  self->clustering_exponent_ = clusteringExponent;
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initialize__(self);
}

EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *new_EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_withBoolean_(id<OrgApacheCommonsCollections15Factory> graph_factory, id<OrgApacheCommonsCollections15Factory> vertex_factory, id<OrgApacheCommonsCollections15Factory> edge_factory, jint row_count, jint col_count, jdouble clusteringExponent, jboolean isToroidal) {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self = [EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator alloc];
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initWithOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withOrgApacheCommonsCollections15Factory_withInt_withInt_withDouble_withBoolean_(self, graph_factory, vertex_factory, edge_factory, row_count, col_count, clusteringExponent, isToroidal);
  return self;
}

void EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_initialize__(EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator *self) {
  EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator_setAndConsume_random_(self, new_JavaUtilRandom_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsGeneratorsRandomKleinbergSmallWorldGenerator)
