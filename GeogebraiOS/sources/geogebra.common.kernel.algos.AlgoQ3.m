//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoQ3.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoMedian.h"
#include "geogebra/common/kernel/algos/AlgoQ3.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/util/Arrays.h"

@interface GeogebraCommonKernelAlgosAlgoQ3 () {
 @public
  GeogebraCommonKernelGeosGeoList *inputList_, *freqList_;
  GeogebraCommonKernelGeosGeoNumeric *Q3_;
  jint size_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoQ3, inputList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoQ3, freqList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoQ3, Q3_, GeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoQ3_compute(GeogebraCommonKernelAlgosAlgoQ3 *self);

@implementation GeogebraCommonKernelAlgosAlgoQ3

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)inputList {
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, inputList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)inputList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)freqList {
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, label, inputList, freqList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)inputList {
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(self, cons, inputList);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)inputList
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)freqList {
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, inputList, freqList);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Q3();
}

- (void)setInputOutput {
  if (freqList_ == nil) {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, inputList_);
  }
  else {
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
    IOSObjectArray_Set(input_, 0, inputList_);
    IOSObjectArray_Set(input_, 1, freqList_);
  }
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:Q3_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getQ3 {
  return Q3_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoQ3_compute(self);
}

- (void)dealloc {
  RELEASE_(inputList_);
  RELEASE_(freqList_);
  RELEASE_(Q3_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:", "AlgoQ3", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "AlgoQ3", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:", "AlgoQ3", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "AlgoQ3", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getQ3", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "freqList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "Q3_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "size_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoQ3 = { 2, "AlgoQ3", "geogebra.common.kernel.algos", NULL, 0x1, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoQ3;
}

@end

void GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoQ3 *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *inputList) {
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(self, cons, inputList);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoQ3 *new_GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *inputList) {
  GeogebraCommonKernelAlgosAlgoQ3 *self = [GeogebraCommonKernelAlgosAlgoQ3 alloc];
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_(self, cons, label, inputList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoQ3 *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *inputList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, inputList, freqList);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoQ3 *new_GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *inputList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoQ3 *self = [GeogebraCommonKernelAlgosAlgoQ3 alloc];
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, label, inputList, freqList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoQ3 *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *inputList) {
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, inputList, nil);
}

GeogebraCommonKernelAlgosAlgoQ3 *new_GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *inputList) {
  GeogebraCommonKernelAlgosAlgoQ3 *self = [GeogebraCommonKernelAlgosAlgoQ3 alloc];
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_(self, cons, inputList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelAlgosAlgoQ3 *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *inputList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoQ3_set_inputList_(self, inputList);
  GeogebraCommonKernelAlgosAlgoQ3_set_freqList_(self, freqList);
  GeogebraCommonKernelAlgosAlgoQ3_setAndConsume_Q3_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoQ3_compute(self);
}

GeogebraCommonKernelAlgosAlgoQ3 *new_GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *inputList, GeogebraCommonKernelGeosGeoList *freqList) {
  GeogebraCommonKernelAlgosAlgoQ3 *self = [GeogebraCommonKernelAlgosAlgoQ3 alloc];
  GeogebraCommonKernelAlgosAlgoQ3_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, cons, inputList, freqList);
  return self;
}

void GeogebraCommonKernelAlgosAlgoQ3_compute(GeogebraCommonKernelAlgosAlgoQ3 *self) {
  self->size_ = [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->inputList_)) size];
  if (![self->inputList_ isDefined] || self->size_ < 2) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setUndefined];
    return;
  }
  if (self->freqList_ == nil) {
    IOSDoubleArray *sortList = [IOSDoubleArray arrayWithLength:self->size_];
    for (jint i = 0; i < self->size_; i++) {
      GeogebraCommonKernelGeosGeoElement *geo = [self->inputList_ getWithInt:i];
      if ([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:geo]) {
        id<GeogebraCommonKernelArithmeticNumberValue> num = (id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelArithmeticNumberValue));
        *IOSDoubleArray_GetRef(sortList, i) = [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(num)) getDouble];
      }
      else {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setUndefined];
        return;
      }
    }
    JavaUtilArrays_sortWithDoubleArray_(sortList);
    switch (self->size_ % 4) {
      case 0:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:(IOSDoubleArray_Get(sortList, (3 * self->size_) / 4 - 1) + IOSDoubleArray_Get(sortList, (3 * self->size_ + 4) / 4 - 1)) / 2];
      break;
      case 1:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:(IOSDoubleArray_Get(sortList, (3 * self->size_ + 1) / 4 - 1) + IOSDoubleArray_Get(sortList, (3 * self->size_ + 5) / 4 - 1)) / 2];
      break;
      case 2:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:IOSDoubleArray_Get(sortList, (3 * self->size_ + 2) / 4 - 1)];
      break;
      default:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:IOSDoubleArray_Get(sortList, (3 * self->size_ + 3) / 4 - 1)];
      break;
    }
  }
  else if ([self->inputList_ size] == [self->freqList_ size]) {
    if (![self->freqList_ isDefined] || ([self->inputList_ size] != [self->freqList_ size])) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setUndefined];
      return;
    }
    for (jint i = 0; i < [self->freqList_ size]; i++) {
      if (!([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:[self->freqList_ getWithInt:i]]) || [((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([self->freqList_ getWithInt:i], @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble] < 0) {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setUndefined];
        return;
      }
    }
    for (jint i = 0; i < [self->inputList_ size]; i++) {
      if (!([GeogebraCommonKernelArithmeticNumberValue_class_() isInstance:[self->inputList_ getWithInt:i]])) {
        [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setUndefined];
        return;
      }
    }
    IOSObjectArray *obj = GeogebraCommonKernelAlgosAlgoMedian_convertValueFreqListToArraysWithGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self->inputList_, self->freqList_);
    IOSObjectArray *v = (IOSObjectArray *) check_class_cast(IOSObjectArray_Get(nil_chk(obj), 0), [IOSObjectArray class]);
    IOSObjectArray *f = (IOSObjectArray *) check_class_cast(IOSObjectArray_Get(obj, 1), [IOSObjectArray class]);
    jint n = [((JavaLangInteger *) nil_chk((JavaLangInteger *) check_class_cast(IOSObjectArray_Get(obj, 2), [JavaLangInteger class]))) intValue];
    if (n < 2) {
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setUndefined];
      return;
    }
    switch (n % 4) {
      case 0:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:([((JavaLangDouble *) nil_chk(GeogebraCommonKernelAlgosAlgoMedian_getValueAtWithInt_withJavaLangDoubleArray_withJavaLangIntegerArray_(3 * n / 4 - 1, v, f))) doubleValue] + [((JavaLangDouble *) nil_chk(GeogebraCommonKernelAlgosAlgoMedian_getValueAtWithInt_withJavaLangDoubleArray_withJavaLangIntegerArray_((3 * n + 4) / 4 - 1, v, f))) doubleValue]) / 2];
      break;
      case 1:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:([((JavaLangDouble *) nil_chk(GeogebraCommonKernelAlgosAlgoMedian_getValueAtWithInt_withJavaLangDoubleArray_withJavaLangIntegerArray_((3 * n + 1) / 4 - 1, v, f))) doubleValue] + [((JavaLangDouble *) nil_chk(GeogebraCommonKernelAlgosAlgoMedian_getValueAtWithInt_withJavaLangDoubleArray_withJavaLangIntegerArray_((3 * n + 5) / 4 - 1, v, f))) doubleValue]) / 2];
      break;
      case 2:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:[((JavaLangDouble *) nil_chk(GeogebraCommonKernelAlgosAlgoMedian_getValueAtWithInt_withJavaLangDoubleArray_withJavaLangIntegerArray_((3 * n + 2) / 4 - 1, v, f))) doubleValue]];
      break;
      default:
      [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->Q3_)) setValueWithDouble:[((JavaLangDouble *) nil_chk(GeogebraCommonKernelAlgosAlgoMedian_getValueAtWithInt_withJavaLangDoubleArray_withJavaLangIntegerArray_((3 * n + 3) / 4 - 1, v, f))) doubleValue]];
      break;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoQ3)
