//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/geom/FacetShape.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/archimedean/com/quantimegroup/solutions/archimedean/geom/FacetShape.h"

@interface GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape () {
 @public
  jint vertexCount_;
}

@end

@implementation GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape

- (instancetype)initWithInt:(jint)vertexCount
                withBoolean:(jboolean)regular {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape_initWithInt_withBoolean_(self, vertexCount, regular);
  return self;
}

- (jint)getVertexCount {
  return vertexCount_;
}

- (void)setVertexCountWithInt:(jint)vertexCount {
  self->vertexCount_ = vertexCount;
}

- (jboolean)isRegular {
  return regular_;
}

- (void)setRegularWithBoolean:(jboolean)regular {
  self->regular_ = regular;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withBoolean:", "FacetShape", NULL, 0x1, NULL, NULL },
    { "getVertexCount", NULL, "I", 0x1, NULL, NULL },
    { "setVertexCountWithInt:", "setVertexCount", "V", 0x1, NULL, NULL },
    { "isRegular", NULL, "Z", 0x1, NULL, NULL },
    { "setRegularWithBoolean:", "setRegular", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vertexCount_", NULL, 0x2, "I", NULL, NULL,  },
    { "regular_", NULL, 0x0, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape = { 2, "FacetShape", "geogebra.common.geogebra3D.archimedean.com.quantimegroup.solutions.archimedean.geom", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape;
}

@end

void GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape_initWithInt_withBoolean_(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape *self, jint vertexCount, jboolean regular) {
  NSObject_init(self);
  self->vertexCount_ = vertexCount;
  self->regular_ = regular;
}

GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape *new_GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape_initWithInt_withBoolean_(jint vertexCount, jboolean regular) {
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape *self = [GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape alloc];
  GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape_initWithInt_withBoolean_(self, vertexCount, regular);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DArchimedeanComQuantimegroupSolutionsArchimedeanGeomFacetShape)
