//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoText.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/CircularDefinitionException.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoText.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonKernelAlgosAlgoText () {
 @public
  GeogebraCommonKernelGeosGeoElement *geo_;
  GeogebraCommonKernelGeosGeoBoolean *substituteVars_, *latex_;
  id<GeogebraCommonKernelKernelNDGeoPointND> startPoint_, startPointCopy_;
  GeogebraCommonKernelGeosGeoText *text_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoText, geo_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoText, substituteVars_, GeogebraCommonKernelGeosGeoBoolean *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoText, latex_, GeogebraCommonKernelGeosGeoBoolean *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoText, startPoint_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoText, startPointCopy_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoText, text_, GeogebraCommonKernelGeosGeoText *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoText_compute(GeogebraCommonKernelAlgosAlgoText *self);

@implementation GeogebraCommonKernelAlgosAlgoText

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, geo);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)substituteVars {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, substituteVars);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, geo, p);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)substituteVars {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, p, substituteVars);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)substituteVars
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)latex {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, p, substituteVars, latex);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)substituteVars
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)latex {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, geo, p, substituteVars, latex);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Text();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_TEXT;
}

- (void)setInputOutput {
  jint inputs = 1;
  if (startPoint_ != nil) inputs++;
  if (substituteVars_ != nil) inputs++;
  if (latex_ != nil) inputs++;
  jint i = 0;
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:inputs type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, i++, geo_);
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo_)) isGeoText]) [((GeogebraCommonKernelGeosGeoText *) check_class_cast(geo_, [GeogebraCommonKernelGeosGeoText class])) addTextDescendantWithGeogebraCommonKernelGeosGeoText:text_];
  if (startPoint_ != nil) IOSObjectArray_Set(input_, i++, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(startPoint_, [GeogebraCommonKernelGeosGeoElement class]));
  if (substituteVars_ != nil) IOSObjectArray_Set(input_, i++, substituteVars_);
  if (latex_ != nil) IOSObjectArray_Set(input_, i++, latex_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getGeoText {
  return text_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoText_compute(self);
}

- (void)dealloc {
  RELEASE_(geo_);
  RELEASE_(substituteVars_);
  RELEASE_(latex_);
  RELEASE_(startPoint_);
  RELEASE_(startPointCopy_);
  RELEASE_(text_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:", "AlgoText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelGeosGeoBoolean:", "AlgoText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoBoolean:", "AlgoText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoBoolean:", "AlgoText", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoBoolean:", "AlgoText", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getGeoText", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "geo_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "substituteVars_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoBoolean;", NULL, NULL,  },
    { "latex_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoBoolean;", NULL, NULL,  },
    { "startPoint_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "startPointCopy_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "text_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoText = { 2, "AlgoText", "geogebra.common.kernel.algos", NULL, 0x1, 11, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoText;
}

@end

void GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelAlgosAlgoText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo) {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, nil, nil, nil);
}

GeogebraCommonKernelAlgosAlgoText *new_GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo) {
  GeogebraCommonKernelAlgosAlgoText *self = [GeogebraCommonKernelAlgosAlgoText alloc];
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_(self, cons, label, geo);
  return self;
}

void GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelAlgosAlgoText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelGeosGeoBoolean *substituteVars) {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, nil, substituteVars, nil);
}

GeogebraCommonKernelAlgosAlgoText *new_GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelGeosGeoBoolean *substituteVars) {
  GeogebraCommonKernelAlgosAlgoText *self = [GeogebraCommonKernelAlgosAlgoText alloc];
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, substituteVars);
  return self;
}

void GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p) {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, p, nil, nil);
}

GeogebraCommonKernelAlgosAlgoText *new_GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p) {
  GeogebraCommonKernelAlgosAlgoText *self = [GeogebraCommonKernelAlgosAlgoText alloc];
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, geo, p);
  return self;
}

void GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelAlgosAlgoText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p, GeogebraCommonKernelGeosGeoBoolean *substituteVars) {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, p, substituteVars, nil);
}

GeogebraCommonKernelAlgosAlgoText *new_GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p, GeogebraCommonKernelGeosGeoBoolean *substituteVars) {
  GeogebraCommonKernelAlgosAlgoText *self = [GeogebraCommonKernelAlgosAlgoText alloc];
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, p, substituteVars);
  return self;
}

void GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelAlgosAlgoText *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p, GeogebraCommonKernelGeosGeoBoolean *substituteVars, GeogebraCommonKernelGeosGeoBoolean *latex) {
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, geo, p, substituteVars, latex);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoText *new_GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p, GeogebraCommonKernelGeosGeoBoolean *substituteVars, GeogebraCommonKernelGeosGeoBoolean *latex) {
  GeogebraCommonKernelAlgosAlgoText *self = [GeogebraCommonKernelAlgosAlgoText alloc];
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, label, geo, p, substituteVars, latex);
  return self;
}

void GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelAlgosAlgoText *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p, GeogebraCommonKernelGeosGeoBoolean *substituteVars, GeogebraCommonKernelGeosGeoBoolean *latex) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoText_set_geo_(self, geo);
  GeogebraCommonKernelAlgosAlgoText_set_startPoint_(self, p);
  GeogebraCommonKernelAlgosAlgoText_set_substituteVars_(self, substituteVars);
  GeogebraCommonKernelAlgosAlgoText_set_latex_(self, latex);
  GeogebraCommonKernelAlgosAlgoText_setAndConsume_text_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self->text_ setIsTextCommandWithBoolean:YES];
  if (self->startPoint_ != nil) {
    GeogebraCommonKernelAlgosAlgoText_set_startPointCopy_(self, (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast([self->startPoint_ copyInternalWithGeogebraCommonKernelConstruction:cons], @protocol(GeogebraCommonKernelKernelNDGeoPointND)));
    @try {
      [self->text_ setStartPointWithGeogebraCommonKernelKernelNDGeoPointND:self->startPointCopy_];
    }
    @catch (GeogebraCommonKernelCircularDefinitionException *e) {
      [((GeogebraCommonKernelCircularDefinitionException *) nil_chk(e)) printStackTrace];
    }
    [self->text_ setAlwaysFixedWithBoolean:YES];
  }
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoText_compute(self);
}

GeogebraCommonKernelAlgosAlgoText *new_GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoElement *geo, id<GeogebraCommonKernelKernelNDGeoPointND> p, GeogebraCommonKernelGeosGeoBoolean *substituteVars, GeogebraCommonKernelGeosGeoBoolean *latex) {
  GeogebraCommonKernelAlgosAlgoText *self = [GeogebraCommonKernelAlgosAlgoText alloc];
  GeogebraCommonKernelAlgosAlgoText_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_(self, cons, geo, p, substituteVars, latex);
  return self;
}

void GeogebraCommonKernelAlgosAlgoText_compute(GeogebraCommonKernelAlgosAlgoText *self) {
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(self->geo_)) isDefined] || (self->startPoint_ != nil && ![self->startPoint_ isDefined]) || (self->substituteVars_ != nil && ![self->substituteVars_ isDefined]) || (self->substituteVars_ != nil && ![self->substituteVars_ isDefined])) {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setUndefined];
    return;
  }
  jboolean bool_ = self->substituteVars_ == nil ? YES : [self->substituteVars_ getBoolean];
  jboolean formula = self->latex_ == nil ? NO : [self->latex_ getBoolean];
  if ([self->geo_ isGeoText]) {
    [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setTextStringWithNSString:[((GeogebraCommonKernelGeosGeoText *) check_class_cast(self->geo_, [GeogebraCommonKernelGeosGeoText class])) getTextString]];
  }
  else {
    [self->text_ setTextStringWithNSString:[self->geo_ getFormulaStringWithGeogebraCommonKernelStringTemplate:[((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) getStringTemplate] withBoolean:bool_]];
  }
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLaTeXWithBoolean:formula withBoolean:NO];
  [self->text_ update];
  if (self->startPointCopy_ != nil) {
    [self->startPointCopy_ setCoordsFromPointWithGeogebraCommonKernelKernelNDGeoPointND:self->startPoint_];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoText)
