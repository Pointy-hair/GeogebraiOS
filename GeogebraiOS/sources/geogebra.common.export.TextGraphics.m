//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/export/TextGraphics.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/awt/GAffineTransform.h"
#include "geogebra/common/awt/GBasicStroke.h"
#include "geogebra/common/awt/GBufferedImage.h"
#include "geogebra/common/awt/GBufferedImageOp.h"
#include "geogebra/common/awt/GColor.h"
#include "geogebra/common/awt/GComposite.h"
#include "geogebra/common/awt/GFont.h"
#include "geogebra/common/awt/GFontRenderContext.h"
#include "geogebra/common/awt/GImage.h"
#include "geogebra/common/awt/GKey.h"
#include "geogebra/common/awt/GLine2D.h"
#include "geogebra/common/awt/GPaint.h"
#include "geogebra/common/awt/GShape.h"
#include "geogebra/common/awt/MyImage.h"
#include "geogebra/common/export/TextGraphics.h"
#include "geogebra/common/factories/AwtFactory.h"
#include "java/util/Map.h"

@interface GeogebraCommonExportTextGraphics () {
 @public
  GeogebraCommonAwtGFont *font_;
  id<GeogebraCommonAwtGLine2D> line_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonExportTextGraphics, font_, GeogebraCommonAwtGFont *)
J2OBJC_FIELD_SETTER(GeogebraCommonExportTextGraphics, line_, id<GeogebraCommonAwtGLine2D>)

@implementation GeogebraCommonExportTextGraphics

- (void)draw3DRectWithInt:(jint)x
                  withInt:(jint)y
                  withInt:(jint)width
                  withInt:(jint)height
              withBoolean:(jboolean)raised {
}

- (void)fill3DRectWithInt:(jint)x
                  withInt:(jint)y
                  withInt:(jint)width
                  withInt:(jint)height
              withBoolean:(jboolean)raised {
}

- (void)drawWithGeogebraCommonAwtGShape:(id<GeogebraCommonAwtGShape>)s {
}

- (void)drawImageWithGeogebraCommonAwtGBufferedImage:(id<GeogebraCommonAwtGBufferedImage>)img
               withGeogebraCommonAwtGBufferedImageOp:(id<GeogebraCommonAwtGBufferedImageOp>)op
                                             withInt:(jint)x
                                             withInt:(jint)y {
}

- (void)drawImageWithGeogebraCommonAwtGBufferedImage:(id<GeogebraCommonAwtGBufferedImage>)img
                                             withInt:(jint)x
                                             withInt:(jint)y {
}

- (void)drawImageWithGeogebraCommonAwtMyImage:(id<GeogebraCommonAwtMyImage>)img
        withGeogebraCommonAwtGBufferedImageOp:(id<GeogebraCommonAwtGBufferedImageOp>)op
                                      withInt:(jint)x
                                      withInt:(jint)y {
}

- (void)drawImageWithGeogebraCommonAwtMyImage:(id<GeogebraCommonAwtMyImage>)img
                                      withInt:(jint)x
                                      withInt:(jint)y {
}

- (void)drawStringWithNSString:(NSString *)str
                       withInt:(jint)x
                       withInt:(jint)y {
}

- (void)drawStringWithNSString:(NSString *)str
                     withFloat:(jfloat)x
                     withFloat:(jfloat)y {
}

- (void)fillWithGeogebraCommonAwtGShape:(id<GeogebraCommonAwtGShape>)s {
}

- (void)setCompositeWithGeogebraCommonAwtGComposite:(id<GeogebraCommonAwtGComposite>)comp {
}

- (void)setPaintWithGeogebraCommonAwtGPaint:(id<GeogebraCommonAwtGPaint>)paint {
}

- (void)setStrokeWithGeogebraCommonAwtGBasicStroke:(id<GeogebraCommonAwtGBasicStroke>)s {
}

- (void)setRenderingHintWithGeogebraCommonAwtGKey:(id<GeogebraCommonAwtGKey>)hintKey
                                           withId:(id)hintValue {
}

- (id)getRenderingHintWithGeogebraCommonAwtGKey:(id<GeogebraCommonAwtGKey>)hintKey {
  return nil;
}

- (void)setRenderingHintsWithJavaUtilMap:(id<JavaUtilMap>)hints {
}

- (void)translateWithDouble:(jdouble)tx
                 withDouble:(jdouble)ty {
}

- (void)scale__WithDouble:(jdouble)sx
               withDouble:(jdouble)sy {
}

- (void)transformWithGeogebraCommonAwtGAffineTransform:(id<GeogebraCommonAwtGAffineTransform>)Tx {
}

- (void)setTransformWithGeogebraCommonAwtGAffineTransform:(id<GeogebraCommonAwtGAffineTransform>)Tx {
}

- (id<GeogebraCommonAwtGAffineTransform>)getTransform {
  return nil;
}

- (id<GeogebraCommonAwtGComposite>)getComposite {
  return nil;
}

- (GeogebraCommonAwtGColor *)getBackground {
  return nil;
}

- (id<GeogebraCommonAwtGBasicStroke>)getStroke {
  return nil;
}

- (void)clipWithGeogebraCommonAwtGShape:(id<GeogebraCommonAwtGShape>)s {
}

- (GeogebraCommonAwtGFontRenderContext *)getFontRenderContext {
  return nil;
}

- (GeogebraCommonAwtGColor *)getColor {
  return nil;
}

- (GeogebraCommonAwtGFont *)getFont {
  return font_;
}

- (void)setFontWithGeogebraCommonAwtGFont:(GeogebraCommonAwtGFont *)font {
  GeogebraCommonExportTextGraphics_set_font_(self, font);
}

- (void)setColorWithGeogebraCommonAwtGColor:(GeogebraCommonAwtGColor *)selColor {
}

- (void)fillRectWithInt:(jint)i
                withInt:(jint)j
                withInt:(jint)k
                withInt:(jint)l {
}

- (void)clearRectWithInt:(jint)i
                 withInt:(jint)j
                 withInt:(jint)k
                 withInt:(jint)l {
}

- (void)drawLineWithInt:(jint)x1
                withInt:(jint)y1
                withInt:(jint)x2
                withInt:(jint)y2 {
}

- (void)setClipWithGeogebraCommonAwtGShape:(id<GeogebraCommonAwtGShape>)shape {
}

- (id<GeogebraCommonAwtGShape>)getClip {
  return nil;
}

- (void)drawRectWithInt:(jint)i
                withInt:(jint)j
                withInt:(jint)k
                withInt:(jint)l {
}

- (void)setClipWithInt:(jint)xAxisStart
               withInt:(jint)i
               withInt:(jint)width
               withInt:(jint)yAxisEnd {
}

- (void)drawRoundRectWithInt:(jint)x
                     withInt:(jint)y
                     withInt:(jint)width
                     withInt:(jint)height
                     withInt:(jint)arcWidth
                     withInt:(jint)arcHeight {
}

- (void)fillRoundRectWithInt:(jint)x
                     withInt:(jint)y
                     withInt:(jint)width
                     withInt:(jint)height
                     withInt:(jint)arcWidth
                     withInt:(jint)arcHeight {
}

- (void)drawImageWithGeogebraCommonAwtGImage:(id<GeogebraCommonAwtGImage>)img
                                     withInt:(jint)x
                                     withInt:(jint)y {
}

- (void)setAntialiasing {
}

- (void)setTransparent {
}

- (void)drawWithValueStrokePureWithGeogebraCommonAwtGShape:(id<GeogebraCommonAwtGShape>)shape {
  [self drawWithGeogebraCommonAwtGShape:shape];
}

- (void)fillWithValueStrokePureWithGeogebraCommonAwtGShape:(id<GeogebraCommonAwtGShape>)shape {
  [self fillWithGeogebraCommonAwtGShape:shape];
}

- (id)setInterpolationHintWithBoolean:(jboolean)needsInterpolationRenderingHint {
  return nil;
}

- (void)updateCanvasColor {
}

- (void)resetInterpolationHintWithId:(id)oldInterpolationHint {
}

- (void)drawStraightLineWithDouble:(jdouble)x1
                        withDouble:(jdouble)y1
                        withDouble:(jdouble)x2
                        withDouble:(jdouble)y2 {
  [((id<GeogebraCommonAwtGLine2D>) nil_chk(line_)) setLineWithDouble:x1 withDouble:y1 withDouble:x2 withDouble:y2];
  [self drawWithGeogebraCommonAwtGShape:line_];
}

- (instancetype)init {
  GeogebraCommonExportTextGraphics_init(self);
  return self;
}

- (void)dealloc {
  RELEASE_(font_);
  RELEASE_(line_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "draw3DRectWithInt:withInt:withInt:withInt:withBoolean:", "draw3DRect", "V", 0x1, NULL, NULL },
    { "fill3DRectWithInt:withInt:withInt:withInt:withBoolean:", "fill3DRect", "V", 0x1, NULL, NULL },
    { "drawWithGeogebraCommonAwtGShape:", "draw", "V", 0x1, NULL, NULL },
    { "drawImageWithGeogebraCommonAwtGBufferedImage:withGeogebraCommonAwtGBufferedImageOp:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawImageWithGeogebraCommonAwtGBufferedImage:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawImageWithGeogebraCommonAwtMyImage:withGeogebraCommonAwtGBufferedImageOp:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawImageWithGeogebraCommonAwtMyImage:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "drawStringWithNSString:withInt:withInt:", "drawString", "V", 0x1, NULL, NULL },
    { "drawStringWithNSString:withFloat:withFloat:", "drawString", "V", 0x1, NULL, NULL },
    { "fillWithGeogebraCommonAwtGShape:", "fill", "V", 0x1, NULL, NULL },
    { "setCompositeWithGeogebraCommonAwtGComposite:", "setComposite", "V", 0x1, NULL, NULL },
    { "setPaintWithGeogebraCommonAwtGPaint:", "setPaint", "V", 0x1, NULL, NULL },
    { "setStrokeWithGeogebraCommonAwtGBasicStroke:", "setStroke", "V", 0x1, NULL, NULL },
    { "setRenderingHintWithGeogebraCommonAwtGKey:withId:", "setRenderingHint", "V", 0x1, NULL, NULL },
    { "getRenderingHintWithGeogebraCommonAwtGKey:", "getRenderingHint", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setRenderingHintsWithJavaUtilMap:", "setRenderingHints", "V", 0x1, NULL, NULL },
    { "translateWithDouble:withDouble:", "translate", "V", 0x1, NULL, NULL },
    { "scale__WithDouble:withDouble:", "scale", "V", 0x1, NULL, NULL },
    { "transformWithGeogebraCommonAwtGAffineTransform:", "transform", "V", 0x1, NULL, NULL },
    { "setTransformWithGeogebraCommonAwtGAffineTransform:", "setTransform", "V", 0x1, NULL, NULL },
    { "getTransform", NULL, "Lgeogebra.common.awt.GAffineTransform;", 0x1, NULL, NULL },
    { "getComposite", NULL, "Lgeogebra.common.awt.GComposite;", 0x1, NULL, NULL },
    { "getBackground", NULL, "Lgeogebra.common.awt.GColor;", 0x1, NULL, NULL },
    { "getStroke", NULL, "Lgeogebra.common.awt.GBasicStroke;", 0x1, NULL, NULL },
    { "clipWithGeogebraCommonAwtGShape:", "clip", "V", 0x1, NULL, NULL },
    { "getFontRenderContext", NULL, "Lgeogebra.common.awt.GFontRenderContext;", 0x1, NULL, NULL },
    { "getColor", NULL, "Lgeogebra.common.awt.GColor;", 0x1, NULL, NULL },
    { "getFont", NULL, "Lgeogebra.common.awt.GFont;", 0x1, NULL, NULL },
    { "setFontWithGeogebraCommonAwtGFont:", "setFont", "V", 0x1, NULL, NULL },
    { "setColorWithGeogebraCommonAwtGColor:", "setColor", "V", 0x1, NULL, NULL },
    { "fillRectWithInt:withInt:withInt:withInt:", "fillRect", "V", 0x1, NULL, NULL },
    { "clearRectWithInt:withInt:withInt:withInt:", "clearRect", "V", 0x1, NULL, NULL },
    { "drawLineWithInt:withInt:withInt:withInt:", "drawLine", "V", 0x1, NULL, NULL },
    { "setClipWithGeogebraCommonAwtGShape:", "setClip", "V", 0x1, NULL, NULL },
    { "getClip", NULL, "Lgeogebra.common.awt.GShape;", 0x1, NULL, NULL },
    { "drawRectWithInt:withInt:withInt:withInt:", "drawRect", "V", 0x1, NULL, NULL },
    { "setClipWithInt:withInt:withInt:withInt:", "setClip", "V", 0x1, NULL, NULL },
    { "drawRoundRectWithInt:withInt:withInt:withInt:withInt:withInt:", "drawRoundRect", "V", 0x1, NULL, NULL },
    { "fillRoundRectWithInt:withInt:withInt:withInt:withInt:withInt:", "fillRoundRect", "V", 0x1, NULL, NULL },
    { "drawImageWithGeogebraCommonAwtGImage:withInt:withInt:", "drawImage", "V", 0x1, NULL, NULL },
    { "setAntialiasing", NULL, "V", 0x1, NULL, NULL },
    { "setTransparent", NULL, "V", 0x1, NULL, NULL },
    { "drawWithValueStrokePureWithGeogebraCommonAwtGShape:", "drawWithValueStrokePure", "V", 0x1, NULL, NULL },
    { "fillWithValueStrokePureWithGeogebraCommonAwtGShape:", "fillWithValueStrokePure", "V", 0x1, NULL, NULL },
    { "setInterpolationHintWithBoolean:", "setInterpolationHint", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "updateCanvasColor", NULL, "V", 0x1, NULL, NULL },
    { "resetInterpolationHintWithId:", "resetInterpolationHint", "V", 0x1, NULL, NULL },
    { "drawStraightLineWithDouble:withDouble:withDouble:withDouble:", "drawStraightLine", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "font_", NULL, 0x2, "Lgeogebra.common.awt.GFont;", NULL, NULL,  },
    { "line_", NULL, 0x2, "Lgeogebra.common.awt.GLine2D;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonExportTextGraphics = { 2, "TextGraphics", "geogebra.common.export", NULL, 0x1, 49, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonExportTextGraphics;
}

@end

void GeogebraCommonExportTextGraphics_init(GeogebraCommonExportTextGraphics *self) {
  NSObject_init(self);
  GeogebraCommonExportTextGraphics_set_font_(self, [((GeogebraCommonFactoriesAwtFactory *) nil_chk(GeogebraCommonFactoriesAwtFactory_get_prototype_())) newFontWithNSString:@"SansSerif" withInt:GeogebraCommonAwtGFont_PLAIN withInt:12]);
  GeogebraCommonExportTextGraphics_set_line_(self, [GeogebraCommonFactoriesAwtFactory_get_prototype_() newLine2D]);
}

GeogebraCommonExportTextGraphics *new_GeogebraCommonExportTextGraphics_init() {
  GeogebraCommonExportTextGraphics *self = [GeogebraCommonExportTextGraphics alloc];
  GeogebraCommonExportTextGraphics_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonExportTextGraphics)
