//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoDerivative.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoCasBase.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/arithmetic/Function.h"
#include "geogebra/common/kernel/arithmetic/FunctionNVar.h"
#include "geogebra/common/kernel/arithmetic/FunctionVariable.h"
#include "geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/cas/AlgoDerivative.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoFunctionNVar.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/kernelND/GeoCurveCartesianND.h"
#include "geogebra/common/main/Localization.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonKernelCasAlgoDerivative () {
 @public
  GeogebraCommonKernelGeosGeoNumeric *var_;
  id<GeogebraCommonKernelArithmeticNumberValue> order_;
  jboolean fast_;
  GeogebraCommonKernelArithmeticMyArbitraryConstant *arbconst_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoDerivative, var_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoDerivative, order_, id<GeogebraCommonKernelArithmeticNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoDerivative, arbconst_, GeogebraCommonKernelArithmeticMyArbitraryConstant *)

@implementation GeogebraCommonKernelCasAlgoDerivative

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)var
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)order {
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, f, var, order);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
        withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f {
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_(self, cons, f);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
        withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)var
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)order
                                             withBoolean:(jboolean)fast {
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, var, order, fast);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
        withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f
                                             withBoolean:(jboolean)fast {
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(self, cons, f, fast);
  return self;
}

- (void)setInputOutput {
  jint length = 1;
  if (order_ != nil) length++;
  if (var_ != nil) length++;
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:length type:GeogebraCommonKernelGeosGeoElement_class_()]);
  length = 0;
  IOSObjectArray_Set(input_, 0, [((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement]);
  if (var_ != nil) IOSObjectArray_Set(input_, ++length, var_);
  if (order_ != nil) IOSObjectArray_Set(input_, ++length, [order_ toGeoElement]);
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:g_];
  [self setDependencies];
}

- (void)applyCasCommandWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  jint orderInt = order_ == nil ? 1 : (jint) JavaLangMath_roundWithDouble_([order_ getDouble]);
  if ([f_ isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]]) {
    GeogebraCommonKernelArithmeticFunction *funDeriv = [((GeogebraCommonKernelArithmeticFunction *) nil_chk([((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(f_, [GeogebraCommonKernelGeosGeoFunction class])))) getFunction])) getDerivativeWithInt:orderInt withBoolean:fast_];
    [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [GeogebraCommonKernelGeosGeoFunction class])))) setFunctionWithGeogebraCommonKernelArithmeticFunction:funDeriv];
    [((GeogebraCommonKernelGeosGeoFunction *) nil_chk(((GeogebraCommonKernelGeosGeoFunction *) check_class_cast(g_, [GeogebraCommonKernelGeosGeoFunction class])))) setDefinedWithBoolean:YES];
    return;
  }
  if ([f_ isKindOfClass:[GeogebraCommonKernelKernelNDGeoCurveCartesianND class]]) {
    [((GeogebraCommonKernelKernelNDGeoCurveCartesianND *) nil_chk(((GeogebraCommonKernelKernelNDGeoCurveCartesianND *) check_class_cast(g_, [GeogebraCommonKernelKernelNDGeoCurveCartesianND class])))) setDerivativeWithGeogebraCommonKernelKernelNDGeoCurveCartesianND:(GeogebraCommonKernelKernelNDGeoCurveCartesianND *) check_class_cast(f_, [GeogebraCommonKernelKernelNDGeoCurveCartesianND class]) withInt:orderInt];
    return;
  }
  NSString *varStr = var_ != nil ? [var_ getLabelWithGeogebraCommonKernelStringTemplate:tpl] : [((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) getVarStringWithGeogebraCommonKernelStringTemplate:tpl];
  if ([f_ isKindOfClass:[GeogebraCommonKernelGeosGeoFunctionNVar class]]) {
    GeogebraCommonKernelArithmeticFunctionNVar *inFun = [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(f_, [GeogebraCommonKernelGeosGeoFunctionNVar class])))) getFunction];
    if (![((GeogebraCommonKernelKernel *) nil_chk(kernel_)) useCASforDerivatives]) {
      IOSObjectArray *fVars = [((GeogebraCommonKernelArithmeticFunctionNVar *) nil_chk(inFun)) getFunctionVariables];
      GeogebraCommonKernelArithmeticFunctionVariable *fv = nil;
      for (jint i = 0; i < ((IOSObjectArray *) nil_chk(fVars))->size_; i++) {
        if ([varStr isEqual:[((GeogebraCommonKernelArithmeticFunctionVariable *) nil_chk(IOSObjectArray_Get(fVars, i))) getSetVarString]]) {
          fv = IOSObjectArray_Get(fVars, i);
          break;
        }
      }
      if (fv == nil) {
        [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(g_, [GeogebraCommonKernelGeosGeoFunctionNVar class])))) setDefinedWithBoolean:NO];
        return;
      }
      inFun = [inFun getDerivativeNoCASWithGeogebraCommonKernelArithmeticFunctionVariable:fv withInt:orderInt];
      [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(g_, [GeogebraCommonKernelGeosGeoFunctionNVar class])))) setFunctionWithGeogebraCommonKernelArithmeticFunctionNVar:inFun];
      [((GeogebraCommonKernelGeosGeoFunctionNVar *) nil_chk(((GeogebraCommonKernelGeosGeoFunctionNVar *) check_class_cast(g_, [GeogebraCommonKernelGeosGeoFunctionNVar class])))) setDefinedWithBoolean:YES];
      return;
    }
  }
  [((JavaLangStringBuilder *) nil_chk(sbAE_)) setLengthWithInt:0];
  [sbAE_ appendWithNSString:@"Derivative[%"];
  [sbAE_ appendWithNSString:@","];
  [sbAE_ appendWithNSString:varStr];
  [sbAE_ appendWithNSString:@","];
  [sbAE_ appendWithInt:order_ == nil ? 1 : (jint) JavaLangMath_roundWithDouble_([order_ getDouble])];
  [sbAE_ appendWithNSString:@"]"];
  [((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) setUsingCasCommandWithNSString:[sbAE_ description] withGeogebraCommonKernelGeosCasEvaluableFunction:f_ withBoolean:YES withGeogebraCommonKernelArithmeticMyArbitraryConstant:arbconst_];
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  if (var_ != nil) {
    [sb appendWithNSString:[super toStringWithGeogebraCommonKernelStringTemplate:tpl]];
  }
  else {
    if (order_ != nil) {
      NSString *orderStr = [((GeogebraCommonKernelGeosGeoElement *) nil_chk([order_ toGeoElement])) getLabelWithGeogebraCommonKernelStringTemplate:tpl];
      jchar firstCh = [((NSString *) nil_chk(orderStr)) charAtWithInt:0];
      if (firstCh >= '0' && firstCh <= '9') {
        orderStr = [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getOrdinalNumberWithInt:J2ObjCFpToInt([order_ getDouble])];
      }
      else {
        orderStr = [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"Ath" withNSString:orderStr];
      }
      [sb appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"ADerivativeOfB" withNSString:orderStr withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) getLabelWithGeogebraCommonKernelStringTemplate:tpl]]];
    }
    else {
      [sb appendWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"DerivativeOfA" withNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) getLabelWithGeogebraCommonKernelStringTemplate:tpl]]];
    }
  }
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement])) isIndependent]) {
    [sb appendWithNSString:@": "];
    [sb appendWithNSString:[((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) toGeoElement])) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithChar:'('];
    [sb appendWithNSString:[g_ getVarStringWithGeogebraCommonKernelStringTemplate:tpl]];
    [sb appendWithNSString:@") = "];
    [sb appendWithNSString:[g_ toSymbolicStringWithGeogebraCommonKernelStringTemplate:tpl]];
  }
  return [sb description];
}

- (void)dealloc {
  RELEASE_(var_);
  RELEASE_(order_);
  RELEASE_(arbconst_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosCasEvaluableFunction:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelArithmeticNumberValue:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosCasEvaluableFunction:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosCasEvaluableFunction:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelArithmeticNumberValue:withBoolean:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosCasEvaluableFunction:withBoolean:", "AlgoDerivative", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "applyCasCommandWithGeogebraCommonKernelStringTemplate:", "applyCasCommand", "V", 0x4, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "var_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "order_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.NumberValue;", NULL, NULL,  },
    { "fast_", NULL, 0x2, "Z", NULL, NULL,  },
    { "arbconst_", NULL, 0x2, "Lgeogebra.common.kernel.arithmetic.MyArbitraryConstant;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoDerivative = { 2, "AlgoDerivative", "geogebra.common.kernel.cas", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoDerivative;
}

@end

void GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelCasAlgoDerivative *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelGeosGeoNumeric *var, id<GeogebraCommonKernelArithmeticNumberValue> order) {
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, var, order, NO);
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(self->g_)) toGeoElement])) setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoDerivative *new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelGeosGeoNumeric *var, id<GeogebraCommonKernelArithmeticNumberValue> order) {
  GeogebraCommonKernelCasAlgoDerivative *self = [GeogebraCommonKernelCasAlgoDerivative alloc];
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_(self, cons, label, f, var, order);
  return self;
}

void GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_(GeogebraCommonKernelCasAlgoDerivative *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosCasEvaluableFunction> f) {
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, nil, nil, NO);
}

GeogebraCommonKernelCasAlgoDerivative *new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosCasEvaluableFunction> f) {
  GeogebraCommonKernelCasAlgoDerivative *self = [GeogebraCommonKernelCasAlgoDerivative alloc];
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_(self, cons, f);
  return self;
}

void GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(GeogebraCommonKernelCasAlgoDerivative *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelGeosGeoNumeric *var, id<GeogebraCommonKernelArithmeticNumberValue> order, jboolean fast) {
  GeogebraCommonKernelAlgosAlgoCasBase_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(self, cons, f, GeogebraCommonKernelCommandsCommandsEnum_get_Derivative());
  self->fast_ = NO;
  GeogebraCommonKernelCasAlgoDerivative_setAndConsume_arbconst_(self, new_GeogebraCommonKernelArithmeticMyArbitraryConstant_initWithGeogebraCommonKernelAlgosConstructionElement_(self));
  GeogebraCommonKernelCasAlgoDerivative_set_var_(self, var);
  GeogebraCommonKernelCasAlgoDerivative_set_order_(self, order);
  self->fast_ = fast;
  [self setInputOutput];
  [self compute];
}

GeogebraCommonKernelCasAlgoDerivative *new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelGeosGeoNumeric *var, id<GeogebraCommonKernelArithmeticNumberValue> order, jboolean fast) {
  GeogebraCommonKernelCasAlgoDerivative *self = [GeogebraCommonKernelCasAlgoDerivative alloc];
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, var, order, fast);
  return self;
}

void GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(GeogebraCommonKernelCasAlgoDerivative *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, jboolean fast) {
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelArithmeticNumberValue_withBoolean_(self, cons, f, nil, nil, fast);
}

GeogebraCommonKernelCasAlgoDerivative *new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, jboolean fast) {
  GeogebraCommonKernelCasAlgoDerivative *self = [GeogebraCommonKernelCasAlgoDerivative alloc];
  GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withBoolean_(self, cons, f, fast);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoDerivative)
