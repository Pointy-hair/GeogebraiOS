//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/math/stat/descriptive/summary/Sum.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.h"
#include "org/apache/commons/math/stat/descriptive/summary/Sum.h"

#define OrgApacheCommonsMathStatDescriptiveSummarySum_serialVersionUID -8231831954703408316LL

@interface OrgApacheCommonsMathStatDescriptiveSummarySum () {
 @public
  jlong n_;
  jdouble value_;
}

@end

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsMathStatDescriptiveSummarySum, serialVersionUID, jlong)

@implementation OrgApacheCommonsMathStatDescriptiveSummarySum

- (instancetype)init {
  OrgApacheCommonsMathStatDescriptiveSummarySum_init(self);
  return self;
}

- (instancetype)initWithOrgApacheCommonsMathStatDescriptiveSummarySum:(OrgApacheCommonsMathStatDescriptiveSummarySum *)original {
  OrgApacheCommonsMathStatDescriptiveSummarySum_initWithOrgApacheCommonsMathStatDescriptiveSummarySum_(self, original);
  return self;
}

- (void)incrementWithDouble:(jdouble)d {
  if (n_ == 0) {
    value_ = d;
  }
  else {
    value_ += d;
  }
  n_++;
}

- (jdouble)getResult {
  return value_;
}

- (jlong)getN {
  return n_;
}

- (void)clear {
  value_ = JavaLangDouble_NaN;
  n_ = 0;
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                           withInt:(jint)begin
                           withInt:(jint)length {
  jdouble sum = JavaLangDouble_NaN;
  if ([self testWithDoubleArray:values withInt:begin withInt:length]) {
    sum = 0.0;
    for (jint i = begin; i < begin + length; i++) {
      sum += IOSDoubleArray_Get(nil_chk(values), i);
    }
  }
  return sum;
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                   withDoubleArray:(IOSDoubleArray *)weights
                           withInt:(jint)begin
                           withInt:(jint)length {
  jdouble sum = JavaLangDouble_NaN;
  if ([self testWithDoubleArray:values withDoubleArray:weights withInt:begin withInt:length]) {
    sum = 0.0;
    for (jint i = begin; i < begin + length; i++) {
      sum += IOSDoubleArray_Get(nil_chk(values), i) * IOSDoubleArray_Get(nil_chk(weights), i);
    }
  }
  return sum;
}

- (jdouble)evaluateWithDoubleArray:(IOSDoubleArray *)values
                   withDoubleArray:(IOSDoubleArray *)weights {
  return [self evaluateWithDoubleArray:values withDoubleArray:weights withInt:0 withInt:((IOSDoubleArray *) nil_chk(values))->size_];
}

- (OrgApacheCommonsMathStatDescriptiveSummarySum *)copy__ {
  OrgApacheCommonsMathStatDescriptiveSummarySum *result = [new_OrgApacheCommonsMathStatDescriptiveSummarySum_init() autorelease];
  OrgApacheCommonsMathStatDescriptiveSummarySum_copy__WithOrgApacheCommonsMathStatDescriptiveSummarySum_withOrgApacheCommonsMathStatDescriptiveSummarySum_(self, result);
  return result;
}

+ (void)copy__WithOrgApacheCommonsMathStatDescriptiveSummarySum:(OrgApacheCommonsMathStatDescriptiveSummarySum *)source
              withOrgApacheCommonsMathStatDescriptiveSummarySum:(OrgApacheCommonsMathStatDescriptiveSummarySum *)dest {
  OrgApacheCommonsMathStatDescriptiveSummarySum_copy__WithOrgApacheCommonsMathStatDescriptiveSummarySum_withOrgApacheCommonsMathStatDescriptiveSummarySum_(source, dest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Sum", NULL, 0x1, NULL, NULL },
    { "initWithOrgApacheCommonsMathStatDescriptiveSummarySum:", "Sum", NULL, 0x1, NULL, NULL },
    { "incrementWithDouble:", "increment", "V", 0x1, NULL, NULL },
    { "getResult", NULL, "D", 0x1, NULL, NULL },
    { "getN", NULL, "J", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withInt:withInt:", "evaluate", "D", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withDoubleArray:withInt:withInt:", "evaluate", "D", 0x1, NULL, NULL },
    { "evaluateWithDoubleArray:withDoubleArray:", "evaluate", "D", 0x1, NULL, NULL },
    { "copy__", "copy", "Lorg.apache.commons.math.stat.descriptive.summary.Sum;", 0x1, NULL, NULL },
    { "copy__WithOrgApacheCommonsMathStatDescriptiveSummarySum:withOrgApacheCommonsMathStatDescriptiveSummarySum:", "copy", "V", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsMathStatDescriptiveSummarySum_serialVersionUID },
    { "n_", NULL, 0x2, "J", NULL, NULL,  },
    { "value_", NULL, 0x2, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsMathStatDescriptiveSummarySum = { 2, "Sum", "org.apache.commons.math.stat.descriptive.summary", NULL, 0x1, 11, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsMathStatDescriptiveSummarySum;
}

@end

void OrgApacheCommonsMathStatDescriptiveSummarySum_init(OrgApacheCommonsMathStatDescriptiveSummarySum *self) {
  OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  self->n_ = 0;
  self->value_ = JavaLangDouble_NaN;
}

OrgApacheCommonsMathStatDescriptiveSummarySum *new_OrgApacheCommonsMathStatDescriptiveSummarySum_init() {
  OrgApacheCommonsMathStatDescriptiveSummarySum *self = [OrgApacheCommonsMathStatDescriptiveSummarySum alloc];
  OrgApacheCommonsMathStatDescriptiveSummarySum_init(self);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveSummarySum_initWithOrgApacheCommonsMathStatDescriptiveSummarySum_(OrgApacheCommonsMathStatDescriptiveSummarySum *self, OrgApacheCommonsMathStatDescriptiveSummarySum *original) {
  OrgApacheCommonsMathStatDescriptiveAbstractStorelessUnivariateStatistic_init(self);
  OrgApacheCommonsMathStatDescriptiveSummarySum_copy__WithOrgApacheCommonsMathStatDescriptiveSummarySum_withOrgApacheCommonsMathStatDescriptiveSummarySum_(original, self);
}

OrgApacheCommonsMathStatDescriptiveSummarySum *new_OrgApacheCommonsMathStatDescriptiveSummarySum_initWithOrgApacheCommonsMathStatDescriptiveSummarySum_(OrgApacheCommonsMathStatDescriptiveSummarySum *original) {
  OrgApacheCommonsMathStatDescriptiveSummarySum *self = [OrgApacheCommonsMathStatDescriptiveSummarySum alloc];
  OrgApacheCommonsMathStatDescriptiveSummarySum_initWithOrgApacheCommonsMathStatDescriptiveSummarySum_(self, original);
  return self;
}

void OrgApacheCommonsMathStatDescriptiveSummarySum_copy__WithOrgApacheCommonsMathStatDescriptiveSummarySum_withOrgApacheCommonsMathStatDescriptiveSummarySum_(OrgApacheCommonsMathStatDescriptiveSummarySum *source, OrgApacheCommonsMathStatDescriptiveSummarySum *dest) {
  OrgApacheCommonsMathStatDescriptiveSummarySum_initialize();
  [((OrgApacheCommonsMathStatDescriptiveSummarySum *) nil_chk(dest)) setDataWithDoubleArray:[((OrgApacheCommonsMathStatDescriptiveSummarySum *) nil_chk(source)) getDataRef]];
  dest->n_ = source->n_;
  dest->value_ = source->value_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsMathStatDescriptiveSummarySum)
