//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/collection/PredicatedCollection.java
//


#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "org/apache/commons/collections15/Predicate.h"
#include "org/apache/commons/collections15/collection/AbstractCollectionDecorator.h"
#include "org/apache/commons/collections15/collection/AbstractSerializableCollectionDecorator.h"
#include "org/apache/commons/collections15/collection/PredicatedCollection.h"

#define OrgApacheCommonsCollections15CollectionPredicatedCollection_serialVersionUID -5259182142076705162LL

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15CollectionPredicatedCollection, serialVersionUID, jlong)

@implementation OrgApacheCommonsCollections15CollectionPredicatedCollection

+ (id<JavaUtilCollection>)decorateWithJavaUtilCollection:(id<JavaUtilCollection>)coll
              withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  return OrgApacheCommonsCollections15CollectionPredicatedCollection_decorateWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(coll, predicate);
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)coll
withOrgApacheCommonsCollections15Predicate:(id<OrgApacheCommonsCollections15Predicate>)predicate {
  OrgApacheCommonsCollections15CollectionPredicatedCollection_initWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(self, coll, predicate);
  return self;
}

- (void)validateWithId:(id)object {
  if ([((id<OrgApacheCommonsCollections15Predicate>) nil_chk(predicate_)) evaluateWithId:object] == NO) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"Cannot add Object '", object, @"' - Predicate rejected it")) autorelease];
  }
}

- (jboolean)addWithId:(id)object {
  [self validateWithId:object];
  return [((id<JavaUtilCollection>) nil_chk([self getCollection])) addWithId:object];
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)coll {
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(coll)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [self validateWithId:[it next]];
  }
  return [((id<JavaUtilCollection>) nil_chk([self getCollection])) addAllWithJavaUtilCollection:coll];
}

- (void)dealloc {
  RELEASE_(predicate_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "decorateWithJavaUtilCollection:withOrgApacheCommonsCollections15Predicate:", "decorate", "Ljava.util.Collection;", 0x9, NULL, "<E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;Lorg/apache/commons/collections15/Predicate<-TE;>;)Ljava/util/Collection<TE;>;" },
    { "initWithJavaUtilCollection:withOrgApacheCommonsCollections15Predicate:", "PredicatedCollection", NULL, 0x4, NULL, NULL },
    { "validateWithId:", "validate", "V", 0x4, NULL, "(TE;)V" },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgApacheCommonsCollections15CollectionPredicatedCollection_serialVersionUID },
    { "predicate_", NULL, 0x14, "Lorg.apache.commons.collections15.Predicate;", NULL, "Lorg/apache/commons/collections15/Predicate<-TE;>;",  },
  };
  static const char *superclass_type_args[] = {"TE;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15CollectionPredicatedCollection = { 2, "PredicatedCollection", "org.apache.commons.collections15.collection", NULL, 0x1, 5, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "<E:Ljava/lang/Object;>Lorg/apache/commons/collections15/collection/AbstractSerializableCollectionDecorator<TE;>;" };
  return &_OrgApacheCommonsCollections15CollectionPredicatedCollection;
}

@end

id<JavaUtilCollection> OrgApacheCommonsCollections15CollectionPredicatedCollection_decorateWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> coll, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionPredicatedCollection_initialize();
  return [new_OrgApacheCommonsCollections15CollectionPredicatedCollection_initWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(coll, predicate) autorelease];
}

void OrgApacheCommonsCollections15CollectionPredicatedCollection_initWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(OrgApacheCommonsCollections15CollectionPredicatedCollection *self, id<JavaUtilCollection> coll, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionAbstractSerializableCollectionDecorator_initWithJavaUtilCollection_(self, coll);
  if (predicate == nil) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Predicate must not be null") autorelease];
  }
  OrgApacheCommonsCollections15CollectionPredicatedCollection_set_predicate_(self, predicate);
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(coll)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [self validateWithId:[it next]];
  }
}

OrgApacheCommonsCollections15CollectionPredicatedCollection *new_OrgApacheCommonsCollections15CollectionPredicatedCollection_initWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(id<JavaUtilCollection> coll, id<OrgApacheCommonsCollections15Predicate> predicate) {
  OrgApacheCommonsCollections15CollectionPredicatedCollection *self = [OrgApacheCommonsCollections15CollectionPredicatedCollection alloc];
  OrgApacheCommonsCollections15CollectionPredicatedCollection_initWithJavaUtilCollection_withOrgApacheCommonsCollections15Predicate_(self, coll, predicate);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15CollectionPredicatedCollection)
