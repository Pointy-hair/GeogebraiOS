//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/VVertex.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/VHalfEdge.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/VVertex.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"

@interface GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex () {
 @public
  JavaUtilArrayList *edges_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex, edges_, JavaUtilArrayList *)

jint GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_uniqueid_ = 1;

@implementation GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex

- (instancetype)init {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_init(self);
  return self;
}

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithDouble_withDouble_(self, x, y);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *)point {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(self, point);
  return self;
}

- (jboolean)hasEdges {
  return (edges_ != nil && [edges_ size] > 0);
}

- (void)clearEdges {
  if (edges_ != nil) {
    [edges_ clear];
  }
}

- (void)addEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *)edge {
  if (edges_ == nil) {
    GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_setAndConsume_edges_(self, new_JavaUtilArrayList_init());
  }
  [((JavaUtilArrayList *) nil_chk(edges_)) addWithId:edge];
}

- (JavaUtilArrayList *)getEdges {
  if (edges_ == nil || [edges_ size] <= 0) {
    return nil;
  }
  return edges_;
}

- (jboolean)removeEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *)edge {
  if (edges_ == nil) {
    return NO;
  }
  return [((JavaUtilArrayList *) nil_chk(edges_)) removeWithId:edge];
}

- (jdouble)distanceToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *)distance {
  return JavaLangMath_sqrtWithDouble_((x_ - ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk(distance))->x_) * (x_ - distance->x_) + (y_ - distance->y_) * (y_ - distance->y_));
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *)getEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *)connectedtovertex {
  if (edges_ == nil || [edges_ size] <= 0) {
    return nil;
  }
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge * __strong edge in nil_chk(edges_)) {
    if (((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge))->next_ != nil && edge->next_->vertex_ == connectedtovertex) {
      return edge;
    }
  }
  return nil;
}

- (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *)getEdgeWithInt:(jint)vertexnumber {
  if (edges_ == nil || [edges_ size] <= 0) {
    return nil;
  }
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge * __strong edge in nil_chk(edges_)) {
    if (((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge))->next_ != nil && edge->next_->vertexnumber_ == vertexnumber) {
      return edge;
    }
  }
  return nil;
}

- (jboolean)isConnectedToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *)connectedtovertex {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *edge = [self getEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:connectedtovertex];
  return (edge != nil);
}

- (NSString *)description {
  return JreStrcat("$$C", @"VVertex (connected to ", [self getConnectedVertexString], ')');
}

- (NSString *)getConnectedEdgeString {
  if (edges_ == nil || [edges_ size] <= 0) {
    return nil;
  }
  NSString *str = nil;
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge * __strong edge in nil_chk(edges_)) {
    if (str == nil) {
      str = JreStrcat("I", ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge))->vertexnumber_);
    }
    else {
      str = JreStrcat("$$", str, JreStrcat("$I", @", ", ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge))->vertexnumber_));
    }
  }
  return str;
}

- (NSString *)getConnectedVertexString {
  if (edges_ == nil || [edges_ size] <= 0) {
    return nil;
  }
  NSString *str = nil;
  for (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge * __strong edge in nil_chk(edges_)) {
    if (str == nil) {
      str = JreStrcat("I", ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge)) getConnectedVertex]))->id__);
    }
    else {
      str = JreStrcat("$$", str, JreStrcat("$I", @", ", ((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *) nil_chk([((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge *) nil_chk(edge)) getConnectedVertex]))->id__));
    }
  }
  return str;
}

- (void)dealloc {
  RELEASE_(edges_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "VVertex", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "VVertex", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint:", "VVertex", NULL, 0x1, NULL, NULL },
    { "hasEdges", NULL, "Z", 0x1, NULL, NULL },
    { "clearEdges", NULL, "V", 0x1, NULL, NULL },
    { "addEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:", "addEdge", "V", 0x1, NULL, NULL },
    { "getEdges", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
    { "removeEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVHalfEdge:", "removeEdge", "Z", 0x1, NULL, NULL },
    { "distanceToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:", "distanceTo", "D", 0x1, NULL, NULL },
    { "getEdgeWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:", "getEdge", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation.VHalfEdge;", 0x1, NULL, NULL },
    { "getEdgeWithInt:", "getEdge", "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation.VHalfEdge;", 0x1, NULL, NULL },
    { "isConnectedToWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex:", "isConnectedTo", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getConnectedEdgeString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getConnectedVertexString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "uniqueid_", NULL, 0x9, "I", &GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_uniqueid_, NULL,  },
    { "id__", "id", 0x1, "I", NULL, NULL,  },
    { "edges_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/VHalfEdge;>;",  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex = { 2, "VVertex", "geogebra.common.kernel.discrete.signalprocessor.voronoi.representation.triangulation", NULL, 0x1, 15, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex;
}

@end

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_init(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *self) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_init(self);
  self->id__ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_uniqueid_++;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_init() {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_init(self);
  return self;
}

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithDouble_withDouble_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *self, jdouble x, jdouble y) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_initWithDouble_withDouble_(self, x, y);
  self->id__ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_uniqueid_++;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithDouble_withDouble_(jdouble x, jdouble y) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithDouble_withDouble_(self, x, y);
  return self;
}

void GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *self, GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *point) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(self, point);
  self->id__ = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_uniqueid_++;
}

GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *point) {
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex *self = [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex alloc];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex_initWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_(self, point);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationVVertex)
