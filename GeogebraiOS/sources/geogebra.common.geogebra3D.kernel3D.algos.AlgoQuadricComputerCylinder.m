//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricComputerCylinder.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricComputer.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricComputerCylinder.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "java/lang/Double.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder

- (void)setQuadricWithGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D:(GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *)quadric
                                  withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)origin
                                  withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)direction
                                                            withDouble:(jdouble)number {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk(quadric)) setCylinderWithGeogebraCommonKernelMatrixCoords:origin withGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk(direction)) normalize] withDouble:number];
}

- (jdouble)getNumberWithDouble:(jdouble)v {
  if (GeogebraCommonKernelKernel_isZeroWithDouble_(v)) {
    return 0;
  }
  else if (v < 0) {
    return JavaLangDouble_NaN;
  }
  return v;
}

- (instancetype)init {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setQuadricWithGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withDouble:", "setQuadric", "V", 0x1, NULL, NULL },
    { "getNumberWithDouble:", "getNumber", "D", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder = { 2, "AlgoQuadricComputerCylinder", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder_init(GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder *self) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer_init(self);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder_init() {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputerCylinder)
