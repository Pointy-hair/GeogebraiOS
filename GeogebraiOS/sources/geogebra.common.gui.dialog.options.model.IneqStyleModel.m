//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/options/model/IneqStyleModel.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/options/model/BooleanOptionModel.h"
#include "geogebra/common/gui/dialog/options/model/IneqStyleModel.h"
#include "geogebra/common/gui/dialog/options/model/OptionsModel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/InequalityProperties.h"

@interface GeogebraCommonGuiDialogOptionsModelIneqStyleModel ()

- (id<GeogebraCommonKernelGeosInequalityProperties>)getInequalityPropertiesAtWithInt:(jint)index;

@end

__attribute__((unused)) static id<GeogebraCommonKernelGeosInequalityProperties> GeogebraCommonGuiDialogOptionsModelIneqStyleModel_getInequalityPropertiesAtWithInt_(GeogebraCommonGuiDialogOptionsModelIneqStyleModel *self, jint index);

@interface GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener : NSObject
@end

@implementation GeogebraCommonGuiDialogOptionsModelIneqStyleModel

- (instancetype)initWithGeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener:(id<GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener>)listener {
  GeogebraCommonGuiDialogOptionsModelIneqStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener_(self, listener);
  return self;
}

- (id<GeogebraCommonKernelGeosInequalityProperties>)getInequalityPropertiesAtWithInt:(jint)index {
  return GeogebraCommonGuiDialogOptionsModelIneqStyleModel_getInequalityPropertiesAtWithInt_(self, index);
}

- (void)updateProperties {
  if (!([GeogebraCommonKernelGeosInequalityProperties_class_() isInstance:[self getObjectAtWithInt:0]])) {
    return;
  }
  id<GeogebraCommonKernelGeosInequalityProperties> temp, geo0 = GeogebraCommonGuiDialogOptionsModelIneqStyleModel_getInequalityPropertiesAtWithInt_(self, 0);
  jboolean equalFix = YES;
  for (jint i = 0; i < [self getGeosLength]; i++) {
    if (!([GeogebraCommonKernelGeosInequalityProperties_class_() isInstance:[self getObjectAtWithInt:i]])) {
      return;
    }
    temp = GeogebraCommonGuiDialogOptionsModelIneqStyleModel_getInequalityPropertiesAtWithInt_(self, i);
    if ([((id<GeogebraCommonKernelGeosInequalityProperties>) nil_chk(geo0)) showOnAxis] != [((id<GeogebraCommonKernelGeosInequalityProperties>) nil_chk(temp)) showOnAxis]) equalFix = NO;
  }
  if (equalFix) {
    [((id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener>) nil_chk([self getListener])) updateCheckboxWithBoolean:[((id<GeogebraCommonKernelGeosInequalityProperties>) nil_chk(geo0)) showOnAxis]];
    if ([geo0 showOnAxis]) {
      [((id<GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener>) nil_chk(((id<GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener>) check_protocol_cast([self getListener], @protocol(GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener))))) enableFillingWithBoolean:NO];
    }
  }
  else [((id<GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener>) nil_chk([self getListener])) updateCheckboxWithBoolean:NO];
}

- (jboolean)isValidAtWithInt:(jint)index {
  GeogebraCommonKernelGeosGeoElement *geo = [((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getGeoAtWithInt:index])) getGeoElementForPropertiesDialog];
  if (!([geo isKindOfClass:[GeogebraCommonKernelGeosGeoFunction class]])) {
    return NO;
  }
  GeogebraCommonKernelGeosGeoFunction *gfun = (GeogebraCommonKernelGeosGeoFunction *) check_class_cast(geo, [GeogebraCommonKernelGeosGeoFunction class]);
  if (![((GeogebraCommonKernelGeosGeoFunction *) nil_chk(gfun)) isBooleanFunction] || [((NSString *) nil_chk([gfun getVarStringWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_defaultTemplate_()])) isEqual:@"y"]) {
    return NO;
  }
  return YES;
}

- (jboolean)getValueAtWithInt:(jint)index {
  return NO;
}

- (void)applyWithInt:(jint)index
         withBoolean:(jboolean)value {
  id<GeogebraCommonKernelGeosInequalityProperties> geo = (id<GeogebraCommonKernelGeosInequalityProperties>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(GeogebraCommonKernelGeosInequalityProperties));
  [((id<GeogebraCommonKernelGeosInequalityProperties>) nil_chk(geo)) setShowOnAxisWithBoolean:value];
  [geo updateRepaint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener:", "IneqStyleModel", NULL, 0x1, NULL, NULL },
    { "getInequalityPropertiesAtWithInt:", "getInequalityPropertiesAt", "Lgeogebra.common.kernel.geos.InequalityProperties;", 0x2, NULL, NULL },
    { "updateProperties", NULL, "V", 0x1, NULL, NULL },
    { "isValidAtWithInt:", "isValidAt", "Z", 0x1, NULL, NULL },
    { "getValueAtWithInt:", "getValueAt", "Z", 0x1, NULL, NULL },
    { "applyWithInt:withBoolean:", "apply", "V", 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.gui.dialog.options.model.IneqStyleModel$IIneqStyleListener;"};
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelIneqStyleModel = { 2, "IneqStyleModel", "geogebra.common.gui.dialog.options.model", NULL, 0x1, 6, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelIneqStyleModel;
}

@end

void GeogebraCommonGuiDialogOptionsModelIneqStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener_(GeogebraCommonGuiDialogOptionsModelIneqStyleModel *self, id<GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener> listener) {
  GeogebraCommonGuiDialogOptionsModelBooleanOptionModel_initWithGeogebraCommonGuiDialogOptionsModelBooleanOptionModel_IBooleanOptionListener_(self, listener);
}

GeogebraCommonGuiDialogOptionsModelIneqStyleModel *new_GeogebraCommonGuiDialogOptionsModelIneqStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener_(id<GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener> listener) {
  GeogebraCommonGuiDialogOptionsModelIneqStyleModel *self = [GeogebraCommonGuiDialogOptionsModelIneqStyleModel alloc];
  GeogebraCommonGuiDialogOptionsModelIneqStyleModel_initWithGeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener_(self, listener);
  return self;
}

id<GeogebraCommonKernelGeosInequalityProperties> GeogebraCommonGuiDialogOptionsModelIneqStyleModel_getInequalityPropertiesAtWithInt_(GeogebraCommonGuiDialogOptionsModelIneqStyleModel *self, jint index) {
  return (id<GeogebraCommonKernelGeosInequalityProperties>) check_protocol_cast([self getObjectAtWithInt:index], @protocol(GeogebraCommonKernelGeosInequalityProperties));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelIneqStyleModel)

@implementation GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "enableFillingWithBoolean:", "enableFilling", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener = { 2, "IIneqStyleListener", "geogebra.common.gui.dialog.options.model", "IneqStyleModel", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogOptionsModelIneqStyleModel_IIneqStyleListener)
