//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/commands/CmdVertex3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoDrawingPadCorner3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoVertexConic3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoVertexPolygon3D.h"
#include "geogebra/common/geogebra3D/kernel3D/commands/CmdVertex3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoVertexConic.h"
#include "geogebra/common/kernel/algos/AlgoVertexPolygon.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/commands/CmdVertex.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/kernel/geos/GeoPoly.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@implementation GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)cornerOfDrawingPadWithNSString:(NSString *)label
                               withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)number
                               withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)ev {
  if (![((GeogebraCommonKernelKernel *) nil_chk(kernelA_)) getLoadingMode] && ev != nil && GeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_is3DWithGeogebraCommonKernelArithmeticNumberValue_(ev)) {
    return [self cornerOfDrawingPad3DWithNSString:label withGeogebraCommonKernelArithmeticNumberValue:number withGeogebraCommonKernelArithmeticNumberValue:ev];
  }
  return [super cornerOfDrawingPadWithNSString:label withGeogebraCommonKernelArithmeticNumberValue:number withGeogebraCommonKernelArithmeticNumberValue:ev];
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)cornerOfDrawingPad3DWithNSString:(NSString *)label
                                 withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)number
                                 withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)ev {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D *algo = [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDrawingPadCorner3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonKernelArithmeticNumberValue_(cons_, label, number, ev) autorelease];
  return [algo getCorner];
}

- (GeogebraCommonKernelAlgosAlgoVertexPolygon *)newAlgoVertexPolygonWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                                                            withNSString:(NSString *)label
                                                                     withGeogebraCommonKernelGeosGeoPoly:(id<GeogebraCommonKernelGeosGeoPoly>)p
                                                              withGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)v {
  if ([((id<GeogebraCommonKernelGeosGeoPoly>) nil_chk(p)) isGeoElement3D]) {
    return [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexPolygon3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoly_withGeogebraCommonKernelArithmeticNumberValue_(cons, label, p, v) autorelease];
  }
  return [super newAlgoVertexPolygonWithGeogebraCommonKernelConstruction:cons withNSString:label withGeogebraCommonKernelGeosGeoPoly:p withGeogebraCommonKernelGeosGeoNumberValue:v];
}

- (GeogebraCommonKernelAlgosAlgoVertexConic *)newAlgoVertexConicWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                                                                   withNSStringArray:(IOSObjectArray *)labels
                                                          withGeogebraCommonKernelKernelNDGeoConicND:(GeogebraCommonKernelKernelNDGeoConicND *)conic {
  if ([((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(conic)) isGeoElement3D]) {
    return [new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoVertexConic3D_initWithGeogebraCommonKernelConstruction_withNSStringArray_withGeogebraCommonKernelKernelNDGeoConicND_(cons, labels, conic) autorelease];
  }
  return [super newAlgoVertexConicWithGeogebraCommonKernelConstruction:cons withNSStringArray:labels withGeogebraCommonKernelKernelNDGeoConicND:conic];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdVertex3D", NULL, 0x1, NULL, NULL },
    { "cornerOfDrawingPadWithNSString:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelArithmeticNumberValue:", "cornerOfDrawingPad", "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "cornerOfDrawingPad3DWithNSString:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonKernelArithmeticNumberValue:", "cornerOfDrawingPad3D", "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "newAlgoVertexPolygonWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoly:withGeogebraCommonKernelGeosGeoNumberValue:", "newAlgoVertexPolygon", "Lgeogebra.common.kernel.algos.AlgoVertexPolygon;", 0x4, NULL, NULL },
    { "newAlgoVertexConicWithGeogebraCommonKernelConstruction:withNSStringArray:withGeogebraCommonKernelKernelNDGeoConicND:", "newAlgoVertexConic", "Lgeogebra.common.kernel.algos.AlgoVertexConic;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D = { 2, "CmdVertex3D", "geogebra.common.geogebra3D.kernel3D.commands", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdVertex_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D *new_GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D *self = [GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D alloc];
  GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DCommandsCmdVertex3D)
