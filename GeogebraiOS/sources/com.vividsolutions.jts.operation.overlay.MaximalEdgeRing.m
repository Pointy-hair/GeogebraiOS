//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/operation/overlay/MaximalEdgeRing.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/GeometryFactory.h"
#include "com/vividsolutions/jts/geomgraph/DirectedEdge.h"
#include "com/vividsolutions/jts/geomgraph/DirectedEdgeStar.h"
#include "com/vividsolutions/jts/geomgraph/EdgeEndStar.h"
#include "com/vividsolutions/jts/geomgraph/EdgeRing.h"
#include "com/vividsolutions/jts/geomgraph/Node.h"
#include "com/vividsolutions/jts/operation/overlay/MaximalEdgeRing.h"
#include "com/vividsolutions/jts/operation/overlay/MinimalEdgeRing.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation ComVividsolutionsJtsOperationOverlayMaximalEdgeRing

- (instancetype)initWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)start
                      withComVividsolutionsJtsGeomGeometryFactory:(ComVividsolutionsJtsGeomGeometryFactory *)geometryFactory {
  ComVividsolutionsJtsOperationOverlayMaximalEdgeRing_initWithComVividsolutionsJtsGeomgraphDirectedEdge_withComVividsolutionsJtsGeomGeometryFactory_(self, start, geometryFactory);
  return self;
}

- (ComVividsolutionsJtsGeomgraphDirectedEdge *)getNextWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de {
  return [((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) getNext];
}

- (void)setEdgeRingWithComVividsolutionsJtsGeomgraphDirectedEdge:(ComVividsolutionsJtsGeomgraphDirectedEdge *)de
                       withComVividsolutionsJtsGeomgraphEdgeRing:(ComVividsolutionsJtsGeomgraphEdgeRing *)er {
  [((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) setEdgeRingWithComVividsolutionsJtsGeomgraphEdgeRing:er];
}

- (void)linkDirectedEdgesForMinimalEdgeRings {
  ComVividsolutionsJtsGeomgraphDirectedEdge *de = startDe_;
  do {
    ComVividsolutionsJtsGeomgraphNode *node = [((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) getNode];
    [((ComVividsolutionsJtsGeomgraphDirectedEdgeStar *) nil_chk(((ComVividsolutionsJtsGeomgraphDirectedEdgeStar *) check_class_cast([((ComVividsolutionsJtsGeomgraphNode *) nil_chk(node)) getEdges], [ComVividsolutionsJtsGeomgraphDirectedEdgeStar class])))) linkMinimalDirectedEdgesWithComVividsolutionsJtsGeomgraphEdgeRing:self];
    de = [de getNext];
  }
  while (de != startDe_);
}

- (id<JavaUtilList>)buildMinimalRings {
  id<JavaUtilList> minEdgeRings = [new_JavaUtilArrayList_init() autorelease];
  ComVividsolutionsJtsGeomgraphDirectedEdge *de = startDe_;
  do {
    if ([((ComVividsolutionsJtsGeomgraphDirectedEdge *) nil_chk(de)) getMinEdgeRing] == nil) {
      ComVividsolutionsJtsGeomgraphEdgeRing *minEr = [new_ComVividsolutionsJtsOperationOverlayMinimalEdgeRing_initWithComVividsolutionsJtsGeomgraphDirectedEdge_withComVividsolutionsJtsGeomGeometryFactory_(de, geometryFactory_) autorelease];
      [minEdgeRings addWithId:minEr];
    }
    de = [de getNext];
  }
  while (de != startDe_);
  return minEdgeRings;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomgraphDirectedEdge:withComVividsolutionsJtsGeomGeometryFactory:", "MaximalEdgeRing", NULL, 0x1, NULL, NULL },
    { "getNextWithComVividsolutionsJtsGeomgraphDirectedEdge:", "getNext", "Lcom.vividsolutions.jts.geomgraph.DirectedEdge;", 0x1, NULL, NULL },
    { "setEdgeRingWithComVividsolutionsJtsGeomgraphDirectedEdge:withComVividsolutionsJtsGeomgraphEdgeRing:", "setEdgeRing", "V", 0x1, NULL, NULL },
    { "linkDirectedEdgesForMinimalEdgeRings", NULL, "V", 0x1, NULL, NULL },
    { "buildMinimalRings", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationOverlayMaximalEdgeRing = { 2, "MaximalEdgeRing", "com.vividsolutions.jts.operation.overlay", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationOverlayMaximalEdgeRing;
}

@end

void ComVividsolutionsJtsOperationOverlayMaximalEdgeRing_initWithComVividsolutionsJtsGeomgraphDirectedEdge_withComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsOperationOverlayMaximalEdgeRing *self, ComVividsolutionsJtsGeomgraphDirectedEdge *start, ComVividsolutionsJtsGeomGeometryFactory *geometryFactory) {
  ComVividsolutionsJtsGeomgraphEdgeRing_initWithComVividsolutionsJtsGeomgraphDirectedEdge_withComVividsolutionsJtsGeomGeometryFactory_(self, start, geometryFactory);
}

ComVividsolutionsJtsOperationOverlayMaximalEdgeRing *new_ComVividsolutionsJtsOperationOverlayMaximalEdgeRing_initWithComVividsolutionsJtsGeomgraphDirectedEdge_withComVividsolutionsJtsGeomGeometryFactory_(ComVividsolutionsJtsGeomgraphDirectedEdge *start, ComVividsolutionsJtsGeomGeometryFactory *geometryFactory) {
  ComVividsolutionsJtsOperationOverlayMaximalEdgeRing *self = [ComVividsolutionsJtsOperationOverlayMaximalEdgeRing alloc];
  ComVividsolutionsJtsOperationOverlayMaximalEdgeRing_initWithComVividsolutionsJtsGeomgraphDirectedEdge_withComVividsolutionsJtsGeomGeometryFactory_(self, start, geometryFactory);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationOverlayMaximalEdgeRing)
