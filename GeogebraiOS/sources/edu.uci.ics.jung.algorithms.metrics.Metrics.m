//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/algorithms/metrics/Metrics.java
//


#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/metrics/Metrics.h"
#include "edu/uci/ics/jung/graph/Graph.h"
#include "java/lang/Double.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@implementation EduUciIcsJungAlgorithmsMetricsMetrics

+ (id<JavaUtilMap>)clusteringCoefficientsWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)graph {
  return EduUciIcsJungAlgorithmsMetricsMetrics_clusteringCoefficientsWithEduUciIcsJungGraphGraph_(graph);
}

- (instancetype)init {
  EduUciIcsJungAlgorithmsMetricsMetrics_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "clusteringCoefficientsWithEduUciIcsJungGraphGraph:", "clusteringCoefficients", "Ljava.util.Map;", 0x9, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>(Ledu/uci/ics/jung/graph/Graph<TV;TE;>;)Ljava/util/Map<TV;Ljava/lang/Double;>;" },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsMetricsMetrics = { 2, "Metrics", "edu.uci.ics.jung.algorithms.metrics", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_EduUciIcsJungAlgorithmsMetricsMetrics;
}

@end

id<JavaUtilMap> EduUciIcsJungAlgorithmsMetricsMetrics_clusteringCoefficientsWithEduUciIcsJungGraphGraph_(id<EduUciIcsJungGraphGraph> graph) {
  EduUciIcsJungAlgorithmsMetricsMetrics_initialize();
  id<JavaUtilMap> coefficients = [new_JavaUtilHashMap_init() autorelease];
  for (id __strong v in nil_chk([((id<EduUciIcsJungGraphGraph>) nil_chk(graph)) getVertices])) {
    jint n = [graph getNeighborCountWithId:v];
    if (n < 2) [coefficients putWithId:v withId:[new_JavaLangDouble_initWithDouble_(0) autorelease]];
    else {
      JavaUtilArrayList *neighbors = [new_JavaUtilArrayList_initWithJavaUtilCollection_([graph getNeighborsWithId:v]) autorelease];
      jdouble edge_count = 0;
      for (jint i = 0; i < n; i++) {
        id w = [neighbors getWithInt:i];
        for (jint j = i + 1; j < n; j++) {
          id x = [neighbors getWithInt:j];
          edge_count += [graph isNeighborWithId:w withId:x] ? 1 : 0;
        }
      }
      jdouble possible_edges = (n * (n - 1)) / 2.0;
      [coefficients putWithId:v withId:[new_JavaLangDouble_initWithDouble_(edge_count / possible_edges) autorelease]];
    }
  }
  return coefficients;
}

void EduUciIcsJungAlgorithmsMetricsMetrics_init(EduUciIcsJungAlgorithmsMetricsMetrics *self) {
  NSObject_init(self);
}

EduUciIcsJungAlgorithmsMetricsMetrics *new_EduUciIcsJungAlgorithmsMetricsMetrics_init() {
  EduUciIcsJungAlgorithmsMetricsMetrics *self = [EduUciIcsJungAlgorithmsMetricsMetrics alloc];
  EduUciIcsJungAlgorithmsMetricsMetrics_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsMetricsMetrics)
