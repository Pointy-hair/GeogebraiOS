//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/simplify/TaggedLineStringSimplifier.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/LineIntersector.h"
#include "com/vividsolutions/jts/algorithm/RobustLineIntersector.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/LineSegment.h"
#include "com/vividsolutions/jts/geom/LineString.h"
#include "com/vividsolutions/jts/simplify/LineSegmentIndex.h"
#include "com/vividsolutions/jts/simplify/TaggedLineSegment.h"
#include "com/vividsolutions/jts/simplify/TaggedLineString.h"
#include "com/vividsolutions/jts/simplify/TaggedLineStringSimplifier.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier () {
 @public
  ComVividsolutionsJtsSimplifyLineSegmentIndex *inputIndex_;
  ComVividsolutionsJtsSimplifyLineSegmentIndex *outputIndex_;
  ComVividsolutionsJtsSimplifyTaggedLineString *line_;
  IOSObjectArray *linePts_;
  jdouble distanceTolerance_;
  IOSIntArray *validSectionIndex_;
}

- (void)simplifySectionWithInt:(jint)i
                       withInt:(jint)j
                       withInt:(jint)depth;

- (jint)findFurthestPointWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts
                                                             withInt:(jint)i
                                                             withInt:(jint)j
                                                     withDoubleArray:(IOSDoubleArray *)maxDistance;

- (ComVividsolutionsJtsGeomLineSegment *)flattenWithInt:(jint)start
                                                withInt:(jint)end;

- (jboolean)hasBadIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)parentLine
                                                                  withIntArray:(IOSIntArray *)sectionIndex
                                       withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)candidateSeg;

- (jboolean)hasBadOutputIntersectionWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)candidateSeg;

- (jboolean)hasBadInputIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)parentLine
                                                                       withIntArray:(IOSIntArray *)sectionIndex
                                            withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)candidateSeg;

+ (jboolean)isInLineSectionWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)line
                                                               withIntArray:(IOSIntArray *)sectionIndex
                          withComVividsolutionsJtsSimplifyTaggedLineSegment:(ComVividsolutionsJtsSimplifyTaggedLineSegment *)seg;

- (jboolean)hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)seg0
                                   withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)seg1;

- (void)removeWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)line
                                                       withInt:(jint)start
                                                       withInt:(jint)end;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier, inputIndex_, ComVividsolutionsJtsSimplifyLineSegmentIndex *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier, outputIndex_, ComVividsolutionsJtsSimplifyLineSegmentIndex *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier, line_, ComVividsolutionsJtsSimplifyTaggedLineString *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier, linePts_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier, validSectionIndex_, IOSIntArray *)

static ComVividsolutionsJtsAlgorithmLineIntersector *ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_li_;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier, li_, ComVividsolutionsJtsAlgorithmLineIntersector *)
J2OBJC_STATIC_FIELD_SETTER(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier, li_, ComVividsolutionsJtsAlgorithmLineIntersector *)

__attribute__((unused)) static void ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_simplifySectionWithInt_withInt_withInt_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, jint i, jint j, jint depth);

__attribute__((unused)) static jint ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_findFurthestPointWithComVividsolutionsJtsGeomCoordinateArray_withInt_withInt_withDoubleArray_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, IOSObjectArray *pts, jint i, jint j, IOSDoubleArray *maxDistance);

__attribute__((unused)) static ComVividsolutionsJtsGeomLineSegment *ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_flattenWithInt_withInt_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, jint start, jint end);

__attribute__((unused)) static jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsSimplifyTaggedLineString *parentLine, IOSIntArray *sectionIndex, ComVividsolutionsJtsGeomLineSegment *candidateSeg);

__attribute__((unused)) static jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadOutputIntersectionWithComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsGeomLineSegment *candidateSeg);

__attribute__((unused)) static jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadInputIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsSimplifyTaggedLineString *parentLine, IOSIntArray *sectionIndex, ComVividsolutionsJtsGeomLineSegment *candidateSeg);

__attribute__((unused)) static jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_isInLineSectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsSimplifyTaggedLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineString *line, IOSIntArray *sectionIndex, ComVividsolutionsJtsSimplifyTaggedLineSegment *seg);

__attribute__((unused)) static jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsGeomLineSegment *seg0, ComVividsolutionsJtsGeomLineSegment *seg1);

__attribute__((unused)) static void ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_removeWithComVividsolutionsJtsSimplifyTaggedLineString_withInt_withInt_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsSimplifyTaggedLineString *line, jint start, jint end);

J2OBJC_INITIALIZED_DEFN(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier)

@implementation ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier

- (instancetype)initWithComVividsolutionsJtsSimplifyLineSegmentIndex:(ComVividsolutionsJtsSimplifyLineSegmentIndex *)inputIndex
                    withComVividsolutionsJtsSimplifyLineSegmentIndex:(ComVividsolutionsJtsSimplifyLineSegmentIndex *)outputIndex {
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_initWithComVividsolutionsJtsSimplifyLineSegmentIndex_withComVividsolutionsJtsSimplifyLineSegmentIndex_(self, inputIndex, outputIndex);
  return self;
}

- (void)setDistanceToleranceWithDouble:(jdouble)distanceTolerance {
  self->distanceTolerance_ = distanceTolerance;
}

- (void)simplifyWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)line {
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_set_line_(self, line);
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_set_linePts_(self, [((ComVividsolutionsJtsSimplifyTaggedLineString *) nil_chk(line)) getParentCoordinates]);
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_simplifySectionWithInt_withInt_withInt_(self, 0, ((IOSObjectArray *) nil_chk(linePts_))->size_ - 1, 0);
}

- (void)simplifySectionWithInt:(jint)i
                       withInt:(jint)j
                       withInt:(jint)depth {
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_simplifySectionWithInt_withInt_withInt_(self, i, j, depth);
}

- (jint)findFurthestPointWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts
                                                             withInt:(jint)i
                                                             withInt:(jint)j
                                                     withDoubleArray:(IOSDoubleArray *)maxDistance {
  return ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_findFurthestPointWithComVividsolutionsJtsGeomCoordinateArray_withInt_withInt_withDoubleArray_(self, pts, i, j, maxDistance);
}

- (ComVividsolutionsJtsGeomLineSegment *)flattenWithInt:(jint)start
                                                withInt:(jint)end {
  return ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_flattenWithInt_withInt_(self, start, end);
}

- (jboolean)hasBadIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)parentLine
                                                                  withIntArray:(IOSIntArray *)sectionIndex
                                       withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)candidateSeg {
  return ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(self, parentLine, sectionIndex, candidateSeg);
}

- (jboolean)hasBadOutputIntersectionWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)candidateSeg {
  return ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadOutputIntersectionWithComVividsolutionsJtsGeomLineSegment_(self, candidateSeg);
}

- (jboolean)hasBadInputIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)parentLine
                                                                       withIntArray:(IOSIntArray *)sectionIndex
                                            withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)candidateSeg {
  return ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadInputIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(self, parentLine, sectionIndex, candidateSeg);
}

+ (jboolean)isInLineSectionWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)line
                                                               withIntArray:(IOSIntArray *)sectionIndex
                          withComVividsolutionsJtsSimplifyTaggedLineSegment:(ComVividsolutionsJtsSimplifyTaggedLineSegment *)seg {
  return ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_isInLineSectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsSimplifyTaggedLineSegment_(line, sectionIndex, seg);
}

- (jboolean)hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)seg0
                                   withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)seg1 {
  return ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(self, seg0, seg1);
}

- (void)removeWithComVividsolutionsJtsSimplifyTaggedLineString:(ComVividsolutionsJtsSimplifyTaggedLineString *)line
                                                       withInt:(jint)start
                                                       withInt:(jint)end {
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_removeWithComVividsolutionsJtsSimplifyTaggedLineString_withInt_withInt_(self, line, start, end);
}

- (void)dealloc {
  RELEASE_(inputIndex_);
  RELEASE_(outputIndex_);
  RELEASE_(line_);
  RELEASE_(linePts_);
  RELEASE_(validSectionIndex_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier class]) {
    JreStrongAssignAndConsume(&ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_li_, nil, new_ComVividsolutionsJtsAlgorithmRobustLineIntersector_init());
    J2OBJC_SET_INITIALIZED(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsSimplifyLineSegmentIndex:withComVividsolutionsJtsSimplifyLineSegmentIndex:", "TaggedLineStringSimplifier", NULL, 0x1, NULL, NULL },
    { "setDistanceToleranceWithDouble:", "setDistanceTolerance", "V", 0x1, NULL, NULL },
    { "simplifyWithComVividsolutionsJtsSimplifyTaggedLineString:", "simplify", "V", 0x1, NULL, NULL },
    { "simplifySectionWithInt:withInt:withInt:", "simplifySection", "V", 0x2, NULL, NULL },
    { "findFurthestPointWithComVividsolutionsJtsGeomCoordinateArray:withInt:withInt:withDoubleArray:", "findFurthestPoint", "I", 0x2, NULL, NULL },
    { "flattenWithInt:withInt:", "flatten", "Lcom.vividsolutions.jts.geom.LineSegment;", 0x2, NULL, NULL },
    { "hasBadIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString:withIntArray:withComVividsolutionsJtsGeomLineSegment:", "hasBadIntersection", "Z", 0x2, NULL, NULL },
    { "hasBadOutputIntersectionWithComVividsolutionsJtsGeomLineSegment:", "hasBadOutputIntersection", "Z", 0x2, NULL, NULL },
    { "hasBadInputIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString:withIntArray:withComVividsolutionsJtsGeomLineSegment:", "hasBadInputIntersection", "Z", 0x2, NULL, NULL },
    { "isInLineSectionWithComVividsolutionsJtsSimplifyTaggedLineString:withIntArray:withComVividsolutionsJtsSimplifyTaggedLineSegment:", "isInLineSection", "Z", 0xa, NULL, NULL },
    { "hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment:withComVividsolutionsJtsGeomLineSegment:", "hasInteriorIntersection", "Z", 0x2, NULL, NULL },
    { "removeWithComVividsolutionsJtsSimplifyTaggedLineString:withInt:withInt:", "remove", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "li_", NULL, 0xa, "Lcom.vividsolutions.jts.algorithm.LineIntersector;", &ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_li_, NULL,  },
    { "inputIndex_", NULL, 0x2, "Lcom.vividsolutions.jts.simplify.LineSegmentIndex;", NULL, NULL,  },
    { "outputIndex_", NULL, 0x2, "Lcom.vividsolutions.jts.simplify.LineSegmentIndex;", NULL, NULL,  },
    { "line_", NULL, 0x2, "Lcom.vividsolutions.jts.simplify.TaggedLineString;", NULL, NULL,  },
    { "linePts_", NULL, 0x2, "[Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "distanceTolerance_", NULL, 0x2, "D", NULL, NULL,  },
    { "validSectionIndex_", NULL, 0x2, "[I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier = { 2, "TaggedLineStringSimplifier", "com.vividsolutions.jts.simplify", NULL, 0x1, 12, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier;
}

@end

void ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_initWithComVividsolutionsJtsSimplifyLineSegmentIndex_withComVividsolutionsJtsSimplifyLineSegmentIndex_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsSimplifyLineSegmentIndex *inputIndex, ComVividsolutionsJtsSimplifyLineSegmentIndex *outputIndex) {
  NSObject_init(self);
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_setAndConsume_inputIndex_(self, new_ComVividsolutionsJtsSimplifyLineSegmentIndex_init());
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_setAndConsume_outputIndex_(self, new_ComVividsolutionsJtsSimplifyLineSegmentIndex_init());
  self->distanceTolerance_ = 0.0;
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_setAndConsume_validSectionIndex_(self, [IOSIntArray newArrayWithLength:2]);
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_set_inputIndex_(self, inputIndex);
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_set_outputIndex_(self, outputIndex);
}

ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *new_ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_initWithComVividsolutionsJtsSimplifyLineSegmentIndex_withComVividsolutionsJtsSimplifyLineSegmentIndex_(ComVividsolutionsJtsSimplifyLineSegmentIndex *inputIndex, ComVividsolutionsJtsSimplifyLineSegmentIndex *outputIndex) {
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self = [ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier alloc];
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_initWithComVividsolutionsJtsSimplifyLineSegmentIndex_withComVividsolutionsJtsSimplifyLineSegmentIndex_(self, inputIndex, outputIndex);
  return self;
}

void ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_simplifySectionWithInt_withInt_withInt_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, jint i, jint j, jint depth) {
  depth += 1;
  IOSIntArray *sectionIndex = [IOSIntArray arrayWithLength:2];
  if ((i + 1) == j) {
    ComVividsolutionsJtsGeomLineSegment *newSeg = [((ComVividsolutionsJtsSimplifyTaggedLineString *) nil_chk(self->line_)) getSegmentWithInt:i];
    [self->line_ addToResultWithComVividsolutionsJtsGeomLineSegment:newSeg];
    return;
  }
  jboolean isValidToSimplify = YES;
  if ([((ComVividsolutionsJtsSimplifyTaggedLineString *) nil_chk(self->line_)) getResultSize] < [self->line_ getMinimumSize]) {
    jint worstCaseSize = depth + 1;
    if (worstCaseSize < [self->line_ getMinimumSize]) isValidToSimplify = NO;
  }
  IOSDoubleArray *distance = [IOSDoubleArray arrayWithLength:1];
  jint furthestPtIndex = ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_findFurthestPointWithComVividsolutionsJtsGeomCoordinateArray_withInt_withInt_withDoubleArray_(self, self->linePts_, i, j, distance);
  if (IOSDoubleArray_Get(distance, 0) > self->distanceTolerance_) isValidToSimplify = NO;
  ComVividsolutionsJtsGeomLineSegment *candidateSeg = [new_ComVividsolutionsJtsGeomLineSegment_init() autorelease];
  ComVividsolutionsJtsGeomLineSegment_set_p0_(candidateSeg, IOSObjectArray_Get(nil_chk(self->linePts_), i));
  ComVividsolutionsJtsGeomLineSegment_set_p1_(candidateSeg, IOSObjectArray_Get(self->linePts_, j));
  *IOSIntArray_GetRef(sectionIndex, 0) = i;
  *IOSIntArray_GetRef(sectionIndex, 1) = j;
  if (ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(self, self->line_, sectionIndex, candidateSeg)) isValidToSimplify = NO;
  if (isValidToSimplify) {
    ComVividsolutionsJtsGeomLineSegment *newSeg = ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_flattenWithInt_withInt_(self, i, j);
    [self->line_ addToResultWithComVividsolutionsJtsGeomLineSegment:newSeg];
    return;
  }
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_simplifySectionWithInt_withInt_withInt_(self, i, furthestPtIndex, depth);
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_simplifySectionWithInt_withInt_withInt_(self, furthestPtIndex, j, depth);
}

jint ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_findFurthestPointWithComVividsolutionsJtsGeomCoordinateArray_withInt_withInt_withDoubleArray_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, IOSObjectArray *pts, jint i, jint j, IOSDoubleArray *maxDistance) {
  ComVividsolutionsJtsGeomLineSegment *seg = [new_ComVividsolutionsJtsGeomLineSegment_init() autorelease];
  ComVividsolutionsJtsGeomLineSegment_set_p0_(seg, IOSObjectArray_Get(nil_chk(pts), i));
  ComVividsolutionsJtsGeomLineSegment_set_p1_(seg, IOSObjectArray_Get(pts, j));
  jdouble maxDist = -1.0;
  jint maxIndex = i;
  for (jint k = i + 1; k < j; k++) {
    ComVividsolutionsJtsGeomCoordinate *midPt = IOSObjectArray_Get(pts, k);
    jdouble distance = [seg distanceWithComVividsolutionsJtsGeomCoordinate:midPt];
    if (distance > maxDist) {
      maxDist = distance;
      maxIndex = k;
    }
  }
  *IOSDoubleArray_GetRef(nil_chk(maxDistance), 0) = maxDist;
  return maxIndex;
}

ComVividsolutionsJtsGeomLineSegment *ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_flattenWithInt_withInt_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, jint start, jint end) {
  ComVividsolutionsJtsGeomCoordinate *p0 = IOSObjectArray_Get(nil_chk(self->linePts_), start);
  ComVividsolutionsJtsGeomCoordinate *p1 = IOSObjectArray_Get(self->linePts_, end);
  ComVividsolutionsJtsGeomLineSegment *newSeg = [new_ComVividsolutionsJtsGeomLineSegment_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p0, p1) autorelease];
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_removeWithComVividsolutionsJtsSimplifyTaggedLineString_withInt_withInt_(self, self->line_, start, end);
  [((ComVividsolutionsJtsSimplifyLineSegmentIndex *) nil_chk(self->outputIndex_)) addWithComVividsolutionsJtsGeomLineSegment:newSeg];
  return newSeg;
}

jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsSimplifyTaggedLineString *parentLine, IOSIntArray *sectionIndex, ComVividsolutionsJtsGeomLineSegment *candidateSeg) {
  if (ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadOutputIntersectionWithComVividsolutionsJtsGeomLineSegment_(self, candidateSeg)) return YES;
  if (ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadInputIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(self, parentLine, sectionIndex, candidateSeg)) return YES;
  return NO;
}

jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadOutputIntersectionWithComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsGeomLineSegment *candidateSeg) {
  id<JavaUtilList> querySegs = [((ComVividsolutionsJtsSimplifyLineSegmentIndex *) nil_chk(self->outputIndex_)) queryWithComVividsolutionsJtsGeomLineSegment:candidateSeg];
  for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk(querySegs)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsGeomLineSegment *querySeg = (ComVividsolutionsJtsGeomLineSegment *) check_class_cast([i next], [ComVividsolutionsJtsGeomLineSegment class]);
    if (ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(self, querySeg, candidateSeg)) {
      return YES;
    }
  }
  return NO;
}

jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasBadInputIntersectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsSimplifyTaggedLineString *parentLine, IOSIntArray *sectionIndex, ComVividsolutionsJtsGeomLineSegment *candidateSeg) {
  id<JavaUtilList> querySegs = [((ComVividsolutionsJtsSimplifyLineSegmentIndex *) nil_chk(self->inputIndex_)) queryWithComVividsolutionsJtsGeomLineSegment:candidateSeg];
  for (id<JavaUtilIterator> i = [((id<JavaUtilList>) nil_chk(querySegs)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComVividsolutionsJtsSimplifyTaggedLineSegment *querySeg = (ComVividsolutionsJtsSimplifyTaggedLineSegment *) check_class_cast([i next], [ComVividsolutionsJtsSimplifyTaggedLineSegment class]);
    if (ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(self, querySeg, candidateSeg)) {
      if (ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_isInLineSectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsSimplifyTaggedLineSegment_(parentLine, sectionIndex, querySeg)) continue;
      return YES;
    }
  }
  return NO;
}

jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_isInLineSectionWithComVividsolutionsJtsSimplifyTaggedLineString_withIntArray_withComVividsolutionsJtsSimplifyTaggedLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineString *line, IOSIntArray *sectionIndex, ComVividsolutionsJtsSimplifyTaggedLineSegment *seg) {
  ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_initialize();
  if ([((ComVividsolutionsJtsSimplifyTaggedLineSegment *) nil_chk(seg)) getParent] != [((ComVividsolutionsJtsSimplifyTaggedLineString *) nil_chk(line)) getParent]) return NO;
  jint segIndex = [seg getIndex];
  if (segIndex >= IOSIntArray_Get(nil_chk(sectionIndex), 0) && segIndex < IOSIntArray_Get(sectionIndex, 1)) return YES;
  return NO;
}

jboolean ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_hasInteriorIntersectionWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsGeomLineSegment *seg0, ComVividsolutionsJtsGeomLineSegment *seg1) {
  [((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_li_)) computeIntersectionWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(seg0))->p0_ withComVividsolutionsJtsGeomCoordinate:seg0->p1_ withComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(seg1))->p0_ withComVividsolutionsJtsGeomCoordinate:seg1->p1_];
  return [ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_li_ isInteriorIntersection];
}

void ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier_removeWithComVividsolutionsJtsSimplifyTaggedLineString_withInt_withInt_(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier *self, ComVividsolutionsJtsSimplifyTaggedLineString *line, jint start, jint end) {
  for (jint i = start; i < end; i++) {
    ComVividsolutionsJtsSimplifyTaggedLineSegment *seg = [((ComVividsolutionsJtsSimplifyTaggedLineString *) nil_chk(line)) getSegmentWithInt:i];
    [((ComVividsolutionsJtsSimplifyLineSegmentIndex *) nil_chk(self->inputIndex_)) removeWithComVividsolutionsJtsGeomLineSegment:seg];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsSimplifyTaggedLineStringSimplifier)
