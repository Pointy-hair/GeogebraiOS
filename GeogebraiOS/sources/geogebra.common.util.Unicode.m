//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/util/Unicode.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/util/Unicode.h"
#include "java/lang/Character.h"
#include "java/lang/StringBuilder.h"

J2OBJC_INITIALIZED_DEFN(GeogebraCommonUtilUnicode)

NSString *GeogebraCommonUtilUnicode_angleSpace_ = @"\u2221 ";
NSString *GeogebraCommonUtilUnicode_MinusInfinity_ = @"-\u221e";
NSString *GeogebraCommonUtilUnicode_RightToLeftUnaryMinusSign_ = @"\u200f-\u200f";
NSString *GeogebraCommonUtilUnicode_superscriptMinusOneBracket_ = @"\u207b\u00b9(";
NSString *GeogebraCommonUtilUnicode_degree_;
NSString *GeogebraCommonUtilUnicode_EULER_STRING_ = @"\u212f";
NSString *GeogebraCommonUtilUnicode_EULER_GAMMA_STRING_ = @"\u212f_\u03b3";
NSString *GeogebraCommonUtilUnicode_PI_STRING_;
NSString *GeogebraCommonUtilUnicode_alphaBetaGamma_ = @"\u03b1\u03b2\u03b3";
NSString *GeogebraCommonUtilUnicode_PLUSMINUS_ = @"\u00b1";
NSString *GeogebraCommonUtilUnicode_NOTEQUAL_ = @"\u2260";
NSString *GeogebraCommonUtilUnicode_QUESTEQ_ = @"\u225f";
NSString *GeogebraCommonUtilUnicode_IMAGINARY_ = @"\u03af";
NSString *GeogebraCommonUtilUnicode_NBSP_ = @"\u00a0";
NSString *GeogebraCommonUtilUnicode_translationFixHu_endE1_ = @"bcde\u00e9fgi\u00edjlmnprstvwxz1479'";
NSString *GeogebraCommonUtilUnicode_translationFixHu_endO1_ = @"ahko\u00f3qu\u00fay368";
NSString *GeogebraCommonUtilUnicode_translationFixHu_endOE1_ = @"\u00f6\u0151\u00fc\u017125";
NSString *GeogebraCommonUtilUnicode_translationFixHu_oe_ = @"\u00f6";
NSString *GeogebraCommonUtilUnicode_translationFixHu_hoez_ = @"h\u00f6z";
NSString *GeogebraCommonUtilUnicode_fraction1_8_ = @"\u215b";
NSString *GeogebraCommonUtilUnicode_fraction1_4_ = @"\u00bc";
NSString *GeogebraCommonUtilUnicode_fraction3_8_ = @"\u215c";
NSString *GeogebraCommonUtilUnicode_fraction1_2_ = @"\u00bd";
NSString *GeogebraCommonUtilUnicode_fraction5_8_ = @"\u215d";
NSString *GeogebraCommonUtilUnicode_fraction3_4_ = @"\u00be";
NSString *GeogebraCommonUtilUnicode_fraction7_8_ = @"\u215e";
NSString *GeogebraCommonUtilUnicode_divide_ = @"\u00f7";
NSString *GeogebraCommonUtilUnicode_charactersWithDescenders_ = @"\u00b5\u1ef3\u0177\u0135\u0157\u0163\u0137\u015f\u0137\u013c\u00e7\u0146\u1ef9\u011f\u011d\u0123\u00fdgjy\u03be\u03b2\u03c8\u03b3\u03b7\u03c2\u0444\u0449\u0446\u0d71\u0d6c\u0d6b\u0d33\u0d67\u0630\u0648\u0635\u0628\u0631\u064d\u0633\u062e\u064a\u064d";
NSString *GeogebraCommonUtilUnicode_CAS_OUTPUT_PREFIX_RTL_ = @"\u2190";
NSString *GeogebraCommonUtilUnicode_CAS_OUTPUT_PREFIX_ = @"\u2192";
NSString *GeogebraCommonUtilUnicode_CAS_OUTPUT_KEEPINPUT_ = @"\u2713";
NSString *GeogebraCommonUtilUnicode_CAS_OUTPUT_NUMERIC_ = @"\u2248";

@implementation GeogebraCommonUtilUnicode

+ (NSString *)numberToIndexWithInt:(jint)i {
  return GeogebraCommonUtilUnicode_numberToIndexWithInt_(i);
}

+ (jboolean)isSuperscriptDigitWithChar:(jchar)c {
  return GeogebraCommonUtilUnicode_isSuperscriptDigitWithChar_(c);
}

+ (IOSObjectArray *)getSetOfSymbolsWithInt:(jint)symbolsStartValue
                                   withInt:(jint)symbolsNumber {
  return GeogebraCommonUtilUnicode_getSetOfSymbolsWithInt_withInt_(symbolsStartValue, symbolsNumber);
}

- (instancetype)init {
  GeogebraCommonUtilUnicode_init(self);
  return self;
}

+ (void)initialize {
  if (self == [GeogebraCommonUtilUnicode class]) {
    JreStrongAssign(&GeogebraCommonUtilUnicode_degree_, nil, JavaLangCharacter_toStringWithChar_(GeogebraCommonUtilUnicode_degreeChar));
    JreStrongAssign(&GeogebraCommonUtilUnicode_PI_STRING_, nil, JavaLangCharacter_toStringWithChar_(GeogebraCommonUtilUnicode_piChar));
    J2OBJC_SET_INITIALIZED(GeogebraCommonUtilUnicode)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "numberToIndexWithInt:", "numberToIndex", "Ljava.lang.String;", 0x19, NULL, NULL },
    { "isSuperscriptDigitWithChar:", "isSuperscriptDigit", "Z", 0x19, NULL, NULL },
    { "getSetOfSymbolsWithInt:withInt:", "getSetOfSymbols", "[Ljava.lang.String;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "angle_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_angle },
    { "angleSpace_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_angleSpace_, NULL,  },
    { "minus_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_minus },
    { "LESS_EQUAL_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_LESS_EQUAL },
    { "GREATER_EQUAL_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_GREATER_EQUAL },
    { "Infinity_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Infinity },
    { "MinusInfinity_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_MinusInfinity_, NULL,  },
    { "Superscript_Minus_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_Minus },
    { "Superscript_0_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_0 },
    { "Superscript_1_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_1 },
    { "Superscript_2_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_2 },
    { "Superscript_3_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_3 },
    { "Superscript_4_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_4 },
    { "Superscript_5_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_5 },
    { "Superscript_6_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_6 },
    { "Superscript_7_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_7 },
    { "Superscript_8_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_8 },
    { "Superscript_9_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Superscript_9 },
    { "RightToLeftMark_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_RightToLeftMark },
    { "RightToLeftUnaryMinusSign_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_RightToLeftUnaryMinusSign_, NULL,  },
    { "LeftToRightMark_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_LeftToRightMark },
    { "superscriptMinusOneBracket_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_superscriptMinusOneBracket_, NULL,  },
    { "degreeChar_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_degreeChar },
    { "degree_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_degree_, NULL,  },
    { "eGrave_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_eGrave },
    { "eAcute_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_eAcute },
    { "eulerChar_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_eulerChar },
    { "EULER_STRING_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_EULER_STRING_, NULL,  },
    { "EULER_GAMMA_STRING_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_EULER_GAMMA_STRING_, NULL,  },
    { "piChar_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_piChar },
    { "PI_STRING_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_PI_STRING_, NULL,  },
    { "alphaBetaGamma_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_alphaBetaGamma_, NULL,  },
    { "alpha_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_alpha },
    { "beta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_beta },
    { "gamma_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_gamma },
    { "delta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_delta },
    { "epsilon_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_epsilon },
    { "zeta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_zeta },
    { "eta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_eta },
    { "theta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_theta },
    { "iota_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_iota },
    { "kappa_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_kappa },
    { "lambda_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_lambda },
    { "mu_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_mu },
    { "nu_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_nu },
    { "xi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_xi },
    { "omicron_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_omicron },
    { "pi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_pi },
    { "rho_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_rho },
    { "sigmaf_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_sigmaf },
    { "sigma_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_sigma },
    { "tau_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_tau },
    { "upsilon_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_upsilon },
    { "phi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_phi },
    { "phi_symbol_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_phi_symbol },
    { "chi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_chi },
    { "psi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_psi },
    { "omega_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_omega },
    { "Alpha_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Alpha },
    { "Beta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Beta },
    { "Gamma_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Gamma },
    { "Delta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Delta },
    { "Epsilon_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Epsilon },
    { "Zeta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Zeta },
    { "Eta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Eta },
    { "Theta_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Theta },
    { "Iota_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Iota },
    { "Kappa_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Kappa },
    { "Lambda_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Lambda },
    { "Mu_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Mu },
    { "Nu_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Nu },
    { "Xi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Xi },
    { "Omicron_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Omicron },
    { "Pi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Pi },
    { "Rho_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Rho },
    { "Sigma_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Sigma },
    { "Tau_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Tau },
    { "Upsilon_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Upsilon },
    { "Phi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Phi },
    { "Chi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Chi },
    { "Psi_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Psi },
    { "Omega_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_Omega },
    { "SQUARE_ROOT_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_SQUARE_ROOT },
    { "PLUSMINUS_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_PLUSMINUS_, NULL,  },
    { "NOTEQUAL_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_NOTEQUAL_, NULL,  },
    { "QUESTEQ_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_QUESTEQ_, NULL,  },
    { "FEMININE_ORDINAL_INDICATOR_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_FEMININE_ORDINAL_INDICATOR },
    { "IMAGINARY_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_IMAGINARY_, NULL,  },
    { "NBSP_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_NBSP_, NULL,  },
    { "translationFixHu_endE1_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_translationFixHu_endE1_, NULL,  },
    { "translationFixHu_endO1_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_translationFixHu_endO1_, NULL,  },
    { "translationFixHu_endOE1_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_translationFixHu_endOE1_, NULL,  },
    { "translationFixHu_oe_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_translationFixHu_oe_, NULL,  },
    { "translationFixHu_hoez_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_translationFixHu_hoez_, NULL,  },
    { "fraction1_8_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_fraction1_8_, NULL,  },
    { "fraction1_4_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_fraction1_4_, NULL,  },
    { "fraction3_8_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_fraction3_8_, NULL,  },
    { "fraction1_2_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_fraction1_2_, NULL,  },
    { "fraction5_8_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_fraction5_8_, NULL,  },
    { "fraction3_4_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_fraction3_4_, NULL,  },
    { "fraction7_8_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_fraction7_8_, NULL,  },
    { "multiply_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_multiply },
    { "divide_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_divide_, NULL,  },
    { "charactersWithDescenders_", NULL, 0x19, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_charactersWithDescenders_, NULL,  },
    { "nDash_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_nDash },
    { "ArabicComma_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_ArabicComma },
    { "ellipsis_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_ellipsis },
    { "VECTOR_PRODUCT_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_VECTOR_PRODUCT },
    { "OPEN_DOUBLE_QUOTE_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_OPEN_DOUBLE_QUOTE },
    { "CLOSE_DOUBLE_QUOTE_", NULL, 0x19, "C", NULL, NULL, .constantValue.asUnichar = GeogebraCommonUtilUnicode_CLOSE_DOUBLE_QUOTE },
    { "CAS_OUTPUT_PREFIX_RTL_", NULL, 0x9, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_CAS_OUTPUT_PREFIX_RTL_, NULL,  },
    { "CAS_OUTPUT_PREFIX_", NULL, 0x9, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_CAS_OUTPUT_PREFIX_, NULL,  },
    { "CAS_OUTPUT_KEEPINPUT_", NULL, 0x9, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_CAS_OUTPUT_KEEPINPUT_, NULL,  },
    { "CAS_OUTPUT_NUMERIC_", NULL, 0x9, "Ljava.lang.String;", &GeogebraCommonUtilUnicode_CAS_OUTPUT_NUMERIC_, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonUtilUnicode = { 2, "Unicode", "geogebra.common.util", NULL, 0x1, 4, methods, 114, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonUtilUnicode;
}

@end

NSString *GeogebraCommonUtilUnicode_numberToIndexWithInt_(jint i) {
  GeogebraCommonUtilUnicode_initialize();
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  if (i < 0) {
    [sb appendWithChar:GeogebraCommonUtilUnicode_Superscript_Minus];
    i = -i;
  }
  if (i == 0) {
    [sb appendWithChar:GeogebraCommonUtilUnicode_Superscript_0];
  }
  else {
    while (i > 0) {
      switch (i % 10) {
        case 0:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_0];
        break;
        case 1:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_1];
        break;
        case 2:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_2];
        break;
        case 3:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_3];
        break;
        case 4:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_4];
        break;
        case 5:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_5];
        break;
        case 6:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_6];
        break;
        case 7:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_7];
        break;
        case 8:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_8];
        break;
        case 9:
        [sb insertWithInt:0 withChar:GeogebraCommonUtilUnicode_Superscript_9];
        break;
      }
      i = i / 10;
    }
  }
  return [sb description];
}

jboolean GeogebraCommonUtilUnicode_isSuperscriptDigitWithChar_(jchar c) {
  GeogebraCommonUtilUnicode_initialize();
  return ((c >= GeogebraCommonUtilUnicode_Superscript_0) && (c <= GeogebraCommonUtilUnicode_Superscript_9)) || (c == GeogebraCommonUtilUnicode_Superscript_1) || (c == GeogebraCommonUtilUnicode_Superscript_2) || (c == GeogebraCommonUtilUnicode_Superscript_3);
}

IOSObjectArray *GeogebraCommonUtilUnicode_getSetOfSymbolsWithInt_withInt_(jint symbolsStartValue, jint symbolsNumber) {
  GeogebraCommonUtilUnicode_initialize();
  IOSObjectArray *symbols = [IOSObjectArray arrayWithLength:symbolsNumber type:NSString_class_()];
  for (jint i = 0; i < symbolsNumber; i++) {
    IOSObjectArray_Set(symbols, i, JreStrcat("C", (jchar) (symbolsStartValue + i)));
  }
  return symbols;
}

void GeogebraCommonUtilUnicode_init(GeogebraCommonUtilUnicode *self) {
  NSObject_init(self);
}

GeogebraCommonUtilUnicode *new_GeogebraCommonUtilUnicode_init() {
  GeogebraCommonUtilUnicode *self = [GeogebraCommonUtilUnicode alloc];
  GeogebraCommonUtilUnicode_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonUtilUnicode)
