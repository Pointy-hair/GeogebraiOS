//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java
//


#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.h"
#include "edu/uci/ics/jung/algorithms/util/BasicMapEntry.h"
#include "edu/uci/ics/jung/algorithms/util/MapBinaryHeap.h"
#include "edu/uci/ics/jung/graph/Graph.h"
#include "edu/uci/ics/jung/graph/Hypergraph.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/Transformer.h"
#include "org/apache/commons/collections15/functors/ConstantTransformer.h"

@interface EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator () {
 @public
  id<JavaUtilMap> distances_;
}

@end

J2OBJC_FIELD_SETTER(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator, distances_, id<JavaUtilMap>)

@implementation EduUciIcsJungAlgorithmsShortestpathDijkstraDistance

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
        withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)nev
                                         withBoolean:(jboolean)cached {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withBoolean_(self, g, nev, cached);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphHypergraph:(id<EduUciIcsJungGraphHypergraph>)g
        withOrgApacheCommonsCollections15Transformer:(id<OrgApacheCommonsCollections15Transformer>)nev {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_(self, g, nev);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)g {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_(self, g);
  return self;
}

- (instancetype)initWithEduUciIcsJungGraphGraph:(id<EduUciIcsJungGraphGraph>)g
                                    withBoolean:(jboolean)cached {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_withBoolean_(self, g, cached);
  return self;
}

- (JavaUtilLinkedHashMap *)singleSourceShortestPathWithId:(id)source
                                   withJavaUtilCollection:(id<JavaUtilCollection>)targets
                                                  withInt:(jint)numDests {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *sd = [self getSourceDataWithId:source];
  id<JavaUtilSet> to_get = [new_JavaUtilHashSet_init() autorelease];
  if (targets != nil) {
    [to_get addAllWithJavaUtilCollection:targets];
    id<JavaUtilSet> existing_dists = [((JavaUtilLinkedHashMap *) nil_chk(((EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *) nil_chk(sd))->distances_)) keySet];
    for (id __strong o in targets) {
      if ([((id<JavaUtilSet>) nil_chk(existing_dists)) containsWithId:o]) [to_get removeWithId:o];
    }
  }
  if (((EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *) nil_chk(sd))->reached_max_ || (targets != nil && [to_get isEmpty]) || ([((JavaUtilLinkedHashMap *) nil_chk(sd->distances_)) size] >= numDests)) {
    return sd->distances_;
  }
  while (![((EduUciIcsJungAlgorithmsUtilMapBinaryHeap *) nil_chk(sd->unknownVertices_)) isEmpty] && ([((JavaUtilLinkedHashMap *) nil_chk(sd->distances_)) size] < numDests || ![to_get isEmpty])) {
    id<JavaUtilMap_Entry> p = [sd getNextVertex];
    id v = [((id<JavaUtilMap_Entry>) nil_chk(p)) getKey];
    jdouble v_dist = [((NSNumber *) nil_chk([p getValue])) doubleValue];
    [to_get removeWithId:v];
    if (v_dist > self->max_distance_) {
      [sd restoreVertexWithId:v withDouble:v_dist];
      sd->reached_max_ = YES;
      break;
    }
    sd->dist_reached_ = v_dist;
    if ([((JavaUtilLinkedHashMap *) nil_chk(sd->distances_)) size] >= self->max_targets_) {
      sd->reached_max_ = YES;
      break;
    }
    for (id __strong e in nil_chk([self getEdgesToCheckWithId:v])) {
      for (id __strong w in nil_chk([((id<EduUciIcsJungGraphHypergraph>) nil_chk(g_)) getIncidentVerticesWithId:e])) {
        if (![sd->distances_ containsKeyWithId:w]) {
          jdouble edge_weight = [((NSNumber *) nil_chk([((id<OrgApacheCommonsCollections15Transformer>) nil_chk(nev_)) transformWithId:e])) doubleValue];
          if (edge_weight < 0) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Edges weights must be non-negative") autorelease];
          jdouble new_dist = v_dist + edge_weight;
          if (![((id<JavaUtilMap>) nil_chk(sd->estimatedDistances_)) containsKeyWithId:w]) {
            [sd createRecordWithId:w withId:e withDouble:new_dist];
          }
          else {
            jdouble w_dist = [((JavaLangDouble *) nil_chk(((JavaLangDouble *) check_class_cast([sd->estimatedDistances_ getWithId:w], [JavaLangDouble class])))) doubleValue];
            if (new_dist < w_dist) [sd updateWithId:w withId:e withDouble:new_dist];
          }
        }
      }
    }
  }
  return sd->distances_;
}

- (EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *)getSourceDataWithId:(id)source {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *sd = [((id<JavaUtilMap>) nil_chk(sourceMap_)) getWithId:source];
  if (sd == nil) sd = [new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_initWithEduUciIcsJungAlgorithmsShortestpathDijkstraDistance_withId_(self, source) autorelease];
  return sd;
}

- (id<JavaUtilCollection>)getEdgesToCheckWithId:(id)v {
  if ([EduUciIcsJungGraphGraph_class_() isInstance:g_]) return [((id<EduUciIcsJungGraphGraph>) nil_chk(((id<EduUciIcsJungGraphGraph>) check_protocol_cast(g_, @protocol(EduUciIcsJungGraphGraph))))) getOutEdgesWithId:v];
  else return [((id<EduUciIcsJungGraphHypergraph>) nil_chk(g_)) getIncidentEdgesWithId:v];
}

- (NSNumber *)getDistanceWithId:(id)source
                         withId:(id)target {
  if ([((id<EduUciIcsJungGraphHypergraph>) nil_chk(g_)) containsVertexWithId:target] == NO) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Specified target vertex ", target, @" is not part of graph ", g_)) autorelease];
  if ([g_ containsVertexWithId:source] == NO) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Specified source vertex ", source, @" is not part of graph ", g_)) autorelease];
  id<JavaUtilSet> targets = [new_JavaUtilHashSet_init() autorelease];
  [targets addWithId:target];
  id<JavaUtilMap> distanceMap = [self getDistanceMapWithId:source withJavaUtilCollection:targets];
  return [((id<JavaUtilMap>) nil_chk(distanceMap)) getWithId:target];
}

- (id<JavaUtilMap>)getDistanceMapWithId:(id)source
                 withJavaUtilCollection:(id<JavaUtilCollection>)targets {
  if ([((id<EduUciIcsJungGraphHypergraph>) nil_chk(g_)) containsVertexWithId:source] == NO) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Specified source vertex ", source, @" is not part of graph ", g_)) autorelease];
  if ([((id<JavaUtilCollection>) nil_chk(targets)) size] > max_targets_) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"size of target set exceeds maximum number of targets allowed: ", self->max_targets_)) autorelease];
  id<JavaUtilMap> distanceMap = [self singleSourceShortestPathWithId:source withJavaUtilCollection:targets withInt:JavaLangMath_minWithInt_withInt_([g_ getVertexCount], max_targets_)];
  if (!cached_) [self resetWithId:source];
  return distanceMap;
}

- (id<JavaUtilMap>)getDistanceMapWithId:(id)source {
  return [self getDistanceMapWithId:source withInt:JavaLangMath_minWithInt_withInt_([((id<EduUciIcsJungGraphHypergraph>) nil_chk(g_)) getVertexCount], max_targets_)];
}

- (JavaUtilLinkedHashMap *)getDistanceMapWithId:(id)source
                                        withInt:(jint)numDests {
  if ([((id<JavaUtilCollection>) nil_chk([((id<EduUciIcsJungGraphHypergraph>) nil_chk(g_)) getVertices])) containsWithId:source] == NO) {
    @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Specified source vertex ", source, @" is not part of graph ", g_)) autorelease];
  }
  if (numDests < 1 || numDests > [g_ getVertexCount]) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"numDests must be >= 1 and <= g.numVertices()") autorelease];
  if (numDests > max_targets_) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"numDests must be <= the maximum number of targets allowed: ", self->max_targets_)) autorelease];
  JavaUtilLinkedHashMap *distanceMap = [self singleSourceShortestPathWithId:source withJavaUtilCollection:nil withInt:numDests];
  if (!cached_) [self resetWithId:source];
  return distanceMap;
}

- (void)setMaxDistanceWithDouble:(jdouble)max_dist {
  self->max_distance_ = max_dist;
  for (id __strong v in nil_chk([((id<JavaUtilMap>) nil_chk(sourceMap_)) keySet])) {
    EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *sd = [sourceMap_ getWithId:v];
    ((EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *) nil_chk(sd))->reached_max_ = ((self->max_distance_ <= sd->dist_reached_) || ([((JavaUtilLinkedHashMap *) nil_chk(sd->distances_)) size] >= max_targets_));
  }
}

- (void)setMaxTargetsWithInt:(jint)max_targets {
  self->max_targets_ = max_targets;
  for (id __strong v in nil_chk([((id<JavaUtilMap>) nil_chk(sourceMap_)) keySet])) {
    EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *sd = [sourceMap_ getWithId:v];
    ((EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *) nil_chk(sd))->reached_max_ = ((self->max_distance_ <= sd->dist_reached_) || ([((JavaUtilLinkedHashMap *) nil_chk(sd->distances_)) size] >= max_targets));
  }
}

- (void)reset {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_setAndConsume_sourceMap_(self, new_JavaUtilHashMap_init());
}

- (void)enableCachingWithBoolean:(jboolean)enable {
  self->cached_ = enable;
}

- (void)resetWithId:(id)source {
  [((id<JavaUtilMap>) nil_chk(sourceMap_)) putWithId:source withId:nil];
}

- (void)dealloc {
  RELEASE_(g_);
  RELEASE_(nev_);
  RELEASE_(sourceMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Transformer:withBoolean:", "DijkstraDistance", NULL, 0x1, NULL, NULL },
    { "initWithEduUciIcsJungGraphHypergraph:withOrgApacheCommonsCollections15Transformer:", "DijkstraDistance", NULL, 0x1, NULL, NULL },
    { "initWithEduUciIcsJungGraphGraph:", "DijkstraDistance", NULL, 0x1, NULL, NULL },
    { "initWithEduUciIcsJungGraphGraph:withBoolean:", "DijkstraDistance", NULL, 0x1, NULL, NULL },
    { "singleSourceShortestPathWithId:withJavaUtilCollection:withInt:", "singleSourceShortestPath", "Ljava.util.LinkedHashMap;", 0x4, NULL, "(TV;Ljava/util/Collection<TV;>;I)Ljava/util/LinkedHashMap<TV;Ljava/lang/Number;>;" },
    { "getSourceDataWithId:", "getSourceData", "Ledu.uci.ics.jung.algorithms.shortestpath.DijkstraDistance$SourceData;", 0x4, NULL, "(TV;)Ledu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance$SourceData;" },
    { "getEdgesToCheckWithId:", "getEdgesToCheck", "Ljava.util.Collection;", 0x4, NULL, "(TV;)Ljava/util/Collection<TE;>;" },
    { "getDistanceWithId:withId:", "getDistance", "Ljava.lang.Number;", 0x1, NULL, "(TV;TV;)Ljava/lang/Number;" },
    { "getDistanceMapWithId:withJavaUtilCollection:", "getDistanceMap", "Ljava.util.Map;", 0x1, NULL, "(TV;Ljava/util/Collection<TV;>;)Ljava/util/Map<TV;Ljava/lang/Number;>;" },
    { "getDistanceMapWithId:", "getDistanceMap", "Ljava.util.Map;", 0x1, NULL, "(TV;)Ljava/util/Map<TV;Ljava/lang/Number;>;" },
    { "getDistanceMapWithId:withInt:", "getDistanceMap", "Ljava.util.LinkedHashMap;", 0x1, NULL, "(TV;I)Ljava/util/LinkedHashMap<TV;Ljava/lang/Number;>;" },
    { "setMaxDistanceWithDouble:", "setMaxDistance", "V", 0x1, NULL, NULL },
    { "setMaxTargetsWithInt:", "setMaxTargets", "V", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "enableCachingWithBoolean:", "enableCaching", "V", 0x1, NULL, NULL },
    { "resetWithId:", "reset", "V", 0x1, NULL, "(TV;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "g_", NULL, 0x4, "Ledu.uci.ics.jung.graph.Hypergraph;", NULL, "Ledu/uci/ics/jung/graph/Hypergraph<TV;TE;>;",  },
    { "nev_", NULL, 0x4, "Lorg.apache.commons.collections15.Transformer;", NULL, "Lorg/apache/commons/collections15/Transformer<TE;+Ljava/lang/Number;>;",  },
    { "sourceMap_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;Ledu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance$SourceData;>;",  },
    { "cached_", NULL, 0x4, "Z", NULL, NULL,  },
    { "max_distance_", NULL, 0x4, "D", NULL, NULL,  },
    { "max_targets_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Ledu.uci.ics.jung.algorithms.shortestpath.DijkstraDistance$VertexComparator;", "Ledu.uci.ics.jung.algorithms.shortestpath.DijkstraDistance$SourceData;"};
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsShortestpathDijkstraDistance = { 2, "DijkstraDistance", "edu.uci.ics.jung.algorithms.shortestpath", NULL, 0x1, 16, methods, 6, fields, 0, NULL, 2, inner_classes, NULL, "<V:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Ledu/uci/ics/jung/algorithms/shortestpath/Distance<TV;>;" };
  return &_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance;
}

@end

void EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withBoolean_(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self, id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> nev, jboolean cached) {
  NSObject_init(self);
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_set_g_(self, g);
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_set_nev_(self, nev);
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_setAndConsume_sourceMap_(self, new_JavaUtilHashMap_init());
  self->cached_ = cached;
  self->max_distance_ = JavaLangDouble_POSITIVE_INFINITY;
  self->max_targets_ = JavaLangInteger_MAX_VALUE;
}

EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withBoolean_(id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> nev, jboolean cached) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self = [EduUciIcsJungAlgorithmsShortestpathDijkstraDistance alloc];
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withBoolean_(self, g, nev, cached);
  return self;
}

void EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self, id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> nev) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withBoolean_(self, g, nev, YES);
}

EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_(id<EduUciIcsJungGraphHypergraph> g, id<OrgApacheCommonsCollections15Transformer> nev) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self = [EduUciIcsJungAlgorithmsShortestpathDijkstraDistance alloc];
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_(self, g, nev);
  return self;
}

void EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self, id<EduUciIcsJungGraphGraph> g) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withBoolean_(self, g, [new_OrgApacheCommonsCollections15FunctorsConstantTransformer_initWithId_(JavaLangInteger_valueOfWithInt_(1)) autorelease], YES);
}

EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_(id<EduUciIcsJungGraphGraph> g) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self = [EduUciIcsJungAlgorithmsShortestpathDijkstraDistance alloc];
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_(self, g);
  return self;
}

void EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_withBoolean_(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self, id<EduUciIcsJungGraphGraph> g, jboolean cached) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphHypergraph_withOrgApacheCommonsCollections15Transformer_withBoolean_(self, g, [new_OrgApacheCommonsCollections15FunctorsConstantTransformer_initWithId_(JavaLangInteger_valueOfWithInt_(1)) autorelease], cached);
}

EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_withBoolean_(id<EduUciIcsJungGraphGraph> g, jboolean cached) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *self = [EduUciIcsJungAlgorithmsShortestpathDijkstraDistance alloc];
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_initWithEduUciIcsJungGraphGraph_withBoolean_(self, g, cached);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance)

@implementation EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)distances {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator_initWithJavaUtilMap_(self, distances);
  return self;
}

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  return [((JavaLangDouble *) nil_chk(((JavaLangDouble *) check_class_cast([((id<JavaUtilMap>) nil_chk(distances_)) getWithId:o1], [JavaLangDouble class])))) compareToWithId:(JavaLangDouble *) check_class_cast([distances_ getWithId:o2], [JavaLangDouble class])];
}

- (void)dealloc {
  RELEASE_(distances_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilMap:", "VertexComparator", NULL, 0x4, NULL, NULL },
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, "(TV;TV;)I" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "distances_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;Ljava/lang/Number;>;",  },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator = { 2, "VertexComparator", "edu.uci.ics.jung.algorithms.shortestpath", "DijkstraDistance", 0xc, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Comparator<TV;>;" };
  return &_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator;
}

@end

void EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator_initWithJavaUtilMap_(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator *self, id<JavaUtilMap> distances) {
  NSObject_init(self);
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator_set_distances_(self, distances);
}

EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator *new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator_initWithJavaUtilMap_(id<JavaUtilMap> distances) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator *self = [EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator alloc];
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator_initWithJavaUtilMap_(self, distances);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator)

@implementation EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData

- (instancetype)initWithEduUciIcsJungAlgorithmsShortestpathDijkstraDistance:(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *)outer$
                                                                     withId:(id)source {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_initWithEduUciIcsJungAlgorithmsShortestpathDijkstraDistance_withId_(self, outer$, source);
  return self;
}

- (id<JavaUtilMap_Entry>)getNextVertex {
  id v = [((EduUciIcsJungAlgorithmsUtilMapBinaryHeap *) nil_chk(unknownVertices_)) remove];
  JavaLangDouble *dist = (JavaLangDouble *) check_class_cast([((id<JavaUtilMap>) nil_chk(estimatedDistances_)) removeWithId:v], [JavaLangDouble class]);
  [((JavaUtilLinkedHashMap *) nil_chk(distances_)) putWithId:v withId:dist];
  return [new_EduUciIcsJungAlgorithmsUtilBasicMapEntry_initWithId_withId_(v, dist) autorelease];
}

- (void)updateWithId:(id)dest
              withId:(id)tentative_edge
          withDouble:(jdouble)new_dist {
  [((id<JavaUtilMap>) nil_chk(estimatedDistances_)) putWithId:dest withId:JavaLangDouble_valueOfWithDouble_(new_dist)];
  [((EduUciIcsJungAlgorithmsUtilMapBinaryHeap *) nil_chk(unknownVertices_)) updateWithId:dest];
}

- (void)createRecordWithId:(id)w
                    withId:(id)e
                withDouble:(jdouble)new_dist {
  [((id<JavaUtilMap>) nil_chk(estimatedDistances_)) putWithId:w withId:JavaLangDouble_valueOfWithDouble_(new_dist)];
  [((EduUciIcsJungAlgorithmsUtilMapBinaryHeap *) nil_chk(unknownVertices_)) addWithId:w];
}

- (void)restoreVertexWithId:(id)v
                 withDouble:(jdouble)dist {
  [((id<JavaUtilMap>) nil_chk(estimatedDistances_)) putWithId:v withId:JavaLangDouble_valueOfWithDouble_(dist)];
  [((EduUciIcsJungAlgorithmsUtilMapBinaryHeap *) nil_chk(unknownVertices_)) addWithId:v];
  [((JavaUtilLinkedHashMap *) nil_chk(distances_)) removeWithId:v];
}

- (void)dealloc {
  RELEASE_(distances_);
  RELEASE_(estimatedDistances_);
  RELEASE_(unknownVertices_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithEduUciIcsJungAlgorithmsShortestpathDijkstraDistance:withId:", "SourceData", NULL, 0x4, NULL, "(Ledu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance;TV;)V" },
    { "getNextVertex", NULL, "Ljava.util.Map$Entry;", 0x4, NULL, NULL },
    { "updateWithId:withId:withDouble:", "update", "V", 0x4, NULL, "(TV;TE;D)V" },
    { "createRecordWithId:withId:withDouble:", "createRecord", "V", 0x4, NULL, "(TV;TE;D)V" },
    { "restoreVertexWithId:withDouble:", "restoreVertex", "V", 0x4, NULL, "(TV;D)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "distances_", NULL, 0x4, "Ljava.util.LinkedHashMap;", NULL, "Ljava/util/LinkedHashMap<TV;Ljava/lang/Number;>;",  },
    { "estimatedDistances_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<TV;Ljava/lang/Number;>;",  },
    { "unknownVertices_", NULL, 0x4, "Ledu.uci.ics.jung.algorithms.util.MapBinaryHeap;", NULL, "Ledu/uci/ics/jung/algorithms/util/MapBinaryHeap<TV;>;",  },
    { "reached_max_", NULL, 0x4, "Z", NULL, NULL,  },
    { "dist_reached_", NULL, 0x4, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData = { 2, "SourceData", "edu.uci.ics.jung.algorithms.shortestpath", "DijkstraDistance", 0x4, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData;
}

@end

void EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_initWithEduUciIcsJungAlgorithmsShortestpathDijkstraDistance_withId_(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *self, EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *outer$, id source) {
  NSObject_init(self);
  self->reached_max_ = NO;
  self->dist_reached_ = 0;
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_setAndConsume_distances_(self, new_JavaUtilLinkedHashMap_init());
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_setAndConsume_estimatedDistances_(self, new_JavaUtilHashMap_init());
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_setAndConsume_unknownVertices_(self, new_EduUciIcsJungAlgorithmsUtilMapBinaryHeap_initWithJavaUtilComparator_([new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_VertexComparator_initWithJavaUtilMap_(self->estimatedDistances_) autorelease]));
  [((id<JavaUtilMap>) nil_chk(outer$->sourceMap_)) putWithId:source withId:self];
  [self->estimatedDistances_ putWithId:source withId:[new_JavaLangDouble_initWithDouble_(0) autorelease]];
  [self->unknownVertices_ addWithId:source];
  self->reached_max_ = NO;
  self->dist_reached_ = 0;
}

EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *new_EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_initWithEduUciIcsJungAlgorithmsShortestpathDijkstraDistance_withId_(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance *outer$, id source) {
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData *self = [EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData alloc];
  EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData_initWithEduUciIcsJungAlgorithmsShortestpathDijkstraDistance_withId_(self, outer$, source);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungAlgorithmsShortestpathDijkstraDistance_SourceData)
