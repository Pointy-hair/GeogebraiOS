//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/elements/EquationPointOnPathRestriction.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Path.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoPointOnPath.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/locusequ/EquationElement.h"
#include "geogebra/common/kernel/locusequ/EquationList.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationRestriction.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"
#include "geogebra/common/kernel/locusequ/elements/EquationPointOnPathRestriction.h"

@implementation GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                  withGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algo
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

- (GeogebraCommonKernelLocusequEquationList *)forPointImplWithGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)p {
  GeogebraCommonKernelAlgosAlgoPointOnPath *algo = (GeogebraCommonKernelAlgosAlgoPointOnPath *) check_class_cast([self getAlgo], [GeogebraCommonKernelAlgosAlgoPointOnPath class]);
  GeogebraCommonKernelLocusequEquationList *elist = [new_GeogebraCommonKernelLocusequEquationList_initWithInt_(1) autorelease];
  [elist addAllWithJavaUtilCollection:[((GeogebraCommonKernelLocusequEquationElement *) nil_chk([((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getElementWithGeogebraCommonKernelGeosGeoElement:[((id<GeogebraCommonKernelPath>) nil_chk([((GeogebraCommonKernelAlgosAlgoPointOnPath *) nil_chk(algo)) getPath])) toGeoElement]])) forPointWithGeogebraCommonKernelLocusequEquationPoint:p]];
  return elist;
}

- (jboolean)isAlgebraic {
  return YES;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosAlgoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationPointOnPathRestriction", NULL, 0x1, NULL, NULL },
    { "forPointImplWithGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lgeogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
    { "isAlgebraic", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction = { 2, "EquationPointOnPathRestriction", "geogebra.common.kernel.locusequ.elements", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction;
}

@end

void GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction *self, GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelAlgosAlgoElement *algo, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequEquationRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
}

GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction *new_GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelGeosGeoElement *geo, GeogebraCommonKernelAlgosAlgoElement *algo, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction *self = [GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction alloc];
  GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(self, geo, algo, scope);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequElementsEquationPointOnPathRestriction)
