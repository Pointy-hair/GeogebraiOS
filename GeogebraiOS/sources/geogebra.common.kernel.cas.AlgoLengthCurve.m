//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoLengthCurve.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/cas/AlgoDerivative.h"
#include "geogebra/common/kernel/cas/AlgoIntegralDefinite.h"
#include "geogebra/common/kernel/cas/AlgoLengthCurve.h"
#include "geogebra/common/kernel/cas/AlgoUsingTempCASalgo.h"
#include "geogebra/common/kernel/cas/LengthCurve.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoCurveCartesian.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/roots/RealRootFunction.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelCasAlgoLengthCurve () {
 @public
  GeogebraCommonKernelGeosGeoNumeric *t0_, *t1_;
  GeogebraCommonKernelGeosGeoCurveCartesian *c_;
  GeogebraCommonKernelGeosGeoNumeric *length_;
  id<GeogebraCommonKernelRootsRealRootFunction> lengthCurve_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve, t0_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve, t1_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve, c_, GeogebraCommonKernelGeosGeoCurveCartesian *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve, length_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthCurve, lengthCurve_, id<GeogebraCommonKernelRootsRealRootFunction>)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoLengthCurve_compute(GeogebraCommonKernelCasAlgoLengthCurve *self);

@implementation GeogebraCommonKernelCasAlgoLengthCurve

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
           withGeogebraCommonKernelGeosGeoCurveCartesian:(GeogebraCommonKernelGeosGeoCurveCartesian *)c
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)t0
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)t1 {
  GeogebraCommonKernelCasAlgoLengthCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, c, t0, t1);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Length();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, c_);
  IOSObjectArray_Set(input_, 1, t0_);
  IOSObjectArray_Set(input_, 2, t1_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:length_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getLength {
  return length_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoLengthCurve_compute(self);
}

- (void)refreshCASResults {
  GeogebraCommonKernelCasAlgoUsingTempCASalgo_setAndConsume_algoCAS_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_(cons_, c_));
  GeogebraCommonKernelGeosGeoCurveCartesian *c1 = (GeogebraCommonKernelGeosGeoCurveCartesian *) check_class_cast([((GeogebraCommonKernelCasAlgoDerivative *) check_class_cast(algoCAS_, [GeogebraCommonKernelCasAlgoDerivative class])) getResult], [GeogebraCommonKernelGeosGeoCurveCartesian class]);
  [((GeogebraCommonKernelConstruction *) nil_chk(cons_)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:algoCAS_];
  GeogebraCommonKernelCasAlgoLengthCurve_setAndConsume_lengthCurve_(self, new_GeogebraCommonKernelCasLengthCurve_initWithGeogebraCommonKernelGeosGeoCurveCartesian_(c1));
}

- (void)dealloc {
  RELEASE_(t0_);
  RELEASE_(t1_);
  RELEASE_(c_);
  RELEASE_(length_);
  RELEASE_(lengthCurve_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoCurveCartesian:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoLengthCurve", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getLength", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "refreshCASResults", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "t0_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "t1_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "c_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoCurveCartesian;", NULL, NULL,  },
    { "length_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "lengthCurve_", NULL, 0x2, "Lgeogebra.common.kernel.roots.RealRootFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoLengthCurve = { 2, "AlgoLengthCurve", "geogebra.common.kernel.cas", NULL, 0x1, 6, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoLengthCurve;
}

@end

void GeogebraCommonKernelCasAlgoLengthCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCasAlgoLengthCurve *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoCurveCartesian *c, GeogebraCommonKernelGeosGeoNumeric *t0, GeogebraCommonKernelGeosGeoNumeric *t1) {
  GeogebraCommonKernelCasAlgoUsingTempCASalgo_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoLengthCurve_set_t0_(self, t0);
  GeogebraCommonKernelCasAlgoLengthCurve_set_t1_(self, t1);
  GeogebraCommonKernelCasAlgoLengthCurve_set_c_(self, c);
  GeogebraCommonKernelCasAlgoLengthCurve_setAndConsume_length_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self refreshCASResults];
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoLengthCurve_compute(self);
  [self->length_ setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoLengthCurve *new_GeogebraCommonKernelCasAlgoLengthCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoCurveCartesian *c, GeogebraCommonKernelGeosGeoNumeric *t0, GeogebraCommonKernelGeosGeoNumeric *t1) {
  GeogebraCommonKernelCasAlgoLengthCurve *self = [GeogebraCommonKernelCasAlgoLengthCurve alloc];
  GeogebraCommonKernelCasAlgoLengthCurve_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoCurveCartesian_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, c, t0, t1);
  return self;
}

void GeogebraCommonKernelCasAlgoLengthCurve_compute(GeogebraCommonKernelCasAlgoLengthCurve *self) {
  jdouble a = [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->t0_)) getValue];
  jdouble b = [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->t1_)) getValue];
  jdouble lenVal = JavaLangMath_absWithDouble_(GeogebraCommonKernelCasAlgoIntegralDefinite_numericIntegrationWithGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_(self->lengthCurve_, a, b));
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->length_)) setValueWithDouble:lenVal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoLengthCurve)
