//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/locusequ/EquationRestriction.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/locusequ/EquationElement.h"
#include "geogebra/common/kernel/locusequ/EquationList.h"
#include "geogebra/common/kernel/locusequ/EquationPoint.h"
#include "geogebra/common/kernel/locusequ/EquationRestriction.h"
#include "geogebra/common/kernel/locusequ/EquationScope.h"

@interface GeogebraCommonKernelLocusequEquationRestriction () {
 @public
  GeogebraCommonKernelAlgosAlgoElement *algo_;
  GeogebraCommonKernelLocusequEquationList *equationList_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationRestriction, algo_, GeogebraCommonKernelAlgosAlgoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelLocusequEquationRestriction, equationList_, GeogebraCommonKernelLocusequEquationList *)

@interface GeogebraCommonKernelLocusequEquationRestriction_$1 : GeogebraCommonKernelLocusequEquationRestriction

- (jboolean)isAlgebraic;

- (GeogebraCommonKernelLocusequEquationList *)forPointImplWithGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)p;

- (void)computeEquationList;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelLocusequEquationRestriction_$1)

__attribute__((unused)) static void GeogebraCommonKernelLocusequEquationRestriction_$1_init(GeogebraCommonKernelLocusequEquationRestriction_$1 *self);

__attribute__((unused)) static GeogebraCommonKernelLocusequEquationRestriction_$1 *new_GeogebraCommonKernelLocusequEquationRestriction_$1_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelLocusequEquationRestriction_$1)

@implementation GeogebraCommonKernelLocusequEquationRestriction

- (instancetype)init {
  GeogebraCommonKernelLocusequEquationRestriction_init(self);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)element
                  withGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algo
             withGeogebraCommonKernelLocusequEquationScope:(GeogebraCommonKernelLocusequEquationScope *)scope {
  GeogebraCommonKernelLocusequEquationRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, algo, scope);
  return self;
}

- (GeogebraCommonKernelAlgosAlgoElement *)getAlgo {
  return algo_;
}

- (void)setAlgoWithGeogebraCommonKernelAlgosAlgoElement:(GeogebraCommonKernelAlgosAlgoElement *)algo {
  GeogebraCommonKernelLocusequEquationRestriction_set_algo_(self, algo);
}

- (void)setEquationListWithGeogebraCommonKernelLocusequEquationList:(GeogebraCommonKernelLocusequEquationList *)list {
  GeogebraCommonKernelLocusequEquationRestriction_setAndConsume_equationList_(self, new_GeogebraCommonKernelLocusequEquationList_initWithJavaUtilCollection_(list));
}

- (GeogebraCommonKernelLocusequEquationList *)getEquationList {
  if (self->equationList_ == nil) {
    [self computeEquationList];
  }
  return self->equationList_;
}

- (void)computeEquationList {
  GeogebraCommonKernelLocusequEquationList *list = [new_GeogebraCommonKernelLocusequEquationList_init() autorelease];
  GeogebraCommonKernelAlgosAlgoElement *element = [self getAlgo];
  IOSObjectArray *output = [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(element)) getOutput];
  {
    IOSObjectArray *a__ = output;
    GeogebraCommonKernelGeosGeoElement * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    GeogebraCommonKernelGeosGeoElement * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      GeogebraCommonKernelGeosGeoElement *out = *b__++;
      if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(out)) isGeoPoint]) {
        [list addAllWithJavaUtilCollection:[self forPointWithGeogebraCommonKernelLocusequEquationPoint:[((GeogebraCommonKernelLocusequEquationScope *) nil_chk([self getScope])) getPointWithGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *) check_class_cast(out, [GeogebraCommonKernelGeosGeoPoint class])]]];
      }
    }
  }
  [self setEquationListWithGeogebraCommonKernelLocusequEquationList:list];
}

- (GeogebraCommonKernelGeosGeoPoint *)getResult {
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast([super getResult], [GeogebraCommonKernelGeosGeoPoint class]);
}

- (jboolean)isRestriction {
  return YES;
}

+ (GeogebraCommonKernelLocusequEquationElement *)getEmptyRestriction {
  return GeogebraCommonKernelLocusequEquationRestriction_getEmptyRestriction();
}

- (void)dealloc {
  RELEASE_(algo_);
  RELEASE_(equationList_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "EquationRestriction", NULL, 0x4, NULL, NULL },
    { "initWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosAlgoElement:withGeogebraCommonKernelLocusequEquationScope:", "EquationRestriction", NULL, 0x1, NULL, NULL },
    { "getAlgo", NULL, "Lgeogebra.common.kernel.algos.AlgoElement;", 0x1, NULL, NULL },
    { "setAlgoWithGeogebraCommonKernelAlgosAlgoElement:", "setAlgo", "V", 0x4, NULL, NULL },
    { "setEquationListWithGeogebraCommonKernelLocusequEquationList:", "setEquationList", "V", 0x4, NULL, NULL },
    { "getEquationList", NULL, "Lgeogebra.common.kernel.locusequ.EquationList;", 0x1, NULL, NULL },
    { "computeEquationList", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "isRestriction", NULL, "Z", 0x1, NULL, NULL },
    { "getEmptyRestriction", NULL, "Lgeogebra.common.kernel.locusequ.EquationElement;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "algo_", NULL, 0x2, "Lgeogebra.common.kernel.algos.AlgoElement;", NULL, NULL,  },
    { "equationList_", NULL, 0x2, "Lgeogebra.common.kernel.locusequ.EquationList;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequEquationRestriction = { 2, "EquationRestriction", "geogebra.common.kernel.locusequ", NULL, 0x401, 10, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelLocusequEquationRestriction;
}

@end

void GeogebraCommonKernelLocusequEquationRestriction_init(GeogebraCommonKernelLocusequEquationRestriction *self) {
  GeogebraCommonKernelLocusequEquationElement_init(self);
}

void GeogebraCommonKernelLocusequEquationRestriction_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelLocusequEquationScope_(GeogebraCommonKernelLocusequEquationRestriction *self, GeogebraCommonKernelGeosGeoElement *element, GeogebraCommonKernelAlgosAlgoElement *algo, GeogebraCommonKernelLocusequEquationScope *scope) {
  GeogebraCommonKernelLocusequEquationElement_initWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelLocusequEquationScope_(self, element, scope);
  GeogebraCommonKernelLocusequEquationRestriction_set_algo_(self, algo);
}

GeogebraCommonKernelLocusequEquationElement *GeogebraCommonKernelLocusequEquationRestriction_getEmptyRestriction() {
  GeogebraCommonKernelLocusequEquationRestriction_initialize();
  return [new_GeogebraCommonKernelLocusequEquationRestriction_$1_init() autorelease];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequEquationRestriction)

@implementation GeogebraCommonKernelLocusequEquationRestriction_$1

- (jboolean)isAlgebraic {
  return YES;
}

- (GeogebraCommonKernelLocusequEquationList *)forPointImplWithGeogebraCommonKernelLocusequEquationPoint:(GeogebraCommonKernelLocusequEquationPoint *)p {
  return GeogebraCommonKernelLocusequEquationList_getEmptyList();
}

- (void)computeEquationList {
  [self setEquationListWithGeogebraCommonKernelLocusequEquationList:GeogebraCommonKernelLocusequEquationList_getEmptyList()];
}

- (instancetype)init {
  GeogebraCommonKernelLocusequEquationRestriction_$1_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isAlgebraic", NULL, "Z", 0x1, NULL, NULL },
    { "forPointImplWithGeogebraCommonKernelLocusequEquationPoint:", "forPointImpl", "Lgeogebra.common.kernel.locusequ.EquationList;", 0x4, NULL, NULL },
    { "computeEquationList", NULL, "V", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonKernelLocusequEquationRestriction", "getEmptyRestriction" };
  static const J2ObjcClassInfo _GeogebraCommonKernelLocusequEquationRestriction_$1 = { 2, "", "geogebra.common.kernel.locusequ", "EquationRestriction", 0x8008, 4, methods, 0, NULL, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_GeogebraCommonKernelLocusequEquationRestriction_$1;
}

@end

void GeogebraCommonKernelLocusequEquationRestriction_$1_init(GeogebraCommonKernelLocusequEquationRestriction_$1 *self) {
  GeogebraCommonKernelLocusequEquationRestriction_init(self);
}

GeogebraCommonKernelLocusequEquationRestriction_$1 *new_GeogebraCommonKernelLocusequEquationRestriction_$1_init() {
  GeogebraCommonKernelLocusequEquationRestriction_$1 *self = [GeogebraCommonKernelLocusequEquationRestriction_$1 alloc];
  GeogebraCommonKernelLocusequEquationRestriction_$1_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelLocusequEquationRestriction_$1)
