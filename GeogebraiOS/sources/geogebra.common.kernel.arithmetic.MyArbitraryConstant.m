//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/MyArbitraryConstant.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/Algos.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/MyArbitraryConstant.h"
#include "geogebra/common/kernel/arithmetic/MyDouble.h"
#include "geogebra/common/kernel/geos/GeoCasCell.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Map.h"

@interface GeogebraCommonKernelArithmeticMyArbitraryConstant () {
 @public
  JavaUtilArrayList *consts_, *ints_, *complexNumbers_;
  GeogebraCommonKernelAlgosConstructionElement *ce_;
  jint position_;
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)nextConstWithJavaUtilArrayList:(JavaUtilArrayList *)consts2
                                                                    withJavaUtilMap:(id<JavaUtilMap>)map
                                                                       withNSString:(NSString *)prefix
                                         withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)myDouble;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyArbitraryConstant, consts_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyArbitraryConstant, ints_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyArbitraryConstant, complexNumbers_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyArbitraryConstant, ce_, GeogebraCommonKernelAlgosConstructionElement *)

__attribute__((unused)) static id<GeogebraCommonKernelArithmeticExpressionValue> GeogebraCommonKernelArithmeticMyArbitraryConstant_nextConstWithJavaUtilArrayList_withJavaUtilMap_withNSString_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyArbitraryConstant *self, JavaUtilArrayList *consts2, id<JavaUtilMap> map, NSString *prefix, GeogebraCommonKernelArithmeticMyDouble *myDouble);

@interface GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst () {
 @public
  GeogebraCommonKernelGeosGeoElement *constant_;
  GeogebraCommonKernelAlgosConstructionElement *outCE_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst, constant_, GeogebraCommonKernelGeosGeoElement *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst, outCE_, GeogebraCommonKernelAlgosConstructionElement *)

@implementation GeogebraCommonKernelArithmeticMyArbitraryConstant

- (instancetype)initWithGeogebraCommonKernelAlgosConstructionElement:(GeogebraCommonKernelAlgosConstructionElement *)ce {
  GeogebraCommonKernelArithmeticMyArbitraryConstant_initWithGeogebraCommonKernelAlgosConstructionElement_(self, ce);
  return self;
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)nextConstWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)myDouble {
  return GeogebraCommonKernelArithmeticMyArbitraryConstant_nextConstWithJavaUtilArrayList_withJavaUtilMap_withNSString_withGeogebraCommonKernelArithmeticMyDouble_(self, consts_, ((GeogebraCommonKernelConstruction *) nil_chk([((GeogebraCommonKernelAlgosConstructionElement *) nil_chk(ce_)) getConstruction]))->constsM_, @"c", myDouble);
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)nextIntWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)myDouble {
  return GeogebraCommonKernelArithmeticMyArbitraryConstant_nextConstWithJavaUtilArrayList_withJavaUtilMap_withNSString_withGeogebraCommonKernelArithmeticMyDouble_(self, ints_, ((GeogebraCommonKernelConstruction *) nil_chk([((GeogebraCommonKernelAlgosConstructionElement *) nil_chk(ce_)) getConstruction]))->intsM_, @"k", myDouble);
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)nextComplexWithGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)myDouble {
  return GeogebraCommonKernelArithmeticMyArbitraryConstant_nextConstWithJavaUtilArrayList_withJavaUtilMap_withNSString_withGeogebraCommonKernelArithmeticMyDouble_(self, complexNumbers_, ((GeogebraCommonKernelConstruction *) nil_chk([((GeogebraCommonKernelAlgosConstructionElement *) nil_chk(ce_)) getConstruction]))->complexNumbersM_, @"c", myDouble);
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)nextConstWithJavaUtilArrayList:(JavaUtilArrayList *)consts2
                                                                    withJavaUtilMap:(id<JavaUtilMap>)map
                                                                       withNSString:(NSString *)prefix
                                         withGeogebraCommonKernelArithmeticMyDouble:(GeogebraCommonKernelArithmeticMyDouble *)myDouble {
  return GeogebraCommonKernelArithmeticMyArbitraryConstant_nextConstWithJavaUtilArrayList_withJavaUtilMap_withNSString_withGeogebraCommonKernelArithmeticMyDouble_(self, consts2, map, prefix, myDouble);
}

- (void)reset {
  position_ = 0;
}

- (GeogebraCommonKernelGeosGeoNumeric *)getConstWithInt:(jint)i {
  return [((JavaUtilArrayList *) nil_chk(consts_)) getWithInt:i];
}

- (jint)getTotalNumberOfConsts {
  return [((JavaUtilArrayList *) nil_chk(consts_)) size] + [((JavaUtilArrayList *) nil_chk(ints_)) size] + [((JavaUtilArrayList *) nil_chk(complexNumbers_)) size];
}

- (jboolean)isCAS {
  return [ce_ isKindOfClass:[GeogebraCommonKernelGeosGeoCasCell class]];
}

- (void)dealloc {
  RELEASE_(consts_);
  RELEASE_(ints_);
  RELEASE_(complexNumbers_);
  RELEASE_(ce_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelAlgosConstructionElement:", "MyArbitraryConstant", NULL, 0x1, NULL, NULL },
    { "nextConstWithGeogebraCommonKernelArithmeticMyDouble:", "nextConst", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "nextIntWithGeogebraCommonKernelArithmeticMyDouble:", "nextInt", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "nextComplexWithGeogebraCommonKernelArithmeticMyDouble:", "nextComplex", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "nextConstWithJavaUtilArrayList:withJavaUtilMap:withNSString:withGeogebraCommonKernelArithmeticMyDouble:", "nextConst", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x2, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "getConstWithInt:", "getConst", "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "getTotalNumberOfConsts", NULL, "I", 0x1, NULL, NULL },
    { "isCAS", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ARB_INT_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelArithmeticMyArbitraryConstant_ARB_INT },
    { "ARB_CONST_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelArithmeticMyArbitraryConstant_ARB_CONST },
    { "ARB_COMPLEX_", NULL, 0x19, "I", NULL, NULL, .constantValue.asInt = GeogebraCommonKernelArithmeticMyArbitraryConstant_ARB_COMPLEX },
    { "consts_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/geos/GeoNumeric;>;",  },
    { "ints_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/geos/GeoNumeric;>;",  },
    { "complexNumbers_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/geos/GeoNumeric;>;",  },
    { "ce_", NULL, 0x2, "Lgeogebra.common.kernel.algos.ConstructionElement;", NULL, NULL,  },
    { "position_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.kernel.arithmetic.MyArbitraryConstant$AlgoDependentArbconst;"};
  static const J2ObjcClassInfo _GeogebraCommonKernelArithmeticMyArbitraryConstant = { 2, "MyArbitraryConstant", "geogebra.common.kernel.arithmetic", NULL, 0x1, 9, methods, 8, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_GeogebraCommonKernelArithmeticMyArbitraryConstant;
}

@end

void GeogebraCommonKernelArithmeticMyArbitraryConstant_initWithGeogebraCommonKernelAlgosConstructionElement_(GeogebraCommonKernelArithmeticMyArbitraryConstant *self, GeogebraCommonKernelAlgosConstructionElement *ce) {
  NSObject_init(self);
  GeogebraCommonKernelArithmeticMyArbitraryConstant_setAndConsume_consts_(self, new_JavaUtilArrayList_init());
  GeogebraCommonKernelArithmeticMyArbitraryConstant_setAndConsume_ints_(self, new_JavaUtilArrayList_init());
  GeogebraCommonKernelArithmeticMyArbitraryConstant_setAndConsume_complexNumbers_(self, new_JavaUtilArrayList_init());
  self->position_ = 0;
  GeogebraCommonKernelArithmeticMyArbitraryConstant_set_ce_(self, ce);
}

GeogebraCommonKernelArithmeticMyArbitraryConstant *new_GeogebraCommonKernelArithmeticMyArbitraryConstant_initWithGeogebraCommonKernelAlgosConstructionElement_(GeogebraCommonKernelAlgosConstructionElement *ce) {
  GeogebraCommonKernelArithmeticMyArbitraryConstant *self = [GeogebraCommonKernelArithmeticMyArbitraryConstant alloc];
  GeogebraCommonKernelArithmeticMyArbitraryConstant_initWithGeogebraCommonKernelAlgosConstructionElement_(self, ce);
  return self;
}

id<GeogebraCommonKernelArithmeticExpressionValue> GeogebraCommonKernelArithmeticMyArbitraryConstant_nextConstWithJavaUtilArrayList_withJavaUtilMap_withNSString_withGeogebraCommonKernelArithmeticMyDouble_(GeogebraCommonKernelArithmeticMyArbitraryConstant *self, JavaUtilArrayList *consts2, id<JavaUtilMap> map, NSString *prefix, GeogebraCommonKernelArithmeticMyDouble *myDouble) {
  JavaLangInteger *index = [new_JavaLangInteger_initWithInt_((jint) JavaLangMath_roundWithDouble_([((GeogebraCommonKernelArithmeticMyDouble *) nil_chk(myDouble)) getDouble])) autorelease];
  GeogebraCommonKernelGeosGeoNumeric *found = [((id<JavaUtilMap>) nil_chk(map)) getWithId:index];
  if (found != nil) return found;
  GeogebraCommonKernelConstruction *c = [((GeogebraCommonKernelAlgosConstructionElement *) nil_chk(self->ce_)) getConstruction];
  if (self->position_ >= [((JavaUtilArrayList *) nil_chk(consts2)) size] || [consts2 getWithInt:self->position_] == nil) {
    GeogebraCommonKernelGeosGeoNumeric *add = [new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(c) autorelease];
    [add setSendValueToCasWithBoolean:NO];
    [add setAuxiliaryObjectWithBoolean:YES];
    jboolean oldLabeling = [((GeogebraCommonKernelConstruction *) nil_chk(c)) isSuppressLabelsActive];
    [c setSuppressLabelCreationWithBoolean:NO];
    [add setLabelWithNSString:[c getIndexLabelWithNSString:prefix]];
    [c setSuppressLabelCreationWithBoolean:oldLabeling];
    GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst *algo = [new_GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst_initWithGeogebraCommonKernelArithmeticMyArbitraryConstant_withGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosConstructionElement_(self, c, add, self->ce_) autorelease];
    [c removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:algo];
    [consts2 addWithInt:self->position_ withId:add];
    self->position_++;
    [map putWithId:index withId:add];
    return add;
  }
  GeogebraCommonKernelGeosGeoNumeric *ret = [consts2 getWithInt:self->position_];
  [map putWithId:index withId:ret];
  self->position_++;
  return ret;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelArithmeticMyArbitraryConstant)

@implementation GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst

- (instancetype)initWithGeogebraCommonKernelArithmeticMyArbitraryConstant:(GeogebraCommonKernelArithmeticMyArbitraryConstant *)outer$
                                     withGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                   withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)constant
                         withGeogebraCommonKernelAlgosConstructionElement:(GeogebraCommonKernelAlgosConstructionElement *)outCE {
  GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst_initWithGeogebraCommonKernelArithmeticMyArbitraryConstant_withGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosConstructionElement_(self, outer$, c, constant, outCE);
  return self;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithObjects:(id[]){ constant_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  [self setDependencies];
}

- (void)compute {
  if ([outCE_ isKindOfClass:[GeogebraCommonKernelAlgosAlgoElement class]] && [((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(((GeogebraCommonKernelAlgosAlgoElement *) check_class_cast(outCE_, [GeogebraCommonKernelAlgosAlgoElement class])))) getOutputLength] == 1) [((GeogebraCommonKernelGeosGeoElement *) nil_chk([((GeogebraCommonKernelAlgosAlgoElement *) nil_chk(((GeogebraCommonKernelAlgosAlgoElement *) check_class_cast(outCE_, [GeogebraCommonKernelAlgosAlgoElement class])))) getOutputWithInt:0])) updateCascade];
  else if (outCE_ != nil) [outCE_ update];
}

- (GeogebraCommonKernelAlgosAlgosEnum *)getClassName {
  return GeogebraCommonKernelAlgosAlgosEnum_get_Expression();
}

- (void)dealloc {
  RELEASE_(constant_);
  RELEASE_(outCE_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelArithmeticMyArbitraryConstant:withGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosConstructionElement:", "AlgoDependentArbconst", NULL, 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.algos.Algos;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "constant_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoElement;", NULL, NULL,  },
    { "outCE_", NULL, 0x2, "Lgeogebra.common.kernel.algos.ConstructionElement;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst = { 2, "AlgoDependentArbconst", "geogebra.common.kernel.arithmetic", "MyArbitraryConstant", 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst;
}

@end

void GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst_initWithGeogebraCommonKernelArithmeticMyArbitraryConstant_withGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosConstructionElement_(GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst *self, GeogebraCommonKernelArithmeticMyArbitraryConstant *outer$, GeogebraCommonKernelConstruction *c, GeogebraCommonKernelGeosGeoElement *constant, GeogebraCommonKernelAlgosConstructionElement *outCE) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_withBoolean_(self, c, NO);
  GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst_set_constant_(self, constant);
  GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst_set_outCE_(self, outCE);
  [self setInputOutput];
}

GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst *new_GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst_initWithGeogebraCommonKernelArithmeticMyArbitraryConstant_withGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosConstructionElement_(GeogebraCommonKernelArithmeticMyArbitraryConstant *outer$, GeogebraCommonKernelConstruction *c, GeogebraCommonKernelGeosGeoElement *constant, GeogebraCommonKernelAlgosConstructionElement *outCE) {
  GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst *self = [GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst alloc];
  GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst_initWithGeogebraCommonKernelArithmeticMyArbitraryConstant_withGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosConstructionElement_(self, outer$, c, constant, outCE);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelArithmeticMyArbitraryConstant_AlgoDependentArbconst)
