//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/geos/GeoVec.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoVec.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonGeogebra3DKernel3DGeosGeoVec () {
 @public
  jint m_length_;
}

@end

@implementation GeogebraCommonGeogebra3DKernel3DGeosGeoVec

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c {
  GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_(self, c);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                                 withInt:(jint)n {
  GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_withInt_(self, c, n);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                         withDoubleArray:(IOSDoubleArray *)coords {
  GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_withDoubleArray_(self, c, coords);
  return self;
}

- (void)setCoordsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vals {
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(v_)) setWithGeogebraCommonKernelMatrixCoords:vals];
}

- (void)setCoordsWithDoubleArray:(IOSDoubleArray *)vals {
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(v_)) setWithDoubleArray:vals];
}

- (void)setCoordsWithGeogebraCommonGeogebra3DKernel3DGeosGeoVec:(GeogebraCommonGeogebra3DKernel3DGeosGeoVec *)vec {
  [self setCoordsWithGeogebraCommonKernelMatrixCoords:((GeogebraCommonGeogebra3DKernel3DGeosGeoVec *) nil_chk(vec))->v_];
}

- (void)setCoordsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p {
  [self setCoordsWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(p)) getCoordsInD3]];
}

- (GeogebraCommonKernelMatrixCoords *)getCoords {
  return v_;
}

- (void)translateWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v0 {
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(v_)) addInsideWithGeogebraCommonKernelMatrixCoords:v0];
  [self setCoordsWithGeogebraCommonKernelMatrixCoords:v_];
}

- (void)dealloc {
  RELEASE_(v_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:", "GeoVec", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withInt:", "GeoVec", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withDoubleArray:", "GeoVec", NULL, 0x1, NULL, NULL },
    { "setCoordsWithGeogebraCommonKernelMatrixCoords:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithDoubleArray:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithGeogebraCommonGeogebra3DKernel3DGeosGeoVec:", "setCoords", "V", 0x1, NULL, NULL },
    { "setCoordsWithGeogebraCommonKernelKernelNDGeoPointND:", "setCoords", "V", 0x1, NULL, NULL },
    { "getCoords", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x11, NULL, NULL },
    { "translateWithGeogebraCommonKernelMatrixCoords:", "translate", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "v_", NULL, 0x1, "Lgeogebra.common.kernel.Matrix.Coords;", NULL, NULL,  },
    { "m_length_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DGeosGeoVec = { 2, "GeoVec", "geogebra.common.geogebra3D.kernel3D.geos", NULL, 0x401, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DGeosGeoVec;
}

@end

void GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_(GeogebraCommonGeogebra3DKernel3DGeosGeoVec *self, GeogebraCommonKernelConstruction *c) {
  GeogebraCommonGeogebra3DKernel3DGeosGeoElement3D_initWithGeogebraCommonKernelConstruction_(self, c);
  [self setConstructionDefaults];
}

void GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_withInt_(GeogebraCommonGeogebra3DKernel3DGeosGeoVec *self, GeogebraCommonKernelConstruction *c, jint n) {
  GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_(self, c);
  self->m_length_ = n;
  GeogebraCommonGeogebra3DKernel3DGeosGeoVec_setAndConsume_v_(self, new_GeogebraCommonKernelMatrixCoords_initWithInt_(n));
}

void GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_withDoubleArray_(GeogebraCommonGeogebra3DKernel3DGeosGeoVec *self, GeogebraCommonKernelConstruction *c, IOSDoubleArray *coords) {
  GeogebraCommonGeogebra3DKernel3DGeosGeoVec_initWithGeogebraCommonKernelConstruction_withInt_(self, c, ((IOSDoubleArray *) nil_chk(coords))->size_);
  [self setCoordsWithDoubleArray:coords];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DGeosGeoVec)
