//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/statistics/CmdFrequencyTable.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "geogebra/common/kernel/statistics/AlgoFrequencyTable.h"
#include "geogebra/common/kernel/statistics/CmdFrequencyTable.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonKernelStatisticsCmdFrequencyTable ()

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scale_;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scale_;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scaleFactor;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scaleFactor;

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)chart;

@end

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *dataList);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *dataList);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoNumeric *scale_);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoNumeric *scale_);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *scaleFactor);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *scaleFactor);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoNumeric *chart);

@implementation GeogebraCommonKernelStatisticsCmdFrequencyTable

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelStatisticsCmdFrequencyTable_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSBooleanArray *ok = [IOSBooleanArray arrayWithLength:n];
  IOSObjectArray *arg;
  arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
  switch (n) {
    case 1:
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoList]) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoNumeric]) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoNumeric class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else {
      @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    }
    case 2:
    if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoBoolean]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList])) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_(self, [c getLabel], (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList])) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoNumeric])) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoNumeric class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if (!IOSBooleanArray_Get(ok, 0)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    else {
      @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 1)];
    }
    case 3:
    if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoBoolean]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 2) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoList])) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, [c getLabel], (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 2), [GeogebraCommonKernelGeosGeoList class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 2) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoBoolean])) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 2), [GeogebraCommonKernelGeosGeoBoolean class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoBoolean]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 2) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoNumeric])) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 2), [GeogebraCommonKernelGeosGeoNumeric class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if (!IOSBooleanArray_Get(ok, 0)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    else if (!IOSBooleanArray_Get(ok, 1)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 1)];
    else @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 2)];
    case 4:
    arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
    if ((*IOSBooleanArray_GetRef(ok, 0) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoList])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList])) && (*IOSBooleanArray_GetRef(ok, 2) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoBoolean])) && (*IOSBooleanArray_GetRef(ok, 3) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 3))) isGeoNumeric]))) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 2), [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 3), [GeogebraCommonKernelGeosGeoNumeric class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if ((*IOSBooleanArray_GetRef(ok, 0) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoBoolean])) && (*IOSBooleanArray_GetRef(ok, 1) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList])) && (*IOSBooleanArray_GetRef(ok, 2) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoList])) && (*IOSBooleanArray_GetRef(ok, 3) = ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 3))) isGeoBoolean]))) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(self, [c getLabel], (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 2), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 3), [GeogebraCommonKernelGeosGeoBoolean class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if (!IOSBooleanArray_Get(ok, 0)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    else if (!IOSBooleanArray_Get(ok, 1)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 1)];
    else if (!IOSBooleanArray_Get(ok, 2)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 2)];
    else @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 3)];
    case 5:
    if ((*IOSBooleanArray_GetRef(ok, 0) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoBoolean]) && (*IOSBooleanArray_GetRef(ok, 1) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 2) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 2))) isGeoList]) && (*IOSBooleanArray_GetRef(ok, 3) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 3))) isGeoBoolean]) && (*IOSBooleanArray_GetRef(ok, 4) = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 4))) isGeoNumeric])) {
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 2), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast(IOSObjectArray_Get(arg, 3), [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 4), [GeogebraCommonKernelGeosGeoNumeric class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    else if (!IOSBooleanArray_Get(ok, 0)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    else if (!IOSBooleanArray_Get(ok, 1)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 1)];
    else if (!IOSBooleanArray_Get(ok, 2)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 2)];
    else if (!IOSBooleanArray_Get(ok, 3)) @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 3)];
    else @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 4)];
    default:
    @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_(self, label, dataList);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_(self, label, isCumulative, dataList);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scale_ {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, label, dataList, scale_);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scale_ {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, label, isCumulative, dataList, scale_);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, label, classList, dataList);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(self, label, classList, dataList, useDensity);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scaleFactor {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self, label, classList, dataList, useDensity, scaleFactor);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self, label, isCumulative, classList, dataList);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(self, label, isCumulative, classList, dataList, useDensity);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)classList
                            withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)dataList
                         withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)scaleFactor {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self, label, isCumulative, classList, dataList, useDensity, scaleFactor);
}

- (GeogebraCommonKernelGeosGeoText *)FrequencyTableWithNSString:(NSString *)label
                         withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)chart {
  return GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoNumeric_(self, label, chart);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdFrequencyTable", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, "Lgeogebra.common.main.MyError;", NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoList:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoList:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoBoolean:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoNumeric:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoBoolean:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoNumeric:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "FrequencyTableWithNSString:withGeogebraCommonKernelGeosGeoNumeric:", "FrequencyTable", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelStatisticsCmdFrequencyTable = { 2, "CmdFrequencyTable", "geogebra.common.kernel.statistics", NULL, 0x1, 13, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelStatisticsCmdFrequencyTable;
}

@end

void GeogebraCommonKernelStatisticsCmdFrequencyTable_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelStatisticsCmdFrequencyTable *new_GeogebraCommonKernelStatisticsCmdFrequencyTable_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelStatisticsCmdFrequencyTable *self = [GeogebraCommonKernelStatisticsCmdFrequencyTable alloc];
  GeogebraCommonKernelStatisticsCmdFrequencyTable_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *dataList) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self->cons_, label, nil, nil, dataList) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *dataList) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self->cons_, label, isCumulative, nil, dataList) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoNumeric *scale_) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, nil, nil, dataList, scale_) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoNumeric *scale_) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, isCumulative, nil, dataList, scale_) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(self->cons_, label, nil, classList, dataList) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, nil, classList, dataList, useDensity, nil) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *scaleFactor) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, nil, classList, dataList, useDensity, scaleFactor) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, isCumulative, classList, dataList, nil, nil) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, isCumulative, classList, dataList, useDensity, nil) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *classList, GeogebraCommonKernelGeosGeoList *dataList, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *scaleFactor) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, isCumulative, classList, dataList, useDensity, scaleFactor) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelStatisticsCmdFrequencyTable_FrequencyTableWithNSString_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelStatisticsCmdFrequencyTable *self, NSString *label, GeogebraCommonKernelGeosGeoNumeric *chart) {
  GeogebraCommonKernelStatisticsAlgoFrequencyTable *algo = [new_GeogebraCommonKernelStatisticsAlgoFrequencyTable_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, chart) autorelease];
  GeogebraCommonKernelGeosGeoText *table = [algo getResult];
  return table;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelStatisticsCmdFrequencyTable)
