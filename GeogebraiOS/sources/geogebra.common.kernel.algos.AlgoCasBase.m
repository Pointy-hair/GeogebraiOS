//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoCasBase.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoCasBase.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "geogebra/common/kernel/geos/GeoElement.h"

@interface GeogebraCommonKernelAlgosAlgoCasBase () {
 @public
  GeogebraCommonKernelCommandsCommandsEnum *cmd_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoCasBase, cmd_, GeogebraCommonKernelCommandsCommandsEnum *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoCasBase_compute(GeogebraCommonKernelAlgosAlgoCasBase *self);

@implementation GeogebraCommonKernelAlgosAlgoCasBase

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
        withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f
            withGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)cmd {
  GeogebraCommonKernelAlgosAlgoCasBase_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(self, cons, label, f, cmd);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
        withGeogebraCommonKernelGeosCasEvaluableFunction:(id<GeogebraCommonKernelGeosCasEvaluableFunction>)f
            withGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)cmd {
  GeogebraCommonKernelAlgosAlgoCasBase_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(self, cons, f, cmd);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return cmd_;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, [((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) toGeoElement]);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:[((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) toGeoElement]];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoElement *)getResult {
  return [((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(g_)) toGeoElement];
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoCasBase_compute(self);
}

- (void)applyCasCommandWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)clearCasEvalMapWithNSString:(NSString *)label {
  [((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f_)) clearCasEvalMapWithNSString:label];
}

- (void)dealloc {
  RELEASE_(f_);
  RELEASE_(g_);
  RELEASE_(cmd_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosCasEvaluableFunction:withGeogebraCommonKernelCommandsCommandsEnum:", "AlgoCasBase", NULL, 0x4, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosCasEvaluableFunction:withGeogebraCommonKernelCommandsCommandsEnum:", "AlgoCasBase", NULL, 0x4, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x11, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "applyCasCommandWithGeogebraCommonKernelStringTemplate:", "applyCasCommand", "V", 0x404, NULL, NULL },
    { "clearCasEvalMapWithNSString:", "clearCasEvalMap", "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x4, "Lgeogebra.common.kernel.geos.CasEvaluableFunction;", NULL, NULL,  },
    { "g_", NULL, 0x4, "Lgeogebra.common.kernel.geos.CasEvaluableFunction;", NULL, NULL,  },
    { "cmd_", NULL, 0x2, "Lgeogebra.common.kernel.commands.Commands;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoCasBase = { 2, "AlgoCasBase", "geogebra.common.kernel.algos", NULL, 0x401, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoCasBase;
}

@end

void GeogebraCommonKernelAlgosAlgoCasBase_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(GeogebraCommonKernelAlgosAlgoCasBase *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelCommandsCommandsEnum *cmd) {
  GeogebraCommonKernelAlgosAlgoCasBase_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(self, cons, f, cmd);
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoCasBase_compute(self);
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(self->g_)) toGeoElement])) setLabelWithNSString:label];
}

void GeogebraCommonKernelAlgosAlgoCasBase_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(GeogebraCommonKernelAlgosAlgoCasBase *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelGeosCasEvaluableFunction> f, GeogebraCommonKernelCommandsCommandsEnum *cmd) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoCasBase_set_f_(self, f);
  GeogebraCommonKernelAlgosAlgoCasBase_set_cmd_(self, cmd);
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) addCASAlgoWithGeogebraCommonKernelAlgosAlgoElement:self];
  GeogebraCommonKernelAlgosAlgoCasBase_set_g_(self, (id<GeogebraCommonKernelGeosCasEvaluableFunction>) check_protocol_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(f)) toGeoElement])) copyInternalWithGeogebraCommonKernelConstruction:cons], @protocol(GeogebraCommonKernelGeosCasEvaluableFunction)));
}

void GeogebraCommonKernelAlgosAlgoCasBase_compute(GeogebraCommonKernelAlgosAlgoCasBase *self) {
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(self->f_)) toGeoElement])) isDefined]) {
    [((GeogebraCommonKernelGeosGeoElement *) nil_chk([((id<GeogebraCommonKernelGeosCasEvaluableFunction>) nil_chk(self->g_)) toGeoElement])) setUndefined];
    return;
  }
  [self applyCasCommandWithGeogebraCommonKernelStringTemplate:GeogebraCommonKernelStringTemplate_get_prefixedDefault_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoCasBase)
