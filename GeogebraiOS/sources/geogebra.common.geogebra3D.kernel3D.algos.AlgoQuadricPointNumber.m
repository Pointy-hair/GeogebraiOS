//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricPointNumber.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadric.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricComputer.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoQuadricPointNumber.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoQuadric3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "java/lang/Double.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> origin_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber, origin_, id<GeogebraCommonKernelKernelNDGeoPointND>)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)origin
                  withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)secondInput
           withGeogebraCommonKernelArithmeticNumberValue:(id<GeogebraCommonKernelArithmeticNumberValue>)r
withGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer:(GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer *)computer {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer_(self, c, label, origin, secondInput, r, computer);
  return self;
}

- (void)compute {
  if (![((GeogebraCommonKernelGeosGeoElement *) nil_chk(((GeogebraCommonKernelGeosGeoElement *) check_class_cast(origin_, [GeogebraCommonKernelGeosGeoElement class])))) isDefined] || [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(origin_)) isInfinite]) {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setUndefined];
    return;
  }
  GeogebraCommonKernelMatrixCoords *d = [self getDirection];
  if ([((GeogebraCommonKernelMatrixCoords *) nil_chk(d)) equalsForKernelWithDouble:0 withDouble:GeogebraCommonKernelKernel_STANDARD_PRECISION]) {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setUndefined];
    return;
  }
  jdouble r = [((GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer *) nil_chk([self getComputer])) getNumberWithDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([self getNumber], @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble]];
  if (JavaLangDouble_isNaNWithDouble_(r)) {
    [((GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setUndefined];
    return;
  }
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setDefined];
  [((GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer *) nil_chk([self getComputer])) setQuadricWithGeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D:[self getQuadric] withGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(origin_)) getInhomCoordsInD3] withGeogebraCommonKernelMatrixCoords:d withDouble:r];
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)getOrigin {
  return origin_;
}

- (NSString *)getPlainName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(origin_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelArithmeticNumberValue:withGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer:", "AlgoQuadricPointNumber", NULL, 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getOrigin", NULL, "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getPlainName", NULL, "Ljava.lang.String;", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "origin_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber = { 2, "AlgoQuadricPointNumber", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x401, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber *self, GeogebraCommonKernelConstruction *c, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> origin, GeogebraCommonKernelGeosGeoElement *secondInput, id<GeogebraCommonKernelArithmeticNumberValue> r, GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer *computer) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadric_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelArithmeticNumberValue_withGeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricComputer_(self, c, secondInput, r, computer);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber_set_origin_(self, origin);
  [self setInputOutputWithGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ (GeogebraCommonKernelGeosGeoElement *) check_class_cast(origin, [GeogebraCommonKernelGeosGeoElement class]), secondInput, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(r, [GeogebraCommonKernelGeosGeoElement class]) } count:3 type:GeogebraCommonKernelGeosGeoElement_class_()] withGeogebraCommonKernelGeosGeoElementArray:[IOSObjectArray arrayWithObjects:(id[]){ [self getQuadric] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]];
  [self compute];
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoQuadric3D *) nil_chk([self getQuadric])) setLabelWithNSString:label];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoQuadricPointNumber)
