//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoToComplexPolar.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/advanced/AlgoToComplexPolar.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/NumberValue.h"
#include "geogebra/common/kernel/arithmetic/VectorValue.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVector.h"

@interface GeogebraCommonKernelAdvancedAlgoToComplexPolar () {
 @public
  jint coordStyle_;
  GeogebraCommonKernelGeosGeoPoint *inPoint_;
  GeogebraCommonKernelGeosGeoVector *inVector_;
  GeogebraCommonKernelGeosGeoPoint *outPoint_;
  GeogebraCommonKernelGeosGeoList *inList_;
  GeogebraCommonKernelGeosGeoVector *outVector_;
}

- (void)init__WithInt:(jint)coordStyle1
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)outArg
         withNSString:(NSString *)label OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoToComplexPolar, inPoint_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoToComplexPolar, inVector_, GeogebraCommonKernelGeosGeoVector *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoToComplexPolar, outPoint_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoToComplexPolar, inList_, GeogebraCommonKernelGeosGeoList *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoToComplexPolar, outVector_, GeogebraCommonKernelGeosGeoVector *)

__attribute__((unused)) static void GeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withGeogebraCommonKernelGeosGeoElement_withNSString_(GeogebraCommonKernelAdvancedAlgoToComplexPolar *self, jint coordStyle1, GeogebraCommonKernelGeosGeoElement *outArg, NSString *label);

@implementation GeogebraCommonKernelAdvancedAlgoToComplexPolar

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)geoPoint
                                                 withInt:(jint)coordStyle {
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, geoPoint, coordStyle);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)geoList
                                                 withInt:(jint)coordStyle {
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoList, coordStyle);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                   withGeogebraCommonKernelGeosGeoVector:(GeogebraCommonKernelGeosGeoVector *)geoVector
                                                 withInt:(jint)coordStyle {
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVector_withInt_(self, cons, label, geoVector, coordStyle);
  return self;
}

- (void)init__WithInt:(jint)coordStyle1
withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)outArg
         withNSString:(NSString *)label {
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle1, outArg, label);
}

- (void)setInputOutput {
  if (inVector_ != nil) {
    [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:outVector_];
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithObjects:(id[]){ inVector_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  }
  else {
    [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:outPoint_];
    GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithObjects:(id[]){ inPoint_ == nil ? inList_ : inPoint_ } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  }
  [self setDependencies];
}

- (void)compute {
  if (inPoint_ != nil) {
    [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(outPoint_)) setWithGeogebraCommonKernelGeosGeoElement:inPoint_];
    [outPoint_ setModeWithInt:coordStyle_];
    return;
  }
  if (inVector_ != nil) {
    [((GeogebraCommonKernelGeosGeoVector *) nil_chk(outVector_)) setWithGeogebraCommonKernelGeosGeoElement:inVector_];
    [outVector_ setModeWithInt:coordStyle_];
    return;
  }
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(outPoint_)) setCoordsWithDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([((GeogebraCommonKernelGeosGeoList *) nil_chk(inList_)) getWithInt:0], @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble] withDouble:[((id<GeogebraCommonKernelArithmeticNumberValue>) nil_chk(((id<GeogebraCommonKernelArithmeticNumberValue>) check_protocol_cast([inList_ getWithInt:1], @protocol(GeogebraCommonKernelArithmeticNumberValue))))) getDouble] withDouble:1];
  [outPoint_ setModeWithInt:coordStyle_];
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch (coordStyle_) {
    case GeogebraCommonKernelKernel_COORD_COMPLEX:
    return GeogebraCommonKernelCommandsCommandsEnum_get_ToComplex();
    case GeogebraCommonKernelKernel_COORD_POLAR:
    return GeogebraCommonKernelCommandsCommandsEnum_get_ToPolar();
    default:
    return GeogebraCommonKernelCommandsCommandsEnum_get_ToPoint();
  }
}

- (GeogebraCommonKernelGeosGeoElement *)getResult {
  return inVector_ == nil ? outPoint_ : outVector_;
}

- (void)dealloc {
  RELEASE_(inPoint_);
  RELEASE_(inVector_);
  RELEASE_(outPoint_);
  RELEASE_(inList_);
  RELEASE_(outVector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoToComplexPolar", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withInt:", "AlgoToComplexPolar", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoVector:withInt:", "AlgoToComplexPolar", NULL, 0x1, NULL, NULL },
    { "init__WithInt:withGeogebraCommonKernelGeosGeoElement:withNSString:", "init", "V", 0x2, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "coordStyle_", NULL, 0x2, "I", NULL, NULL,  },
    { "inPoint_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "inVector_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
    { "outPoint_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "inList_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "outVector_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoVector;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoToComplexPolar = { 2, "AlgoToComplexPolar", "geogebra.common.kernel.advanced", NULL, 0x1, 8, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoToComplexPolar;
}

@end

void GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelAdvancedAlgoToComplexPolar *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *geoPoint, jint coordStyle) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_set_inPoint_(self, geoPoint);
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_setAndConsume_outPoint_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle, self->outPoint_, label);
}

GeogebraCommonKernelAdvancedAlgoToComplexPolar *new_GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *geoPoint, jint coordStyle) {
  GeogebraCommonKernelAdvancedAlgoToComplexPolar *self = [GeogebraCommonKernelAdvancedAlgoToComplexPolar alloc];
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, geoPoint, coordStyle);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withInt_(GeogebraCommonKernelAdvancedAlgoToComplexPolar *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, jint coordStyle) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_set_inList_(self, geoList);
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_setAndConsume_outPoint_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle, self->outPoint_, label);
}

GeogebraCommonKernelAdvancedAlgoToComplexPolar *new_GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *geoList, jint coordStyle) {
  GeogebraCommonKernelAdvancedAlgoToComplexPolar *self = [GeogebraCommonKernelAdvancedAlgoToComplexPolar alloc];
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withInt_(self, cons, label, geoList, coordStyle);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVector_withInt_(GeogebraCommonKernelAdvancedAlgoToComplexPolar *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoVector *geoVector, jint coordStyle) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_set_inVector_(self, geoVector);
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_setAndConsume_outVector_(self, new_GeogebraCommonKernelGeosGeoVector_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withGeogebraCommonKernelGeosGeoElement_withNSString_(self, coordStyle, self->outVector_, label);
}

GeogebraCommonKernelAdvancedAlgoToComplexPolar *new_GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVector_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoVector *geoVector, jint coordStyle) {
  GeogebraCommonKernelAdvancedAlgoToComplexPolar *self = [GeogebraCommonKernelAdvancedAlgoToComplexPolar alloc];
  GeogebraCommonKernelAdvancedAlgoToComplexPolar_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoVector_withInt_(self, cons, label, geoVector, coordStyle);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoToComplexPolar_init__WithInt_withGeogebraCommonKernelGeosGeoElement_withNSString_(GeogebraCommonKernelAdvancedAlgoToComplexPolar *self, jint coordStyle1, GeogebraCommonKernelGeosGeoElement *outArg, NSString *label) {
  self->coordStyle_ = coordStyle1;
  [self setInputOutput];
  [self compute];
  [((id<GeogebraCommonKernelArithmeticVectorValue>) nil_chk(((id<GeogebraCommonKernelArithmeticVectorValue>) check_protocol_cast(outArg, @protocol(GeogebraCommonKernelArithmeticVectorValue))))) setModeWithInt:coordStyle1];
  [((GeogebraCommonKernelGeosGeoElement *) nil_chk(outArg)) setLabelWithNSString:label];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoToComplexPolar)
