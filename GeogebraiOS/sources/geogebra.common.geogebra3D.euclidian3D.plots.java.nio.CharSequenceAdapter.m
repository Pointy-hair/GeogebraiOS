//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/euclidian3D/plots/java/nio/CharSequenceAdapter.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/Buffer.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/BufferOverflowException.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/BufferUnderflowException.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ByteOrder.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/CharBuffer.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/CharSequenceAdapter.h"
#include "geogebra/common/geogebra3D/euclidian3D/plots/java/nio/ReadOnlyBufferException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/UnsupportedOperationException.h"

@implementation GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter

+ (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *)copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter:(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *)other {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_(other);
}

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)chseq {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(self, chseq);
  return self;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)asReadOnlyBuffer {
  return [self duplicate];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)compact {
  @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyBufferException_init() autorelease];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)duplicate {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_(self);
}

- (jchar)get {
  if (position__ == limit__) {
    @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferUnderflowException_init() autorelease];
  }
  return [((id<JavaLangCharSequence>) nil_chk(sequence_)) charAtWithInt:position__++];
}

- (jchar)getWithInt:(jint)index {
  if (index < 0 || index >= limit__) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  return [((id<JavaLangCharSequence>) nil_chk(sequence_)) charAtWithInt:index];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)getWithCharArray:(IOSCharArray *)dest
                                                                        withInt:(jint)off
                                                                        withInt:(jint)len {
  jint length = ((IOSCharArray *) nil_chk(dest))->size_;
  if ((off < 0) || (len < 0) || (jlong) off + (jlong) len > length) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  if (len > [self remaining]) {
    @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferUnderflowException_init() autorelease];
  }
  jint newPosition = position__ + len;
  [((NSString *) nil_chk([((id<JavaLangCharSequence>) nil_chk(sequence_)) description])) getChars:position__ sourceEnd:newPosition destination:dest destinationBegin:off];
  position__ = newPosition;
  return self;
}

- (jboolean)isDirect {
  return NO;
}

- (jboolean)isReadOnly {
  return YES;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder *)order {
  return GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioByteOrder_nativeOrder();
}

- (IOSCharArray *)protectedArray {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jint)protectedArrayOffset {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

- (jboolean)protectedHasArray {
  return NO;
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithChar:(jchar)c {
  @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyBufferException_init() autorelease];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithInt:(jint)index
                                                                 withChar:(jchar)c {
  @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyBufferException_init() autorelease];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithCharArray:(IOSCharArray *)src
                                                                        withInt:(jint)off
                                                                        withInt:(jint)len {
  if ((off < 0) || (len < 0) || (jlong) off + (jlong) len > ((IOSCharArray *) nil_chk(src))->size_) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  if (len > [self remaining]) {
    @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioBufferOverflowException_init() autorelease];
  }
  @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyBufferException_init() autorelease];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)putWithNSString:(NSString *)src
                                                                       withInt:(jint)start
                                                                       withInt:(jint)end {
  if ((start < 0) || (end < 0) || (jlong) start + (jlong) end > ((jint) [((NSString *) nil_chk(src)) length])) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  @throw [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioReadOnlyBufferException_init() autorelease];
}

- (GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer *)slice {
  return [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_initWithJavaLangCharSequence_([((id<JavaLangCharSequence>) nil_chk(sequence_)) subSequenceFrom:position__ to:limit__]) autorelease];
}

- (id<JavaLangCharSequence>)subSequenceFrom:(jint)start
                                         to:(jint)end {
  if (end < start || start < 0 || end > [self remaining]) {
    @throw [new_JavaLangIndexOutOfBoundsException_init() autorelease];
  }
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *result = GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_(self);
  ((GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *) nil_chk(result))->position__ = position__ + start;
  result->limit__ = position__ + end;
  return result;
}

- (void)dealloc {
  RELEASE_(sequence_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter:", "copy", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharSequenceAdapter;", 0x8, NULL, NULL },
    { "initWithJavaLangCharSequence:", "CharSequenceAdapter", NULL, 0x0, NULL, NULL },
    { "asReadOnlyBuffer", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x1, NULL, NULL },
    { "compact", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x1, NULL, NULL },
    { "duplicate", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x1, NULL, NULL },
    { "get", NULL, "C", 0x1, NULL, NULL },
    { "getWithInt:", "get", "C", 0x1, NULL, NULL },
    { "getWithCharArray:withInt:withInt:", "get", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x11, NULL, NULL },
    { "isDirect", NULL, "Z", 0x1, NULL, NULL },
    { "isReadOnly", NULL, "Z", 0x1, NULL, NULL },
    { "order", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.ByteOrder;", 0x1, NULL, NULL },
    { "protectedArray", NULL, "[C", 0x4, NULL, NULL },
    { "protectedArrayOffset", NULL, "I", 0x4, NULL, NULL },
    { "protectedHasArray", NULL, "Z", 0x4, NULL, NULL },
    { "putWithChar:", "put", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x1, NULL, NULL },
    { "putWithInt:withChar:", "put", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x1, NULL, NULL },
    { "putWithCharArray:withInt:withInt:", "put", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x11, NULL, NULL },
    { "putWithNSString:withInt:withInt:", "put", "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x1, NULL, NULL },
    { "slice", NULL, "Lgeogebra.common.geogebra3D.euclidian3D.plots.java.nio.CharBuffer;", 0x1, NULL, NULL },
    { "subSequenceFrom:to:", "subSequence", "Ljava.lang.CharSequence;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sequence_", NULL, 0x10, "Ljava.lang.CharSequence;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter = { 2, "CharSequenceAdapter", "geogebra.common.geogebra3D.euclidian3D.plots.java.nio", NULL, 0x10, 20, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter;
}

@end

GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_copy__WithGeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *other) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_initialize();
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *buf = [new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(((GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *) nil_chk(other))->sequence_) autorelease];
  buf->limit__ = other->limit__;
  buf->position__ = other->position__;
  buf->mark__ = other->mark__;
  return buf;
}

void GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *self, id<JavaLangCharSequence> chseq) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharBuffer_initWithInt_(self, [((id<JavaLangCharSequence>) nil_chk(chseq)) length]);
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_set_sequence_(self, chseq);
}

GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *new_GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(id<JavaLangCharSequence> chseq) {
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter *self = [GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter alloc];
  GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter_initWithJavaLangCharSequence_(self, chseq);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DEuclidian3DPlotsJavaNioCharSequenceAdapter)
