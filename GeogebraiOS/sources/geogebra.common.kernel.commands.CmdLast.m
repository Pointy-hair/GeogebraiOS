//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/commands/CmdLast.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoLast.h"
#include "geogebra/common/kernel/algos/AlgoLastString.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/commands/CmdLast.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonKernelCommandsCmdLast ()

- (GeogebraCommonKernelGeosGeoText *)LastWithNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)list
               withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)n;

- (GeogebraCommonKernelGeosGeoList *)LastWithNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list
               withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)n;

@end

__attribute__((unused)) static GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCommandsCmdLast *self, NSString *label, GeogebraCommonKernelGeosGeoText *list, GeogebraCommonKernelGeosGeoNumeric *n);

__attribute__((unused)) static GeogebraCommonKernelGeosGeoList *GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCommandsCmdLast *self, NSString *label, GeogebraCommonKernelGeosGeoList *list, GeogebraCommonKernelGeosGeoNumeric *n);

@implementation GeogebraCommonKernelCommandsCmdLast

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel {
  GeogebraCommonKernelCommandsCmdLast_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSObjectArray *arg;
  arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
  {
    jboolean list;
    jboolean text;
    switch (n) {
      case 1:
      if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoList]) {
        IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class]), nil) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
        return ret;
      }
      else if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoText]) {
        IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoText *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoText class]), nil) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
        return ret;
      }
      else @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
      case 2:
      list = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(arg), 0))) isGeoList];
      text = [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 0))) isGeoText];
      if (list && [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoNumeric]) {
        IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoList *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoList class]), (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoNumeric class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
        return ret;
      }
      else if (text && [((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(arg, 1))) isGeoNumeric]) {
        IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoNumeric_(self, [c getLabel], (GeogebraCommonKernelGeosGeoText *) check_class_cast(IOSObjectArray_Get(arg, 0), [GeogebraCommonKernelGeosGeoText class]), (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast(IOSObjectArray_Get(arg, 1), [GeogebraCommonKernelGeosGeoNumeric class])) } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
        return ret;
      }
      else @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:(list && text) ? IOSObjectArray_Get(arg, 1) : IOSObjectArray_Get(arg, 0)];
      default:
      @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
    }
  }
}

- (GeogebraCommonKernelGeosGeoText *)LastWithNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoText:(GeogebraCommonKernelGeosGeoText *)list
               withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)n {
  return GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoNumeric_(self, label, list, n);
}

- (GeogebraCommonKernelGeosGeoList *)LastWithNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list
               withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)n {
  return GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, label, list, n);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:", "CmdLast", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x1, "Lgeogebra.common.main.MyError;", NULL },
    { "LastWithNSString:withGeogebraCommonKernelGeosGeoText:withGeogebraCommonKernelGeosGeoNumeric:", "Last", "Lgeogebra.common.kernel.geos.GeoText;", 0x12, NULL, NULL },
    { "LastWithNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:", "Last", "Lgeogebra.common.kernel.geos.GeoList;", 0x12, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCommandsCmdLast = { 2, "CmdLast", "geogebra.common.kernel.commands", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCommandsCmdLast;
}

@end

void GeogebraCommonKernelCommandsCmdLast_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelCommandsCmdLast *self, GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
}

GeogebraCommonKernelCommandsCmdLast *new_GeogebraCommonKernelCommandsCmdLast_initWithGeogebraCommonKernelKernel_(GeogebraCommonKernelKernel *kernel) {
  GeogebraCommonKernelCommandsCmdLast *self = [GeogebraCommonKernelCommandsCmdLast alloc];
  GeogebraCommonKernelCommandsCmdLast_initWithGeogebraCommonKernelKernel_(self, kernel);
  return self;
}

GeogebraCommonKernelGeosGeoText *GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCommandsCmdLast *self, NSString *label, GeogebraCommonKernelGeosGeoText *list, GeogebraCommonKernelGeosGeoNumeric *n) {
  GeogebraCommonKernelAlgosAlgoLastString *algo = [new_GeogebraCommonKernelAlgosAlgoLastString_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoText_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, list, n) autorelease];
  GeogebraCommonKernelGeosGeoText *list2 = [algo getResult];
  return list2;
}

GeogebraCommonKernelGeosGeoList *GeogebraCommonKernelCommandsCmdLast_LastWithNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCommandsCmdLast *self, NSString *label, GeogebraCommonKernelGeosGeoList *list, GeogebraCommonKernelGeosGeoNumeric *n) {
  GeogebraCommonKernelAlgosAlgoLast *algo = [new_GeogebraCommonKernelAlgosAlgoLast_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self->cons_, label, list, n) autorelease];
  GeogebraCommonKernelGeosGeoList *list2 = [algo getResult];
  return list2;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCommandsCmdLast)
