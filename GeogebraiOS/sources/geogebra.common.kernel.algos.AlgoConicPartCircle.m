//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoConicPartCircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/LocusEquation.h"
#include "geogebra/common/kernel/PathParameter.h"
#include "geogebra/common/kernel/algos/AlgoCircleTwoPoints.h"
#include "geogebra/common/kernel/algos/AlgoConicPart.h"
#include "geogebra/common/kernel/algos/AlgoConicPartCircle.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/EquationElementInterface.h"
#include "geogebra/common/kernel/algos/EquationScopeInterface.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoConicPart.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoConicNDConstants.h"
#include "geogebra/common/kernel/kernelND/GeoConicPartND.h"

@interface GeogebraCommonKernelAlgosAlgoConicPartCircle () {
 @public
  GeogebraCommonKernelGeosGeoPoint *center_, *startPoint_, *endPoint_;
  GeogebraCommonKernelGeosGeoPoint *P_, *Q_;
}

- (void)setIncidence;

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoConicPartCircle, center_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoConicPartCircle, startPoint_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoConicPartCircle, endPoint_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoConicPartCircle, P_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoConicPartCircle, Q_, GeogebraCommonKernelGeosGeoPoint *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(GeogebraCommonKernelAlgosAlgoConicPartCircle *self);

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoConicPartCircle_compute(GeogebraCommonKernelAlgosAlgoConicPartCircle *self);

@implementation GeogebraCommonKernelAlgosAlgoConicPartCircle

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)center
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)startPoint
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)endPoint
                                                 withInt:(jint)type {
  GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)center
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)startPoint
                    withGeogebraCommonKernelGeosGeoPoint:(GeogebraCommonKernelGeosGeoPoint *)endPoint
                                                 withInt:(jint)type {
  GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, center, startPoint, endPoint, type);
  return self;
}

- (void)setIncidence {
  GeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(self);
}

- (GeogebraCommonKernelGeosGeoPoint *)getStartPoint {
  return startPoint_;
}

- (GeogebraCommonKernelGeosGeoPoint *)getEndPoint {
  return endPoint_;
}

- (GeogebraCommonKernelGeosGeoPoint *)getCenter {
  return center_;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  switch (type_) {
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return GeogebraCommonKernelCommandsCommandsEnum_get_CircleArc();
    default:
    return GeogebraCommonKernelCommandsCommandsEnum_get_CircleSector();
  }
}

- (jint)getRelatedModeID {
  switch (type_) {
    case GeogebraCommonKernelKernelNDGeoConicNDConstants_CONIC_PART_ARC:
    return GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_ARC_THREE_POINTS;
    default:
    return GeogebraCommonEuclidianEuclidianConstants_MODE_CIRCLE_SECTOR_THREE_POINTS;
  }
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, center_);
  IOSObjectArray_Set(input_, 1, startPoint_);
  IOSObjectArray_Set(input_, 2, endPoint_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:conicPart_];
  [self setDependencies];
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoConicPartCircle_compute(self);
}

- (jboolean)isLocusEquable {
  return YES;
}

- (id<GeogebraCommonKernelAlgosEquationElementInterface>)buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)geo
                                                                      withGeogebraCommonKernelAlgosEquationScopeInterface:(id<GeogebraCommonKernelAlgosEquationScopeInterface>)scope {
  return GeogebraCommonKernelLocusEquation_eqnCircleArcWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonKernelAlgosAlgoElement_withGeogebraCommonKernelAlgosEquationScopeInterface_(geo, self, scope);
}

- (GeogebraCommonKernelGeosGeoConicPart *)getConicPart {
  return (GeogebraCommonKernelGeosGeoConicPart *) check_class_cast([super getConicPart], [GeogebraCommonKernelGeosGeoConicPart class]);
}

- (jint)getInputLengthForXML {
  return [self getInputLengthForXMLMayNeedXOYPlane];
}

- (jint)getInputLengthForCommandDescription {
  return [self getInputLengthForCommandDescriptionMayNeedXOYPlane];
}

- (GeogebraCommonKernelGeosGeoElement *)getInputWithInt:(jint)i {
  return [self getInputMaybeXOYPlaneWithInt:i];
}

- (void)dealloc {
  RELEASE_(center_);
  RELEASE_(startPoint_);
  RELEASE_(endPoint_);
  RELEASE_(P_);
  RELEASE_(Q_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoConicPartCircle", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withGeogebraCommonKernelGeosGeoPoint:withInt:", "AlgoConicPartCircle", NULL, 0x1, NULL, NULL },
    { "setIncidence", NULL, "V", 0x2, NULL, NULL },
    { "getStartPoint", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getEndPoint", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getCenter", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "isLocusEquable", NULL, "Z", 0x1, NULL, NULL },
    { "buildEquationElementForGeoWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonKernelAlgosEquationScopeInterface:", "buildEquationElementForGeo", "Lgeogebra.common.kernel.algos.EquationElementInterface;", 0x1, NULL, NULL },
    { "getConicPart", NULL, "Lgeogebra.common.kernel.geos.GeoConicPart;", 0x1, NULL, NULL },
    { "getInputLengthForXML", NULL, "I", 0x4, NULL, NULL },
    { "getInputLengthForCommandDescription", NULL, "I", 0x4, NULL, NULL },
    { "getInputWithInt:", "getInput", "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "center_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "startPoint_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "endPoint_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "P_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "Q_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoConicPartCircle = { 2, "AlgoConicPartCircle", "geogebra.common.kernel.algos", NULL, 0x1, 16, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoConicPartCircle;
}

@end

void GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelAlgosAlgoConicPartCircle *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *center, GeogebraCommonKernelGeosGeoPoint *startPoint, GeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, center, startPoint, endPoint, type);
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoConicPartCircle *new_GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPoint *center, GeogebraCommonKernelGeosGeoPoint *startPoint, GeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartCircle *self = [GeogebraCommonKernelAlgosAlgoConicPartCircle alloc];
  GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, label, center, startPoint, endPoint, type);
  return self;
}

void GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelAlgosAlgoConicPartCircle *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *center, GeogebraCommonKernelGeosGeoPoint *startPoint, GeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(self, cons, type);
  GeogebraCommonKernelAlgosAlgoConicPartCircle_set_center_(self, center);
  GeogebraCommonKernelAlgosAlgoConicPartCircle_set_startPoint_(self, startPoint);
  GeogebraCommonKernelAlgosAlgoConicPartCircle_set_endPoint_(self, endPoint);
  GeogebraCommonKernelAlgosAlgoCircleTwoPoints *algo = [new_GeogebraCommonKernelAlgosAlgoCircleTwoPoints_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_(cons, center, startPoint) autorelease];
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:algo];
  GeogebraCommonKernelAlgosAlgoConicPart_set_conic_(self, [algo getCircle]);
  GeogebraCommonKernelAlgosAlgoConicPartCircle_setAndConsume_P_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAlgosAlgoConicPartCircle_setAndConsume_Q_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAlgosAlgoConicPart_setAndConsume_conicPart_(self, new_GeogebraCommonKernelGeosGeoConicPart_initWithGeogebraCommonKernelConstruction_withInt_(cons, type));
  [self->conicPart_ addPointOnConicWithGeogebraCommonKernelKernelNDGeoPointND:startPoint];
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoConicPartCircle_compute(self);
  GeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(self);
}

GeogebraCommonKernelAlgosAlgoConicPartCircle *new_GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoPoint *center, GeogebraCommonKernelGeosGeoPoint *startPoint, GeogebraCommonKernelGeosGeoPoint *endPoint, jint type) {
  GeogebraCommonKernelAlgosAlgoConicPartCircle *self = [GeogebraCommonKernelAlgosAlgoConicPartCircle alloc];
  GeogebraCommonKernelAlgosAlgoConicPartCircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withInt_(self, cons, center, startPoint, endPoint, type);
  return self;
}

void GeogebraCommonKernelAlgosAlgoConicPartCircle_setIncidence(GeogebraCommonKernelAlgosAlgoConicPartCircle *self) {
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->startPoint_)) addIncidenceWithGeogebraCommonKernelGeosGeoElement:self->conicPart_ withBoolean:NO];
}

void GeogebraCommonKernelAlgosAlgoConicPartCircle_compute(GeogebraCommonKernelAlgosAlgoConicPartCircle *self) {
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->P_)) setCoordsWithGeogebraCommonKernelGeosGeoVec3D:self->startPoint_];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conic_)) pointChangedWithGeogebraCommonKernelKernelNDGeoPointND:self->P_];
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(self->Q_)) setCoordsWithGeogebraCommonKernelGeosGeoVec3D:self->endPoint_];
  [self->conic_ pointChangedWithGeogebraCommonKernelKernelNDGeoPointND:self->Q_];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->conicPart_)) setWithGeogebraCommonKernelGeosGeoElement:self->conic_];
  [((id<GeogebraCommonKernelKernelNDGeoConicPartND>) check_protocol_cast(self->conicPart_, @protocol(GeogebraCommonKernelKernelNDGeoConicPartND))) setParametersWithDouble:((GeogebraCommonKernelPathParameter *) nil_chk([self->P_ getPathParameter]))->t_ withDouble:((GeogebraCommonKernelPathParameter *) nil_chk([self->Q_ getPathParameter]))->t_ withBoolean:YES];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoConicPartCircle)
