//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/operation/GeometryGraphOperation.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/BoundaryNodeRule.h"
#include "com/vividsolutions/jts/algorithm/LineIntersector.h"
#include "com/vividsolutions/jts/algorithm/RobustLineIntersector.h"
#include "com/vividsolutions/jts/geom/Geometry.h"
#include "com/vividsolutions/jts/geom/PrecisionModel.h"
#include "com/vividsolutions/jts/geomgraph/GeometryGraph.h"
#include "com/vividsolutions/jts/operation/GeometryGraphOperation.h"

@implementation ComVividsolutionsJtsOperationGeometryGraphOperation

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                    withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1 {
  ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(self, g0, g1);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0
                    withComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g1
       withComVividsolutionsJtsAlgorithmBoundaryNodeRule:(id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule>)boundaryNodeRule {
  ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsAlgorithmBoundaryNodeRule_(self, g0, g1, boundaryNodeRule);
  return self;
}

- (instancetype)initWithComVividsolutionsJtsGeomGeometry:(ComVividsolutionsJtsGeomGeometry *)g0 {
  ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_(self, g0);
  return self;
}

- (ComVividsolutionsJtsGeomGeometry *)getArgGeometryWithInt:(jint)i {
  return [((ComVividsolutionsJtsGeomgraphGeometryGraph *) nil_chk(IOSObjectArray_Get(nil_chk(arg_), i))) getGeometry];
}

- (void)setComputationPrecisionWithComVividsolutionsJtsGeomPrecisionModel:(ComVividsolutionsJtsGeomPrecisionModel *)pm {
  ComVividsolutionsJtsOperationGeometryGraphOperation_set_resultPrecisionModel_(self, pm);
  [((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(li_)) setPrecisionModelWithComVividsolutionsJtsGeomPrecisionModel:resultPrecisionModel_];
}

- (void)dealloc {
  RELEASE_(li_);
  RELEASE_(resultPrecisionModel_);
  RELEASE_(arg_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:", "GeometryGraphOperation", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsGeomGeometry:withComVividsolutionsJtsAlgorithmBoundaryNodeRule:", "GeometryGraphOperation", NULL, 0x1, NULL, NULL },
    { "initWithComVividsolutionsJtsGeomGeometry:", "GeometryGraphOperation", NULL, 0x1, NULL, NULL },
    { "getArgGeometryWithInt:", "getArgGeometry", "Lcom.vividsolutions.jts.geom.Geometry;", 0x1, NULL, NULL },
    { "setComputationPrecisionWithComVividsolutionsJtsGeomPrecisionModel:", "setComputationPrecision", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "li_", NULL, 0x14, "Lcom.vividsolutions.jts.algorithm.LineIntersector;", NULL, NULL,  },
    { "resultPrecisionModel_", NULL, 0x4, "Lcom.vividsolutions.jts.geom.PrecisionModel;", NULL, NULL,  },
    { "arg_", NULL, 0x4, "[Lcom.vividsolutions.jts.geomgraph.GeometryGraph;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationGeometryGraphOperation = { 2, "GeometryGraphOperation", "com.vividsolutions.jts.operation", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationGeometryGraphOperation;
}

@end

void ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationGeometryGraphOperation *self, ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsAlgorithmBoundaryNodeRule_(self, g0, g1, ComVividsolutionsJtsAlgorithmBoundaryNodeRule_get_OGC_SFS_BOUNDARY_RULE_());
}

ComVividsolutionsJtsOperationGeometryGraphOperation *new_ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1) {
  ComVividsolutionsJtsOperationGeometryGraphOperation *self = [ComVividsolutionsJtsOperationGeometryGraphOperation alloc];
  ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_(self, g0, g1);
  return self;
}

void ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsAlgorithmBoundaryNodeRule_(ComVividsolutionsJtsOperationGeometryGraphOperation *self, ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1, id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule> boundaryNodeRule) {
  NSObject_init(self);
  ComVividsolutionsJtsOperationGeometryGraphOperation_setAndConsume_li_(self, new_ComVividsolutionsJtsAlgorithmRobustLineIntersector_init());
  if ([((ComVividsolutionsJtsGeomPrecisionModel *) nil_chk([((ComVividsolutionsJtsGeomGeometry *) nil_chk(g0)) getPrecisionModel])) compareToWithId:[((ComVividsolutionsJtsGeomGeometry *) nil_chk(g1)) getPrecisionModel]] >= 0) [self setComputationPrecisionWithComVividsolutionsJtsGeomPrecisionModel:[g0 getPrecisionModel]];
  else [self setComputationPrecisionWithComVividsolutionsJtsGeomPrecisionModel:[g1 getPrecisionModel]];
  ComVividsolutionsJtsOperationGeometryGraphOperation_setAndConsume_arg_(self, [IOSObjectArray newArrayWithLength:2 type:ComVividsolutionsJtsGeomgraphGeometryGraph_class_()]);
  IOSObjectArray_SetAndConsume(self->arg_, 0, new_ComVividsolutionsJtsGeomgraphGeometryGraph_initWithInt_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsAlgorithmBoundaryNodeRule_(0, g0, boundaryNodeRule));
  IOSObjectArray_SetAndConsume(self->arg_, 1, new_ComVividsolutionsJtsGeomgraphGeometryGraph_initWithInt_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsAlgorithmBoundaryNodeRule_(1, g1, boundaryNodeRule));
}

ComVividsolutionsJtsOperationGeometryGraphOperation *new_ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsAlgorithmBoundaryNodeRule_(ComVividsolutionsJtsGeomGeometry *g0, ComVividsolutionsJtsGeomGeometry *g1, id<ComVividsolutionsJtsAlgorithmBoundaryNodeRule> boundaryNodeRule) {
  ComVividsolutionsJtsOperationGeometryGraphOperation *self = [ComVividsolutionsJtsOperationGeometryGraphOperation alloc];
  ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsGeomGeometry_withComVividsolutionsJtsAlgorithmBoundaryNodeRule_(self, g0, g1, boundaryNodeRule);
  return self;
}

void ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsOperationGeometryGraphOperation *self, ComVividsolutionsJtsGeomGeometry *g0) {
  NSObject_init(self);
  ComVividsolutionsJtsOperationGeometryGraphOperation_setAndConsume_li_(self, new_ComVividsolutionsJtsAlgorithmRobustLineIntersector_init());
  [self setComputationPrecisionWithComVividsolutionsJtsGeomPrecisionModel:[((ComVividsolutionsJtsGeomGeometry *) nil_chk(g0)) getPrecisionModel]];
  ComVividsolutionsJtsOperationGeometryGraphOperation_setAndConsume_arg_(self, [IOSObjectArray newArrayWithLength:1 type:ComVividsolutionsJtsGeomgraphGeometryGraph_class_()]);
  IOSObjectArray_SetAndConsume(self->arg_, 0, new_ComVividsolutionsJtsGeomgraphGeometryGraph_initWithInt_withComVividsolutionsJtsGeomGeometry_(0, g0));
  ;
}

ComVividsolutionsJtsOperationGeometryGraphOperation *new_ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_(ComVividsolutionsJtsGeomGeometry *g0) {
  ComVividsolutionsJtsOperationGeometryGraphOperation *self = [ComVividsolutionsJtsOperationGeometryGraphOperation alloc];
  ComVividsolutionsJtsOperationGeometryGraphOperation_initWithComVividsolutionsJtsGeomGeometry_(self, g0);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationGeometryGraphOperation)
