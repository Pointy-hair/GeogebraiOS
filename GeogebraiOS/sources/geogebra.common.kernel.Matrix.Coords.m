//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/Matrix/Coords.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/CoordMatrix.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/main/App.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelMatrixCoords () {
 @public
  jdouble norm__, sqNorm_;
  jboolean calcNorm__;
  jboolean calcSqNorm_;
  jint rows_;
}

- (GeogebraCommonKernelMatrixCoords *)vectorToLineWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                                                  withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V;

@end

__attribute__((unused)) static GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_crossProductWithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *v);

__attribute__((unused)) static GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_crossProduct4WithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *v);

__attribute__((unused)) static void GeogebraCommonKernelMatrixCoords_setCrossProductWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *v1, GeogebraCommonKernelMatrixCoords *v2);

__attribute__((unused)) static GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_vectorToLineWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *O, GeogebraCommonKernelMatrixCoords *V);

@interface GeogebraCommonKernelMatrixCoords_$1 : GeogebraCommonKernelMatrixCoords

- (jboolean)isNotFinalUndefined;

- (jboolean)isFinalUndefined;

- (instancetype)initWithDouble:(jdouble)arg$0
                    withDouble:(jdouble)arg$1
                    withDouble:(jdouble)arg$2
                    withDouble:(jdouble)arg$3;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelMatrixCoords_$1)

__attribute__((unused)) static void GeogebraCommonKernelMatrixCoords_$1_initWithDouble_withDouble_withDouble_withDouble_(GeogebraCommonKernelMatrixCoords_$1 *self, jdouble arg$0, jdouble arg$1, jdouble arg$2, jdouble arg$3);

__attribute__((unused)) static GeogebraCommonKernelMatrixCoords_$1 *new_GeogebraCommonKernelMatrixCoords_$1_initWithDouble_withDouble_withDouble_withDouble_(jdouble arg$0, jdouble arg$1, jdouble arg$2, jdouble arg$3) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelMatrixCoords_$1)

@interface GeogebraCommonKernelMatrixCoords_$2 : GeogebraCommonKernelMatrixCoords

- (jboolean)isNotFinalUndefined;

- (jboolean)isFinalUndefined;

- (instancetype)initWithDouble:(jdouble)arg$0
                    withDouble:(jdouble)arg$1
                    withDouble:(jdouble)arg$2;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelMatrixCoords_$2)

__attribute__((unused)) static void GeogebraCommonKernelMatrixCoords_$2_initWithDouble_withDouble_withDouble_(GeogebraCommonKernelMatrixCoords_$2 *self, jdouble arg$0, jdouble arg$1, jdouble arg$2);

__attribute__((unused)) static GeogebraCommonKernelMatrixCoords_$2 *new_GeogebraCommonKernelMatrixCoords_$2_initWithDouble_withDouble_withDouble_(jdouble arg$0, jdouble arg$1, jdouble arg$2) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelMatrixCoords_$2)

J2OBJC_INITIALIZED_DEFN(GeogebraCommonKernelMatrixCoords)

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_O_;
GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_VX_;
GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_VY_;
GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_VZ_;
GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_VZm_;
GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_UNDEFINED_;
GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_UNDEFINED3VALUE0_;

@implementation GeogebraCommonKernelMatrixCoords

+ (GeogebraCommonKernelMatrixCoords *)createInhomCoorsInD3 {
  return GeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
}

- (instancetype)initWithInt:(jint)rows {
  GeogebraCommonKernelMatrixCoords_initWithInt_(self, rows);
  return self;
}

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)vals {
  GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(self, vals);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  GeogebraCommonKernelMatrixCoords_initWithGeogebraCommonKernelMatrixCoords_(self, v);
  return self;
}

- (instancetype)initWithDouble:(jdouble)u
                    withDouble:(jdouble)v {
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_(self, u, v);
  return self;
}

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(self, x, y, z);
  return self;
}

+ (GeogebraCommonKernelMatrixCoords *)Coords4DLastEqualTo0WithDouble:(jdouble)x
                                                          withDouble:(jdouble)y
                                                          withDouble:(jdouble)z {
  return GeogebraCommonKernelMatrixCoords_Coords4DLastEqualTo0WithDouble_withDouble_withDouble_(x, y, z);
}

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z
                    withDouble:(jdouble)w {
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(self, x, y, z, w);
  return self;
}

- (void)setWithInt:(jint)i
        withDouble:(jdouble)val0 {
  *IOSDoubleArray_GetRef(nil_chk(val_), i - 1) = val0;
  calcNorm__ = calcSqNorm_ = YES;
}

- (void)setWithDoubleArray:(IOSDoubleArray *)vals0 {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(vals0))->size_; i++) *IOSDoubleArray_GetRef(nil_chk(val_), i) = IOSDoubleArray_Get(vals0, i);
  calcNorm__ = calcSqNorm_ = YES;
}

- (void)setValuesWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                              withInt:(jint)length {
  for (jint i = 0; i < length; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i);
  }
}

- (void)setWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  [self setWithDoubleArray:((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_];
}

- (void)setWithDouble:(jdouble)val0 {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = val0;
  }
  norm__ = JavaLangMath_sqrtWithDouble_(rows_) * JavaLangMath_absWithDouble_(val0);
  calcNorm__ = calcSqNorm_ = YES;
}

- (jdouble)getWithInt:(jint)i {
  return IOSDoubleArray_Get(nil_chk(val_), i - 1);
}

- (void)copy__WithDoubleArray:(IOSDoubleArray *)ret {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(ret), i) = IOSDoubleArray_Get(nil_chk(val_), i);
  }
}

- (jdouble)getX {
  return IOSDoubleArray_Get(nil_chk(val_), 0);
}

- (jdouble)getY {
  return IOSDoubleArray_Get(nil_chk(val_), 1);
}

- (jdouble)getZ {
  if (((IOSDoubleArray *) nil_chk(val_))->size_ > 2) {
    return IOSDoubleArray_Get(val_, 2);
  }
  return 0;
}

- (jdouble)getW {
  return IOSDoubleArray_Get(nil_chk(val_), 3);
}

- (jdouble)getLast {
  return IOSDoubleArray_Get(nil_chk(val_), rows_ - 1);
}

- (void)setXWithDouble:(jdouble)val {
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 0) = val;
  calcNorm__ = calcSqNorm_ = YES;
}

- (void)setYWithDouble:(jdouble)val {
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 1) = val;
  calcNorm__ = calcSqNorm_ = YES;
}

- (void)setZWithDouble:(jdouble)val {
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 2) = val;
  calcNorm__ = calcSqNorm_ = YES;
}

- (void)setWWithDouble:(jdouble)val {
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 3) = val;
  calcNorm__ = calcSqNorm_ = YES;
}

- (jint)getLength {
  return rows_;
}

- (GeogebraCommonKernelMatrixCoords *)copyVector {
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(rows_) autorelease];
  for (jint i = 0; i < rows_; i++) *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i);
  return result;
}

- (GeogebraCommonKernelMatrixCoords *)subVectorWithInt:(jint)start
                                               withInt:(jint)end {
  jint r = end - start + 1;
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(r) autorelease];
  for (jint i = 0; i < r; i++) *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, start + i - 1);
  return result;
}

- (GeogebraCommonKernelMatrixCoords *)subVectorWithInt:(jint)row {
  jint r = rows_;
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(r - 1) autorelease];
  jint shift = 0;
  for (jint i = 0; i < r; i++) {
    if (i == row) shift = 1;
    else *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i + shift);
  }
  return result;
}

- (jdouble)dotproductWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  jint len = JavaLangMath_minWithInt_withInt_([self getLength], [((GeogebraCommonKernelMatrixCoords *) nil_chk(v)) getLength]);
  jdouble res = 0;
  for (jint i = 0; i < len; i++) res += IOSDoubleArray_Get(nil_chk(val_), i) * IOSDoubleArray_Get(v->val_, i);
  return res;
}

- (GeogebraCommonKernelMatrixCoords *)crossProductWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  return GeogebraCommonKernelMatrixCoords_crossProductWithGeogebraCommonKernelMatrixCoords_(self, v);
}

- (GeogebraCommonKernelMatrixCoords *)crossProduct4WithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  return GeogebraCommonKernelMatrixCoords_crossProduct4WithGeogebraCommonKernelMatrixCoords_(self, v);
}

- (void)setCrossProductWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v2 {
  GeogebraCommonKernelMatrixCoords_setCrossProductWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(self, v1, v2);
}

- (jdouble)norm {
  if (calcNorm__) {
    [self calcNorm];
    calcNorm__ = NO;
  }
  return norm__;
}

- (jdouble)calcNorm {
  norm__ = JavaLangMath_sqrtWithDouble_([self dotproductWithGeogebraCommonKernelMatrixCoords:self]);
  return norm__;
}

- (jdouble)getNorm {
  return norm__;
}

- (jdouble)squareNorm {
  if (calcSqNorm_) {
    sqNorm_ = [self dotproductWithGeogebraCommonKernelMatrixCoords:self];
    calcSqNorm_ = NO;
  }
  return sqNorm_;
}

- (GeogebraCommonKernelMatrixCoords *)normalized {
  return [self normalizedWithBoolean:NO];
}

- (GeogebraCommonKernelMatrixCoords *)normalizedWithBoolean:(jboolean)checkOneDirection {
  GeogebraCommonKernelMatrixCoords *ret = [new_GeogebraCommonKernelMatrixCoords_initWithInt_([self getLength]) autorelease];
  [self calcNorm];
  jdouble normInv = 1 / [self getNorm];
  jint len = [self getLength];
  for (jint i = 0; i < len; i++) {
    jdouble v = IOSDoubleArray_Get(nil_chk(val_), i) * normInv;
    if (checkOneDirection && GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(JavaLangMath_absWithDouble_(v), 1)) {
      if (v < 0) *IOSDoubleArray_GetRef(ret->val_, i) = -1;
      else *IOSDoubleArray_GetRef(ret->val_, i) = 1;
      for (jint j = 0; j < i; j++) *IOSDoubleArray_GetRef(ret->val_, j) = 0;
      for (jint j = i + 1; j < len; j++) *IOSDoubleArray_GetRef(ret->val_, j) = 0;
      break;
    }
    *IOSDoubleArray_GetRef(ret->val_, i) = v;
  }
  return ret;
}

- (void)normalizedWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)ret {
  [self calcNorm];
  jdouble normInv = 1 / [self getNorm];
  for (jint i = 0; i < ((GeogebraCommonKernelMatrixCoords *) nil_chk(ret))->rows_; i++) {
    jdouble v = IOSDoubleArray_Get(nil_chk(val_), i) * normInv;
    *IOSDoubleArray_GetRef(ret->val_, i) = v;
  }
}

- (GeogebraCommonKernelMatrixCoords *)normalize {
  [self normalizeWithBoolean:YES];
  return self;
}

- (GeogebraCommonKernelMatrixCoords *)normalizeWithBoolean:(jboolean)recalcNorm {
  if (recalcNorm) [self calcNorm];
  jdouble normInv = 1 / [self getNorm];
  jint len = [self getLength];
  for (jint i = 0; i < len; i++) *IOSDoubleArray_GetRef(nil_chk(val_), i) *= normInv;
  norm__ = sqNorm_ = 1.0;
  return self;
}

- (jdouble)distanceWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk([self subWithGeogebraCommonKernelMatrixCoords:v])) norm];
}

- (jdouble)squareDistance3WithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  jdouble x = [self getX] - [((GeogebraCommonKernelMatrixCoords *) nil_chk(v)) getX];
  jdouble y = [self getY] - [v getY];
  jdouble z = [self getZ] - [v getZ];
  return x * x + y * y + z * z;
}

- (GeogebraCommonKernelMatrixCoords *)vectorToLineWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                                                  withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V {
  return GeogebraCommonKernelMatrixCoords_vectorToLineWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(self, O, V);
}

- (jdouble)distLineWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V {
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk(GeogebraCommonKernelMatrixCoords_vectorToLineWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(self, O, V))) norm];
}

- (jdouble)squareDistLine3WithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                          withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V {
  GeogebraCommonKernelMatrixCoords *v = GeogebraCommonKernelMatrixCoords_vectorToLineWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(self, O, V);
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk(v)) getX] * [v getX] + [v getY] * [v getY] + [v getZ] * [v getZ];
}

- (jdouble)distPlaneWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vn {
  return JavaLangMath_absWithDouble_([self distPlaneOrientedWithGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:vn]);
}

- (jdouble)distPlaneOrientedWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vn {
  return [((GeogebraCommonKernelMatrixCoords *) nil_chk([self subWithGeogebraCommonKernelMatrixCoords:o])) dotproductWithGeogebraCommonKernelMatrixCoords:vn];
}

- (void)projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                         withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords
                         withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:[m getVz] withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:globalCoords withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
}

- (void)projectPlaneWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vx
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vy
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vz
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk((GeogebraCommonKernelMatrixCoords_crossProductWithGeogebraCommonKernelMatrixCoords_(nil_chk(vx), vy)))) dotproductWithGeogebraCommonKernelMatrixCoords:vz], 0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(inPlaneCoords)) setXWithDouble:0];
    [inPlaneCoords setYWithDouble:0];
    [inPlaneCoords setZWithDouble:-1];
    [inPlaneCoords setWWithDouble:0];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(globalCoords)) setWithGeogebraCommonKernelMatrixCoords:vz];
    return;
  }
  [self projectPlaneNoCheckWithGeogebraCommonKernelMatrixCoords:vx withGeogebraCommonKernelMatrixCoords:vy withGeogebraCommonKernelMatrixCoords:vz withGeogebraCommonKernelMatrixCoords:o withDoubleArray:((GeogebraCommonKernelMatrixCoords *) nil_chk(globalCoords))->val_ withDoubleArray:((GeogebraCommonKernelMatrixCoords *) nil_chk(inPlaneCoords))->val_];
}

- (void)projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                      withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  [self projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:[m getVz] withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
}

- (void)projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vx
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vy
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vz
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk((GeogebraCommonKernelMatrixCoords_crossProductWithGeogebraCommonKernelMatrixCoords_(nil_chk(vx), vy)))) dotproductWithGeogebraCommonKernelMatrixCoords:vz], 0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(inPlaneCoords)) setXWithDouble:0];
    [inPlaneCoords setYWithDouble:0];
    [inPlaneCoords setZWithDouble:-1];
    [inPlaneCoords setWWithDouble:0];
    return;
  }
  [self projectPlaneNoCheckInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:vx withGeogebraCommonKernelMatrixCoords:vy withGeogebraCommonKernelMatrixCoords:vz withGeogebraCommonKernelMatrixCoords:o withDoubleArray:((GeogebraCommonKernelMatrixCoords *) nil_chk(inPlaneCoords))->val_];
}

- (void)projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                         withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords {
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:[m getVz] withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:globalCoords];
}

- (void)projectPlaneWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vx
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vy
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vz
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                    withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords {
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk((GeogebraCommonKernelMatrixCoords_crossProductWithGeogebraCommonKernelMatrixCoords_(nil_chk(vx), vy)))) dotproductWithGeogebraCommonKernelMatrixCoords:vz], 0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(globalCoords)) setWithGeogebraCommonKernelMatrixCoords:vz];
    return;
  }
  [self projectPlaneNoCheckWithGeogebraCommonKernelMatrixCoords:vx withGeogebraCommonKernelMatrixCoords:vy withGeogebraCommonKernelMatrixCoords:vz withGeogebraCommonKernelMatrixCoords:o withDoubleArray:((GeogebraCommonKernelMatrixCoords *) nil_chk(globalCoords))->val_ withDoubleArray:globalCoords->val_];
}

- (GeogebraCommonKernelMatrixCoords *)projectPlaneWithInverseMatrixWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m {
  return [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) mulWithGeogebraCommonKernelMatrixCoords:self];
}

- (void)projectPlaneNoCheckWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vx
                           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vy
                           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vz
                           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                                                withDoubleArray:(IOSDoubleArray *)globalCoords
                                                withDoubleArray:(IOSDoubleArray *)inPlaneCoords {
  [self projectPlaneNoCheckInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:vx withGeogebraCommonKernelMatrixCoords:vy withGeogebraCommonKernelMatrixCoords:vz withGeogebraCommonKernelMatrixCoords:o withDoubleArray:inPlaneCoords];
  jdouble coeff = -IOSDoubleArray_Get(nil_chk(inPlaneCoords), 2);
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(vz)) mulWithDouble:coeff withDoubleArray:globalCoords];
  [self addWithDoubleArray:globalCoords withDoubleArray:globalCoords];
}

- (void)projectPlaneNoCheckInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vx
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vy
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vz
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                                                             withDoubleArray:(IOSDoubleArray *)inPlaneCoords {
  GeogebraCommonKernelMatrixCoordMatrix_solveWithDoubleArray_withGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoordsArray_(inPlaneCoords, self, [IOSObjectArray arrayWithObjects:(id[]){ vx, vy, vz, o } count:4 type:GeogebraCommonKernelMatrixCoords_class_()]);
}

- (void)projectPlaneThruVWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                              withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                              withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords
                              withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:globalCoords withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
}

- (void)projectPlaneThruVWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                              withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                              withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords {
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:globalCoords];
}

- (void)projectPlaneThruVInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  [self projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
}

- (void)projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  GeogebraCommonKernelMatrixCoords *v3 = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getColumnWithInt:3];
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(v3)) dotproductWithGeogebraCommonKernelMatrixCoords:v], 0.0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [self projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:m withGeogebraCommonKernelMatrixCoords:globalCoords withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
    return;
  }
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:[m getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:globalCoords withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
}

- (void)projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords {
  GeogebraCommonKernelMatrixCoords *v3 = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getColumnWithInt:3];
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(v3)) dotproductWithGeogebraCommonKernelMatrixCoords:v], 0.0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [self projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:m withGeogebraCommonKernelMatrixCoords:globalCoords];
    return;
  }
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:[m getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:globalCoords];
}

- (void)projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vx
                                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vy
                                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vz
                                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)o
                                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords {
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(vz)) dotproductWithGeogebraCommonKernelMatrixCoords:v], 0.0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [self projectPlaneWithGeogebraCommonKernelMatrixCoords:vx withGeogebraCommonKernelMatrixCoords:vy withGeogebraCommonKernelMatrixCoords:vz withGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:globalCoords];
    return;
  }
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:vx withGeogebraCommonKernelMatrixCoords:vy withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:o withGeogebraCommonKernelMatrixCoords:globalCoords];
}

- (void)projectPlaneThruVIfPossibleInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                                     withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  GeogebraCommonKernelMatrixCoords *v3 = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getColumnWithInt:3];
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(v3)) dotproductWithGeogebraCommonKernelMatrixCoords:v], 0.0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [self projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:m withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
    return;
  }
  [self projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:[m getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
}

- (void)projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)oldCoords
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)globalCoords
                                        withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)inPlaneCoords {
  GeogebraCommonKernelMatrixCoords *v3 = [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getColumnWithInt:3];
  if (GeogebraCommonKernelKernel_isZeroWithDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(v3)) dotproductWithGeogebraCommonKernelMatrixCoords:v])) {
    GeogebraCommonKernelMatrixCoords *firstProjection = GeogebraCommonKernelMatrixCoords_createInhomCoorsInD3();
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(oldCoords)) projectLineWithGeogebraCommonKernelMatrixCoords:self withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:firstProjection withDoubleArray:nil];
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(firstProjection)) projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:m withGeogebraCommonKernelMatrixCoords:globalCoords withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
    return;
  }
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:[m getVx] withGeogebraCommonKernelMatrixCoords:[m getVy] withGeogebraCommonKernelMatrixCoords:v withGeogebraCommonKernelMatrixCoords:[m getOrigin] withGeogebraCommonKernelMatrixCoords:globalCoords withGeogebraCommonKernelMatrixCoords:inPlaneCoords];
}

- (void)projectLineWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)H
                                        withDoubleArray:(IOSDoubleArray *)parameters {
  [self subWithGeogebraCommonKernelMatrixCoords:O withGeogebraCommonKernelMatrixCoords:H];
  GeogebraCommonKernelMatrixCoords *N = [((GeogebraCommonKernelMatrixCoords *) nil_chk(V)) normalized];
  jdouble parameter = [((GeogebraCommonKernelMatrixCoords *) nil_chk(H)) dotproductWithGeogebraCommonKernelMatrixCoords:N];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(N)) mulWithDouble:parameter withGeogebraCommonKernelMatrixCoords:H];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(O)) addWithGeogebraCommonKernelMatrixCoords:H withGeogebraCommonKernelMatrixCoords:H];
  if (parameters == nil) {
    return;
  }
  *IOSDoubleArray_GetRef(nil_chk(parameters), 0) = parameter / [V norm];
  *IOSDoubleArray_GetRef(parameters, 1) = parameter;
}

- (void)projectLineWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V
                   withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)H {
  [self subWithGeogebraCommonKernelMatrixCoords:O withGeogebraCommonKernelMatrixCoords:H];
  GeogebraCommonKernelMatrixCoords *N = [((GeogebraCommonKernelMatrixCoords *) nil_chk(V)) normalized];
  jdouble parameter = [((GeogebraCommonKernelMatrixCoords *) nil_chk(H)) dotproductWithGeogebraCommonKernelMatrixCoords:N];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(N)) mulWithDouble:parameter withGeogebraCommonKernelMatrixCoords:H];
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(O)) addWithGeogebraCommonKernelMatrixCoords:H withGeogebraCommonKernelMatrixCoords:H];
}

- (void)projectNearLineWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V2
                       withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)project {
  GeogebraCommonKernelMatrixCoords *V3 = GeogebraCommonKernelMatrixCoords_crossProductWithGeogebraCommonKernelMatrixCoords_(nil_chk(V), V2);
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(V3)) norm], 0.0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) {
    [((GeogebraCommonKernelMatrixCoords *) nil_chk(project)) setWithGeogebraCommonKernelMatrixCoords:self];
    return;
  }
  [self projectPlaneWithGeogebraCommonKernelMatrixCoords:V withGeogebraCommonKernelMatrixCoords:V3 withGeogebraCommonKernelMatrixCoords:V2 withGeogebraCommonKernelMatrixCoords:O withGeogebraCommonKernelMatrixCoords:project];
}

- (jdouble)projectedParameterOnLineWithDirectionWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)O
                                                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V
                                                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)V2
                                                withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)tmp {
  GeogebraCommonKernelMatrixCoords *V3 = GeogebraCommonKernelMatrixCoords_crossProduct4WithGeogebraCommonKernelMatrixCoords_(nil_chk(V), V2);
  if ([((GeogebraCommonKernelMatrixCoords *) nil_chk(V3)) isZero]) {
    return 0;
  }
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(O)) projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:V2 withGeogebraCommonKernelMatrixCoords:V3 withGeogebraCommonKernelMatrixCoords:V withGeogebraCommonKernelMatrixCoords:self withGeogebraCommonKernelMatrixCoords:tmp];
  return -[((GeogebraCommonKernelMatrixCoords *) nil_chk(tmp)) getZ];
}

- (GeogebraCommonKernelMatrixCoords *)subWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  jint i;
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(rows_) autorelease];
  for (i = 0; i < rows_; i++) *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i) - IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i);
  return result;
}

- (void)subWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)result {
  for (jint i = 0; i < ((GeogebraCommonKernelMatrixCoords *) nil_chk(result))->rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i) - IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i);
  }
}

- (GeogebraCommonKernelMatrixCoords *)setSubWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v2 {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v1))->val_, i) - IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v2))->val_, i);
  }
  return self;
}

- (GeogebraCommonKernelMatrixCoords *)getInhomCoords {
  jint r = rows_;
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(r - 1) autorelease];
  jdouble wdiv = 1 / IOSDoubleArray_Get(nil_chk(val_), r - 1);
  for (jint i = 0; i < r - 1; i++) *IOSDoubleArray_GetRef(result->val_, i) = IOSDoubleArray_Get(val_, i) * wdiv;
  return result;
}

- (GeogebraCommonKernelMatrixCoords *)getInhomCoordsInSameDimension {
  jint r = rows_;
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(val_), r - 1), 1)) return self;
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(r) autorelease];
  jdouble wdiv = 1 / IOSDoubleArray_Get(val_, r - 1);
  for (jint i = 0; i < r - 1; i++) *IOSDoubleArray_GetRef(result->val_, i) = IOSDoubleArray_Get(val_, i) * wdiv;
  *IOSDoubleArray_GetRef(result->val_, r - 1) = 1;
  return result;
}

- (void)setInhomCoords {
  if (GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(val_), rows_ - 1), 1)) return;
  jdouble wdiv = 1 / IOSDoubleArray_Get(val_, rows_ - 1);
  for (jint i = 0; i < rows_ - 1; i++) {
    *IOSDoubleArray_GetRef(val_, i) *= wdiv;
  }
  *IOSDoubleArray_GetRef(val_, rows_ - 1) = 1;
}

- (GeogebraCommonKernelMatrixCoords *)getCoordsLast1 {
  jint len = [self getLength];
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(len) autorelease];
  jdouble lastCoord = IOSDoubleArray_Get(nil_chk(val_), len - 1);
  if (lastCoord != 0.0) {
    jdouble lastCoordInv = 1 / lastCoord;
    for (jint i = 0; i < len; i++) *IOSDoubleArray_GetRef(result->val_, i) = IOSDoubleArray_Get(val_, i) * lastCoordInv;
  }
  else [result setWithGeogebraCommonKernelMatrixCoords:self];
  return result;
}

- (GeogebraCommonKernelMatrixCoords *)projectInfDim {
  jint len = [self getLength];
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(len - 1) autorelease];
  for (jint i = 0; i < len - 1; i++) *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i);
  *IOSDoubleArray_GetRef(nil_chk(result->val_), len - 2) = IOSDoubleArray_Get(val_, len - 1);
  return result;
}

- (jboolean)equalsForKernelWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                                     withDouble:(jdouble)precision {
  jint len = [self getLength];
  for (jint i = 0; i < len; i++) if (!GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(val_), i), IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i), precision)) return NO;
  return YES;
}

- (jboolean)equalsForKernelWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  jint len = [self getLength];
  for (jint i = 0; i < len; i++) if (!GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_(IOSDoubleArray_Get(nil_chk(val_), i), IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i))) return NO;
  return YES;
}

- (jboolean)isEqualWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  return [self equalsForKernelWithGeogebraCommonKernelMatrixCoords:v withDouble:GeogebraCommonKernelKernel_STANDARD_PRECISION];
}

- (jboolean)isZero {
  jint len = [self getLength];
  for (jint i = 0; i < len; i++) if (!GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(val_), i), 0, GeogebraCommonKernelKernel_STANDARD_PRECISION)) return NO;
  return YES;
}

- (jboolean)equalsForKernelWithDouble:(jdouble)val
                           withDouble:(jdouble)precision {
  jint len = [self getLength];
  for (jint i = 0; i < len; i++) if (!GeogebraCommonKernelKernel_isEqualWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(self->val_), i), val, precision)) return NO;
  return YES;
}

- (IOSObjectArray *)completeOrthonormal {
  GeogebraCommonKernelMatrixCoords *vn1 = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  if (IOSDoubleArray_Get(nil_chk(val_), 0) != 0) {
    *IOSDoubleArray_GetRef(vn1->val_, 0) = -IOSDoubleArray_Get(val_, 1);
    *IOSDoubleArray_GetRef(vn1->val_, 1) = IOSDoubleArray_Get(val_, 0);
    [vn1 normalize];
  }
  else {
    *IOSDoubleArray_GetRef(vn1->val_, 0) = 1.0;
  }
  GeogebraCommonKernelMatrixCoords *vn2 = GeogebraCommonKernelMatrixCoords_crossProduct4WithGeogebraCommonKernelMatrixCoords_(self, vn1);
  [((GeogebraCommonKernelMatrixCoords *) nil_chk(vn2)) normalize];
  return [IOSObjectArray arrayWithObjects:(id[]){ vn1, vn2 } count:2 type:GeogebraCommonKernelMatrixCoords_class_()];
}

- (void)completeOrthonormalWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vn1
                           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vn2 {
  if (IOSDoubleArray_Get(nil_chk(val_), 0) != 0) {
    *IOSDoubleArray_GetRef(((GeogebraCommonKernelMatrixCoords *) nil_chk(vn1))->val_, 0) = -IOSDoubleArray_Get(val_, 1);
    *IOSDoubleArray_GetRef(vn1->val_, 1) = IOSDoubleArray_Get(val_, 0);
    *IOSDoubleArray_GetRef(vn1->val_, 2) = 0;
    *IOSDoubleArray_GetRef(vn1->val_, 3) = 0;
    [vn1 normalize];
  }
  else {
    *IOSDoubleArray_GetRef(((GeogebraCommonKernelMatrixCoords *) nil_chk(vn1))->val_, 0) = 1.0;
    *IOSDoubleArray_GetRef(vn1->val_, 1) = 0.0;
    *IOSDoubleArray_GetRef(vn1->val_, 2) = 0.0;
    *IOSDoubleArray_GetRef(vn1->val_, 3) = 0.0;
  }
  GeogebraCommonKernelMatrixCoords_setCrossProductWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(nil_chk(vn2), self, vn1);
  [vn2 setWWithDouble:0];
  [vn2 normalize];
}

- (void)completeOrthonormalWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vn1 {
  if (IOSDoubleArray_Get(nil_chk(val_), 2) != 0) {
    *IOSDoubleArray_GetRef(((GeogebraCommonKernelMatrixCoords *) nil_chk(vn1))->val_, 2) = -IOSDoubleArray_Get(val_, 1);
    *IOSDoubleArray_GetRef(vn1->val_, 1) = IOSDoubleArray_Get(val_, 2);
    *IOSDoubleArray_GetRef(vn1->val_, 0) = 0;
    *IOSDoubleArray_GetRef(vn1->val_, 3) = 0;
    [vn1 normalize];
  }
  else {
    *IOSDoubleArray_GetRef(((GeogebraCommonKernelMatrixCoords *) nil_chk(vn1))->val_, 0) = 0.0;
    *IOSDoubleArray_GetRef(vn1->val_, 1) = 0.0;
    *IOSDoubleArray_GetRef(vn1->val_, 2) = 1.0;
    *IOSDoubleArray_GetRef(vn1->val_, 3) = 0.0;
  }
}

- (void)completeOrthonormalKeepInXOYPlaneIfPossibleWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)vn1 {
  if (!GeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(nil_chk(val_), 0)) || !GeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(val_, 1))) {
    *IOSDoubleArray_GetRef(((GeogebraCommonKernelMatrixCoords *) nil_chk(vn1))->val_, 0) = -IOSDoubleArray_Get(val_, 1);
    *IOSDoubleArray_GetRef(vn1->val_, 1) = IOSDoubleArray_Get(val_, 0);
    *IOSDoubleArray_GetRef(vn1->val_, 2) = 0;
    *IOSDoubleArray_GetRef(vn1->val_, 3) = 0;
    [vn1 normalize];
  }
  else {
    *IOSDoubleArray_GetRef(((GeogebraCommonKernelMatrixCoords *) nil_chk(vn1))->val_, 0) = 1.0;
    *IOSDoubleArray_GetRef(vn1->val_, 1) = 0.0;
    *IOSDoubleArray_GetRef(vn1->val_, 2) = 0.0;
    *IOSDoubleArray_GetRef(vn1->val_, 3) = 0.0;
  }
}

- (GeogebraCommonKernelMatrixCoords *)addWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(rows_) autorelease];
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i) + IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i);
  }
  return result;
}

- (void)addWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                withDoubleArray:(IOSDoubleArray *)result {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(result), i) = IOSDoubleArray_Get(nil_chk(val_), i) + IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i);
  }
}

- (void)addWithDoubleArray:(IOSDoubleArray *)v
           withDoubleArray:(IOSDoubleArray *)result {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(result), i) = IOSDoubleArray_Get(nil_chk(val_), i) + IOSDoubleArray_Get(nil_chk(v), i);
  }
}

- (GeogebraCommonKernelMatrixCoords *)addSmallerWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(rows_) autorelease];
  for (jint i = 0; i < ((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i) + IOSDoubleArray_Get(v->val_, i);
  }
  return result;
}

- (void)addInsideWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_))->size_; i++) {
    *IOSDoubleArray_GetRef(val_, i) += IOSDoubleArray_Get(v->val_, i);
  }
}

- (void)addInsideWithDouble:(jdouble)v {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) += v;
  }
}

- (GeogebraCommonKernelMatrixCoords *)mulWithDouble:(jdouble)val0 {
  GeogebraCommonKernelMatrixCoords *result = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(rows_) autorelease];
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(result->val_), i) = IOSDoubleArray_Get(val_, i) * val0;
  }
  return result;
}

- (void)mulWithDouble:(jdouble)val0
withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)res {
  for (jint i = 0; i < ((GeogebraCommonKernelMatrixCoords *) nil_chk(res))->rows_ && i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(res->val_), i) = IOSDoubleArray_Get(val_, i) * val0;
  }
}

- (GeogebraCommonKernelMatrixCoords *)setMulWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
                                                                      withDouble:(jdouble)val0 {
  for (jint i = 0; i < rows_ && i < ((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i) * val0;
  }
  return self;
}

- (void)mulWithDouble:(jdouble)val0
      withDoubleArray:(IOSDoubleArray *)res {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(res))->size_ && i < rows_; i++) {
    *IOSDoubleArray_GetRef(res, i) = IOSDoubleArray_Get(nil_chk(val_), i) * val0;
  }
}

- (void)addWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v
           withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)res {
  for (jint i = 0; i < ((GeogebraCommonKernelMatrixCoords *) nil_chk(res))->rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(res->val_), i) = IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_, i) + IOSDoubleArray_Get(val_, i);
  }
}

- (GeogebraCommonKernelMatrixCoords *)setAddWithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                                            withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v2 {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v1))->val_, i) + IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v2))->val_, i);
  }
  return self;
}

- (GeogebraCommonKernelMatrixCoords *)setAdd3WithGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v1
                                             withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v2 {
  for (jint i = 0; i < 3; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v1))->val_, i) + IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v2))->val_, i);
  }
  return self;
}

- (GeogebraCommonKernelMatrixCoords *)setBarycenterWithGeogebraCommonKernelMatrixCoordsArray:(IOSObjectArray *)v {
  jdouble f = 1.0 / ((IOSObjectArray *) nil_chk(v))->size_;
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = 0;
    for (jint j = 0; j < v->size_; j++) {
      *IOSDoubleArray_GetRef(val_, i) += IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(IOSObjectArray_Get(v, j)))->val_, i);
    }
    *IOSDoubleArray_GetRef(val_, i) *= f;
  }
  return self;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  GeogebraCommonKernelMatrixCoords_mainWithNSStringArray_(args);
}

- (GeogebraCommonKernelMatrixCoords *)getCoordsIn2DView {
  jint dim = rows_ - 1;
  switch (dim) {
    case 2:
    return [new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_([self getX], [self getY], [self getZ]) autorelease];
    case -1:
    case 0:
    return [new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(0, 0, [self getX]) autorelease];
    case 1:
    return [new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_([self getX], 0, [self getY]) autorelease];
    default:
    for (jint i = 3; i <= dim; i++) {
      if (JavaLangDouble_isNaNWithDouble_([self getWithInt:i]) || !GeogebraCommonKernelKernel_isZeroWithDouble_([self getWithInt:i])) return [new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(JavaLangDouble_NaN, JavaLangDouble_NaN, JavaLangDouble_NaN) autorelease];
    }
    return [new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_([self getWithInt:1], [self getWithInt:2], [self getWithInt:dim + 1]) autorelease];
  }
}

- (jdouble)getGrayScale {
  return 0.2989 * [self getX] + 0.5870 * [self getY] + 0.1140 * [self getZ];
}

- (void)convertToGrayScale {
  jdouble gray = [self getGrayScale];
  [self setXWithDouble:gray];
  [self setYWithDouble:gray];
  [self setZWithDouble:gray];
}

- (jboolean)isPointDefined {
  if (GeogebraCommonKernelKernel_isZeroWithDouble_([self getW])) {
    return NO;
  }
  return [self isDefined];
}

- (jboolean)isDefined {
  for (jint i = 0; i < rows_; i++) {
    if (JavaLangDouble_isNaNWithDouble_(IOSDoubleArray_Get(nil_chk(val_), i))) {
      return NO;
    }
  }
  return YES;
}

- (void)setUndefined {
  *IOSDoubleArray_GetRef(nil_chk(val_), 0) = JavaLangDouble_NaN;
}

- (void)setPositiveInfinity {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = JavaLangDouble_POSITIVE_INFINITY;
  }
}

- (void)setNegativeInfinity {
  for (jint i = 0; i < rows_; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) = JavaLangDouble_NEGATIVE_INFINITY;
  }
}

- (IOSFloatArray *)get3ForGL {
  IOSFloatArray *ret = [IOSFloatArray arrayWithLength:3];
  for (jint i = 0; i < 3; i++) {
    *IOSFloatArray_GetRef(ret, i) = (jfloat) IOSDoubleArray_Get(nil_chk(val_), i);
  }
  return ret;
}

- (IOSFloatArray *)get4ForGL {
  IOSFloatArray *ret = [IOSFloatArray arrayWithLength:4];
  for (jint i = 0; i < 4; i++) {
    *IOSFloatArray_GetRef(ret, i) = (jfloat) IOSDoubleArray_Get(nil_chk(val_), i);
  }
  return ret;
}

- (void)checkReverseForFirstValuePositive {
  jboolean zero = YES;
  jint i = 0;
  while (i < ((IOSDoubleArray *) nil_chk(val_))->size_ && zero) {
    if (!GeogebraCommonKernelKernel_isZeroWithDouble_(IOSDoubleArray_Get(val_, i))) {
      zero = NO;
    }
    else {
      i++;
    }
  }
  if (!zero && IOSDoubleArray_Get(val_, i) < 0) {
    while (i < val_->size_) {
      *IOSDoubleArray_GetRef(val_, i) *= -1;
      i++;
    }
  }
}

- (IOSDoubleArray *)get {
  return val_;
}

- (void)getWithDoubleArray:(IOSDoubleArray *)ret {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(ret))->size_; i++) {
    *IOSDoubleArray_GetRef(ret, i) = IOSDoubleArray_Get(nil_chk(val_), i);
  }
}

- (jboolean)isFinite {
  for (jint i = 0; i < rows_; i++) {
    if (JavaLangDouble_isInfiniteWithDouble_(IOSDoubleArray_Get(nil_chk(val_), i))) {
      return NO;
    }
  }
  return YES;
}

- (GeogebraCommonKernelMatrixCoords *)mulInsideWithDouble:(jdouble)v {
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(val_))->size_; i++) {
    *IOSDoubleArray_GetRef(val_, i) *= v;
  }
  return self;
}

- (void)mulInside3WithDouble:(jdouble)v {
  for (jint i = 0; i < 3; i++) {
    *IOSDoubleArray_GetRef(nil_chk(val_), i) *= v;
  }
}

- (NSString *)description {
  NSString *s = @"";
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(val_))->size_; i++) {
    s = JreStrcat("$$", s, JreStrcat("DC", IOSDoubleArray_Get(val_, i), 0x000a));
  }
  return s;
}

- (GeogebraCommonKernelMatrixCoords *)setMulWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                                 withGeogebraCommonKernelMatrixCoords:(GeogebraCommonKernelMatrixCoords *)v {
  for (jint i = 1; i <= [self getLength]; i++) {
    jdouble r = 0;
    for (jint n = 1; n <= [((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getColumns]; n++) {
      r += [m getWithInt:i withInt:n] * [((GeogebraCommonKernelMatrixCoords *) nil_chk(v)) getWithInt:n];
    }
    [self setWithInt:i withDouble:r];
  }
  return self;
}

- (GeogebraCommonKernelMatrixCoords *)setMulPointWithGeogebraCommonKernelMatrixCoordMatrix:(GeogebraCommonKernelMatrixCoordMatrix *)m
                                                                                withDouble:(jdouble)x
                                                                                withDouble:(jdouble)y
                                                                                withDouble:(jdouble)z {
  for (jint i = 1; i <= [self getLength]; i++) {
    [self setWithInt:i withDouble:[((GeogebraCommonKernelMatrixCoordMatrix *) nil_chk(m)) getWithInt:i withInt:1] * x + [m getWithInt:i withInt:2] * y + [m getWithInt:i withInt:3] * z + [m getWithInt:i withInt:4]];
  }
  return self;
}

- (jboolean)isNotFinalUndefined {
  return YES;
}

- (jboolean)isFinalUndefined {
  return NO;
}

- (void)dealloc {
  RELEASE_(val_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [GeogebraCommonKernelMatrixCoords class]) {
    JreStrongAssignAndConsume(&GeogebraCommonKernelMatrixCoords_O_, nil, new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, 0, 1));
    JreStrongAssignAndConsume(&GeogebraCommonKernelMatrixCoords_VX_, nil, new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(1, 0, 0, 0));
    JreStrongAssignAndConsume(&GeogebraCommonKernelMatrixCoords_VY_, nil, new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 1, 0, 0));
    JreStrongAssignAndConsume(&GeogebraCommonKernelMatrixCoords_VZ_, nil, new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, 1, 0));
    JreStrongAssignAndConsume(&GeogebraCommonKernelMatrixCoords_VZm_, nil, new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(0, 0, -1, 0));
    JreStrongAssignAndConsume(&GeogebraCommonKernelMatrixCoords_UNDEFINED_, nil, new_GeogebraCommonKernelMatrixCoords_$1_initWithDouble_withDouble_withDouble_withDouble_(JavaLangDouble_NaN, JavaLangDouble_NaN, JavaLangDouble_NaN, JavaLangDouble_NaN));
    JreStrongAssignAndConsume(&GeogebraCommonKernelMatrixCoords_UNDEFINED3VALUE0_, nil, new_GeogebraCommonKernelMatrixCoords_$2_initWithDouble_withDouble_withDouble_(0, 0, 0));
    J2OBJC_SET_INITIALIZED(GeogebraCommonKernelMatrixCoords)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createInhomCoorsInD3", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "initWithInt:", "Coords", NULL, 0x1, NULL, NULL },
    { "initWithDoubleArray:", "Coords", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelMatrixCoords:", "Coords", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:", "Coords", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:", "Coords", NULL, 0x1, NULL, NULL },
    { "Coords4DLastEqualTo0WithDouble:withDouble:withDouble:", "Coords4DLastEqualTo0", "Lgeogebra.common.kernel.Matrix.Coords;", 0x19, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:withDouble:", "Coords", NULL, 0x1, NULL, NULL },
    { "setWithInt:withDouble:", "set", "V", 0x1, NULL, NULL },
    { "setWithDoubleArray:", "set", "V", 0x1, NULL, NULL },
    { "setValuesWithGeogebraCommonKernelMatrixCoords:withInt:", "setValues", "V", 0x1, NULL, NULL },
    { "setWithGeogebraCommonKernelMatrixCoords:", "set", "V", 0x1, NULL, NULL },
    { "setWithDouble:", "set", "V", 0x1, NULL, NULL },
    { "getWithInt:", "get", "D", 0x1, NULL, NULL },
    { "copy__WithDoubleArray:", "copy", "V", 0x1, NULL, NULL },
    { "getX", NULL, "D", 0x1, NULL, NULL },
    { "getY", NULL, "D", 0x1, NULL, NULL },
    { "getZ", NULL, "D", 0x1, NULL, NULL },
    { "getW", NULL, "D", 0x1, NULL, NULL },
    { "getLast", NULL, "D", 0x1, NULL, NULL },
    { "setXWithDouble:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithDouble:", "setY", "V", 0x1, NULL, NULL },
    { "setZWithDouble:", "setZ", "V", 0x1, NULL, NULL },
    { "setWWithDouble:", "setW", "V", 0x1, NULL, NULL },
    { "getLength", NULL, "I", 0x1, NULL, NULL },
    { "copyVector", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "subVectorWithInt:withInt:", "subVector", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "subVectorWithInt:", "subVector", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "dotproductWithGeogebraCommonKernelMatrixCoords:", "dotproduct", "D", 0x1, NULL, NULL },
    { "crossProductWithGeogebraCommonKernelMatrixCoords:", "crossProduct", "Lgeogebra.common.kernel.Matrix.Coords;", 0x11, NULL, NULL },
    { "crossProduct4WithGeogebraCommonKernelMatrixCoords:", "crossProduct4", "Lgeogebra.common.kernel.Matrix.Coords;", 0x11, NULL, NULL },
    { "setCrossProductWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "setCrossProduct", "V", 0x11, NULL, NULL },
    { "norm", NULL, "D", 0x1, NULL, NULL },
    { "calcNorm", NULL, "D", 0x1, NULL, NULL },
    { "getNorm", NULL, "D", 0x1, NULL, NULL },
    { "squareNorm", NULL, "D", 0x1, NULL, NULL },
    { "normalized", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "normalizedWithBoolean:", "normalized", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "normalizedWithGeogebraCommonKernelMatrixCoords:", "normalized", "V", 0x1, NULL, NULL },
    { "normalize", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "normalizeWithBoolean:", "normalize", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "distanceWithGeogebraCommonKernelMatrixCoords:", "distance", "D", 0x1, NULL, NULL },
    { "squareDistance3WithGeogebraCommonKernelMatrixCoords:", "squareDistance3", "D", 0x1, NULL, NULL },
    { "vectorToLineWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "vectorToLine", "Lgeogebra.common.kernel.Matrix.Coords;", 0x2, NULL, NULL },
    { "distLineWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "distLine", "D", 0x1, NULL, NULL },
    { "squareDistLine3WithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "squareDistLine3", "D", 0x1, NULL, NULL },
    { "distPlaneWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "distPlane", "D", 0x1, NULL, NULL },
    { "distPlaneOrientedWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "distPlaneOriented", "D", 0x1, NULL, NULL },
    { "projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlane", "V", 0x1, NULL, NULL },
    { "projectPlaneWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlane", "V", 0x1, NULL, NULL },
    { "projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:", "projectPlaneInPlaneCoords", "V", 0x1, NULL, NULL },
    { "projectPlaneInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneInPlaneCoords", "V", 0x1, NULL, NULL },
    { "projectPlaneWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:", "projectPlane", "V", 0x1, NULL, NULL },
    { "projectPlaneWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlane", "V", 0x1, NULL, NULL },
    { "projectPlaneWithInverseMatrixWithGeogebraCommonKernelMatrixCoordMatrix:", "projectPlaneWithInverseMatrix", "Lgeogebra.common.kernel.Matrix.Coords;", 0x11, NULL, NULL },
    { "projectPlaneNoCheckWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withDoubleArray:withDoubleArray:", "projectPlaneNoCheck", "V", 0x1, NULL, NULL },
    { "projectPlaneNoCheckInPlaneCoordsWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withDoubleArray:", "projectPlaneNoCheckInPlaneCoords", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruV", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruV", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruVInPlaneCoords", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruVIfPossible", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruVIfPossible", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruVIfPossible", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVIfPossibleInPlaneCoordsWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruVIfPossibleInPlaneCoords", "V", 0x1, NULL, NULL },
    { "projectPlaneThruVIfPossibleWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectPlaneThruVIfPossible", "V", 0x1, NULL, NULL },
    { "projectLineWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withDoubleArray:", "projectLine", "V", 0x1, NULL, NULL },
    { "projectLineWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectLine", "V", 0x1, NULL, NULL },
    { "projectNearLineWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectNearLine", "V", 0x1, NULL, NULL },
    { "projectedParameterOnLineWithDirectionWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "projectedParameterOnLineWithDirection", "D", 0x1, NULL, NULL },
    { "subWithGeogebraCommonKernelMatrixCoords:", "sub", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "subWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "sub", "V", 0x1, NULL, NULL },
    { "setSubWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "setSub", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getInhomCoords", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getInhomCoordsInSameDimension", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "setInhomCoords", NULL, "V", 0x1, NULL, NULL },
    { "getCoordsLast1", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "projectInfDim", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "equalsForKernelWithGeogebraCommonKernelMatrixCoords:withDouble:", "equalsForKernel", "Z", 0x1, NULL, NULL },
    { "equalsForKernelWithGeogebraCommonKernelMatrixCoords:", "equalsForKernel", "Z", 0x1, NULL, NULL },
    { "isEqualWithGeogebraCommonKernelMatrixCoords:", "isEqual", "Z", 0x1, NULL, NULL },
    { "isZero", NULL, "Z", 0x1, NULL, NULL },
    { "equalsForKernelWithDouble:withDouble:", "equalsForKernel", "Z", 0x1, NULL, NULL },
    { "completeOrthonormal", NULL, "[Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "completeOrthonormalWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "completeOrthonormal", "V", 0x1, NULL, NULL },
    { "completeOrthonormalWithGeogebraCommonKernelMatrixCoords:", "completeOrthonormal", "V", 0x1, NULL, NULL },
    { "completeOrthonormalKeepInXOYPlaneIfPossibleWithGeogebraCommonKernelMatrixCoords:", "completeOrthonormalKeepInXOYPlaneIfPossible", "V", 0x1, NULL, NULL },
    { "addWithGeogebraCommonKernelMatrixCoords:", "add", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "addWithGeogebraCommonKernelMatrixCoords:withDoubleArray:", "add", "V", 0x1, NULL, NULL },
    { "addWithDoubleArray:withDoubleArray:", "add", "V", 0x1, NULL, NULL },
    { "addSmallerWithGeogebraCommonKernelMatrixCoords:", "addSmaller", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "addInsideWithGeogebraCommonKernelMatrixCoords:", "addInside", "V", 0x1, NULL, NULL },
    { "addInsideWithDouble:", "addInside", "V", 0x1, NULL, NULL },
    { "mulWithDouble:", "mul", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "mulWithDouble:withGeogebraCommonKernelMatrixCoords:", "mul", "V", 0x1, NULL, NULL },
    { "setMulWithGeogebraCommonKernelMatrixCoords:withDouble:", "setMul", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "mulWithDouble:withDoubleArray:", "mul", "V", 0x1, NULL, NULL },
    { "addWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "add", "V", 0x1, NULL, NULL },
    { "setAddWithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "setAdd", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "setAdd3WithGeogebraCommonKernelMatrixCoords:withGeogebraCommonKernelMatrixCoords:", "setAdd3", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "setBarycenterWithGeogebraCommonKernelMatrixCoordsArray:", "setBarycenter", "Lgeogebra.common.kernel.Matrix.Coords;", 0x81, NULL, NULL },
    { "mainWithNSStringArray:", "main", "V", 0x29, NULL, NULL },
    { "getCoordsIn2DView", NULL, "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "getGrayScale", NULL, "D", 0x1, NULL, NULL },
    { "convertToGrayScale", NULL, "V", 0x1, NULL, NULL },
    { "isPointDefined", NULL, "Z", 0x1, NULL, NULL },
    { "isDefined", NULL, "Z", 0x1, NULL, NULL },
    { "setUndefined", NULL, "V", 0x1, NULL, NULL },
    { "setPositiveInfinity", NULL, "V", 0x1, NULL, NULL },
    { "setNegativeInfinity", NULL, "V", 0x1, NULL, NULL },
    { "get3ForGL", NULL, "[F", 0x1, NULL, NULL },
    { "get4ForGL", NULL, "[F", 0x1, NULL, NULL },
    { "checkReverseForFirstValuePositive", NULL, "V", 0x1, NULL, NULL },
    { "get", NULL, "[D", 0x1, NULL, NULL },
    { "getWithDoubleArray:", "get", "V", 0x1, NULL, NULL },
    { "isFinite", NULL, "Z", 0x1, NULL, NULL },
    { "mulInsideWithDouble:", "mulInside", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "mulInside3WithDouble:", "mulInside3", "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setMulWithGeogebraCommonKernelMatrixCoordMatrix:withGeogebraCommonKernelMatrixCoords:", "setMul", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "setMulPointWithGeogebraCommonKernelMatrixCoordMatrix:withDouble:withDouble:withDouble:", "setMulPoint", "Lgeogebra.common.kernel.Matrix.Coords;", 0x1, NULL, NULL },
    { "isNotFinalUndefined", NULL, "Z", 0x1, NULL, NULL },
    { "isFinalUndefined", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "norm__", "norm", 0x2, "D", NULL, NULL,  },
    { "sqNorm_", NULL, 0x2, "D", NULL, NULL,  },
    { "calcNorm__", "calcNorm", 0x2, "Z", NULL, NULL,  },
    { "calcSqNorm_", NULL, 0x2, "Z", NULL, NULL,  },
    { "O_", NULL, 0x19, "Lgeogebra.common.kernel.Matrix.Coords;", &GeogebraCommonKernelMatrixCoords_O_, NULL,  },
    { "VX_", NULL, 0x19, "Lgeogebra.common.kernel.Matrix.Coords;", &GeogebraCommonKernelMatrixCoords_VX_, NULL,  },
    { "VY_", NULL, 0x19, "Lgeogebra.common.kernel.Matrix.Coords;", &GeogebraCommonKernelMatrixCoords_VY_, NULL,  },
    { "VZ_", NULL, 0x19, "Lgeogebra.common.kernel.Matrix.Coords;", &GeogebraCommonKernelMatrixCoords_VZ_, NULL,  },
    { "VZm_", NULL, 0x19, "Lgeogebra.common.kernel.Matrix.Coords;", &GeogebraCommonKernelMatrixCoords_VZm_, NULL,  },
    { "UNDEFINED_", NULL, 0x19, "Lgeogebra.common.kernel.Matrix.Coords;", &GeogebraCommonKernelMatrixCoords_UNDEFINED_, NULL,  },
    { "UNDEFINED3VALUE0_", NULL, 0x19, "Lgeogebra.common.kernel.Matrix.Coords;", &GeogebraCommonKernelMatrixCoords_UNDEFINED3VALUE0_, NULL,  },
    { "val_", NULL, 0x1, "[D", NULL, NULL,  },
    { "rows_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelMatrixCoords = { 2, "Coords", "geogebra.common.kernel.Matrix", NULL, 0x1, 122, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelMatrixCoords;
}

@end

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_createInhomCoorsInD3() {
  GeogebraCommonKernelMatrixCoords_initialize();
  GeogebraCommonKernelMatrixCoords *ret = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  [ret setWWithDouble:1];
  return ret;
}

void GeogebraCommonKernelMatrixCoords_initWithInt_(GeogebraCommonKernelMatrixCoords *self, jint rows) {
  NSObject_init(self);
  self->calcNorm__ = YES;
  self->calcSqNorm_ = YES;
  self->rows_ = rows;
  GeogebraCommonKernelMatrixCoords_setAndConsume_val_(self, [IOSDoubleArray newArrayWithLength:rows]);
}

GeogebraCommonKernelMatrixCoords *new_GeogebraCommonKernelMatrixCoords_initWithInt_(jint rows) {
  GeogebraCommonKernelMatrixCoords *self = [GeogebraCommonKernelMatrixCoords alloc];
  GeogebraCommonKernelMatrixCoords_initWithInt_(self, rows);
  return self;
}

void GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(GeogebraCommonKernelMatrixCoords *self, IOSDoubleArray *vals) {
  GeogebraCommonKernelMatrixCoords_initWithInt_(self, ((IOSDoubleArray *) nil_chk(vals))->size_);
  for (jint i = 0; i < vals->size_; i++) *IOSDoubleArray_GetRef(nil_chk(self->val_), i) = IOSDoubleArray_Get(vals, i);
}

GeogebraCommonKernelMatrixCoords *new_GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(IOSDoubleArray *vals) {
  GeogebraCommonKernelMatrixCoords *self = [GeogebraCommonKernelMatrixCoords alloc];
  GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(self, vals);
  return self;
}

void GeogebraCommonKernelMatrixCoords_initWithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *v) {
  GeogebraCommonKernelMatrixCoords_initWithDoubleArray_(self, ((GeogebraCommonKernelMatrixCoords *) nil_chk(v))->val_);
}

GeogebraCommonKernelMatrixCoords *new_GeogebraCommonKernelMatrixCoords_initWithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *v) {
  GeogebraCommonKernelMatrixCoords *self = [GeogebraCommonKernelMatrixCoords alloc];
  GeogebraCommonKernelMatrixCoords_initWithGeogebraCommonKernelMatrixCoords_(self, v);
  return self;
}

void GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_(GeogebraCommonKernelMatrixCoords *self, jdouble u, jdouble v) {
  GeogebraCommonKernelMatrixCoords_initWithInt_(self, 2);
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 0) = u;
  *IOSDoubleArray_GetRef(self->val_, 1) = v;
}

GeogebraCommonKernelMatrixCoords *new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_(jdouble u, jdouble v) {
  GeogebraCommonKernelMatrixCoords *self = [GeogebraCommonKernelMatrixCoords alloc];
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_(self, u, v);
  return self;
}

void GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(GeogebraCommonKernelMatrixCoords *self, jdouble x, jdouble y, jdouble z) {
  GeogebraCommonKernelMatrixCoords_initWithInt_(self, 3);
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 0) = x;
  *IOSDoubleArray_GetRef(self->val_, 1) = y;
  *IOSDoubleArray_GetRef(self->val_, 2) = z;
}

GeogebraCommonKernelMatrixCoords *new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble z) {
  GeogebraCommonKernelMatrixCoords *self = [GeogebraCommonKernelMatrixCoords alloc];
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(self, x, y, z);
  return self;
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_Coords4DLastEqualTo0WithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble z) {
  GeogebraCommonKernelMatrixCoords_initialize();
  GeogebraCommonKernelMatrixCoords *ret = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  *IOSDoubleArray_GetRef(nil_chk(ret->val_), 0) = x;
  *IOSDoubleArray_GetRef(ret->val_, 1) = y;
  *IOSDoubleArray_GetRef(ret->val_, 2) = z;
  return ret;
}

void GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(GeogebraCommonKernelMatrixCoords *self, jdouble x, jdouble y, jdouble z, jdouble w) {
  GeogebraCommonKernelMatrixCoords_initWithInt_(self, 4);
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 0) = x;
  *IOSDoubleArray_GetRef(self->val_, 1) = y;
  *IOSDoubleArray_GetRef(self->val_, 2) = z;
  *IOSDoubleArray_GetRef(self->val_, 3) = w;
}

GeogebraCommonKernelMatrixCoords *new_GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble z, jdouble w) {
  GeogebraCommonKernelMatrixCoords *self = [GeogebraCommonKernelMatrixCoords alloc];
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(self, x, y, z, w);
  return self;
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_crossProductWithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *v) {
  GeogebraCommonKernelMatrixCoords *ret = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(3) autorelease];
  GeogebraCommonKernelMatrixCoords_setCrossProductWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(ret, self, v);
  return ret;
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_crossProduct4WithGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *v) {
  GeogebraCommonKernelMatrixCoords *ret = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(4) autorelease];
  GeogebraCommonKernelMatrixCoords_setCrossProductWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(ret, self, v);
  return ret;
}

void GeogebraCommonKernelMatrixCoords_setCrossProductWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *v1, GeogebraCommonKernelMatrixCoords *v2) {
  *IOSDoubleArray_GetRef(nil_chk(self->val_), 0) = IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v1))->val_, 1) * IOSDoubleArray_Get(((GeogebraCommonKernelMatrixCoords *) nil_chk(v2))->val_, 2) - IOSDoubleArray_Get(v1->val_, 2) * IOSDoubleArray_Get(v2->val_, 1);
  *IOSDoubleArray_GetRef(self->val_, 1) = IOSDoubleArray_Get(v1->val_, 2) * IOSDoubleArray_Get(v2->val_, 0) - IOSDoubleArray_Get(v1->val_, 0) * IOSDoubleArray_Get(v2->val_, 2);
  *IOSDoubleArray_GetRef(self->val_, 2) = IOSDoubleArray_Get(v1->val_, 0) * IOSDoubleArray_Get(v2->val_, 1) - IOSDoubleArray_Get(v1->val_, 1) * IOSDoubleArray_Get(v2->val_, 0);
}

GeogebraCommonKernelMatrixCoords *GeogebraCommonKernelMatrixCoords_vectorToLineWithGeogebraCommonKernelMatrixCoords_withGeogebraCommonKernelMatrixCoords_(GeogebraCommonKernelMatrixCoords *self, GeogebraCommonKernelMatrixCoords *O, GeogebraCommonKernelMatrixCoords *V) {
  GeogebraCommonKernelMatrixCoords *OM = [self subWithGeogebraCommonKernelMatrixCoords:O];
  GeogebraCommonKernelMatrixCoords *N = [((GeogebraCommonKernelMatrixCoords *) nil_chk(V)) normalized];
  GeogebraCommonKernelMatrixCoords *OH = [((GeogebraCommonKernelMatrixCoords *) nil_chk(N)) mulWithDouble:[((GeogebraCommonKernelMatrixCoords *) nil_chk(OM)) dotproductWithGeogebraCommonKernelMatrixCoords:N]];
  return [OM subWithGeogebraCommonKernelMatrixCoords:OH];
}

void GeogebraCommonKernelMatrixCoords_mainWithNSStringArray_(IOSObjectArray *args) {
  GeogebraCommonKernelMatrixCoords_initialize();
  @synchronized(GeogebraCommonKernelMatrixCoords_class_()) {
    GeogebraCommonKernelMatrixCoords *v1 = [new_GeogebraCommonKernelMatrixCoords_initWithInt_(2) autorelease];
    *IOSDoubleArray_GetRef(nil_chk(v1->val_), 0) = 3.0;
    *IOSDoubleArray_GetRef(v1->val_, 1) = 4.0;
    GeogebraCommonMainApp_debugWithNSString_(JreStrcat("$D", @"v1.v1 = ", [v1 dotproductWithGeogebraCommonKernelMatrixCoords:v1]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelMatrixCoords)

@implementation GeogebraCommonKernelMatrixCoords_$1

- (jboolean)isNotFinalUndefined {
  return NO;
}

- (jboolean)isFinalUndefined {
  return YES;
}

- (instancetype)initWithDouble:(jdouble)arg$0
                    withDouble:(jdouble)arg$1
                    withDouble:(jdouble)arg$2
                    withDouble:(jdouble)arg$3 {
  GeogebraCommonKernelMatrixCoords_$1_initWithDouble_withDouble_withDouble_withDouble_(self, arg$0, arg$1, arg$2, arg$3);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isNotFinalUndefined", NULL, "Z", 0x1, NULL, NULL },
    { "isFinalUndefined", NULL, "Z", 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:withDouble:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelMatrixCoords_$1 = { 2, "", "geogebra.common.kernel.Matrix", "Coords", 0x8008, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelMatrixCoords_$1;
}

@end

void GeogebraCommonKernelMatrixCoords_$1_initWithDouble_withDouble_withDouble_withDouble_(GeogebraCommonKernelMatrixCoords_$1 *self, jdouble arg$0, jdouble arg$1, jdouble arg$2, jdouble arg$3) {
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_withDouble_(self, arg$0, arg$1, arg$2, arg$3);
}

GeogebraCommonKernelMatrixCoords_$1 *new_GeogebraCommonKernelMatrixCoords_$1_initWithDouble_withDouble_withDouble_withDouble_(jdouble arg$0, jdouble arg$1, jdouble arg$2, jdouble arg$3) {
  GeogebraCommonKernelMatrixCoords_$1 *self = [GeogebraCommonKernelMatrixCoords_$1 alloc];
  GeogebraCommonKernelMatrixCoords_$1_initWithDouble_withDouble_withDouble_withDouble_(self, arg$0, arg$1, arg$2, arg$3);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelMatrixCoords_$1)

@implementation GeogebraCommonKernelMatrixCoords_$2

- (jboolean)isNotFinalUndefined {
  return NO;
}

- (jboolean)isFinalUndefined {
  return YES;
}

- (instancetype)initWithDouble:(jdouble)arg$0
                    withDouble:(jdouble)arg$1
                    withDouble:(jdouble)arg$2 {
  GeogebraCommonKernelMatrixCoords_$2_initWithDouble_withDouble_withDouble_(self, arg$0, arg$1, arg$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isNotFinalUndefined", NULL, "Z", 0x1, NULL, NULL },
    { "isFinalUndefined", NULL, "Z", 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelMatrixCoords_$2 = { 2, "", "geogebra.common.kernel.Matrix", "Coords", 0x8008, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelMatrixCoords_$2;
}

@end

void GeogebraCommonKernelMatrixCoords_$2_initWithDouble_withDouble_withDouble_(GeogebraCommonKernelMatrixCoords_$2 *self, jdouble arg$0, jdouble arg$1, jdouble arg$2) {
  GeogebraCommonKernelMatrixCoords_initWithDouble_withDouble_withDouble_(self, arg$0, arg$1, arg$2);
}

GeogebraCommonKernelMatrixCoords_$2 *new_GeogebraCommonKernelMatrixCoords_$2_initWithDouble_withDouble_withDouble_(jdouble arg$0, jdouble arg$1, jdouble arg$2) {
  GeogebraCommonKernelMatrixCoords_$2 *self = [GeogebraCommonKernelMatrixCoords_$2 alloc];
  GeogebraCommonKernelMatrixCoords_$2_initWithDouble_withDouble_withDouble_(self, arg$0, arg$1, arg$2);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelMatrixCoords_$2)
