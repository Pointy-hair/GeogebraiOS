//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/CmdCASCommand1Arg.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/arithmetic/Command.h"
#include "geogebra/common/kernel/cas/AlgoCasBaseSingleArgument.h"
#include "geogebra/common/kernel/cas/CmdCASCommand1Arg.h"
#include "geogebra/common/kernel/commands/CommandProcessor.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/CasEvaluableFunction.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/main/MyError.h"

@interface GeogebraCommonKernelCasCmdCASCommand1Arg () {
 @public
  GeogebraCommonKernelCommandsCommandsEnum *cmd_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasCmdCASCommand1Arg, cmd_, GeogebraCommonKernelCommandsCommandsEnum *)

@implementation GeogebraCommonKernelCasCmdCASCommand1Arg

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
      withGeogebraCommonKernelCommandsCommandsEnum:(GeogebraCommonKernelCommandsCommandsEnum *)cmd {
  GeogebraCommonKernelCasCmdCASCommand1Arg_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelCommandsCommandsEnum_(self, kernel, cmd);
  return self;
}

- (IOSObjectArray *)processWithGeogebraCommonKernelArithmeticCommand:(GeogebraCommonKernelArithmeticCommand *)c {
  jint n = [((GeogebraCommonKernelArithmeticCommand *) nil_chk(c)) getArgumentNumber];
  IOSObjectArray *arg;
  arg = [self resArgsWithGeogebraCommonKernelArithmeticCommand:c];
  switch (n) {
    case 1:
    if ([GeogebraCommonKernelGeosCasEvaluableFunction_class_() isInstance:IOSObjectArray_Get(nil_chk(arg), 0)]) {
      GeogebraCommonKernelCasAlgoCasBaseSingleArgument *algo = [new_GeogebraCommonKernelCasAlgoCasBaseSingleArgument_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosCasEvaluableFunction_withGeogebraCommonKernelCommandsCommandsEnum_(cons_, [c getLabel], (id<GeogebraCommonKernelGeosCasEvaluableFunction>) check_protocol_cast(IOSObjectArray_Get(arg, 0), @protocol(GeogebraCommonKernelGeosCasEvaluableFunction)), cmd_) autorelease];
      IOSObjectArray *ret = [IOSObjectArray arrayWithObjects:(id[]){ [algo getResult] } count:1 type:GeogebraCommonKernelGeosGeoElement_class_()];
      return ret;
    }
    @throw [self argErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withGeogebraCommonKernelArithmeticExpressionValue:IOSObjectArray_Get(arg, 0)];
    default:
    @throw [self argNumErrWithGeogebraCommonMainApp:app_ withNSString:[c getName] withInt:n];
  }
}

- (void)dealloc {
  RELEASE_(cmd_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:withGeogebraCommonKernelCommandsCommandsEnum:", "CmdCASCommand1Arg", NULL, 0x1, NULL, NULL },
    { "processWithGeogebraCommonKernelArithmeticCommand:", "process", "[Lgeogebra.common.kernel.geos.GeoElement;", 0x11, "Lgeogebra.common.main.MyError;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cmd_", NULL, 0x2, "Lgeogebra.common.kernel.commands.Commands;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasCmdCASCommand1Arg = { 2, "CmdCASCommand1Arg", "geogebra.common.kernel.cas", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasCmdCASCommand1Arg;
}

@end

void GeogebraCommonKernelCasCmdCASCommand1Arg_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelCommandsCommandsEnum_(GeogebraCommonKernelCasCmdCASCommand1Arg *self, GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelCommandsCommandsEnum *cmd) {
  GeogebraCommonKernelCommandsCommandProcessor_initWithGeogebraCommonKernelKernel_(self, kernel);
  GeogebraCommonKernelCasCmdCASCommand1Arg_set_cmd_(self, cmd);
}

GeogebraCommonKernelCasCmdCASCommand1Arg *new_GeogebraCommonKernelCasCmdCASCommand1Arg_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelCommandsCommandsEnum_(GeogebraCommonKernelKernel *kernel, GeogebraCommonKernelCommandsCommandsEnum *cmd) {
  GeogebraCommonKernelCasCmdCASCommand1Arg *self = [GeogebraCommonKernelCasCmdCASCommand1Arg alloc];
  GeogebraCommonKernelCasCmdCASCommand1Arg_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelCommandsCommandsEnum_(self, kernel, cmd);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasCmdCASCommand1Arg)
