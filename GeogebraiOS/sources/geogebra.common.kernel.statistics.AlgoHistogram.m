//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/statistics/AlgoHistogram.java
//


#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/algos/AlgoFunctionAreaSums.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoBoolean.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/statistics/AlgoHistogram.h"
#include "geogebra/common/util/Cloner.h"

@interface GeogebraCommonKernelStatisticsAlgoHistogram ()

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                         withDoubleArray:(IOSDoubleArray *)vals
                                         withDoubleArray:(IOSDoubleArray *)borders
                                                 withInt:(jint)N;

- (instancetype)initWithGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                    withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                    withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)density
                                           withDoubleArray:(IOSDoubleArray *)vals
                                           withDoubleArray:(IOSDoubleArray *)borders
                                                   withInt:(jint)N;

@end

__attribute__((unused)) static void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelConstruction *cons, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N);

__attribute__((unused)) static GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelConstruction *cons, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) NS_RETURNS_RETAINED;

__attribute__((unused)) static void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N);

__attribute__((unused)) static GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) NS_RETURNS_RETAINED;

@implementation GeogebraCommonKernelStatisticsAlgoHistogram

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list1
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list2
                                             withBoolean:(jboolean)right {
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, list1, list2, right);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list1
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list2
                                             withBoolean:(jboolean)right {
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, label, list1, list2, right);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                         withDoubleArray:(IOSDoubleArray *)vals
                                         withDoubleArray:(IOSDoubleArray *)borders
                                                 withInt:(jint)N {
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(self, cons, vals, borders, N);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list1
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list2
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list3
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)density
                                             withBoolean:(jboolean)right {
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, label, isCumulative, list1, list2, list3, useDensity, density, right);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                    withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                    withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)density
                                           withDoubleArray:(IOSDoubleArray *)vals
                                           withDoubleArray:(IOSDoubleArray *)borders
                                                   withInt:(jint)N {
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(self, isCumulative, useDensity, density, vals, borders, N);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)isCumulative
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list1
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list2
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)list3
                  withGeogebraCommonKernelGeosGeoBoolean:(GeogebraCommonKernelGeosGeoBoolean *)useDensity
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)density
                                             withBoolean:(jboolean)right {
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, isCumulative, list1, list2, list3, useDensity, density, right);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return [self isRight] ? GeogebraCommonKernelCommandsCommandsEnum_get_HistogramRight() : GeogebraCommonKernelCommandsCommandsEnum_get_Histogram();
}

- (GeogebraCommonKernelStatisticsAlgoHistogram *)copy__ {
  jint N = [self getIntervals];
  if ([self getType] == GeogebraCommonKernelAlgosAlgoFunctionAreaSums_SumTypeEnum_get_HISTOGRAM_DENSITY()) return [new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_((GeogebraCommonKernelGeosGeoBoolean *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getIsCumulative])) copy__], [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoBoolean *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getUseDensityGeo])) copy__], [GeogebraCommonKernelGeosGeoBoolean class]), (GeogebraCommonKernelGeosGeoNumeric *) check_class_cast([((GeogebraCommonKernelGeosGeoElement *) nil_chk([self getDensityGeo])) copy__], [GeogebraCommonKernelGeosGeoNumeric class]), GeogebraCommonUtilCloner_cloneWithDoubleArray_([self getValues]), GeogebraCommonUtilCloner_cloneWithDoubleArray_([self getLeftBorder]), N) autorelease];
  return [new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_([((GeogebraCommonKernelKernel *) nil_chk(kernel_)) getConstruction], GeogebraCommonUtilCloner_cloneWithDoubleArray_([self getValues]), GeogebraCommonUtilCloner_cloneWithDoubleArray_([self getLeftBorder]), N) autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withBoolean:", "AlgoHistogram", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withBoolean:", "AlgoHistogram", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withDoubleArray:withDoubleArray:withInt:", "AlgoHistogram", NULL, 0x2, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoNumeric:withBoolean:", "AlgoHistogram", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoNumeric:withDoubleArray:withDoubleArray:withInt:", "AlgoHistogram", NULL, 0x2, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoBoolean:withGeogebraCommonKernelGeosGeoNumeric:withBoolean:", "AlgoHistogram", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "copy__", "copy", "Lgeogebra.common.kernel.statistics.AlgoHistogram;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelStatisticsAlgoHistogram = { 2, "AlgoHistogram", "geogebra.common.kernel.statistics", NULL, 0x1, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelStatisticsAlgoHistogram;
}

@end

void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, jboolean right) {
  GeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, list1, list2, right);
}

GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, jboolean right) {
  GeogebraCommonKernelStatisticsAlgoHistogram *self = [GeogebraCommonKernelStatisticsAlgoHistogram alloc];
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, list1, list2, right);
  return self;
}

void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, jboolean right) {
  GeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, label, list1, list2, right);
}

GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, jboolean right) {
  GeogebraCommonKernelStatisticsAlgoHistogram *self = [GeogebraCommonKernelStatisticsAlgoHistogram alloc];
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withBoolean_(self, cons, label, list1, list2, right);
  return self;
}

void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelConstruction *cons, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  GeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(self, cons, vals, borders, N);
}

GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelConstruction *cons, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  GeogebraCommonKernelStatisticsAlgoHistogram *self = [GeogebraCommonKernelStatisticsAlgoHistogram alloc];
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withDoubleArray_withDoubleArray_withInt_(self, cons, vals, borders, N);
  return self;
}

void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, GeogebraCommonKernelGeosGeoList *list3, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, jboolean right) {
  GeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, label, isCumulative, list1, list2, list3, useDensity, density, right);
}

GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, GeogebraCommonKernelGeosGeoList *list3, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, jboolean right) {
  GeogebraCommonKernelStatisticsAlgoHistogram *self = [GeogebraCommonKernelStatisticsAlgoHistogram alloc];
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, label, isCumulative, list1, list2, list3, useDensity, density, right);
  return self;
}

void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  GeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(self, isCumulative, useDensity, density, vals, borders, N);
}

GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, IOSDoubleArray *vals, IOSDoubleArray *borders, jint N) {
  GeogebraCommonKernelStatisticsAlgoHistogram *self = [GeogebraCommonKernelStatisticsAlgoHistogram alloc];
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withDoubleArray_withDoubleArray_withInt_(self, isCumulative, useDensity, density, vals, borders, N);
  return self;
}

void GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(GeogebraCommonKernelStatisticsAlgoHistogram *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, GeogebraCommonKernelGeosGeoList *list3, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, jboolean right) {
  GeogebraCommonKernelAlgosAlgoFunctionAreaSums_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, isCumulative, list1, list2, list3, useDensity, density, right);
}

GeogebraCommonKernelStatisticsAlgoHistogram *new_GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoBoolean *isCumulative, GeogebraCommonKernelGeosGeoList *list1, GeogebraCommonKernelGeosGeoList *list2, GeogebraCommonKernelGeosGeoList *list3, GeogebraCommonKernelGeosGeoBoolean *useDensity, GeogebraCommonKernelGeosGeoNumeric *density, jboolean right) {
  GeogebraCommonKernelStatisticsAlgoHistogram *self = [GeogebraCommonKernelStatisticsAlgoHistogram alloc];
  GeogebraCommonKernelStatisticsAlgoHistogram_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoBoolean_withGeogebraCommonKernelGeosGeoNumeric_withBoolean_(self, cons, isCumulative, list1, list2, list3, useDensity, density, right);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelStatisticsAlgoHistogram)
