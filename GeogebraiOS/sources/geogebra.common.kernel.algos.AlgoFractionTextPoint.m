//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoFractionTextPoint.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/AlgoFractionText.h"
#include "geogebra/common/kernel/algos/AlgoFractionTextPoint.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNodeConstants.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoText.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonKernelAlgosAlgoFractionTextPoint () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> p_;
  GeogebraCommonKernelGeosGeoText *text_;
  IOSDoubleArray *xCoord_;
  IOSDoubleArray *yCoord_;
  IOSDoubleArray *zCoord_;
  JavaLangStringBuilder *sb_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoFractionTextPoint, p_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoFractionTextPoint, text_, GeogebraCommonKernelGeosGeoText *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoFractionTextPoint, xCoord_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoFractionTextPoint, yCoord_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoFractionTextPoint, zCoord_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoFractionTextPoint, sb_, JavaLangStringBuilder *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoFractionTextPoint_compute(GeogebraCommonKernelAlgosAlgoFractionTextPoint *self);

@implementation GeogebraCommonKernelAlgosAlgoFractionTextPoint

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p {
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, p);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)p {
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, p);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_FractionText();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(p_, [GeogebraCommonKernelGeosGeoElement class]));
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:text_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoText *)getResult {
  return text_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_compute(self);
}

- (jboolean)isLaTeXTextCommand {
  return YES;
}

- (void)dealloc {
  RELEASE_(p_);
  RELEASE_(text_);
  RELEASE_(xCoord_);
  RELEASE_(yCoord_);
  RELEASE_(zCoord_);
  RELEASE_(sb_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoFractionTextPoint", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoFractionTextPoint", NULL, 0x0, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoText;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "isLaTeXTextCommand", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "p_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "text_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoText;", NULL, NULL,  },
    { "xCoord_", NULL, 0x2, "[D", NULL, NULL,  },
    { "yCoord_", NULL, 0x2, "[D", NULL, NULL,  },
    { "zCoord_", NULL, 0x2, "[D", NULL, NULL,  },
    { "sb_", NULL, 0x2, "Ljava.lang.StringBuilder;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoFractionTextPoint = { 2, "AlgoFractionTextPoint", "geogebra.common.kernel.algos", NULL, 0x1, 7, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoFractionTextPoint;
}

@end

void GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoFractionTextPoint *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> p) {
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, p);
  [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoFractionTextPoint *new_GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> p) {
  GeogebraCommonKernelAlgosAlgoFractionTextPoint *self = [GeogebraCommonKernelAlgosAlgoFractionTextPoint alloc];
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, p);
  return self;
}

void GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAlgosAlgoFractionTextPoint *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> p) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_setAndConsume_xCoord_(self, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 0 } count:2]);
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_setAndConsume_yCoord_(self, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 0 } count:2]);
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_setAndConsume_zCoord_(self, [IOSDoubleArray newArrayWithDoubles:(jdouble[]){ 0, 0 } count:2]);
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_setAndConsume_sb_(self, new_JavaLangStringBuilder_init());
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_set_p_(self, p);
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_setAndConsume_text_(self, new_GeogebraCommonKernelGeosGeoText_initWithGeogebraCommonKernelConstruction_(cons));
  [self->text_ setFormulaTypeWithGeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum:GeogebraCommonKernelArithmeticExpressionNodeConstants_StringTypeEnum_get_LATEX()];
  [self->text_ setLaTeXWithBoolean:YES withBoolean:NO];
  [self->text_ setIsTextCommandWithBoolean:YES];
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_compute(self);
}

GeogebraCommonKernelAlgosAlgoFractionTextPoint *new_GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> p) {
  GeogebraCommonKernelAlgosAlgoFractionTextPoint *self = [GeogebraCommonKernelAlgosAlgoFractionTextPoint alloc];
  GeogebraCommonKernelAlgosAlgoFractionTextPoint_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, p);
  return self;
}

void GeogebraCommonKernelAlgosAlgoFractionTextPoint_compute(GeogebraCommonKernelAlgosAlgoFractionTextPoint *self) {
  GeogebraCommonKernelStringTemplate *tpl = [((GeogebraCommonKernelGeosGeoText *) nil_chk(self->text_)) getStringTemplate];
  if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(IOSObjectArray_Get(nil_chk(self->input_), 0))) isDefined]) {
    GeogebraCommonKernelMatrixCoords *coords = [((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(self->p_)) getInhomCoords];
    GeogebraCommonKernelAlgosAlgoFractionTextPoint_set_xCoord_(self, GeogebraCommonKernelAlgosAlgoFractionText_DecimalToFractionWithDouble_withDouble_([((GeogebraCommonKernelMatrixCoords *) nil_chk(coords)) getX], GeogebraCommonKernelKernel_STANDARD_PRECISION));
    GeogebraCommonKernelAlgosAlgoFractionTextPoint_set_yCoord_(self, GeogebraCommonKernelAlgosAlgoFractionText_DecimalToFractionWithDouble_withDouble_([coords getY], GeogebraCommonKernelKernel_STANDARD_PRECISION));
    GeogebraCommonKernelAlgosAlgoFractionTextPoint_set_zCoord_(self, GeogebraCommonKernelAlgosAlgoFractionText_DecimalToFractionWithDouble_withDouble_([coords getZ], GeogebraCommonKernelKernel_STANDARD_PRECISION));
    switch ([[((GeogebraCommonKernelStringTemplate *) nil_chk(tpl)) getStringType] ordinal]) {
      case GeogebraCommonKernelArithmeticExpressionNodeConstants_StringType_MATHML:
      [((JavaLangStringBuilder *) nil_chk(self->sb_)) setLengthWithInt:0];
      [self->sb_ appendWithNSString:@"<matrix>"];
      [self->sb_ appendWithNSString:@"<matrixrow>"];
      [self->sb_ appendWithNSString:@"<cn>"];
      [self->sb_ appendWithNSString:@"</cn><cn>"];
      [self->sb_ appendWithNSString:@"</cn>"];
      [self->sb_ appendWithNSString:@"</matrixrow>"];
      [self->sb_ appendWithNSString:@"</matrix>"];
      break;
      case GeogebraCommonKernelArithmeticExpressionNodeConstants_StringType_LATEX:
      [((JavaLangStringBuilder *) nil_chk(self->sb_)) setLengthWithInt:0];
      [self->sb_ appendWithNSString:@"{ \\left( "];
      GeogebraCommonKernelAlgosAlgoFractionText_appendFormulaWithJavaLangStringBuilder_withDoubleArray_withGeogebraCommonKernelStringTemplate_withGeogebraCommonKernelKernel_(self->sb_, self->xCoord_, tpl, self->kernel_);
      [self->sb_ appendWithChar:','];
      GeogebraCommonKernelAlgosAlgoFractionText_appendFormulaWithJavaLangStringBuilder_withDoubleArray_withGeogebraCommonKernelStringTemplate_withGeogebraCommonKernelKernel_(self->sb_, self->yCoord_, tpl, self->kernel_);
      if ([self->p_ getDimension] == 3) {
        [self->sb_ appendWithChar:','];
        GeogebraCommonKernelAlgosAlgoFractionText_appendFormulaWithJavaLangStringBuilder_withDoubleArray_withGeogebraCommonKernelStringTemplate_withGeogebraCommonKernelKernel_(self->sb_, self->zCoord_, tpl, self->kernel_);
      }
      [self->sb_ appendWithNSString:@" \\right) }"];
      [self->text_ setTextStringWithNSString:[self->sb_ description]];
      break;
    }
  }
  else [self->text_ setTextStringWithNSString:[((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"Undefined"]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoFractionTextPoint)
