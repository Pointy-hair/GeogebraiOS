//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/Matrix/CoordsDouble3.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/Matrix/Coords3.h"
#include "geogebra/common/kernel/Matrix/CoordsDouble3.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"

__attribute__((unused)) static void GeogebraCommonKernelMatrixCoordsDouble3_mulInsideWithDouble_(GeogebraCommonKernelMatrixCoordsDouble3 *self, jdouble v);

@implementation GeogebraCommonKernelMatrixCoordsDouble3

- (instancetype)init {
  GeogebraCommonKernelMatrixCoordsDouble3_init(self);
  return self;
}

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)z {
  GeogebraCommonKernelMatrixCoordsDouble3_initWithDouble_withDouble_withDouble_(self, x, y, z);
  return self;
}

- (jboolean)isDefined {
  return !JavaLangDouble_isNaNWithDouble_(x_) && !JavaLangDouble_isNaNWithDouble_(y_) && !JavaLangDouble_isNaNWithDouble_(z_);
}

- (GeogebraCommonKernelMatrixCoordsDouble3 *)copyVector {
  return [new_GeogebraCommonKernelMatrixCoordsDouble3_initWithDouble_withDouble_withDouble_(x_, y_, z_) autorelease];
}

- (void)addInsideWithGeogebraCommonKernelMatrixCoords3:(GeogebraCommonKernelMatrixCoords3 *)v {
  x_ += [((GeogebraCommonKernelMatrixCoords3 *) nil_chk(v)) getXd];
  y_ += [v getYd];
  z_ += [v getZd];
}

- (void)mulInsideWithFloat:(jfloat)v {
  x_ *= v;
  y_ *= v;
  z_ *= v;
}

- (void)mulInsideWithDouble:(jdouble)v {
  GeogebraCommonKernelMatrixCoordsDouble3_mulInsideWithDouble_(self, v);
}

- (void)normalizeIfPossible {
  jdouble l = JavaLangMath_sqrtWithDouble_(x_ * x_ + y_ * y_ + z_ * z_);
  if (!GeogebraCommonKernelKernel_isZeroWithDouble_(l)) {
    GeogebraCommonKernelMatrixCoordsDouble3_mulInsideWithDouble_(self, 1 / l);
  }
}

- (void)setWithFloat:(jfloat)x
           withFloat:(jfloat)y
           withFloat:(jfloat)z {
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

- (void)setWithDouble:(jdouble)x
           withDouble:(jdouble)y
           withDouble:(jdouble)z {
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

- (jdouble)getXd {
  return x_;
}

- (jdouble)getYd {
  return y_;
}

- (jdouble)getZd {
  return z_;
}

- (jfloat)getXf {
  return (jfloat) x_;
}

- (jfloat)getYf {
  return (jfloat) y_;
}

- (jfloat)getZf {
  return (jfloat) z_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CoordsDouble3", NULL, 0x1, NULL, NULL },
    { "initWithDouble:withDouble:withDouble:", "CoordsDouble3", NULL, 0x1, NULL, NULL },
    { "isDefined", NULL, "Z", 0x11, NULL, NULL },
    { "copyVector", NULL, "Lgeogebra.common.kernel.Matrix.CoordsDouble3;", 0x11, NULL, NULL },
    { "addInsideWithGeogebraCommonKernelMatrixCoords3:", "addInside", "V", 0x11, NULL, NULL },
    { "mulInsideWithFloat:", "mulInside", "V", 0x11, NULL, NULL },
    { "mulInsideWithDouble:", "mulInside", "V", 0x11, NULL, NULL },
    { "normalizeIfPossible", NULL, "V", 0x1, NULL, NULL },
    { "setWithFloat:withFloat:withFloat:", "set", "V", 0x11, NULL, NULL },
    { "setWithDouble:withDouble:withDouble:", "set", "V", 0x11, NULL, NULL },
    { "getXd", NULL, "D", 0x11, NULL, NULL },
    { "getYd", NULL, "D", 0x11, NULL, NULL },
    { "getZd", NULL, "D", 0x11, NULL, NULL },
    { "getXf", NULL, "F", 0x11, NULL, NULL },
    { "getYf", NULL, "F", 0x11, NULL, NULL },
    { "getZf", NULL, "F", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "D", NULL, NULL,  },
    { "y_", NULL, 0x1, "D", NULL, NULL,  },
    { "z_", NULL, 0x1, "D", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelMatrixCoordsDouble3 = { 2, "CoordsDouble3", "geogebra.common.kernel.Matrix", NULL, 0x1, 16, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelMatrixCoordsDouble3;
}

@end

void GeogebraCommonKernelMatrixCoordsDouble3_init(GeogebraCommonKernelMatrixCoordsDouble3 *self) {
  GeogebraCommonKernelMatrixCoords3_init(self);
}

GeogebraCommonKernelMatrixCoordsDouble3 *new_GeogebraCommonKernelMatrixCoordsDouble3_init() {
  GeogebraCommonKernelMatrixCoordsDouble3 *self = [GeogebraCommonKernelMatrixCoordsDouble3 alloc];
  GeogebraCommonKernelMatrixCoordsDouble3_init(self);
  return self;
}

void GeogebraCommonKernelMatrixCoordsDouble3_initWithDouble_withDouble_withDouble_(GeogebraCommonKernelMatrixCoordsDouble3 *self, jdouble x, jdouble y, jdouble z) {
  GeogebraCommonKernelMatrixCoords3_init(self);
  self->x_ = x;
  self->y_ = y;
  self->z_ = z;
}

GeogebraCommonKernelMatrixCoordsDouble3 *new_GeogebraCommonKernelMatrixCoordsDouble3_initWithDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble z) {
  GeogebraCommonKernelMatrixCoordsDouble3 *self = [GeogebraCommonKernelMatrixCoordsDouble3 alloc];
  GeogebraCommonKernelMatrixCoordsDouble3_initWithDouble_withDouble_withDouble_(self, x, y, z);
  return self;
}

void GeogebraCommonKernelMatrixCoordsDouble3_mulInsideWithDouble_(GeogebraCommonKernelMatrixCoordsDouble3 *self, jdouble v) {
  self->x_ *= v;
  self->y_ *= v;
  self->z_ *= v;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelMatrixCoordsDouble3)
