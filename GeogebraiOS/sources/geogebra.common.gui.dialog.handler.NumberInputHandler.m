//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/gui/dialog/handler/NumberInputHandler.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/gui/dialog/handler/NumberInputHandler.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/commands/AlgebraProcessor.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumberValue.h"
#include "geogebra/common/main/App.h"
#include "geogebra/common/util/AsyncOperation.h"

@interface GeogebraCommonGuiDialogHandlerNumberInputHandler () {
 @public
  GeogebraCommonKernelCommandsAlgebraProcessor *algebraProcessor_;
  id<GeogebraCommonKernelGeosGeoNumberValue> num_;
  GeogebraCommonUtilAsyncOperation *callback_;
  jboolean oldVal_;
  GeogebraCommonMainApp *app_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogHandlerNumberInputHandler, algebraProcessor_, GeogebraCommonKernelCommandsAlgebraProcessor *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogHandlerNumberInputHandler, num_, id<GeogebraCommonKernelGeosGeoNumberValue>)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogHandlerNumberInputHandler, callback_, GeogebraCommonUtilAsyncOperation *)
J2OBJC_FIELD_SETTER(GeogebraCommonGuiDialogHandlerNumberInputHandler, app_, GeogebraCommonMainApp *)

@implementation GeogebraCommonGuiDialogHandlerNumberInputHandler

- (instancetype)initWithGeogebraCommonKernelCommandsAlgebraProcessor:(GeogebraCommonKernelCommandsAlgebraProcessor *)algebraProcessor {
  GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_(self, algebraProcessor);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelCommandsAlgebraProcessor:(GeogebraCommonKernelCommandsAlgebraProcessor *)algebraProcessor
                                withGeogebraCommonUtilAsyncOperation:(GeogebraCommonUtilAsyncOperation *)cb
                                           withGeogebraCommonMainApp:(GeogebraCommonMainApp *)appl
                                                         withBoolean:(jboolean)oldValue {
  GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_withGeogebraCommonUtilAsyncOperation_withGeogebraCommonMainApp_withBoolean_(self, algebraProcessor, cb, appl, oldValue);
  return self;
}

- (jboolean)processInputWithNSString:(NSString *)inputString {
  IOSObjectArray *result = [((GeogebraCommonKernelCommandsAlgebraProcessor *) nil_chk(algebraProcessor_)) processAlgebraCommandWithNSString:inputString withBoolean:NO];
  jboolean success = result != nil && [GeogebraCommonKernelGeosGeoNumberValue_class_() isInstance:IOSObjectArray_Get(result, 0)];
  if (success) {
    [self setNumWithGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>) check_protocol_cast(IOSObjectArray_Get(nil_chk(result), 0), @protocol(GeogebraCommonKernelGeosGeoNumberValue))];
    if (callback_ != nil) {
      [((GeogebraCommonKernelConstruction *) nil_chk([((GeogebraCommonKernelKernel *) nil_chk([((GeogebraCommonMainApp *) nil_chk(app_)) getKernel])) getConstruction])) setSuppressLabelCreationWithBoolean:oldVal_];
      [callback_ callbackWithId:num_];
    }
  }
  else {
    [algebraProcessor_ showErrorWithNSString:@"NumberExpected"];
  }
  return success;
}

- (void)setNumWithGeogebraCommonKernelGeosGeoNumberValue:(id<GeogebraCommonKernelGeosGeoNumberValue>)num {
  GeogebraCommonGuiDialogHandlerNumberInputHandler_set_num_(self, num);
}

- (id<GeogebraCommonKernelGeosGeoNumberValue>)getNum {
  return num_;
}

- (void)dealloc {
  RELEASE_(algebraProcessor_);
  RELEASE_(num_);
  RELEASE_(callback_);
  RELEASE_(app_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelCommandsAlgebraProcessor:", "NumberInputHandler", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelCommandsAlgebraProcessor:withGeogebraCommonUtilAsyncOperation:withGeogebraCommonMainApp:withBoolean:", "NumberInputHandler", NULL, 0x1, NULL, NULL },
    { "processInputWithNSString:", "processInput", "Z", 0x1, NULL, NULL },
    { "setNumWithGeogebraCommonKernelGeosGeoNumberValue:", "setNum", "V", 0x1, NULL, NULL },
    { "getNum", NULL, "Lgeogebra.common.kernel.geos.GeoNumberValue;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "algebraProcessor_", NULL, 0x2, "Lgeogebra.common.kernel.commands.AlgebraProcessor;", NULL, NULL,  },
    { "num_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumberValue;", NULL, NULL,  },
    { "callback_", NULL, 0x2, "Lgeogebra.common.util.AsyncOperation;", NULL, NULL,  },
    { "oldVal_", NULL, 0x2, "Z", NULL, NULL,  },
    { "app_", NULL, 0x2, "Lgeogebra.common.main.App;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGuiDialogHandlerNumberInputHandler = { 2, "NumberInputHandler", "geogebra.common.gui.dialog.handler", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGuiDialogHandlerNumberInputHandler;
}

@end

void GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_(GeogebraCommonGuiDialogHandlerNumberInputHandler *self, GeogebraCommonKernelCommandsAlgebraProcessor *algebraProcessor) {
  NSObject_init(self);
  GeogebraCommonGuiDialogHandlerNumberInputHandler_set_num_(self, nil);
  GeogebraCommonGuiDialogHandlerNumberInputHandler_set_algebraProcessor_(self, algebraProcessor);
}

GeogebraCommonGuiDialogHandlerNumberInputHandler *new_GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_(GeogebraCommonKernelCommandsAlgebraProcessor *algebraProcessor) {
  GeogebraCommonGuiDialogHandlerNumberInputHandler *self = [GeogebraCommonGuiDialogHandlerNumberInputHandler alloc];
  GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_(self, algebraProcessor);
  return self;
}

void GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_withGeogebraCommonUtilAsyncOperation_withGeogebraCommonMainApp_withBoolean_(GeogebraCommonGuiDialogHandlerNumberInputHandler *self, GeogebraCommonKernelCommandsAlgebraProcessor *algebraProcessor, GeogebraCommonUtilAsyncOperation *cb, GeogebraCommonMainApp *appl, jboolean oldValue) {
  GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_(self, algebraProcessor);
  GeogebraCommonGuiDialogHandlerNumberInputHandler_set_callback_(self, cb);
  self->oldVal_ = oldValue;
  GeogebraCommonGuiDialogHandlerNumberInputHandler_set_app_(self, appl);
}

GeogebraCommonGuiDialogHandlerNumberInputHandler *new_GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_withGeogebraCommonUtilAsyncOperation_withGeogebraCommonMainApp_withBoolean_(GeogebraCommonKernelCommandsAlgebraProcessor *algebraProcessor, GeogebraCommonUtilAsyncOperation *cb, GeogebraCommonMainApp *appl, jboolean oldValue) {
  GeogebraCommonGuiDialogHandlerNumberInputHandler *self = [GeogebraCommonGuiDialogHandlerNumberInputHandler alloc];
  GeogebraCommonGuiDialogHandlerNumberInputHandler_initWithGeogebraCommonKernelCommandsAlgebraProcessor_withGeogebraCommonUtilAsyncOperation_withGeogebraCommonMainApp_withBoolean_(self, algebraProcessor, cb, appl, oldValue);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGuiDialogHandlerNumberInputHandler)
