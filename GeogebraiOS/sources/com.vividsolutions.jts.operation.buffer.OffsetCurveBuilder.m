//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/operation/buffer/OffsetCurveBuilder.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/algorithm/Angle.h"
#include "com/vividsolutions/jts/algorithm/CGAlgorithms.h"
#include "com/vividsolutions/jts/algorithm/HCoordinate.h"
#include "com/vividsolutions/jts/algorithm/LineIntersector.h"
#include "com/vividsolutions/jts/algorithm/NotRepresentableException.h"
#include "com/vividsolutions/jts/algorithm/RobustLineIntersector.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/geom/LineSegment.h"
#include "com/vividsolutions/jts/geom/PrecisionModel.h"
#include "com/vividsolutions/jts/geomgraph/Position.h"
#include "com/vividsolutions/jts/operation/buffer/BufferInputLineSimplifier.h"
#include "com/vividsolutions/jts/operation/buffer/BufferParameters.h"
#include "com/vividsolutions/jts/operation/buffer/OffsetCurveBuilder.h"
#include "com/vividsolutions/jts/operation/buffer/OffsetCurveVertexList.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#define ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_CURVE_VERTEX_SNAP_DISTANCE_FACTOR 1.0E-6
#define ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR 0.001
#define ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_MAX_CLOSING_SEG_FRACTION 80
#define ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_SIMPLIFY_FACTOR 400.0

@interface ComVividsolutionsJtsOperationBufferOffsetCurveBuilder () {
 @public
  jdouble filletAngleQuantum_;
  jdouble maxCurveSegmentError_;
  jdouble distance_;
  ComVividsolutionsJtsGeomPrecisionModel *precisionModel_;
  ComVividsolutionsJtsOperationBufferBufferParameters *bufParams_;
  jint closingSegFactor_;
  ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *vertexList_;
  ComVividsolutionsJtsAlgorithmLineIntersector *li_;
  ComVividsolutionsJtsGeomCoordinate *s0_, *s1_, *s2_;
  ComVividsolutionsJtsGeomLineSegment *seg0_;
  ComVividsolutionsJtsGeomLineSegment *seg1_;
  ComVividsolutionsJtsGeomLineSegment *offset0_;
  ComVividsolutionsJtsGeomLineSegment *offset1_;
  jint side_;
}

+ (IOSObjectArray *)copyCoordinatesWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts OBJC_METHOD_FAMILY_NONE;

- (void)init__WithDouble:(jdouble)distance OBJC_METHOD_FAMILY_NONE;

- (jdouble)simplifyToleranceWithDouble:(jdouble)bufDistance;

- (void)computeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts;

- (void)OLDcomputeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts;

- (void)computeRingBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts
                                                                  withInt:(jint)side;

- (void)initSideSegmentsWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)s1
                        withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)s2
                                                       withInt:(jint)side OBJC_METHOD_FAMILY_NONE;

- (void)addNextSegmentWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                                 withBoolean:(jboolean)addStartPoint;

- (void)addCollinearWithBoolean:(jboolean)addStartPoint;

- (void)addOutsideTurnWithInt:(jint)orientation
                  withBoolean:(jboolean)addStartPoint;

- (void)addInsideTurnWithInt:(jint)orientation
                 withBoolean:(jboolean)addStartPoint;

- (void)addLastSegment;

- (void)computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)seg
                                                            withInt:(jint)side
                                                         withDouble:(jdouble)distance
                            withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset;

- (void)addLineEndCapWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                     withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1;

- (void)addMitreJoinWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                   withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset0
                   withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset1
                                                withDouble:(jdouble)distance;

- (void)addLimitedMitreJoinWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset0
                           withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset1
                                                        withDouble:(jdouble)distance
                                                        withDouble:(jdouble)mitreLimit;

- (void)addBevelJoinWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset0
                    withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset1;

- (void)addFilletWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                 withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                 withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1
                                                withInt:(jint)direction
                                             withDouble:(jdouble)radius;

- (void)addFilletWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                             withDouble:(jdouble)startAngle
                                             withDouble:(jdouble)endAngle
                                                withInt:(jint)direction
                                             withDouble:(jdouble)radius;

- (void)addCircleWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                             withDouble:(jdouble)distance;

- (void)addSquareWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                             withDouble:(jdouble)distance;

@end

J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, precisionModel_, ComVividsolutionsJtsGeomPrecisionModel *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, bufParams_, ComVividsolutionsJtsOperationBufferBufferParameters *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, vertexList_, ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, li_, ComVividsolutionsJtsAlgorithmLineIntersector *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, s0_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, s1_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, s2_, ComVividsolutionsJtsGeomCoordinate *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, seg0_, ComVividsolutionsJtsGeomLineSegment *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, seg1_, ComVividsolutionsJtsGeomLineSegment *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, offset0_, ComVividsolutionsJtsGeomLineSegment *)
J2OBJC_FIELD_SETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, offset1_, ComVividsolutionsJtsGeomLineSegment *)

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, CURVE_VERTEX_SNAP_DISTANCE_FACTOR, jdouble)

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR, jdouble)

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, MAX_CLOSING_SEG_FRACTION, jint)

J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, SIMPLIFY_FACTOR, jdouble)

static jdouble ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_MAX_CLOSING_SEG_LEN_ = 3.0;
J2OBJC_STATIC_FIELD_GETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, MAX_CLOSING_SEG_LEN_, jdouble)
J2OBJC_STATIC_FIELD_REF_GETTER(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder, MAX_CLOSING_SEG_LEN_, jdouble)

__attribute__((unused)) static IOSObjectArray *ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_copyCoordinatesWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_init__WithDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jdouble distance);

__attribute__((unused)) static jdouble ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_simplifyToleranceWithDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jdouble bufDistance);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, IOSObjectArray *inputPts);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeRingBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_withInt_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, IOSObjectArray *inputPts, jint side);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *s1, ComVividsolutionsJtsGeomCoordinate *s2, jint side);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jboolean addStartPoint);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCollinearWithBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jboolean addStartPoint);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addOutsideTurnWithInt_withBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jint orientation, jboolean addStartPoint);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addInsideTurnWithInt_withBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jint orientation, jboolean addStartPoint);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLastSegment(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomLineSegment *seg, jint side, jdouble distance, ComVividsolutionsJtsGeomLineSegment *offset);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLineEndCapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addMitreJoinWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, ComVividsolutionsJtsGeomLineSegment *offset0, ComVividsolutionsJtsGeomLineSegment *offset1, jdouble distance);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLimitedMitreJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomLineSegment *offset0, ComVividsolutionsJtsGeomLineSegment *offset1, jdouble distance, jdouble mitreLimit);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addBevelJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomLineSegment *offset0, ComVividsolutionsJtsGeomLineSegment *offset1);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1, jint direction, jdouble radius);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withDouble_withDouble_withInt_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jdouble startAngle, jdouble endAngle, jint direction, jdouble radius);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCircleWithComVividsolutionsJtsGeomCoordinate_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jdouble distance);

__attribute__((unused)) static void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addSquareWithComVividsolutionsJtsGeomCoordinate_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jdouble distance);

@implementation ComVividsolutionsJtsOperationBufferOffsetCurveBuilder

- (instancetype)initWithComVividsolutionsJtsGeomPrecisionModel:(ComVividsolutionsJtsGeomPrecisionModel *)precisionModel
       withComVividsolutionsJtsOperationBufferBufferParameters:(ComVividsolutionsJtsOperationBufferBufferParameters *)bufParams {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initWithComVividsolutionsJtsGeomPrecisionModel_withComVividsolutionsJtsOperationBufferBufferParameters_(self, precisionModel, bufParams);
  return self;
}

- (id<JavaUtilList>)getLineCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts
                                                                 withDouble:(jdouble)distance {
  id<JavaUtilList> lineList = [new_JavaUtilArrayList_init() autorelease];
  if (distance <= 0.0) return lineList;
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_init__WithDouble_(self, distance);
  if (((IOSObjectArray *) nil_chk(inputPts))->size_ <= 1) {
    switch ([((ComVividsolutionsJtsOperationBufferBufferParameters *) nil_chk(bufParams_)) getEndCapStyle]) {
      case ComVividsolutionsJtsOperationBufferBufferParameters_CAP_ROUND:
      ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCircleWithComVividsolutionsJtsGeomCoordinate_withDouble_(self, IOSObjectArray_Get(inputPts, 0), distance);
      break;
      case ComVividsolutionsJtsOperationBufferBufferParameters_CAP_SQUARE:
      ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addSquareWithComVividsolutionsJtsGeomCoordinate_withDouble_(self, IOSObjectArray_Get(inputPts, 0), distance);
      break;
    }
  }
  else ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_(self, inputPts);
  IOSObjectArray *lineCoord = [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(vertexList_)) getCoordinates];
  [lineList addWithId:lineCoord];
  return lineList;
}

- (id<JavaUtilList>)getRingCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts
                                                                    withInt:(jint)side
                                                                 withDouble:(jdouble)distance {
  id<JavaUtilList> lineList = [new_JavaUtilArrayList_init() autorelease];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_init__WithDouble_(self, distance);
  if (((IOSObjectArray *) nil_chk(inputPts))->size_ <= 2) return [self getLineCurveWithComVividsolutionsJtsGeomCoordinateArray:inputPts withDouble:distance];
  if (distance == 0.0) {
    [lineList addWithId:ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_copyCoordinatesWithComVividsolutionsJtsGeomCoordinateArray_(inputPts)];
    return lineList;
  }
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeRingBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_withInt_(self, inputPts, side);
  [lineList addWithId:[((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(vertexList_)) getCoordinates]];
  return lineList;
}

+ (IOSObjectArray *)copyCoordinatesWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)pts {
  return ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_copyCoordinatesWithComVividsolutionsJtsGeomCoordinateArray_(pts);
}

- (void)init__WithDouble:(jdouble)distance {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_init__WithDouble_(self, distance);
}

- (jdouble)simplifyToleranceWithDouble:(jdouble)bufDistance {
  return ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_simplifyToleranceWithDouble_(self, bufDistance);
}

- (void)computeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_(self, inputPts);
}

- (void)OLDcomputeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts {
  jint n = ((IOSObjectArray *) nil_chk(inputPts))->size_ - 1;
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(self, IOSObjectArray_Get(inputPts, 0), IOSObjectArray_Get(inputPts, 1), ComVividsolutionsJtsGeomgraphPosition_LEFT);
  for (jint i = 2; i <= n; i++) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(self, IOSObjectArray_Get(inputPts, i), YES);
  }
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLastSegment(self);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLineEndCapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, IOSObjectArray_Get(inputPts, n - 1), IOSObjectArray_Get(inputPts, n));
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(self, IOSObjectArray_Get(inputPts, n), IOSObjectArray_Get(inputPts, n - 1), ComVividsolutionsJtsGeomgraphPosition_LEFT);
  for (jint i = n - 2; i >= 0; i--) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(self, IOSObjectArray_Get(inputPts, i), YES);
  }
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLastSegment(self);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLineEndCapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, IOSObjectArray_Get(inputPts, 1), IOSObjectArray_Get(inputPts, 0));
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(vertexList_)) closeRing];
}

- (void)computeRingBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:(IOSObjectArray *)inputPts
                                                                  withInt:(jint)side {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeRingBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_withInt_(self, inputPts, side);
}

- (void)initSideSegmentsWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)s1
                        withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)s2
                                                       withInt:(jint)side {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(self, s1, s2, side);
}

- (void)addNextSegmentWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                                 withBoolean:(jboolean)addStartPoint {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(self, p, addStartPoint);
}

- (void)addCollinearWithBoolean:(jboolean)addStartPoint {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCollinearWithBoolean_(self, addStartPoint);
}

- (void)addOutsideTurnWithInt:(jint)orientation
                  withBoolean:(jboolean)addStartPoint {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addOutsideTurnWithInt_withBoolean_(self, orientation, addStartPoint);
}

- (void)addInsideTurnWithInt:(jint)orientation
                 withBoolean:(jboolean)addStartPoint {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addInsideTurnWithInt_withBoolean_(self, orientation, addStartPoint);
}

- (void)addLastSegment {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLastSegment(self);
}

- (void)computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)seg
                                                            withInt:(jint)side
                                                         withDouble:(jdouble)distance
                            withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(self, seg, side, distance, offset);
}

- (void)addLineEndCapWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                     withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1 {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLineEndCapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, p0, p1);
}

- (void)addMitreJoinWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                   withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset0
                   withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset1
                                                withDouble:(jdouble)distance {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addMitreJoinWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_(self, p, offset0, offset1, distance);
}

- (void)addLimitedMitreJoinWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset0
                           withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset1
                                                        withDouble:(jdouble)distance
                                                        withDouble:(jdouble)mitreLimit {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLimitedMitreJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_withDouble_(self, offset0, offset1, distance, mitreLimit);
}

- (void)addBevelJoinWithComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset0
                    withComVividsolutionsJtsGeomLineSegment:(ComVividsolutionsJtsGeomLineSegment *)offset1 {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addBevelJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(self, offset0, offset1);
}

- (void)addFilletWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                 withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p0
                 withComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p1
                                                withInt:(jint)direction
                                             withDouble:(jdouble)radius {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(self, p, p0, p1, direction, radius);
}

- (void)addFilletWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                             withDouble:(jdouble)startAngle
                                             withDouble:(jdouble)endAngle
                                                withInt:(jint)direction
                                             withDouble:(jdouble)radius {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withDouble_withDouble_withInt_withDouble_(self, p, startAngle, endAngle, direction, radius);
}

- (void)addCircleWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                             withDouble:(jdouble)distance {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCircleWithComVividsolutionsJtsGeomCoordinate_withDouble_(self, p, distance);
}

- (void)addSquareWithComVividsolutionsJtsGeomCoordinate:(ComVividsolutionsJtsGeomCoordinate *)p
                                             withDouble:(jdouble)distance {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addSquareWithComVividsolutionsJtsGeomCoordinate_withDouble_(self, p, distance);
}

- (void)dealloc {
  RELEASE_(precisionModel_);
  RELEASE_(bufParams_);
  RELEASE_(vertexList_);
  RELEASE_(li_);
  RELEASE_(s0_);
  RELEASE_(s1_);
  RELEASE_(s2_);
  RELEASE_(seg0_);
  RELEASE_(seg1_);
  RELEASE_(offset0_);
  RELEASE_(offset1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComVividsolutionsJtsGeomPrecisionModel:withComVividsolutionsJtsOperationBufferBufferParameters:", "OffsetCurveBuilder", NULL, 0x1, NULL, NULL },
    { "getLineCurveWithComVividsolutionsJtsGeomCoordinateArray:withDouble:", "getLineCurve", "Ljava.util.List;", 0x1, NULL, NULL },
    { "getRingCurveWithComVividsolutionsJtsGeomCoordinateArray:withInt:withDouble:", "getRingCurve", "Ljava.util.List;", 0x1, NULL, NULL },
    { "copyCoordinatesWithComVividsolutionsJtsGeomCoordinateArray:", "copyCoordinates", "[Lcom.vividsolutions.jts.geom.Coordinate;", 0xa, NULL, NULL },
    { "init__WithDouble:", "init", "V", 0x2, NULL, NULL },
    { "simplifyToleranceWithDouble:", "simplifyTolerance", "D", 0x2, NULL, NULL },
    { "computeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:", "computeLineBufferCurve", "V", 0x2, NULL, NULL },
    { "OLDcomputeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:", "OLDcomputeLineBufferCurve", "V", 0x2, NULL, NULL },
    { "computeRingBufferCurveWithComVividsolutionsJtsGeomCoordinateArray:withInt:", "computeRingBufferCurve", "V", 0x2, NULL, NULL },
    { "initSideSegmentsWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withInt:", "initSideSegments", "V", 0x2, NULL, NULL },
    { "addNextSegmentWithComVividsolutionsJtsGeomCoordinate:withBoolean:", "addNextSegment", "V", 0x2, NULL, NULL },
    { "addCollinearWithBoolean:", "addCollinear", "V", 0x2, NULL, NULL },
    { "addOutsideTurnWithInt:withBoolean:", "addOutsideTurn", "V", 0x2, NULL, NULL },
    { "addInsideTurnWithInt:withBoolean:", "addInsideTurn", "V", 0x2, NULL, NULL },
    { "addLastSegment", NULL, "V", 0x2, NULL, NULL },
    { "computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment:withInt:withDouble:withComVividsolutionsJtsGeomLineSegment:", "computeOffsetSegment", "V", 0x2, NULL, NULL },
    { "addLineEndCapWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:", "addLineEndCap", "V", 0x2, NULL, NULL },
    { "addMitreJoinWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomLineSegment:withComVividsolutionsJtsGeomLineSegment:withDouble:", "addMitreJoin", "V", 0x2, NULL, NULL },
    { "addLimitedMitreJoinWithComVividsolutionsJtsGeomLineSegment:withComVividsolutionsJtsGeomLineSegment:withDouble:withDouble:", "addLimitedMitreJoin", "V", 0x2, NULL, NULL },
    { "addBevelJoinWithComVividsolutionsJtsGeomLineSegment:withComVividsolutionsJtsGeomLineSegment:", "addBevelJoin", "V", 0x2, NULL, NULL },
    { "addFilletWithComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withComVividsolutionsJtsGeomCoordinate:withInt:withDouble:", "addFillet", "V", 0x2, NULL, NULL },
    { "addFilletWithComVividsolutionsJtsGeomCoordinate:withDouble:withDouble:withInt:withDouble:", "addFillet", "V", 0x2, NULL, NULL },
    { "addCircleWithComVividsolutionsJtsGeomCoordinate:withDouble:", "addCircle", "V", 0x2, NULL, NULL },
    { "addSquareWithComVividsolutionsJtsGeomCoordinate:withDouble:", "addSquare", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "filletAngleQuantum_", NULL, 0x2, "D", NULL, NULL,  },
    { "maxCurveSegmentError_", NULL, 0x2, "D", NULL, NULL,  },
    { "CURVE_VERTEX_SNAP_DISTANCE_FACTOR_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_CURVE_VERTEX_SNAP_DISTANCE_FACTOR },
    { "INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR },
    { "MAX_CLOSING_SEG_FRACTION_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_MAX_CLOSING_SEG_FRACTION },
    { "distance_", NULL, 0x2, "D", NULL, NULL,  },
    { "precisionModel_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.PrecisionModel;", NULL, NULL,  },
    { "bufParams_", NULL, 0x2, "Lcom.vividsolutions.jts.operation.buffer.BufferParameters;", NULL, NULL,  },
    { "closingSegFactor_", NULL, 0x2, "I", NULL, NULL,  },
    { "vertexList_", NULL, 0x2, "Lcom.vividsolutions.jts.operation.buffer.OffsetCurveVertexList;", NULL, NULL,  },
    { "li_", NULL, 0x2, "Lcom.vividsolutions.jts.algorithm.LineIntersector;", NULL, NULL,  },
    { "SIMPLIFY_FACTOR_", NULL, 0x1a, "D", NULL, NULL, .constantValue.asDouble = ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_SIMPLIFY_FACTOR },
    { "s0_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "s1_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "s2_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.Coordinate;", NULL, NULL,  },
    { "seg0_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.LineSegment;", NULL, NULL,  },
    { "seg1_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.LineSegment;", NULL, NULL,  },
    { "offset0_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.LineSegment;", NULL, NULL,  },
    { "offset1_", NULL, 0x2, "Lcom.vividsolutions.jts.geom.LineSegment;", NULL, NULL,  },
    { "side_", NULL, 0x2, "I", NULL, NULL,  },
    { "MAX_CLOSING_SEG_LEN_", NULL, 0xa, "D", &ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_MAX_CLOSING_SEG_LEN_, NULL,  },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsOperationBufferOffsetCurveBuilder = { 2, "OffsetCurveBuilder", "com.vividsolutions.jts.operation.buffer", NULL, 0x1, 24, methods, 21, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsOperationBufferOffsetCurveBuilder;
}

@end

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initWithComVividsolutionsJtsGeomPrecisionModel_withComVividsolutionsJtsOperationBufferBufferParameters_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomPrecisionModel *precisionModel, ComVividsolutionsJtsOperationBufferBufferParameters *bufParams) {
  NSObject_init(self);
  self->maxCurveSegmentError_ = 0.0;
  self->distance_ = 0.0;
  self->closingSegFactor_ = 1;
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_setAndConsume_seg0_(self, new_ComVividsolutionsJtsGeomLineSegment_init());
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_setAndConsume_seg1_(self, new_ComVividsolutionsJtsGeomLineSegment_init());
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_setAndConsume_offset0_(self, new_ComVividsolutionsJtsGeomLineSegment_init());
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_setAndConsume_offset1_(self, new_ComVividsolutionsJtsGeomLineSegment_init());
  self->side_ = 0;
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_set_precisionModel_(self, precisionModel);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_set_bufParams_(self, bufParams);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_setAndConsume_li_(self, new_ComVividsolutionsJtsAlgorithmRobustLineIntersector_init());
  self->filletAngleQuantum_ = JavaLangMath_PI / 2.0 / [((ComVividsolutionsJtsOperationBufferBufferParameters *) nil_chk(bufParams)) getQuadrantSegments];
  if ([bufParams getQuadrantSegments] >= 8 && [bufParams getJoinStyle] == ComVividsolutionsJtsOperationBufferBufferParameters_JOIN_ROUND) self->closingSegFactor_ = ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_MAX_CLOSING_SEG_FRACTION;
}

ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *new_ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initWithComVividsolutionsJtsGeomPrecisionModel_withComVividsolutionsJtsOperationBufferBufferParameters_(ComVividsolutionsJtsGeomPrecisionModel *precisionModel, ComVividsolutionsJtsOperationBufferBufferParameters *bufParams) {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self = [ComVividsolutionsJtsOperationBufferOffsetCurveBuilder alloc];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initWithComVividsolutionsJtsGeomPrecisionModel_withComVividsolutionsJtsOperationBufferBufferParameters_(self, precisionModel, bufParams);
  return self;
}

IOSObjectArray *ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_copyCoordinatesWithComVividsolutionsJtsGeomCoordinateArray_(IOSObjectArray *pts) {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initialize();
  IOSObjectArray *copy_ = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(pts))->size_ type:ComVividsolutionsJtsGeomCoordinate_class_()];
  for (jint i = 0; i < copy_->size_; i++) {
    IOSObjectArray_SetAndConsume(copy_, i, new_ComVividsolutionsJtsGeomCoordinate_initWithComVividsolutionsJtsGeomCoordinate_(IOSObjectArray_Get(pts, i)));
  }
  return copy_;
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_init__WithDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jdouble distance) {
  self->distance_ = distance;
  self->maxCurveSegmentError_ = distance * (1 - JavaLangMath_cosWithDouble_(self->filletAngleQuantum_ / 2.0));
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_setAndConsume_vertexList_(self, new_ComVividsolutionsJtsOperationBufferOffsetCurveVertexList_init());
  [self->vertexList_ setPrecisionModelWithComVividsolutionsJtsGeomPrecisionModel:self->precisionModel_];
  [self->vertexList_ setMinimumVertexDistanceWithDouble:distance * ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_CURVE_VERTEX_SNAP_DISTANCE_FACTOR];
}

jdouble ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_simplifyToleranceWithDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jdouble bufDistance) {
  return bufDistance / ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_SIMPLIFY_FACTOR;
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeLineBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, IOSObjectArray *inputPts) {
  jdouble distTol = ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_simplifyToleranceWithDouble_(self, self->distance_);
  IOSObjectArray *simp1 = ComVividsolutionsJtsOperationBufferBufferInputLineSimplifier_simplifyWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(inputPts, distTol);
  jint n1 = ((IOSObjectArray *) nil_chk(simp1))->size_ - 1;
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(self, IOSObjectArray_Get(simp1, 0), IOSObjectArray_Get(simp1, 1), ComVividsolutionsJtsGeomgraphPosition_LEFT);
  for (jint i = 2; i <= n1; i++) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(self, IOSObjectArray_Get(simp1, i), YES);
  }
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLastSegment(self);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLineEndCapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, IOSObjectArray_Get(simp1, n1 - 1), IOSObjectArray_Get(simp1, n1));
  IOSObjectArray *simp2 = ComVividsolutionsJtsOperationBufferBufferInputLineSimplifier_simplifyWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(inputPts, -distTol);
  jint n2 = ((IOSObjectArray *) nil_chk(simp2))->size_ - 1;
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(self, IOSObjectArray_Get(simp2, n2), IOSObjectArray_Get(simp2, n2 - 1), ComVividsolutionsJtsGeomgraphPosition_LEFT);
  for (jint i = n2 - 2; i >= 0; i--) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(self, IOSObjectArray_Get(simp2, i), YES);
  }
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLastSegment(self);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLineEndCapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self, IOSObjectArray_Get(simp2, 1), IOSObjectArray_Get(simp2, 0));
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) closeRing];
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeRingBufferCurveWithComVividsolutionsJtsGeomCoordinateArray_withInt_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, IOSObjectArray *inputPts, jint side) {
  jdouble distTol = ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_simplifyToleranceWithDouble_(self, self->distance_);
  if (side == ComVividsolutionsJtsGeomgraphPosition_RIGHT) distTol = -distTol;
  IOSObjectArray *simp = ComVividsolutionsJtsOperationBufferBufferInputLineSimplifier_simplifyWithComVividsolutionsJtsGeomCoordinateArray_withDouble_(inputPts, distTol);
  jint n = ((IOSObjectArray *) nil_chk(simp))->size_ - 1;
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(self, IOSObjectArray_Get(simp, n - 1), IOSObjectArray_Get(simp, 0), side);
  for (jint i = 1; i <= n; i++) {
    jboolean addStartPoint = i != 1;
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(self, IOSObjectArray_Get(simp, i), addStartPoint);
  }
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) closeRing];
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_initSideSegmentsWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *s1, ComVividsolutionsJtsGeomCoordinate *s2, jint side) {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_set_s1_(self, s1);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_set_s2_(self, s2);
  self->side_ = side;
  [((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->seg1_)) setCoordinatesWithComVividsolutionsJtsGeomCoordinate:s1 withComVividsolutionsJtsGeomCoordinate:s2];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(self, self->seg1_, side, self->distance_, self->offset1_);
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addNextSegmentWithComVividsolutionsJtsGeomCoordinate_withBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jboolean addStartPoint) {
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_set_s0_(self, self->s1_);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_set_s1_(self, self->s2_);
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_set_s2_(self, p);
  [((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->seg0_)) setCoordinatesWithComVividsolutionsJtsGeomCoordinate:self->s0_ withComVividsolutionsJtsGeomCoordinate:self->s1_];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(self, self->seg0_, self->side_, self->distance_, self->offset0_);
  [((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->seg1_)) setCoordinatesWithComVividsolutionsJtsGeomCoordinate:self->s1_ withComVividsolutionsJtsGeomCoordinate:self->s2_];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(self, self->seg1_, self->side_, self->distance_, self->offset1_);
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->s1_)) isEqual:self->s2_]) return;
  jint orientation = ComVividsolutionsJtsAlgorithmCGAlgorithms_computeOrientationWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self->s0_, self->s1_, self->s2_);
  jboolean outsideTurn = (orientation == ComVividsolutionsJtsAlgorithmCGAlgorithms_CLOCKWISE && self->side_ == ComVividsolutionsJtsGeomgraphPosition_LEFT) || (orientation == ComVividsolutionsJtsAlgorithmCGAlgorithms_COUNTERCLOCKWISE && self->side_ == ComVividsolutionsJtsGeomgraphPosition_RIGHT);
  if (orientation == 0) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCollinearWithBoolean_(self, addStartPoint);
  }
  else if (outsideTurn) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addOutsideTurnWithInt_withBoolean_(self, orientation, addStartPoint);
  }
  else {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addInsideTurnWithInt_withBoolean_(self, orientation, addStartPoint);
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCollinearWithBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jboolean addStartPoint) {
  [((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(self->li_)) computeIntersectionWithComVividsolutionsJtsGeomCoordinate:self->s0_ withComVividsolutionsJtsGeomCoordinate:self->s1_ withComVividsolutionsJtsGeomCoordinate:self->s1_ withComVividsolutionsJtsGeomCoordinate:self->s2_];
  jint numInt = [self->li_ getIntersectionNum];
  if (numInt >= 2) {
    if ([((ComVividsolutionsJtsOperationBufferBufferParameters *) nil_chk(self->bufParams_)) getJoinStyle] == ComVividsolutionsJtsOperationBufferBufferParameters_JOIN_BEVEL || [self->bufParams_ getJoinStyle] == ComVividsolutionsJtsOperationBufferBufferParameters_JOIN_MITRE) {
      if (addStartPoint) [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset0_))->p1_];
      [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset1_))->p0_];
    }
    else {
      ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(self, self->s1_, ((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset0_))->p1_, ((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset1_))->p0_, ComVividsolutionsJtsAlgorithmCGAlgorithms_CLOCKWISE, self->distance_);
    }
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addOutsideTurnWithInt_withBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jint orientation, jboolean addStartPoint) {
  if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset0_))->p1_)) distanceWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset1_))->p0_] < self->distance_ * ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_CURVE_VERTEX_SNAP_DISTANCE_FACTOR) {
    [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:self->offset0_->p1_];
    return;
  }
  if ([((ComVividsolutionsJtsOperationBufferBufferParameters *) nil_chk(self->bufParams_)) getJoinStyle] == ComVividsolutionsJtsOperationBufferBufferParameters_JOIN_MITRE) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addMitreJoinWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_(self, self->s1_, self->offset0_, self->offset1_, self->distance_);
  }
  else if ([self->bufParams_ getJoinStyle] == ComVividsolutionsJtsOperationBufferBufferParameters_JOIN_BEVEL) {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addBevelJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(self, self->offset0_, self->offset1_);
  }
  else {
    if (addStartPoint) [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:self->offset0_->p1_];
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(self, self->s1_, self->offset0_->p1_, self->offset1_->p0_, orientation, self->distance_);
    [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:self->offset1_->p0_];
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addInsideTurnWithInt_withBoolean_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, jint orientation, jboolean addStartPoint) {
  [((ComVividsolutionsJtsAlgorithmLineIntersector *) nil_chk(self->li_)) computeIntersectionWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset0_))->p0_ withComVividsolutionsJtsGeomCoordinate:self->offset0_->p1_ withComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset1_))->p0_ withComVividsolutionsJtsGeomCoordinate:self->offset1_->p1_];
  if ([self->li_ hasIntersection]) {
    [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:[self->li_ getIntersectionWithInt:0]];
  }
  else {
    if ([((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->offset0_->p1_)) distanceWithComVividsolutionsJtsGeomCoordinate:self->offset1_->p0_] < self->distance_ * ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {
      [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:self->offset0_->p1_];
    }
    else {
      [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:self->offset0_->p1_];
      if (self->closingSegFactor_ > 0) {
        ComVividsolutionsJtsGeomCoordinate *mid0 = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_((self->closingSegFactor_ * self->offset0_->p1_->x_ + ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->s1_))->x_) / (self->closingSegFactor_ + 1), (self->closingSegFactor_ * self->offset0_->p1_->y_ + self->s1_->y_) / (self->closingSegFactor_ + 1)) autorelease];
        [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:mid0];
        ComVividsolutionsJtsGeomCoordinate *mid1 = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_((self->closingSegFactor_ * ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(self->offset1_->p0_))->x_ + self->s1_->x_) / (self->closingSegFactor_ + 1), (self->closingSegFactor_ * self->offset1_->p0_->y_ + self->s1_->y_) / (self->closingSegFactor_ + 1)) autorelease];
        [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:mid1];
      }
      else {
        [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:self->s1_];
      }
      [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:self->offset1_->p0_];
    }
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLastSegment(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self) {
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->offset1_))->p1_];
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomLineSegment *seg, jint side, jdouble distance, ComVividsolutionsJtsGeomLineSegment *offset) {
  jint sideSign = side == ComVividsolutionsJtsGeomgraphPosition_LEFT ? 1 : -1;
  jdouble dx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(((ComVividsolutionsJtsGeomLineSegment *) nil_chk(seg))->p1_))->x_ - ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(seg->p0_))->x_;
  jdouble dy = seg->p1_->y_ - seg->p0_->y_;
  jdouble len = JavaLangMath_sqrtWithDouble_(dx * dx + dy * dy);
  jdouble ux = sideSign * distance * dx / len;
  jdouble uy = sideSign * distance * dy / len;
  ((ComVividsolutionsJtsGeomLineSegment *) nil_chk(offset))->p0_->x_ = seg->p0_->x_ - uy;
  offset->p0_->y_ = seg->p0_->y_ + ux;
  offset->p1_->x_ = seg->p1_->x_ - uy;
  offset->p1_->y_ = seg->p1_->y_ + ux;
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLineEndCapWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1) {
  ComVividsolutionsJtsGeomLineSegment *seg = [new_ComVividsolutionsJtsGeomLineSegment_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(p0, p1) autorelease];
  ComVividsolutionsJtsGeomLineSegment *offsetL = [new_ComVividsolutionsJtsGeomLineSegment_init() autorelease];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(self, seg, ComVividsolutionsJtsGeomgraphPosition_LEFT, self->distance_, offsetL);
  ComVividsolutionsJtsGeomLineSegment *offsetR = [new_ComVividsolutionsJtsGeomLineSegment_init() autorelease];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_computeOffsetSegmentWithComVividsolutionsJtsGeomLineSegment_withInt_withDouble_withComVividsolutionsJtsGeomLineSegment_(self, seg, ComVividsolutionsJtsGeomgraphPosition_RIGHT, self->distance_, offsetR);
  jdouble dx = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_ - ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0))->x_;
  jdouble dy = p1->y_ - p0->y_;
  jdouble angle = JavaLangMath_atan2WithDouble_withDouble_(dy, dx);
  {
    ComVividsolutionsJtsGeomCoordinate *squareCapSideOffset;
    ComVividsolutionsJtsGeomCoordinate *squareCapLOffset;
    ComVividsolutionsJtsGeomCoordinate *squareCapROffset;
    switch ([((ComVividsolutionsJtsOperationBufferBufferParameters *) nil_chk(self->bufParams_)) getEndCapStyle]) {
      case ComVividsolutionsJtsOperationBufferBufferParameters_CAP_ROUND:
      [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:offsetL->p1_];
      ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withDouble_withDouble_withInt_withDouble_(self, p1, angle + JavaLangMath_PI / 2, angle - JavaLangMath_PI / 2, ComVividsolutionsJtsAlgorithmCGAlgorithms_CLOCKWISE, self->distance_);
      [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:offsetR->p1_];
      break;
      case ComVividsolutionsJtsOperationBufferBufferParameters_CAP_FLAT:
      [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:offsetL->p1_];
      [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:offsetR->p1_];
      break;
      case ComVividsolutionsJtsOperationBufferBufferParameters_CAP_SQUARE:
      squareCapSideOffset = [new_ComVividsolutionsJtsGeomCoordinate_init() autorelease];
      squareCapSideOffset->x_ = JavaLangMath_absWithDouble_(self->distance_) * JavaLangMath_cosWithDouble_(angle);
      squareCapSideOffset->y_ = JavaLangMath_absWithDouble_(self->distance_) * JavaLangMath_sinWithDouble_(angle);
      squareCapLOffset = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(((ComVividsolutionsJtsGeomCoordinate *) nil_chk(offsetL->p1_))->x_ + squareCapSideOffset->x_, offsetL->p1_->y_ + squareCapSideOffset->y_) autorelease];
      squareCapROffset = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(offsetR->p1_->x_ + squareCapSideOffset->x_, offsetR->p1_->y_ + squareCapSideOffset->y_) autorelease];
      [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:squareCapLOffset];
      [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:squareCapROffset];
      break;
    }
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addMitreJoinWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, ComVividsolutionsJtsGeomLineSegment *offset0, ComVividsolutionsJtsGeomLineSegment *offset1, jdouble distance) {
  jboolean isMitreWithinLimit = YES;
  ComVividsolutionsJtsGeomCoordinate *intPt = nil;
  @try {
    intPt = ComVividsolutionsJtsAlgorithmHCoordinate_intersectionWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(((ComVividsolutionsJtsGeomLineSegment *) nil_chk(offset0))->p0_, offset0->p1_, ((ComVividsolutionsJtsGeomLineSegment *) nil_chk(offset1))->p0_, offset1->p1_);
    jdouble mitreRatio = distance <= 0.0 ? 1.0 : [((ComVividsolutionsJtsGeomCoordinate *) nil_chk(intPt)) distanceWithComVividsolutionsJtsGeomCoordinate:p] / JavaLangMath_absWithDouble_(distance);
    if (mitreRatio > [((ComVividsolutionsJtsOperationBufferBufferParameters *) nil_chk(self->bufParams_)) getMitreLimit]) isMitreWithinLimit = NO;
  }
  @catch (ComVividsolutionsJtsAlgorithmNotRepresentableException *ex) {
    intPt = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(0, 0) autorelease];
    isMitreWithinLimit = NO;
  }
  if (isMitreWithinLimit) {
    [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:intPt];
  }
  else {
    ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLimitedMitreJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_withDouble_(self, offset0, offset1, distance, [((ComVividsolutionsJtsOperationBufferBufferParameters *) nil_chk(self->bufParams_)) getMitreLimit]);
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addLimitedMitreJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_withDouble_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomLineSegment *offset0, ComVividsolutionsJtsGeomLineSegment *offset1, jdouble distance, jdouble mitreLimit) {
  ComVividsolutionsJtsGeomCoordinate *basePt = ((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->seg0_))->p1_;
  jdouble ang0 = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(basePt, self->seg0_->p0_);
  jdouble ang1 = ComVividsolutionsJtsAlgorithmAngle_angleWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(basePt, ((ComVividsolutionsJtsGeomLineSegment *) nil_chk(self->seg1_))->p1_);
  jdouble angDiff = ComVividsolutionsJtsAlgorithmAngle_angleBetweenOrientedWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(self->seg0_->p0_, basePt, self->seg1_->p1_);
  jdouble angDiffHalf = angDiff / 2;
  jdouble midAng = ComVividsolutionsJtsAlgorithmAngle_normalizeWithDouble_(ang0 + angDiffHalf);
  jdouble mitreMidAng = ComVividsolutionsJtsAlgorithmAngle_normalizeWithDouble_(midAng + JavaLangMath_PI);
  jdouble mitreDist = mitreLimit * distance;
  jdouble bevelDelta = mitreDist * JavaLangMath_absWithDouble_(JavaLangMath_sinWithDouble_(angDiffHalf));
  jdouble bevelHalfLen = distance - bevelDelta;
  jdouble bevelMidX = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(basePt))->x_ + mitreDist * JavaLangMath_cosWithDouble_(mitreMidAng);
  jdouble bevelMidY = basePt->y_ + mitreDist * JavaLangMath_sinWithDouble_(mitreMidAng);
  ComVividsolutionsJtsGeomCoordinate *bevelMidPt = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(bevelMidX, bevelMidY) autorelease];
  ComVividsolutionsJtsGeomLineSegment *mitreMidLine = [new_ComVividsolutionsJtsGeomLineSegment_initWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_(basePt, bevelMidPt) autorelease];
  ComVividsolutionsJtsGeomCoordinate *bevelEndLeft = [mitreMidLine pointAlongOffsetWithDouble:1.0 withDouble:bevelHalfLen];
  ComVividsolutionsJtsGeomCoordinate *bevelEndRight = [mitreMidLine pointAlongOffsetWithDouble:1.0 withDouble:-bevelHalfLen];
  if (self->side_ == ComVividsolutionsJtsGeomgraphPosition_LEFT) {
    [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:bevelEndLeft];
    [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:bevelEndRight];
  }
  else {
    [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:bevelEndRight];
    [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:bevelEndLeft];
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addBevelJoinWithComVividsolutionsJtsGeomLineSegment_withComVividsolutionsJtsGeomLineSegment_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomLineSegment *offset0, ComVividsolutionsJtsGeomLineSegment *offset1) {
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(offset0))->p1_];
  [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:((ComVividsolutionsJtsGeomLineSegment *) nil_chk(offset1))->p0_];
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_withInt_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, ComVividsolutionsJtsGeomCoordinate *p0, ComVividsolutionsJtsGeomCoordinate *p1, jint direction, jdouble radius) {
  jdouble dx0 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p0))->x_ - ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p))->x_;
  jdouble dy0 = p0->y_ - p->y_;
  jdouble startAngle = JavaLangMath_atan2WithDouble_withDouble_(dy0, dx0);
  jdouble dx1 = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p1))->x_ - p->x_;
  jdouble dy1 = p1->y_ - p->y_;
  jdouble endAngle = JavaLangMath_atan2WithDouble_withDouble_(dy1, dx1);
  if (direction == ComVividsolutionsJtsAlgorithmCGAlgorithms_CLOCKWISE) {
    if (startAngle <= endAngle) startAngle += 2.0 * JavaLangMath_PI;
  }
  else {
    if (startAngle >= endAngle) startAngle -= 2.0 * JavaLangMath_PI;
  }
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:p0];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withDouble_withDouble_withInt_withDouble_(self, p, startAngle, endAngle, direction, radius);
  [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:p1];
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withDouble_withDouble_withInt_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jdouble startAngle, jdouble endAngle, jint direction, jdouble radius) {
  jint directionFactor = direction == ComVividsolutionsJtsAlgorithmCGAlgorithms_CLOCKWISE ? -1 : 1;
  jdouble totalAngle = JavaLangMath_absWithDouble_(startAngle - endAngle);
  jint nSegs = J2ObjCFpToInt((totalAngle / self->filletAngleQuantum_ + 0.5));
  if (nSegs < 1) return;
  jdouble initAngle, currAngleInc;
  initAngle = 0.0;
  currAngleInc = totalAngle / nSegs;
  jdouble currAngle = initAngle;
  ComVividsolutionsJtsGeomCoordinate *pt = [new_ComVividsolutionsJtsGeomCoordinate_init() autorelease];
  while (currAngle < totalAngle) {
    jdouble angle = startAngle + directionFactor * currAngle;
    pt->x_ = ((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p))->x_ + radius * JavaLangMath_cosWithDouble_(angle);
    pt->y_ = p->y_ + radius * JavaLangMath_sinWithDouble_(angle);
    [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:pt];
    currAngle += currAngleInc;
  }
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addCircleWithComVividsolutionsJtsGeomCoordinate_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jdouble distance) {
  ComVividsolutionsJtsGeomCoordinate *pt = [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p))->x_ + distance, p->y_) autorelease];
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:pt];
  ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addFilletWithComVividsolutionsJtsGeomCoordinate_withDouble_withDouble_withInt_withDouble_(self, p, 0.0, 2.0 * JavaLangMath_PI, -1, distance);
}

void ComVividsolutionsJtsOperationBufferOffsetCurveBuilder_addSquareWithComVividsolutionsJtsGeomCoordinate_withDouble_(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder *self, ComVividsolutionsJtsGeomCoordinate *p, jdouble distance) {
  [((ComVividsolutionsJtsOperationBufferOffsetCurveVertexList *) nil_chk(self->vertexList_)) addPtWithComVividsolutionsJtsGeomCoordinate:[new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(((ComVividsolutionsJtsGeomCoordinate *) nil_chk(p))->x_ + distance, p->y_ + distance) autorelease]];
  [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:[new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(p->x_ + distance, p->y_ - distance) autorelease]];
  [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:[new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(p->x_ - distance, p->y_ - distance) autorelease]];
  [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:[new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(p->x_ - distance, p->y_ + distance) autorelease]];
  [self->vertexList_ addPtWithComVividsolutionsJtsGeomCoordinate:[new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(p->x_ + distance, p->y_ + distance) autorelease]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsOperationBufferOffsetCurveBuilder)
