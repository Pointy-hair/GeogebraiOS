//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/org/apache/commons/collections15/bidimap/TreeBidiMap.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/AbstractSet.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "org/apache/commons/collections15/BidiMap.h"
#include "org/apache/commons/collections15/MapIterator.h"
#include "org/apache/commons/collections15/OrderedBidiMap.h"
#include "org/apache/commons/collections15/OrderedMapIterator.h"
#include "org/apache/commons/collections15/bidimap/TreeBidiMap.h"
#include "org/apache/commons/collections15/iterators/EmptyOrderedMapIterator.h"
#include "org/apache/commons/collections15/keyvalue/UnmodifiableMapEntry.h"

#define OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY 0
#define OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE 1
#define OrgApacheCommonsCollections15BidimapTreeBidiMap_MAPENTRY 2
#define OrgApacheCommonsCollections15BidimapTreeBidiMap_INVERSEMAPENTRY 3
#define OrgApacheCommonsCollections15BidimapTreeBidiMap_SUM_OF_INDICES 1
#define OrgApacheCommonsCollections15BidimapTreeBidiMap_FIRST_INDEX 0
#define OrgApacheCommonsCollections15BidimapTreeBidiMap_NUMBER_OF_INDICES 2

@interface OrgApacheCommonsCollections15BidimapTreeBidiMap () {
 @public
  IOSObjectArray *rootNode_;
  jint nodeCount_;
  jint modifications_;
  id<JavaUtilSet> keySet__;
  id<JavaUtilSet> valuesSet_;
  id<JavaUtilSet> entrySet__;
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse *inverse_;
}

- (id)doGetKeyWithJavaLangComparable:(id<JavaLangComparable>)value;

- (id)doGetValueWithId:(id)key;

- (id)doPutByKeyWithJavaLangComparable:(id<JavaLangComparable>)key
                withJavaLangComparable:(id<JavaLangComparable>)value;

- (id)doPutByValueWithJavaLangComparable:(id<JavaLangComparable>)key
                  withJavaLangComparable:(id<JavaLangComparable>)value;

- (void)doPutWithJavaLangComparable:(id<JavaLangComparable>)key
             withJavaLangComparable:(id<JavaLangComparable>)value;

- (id)doRemoveByKeyWithJavaLangComparable:(id<JavaLangComparable>)key;

- (id)doRemoveByValueWithJavaLangComparable:(id<JavaLangComparable>)value;

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)lookupWithJavaLangComparable:(id<JavaLangComparable>)data
                                                                               withInt:(jint)index;

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                      withInt:(jint)index;

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                      withInt:(jint)index;

+ (jint)oppositeIndexWithInt:(jint)index;

+ (jint)compareWithJavaLangComparable:(id<JavaLangComparable>)o1
               withJavaLangComparable:(id<JavaLangComparable>)o2;

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                    withInt:(jint)index;

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                       withInt:(jint)index;

+ (void)copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)from
                 withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)to
                                                                  withInt:(jint)index OBJC_METHOD_FAMILY_NONE;

+ (jboolean)isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index;

+ (jboolean)isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                    withInt:(jint)index;

+ (void)makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                withInt:(jint)index;

+ (void)makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index;

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                         withInt:(jint)index;

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                    withInt:(jint)index;

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                        withInt:(jint)index;

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                       withInt:(jint)index;

+ (jboolean)isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                        withInt:(jint)index;

+ (jboolean)isRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                         withInt:(jint)index;

- (void)rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                   withInt:(jint)index;

- (void)rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                    withInt:(jint)index;

- (void)doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)insertedNode
                                                                         withInt:(jint)index;

- (void)doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)deletedNode;

- (void)doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)replacementNode
                                                                              withInt:(jint)index;

- (void)swapPositionWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)x
                    withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)y
                                                                     withInt:(jint)index;

+ (void)checkNonNullComparableWithId:(id)o;

+ (void)checkKeyWithId:(id)key;

+ (void)checkValueWithId:(id)value;

+ (void)checkKeyAndValueWithId:(id)key
                        withId:(id)value;

- (void)modify;

- (void)grow;

- (void)shrink;

- (void)insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)newNode;

- (jboolean)doEqualsWithId:(id)obj
                   withInt:(jint)type;

- (jint)doHashCodeWithInt:(jint)type;

- (NSString *)doToStringWithInt:(jint)type;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, rootNode_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, keySet__, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, valuesSet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, entrySet__, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, inverse_, OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse *)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, KEY, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, VALUE, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, MAPENTRY, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, INVERSEMAPENTRY, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, SUM_OF_INDICES, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, FIRST_INDEX, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, NUMBER_OF_INDICES, jint)

static IOSObjectArray *OrgApacheCommonsCollections15BidimapTreeBidiMap_dataName_;
J2OBJC_STATIC_FIELD_GETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap, dataName_, IOSObjectArray *)

__attribute__((unused)) static id OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetKeyWithJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> value);

__attribute__((unused)) static id OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetValueWithId_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id key);

__attribute__((unused)) static id OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByKeyWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key, id<JavaLangComparable> value);

__attribute__((unused)) static id OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByValueWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key, id<JavaLangComparable> value);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key, id<JavaLangComparable> value);

__attribute__((unused)) static id OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByKeyWithJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key);

__attribute__((unused)) static id OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByValueWithJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> value);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> data, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static jint OrgApacheCommonsCollections15BidimapTreeBidiMap_oppositeIndexWithInt_(jint index);

__attribute__((unused)) static jint OrgApacheCommonsCollections15BidimapTreeBidiMap_compareWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> o1, id<JavaLangComparable> o2);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *from, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *to, jint index);

__attribute__((unused)) static jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *insertedNode, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *deletedNode);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *replacementNode, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_swapPositionWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *x, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *y, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(id o);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(id key);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkValueWithId_(id value);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyAndValueWithId_withId_(id key, id value);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_modify(OrgApacheCommonsCollections15BidimapTreeBidiMap *self);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_grow(OrgApacheCommonsCollections15BidimapTreeBidiMap *self);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_shrink(OrgApacheCommonsCollections15BidimapTreeBidiMap *self);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *newNode);

__attribute__((unused)) static jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_doEqualsWithId_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id obj, jint type);

__attribute__((unused)) static jint OrgApacheCommonsCollections15BidimapTreeBidiMap_doHashCodeWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, jint type);

__attribute__((unused)) static NSString *OrgApacheCommonsCollections15BidimapTreeBidiMap_doToStringWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, jint type);

@interface OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator () {
 @public
  jint expectedModifications_;
}

@end

@interface OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator () {
 @public
  jint oppositeType_;
}

@end

@interface OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView () {
 @public
  jint oppositeType_;
}

@end

@interface OrgApacheCommonsCollections15BidimapTreeBidiMap_Node () {
 @public
  id<JavaLangComparable> key_;
  id<JavaLangComparable> value_;
  IOSObjectArray *leftNode_;
  IOSObjectArray *rightNode_;
  IOSObjectArray *parentNode_;
  IOSBooleanArray *blackColor_;
  jint hashcodeValue_;
  jboolean calculatedHashCode_;
}

- (id<JavaLangComparable>)getDataWithInt:(jint)index;

- (void)setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                withInt:(jint)index;

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getLeftWithInt:(jint)index;

- (void)setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                 withInt:(jint)index;

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getRightWithInt:(jint)index;

- (void)setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index;

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getParentWithInt:(jint)index;

- (void)swapColorsWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                   withInt:(jint)index;

- (jboolean)isBlackWithInt:(jint)index;

- (jboolean)isRedWithInt:(jint)index;

- (void)setBlackWithInt:(jint)index;

- (void)setRedWithInt:(jint)index;

- (void)copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node, key_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node, value_, id)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node, leftNode_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node, rightNode_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node, parentNode_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node, blackColor_, IOSBooleanArray *)

__attribute__((unused)) static id<JavaLangComparable> OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_swapColorsWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

__attribute__((unused)) static jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isBlackWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isRedWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setBlackWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRedWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index);

__attribute__((unused)) static void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index);

@interface OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse () {
 @public
  OrgApacheCommonsCollections15BidimapTreeBidiMap *main_;
  id<JavaUtilSet> keySet__;
  id<JavaUtilSet> valuesSet_;
  id<JavaUtilSet> entrySet__;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse, main_, OrgApacheCommonsCollections15BidimapTreeBidiMap *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse, keySet__, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse, valuesSet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse, entrySet__, id<JavaUtilSet>)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsCollections15BidimapTreeBidiMap)

@implementation OrgApacheCommonsCollections15BidimapTreeBidiMap

- (instancetype)init {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_init(self);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initWithJavaUtilMap_(self, map);
  return self;
}

- (jint)size {
  return nodeCount_;
}

- (jboolean)isEmpty {
  return nodeCount_ == 0;
}

- (jboolean)containsKeyWithId:(id)key {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(key);
  return (OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, (id<JavaLangComparable>) check_protocol_cast(key, @protocol(JavaLangComparable)), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY) != nil);
}

- (jboolean)containsValueWithId:(id)value {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkValueWithId_(value);
  return (OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, (id<JavaLangComparable>) check_protocol_cast(value, @protocol(JavaLangComparable)), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE) != nil);
}

- (id)getWithId:(id)key {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetValueWithId_(self, key);
}

- (id)putWithId:(id<JavaLangComparable>)key
         withId:(id<JavaLangComparable>)value {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByKeyWithJavaLangComparable_withJavaLangComparable_(self, key, value);
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
    [self putWithId:(id<JavaLangComparable>) check_protocol_cast([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], @protocol(JavaLangComparable)) withId:(id<JavaLangComparable>) check_protocol_cast([entry_ getValue], @protocol(JavaLangComparable))];
  }
}

- (id)removeWithId:(id)key {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByKeyWithJavaLangComparable_(self, (id<JavaLangComparable>) check_protocol_cast(key, @protocol(JavaLangComparable)));
}

- (void)clear {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_modify(self);
  nodeCount_ = 0;
  IOSObjectArray_Set(nil_chk(rootNode_), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY, nil);
  IOSObjectArray_Set(rootNode_, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE, nil);
}

- (id)getKeyWithId:(id)value {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetKeyWithJavaLangComparable_(self, (id<JavaLangComparable>) check_protocol_cast(value, @protocol(JavaLangComparable)));
}

- (id)removeValueWithId:(id)value {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByValueWithJavaLangComparable_(self, (id<JavaLangComparable>) check_protocol_cast(value, @protocol(JavaLangComparable)));
}

- (id)firstKey {
  if (nodeCount_ == 0) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(@"Map is empty") autorelease];
  }
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(IOSObjectArray_Get(nil_chk(rootNode_), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY))) getKey];
}

- (id)lastKey {
  if (nodeCount_ == 0) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(@"Map is empty") autorelease];
  }
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(IOSObjectArray_Get(nil_chk(rootNode_), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY))) getKey];
}

- (id)nextKeyWithId:(id<JavaLangComparable>)key {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, key, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
  return (node == nil ? nil : [node getKey]);
}

- (id)previousKeyWithId:(id<JavaLangComparable>)key {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, key, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
  return (node == nil ? nil : [node getKey]);
}

- (id<JavaUtilSet>)keySet {
  if (keySet__ == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_setAndConsume_keySet__(self, new_OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY));
  }
  return keySet__;
}

- (id<JavaUtilSet>)values {
  if (valuesSet_ == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_setAndConsume_valuesSet_(self, new_OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE));
  }
  return valuesSet_;
}

- (id<JavaUtilSet>)entrySet {
  if (entrySet__ == nil) {
    return [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY, OrgApacheCommonsCollections15BidimapTreeBidiMap_MAPENTRY) autorelease];
  }
  return entrySet__;
}

- (id<OrgApacheCommonsCollections15MapIterator>)mapIterator {
  if ([self isEmpty]) {
    return OrgApacheCommonsCollections15IteratorsEmptyOrderedMapIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY) autorelease];
}

- (id<OrgApacheCommonsCollections15OrderedMapIterator>)orderedMapIterator {
  if ([self isEmpty]) {
    return OrgApacheCommonsCollections15IteratorsEmptyOrderedMapIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY) autorelease];
}

- (id<OrgApacheCommonsCollections15BidiMap>)inverseBidiMap {
  return [self inverseOrderedBidiMap];
}

- (id<OrgApacheCommonsCollections15OrderedBidiMap>)inverseOrderedBidiMap {
  if (inverse_ == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_setAndConsume_inverse_(self, new_OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_(self));
  }
  return inverse_;
}

- (jboolean)isEqual:(id)obj {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doEqualsWithId_withInt_(self, obj, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
}

- (NSUInteger)hash {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doHashCodeWithInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
}

- (NSString *)description {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doToStringWithInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
}

- (id)doGetKeyWithJavaLangComparable:(id<JavaLangComparable>)value {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetKeyWithJavaLangComparable_(self, value);
}

- (id)doGetValueWithId:(id)key {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetValueWithId_(self, key);
}

- (id)doPutByKeyWithJavaLangComparable:(id<JavaLangComparable>)key
                withJavaLangComparable:(id<JavaLangComparable>)value {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByKeyWithJavaLangComparable_withJavaLangComparable_(self, key, value);
}

- (id)doPutByValueWithJavaLangComparable:(id<JavaLangComparable>)key
                  withJavaLangComparable:(id<JavaLangComparable>)value {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByValueWithJavaLangComparable_withJavaLangComparable_(self, key, value);
}

- (void)doPutWithJavaLangComparable:(id<JavaLangComparable>)key
             withJavaLangComparable:(id<JavaLangComparable>)value {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutWithJavaLangComparable_withJavaLangComparable_(self, key, value);
}

- (id)doRemoveByKeyWithJavaLangComparable:(id<JavaLangComparable>)key {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByKeyWithJavaLangComparable_(self, key);
}

- (id)doRemoveByValueWithJavaLangComparable:(id<JavaLangComparable>)value {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByValueWithJavaLangComparable_(self, value);
}

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)lookupWithJavaLangComparable:(id<JavaLangComparable>)data
                                                                               withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, data, index);
}

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                      withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                      withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

+ (jint)oppositeIndexWithInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_oppositeIndexWithInt_(index);
}

+ (jint)compareWithJavaLangComparable:(id<JavaLangComparable>)o1
               withJavaLangComparable:(id<JavaLangComparable>)o2 {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_compareWithJavaLangComparable_withJavaLangComparable_(o1, o2);
}

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                    withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                       withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (void)copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)from
                 withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)to
                                                                  withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(from, to, index);
}

+ (jboolean)isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (jboolean)isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                    withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (void)makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (void)makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                         withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                    withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                        withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                                                                       withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (jboolean)isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                        withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

+ (jboolean)isRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                         withInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_isRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index);
}

- (void)rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                   withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (void)rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                    withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (void)doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)insertedNode
                                                                         withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, insertedNode, index);
}

- (void)doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)deletedNode {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(self, deletedNode);
}

- (void)doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)replacementNode
                                                                              withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, replacementNode, index);
}

- (void)swapPositionWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)x
                    withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)y
                                                                     withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_swapPositionWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, x, y, index);
}

+ (void)checkNonNullComparableWithId:(id)o {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(o);
}

+ (void)checkKeyWithId:(id)key {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(key);
}

+ (void)checkValueWithId:(id)value {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkValueWithId_(value);
}

+ (void)checkKeyAndValueWithId:(id)key
                        withId:(id)value {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyAndValueWithId_withId_(key, value);
}

- (void)modify {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_modify(self);
}

- (void)grow {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_grow(self);
}

- (void)shrink {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_shrink(self);
}

- (void)insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)newNode {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(self, newNode);
}

- (jboolean)doEqualsWithId:(id)obj
                   withInt:(jint)type {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doEqualsWithId_withInt_(self, obj, type);
}

- (jint)doHashCodeWithInt:(jint)type {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doHashCodeWithInt_(self, type);
}

- (NSString *)doToStringWithInt:(jint)type {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doToStringWithInt_(self, type);
}

- (void)dealloc {
  RELEASE_(rootNode_);
  RELEASE_(keySet__);
  RELEASE_(valuesSet_);
  RELEASE_(entrySet__);
  RELEASE_(inverse_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsCollections15BidimapTreeBidiMap class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsCollections15BidimapTreeBidiMap_dataName_, nil, [IOSObjectArray newArrayWithObjects:(id[]){ @"key", @"value" } count:2 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsCollections15BidimapTreeBidiMap)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TreeBidiMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:", "TreeBidiMap", NULL, 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "getWithId:", "get", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "putWithId:withId:", "put", "TV;", 0x1, NULL, "(TK;TV;)TV;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "getKeyWithId:", "getKey", "TK;", 0x1, NULL, "(Ljava/lang/Object;)TK;" },
    { "removeValueWithId:", "removeValue", "TK;", 0x1, NULL, "(Ljava/lang/Object;)TK;" },
    { "firstKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "lastKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "nextKeyWithId:", "nextKey", "TK;", 0x1, NULL, "(TK;)TK;" },
    { "previousKeyWithId:", "previousKey", "TK;", 0x1, NULL, "(TK;)TK;" },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "values", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "mapIterator", NULL, "Lorg.apache.commons.collections15.MapIterator;", 0x1, NULL, NULL },
    { "orderedMapIterator", NULL, "Lorg.apache.commons.collections15.OrderedMapIterator;", 0x1, NULL, NULL },
    { "inverseBidiMap", NULL, "Lorg.apache.commons.collections15.BidiMap;", 0x1, NULL, NULL },
    { "inverseOrderedBidiMap", NULL, "Lorg.apache.commons.collections15.OrderedBidiMap;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "doGetKeyWithJavaLangComparable:", "doGetKey", "TK;", 0x2, NULL, "(Ljava/lang/Comparable;)TK;" },
    { "doGetValueWithId:", "doGetValue", "TV;", 0x2, NULL, "(Ljava/lang/Object;)TV;" },
    { "doPutByKeyWithJavaLangComparable:withJavaLangComparable:", "doPutByKey", "TV;", 0x2, NULL, "(TK;TV;)TV;" },
    { "doPutByValueWithJavaLangComparable:withJavaLangComparable:", "doPutByValue", "TK;", 0x2, NULL, "(TK;TV;)TK;" },
    { "doPutWithJavaLangComparable:withJavaLangComparable:", "doPut", "V", 0x2, NULL, "(TK;TV;)V" },
    { "doRemoveByKeyWithJavaLangComparable:", "doRemoveByKey", "TV;", 0x2, NULL, "(TK;)TV;" },
    { "doRemoveByValueWithJavaLangComparable:", "doRemoveByValue", "TK;", 0x2, NULL, "(Ljava/lang/Comparable;)TK;" },
    { "lookupWithJavaLangComparable:withInt:", "lookup", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0x2, NULL, NULL },
    { "nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "nextGreater", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0x2, NULL, NULL },
    { "nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "nextSmaller", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0x2, NULL, NULL },
    { "oppositeIndexWithInt:", "oppositeIndex", "I", 0xa, NULL, NULL },
    { "compareWithJavaLangComparable:withJavaLangComparable:", "compare", "I", 0xa, NULL, NULL },
    { "leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "leastNode", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;" },
    { "greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "greatestNode", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;" },
    { "copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "copyColor", "V", 0xa, NULL, NULL },
    { "isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "isRed", "Z", 0xa, NULL, NULL },
    { "isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "isBlack", "Z", 0xa, NULL, NULL },
    { "makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "makeRed", "V", 0xa, NULL, NULL },
    { "makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "makeBlack", "V", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)V" },
    { "getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "getGrandParent", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;" },
    { "getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "getParent", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;" },
    { "getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "getRightChild", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;" },
    { "getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "getLeftChild", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;" },
    { "isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "isLeftChild", "Z", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Z" },
    { "isRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "isRightChild", "Z", 0xa, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>(Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;I)Z" },
    { "rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "rotateLeft", "V", 0x2, NULL, NULL },
    { "rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "rotateRight", "V", 0x2, NULL, NULL },
    { "doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "doRedBlackInsert", "V", 0x2, NULL, NULL },
    { "doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:", "doRedBlackDelete", "V", 0x2, NULL, NULL },
    { "doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "doRedBlackDeleteFixup", "V", 0x2, NULL, NULL },
    { "swapPositionWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "swapPosition", "V", 0x2, NULL, NULL },
    { "checkNonNullComparableWithId:", "checkNonNullComparable", "V", 0xa, NULL, NULL },
    { "checkKeyWithId:", "checkKey", "V", 0xa, NULL, NULL },
    { "checkValueWithId:", "checkValue", "V", 0xa, NULL, NULL },
    { "checkKeyAndValueWithId:withId:", "checkKeyAndValue", "V", 0xa, NULL, NULL },
    { "modify", NULL, "V", 0x2, NULL, NULL },
    { "grow", NULL, "V", 0x2, NULL, NULL },
    { "shrink", NULL, "V", 0x2, NULL, NULL },
    { "insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:", "insertValue", "V", 0x2, "Ljava.lang.IllegalArgumentException;", NULL },
    { "doEqualsWithId:withInt:", "doEquals", "Z", 0x2, NULL, NULL },
    { "doHashCodeWithInt:", "doHashCode", "I", 0x2, NULL, NULL },
    { "doToStringWithInt:", "doToString", "Ljava.lang.String;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "KEY_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY },
    { "VALUE_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE },
    { "MAPENTRY_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15BidimapTreeBidiMap_MAPENTRY },
    { "INVERSEMAPENTRY_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15BidimapTreeBidiMap_INVERSEMAPENTRY },
    { "SUM_OF_INDICES_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15BidimapTreeBidiMap_SUM_OF_INDICES },
    { "FIRST_INDEX_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15BidimapTreeBidiMap_FIRST_INDEX },
    { "NUMBER_OF_INDICES_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgApacheCommonsCollections15BidimapTreeBidiMap_NUMBER_OF_INDICES },
    { "dataName_", NULL, 0x1a, "[Ljava.lang.String;", &OrgApacheCommonsCollections15BidimapTreeBidiMap_dataName_, NULL,  },
    { "rootNode_", NULL, 0x2, "[Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", NULL, "[Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;",  },
    { "nodeCount_", NULL, 0x2, "I", NULL, NULL,  },
    { "modifications_", NULL, 0x2, "I", NULL, NULL,  },
    { "keySet__", "keySet", 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<TK;>;",  },
    { "valuesSet_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<TV;>;",  },
    { "entrySet__", "entrySet", 0x2, "Ljava.util.Set;", NULL, NULL,  },
    { "inverse_", NULL, 0x2, "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Inverse;", NULL, "Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Inverse<TK;TV;>;",  },
  };
  static const char *inner_classes[] = {"Lorg.apache.commons.collections15.bidimap.TreeBidiMap$View;", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$ViewIterator;", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$ViewMapIterator;", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$EntryView;", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Inverse;"};
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapTreeBidiMap = { 2, "TreeBidiMap", "org.apache.commons.collections15.bidimap", NULL, 0x1, 69, methods, 15, fields, 0, NULL, 6, inner_classes, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>Ljava/lang/Object;Lorg/apache/commons/collections15/OrderedBidiMap<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15BidimapTreeBidiMap;
}

@end

void OrgApacheCommonsCollections15BidimapTreeBidiMap_init(OrgApacheCommonsCollections15BidimapTreeBidiMap *self) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_setAndConsume_rootNode_(self, [IOSObjectArray newArrayWithLength:2 type:OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_class_()]);
  self->nodeCount_ = 0;
  self->modifications_ = 0;
  OrgApacheCommonsCollections15BidimapTreeBidiMap_set_inverse_(self, nil);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_init() {
  OrgApacheCommonsCollections15BidimapTreeBidiMap *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_init(self);
  return self;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_initWithJavaUtilMap_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaUtilMap> map) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_setAndConsume_rootNode_(self, [IOSObjectArray newArrayWithLength:2 type:OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_class_()]);
  self->nodeCount_ = 0;
  self->modifications_ = 0;
  OrgApacheCommonsCollections15BidimapTreeBidiMap_set_inverse_(self, nil);
  [self putAllWithJavaUtilMap:map];
}

OrgApacheCommonsCollections15BidimapTreeBidiMap *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initWithJavaUtilMap_(self, map);
  return self;
}

id OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetKeyWithJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(value);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, value, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
  if (node == nil) {
    return nil;
  }
  else {
    return [node getKey];
  }
}

id OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetValueWithId_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id key) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, (id<JavaLangComparable>) check_protocol_cast(key, @protocol(JavaLangComparable)), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
  if (node == nil) {
    return nil;
  }
  else {
    return [node getValue];
  }
}

id OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByKeyWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key, id<JavaLangComparable> value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyAndValueWithId_withId_(key, value);
  id<JavaLangComparable> prev = OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetValueWithId_(self, key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutWithJavaLangComparable_withJavaLangComparable_(self, key, value);
  return prev;
}

id OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByValueWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key, id<JavaLangComparable> value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyAndValueWithId_withId_(key, value);
  id<JavaLangComparable> prev = OrgApacheCommonsCollections15BidimapTreeBidiMap_doGetKeyWithJavaLangComparable_(self, value);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutWithJavaLangComparable_withJavaLangComparable_(self, key, value);
  return prev;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key, id<JavaLangComparable> value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByKeyWithJavaLangComparable_(self, key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByValueWithJavaLangComparable_(self, value);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = IOSObjectArray_Get(nil_chk(self->rootNode_), OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
  if (node == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *root = [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_initWithJavaLangComparable_withJavaLangComparable_(key, value) autorelease];
    IOSObjectArray_Set(self->rootNode_, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY, root);
    IOSObjectArray_Set(self->rootNode_, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE, root);
    OrgApacheCommonsCollections15BidimapTreeBidiMap_grow(self);
  }
  else {
    while (YES) {
      jint cmp = OrgApacheCommonsCollections15BidimapTreeBidiMap_compareWithJavaLangComparable_withJavaLangComparable_(key, [node getKey]);
      if (cmp == 0) {
        @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"Cannot store a duplicate key (\"", key, @"\") in this Map")) autorelease];
      }
      else if (cmp < 0) {
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY) != nil) {
          node = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
        }
        else {
          OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *newNode = [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_initWithJavaLangComparable_withJavaLangComparable_(key, value) autorelease];
          OrgApacheCommonsCollections15BidimapTreeBidiMap_insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(self, newNode);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(newNode, node, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_grow(self);
          break;
        }
      }
      else {
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY) != nil) {
          node = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
        }
        else {
          OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *newNode = [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_initWithJavaLangComparable_withJavaLangComparable_(key, value) autorelease];
          OrgApacheCommonsCollections15BidimapTreeBidiMap_insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(self, newNode);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(newNode, node, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_grow(self);
          break;
        }
      }
    }
  }
}

id OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByKeyWithJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> key) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, key, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY);
  id<JavaLangComparable> rval = nil;
  if (node != nil) {
    rval = [node getValue];
    OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(self, node);
  }
  return rval;
}

id OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByValueWithJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(self, value, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
  id<JavaLangComparable> rval = nil;
  if (node != nil) {
    rval = [node getKey];
    OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(self, node);
  }
  return rval;
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id<JavaLangComparable> data, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *rval = nil;
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = IOSObjectArray_Get(nil_chk(self->rootNode_), index);
  while (node != nil) {
    jint cmp = OrgApacheCommonsCollections15BidimapTreeBidiMap_compareWithJavaLangComparable_withJavaLangComparable_(data, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(nil_chk(node), index));
    if (cmp == 0) {
      rval = node;
      break;
    }
    else {
      node = (cmp < 0) ? OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, index) : OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, index);
    }
  }
  return rval;
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *rval = nil;
  if (node == nil) {
  }
  else if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, index) != nil) {
    rval = OrgApacheCommonsCollections15BidimapTreeBidiMap_leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, index), index);
  }
  else {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *parent = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index);
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *child = node;
    while ((parent != nil) && (child == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(parent, index))) {
      child = parent;
      parent = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(nil_chk(parent), index);
    }
    rval = parent;
  }
  return rval;
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *rval = nil;
  if (node == nil) {
  }
  else if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, index) != nil) {
    rval = OrgApacheCommonsCollections15BidimapTreeBidiMap_greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, index), index);
  }
  else {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *parent = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index);
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *child = node;
    while ((parent != nil) && (child == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(parent, index))) {
      child = parent;
      parent = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(nil_chk(parent), index);
    }
    rval = parent;
  }
  return rval;
}

jint OrgApacheCommonsCollections15BidimapTreeBidiMap_oppositeIndexWithInt_(jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_SUM_OF_INDICES - index;
}

jint OrgApacheCommonsCollections15BidimapTreeBidiMap_compareWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> o1, id<JavaLangComparable> o2) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return [((id<JavaLangComparable>) nil_chk(o1)) compareToWithId:o2];
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *rval = node;
  if (rval != nil) {
    while (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(rval, index) != nil) {
      rval = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(rval, index);
    }
  }
  return rval;
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *rval = node;
  if (rval != nil) {
    while (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(rval, index) != nil) {
      rval = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(rval, index);
    }
  }
  return rval;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *from, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *to, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  if (to != nil) {
    if (from == nil) {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setBlackWithInt_(to, index);
    }
    else {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(to, from, index);
    }
  }
}

jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return ((node == nil) ? NO : OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isRedWithInt_(node, index));
}

jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return ((node == nil) ? YES : OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isBlackWithInt_(node, index));
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  if (node != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRedWithInt_(node, index);
  }
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  if (node != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setBlackWithInt_(node, index);
  }
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, index), index);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return ((node == nil) ? nil : OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index));
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return (node == nil) ? nil : OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, index);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return (node == nil) ? nil : OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, index);
}

jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return (node == nil) ? YES : ((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index) == nil) ? NO : (node == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), index)));
}

jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_isRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  return (node == nil) ? YES : ((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index) == nil) ? NO : (node == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), index)));
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *rightChild = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(nil_chk(node), index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(rightChild), index), index);
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(rightChild, index) != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(rightChild, index)), node, index);
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(rightChild, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index), index);
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index) == nil) {
    IOSObjectArray_Set(nil_chk(self->rootNode_), index, rightChild);
  }
  else if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), index) == node) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), rightChild, index);
  }
  else {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), rightChild, index);
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(rightChild, node, index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, rightChild, index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *leftChild = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(node), index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(nil_chk(leftChild), index), index);
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(leftChild, index) != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(leftChild, index)), node, index);
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(leftChild, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index), index);
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index) == nil) {
    IOSObjectArray_Set(nil_chk(self->rootNode_), index, leftChild);
  }
  else if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), index) == node) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), leftChild, index);
  }
  else {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(node, index)), leftChild, index);
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(leftChild, node, index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, leftChild, index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *insertedNode, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *currentNode = insertedNode;
  OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
  while ((currentNode != nil) && (currentNode != IOSObjectArray_Get(nil_chk(self->rootNode_), index)) && (OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(currentNode, index), index))) {
    if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index)) {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *y = OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        currentNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
      }
      else {
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index)) {
          currentNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, currentNode, index);
        }
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index) != nil) {
          OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        }
      }
    }
    else {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *y = OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        currentNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
      }
      else {
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index)) {
          currentNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, currentNode, index);
        }
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index) != nil) {
          OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_getGrandParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        }
      }
    }
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(IOSObjectArray_Get(nil_chk(self->rootNode_), index), index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *deletedNode) {
  for (jint index = OrgApacheCommonsCollections15BidimapTreeBidiMap_FIRST_INDEX; index < OrgApacheCommonsCollections15BidimapTreeBidiMap_NUMBER_OF_INDICES; index++) {
    if ((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(deletedNode), index) != nil) && (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(deletedNode, index) != nil)) {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_swapPositionWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, deletedNode, index), deletedNode, index);
    }
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *replacement = ((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(deletedNode, index) != nil) ? OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(deletedNode, index) : OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(deletedNode, index));
    if (replacement != nil) {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(replacement, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index), index);
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index) == nil) {
        IOSObjectArray_Set(nil_chk(self->rootNode_), index, replacement);
      }
      else if (deletedNode == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index)), index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index)), replacement, index);
      }
      else {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index)), replacement, index);
      }
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(deletedNode, nil, index);
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(deletedNode, nil, index);
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(deletedNode, nil, index);
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(deletedNode, index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, replacement, index);
      }
    }
    else {
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index) == nil) {
        IOSObjectArray_Set(nil_chk(self->rootNode_), index, nil);
      }
      else {
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(deletedNode, index)) {
          OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, deletedNode, index);
        }
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index) != nil) {
          if (deletedNode == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index)), index)) {
            OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index)), nil, index);
          }
          else {
            OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(deletedNode, index)), nil, index);
          }
          OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(deletedNode, nil, index);
        }
      }
    }
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_shrink(self);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteFixupWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *replacementNode, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *currentNode = replacementNode;
  while ((currentNode != IOSObjectArray_Get(nil_chk(self->rootNode_), index)) && (OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index))) {
    if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index)) {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *siblingNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        siblingNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
      }
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index) && OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index);
        currentNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
      }
      else {
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index)) {
          OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, siblingNode, index);
          siblingNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        }
        OrgApacheCommonsCollections15BidimapTreeBidiMap_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), siblingNode, index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        currentNode = IOSObjectArray_Get(self->rootNode_, index);
      }
    }
    else {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *siblingNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        siblingNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
      }
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index) && OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index)) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index);
        currentNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
      }
      else {
        if (OrgApacheCommonsCollections15BidimapTreeBidiMap_isBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index)) {
          OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getRightChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_makeRedWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index);
          OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, siblingNode, index);
          siblingNode = OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        }
        OrgApacheCommonsCollections15BidimapTreeBidiMap_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), siblingNode, index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_getLeftChildWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(siblingNode, index), index);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_rotateRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_getParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index), index);
        currentNode = IOSObjectArray_Get(self->rootNode_, index);
      }
    }
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_makeBlackWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(currentNode, index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_swapPositionWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *x, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *y, jint index) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *xFormerParent = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(nil_chk(x), index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *xFormerLeftChild = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(x, index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *xFormerRightChild = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(x, index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *yFormerParent = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(nil_chk(y), index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *yFormerLeftChild = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(y, index);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *yFormerRightChild = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(y, index);
  jboolean xWasLeftChild = (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(x, index) != nil) && (x == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(x, index)), index));
  jboolean yWasLeftChild = (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(y, index) != nil) && (y == OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(y, index)), index));
  if (x == yFormerParent) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, y, index);
    if (yWasLeftChild) {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, x, index);
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, xFormerRightChild, index);
    }
    else {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, x, index);
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, xFormerLeftChild, index);
    }
  }
  else {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, yFormerParent, index);
    if (yFormerParent != nil) {
      if (yWasLeftChild) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(yFormerParent, x, index);
      }
      else {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(yFormerParent, x, index);
      }
    }
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, xFormerLeftChild, index);
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, xFormerRightChild, index);
  }
  if (y == xFormerParent) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, x, index);
    if (xWasLeftChild) {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, y, index);
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, yFormerRightChild, index);
    }
    else {
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, y, index);
      OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, yFormerLeftChild, index);
    }
  }
  else {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(y, xFormerParent, index);
    if (xFormerParent != nil) {
      if (xWasLeftChild) {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(xFormerParent, y, index);
      }
      else {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(xFormerParent, y, index);
      }
    }
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, yFormerLeftChild, index);
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, yFormerRightChild, index);
  }
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(x, index) != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(x, index)), x, index);
  }
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(x, index) != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(x, index)), x, index);
  }
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(y, index) != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(y, index)), y, index);
  }
  if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(y, index) != nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(y, index)), y, index);
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_swapColorsWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(x, y, index);
  if (IOSObjectArray_Get(nil_chk(self->rootNode_), index) == x) {
    IOSObjectArray_Set(self->rootNode_, index, y);
  }
  else if (IOSObjectArray_Get(self->rootNode_, index) == y) {
    IOSObjectArray_Set(self->rootNode_, index, x);
  }
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(id o) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  if (o == nil) {
    @throw [new_JavaLangNullPointerException_initWithNSString_(@"Cannot be null") autorelease];
  }
  if (!([JavaLangComparable_class_() isInstance:o])) {
    @throw [new_JavaLangClassCastException_initWithNSString_(@"Must be Comparable") autorelease];
  }
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(id key) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(key);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkValueWithId_(id value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(value);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyAndValueWithId_withId_(id key, id value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_initialize();
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkValueWithId_(value);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_modify(OrgApacheCommonsCollections15BidimapTreeBidiMap *self) {
  self->modifications_++;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_grow(OrgApacheCommonsCollections15BidimapTreeBidiMap *self) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_modify(self);
  self->nodeCount_++;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_shrink(OrgApacheCommonsCollections15BidimapTreeBidiMap *self) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_modify(self);
  self->nodeCount_--;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_insertValueWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *newNode) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = IOSObjectArray_Get(nil_chk(self->rootNode_), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
  while (YES) {
    jint cmp = OrgApacheCommonsCollections15BidimapTreeBidiMap_compareWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(nil_chk(newNode), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE), OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(nil_chk(node), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE));
    if (cmp == 0) {
      @throw [new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"Cannot store a duplicate value (\"", OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE), @"\") in this Map")) autorelease];
    }
    else if (cmp < 0) {
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE) != nil) {
        node = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
      }
      else {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(newNode, node, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
        break;
      }
    }
    else {
      if (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE) != nil) {
        node = OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(node, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
      }
      else {
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(node, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(newNode, node, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
        OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackInsertWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, newNode, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
        break;
      }
    }
  }
}

jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_doEqualsWithId_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, id obj, jint type) {
  if (obj == self) {
    return YES;
  }
  if ([JavaUtilMap_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap> other = (id<JavaUtilMap>) check_protocol_cast(obj, @protocol(JavaUtilMap));
  if ([((id<JavaUtilMap>) nil_chk(other)) size] != [self size]) {
    return NO;
  }
  if (self->nodeCount_ > 0) {
    @try {
      for (id<OrgApacheCommonsCollections15MapIterator> it = [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(self, type) autorelease]; [it hasNext]; ) {
        id key = [it next];
        id value = [it getValue];
        if ([nil_chk(value) isEqual:[other getWithId:key]] == NO) {
          return NO;
        }
      }
    }
    @catch (JavaLangClassCastException *ex) {
      return NO;
    }
    @catch (JavaLangNullPointerException *ex) {
      return NO;
    }
  }
  return YES;
}

jint OrgApacheCommonsCollections15BidimapTreeBidiMap_doHashCodeWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, jint type) {
  jint total = 0;
  if (self->nodeCount_ > 0) {
    for (id<OrgApacheCommonsCollections15MapIterator> it = [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(self, type) autorelease]; [it hasNext]; ) {
      id key = [it next];
      id value = [it getValue];
      total += (((jint) [nil_chk(key) hash]) ^ ((jint) [nil_chk(value) hash]));
    }
  }
  return total;
}

NSString *OrgApacheCommonsCollections15BidimapTreeBidiMap_doToStringWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *self, jint type) {
  if (self->nodeCount_ == 0) {
    return @"{}";
  }
  JavaLangStringBuffer *buf = [new_JavaLangStringBuffer_initWithInt_(self->nodeCount_ * 32) autorelease];
  [buf appendWithChar:'{'];
  id<OrgApacheCommonsCollections15MapIterator> it = [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(self, type) autorelease];
  jboolean hasNext = [it hasNext];
  while (hasNext) {
    id key = [it next];
    id value = [it getValue];
    [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithId:key == self ? @"(this Map)" : key])) appendWithChar:'='])) appendWithId:value == self ? @"(this Map)" : value];
    hasNext = [it hasNext];
    if (hasNext) {
      [buf appendWithNSString:@", "];
    }
  }
  [buf appendWithChar:'}'];
  return [buf description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapTreeBidiMap)

@implementation OrgApacheCommonsCollections15BidimapTreeBidiMap_View

- (instancetype)initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:(OrgApacheCommonsCollections15BidimapTreeBidiMap *)main
                                                                withInt:(jint)orderType
                                                                withInt:(jint)dataType {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, dataType);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(main_, orderType_, dataType_) autorelease];
}

- (jint)size {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) size];
}

- (jboolean)containsWithId:(id)obj {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkNonNullComparableWithId_(obj);
  return (OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(nil_chk(main_), (id<JavaLangComparable>) check_protocol_cast(obj, @protocol(JavaLangComparable)), dataType_) != nil);
}

- (jboolean)removeWithId:(id)obj {
  if (dataType_ == OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY) {
    return OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByKeyWithJavaLangComparable_(nil_chk(main_), (id<JavaLangComparable>) check_protocol_cast(obj, @protocol(JavaLangComparable))) != nil;
  }
  else {
    return OrgApacheCommonsCollections15BidimapTreeBidiMap_doRemoveByValueWithJavaLangComparable_(nil_chk(main_), (id<JavaLangComparable>) check_protocol_cast(obj, @protocol(JavaLangComparable))) != nil;
  }
}

- (void)clear {
  [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) clear];
}

- (void)dealloc {
  RELEASE_(main_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:withInt:withInt:", "View", NULL, 0x0, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "main_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.TreeBidiMap;", NULL, NULL,  },
    { "orderType_", NULL, 0x14, "I", NULL, NULL,  },
    { "dataType_", NULL, 0x14, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapTreeBidiMap_View = { 2, "View", "org.apache.commons.collections15.bidimap", "TreeBidiMap", 0x8, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>Ljava/util/AbstractSet;" };
  return &_OrgApacheCommonsCollections15BidimapTreeBidiMap_View;
}

@end

void OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_View *self, OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType, jint dataType) {
  JavaUtilAbstractSet_init(self);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_View_set_main_(self, main);
  self->orderType_ = orderType;
  self->dataType_ = dataType;
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_View *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType, jint dataType) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_View *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap_View alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, dataType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapTreeBidiMap_View)

@implementation OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator

- (instancetype)initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:(OrgApacheCommonsCollections15BidimapTreeBidiMap *)main
                                                                withInt:(jint)orderType
                                                                withInt:(jint)dataType {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, dataType);
  return self;
}

- (jboolean)hasNext {
  return (nextNode_ != nil);
}

- (id)next {
  if (nextNode_ == nil) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  if (((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_))->modifications_ != expectedModifications_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_lastReturnedNode_(self, nextNode_);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_previousNode_(self, nextNode_);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_nextNode_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(main_, nextNode_, orderType_));
  return [self doGetData];
}

- (jboolean)hasPrevious {
  return (previousNode_ != nil);
}

- (id)previous {
  if (previousNode_ == nil) {
    @throw [new_JavaUtilNoSuchElementException_init() autorelease];
  }
  if (((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_))->modifications_ != expectedModifications_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_nextNode_(self, lastReturnedNode_);
  if (nextNode_ == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_nextNode_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(main_, previousNode_, orderType_));
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_lastReturnedNode_(self, previousNode_);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_previousNode_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(main_, previousNode_, orderType_));
  return [self doGetData];
}

- (id)doGetData {
  switch (dataType_) {
    case OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY:
    return [((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(lastReturnedNode_)) getKey];
    case OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE:
    return [((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(lastReturnedNode_)) getValue];
    case OrgApacheCommonsCollections15BidimapTreeBidiMap_MAPENTRY:
    return lastReturnedNode_;
    case OrgApacheCommonsCollections15BidimapTreeBidiMap_INVERSEMAPENTRY:
    return [new_OrgApacheCommonsCollections15KeyvalueUnmodifiableMapEntry_initWithId_withId_([((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(lastReturnedNode_)) getValue], [lastReturnedNode_ getKey]) autorelease];
  }
  return nil;
}

- (void)remove {
  if (lastReturnedNode_ == nil) {
    @throw [new_JavaLangIllegalStateException_init() autorelease];
  }
  if (((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_))->modifications_ != expectedModifications_) {
    @throw [new_JavaUtilConcurrentModificationException_init() autorelease];
  }
  OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(main_, lastReturnedNode_);
  expectedModifications_++;
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_lastReturnedNode_(self, nil);
  if (nextNode_ == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_previousNode_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(IOSObjectArray_Get(nil_chk(main_->rootNode_), orderType_), orderType_));
  }
  else {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_previousNode_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(main_, nextNode_, orderType_));
  }
}

- (void)dealloc {
  RELEASE_(main_);
  RELEASE_(lastReturnedNode_);
  RELEASE_(nextNode_);
  RELEASE_(previousNode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:withInt:withInt:", "ViewIterator", NULL, 0x0, NULL, NULL },
    { "hasNext", NULL, "Z", 0x11, NULL, NULL },
    { "next", NULL, "Ljava.lang.Object;", 0x11, NULL, NULL },
    { "hasPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "previous", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "doGetData", NULL, "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "remove", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "main_", NULL, 0x14, "Lorg.apache.commons.collections15.bidimap.TreeBidiMap;", NULL, NULL,  },
    { "orderType_", NULL, 0x14, "I", NULL, NULL,  },
    { "dataType_", NULL, 0x14, "I", NULL, NULL,  },
    { "lastReturnedNode_", NULL, 0x4, "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", NULL, NULL,  },
    { "nextNode_", NULL, 0x4, "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", NULL, NULL,  },
    { "previousNode_", NULL, 0x4, "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", NULL, NULL,  },
    { "expectedModifications_", NULL, 0x2, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator = { 2, "ViewIterator", "org.apache.commons.collections15.bidimap", "TreeBidiMap", 0x8, 7, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator;
}

@end

void OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator *self, OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType, jint dataType) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_main_(self, main);
  self->orderType_ = orderType;
  self->dataType_ = dataType;
  self->expectedModifications_ = ((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main))->modifications_;
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_nextNode_(self, OrgApacheCommonsCollections15BidimapTreeBidiMap_leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(IOSObjectArray_Get(nil_chk(main->rootNode_), orderType), orderType));
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_lastReturnedNode_(self, nil);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_set_previousNode_(self, nil);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType, jint dataType) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, dataType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator)

@implementation OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator

- (instancetype)initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:(OrgApacheCommonsCollections15BidimapTreeBidiMap *)main
                                                                withInt:(jint)orderType {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(self, main, orderType);
  return self;
}

- (id)getKey {
  if (lastReturnedNode_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator getKey() can only be called after next() and before remove()") autorelease];
  }
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(nil_chk(lastReturnedNode_), dataType_);
}

- (id)getValue {
  if (lastReturnedNode_ == nil) {
    @throw [new_JavaLangIllegalStateException_initWithNSString_(@"Iterator getValue() can only be called after next() and before remove()") autorelease];
  }
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(nil_chk(lastReturnedNode_), oppositeType_);
}

- (id)setValueWithId:(id)obj {
  @throw [new_JavaLangUnsupportedOperationException_init() autorelease];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:withInt:", "ViewMapIterator", NULL, 0x0, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setValueWithId:", "setValue", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "oppositeType_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator = { 2, "ViewMapIterator", "org.apache.commons.collections15.bidimap", "TreeBidiMap", 0x8, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator;
}

@end

void OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator *self, OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, orderType);
  self->oppositeType_ = OrgApacheCommonsCollections15BidimapTreeBidiMap_oppositeIndexWithInt_(self->dataType_);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(self, main, orderType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator)

@implementation OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView

- (instancetype)initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:(OrgApacheCommonsCollections15BidimapTreeBidiMap *)main
                                                                withInt:(jint)orderType
                                                                withInt:(jint)dataType {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, dataType);
  return self;
}

- (jboolean)containsWithId:(id)obj {
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  id value = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(nil_chk(main_), (id<JavaLangComparable>) check_protocol_cast([entry_ getKey], @protocol(JavaLangComparable)), orderType_);
  return (node != nil && [((id<JavaLangComparable>) nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(node, oppositeType_))) isEqual:value]);
}

- (jboolean)removeWithId:(id)obj {
  if ([JavaUtilMap_Entry_class_() isInstance:obj] == NO) {
    return NO;
  }
  id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  id value = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(nil_chk(main_), (id<JavaLangComparable>) check_protocol_cast([entry_ getKey], @protocol(JavaLangComparable)), orderType_);
  if (node != nil && [((id<JavaLangComparable>) nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(node, oppositeType_))) isEqual:value]) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_doRedBlackDeleteWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_(main_, node);
    return YES;
  }
  return NO;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:withInt:withInt:", "EntryView", NULL, 0x0, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "oppositeType_", NULL, 0x12, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView = { 2, "EntryView", "org.apache.commons.collections15.bidimap", "TreeBidiMap", 0x8, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView;
}

@end

void OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView *self, OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType, jint dataType) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, dataType);
  self->oppositeType_ = OrgApacheCommonsCollections15BidimapTreeBidiMap_oppositeIndexWithInt_(orderType);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap *main, jint orderType, jint dataType) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(self, main, orderType, dataType);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView)

@implementation OrgApacheCommonsCollections15BidimapTreeBidiMap_Node

- (instancetype)initWithJavaLangComparable:(id<JavaLangComparable>)key
                    withJavaLangComparable:(id<JavaLangComparable>)value {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_initWithJavaLangComparable_withJavaLangComparable_(self, key, value);
  return self;
}

- (id<JavaLangComparable>)getDataWithInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(self, index);
}

- (void)setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getLeftWithInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(self, index);
}

- (void)setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                 withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getRightWithInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(self, index);
}

- (void)setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)getParentWithInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(self, index);
}

- (void)swapColorsWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                   withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_swapColorsWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (jboolean)isBlackWithInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isBlackWithInt_(self, index);
}

- (jboolean)isRedWithInt:(jint)index {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isRedWithInt_(self, index);
}

- (void)setBlackWithInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setBlackWithInt_(self, index);
}

- (void)setRedWithInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRedWithInt_(self, index);
}

- (void)copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *)node
                                                                  withInt:(jint)index {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(self, node, index);
}

- (id)getKey {
  return key_;
}

- (id)getValue {
  return value_;
}

- (id)setValueWithId:(id<JavaLangComparable>)ignored {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Map.Entry.setValue is not supported") autorelease];
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if (!([JavaUtilMap_Entry_class_() isInstance:obj])) {
    return NO;
  }
  id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) check_protocol_cast(obj, @protocol(JavaUtilMap_Entry));
  return [((id<JavaLangComparable>) nil_chk(key_)) isEqual:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]] && [((id<JavaLangComparable>) nil_chk(value_)) isEqual:[e getValue]];
}

- (NSUInteger)hash {
  if (!calculatedHashCode_) {
    hashcodeValue_ = ((jint) [((id<JavaLangComparable>) nil_chk(key_)) hash]) ^ ((jint) [((id<JavaLangComparable>) nil_chk(value_)) hash]);
    calculatedHashCode_ = YES;
  }
  return hashcodeValue_;
}

- (void)dealloc {
  RELEASE_(key_);
  RELEASE_(value_);
  RELEASE_(leftNode_);
  RELEASE_(rightNode_);
  RELEASE_(parentNode_);
  RELEASE_(blackColor_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangComparable:withJavaLangComparable:", "Node", NULL, 0x0, NULL, "(TK;TV;)V" },
    { "getDataWithInt:", "getData", "Ljava.lang.Comparable;", 0x2, NULL, NULL },
    { "setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "setLeft", "V", 0x2, NULL, NULL },
    { "getLeftWithInt:", "getLeft", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0x2, NULL, NULL },
    { "setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "setRight", "V", 0x2, NULL, NULL },
    { "getRightWithInt:", "getRight", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0x2, NULL, NULL },
    { "setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "setParent", "V", 0x2, NULL, NULL },
    { "getParentWithInt:", "getParent", "Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", 0x2, NULL, NULL },
    { "swapColorsWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "swapColors", "V", 0x2, NULL, NULL },
    { "isBlackWithInt:", "isBlack", "Z", 0x2, NULL, NULL },
    { "isRedWithInt:", "isRed", "Z", 0x2, NULL, NULL },
    { "setBlackWithInt:", "setBlack", "V", 0x2, NULL, NULL },
    { "setRedWithInt:", "setRed", "V", 0x2, NULL, NULL },
    { "copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node:withInt:", "copyColor", "V", 0x2, NULL, NULL },
    { "getKey", NULL, "TK;", 0x1, NULL, "()TK;" },
    { "getValue", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "setValueWithId:", "setValue", "TV;", 0x1, "Ljava.lang.UnsupportedOperationException;", "(TV;)TV;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x2, "TK;", NULL, "TK;",  },
    { "value_", NULL, 0x2, "TV;", NULL, "TV;",  },
    { "leftNode_", NULL, 0x2, "[Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", NULL, "[Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;",  },
    { "rightNode_", NULL, 0x2, "[Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", NULL, "[Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;",  },
    { "parentNode_", NULL, 0x2, "[Lorg.apache.commons.collections15.bidimap.TreeBidiMap$Node;", NULL, "[Lorg/apache/commons/collections15/bidimap/TreeBidiMap$Node<TK;TV;>;",  },
    { "blackColor_", NULL, 0x2, "[Z", NULL, NULL,  },
    { "hashcodeValue_", NULL, 0x2, "I", NULL, NULL,  },
    { "calculatedHashCode_", NULL, 0x2, "Z", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapTreeBidiMap_Node = { 2, "Node", "org.apache.commons.collections15.bidimap", "TreeBidiMap", 0x8, 19, methods, 8, fields, 0, NULL, 0, NULL, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>Ljava/lang/Object;Ljava/util/Map$Entry<TK;TV;>;Lorg/apache/commons/collections15/KeyValue<TK;TV;>;" };
  return &_OrgApacheCommonsCollections15BidimapTreeBidiMap_Node;
}

@end

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_initWithJavaLangComparable_withJavaLangComparable_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, id<JavaLangComparable> key, id<JavaLangComparable> value) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_set_key_(self, key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_set_value_(self, value);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setAndConsume_leftNode_(self, [IOSObjectArray newArrayWithLength:2 type:OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_class_()]);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setAndConsume_rightNode_(self, [IOSObjectArray newArrayWithLength:2 type:OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_class_()]);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setAndConsume_parentNode_(self, [IOSObjectArray newArrayWithLength:2 type:OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_class_()]);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setAndConsume_blackColor_(self, [IOSBooleanArray newArrayWithBooleans:(jboolean[]){ YES, YES } count:2]);
  self->calculatedHashCode_ = NO;
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_initWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> key, id<JavaLangComparable> value) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap_Node alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_initWithJavaLangComparable_withJavaLangComparable_(self, key, value);
  return self;
}

id<JavaLangComparable> OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getDataWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  if (index == OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY) {
    return self->key_;
  }
  else {
    return self->value_;
  }
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setLeftWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  IOSObjectArray_Set(nil_chk(self->leftNode_), index, node);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getLeftWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  return IOSObjectArray_Get(nil_chk(self->leftNode_), index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRightWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  IOSObjectArray_Set(nil_chk(self->rightNode_), index, node);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getRightWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  return IOSObjectArray_Get(nil_chk(self->rightNode_), index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setParentWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  IOSObjectArray_Set(nil_chk(self->parentNode_), index, node);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_getParentWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  return IOSObjectArray_Get(nil_chk(self->parentNode_), index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_swapColorsWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  *IOSBooleanArray_GetRef(nil_chk(self->blackColor_), index) ^= IOSBooleanArray_Get(((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(node))->blackColor_, index);
  *IOSBooleanArray_GetRef(node->blackColor_, index) ^= IOSBooleanArray_Get(self->blackColor_, index);
  *IOSBooleanArray_GetRef(self->blackColor_, index) ^= IOSBooleanArray_Get(node->blackColor_, index);
}

jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isBlackWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  return IOSBooleanArray_Get(nil_chk(self->blackColor_), index);
}

jboolean OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_isRedWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  return !IOSBooleanArray_Get(nil_chk(self->blackColor_), index);
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setBlackWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  *IOSBooleanArray_GetRef(nil_chk(self->blackColor_), index) = YES;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_setRedWithInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, jint index) {
  *IOSBooleanArray_GetRef(nil_chk(self->blackColor_), index) = NO;
}

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Node_copyColorWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *self, OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node, jint index) {
  *IOSBooleanArray_GetRef(nil_chk(self->blackColor_), index) = IOSBooleanArray_Get(((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(node))->blackColor_, index);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapTreeBidiMap_Node)

@implementation OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse

- (instancetype)initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:(OrgApacheCommonsCollections15BidimapTreeBidiMap *)main {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_(self, main);
  return self;
}

- (jint)size {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) size];
}

- (jboolean)isEmpty {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) isEmpty];
}

- (id)getWithId:(id)key {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) getKeyWithId:key];
}

- (id)getKeyWithId:(id)value {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) getWithId:value];
}

- (jboolean)containsKeyWithId:(id)key {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) containsValueWithId:key];
}

- (jboolean)containsValueWithId:(id)value {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) containsKeyWithId:value];
}

- (id)firstKey {
  if (((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_))->nodeCount_ == 0) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(@"Map is empty") autorelease];
  }
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_leastNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(IOSObjectArray_Get(nil_chk(main_->rootNode_), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE))) getValue];
}

- (id)lastKey {
  if (((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_))->nodeCount_ == 0) {
    @throw [new_JavaUtilNoSuchElementException_initWithNSString_(@"Map is empty") autorelease];
  }
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *) nil_chk(OrgApacheCommonsCollections15BidimapTreeBidiMap_greatestNodeWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(IOSObjectArray_Get(nil_chk(main_->rootNode_), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE))) getValue];
}

- (id)nextKeyWithId:(id<JavaLangComparable>)key {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_nextGreaterWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(main_, OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(nil_chk(main_), key, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
  return (node == nil ? nil : [node getValue]);
}

- (id)previousKeyWithId:(id<JavaLangComparable>)key {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_checkKeyWithId_(key);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Node *node = OrgApacheCommonsCollections15BidimapTreeBidiMap_nextSmallerWithOrgApacheCommonsCollections15BidimapTreeBidiMap_Node_withInt_(main_, OrgApacheCommonsCollections15BidimapTreeBidiMap_lookupWithJavaLangComparable_withInt_(nil_chk(main_), key, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
  return (node == nil ? nil : [node getValue]);
}

- (id)putWithId:(id<JavaLangComparable>)key
         withId:(id<JavaLangComparable>)value {
  return ((id<JavaLangComparable>) OrgApacheCommonsCollections15BidimapTreeBidiMap_doPutByValueWithJavaLangComparable_withJavaLangComparable_(nil_chk(main_), value, key));
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map {
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) check_protocol_cast([it next], @protocol(JavaUtilMap_Entry));
    [self putWithId:(id<JavaLangComparable>) check_protocol_cast([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], @protocol(JavaLangComparable)) withId:(id<JavaLangComparable>) check_protocol_cast([entry_ getValue], @protocol(JavaLangComparable))];
  }
}

- (id)removeWithId:(id)key {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) removeValueWithId:key];
}

- (id)removeValueWithId:(id)value {
  return [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) removeWithId:value];
}

- (void)clear {
  [((OrgApacheCommonsCollections15BidimapTreeBidiMap *) nil_chk(main_)) clear];
}

- (id<JavaUtilSet>)keySet {
  if (keySet__ == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_setAndConsume_keySet__(self, new_OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(main_, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE));
  }
  return keySet__;
}

- (id<JavaUtilSet>)values {
  if (valuesSet_ == nil) {
    OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_setAndConsume_valuesSet_(self, new_OrgApacheCommonsCollections15BidimapTreeBidiMap_View_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(main_, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE, OrgApacheCommonsCollections15BidimapTreeBidiMap_KEY));
  }
  return valuesSet_;
}

- (id<JavaUtilSet>)entrySet {
  if (entrySet__ == nil) {
    return [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_EntryView_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_withInt_(main_, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE, OrgApacheCommonsCollections15BidimapTreeBidiMap_INVERSEMAPENTRY) autorelease];
  }
  return entrySet__;
}

- (id<OrgApacheCommonsCollections15MapIterator>)mapIterator {
  if ([self isEmpty]) {
    return OrgApacheCommonsCollections15IteratorsEmptyOrderedMapIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(main_, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE) autorelease];
}

- (id<OrgApacheCommonsCollections15OrderedMapIterator>)orderedMapIterator {
  if ([self isEmpty]) {
    return OrgApacheCommonsCollections15IteratorsEmptyOrderedMapIterator_get_INSTANCE_();
  }
  return [new_OrgApacheCommonsCollections15BidimapTreeBidiMap_ViewMapIterator_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_withInt_(main_, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE) autorelease];
}

- (id<OrgApacheCommonsCollections15BidiMap>)inverseBidiMap {
  return main_;
}

- (id<OrgApacheCommonsCollections15OrderedBidiMap>)inverseOrderedBidiMap {
  return main_;
}

- (jboolean)isEqual:(id)obj {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doEqualsWithId_withInt_(nil_chk(main_), obj, OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
}

- (NSUInteger)hash {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doHashCodeWithInt_(nil_chk(main_), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
}

- (NSString *)description {
  return OrgApacheCommonsCollections15BidimapTreeBidiMap_doToStringWithInt_(nil_chk(main_), OrgApacheCommonsCollections15BidimapTreeBidiMap_VALUE);
}

- (void)dealloc {
  RELEASE_(main_);
  RELEASE_(keySet__);
  RELEASE_(valuesSet_);
  RELEASE_(entrySet__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgApacheCommonsCollections15BidimapTreeBidiMap:", "Inverse", NULL, 0x0, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "getWithId:", "get", "TK;", 0x1, NULL, "(Ljava/lang/Object;)TK;" },
    { "getKeyWithId:", "getKey", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "firstKey", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "lastKey", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "nextKeyWithId:", "nextKey", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "previousKeyWithId:", "previousKey", "TV;", 0x1, NULL, "(TV;)TV;" },
    { "putWithId:withId:", "put", "TK;", 0x1, NULL, "(TV;TK;)TK;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "TK;", 0x1, NULL, "(Ljava/lang/Object;)TK;" },
    { "removeValueWithId:", "removeValue", "TV;", 0x1, NULL, "(Ljava/lang/Object;)TV;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "values", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, NULL },
    { "mapIterator", NULL, "Lorg.apache.commons.collections15.MapIterator;", 0x1, NULL, NULL },
    { "orderedMapIterator", NULL, "Lorg.apache.commons.collections15.OrderedMapIterator;", 0x1, NULL, NULL },
    { "inverseBidiMap", NULL, "Lorg.apache.commons.collections15.BidiMap;", 0x1, NULL, NULL },
    { "inverseOrderedBidiMap", NULL, "Lorg.apache.commons.collections15.OrderedBidiMap;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "main_", NULL, 0x12, "Lorg.apache.commons.collections15.bidimap.TreeBidiMap;", NULL, "Lorg/apache/commons/collections15/bidimap/TreeBidiMap<TK;TV;>;",  },
    { "keySet__", "keySet", 0x2, "Ljava.util.Set;", NULL, NULL,  },
    { "valuesSet_", NULL, 0x2, "Ljava.util.Set;", NULL, NULL,  },
    { "entrySet__", "entrySet", 0x2, "Ljava.util.Set;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse = { 2, "Inverse", "org.apache.commons.collections15.bidimap", "TreeBidiMap", 0x8, 26, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<K::Ljava/lang/Comparable;V::Ljava/lang/Comparable;>Ljava/lang/Object;Lorg/apache/commons/collections15/OrderedBidiMap<TV;TK;>;" };
  return &_OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse;
}

@end

void OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_(OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse *self, OrgApacheCommonsCollections15BidimapTreeBidiMap *main) {
  NSObject_init(self);
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_set_main_(self, main);
}

OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse *new_OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_(OrgApacheCommonsCollections15BidimapTreeBidiMap *main) {
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse *self = [OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse alloc];
  OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse_initWithOrgApacheCommonsCollections15BidimapTreeBidiMap_(self, main);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCollections15BidimapTreeBidiMap_Inverse)
