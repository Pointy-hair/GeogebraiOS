//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/edu/uci/ics/jung/graph/util/Pair.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/uci/ics/jung/graph/util/Pair.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"

@interface EduUciIcsJungGraphUtilPair () {
 @public
  id first_;
  id second_;
}

@end

J2OBJC_FIELD_SETTER(EduUciIcsJungGraphUtilPair, first_, id)
J2OBJC_FIELD_SETTER(EduUciIcsJungGraphUtilPair, second_, id)

@interface EduUciIcsJungGraphUtilPair_PairIterator : NSObject < JavaUtilIterator > {
 @public
  EduUciIcsJungGraphUtilPair *this$0_;
  jint position_;
}

- (instancetype)initWithEduUciIcsJungGraphUtilPair:(EduUciIcsJungGraphUtilPair *)outer$;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUciIcsJungGraphUtilPair_PairIterator)

J2OBJC_FIELD_SETTER(EduUciIcsJungGraphUtilPair_PairIterator, this$0_, EduUciIcsJungGraphUtilPair *)

__attribute__((unused)) static void EduUciIcsJungGraphUtilPair_PairIterator_initWithEduUciIcsJungGraphUtilPair_(EduUciIcsJungGraphUtilPair_PairIterator *self, EduUciIcsJungGraphUtilPair *outer$);

__attribute__((unused)) static EduUciIcsJungGraphUtilPair_PairIterator *new_EduUciIcsJungGraphUtilPair_PairIterator_initWithEduUciIcsJungGraphUtilPair_(EduUciIcsJungGraphUtilPair *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(EduUciIcsJungGraphUtilPair_PairIterator)

@implementation EduUciIcsJungGraphUtilPair

- (instancetype)initWithId:(id)value1
                    withId:(id)value2 {
  EduUciIcsJungGraphUtilPair_initWithId_withId_(self, value1, value2);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)values {
  EduUciIcsJungGraphUtilPair_initWithJavaUtilCollection_(self, values);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)values {
  EduUciIcsJungGraphUtilPair_initWithNSObjectArray_(self, values);
  return self;
}

- (id)getFirst {
  return first_;
}

- (id)getSecond {
  return second_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) return YES;
  if ([o isKindOfClass:[EduUciIcsJungGraphUtilPair class]]) {
    EduUciIcsJungGraphUtilPair *otherPair = (EduUciIcsJungGraphUtilPair *) check_class_cast(o, [EduUciIcsJungGraphUtilPair class]);
    id otherFirst = [((EduUciIcsJungGraphUtilPair *) nil_chk(otherPair)) getFirst];
    id otherSecond = [otherPair getSecond];
    return (self->first_ == otherFirst || (self->first_ != nil && [self->first_ isEqual:otherFirst])) && (self->second_ == otherSecond || (self->second_ != nil && [self->second_ isEqual:otherSecond]));
  }
  else {
    return NO;
  }
}

- (NSUInteger)hash {
  jint hashCode = 1;
  hashCode = 31 * hashCode + (first_ == nil ? 0 : ((jint) [first_ hash]));
  hashCode = 31 * hashCode + (second_ == nil ? 0 : ((jint) [second_ hash]));
  return hashCode;
}

- (NSString *)description {
  return JreStrcat("C$$$C", '<', [nil_chk(first_) description], @", ", [nil_chk(second_) description], '>');
}

- (jboolean)addWithId:(id)o {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Pairs cannot be mutated") autorelease];
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Pairs cannot be mutated") autorelease];
}

- (void)clear {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Pairs cannot be mutated") autorelease];
}

- (jboolean)containsWithId:(id)o {
  return (first_ == o || [nil_chk(first_) isEqual:o] || second_ == o || [nil_chk(second_) isEqual:o]);
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  if ([((id<JavaUtilCollection>) nil_chk(c)) size] > 2) return NO;
  id<JavaUtilIterator> iter = [c iterator];
  id c_first = [((id<JavaUtilIterator>) nil_chk(iter)) next];
  id c_second = [iter next];
  return [self containsWithId:c_first] && [self containsWithId:c_second];
}

- (jboolean)isEmpty {
  return NO;
}

- (id<JavaUtilIterator>)iterator {
  return [new_EduUciIcsJungGraphUtilPair_PairIterator_initWithEduUciIcsJungGraphUtilPair_(self) autorelease];
}

- (jboolean)removeWithId:(id)o {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Pairs cannot be mutated") autorelease];
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Pairs cannot be mutated") autorelease];
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Pairs cannot be mutated") autorelease];
}

- (jint)size {
  return 2;
}

- (IOSObjectArray *)toArray {
  IOSObjectArray *to_return = [IOSObjectArray arrayWithLength:2 type:NSObject_class_()];
  IOSObjectArray_Set(to_return, 0, first_);
  IOSObjectArray_Set(to_return, 1, second_);
  return to_return;
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a {
  IOSObjectArray *to_return = a;
  if (((IOSObjectArray *) nil_chk(a))->size_ < 2) {
    IOSObjectArray *arr = [IOSObjectArray arrayWithLength:2 type:NSObject_class_()];
    to_return = (IOSObjectArray *) check_class_cast(arr, [IOSObjectArray class]);
  }
  IOSObjectArray_Set(nil_chk(to_return), 0, (id) first_);
  IOSObjectArray_Set(to_return, 1, (id) second_);
  if (to_return->size_ > 2) IOSObjectArray_Set(to_return, 2, nil);
  return to_return;
}

- (void)dealloc {
  RELEASE_(first_);
  RELEASE_(second_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withId:", "Pair", NULL, 0x1, NULL, "(TT;TT;)V" },
    { "initWithJavaUtilCollection:", "Pair", NULL, 0x1, NULL, NULL },
    { "initWithNSObjectArray:", "Pair", NULL, 0x1, NULL, NULL },
    { "getFirst", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "getSecond", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TT;)Z" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<S:Ljava/lang/Object;>([TS;)[TS;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "first_", NULL, 0x2, "TT;", NULL, "TT;",  },
    { "second_", NULL, 0x2, "TT;", NULL, "TT;",  },
  };
  static const char *inner_classes[] = {"Ledu.uci.ics.jung.graph.util.Pair$PairIterator;"};
  static const J2ObjcClassInfo _EduUciIcsJungGraphUtilPair = { 2, "Pair", "edu.uci.ics.jung.graph.util", NULL, 0x11, 21, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Collection<TT;>;Ljava/io/Serializable;" };
  return &_EduUciIcsJungGraphUtilPair;
}

@end

void EduUciIcsJungGraphUtilPair_initWithId_withId_(EduUciIcsJungGraphUtilPair *self, id value1, id value2) {
  NSObject_init(self);
  if (value1 == nil || value2 == nil) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Pair cannot contain null values") autorelease];
  EduUciIcsJungGraphUtilPair_set_first_(self, value1);
  EduUciIcsJungGraphUtilPair_set_second_(self, value2);
}

EduUciIcsJungGraphUtilPair *new_EduUciIcsJungGraphUtilPair_initWithId_withId_(id value1, id value2) {
  EduUciIcsJungGraphUtilPair *self = [EduUciIcsJungGraphUtilPair alloc];
  EduUciIcsJungGraphUtilPair_initWithId_withId_(self, value1, value2);
  return self;
}

void EduUciIcsJungGraphUtilPair_initWithJavaUtilCollection_(EduUciIcsJungGraphUtilPair *self, id<JavaUtilCollection> values) {
  NSObject_init(self);
  if (values == nil) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Input collection cannot be null") autorelease];
  if ([((id<JavaUtilCollection>) nil_chk(values)) size] == 2) {
    if ([values containsWithId:nil]) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Pair cannot contain null values") autorelease];
    id<JavaUtilIterator> iter = [values iterator];
    EduUciIcsJungGraphUtilPair_set_first_(self, [((id<JavaUtilIterator>) nil_chk(iter)) next]);
    EduUciIcsJungGraphUtilPair_set_second_(self, [iter next]);
  }
  else @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Pair may only be created from a Collection of exactly 2 elements") autorelease];
}

EduUciIcsJungGraphUtilPair *new_EduUciIcsJungGraphUtilPair_initWithJavaUtilCollection_(id<JavaUtilCollection> values) {
  EduUciIcsJungGraphUtilPair *self = [EduUciIcsJungGraphUtilPair alloc];
  EduUciIcsJungGraphUtilPair_initWithJavaUtilCollection_(self, values);
  return self;
}

void EduUciIcsJungGraphUtilPair_initWithNSObjectArray_(EduUciIcsJungGraphUtilPair *self, IOSObjectArray *values) {
  NSObject_init(self);
  if (values == nil) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Input array cannot be null") autorelease];
  if (((IOSObjectArray *) nil_chk(values))->size_ == 2) {
    if (IOSObjectArray_Get(values, 0) == nil || IOSObjectArray_Get(values, 1) == nil) @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Pair cannot contain null values") autorelease];
    EduUciIcsJungGraphUtilPair_set_first_(self, IOSObjectArray_Get(values, 0));
    EduUciIcsJungGraphUtilPair_set_second_(self, IOSObjectArray_Get(values, 1));
  }
  else @throw [new_JavaLangIllegalArgumentException_initWithNSString_(@"Pair may only be created from an array of 2 elements") autorelease];
}

EduUciIcsJungGraphUtilPair *new_EduUciIcsJungGraphUtilPair_initWithNSObjectArray_(IOSObjectArray *values) {
  EduUciIcsJungGraphUtilPair *self = [EduUciIcsJungGraphUtilPair alloc];
  EduUciIcsJungGraphUtilPair_initWithNSObjectArray_(self, values);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungGraphUtilPair)

@implementation EduUciIcsJungGraphUtilPair_PairIterator

- (instancetype)initWithEduUciIcsJungGraphUtilPair:(EduUciIcsJungGraphUtilPair *)outer$ {
  EduUciIcsJungGraphUtilPair_PairIterator_initWithEduUciIcsJungGraphUtilPair_(self, outer$);
  return self;
}

- (jboolean)hasNext {
  return position_ < 2;
}

- (id)next {
  position_++;
  if (position_ == 1) return this$0_->first_;
  else if (position_ == 2) return this$0_->second_;
  else return nil;
}

- (void)remove {
  @throw [new_JavaLangUnsupportedOperationException_initWithNSString_(@"Pairs cannot be mutated") autorelease];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithEduUciIcsJungGraphUtilPair:", "PairIterator", NULL, 0x2, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Ledu.uci.ics.jung.graph.util.Pair;", NULL, NULL,  },
    { "position_", NULL, 0x0, "I", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _EduUciIcsJungGraphUtilPair_PairIterator = { 2, "PairIterator", "edu.uci.ics.jung.graph.util", "Pair", 0x2, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  return &_EduUciIcsJungGraphUtilPair_PairIterator;
}

@end

void EduUciIcsJungGraphUtilPair_PairIterator_initWithEduUciIcsJungGraphUtilPair_(EduUciIcsJungGraphUtilPair_PairIterator *self, EduUciIcsJungGraphUtilPair *outer$) {
  EduUciIcsJungGraphUtilPair_PairIterator_set_this$0_(self, outer$);
  NSObject_init(self);
  self->position_ = 0;
}

EduUciIcsJungGraphUtilPair_PairIterator *new_EduUciIcsJungGraphUtilPair_PairIterator_initWithEduUciIcsJungGraphUtilPair_(EduUciIcsJungGraphUtilPair *outer$) {
  EduUciIcsJungGraphUtilPair_PairIterator *self = [EduUciIcsJungGraphUtilPair_PairIterator alloc];
  EduUciIcsJungGraphUtilPair_PairIterator_initWithEduUciIcsJungGraphUtilPair_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUciIcsJungGraphUtilPair_PairIterator)
