//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/advanced/AlgoIncircle.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/advanced/AlgoIncircle.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/algos/ConstructionElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoConic.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoLine.h"
#include "geogebra/common/kernel/geos/GeoPoint.h"
#include "geogebra/common/kernel/geos/GeoVec3D.h"
#include "geogebra/common/kernel/kernelND/GeoConicND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/main/Localization.h"

@interface GeogebraCommonKernelAdvancedAlgoIncircle () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> A_, B_, C_;
  GeogebraCommonKernelGeosGeoLine *bisectorC_, *bisectorB_, *sideBC_, *heightBC_;
  GeogebraCommonKernelGeosGeoPoint *heightFoot_, *incenter_;
  GeogebraCommonKernelGeosGeoPoint *A1_, *B1_, *C1_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, A_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, B_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, C_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, bisectorC_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, bisectorB_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, sideBC_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, heightBC_, GeogebraCommonKernelGeosGeoLine *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, heightFoot_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, incenter_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, A1_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, B1_, GeogebraCommonKernelGeosGeoPoint *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAdvancedAlgoIncircle, C1_, GeogebraCommonKernelGeosGeoPoint *)

@implementation GeogebraCommonKernelAdvancedAlgoIncircle

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)C {
  GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, B, C);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)B
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)C {
  GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Incircle();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(B_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 2, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(C_, [GeogebraCommonKernelGeosGeoElement class]));
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:circle_];
  [self setDependencies];
}

- (GeogebraCommonKernelKernelNDGeoConicND *)getCircle {
  return circle_;
}

- (GeogebraCommonKernelGeosGeoPoint *)getA {
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(A_, [GeogebraCommonKernelGeosGeoPoint class]);
}

- (GeogebraCommonKernelGeosGeoPoint *)getB {
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(B_, [GeogebraCommonKernelGeosGeoPoint class]);
}

- (GeogebraCommonKernelGeosGeoPoint *)getC {
  return (GeogebraCommonKernelGeosGeoPoint *) check_class_cast(C_, [GeogebraCommonKernelGeosGeoPoint class]);
}

- (void)compute {
  jdouble dAB = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getA])) distanceWithGeogebraCommonKernelGeosGeoPoint:[self getB]];
  jdouble dAC = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getA])) distanceWithGeogebraCommonKernelGeosGeoPoint:[self getC]];
  jdouble dBC = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB])) distanceWithGeogebraCommonKernelGeosGeoPoint:[self getC]];
  jdouble dmax = dAB > dBC ? dAB : dBC;
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(A1_)) setCoordsWithDouble:dmax / dAB * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getA]))->inhomX_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomX_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomX_ withDouble:dmax / dAB * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getA]))->inhomY_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomY_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomY_ withDouble:1.0];
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(C1_)) setCoordsWithDouble:dmax / dBC * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomX_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomX_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomX_ withDouble:dmax / dBC * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomY_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomY_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomY_ withDouble:1.0];
  [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(B1_)) setCoordsWithDouble:(A1_->inhomX_ + C1_->inhomX_) / 2.0 withDouble:(A1_->inhomY_ + C1_->inhomY_) / 2.0 withDouble:1.0];
  GeogebraCommonKernelGeosGeoVec3D_lineThroughPointsWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoLine_([self getB], B1_, bisectorB_);
  dmax = dAC > dBC ? dAC : dBC;
  [A1_ setCoordsWithDouble:dmax / dAC * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getA]))->inhomX_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomX_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomX_ withDouble:dmax / dAC * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getA]))->inhomY_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomY_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomY_ withDouble:1.0];
  [B1_ setCoordsWithDouble:dmax / dBC * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomX_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomX_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomX_ withDouble:dmax / dBC * (((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getB]))->inhomY_ - ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomY_) + ((GeogebraCommonKernelGeosGeoPoint *) nil_chk([self getC]))->inhomY_ withDouble:1.0];
  [C1_ setCoordsWithDouble:(A1_->inhomX_ + B1_->inhomX_) / 2.0 withDouble:(A1_->inhomY_ + B1_->inhomY_) / 2.0 withDouble:1.0];
  GeogebraCommonKernelGeosGeoVec3D_lineThroughPointsWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoLine_([self getC], C1_, bisectorC_);
  GeogebraCommonKernelGeosGeoVec3D_lineThroughPointsWithGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoPoint_withGeogebraCommonKernelGeosGeoLine_([self getB], [self getC], sideBC_);
  GeogebraCommonKernelGeosGeoVec3D_crossWithGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoVec3D_(bisectorB_, bisectorC_, incenter_);
  GeogebraCommonKernelGeosGeoVec3D_crossWithGeogebraCommonKernelGeosGeoVec3D_withDouble_withDouble_withDouble_withGeogebraCommonKernelGeosGeoVec3D_(incenter_, ((GeogebraCommonKernelGeosGeoLine *) nil_chk(sideBC_))->x_, sideBC_->y_, 0.0, heightBC_);
  GeogebraCommonKernelGeosGeoVec3D_crossWithGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoVec3D_withGeogebraCommonKernelGeosGeoVec3D_(sideBC_, heightBC_, heightFoot_);
  jdouble dist = [((GeogebraCommonKernelGeosGeoPoint *) nil_chk(incenter_)) distanceWithGeogebraCommonKernelGeosGeoPoint:heightFoot_];
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(circle_)) setCircleWithGeogebraCommonKernelGeosGeoPoint:incenter_ withDouble:dist];
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonMainLocalization *) nil_chk([self getLoc])) getPlainWithNSString:@"IncircleOfTriangleABC" withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(A_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(B_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl] withNSString:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(C_)) getLabelWithGeogebraCommonKernelStringTemplate:tpl]];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(C_);
  RELEASE_(circle_);
  RELEASE_(bisectorC_);
  RELEASE_(bisectorB_);
  RELEASE_(sideBC_);
  RELEASE_(heightBC_);
  RELEASE_(heightFoot_);
  RELEASE_(incenter_);
  RELEASE_(A1_);
  RELEASE_(B1_);
  RELEASE_(C1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoIncircle", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoIncircle", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getCircle", NULL, "Lgeogebra.common.kernel.kernelND.GeoConicND;", 0x1, NULL, NULL },
    { "getA", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getB", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "getC", NULL, "Lgeogebra.common.kernel.geos.GeoPoint;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "C_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "circle_", NULL, 0x4, "Lgeogebra.common.kernel.kernelND.GeoConicND;", NULL, NULL,  },
    { "bisectorC_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "bisectorB_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "sideBC_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "heightBC_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoLine;", NULL, NULL,  },
    { "heightFoot_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "incenter_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "A1_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "B1_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
    { "C1_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPoint;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAdvancedAlgoIncircle = { 2, "AlgoIncircle", "geogebra.common.kernel.advanced", NULL, 0x1, 10, methods, 13, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAdvancedAlgoIncircle;
}

@end

void GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAdvancedAlgoIncircle *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
  [((GeogebraCommonKernelKernelNDGeoConicND *) nil_chk(self->circle_)) setLabelWithNSString:label];
}

GeogebraCommonKernelAdvancedAlgoIncircle *new_GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonKernelAdvancedAlgoIncircle *self = [GeogebraCommonKernelAdvancedAlgoIncircle alloc];
  GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, A, B, C);
  return self;
}

void GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelAdvancedAlgoIncircle *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAdvancedAlgoIncircle_set_A_(self, A);
  GeogebraCommonKernelAdvancedAlgoIncircle_set_B_(self, B);
  GeogebraCommonKernelAdvancedAlgoIncircle_set_C_(self, C);
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_circle_(self, new_GeogebraCommonKernelGeosGeoConic_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_bisectorC_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_bisectorB_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_heightFoot_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_heightBC_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_sideBC_(self, new_GeogebraCommonKernelGeosGeoLine_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_incenter_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_A1_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_B1_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  GeogebraCommonKernelAdvancedAlgoIncircle_setAndConsume_C1_(self, new_GeogebraCommonKernelGeosGeoPoint_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  [self compute];
}

GeogebraCommonKernelAdvancedAlgoIncircle *new_GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> A, id<GeogebraCommonKernelKernelNDGeoPointND> B, id<GeogebraCommonKernelKernelNDGeoPointND> C) {
  GeogebraCommonKernelAdvancedAlgoIncircle *self = [GeogebraCommonKernelAdvancedAlgoIncircle alloc];
  GeogebraCommonKernelAdvancedAlgoIncircle_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, A, B, C);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAdvancedAlgoIncircle)
