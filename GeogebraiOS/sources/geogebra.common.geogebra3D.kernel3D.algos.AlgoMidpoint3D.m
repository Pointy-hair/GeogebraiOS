//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoMidpoint3D.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoMidpoint3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPoint3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/kernelND/AlgoMidpointND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoSegmentND.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, P, Q);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)P
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)Q {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P, Q);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
            withGeogebraCommonKernelKernelNDGeoSegmentND:(id<GeogebraCommonKernelKernelNDGeoSegmentND>)segment {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoSegmentND_(self, cons, segment);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoPointND>)newGeoPointWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D_initWithGeogebraCommonKernelConstruction_(cons) autorelease];
}

- (GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *)getPoint {
  return (GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) check_class_cast([super getPoint], [GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D class]);
}

- (void)copyCoordsWithGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([self getPoint])) setCoordsWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point)) getCoordsInD3]];
}

- (void)computeMidCoords {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([self getPoint])) setCoordsWithGeogebraCommonKernelMatrixCoords:[((GeogebraCommonKernelMatrixCoords *) nil_chk([((GeogebraCommonKernelMatrixCoords *) nil_chk([((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getP])) getInhomCoordsInD3])) addWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk([self getQ])) getInhomCoordsInD3]])) mulWithDouble:0.5]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoMidpoint3D", NULL, 0x0, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoMidpoint3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoSegmentND:", "AlgoMidpoint3D", NULL, 0x1, NULL, NULL },
    { "newGeoPointWithGeogebraCommonKernelConstruction:", "newGeoPoint", "Lgeogebra.common.kernel.kernelND.GeoPointND;", 0x4, NULL, NULL },
    { "getPoint", NULL, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPoint3D;", 0x1, NULL, NULL },
    { "copyCoordsWithGeogebraCommonKernelKernelNDGeoPointND:", "copyCoords", "V", 0x4, NULL, NULL },
    { "computeMidCoords", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D = { 2, "AlgoMidpoint3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P, Q);
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoPoint3D *) nil_chk([self getPoint])) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, P, Q);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q) {
  GeogebraCommonKernelKernelNDAlgoMidpointND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P, Q);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoPointND> P, id<GeogebraCommonKernelKernelNDGeoPointND> Q) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, P, Q);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoSegmentND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *self, GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoSegmentND> segment) {
  GeogebraCommonKernelKernelNDAlgoMidpointND_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoSegmentND_(self, cons, segment);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoSegmentND_(GeogebraCommonKernelConstruction *cons, id<GeogebraCommonKernelKernelNDGeoSegmentND> segment) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoSegmentND_(self, cons, segment);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoMidpoint3D)
