//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/geos/GeoDummyVariable.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/geos/GeoCasCell.h"
#include "geogebra/common/kernel/geos/GeoDummyVariable.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"

@interface GeogebraCommonKernelGeosGeoDummyVariable () {
 @public
  NSString *varName_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelGeosGeoDummyVariable, varName_, NSString *)

@implementation GeogebraCommonKernelGeosGeoDummyVariable

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)varName {
  GeogebraCommonKernelGeosGeoDummyVariable_initWithGeogebraCommonKernelConstruction_withNSString_(self, c, varName);
  return self;
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [((GeogebraCommonKernelStringTemplate *) nil_chk(tpl)) printVariableNameWithNSString:varName_];
}

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return [self toStringWithGeogebraCommonKernelStringTemplate:tpl];
}

- (NSString *)getVarName {
  return varName_;
}

- (GeogebraCommonKernelGeosGeoElement *)getElementWithSameName {
  GeogebraCommonKernelGeosGeoElement *ge = [((GeogebraCommonKernelKernel *) nil_chk(kernel_)) lookupCasCellLabelWithNSString:varName_];
  if (ge == nil) ge = [kernel_ lookupLabelWithNSString:varName_];
  return ge;
}

- (jboolean)hasCoords {
  GeogebraCommonKernelGeosGeoElement *ge = [self getElementWithSameName];
  if (ge != nil && !([ge isKindOfClass:[GeogebraCommonKernelGeosGeoDummyVariable class]])) return [ge hasCoords];
  return NO;
}

- (jboolean)evaluatesToNumberWithBoolean:(jboolean)def {
  return def;
}

- (void)dealloc {
  RELEASE_(varName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:", "GeoDummyVariable", NULL, 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toValueStringWithGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getVarName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getElementWithSameName", NULL, "Lgeogebra.common.kernel.geos.GeoElement;", 0x1, NULL, NULL },
    { "hasCoords", NULL, "Z", 0x1, NULL, NULL },
    { "evaluatesToNumberWithBoolean:", "evaluatesToNumber", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "varName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelGeosGeoDummyVariable = { 2, "GeoDummyVariable", "geogebra.common.kernel.geos", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelGeosGeoDummyVariable;
}

@end

void GeogebraCommonKernelGeosGeoDummyVariable_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelGeosGeoDummyVariable *self, GeogebraCommonKernelConstruction *c, NSString *varName) {
  GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(self, c);
  GeogebraCommonKernelGeosGeoDummyVariable_set_varName_(self, varName);
}

GeogebraCommonKernelGeosGeoDummyVariable *new_GeogebraCommonKernelGeosGeoDummyVariable_initWithGeogebraCommonKernelConstruction_withNSString_(GeogebraCommonKernelConstruction *c, NSString *varName) {
  GeogebraCommonKernelGeosGeoDummyVariable *self = [GeogebraCommonKernelGeosGeoDummyVariable alloc];
  GeogebraCommonKernelGeosGeoDummyVariable_initWithGeogebraCommonKernelConstruction_withNSString_(self, c, varName);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelGeosGeoDummyVariable)
