//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/algos/AlgoAreaPolygon.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/EuclidianConstants.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoAreaPolygon.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/geos/GeoPolygon.h"

@interface GeogebraCommonKernelAlgosAlgoAreaPolygon () {
 @public
  GeogebraCommonKernelGeosGeoPolygon *polygon_;
  GeogebraCommonKernelGeosGeoNumeric *area_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAreaPolygon, polygon_, GeogebraCommonKernelGeosGeoPolygon *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelAlgosAlgoAreaPolygon, area_, GeogebraCommonKernelGeosGeoNumeric *)

__attribute__((unused)) static void GeogebraCommonKernelAlgosAlgoAreaPolygon_compute(GeogebraCommonKernelAlgosAlgoAreaPolygon *self);

@implementation GeogebraCommonKernelAlgosAlgoAreaPolygon

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                  withGeogebraCommonKernelGeosGeoPolygon:(GeogebraCommonKernelGeosGeoPolygon *)polygon {
  GeogebraCommonKernelAlgosAlgoAreaPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, label, polygon);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Area();
}

- (jint)getRelatedModeID {
  return GeogebraCommonEuclidianEuclidianConstants_MODE_AREA;
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, polygon_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:area_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getArea {
  return area_;
}

- (void)compute {
  GeogebraCommonKernelAlgosAlgoAreaPolygon_compute(self);
}

- (void)dealloc {
  RELEASE_(polygon_);
  RELEASE_(area_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoPolygon:", "AlgoAreaPolygon", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "getRelatedModeID", NULL, "I", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getArea", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "polygon_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoPolygon;", NULL, NULL,  },
    { "area_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelAlgosAlgoAreaPolygon = { 2, "AlgoAreaPolygon", "geogebra.common.kernel.algos", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelAlgosAlgoAreaPolygon;
}

@end

void GeogebraCommonKernelAlgosAlgoAreaPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelAlgosAlgoAreaPolygon *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPolygon *polygon) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelAlgosAlgoAreaPolygon_set_polygon_(self, polygon);
  GeogebraCommonKernelAlgosAlgoAreaPolygon_setAndConsume_area_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelAlgosAlgoAreaPolygon_compute(self);
  [self->area_ setLabelWithNSString:label];
}

GeogebraCommonKernelAlgosAlgoAreaPolygon *new_GeogebraCommonKernelAlgosAlgoAreaPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPolygon_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoPolygon *polygon) {
  GeogebraCommonKernelAlgosAlgoAreaPolygon *self = [GeogebraCommonKernelAlgosAlgoAreaPolygon alloc];
  GeogebraCommonKernelAlgosAlgoAreaPolygon_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoPolygon_(self, cons, label, polygon);
  return self;
}

void GeogebraCommonKernelAlgosAlgoAreaPolygon_compute(GeogebraCommonKernelAlgosAlgoAreaPolygon *self) {
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->area_)) setValueWithDouble:[((GeogebraCommonKernelGeosGeoPolygon *) nil_chk(self->polygon_)) getArea]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelAlgosAlgoAreaPolygon)
