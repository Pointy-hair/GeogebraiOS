//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/arithmetic/MyNumberPair.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Kernel.h"
#include "geogebra/common/kernel/StringTemplate.h"
#include "geogebra/common/kernel/arithmetic/ExpressionValue.h"
#include "geogebra/common/kernel/arithmetic/MyNumberPair.h"
#include "geogebra/common/kernel/arithmetic/MyVecNode.h"
#include "geogebra/common/kernel/arithmetic/Traversing.h"
#include "java/lang/StringBuilder.h"

__attribute__((unused)) static NSString *GeogebraCommonKernelArithmeticMyNumberPair_toStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelArithmeticMyNumberPair *self, GeogebraCommonKernelStringTemplate *tpl);

__attribute__((unused)) static NSString *GeogebraCommonKernelArithmeticMyNumberPair_toValueStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelArithmeticMyNumberPair *self, GeogebraCommonKernelStringTemplate *tpl);

@implementation GeogebraCommonKernelArithmeticMyNumberPair

- (instancetype)initWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)en
 withGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)en2 {
  GeogebraCommonKernelArithmeticMyNumberPair_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(self, kernel, en, en2);
  return self;
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)deepCopyWithGeogebraCommonKernelKernel:(GeogebraCommonKernelKernel *)kernel1 {
  return [new_GeogebraCommonKernelArithmeticMyNumberPair_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(kernel1, [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(x_)) deepCopyWithGeogebraCommonKernelKernel:kernel1], [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(y_)) deepCopyWithGeogebraCommonKernelKernel:kernel1]) autorelease];
}

- (NSString *)toStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonKernelArithmeticMyNumberPair_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (NSString *)toValueStringWithGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return GeogebraCommonKernelArithmeticMyNumberPair_toValueStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

- (id<GeogebraCommonKernelArithmeticExpressionValue>)traverseWithGeogebraCommonKernelArithmeticTraversing:(id<GeogebraCommonKernelArithmeticTraversing>)t {
  id<GeogebraCommonKernelArithmeticExpressionValue> v = [((id<GeogebraCommonKernelArithmeticTraversing>) nil_chk(t)) processWithGeogebraCommonKernelArithmeticExpressionValue:self];
  if (v != self) return v;
  GeogebraCommonKernelArithmeticMyVecNode_set_x_(self, [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(x_)) traverseWithGeogebraCommonKernelArithmeticTraversing:t]);
  GeogebraCommonKernelArithmeticMyVecNode_set_y_(self, [((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(y_)) traverseWithGeogebraCommonKernelArithmeticTraversing:t]);
  return self;
}

- (void)setXWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)x {
  GeogebraCommonKernelArithmeticMyVecNode_set_x_(self, x);
}

- (void)setYWithGeogebraCommonKernelArithmeticExpressionValue:(id<GeogebraCommonKernelArithmeticExpressionValue>)y {
  GeogebraCommonKernelArithmeticMyVecNode_set_y_(self, y);
}

- (NSString *)toLaTeXStringWithBoolean:(jboolean)symbolic
withGeogebraCommonKernelStringTemplate:(GeogebraCommonKernelStringTemplate *)tpl {
  return symbolic ? GeogebraCommonKernelArithmeticMyNumberPair_toStringWithGeogebraCommonKernelStringTemplate_(self, tpl) : GeogebraCommonKernelArithmeticMyNumberPair_toValueStringWithGeogebraCommonKernelStringTemplate_(self, tpl);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelKernel:withGeogebraCommonKernelArithmeticExpressionValue:withGeogebraCommonKernelArithmeticExpressionValue:", "MyNumberPair", NULL, 0x1, NULL, NULL },
    { "deepCopyWithGeogebraCommonKernelKernel:", "deepCopy", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x1, NULL, NULL },
    { "toStringWithGeogebraCommonKernelStringTemplate:", "toString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "toValueStringWithGeogebraCommonKernelStringTemplate:", "toValueString", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "traverseWithGeogebraCommonKernelArithmeticTraversing:", "traverse", "Lgeogebra.common.kernel.arithmetic.ExpressionValue;", 0x11, NULL, NULL },
    { "setXWithGeogebraCommonKernelArithmeticExpressionValue:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithGeogebraCommonKernelArithmeticExpressionValue:", "setY", "V", 0x1, NULL, NULL },
    { "toLaTeXStringWithBoolean:withGeogebraCommonKernelStringTemplate:", "toLaTeXString", "Ljava.lang.String;", 0x11, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelArithmeticMyNumberPair = { 2, "MyNumberPair", "geogebra.common.kernel.arithmetic", NULL, 0x1, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelArithmeticMyNumberPair;
}

@end

void GeogebraCommonKernelArithmeticMyNumberPair_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelArithmeticMyNumberPair *self, GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> en, id<GeogebraCommonKernelArithmeticExpressionValue> en2) {
  GeogebraCommonKernelArithmeticMyVecNode_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(self, kernel, en, en2);
}

GeogebraCommonKernelArithmeticMyNumberPair *new_GeogebraCommonKernelArithmeticMyNumberPair_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(GeogebraCommonKernelKernel *kernel, id<GeogebraCommonKernelArithmeticExpressionValue> en, id<GeogebraCommonKernelArithmeticExpressionValue> en2) {
  GeogebraCommonKernelArithmeticMyNumberPair *self = [GeogebraCommonKernelArithmeticMyNumberPair alloc];
  GeogebraCommonKernelArithmeticMyNumberPair_initWithGeogebraCommonKernelKernel_withGeogebraCommonKernelArithmeticExpressionValue_withGeogebraCommonKernelArithmeticExpressionValue_(self, kernel, en, en2);
  return self;
}

NSString *GeogebraCommonKernelArithmeticMyNumberPair_toStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelArithmeticMyNumberPair *self, GeogebraCommonKernelStringTemplate *tpl) {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(self->x_)) toStringWithGeogebraCommonKernelStringTemplate:tpl]];
  [sb appendWithNSString:@", "];
  [sb appendWithNSString:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(self->y_)) toStringWithGeogebraCommonKernelStringTemplate:tpl]];
  return [sb description];
}

NSString *GeogebraCommonKernelArithmeticMyNumberPair_toValueStringWithGeogebraCommonKernelStringTemplate_(GeogebraCommonKernelArithmeticMyNumberPair *self, GeogebraCommonKernelStringTemplate *tpl) {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(self->x_)) toValueStringWithGeogebraCommonKernelStringTemplate:tpl]];
  [sb appendWithNSString:@", "];
  [sb appendWithNSString:[((id<GeogebraCommonKernelArithmeticExpressionValue>) nil_chk(self->y_)) toValueStringWithGeogebraCommonKernelStringTemplate:tpl]];
  return [sb description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelArithmeticMyNumberPair)
