//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/tsp/model/Edge.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/kernel/discrete/tsp/model/Edge.h"
#include "geogebra/common/kernel/discrete/tsp/model/Node.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"

@interface GeogebraCommonKernelDiscreteTspModelEdge () {
 @public
  GeogebraCommonKernelDiscreteTspModelNode *start_;
  GeogebraCommonKernelDiscreteTspModelNode *end_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteTspModelEdge, start_, GeogebraCommonKernelDiscreteTspModelNode *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteTspModelEdge, end_, GeogebraCommonKernelDiscreteTspModelNode *)

@implementation GeogebraCommonKernelDiscreteTspModelEdge

- (instancetype)initWithGeogebraCommonKernelDiscreteTspModelNode:(GeogebraCommonKernelDiscreteTspModelNode *)start
                    withGeogebraCommonKernelDiscreteTspModelNode:(GeogebraCommonKernelDiscreteTspModelNode *)end {
  GeogebraCommonKernelDiscreteTspModelEdge_initWithGeogebraCommonKernelDiscreteTspModelNode_withGeogebraCommonKernelDiscreteTspModelNode_(self, start, end);
  return self;
}

- (GeogebraCommonKernelDiscreteTspModelNode *)getStart {
  return self->start_;
}

- (GeogebraCommonKernelDiscreteTspModelNode *)getEnd {
  return self->end_;
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[GeogebraCommonKernelDiscreteTspModelEdge class]]) {
    GeogebraCommonKernelDiscreteTspModelEdge *entry_ = (GeogebraCommonKernelDiscreteTspModelEdge *) check_class_cast(obj, [GeogebraCommonKernelDiscreteTspModelEdge class]);
    return ([((GeogebraCommonKernelDiscreteTspModelNode *) nil_chk(self->start_)) isEqual:((GeogebraCommonKernelDiscreteTspModelEdge *) nil_chk(entry_))->start_] && [((GeogebraCommonKernelDiscreteTspModelNode *) nil_chk(self->end_)) isEqual:entry_->end_]) || ([self->start_ isEqual:entry_->end_] && [((GeogebraCommonKernelDiscreteTspModelNode *) nil_chk(self->end_)) isEqual:entry_->start_]);
  }
  return NO;
}

- (jdouble)getDistance {
  jdouble dx = [((GeogebraCommonKernelDiscreteTspModelNode *) nil_chk(self->start_)) getX] - [((GeogebraCommonKernelDiscreteTspModelNode *) nil_chk(self->end_)) getX];
  jdouble dy = [self->start_ getY] - [self->end_ getY];
  return JavaLangMath_sqrtWithDouble_(dx * dx + dy * dy);
}

- (NSUInteger)hash {
  return ((jint) [((GeogebraCommonKernelDiscreteTspModelNode *) nil_chk(self->start_)) hash]) + ((jint) [((GeogebraCommonKernelDiscreteTspModelNode *) nil_chk(self->end_)) hash]);
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [new_JavaLangStringBuilder_init() autorelease];
  [sb appendWithNSString:@"Edge["];
  [sb appendWithId:self->start_];
  [sb appendWithNSString:@"]["];
  [sb appendWithId:self->end_];
  [sb appendWithNSString:@"]"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(start_);
  RELEASE_(end_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelDiscreteTspModelNode:withGeogebraCommonKernelDiscreteTspModelNode:", "Edge", NULL, 0x1, NULL, NULL },
    { "getStart", NULL, "Lgeogebra.common.kernel.discrete.tsp.model.Node;", 0x1, NULL, NULL },
    { "getEnd", NULL, "Lgeogebra.common.kernel.discrete.tsp.model.Node;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "getDistance", NULL, "D", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "start_", NULL, 0x2, "Lgeogebra.common.kernel.discrete.tsp.model.Node;", NULL, NULL,  },
    { "end_", NULL, 0x2, "Lgeogebra.common.kernel.discrete.tsp.model.Node;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteTspModelEdge = { 2, "Edge", "geogebra.common.kernel.discrete.tsp.model", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteTspModelEdge;
}

@end

void GeogebraCommonKernelDiscreteTspModelEdge_initWithGeogebraCommonKernelDiscreteTspModelNode_withGeogebraCommonKernelDiscreteTspModelNode_(GeogebraCommonKernelDiscreteTspModelEdge *self, GeogebraCommonKernelDiscreteTspModelNode *start, GeogebraCommonKernelDiscreteTspModelNode *end) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteTspModelEdge_set_start_(self, start);
  GeogebraCommonKernelDiscreteTspModelEdge_set_end_(self, end);
}

GeogebraCommonKernelDiscreteTspModelEdge *new_GeogebraCommonKernelDiscreteTspModelEdge_initWithGeogebraCommonKernelDiscreteTspModelNode_withGeogebraCommonKernelDiscreteTspModelNode_(GeogebraCommonKernelDiscreteTspModelNode *start, GeogebraCommonKernelDiscreteTspModelNode *end) {
  GeogebraCommonKernelDiscreteTspModelEdge *self = [GeogebraCommonKernelDiscreteTspModelEdge alloc];
  GeogebraCommonKernelDiscreteTspModelEdge_initWithGeogebraCommonKernelDiscreteTspModelNode_withGeogebraCommonKernelDiscreteTspModelNode_(self, start, end);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteTspModelEdge)
