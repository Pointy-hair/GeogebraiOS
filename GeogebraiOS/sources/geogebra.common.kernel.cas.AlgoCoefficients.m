//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoCoefficients.java
//


#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/arithmetic/ExpressionNode.h"
#include "geogebra/common/kernel/arithmetic/Function.h"
#include "geogebra/common/kernel/arithmetic/PolyFunction.h"
#include "geogebra/common/kernel/cas/AlgoCoefficients.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/statistics/FitAlgo.h"

@interface GeogebraCommonKernelCasAlgoCoefficients () {
 @public
  GeogebraCommonKernelGeosGeoFunction *f_;
  GeogebraCommonKernelGeosGeoList *g_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoCoefficients, f_, GeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoCoefficients, g_, GeogebraCommonKernelGeosGeoList *)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoCoefficients_compute(GeogebraCommonKernelCasAlgoCoefficients *self);

@implementation GeogebraCommonKernelCasAlgoCoefficients

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f {
  GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(self, cons, label, f);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f {
  GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_(self, cons, f);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Coefficients();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:1 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, f_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:g_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoList *)getResult {
  return g_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoCoefficients_compute(self);
}

- (void)dealloc {
  RELEASE_(f_);
  RELEASE_(g_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoFunction:", "AlgoCoefficients", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoFunction:", "AlgoCoefficients", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoList;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "f_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "g_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoCoefficients = { 2, "AlgoCoefficients", "geogebra.common.kernel.cas", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoCoefficients;
}

@end

void GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelCasAlgoCoefficients *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_(self, cons, f);
  [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoCoefficients *new_GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelCasAlgoCoefficients *self = [GeogebraCommonKernelCasAlgoCoefficients alloc];
  GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_(self, cons, label, f);
  return self;
}

void GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelCasAlgoCoefficients *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  [((GeogebraCommonKernelConstruction *) nil_chk(cons)) addCASAlgoWithGeogebraCommonKernelAlgosAlgoElement:self];
  GeogebraCommonKernelCasAlgoCoefficients_set_f_(self, f);
  GeogebraCommonKernelCasAlgoCoefficients_setAndConsume_g_(self, new_GeogebraCommonKernelGeosGeoList_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoCoefficients_compute(self);
}

GeogebraCommonKernelCasAlgoCoefficients *new_GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunction *f) {
  GeogebraCommonKernelCasAlgoCoefficients *self = [GeogebraCommonKernelCasAlgoCoefficients alloc];
  GeogebraCommonKernelCasAlgoCoefficients_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_(self, cons, f);
  return self;
}

void GeogebraCommonKernelCasAlgoCoefficients_compute(GeogebraCommonKernelCasAlgoCoefficients *self) {
  if (![((GeogebraCommonKernelGeosGeoFunction *) nil_chk(self->f_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setUndefined];
    return;
  }
  GeogebraCommonKernelArithmeticFunction *inFun = [self->f_ getFunction];
  GeogebraCommonKernelArithmeticPolyFunction *poly = [inFun expandToPolyFunctionWithGeogebraCommonKernelArithmeticExpressionValue:[((GeogebraCommonKernelArithmeticFunction *) nil_chk(inFun)) getExpression] withBoolean:NO withBoolean:NO];
  if (poly != nil) {
    IOSDoubleArray *coeffs = [poly getCoeffs];
    [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) clear];
    [self->g_ setDefinedWithBoolean:YES];
    for (jint i = ((IOSDoubleArray *) nil_chk(coeffs))->size_ - 1; i >= 0; i--) {
      [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(coeffs, i)) autorelease]];
    }
    return;
  }
  else if ([GeogebraCommonKernelStatisticsFitAlgo_class_() isInstance:[self->f_ getParentAlgorithm]]) {
    id<GeogebraCommonKernelStatisticsFitAlgo> fitAlgo = (id<GeogebraCommonKernelStatisticsFitAlgo>) check_protocol_cast([self->f_ getParentAlgorithm], @protocol(GeogebraCommonKernelStatisticsFitAlgo));
    IOSDoubleArray *coeffs = [((id<GeogebraCommonKernelStatisticsFitAlgo>) nil_chk(fitAlgo)) getCoeffs];
    [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) clear];
    [self->g_ setDefinedWithBoolean:YES];
    for (jint i = ((IOSDoubleArray *) nil_chk(coeffs))->size_ - 1; i >= 0; i--) {
      [self->g_ addWithGeogebraCommonKernelGeosGeoElement:[new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_withDouble_(self->cons_, IOSDoubleArray_Get(coeffs, i)) autorelease]];
    }
    return;
  }
  [((GeogebraCommonKernelGeosGeoList *) nil_chk(self->g_)) setUndefined];
  return;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoCoefficients)
