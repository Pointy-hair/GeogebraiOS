//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/discrete/AlgoHull.java
//


#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/MyPoint.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/discrete/AlgoHull.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/VoronoiAlgorithm.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/AbstractRepresentation.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/RepresentationFactory.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/RepresentationInterface.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/representation/triangulation/TriangulationRepresentation.h"
#include "geogebra/common/kernel/discrete/signalprocessor/voronoi/statusstructure/VLinkedNode.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoList.h"
#include "geogebra/common/kernel/geos/GeoLocus.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"

@interface GeogebraCommonKernelDiscreteAlgoHull () {
 @public
  GeogebraCommonKernelGeosGeoNumeric *percentage_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAlgoHull, percentage_, GeogebraCommonKernelGeosGeoNumeric *)

@interface GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper () {
 @public
  JavaUtilArrayList *circleevents_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper, circleevents_, JavaUtilArrayList *)

@interface GeogebraCommonKernelDiscreteAlgoHull_$1 : GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff {
 @public
  GeogebraCommonKernelDiscreteAlgoHull *this$0_;
}

- (jint)calculateCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *)rep;

- (instancetype)initWithGeogebraCommonKernelDiscreteAlgoHull:(GeogebraCommonKernelDiscreteAlgoHull *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(GeogebraCommonKernelDiscreteAlgoHull_$1)

J2OBJC_FIELD_SETTER(GeogebraCommonKernelDiscreteAlgoHull_$1, this$0_, GeogebraCommonKernelDiscreteAlgoHull *)

__attribute__((unused)) static void GeogebraCommonKernelDiscreteAlgoHull_$1_initWithGeogebraCommonKernelDiscreteAlgoHull_(GeogebraCommonKernelDiscreteAlgoHull_$1 *self, GeogebraCommonKernelDiscreteAlgoHull *outer$);

__attribute__((unused)) static GeogebraCommonKernelDiscreteAlgoHull_$1 *new_GeogebraCommonKernelDiscreteAlgoHull_$1_initWithGeogebraCommonKernelDiscreteAlgoHull_(GeogebraCommonKernelDiscreteAlgoHull *outer$) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(GeogebraCommonKernelDiscreteAlgoHull_$1)

@implementation GeogebraCommonKernelDiscreteAlgoHull

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                     withGeogebraCommonKernelGeosGeoList:(GeogebraCommonKernelGeosGeoList *)inputList
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)percentage {
  GeogebraCommonKernelDiscreteAlgoHull_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, inputList, percentage);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Hull();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:percentage_ == nil ? 1 : 2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, inputList_);
  if (percentage_ != nil) IOSObjectArray_Set(input_, 1, percentage_);
  [self setOnlyOutputWithGeogebraCommonKernelGeosToGeoElement:locus_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoLocus *)getResult {
  return locus_;
}

- (void)compute {
  size_ = [((GeogebraCommonKernelGeosGeoList *) nil_chk(inputList_)) size];
  if (![inputList_ isDefined] || size_ == 0) {
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setUndefined];
    return;
  }
  if (vl_ == nil) GeogebraCommonKernelDiscreteAlgoHull_setAndConsume_vl_(self, new_JavaUtilArrayList_init());
  else [vl_ clear];
  IOSDoubleArray *inhom = [IOSDoubleArray arrayWithLength:2];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff *calccutoff = [new_GeogebraCommonKernelDiscreteAlgoHull_$1_initWithGeogebraCommonKernelDiscreteAlgoHull_(self) autorelease];
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *representation;
  representation = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createTriangulationRepresentation();
  for (jint i = 0; i < size_; i++) {
    GeogebraCommonKernelGeosGeoElement *geo = [inputList_ getWithInt:i];
    if ([((GeogebraCommonKernelGeosGeoElement *) nil_chk(geo)) isDefined] && [geo isGeoPoint]) {
      id<GeogebraCommonKernelKernelNDGeoPointND> p = (id<GeogebraCommonKernelKernelNDGeoPointND>) check_protocol_cast(geo, @protocol(GeogebraCommonKernelKernelNDGeoPointND));
      [p getInhomCoordsWithDoubleArray:inhom];
      [((JavaUtilArrayList *) nil_chk(vl_)) addWithId:[((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationAbstractRepresentation *) nil_chk(representation)) createPointWithDouble:IOSDoubleArray_Get(inhom, 0) withDouble:IOSDoubleArray_Get(inhom, 1)]];
    }
  }
  representation = GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationFactory_createTriangulationRepresentation();
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *trianglarrep = (GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) check_class_cast(representation, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation class]);
  [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) nil_chk(trianglarrep)) setCalcCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff:calccutoff];
  GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *representationwrapper = [new_GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithGeogebraCommonKernelDiscreteAlgoHull_(self) autorelease];
  GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_set_innerrepresentation_(representationwrapper, representation);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiVoronoiAlgorithm_generateVoronoiWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationRepresentationInterface_withJavaUtilCollection_(representationwrapper, vl_);
  JavaUtilArrayList *edge = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) nil_chk(((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) check_class_cast(representation, [GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation class])))) getPointsFormingOutterBoundary];
  if (edge == nil) {
    [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setUndefined];
    return;
  }
  if (al_ == nil) GeogebraCommonKernelDiscreteAlgoHull_setAndConsume_al_(self, new_JavaUtilArrayList_init());
  else [al_ clear];
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(edge)) size]; i++) {
    GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *p = [edge getWithInt:i];
    [((JavaUtilArrayList *) nil_chk(al_)) addWithId:[new_GeogebraCommonKernelMyPoint_initWithDouble_withDouble_withBoolean_(((GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint *) nil_chk(p))->x_, p->y_, i != 0) autorelease]];
  }
  [((GeogebraCommonKernelGeosGeoLocus *) nil_chk(locus_)) setPointsWithJavaUtilArrayList:al_];
  [locus_ setDefinedWithBoolean:YES];
}

- (void)dealloc {
  RELEASE_(inputList_);
  RELEASE_(percentage_);
  RELEASE_(locus_);
  RELEASE_(al_);
  RELEASE_(vl_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoList:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoHull", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getResult", NULL, "Lgeogebra.common.kernel.geos.GeoLocus;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "inputList_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoList;", NULL, NULL,  },
    { "percentage_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "locus_", NULL, 0x4, "Lgeogebra.common.kernel.geos.GeoLocus;", NULL, NULL,  },
    { "al_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/MyPoint;>;",  },
    { "vl_", NULL, 0x4, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint;>;",  },
    { "size_", NULL, 0x4, "I", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lgeogebra.common.kernel.discrete.AlgoHull$TestRepresentationWrapper;"};
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteAlgoHull = { 2, "AlgoHull", "geogebra.common.kernel.discrete", NULL, 0x1, 5, methods, 6, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteAlgoHull;
}

@end

void GeogebraCommonKernelDiscreteAlgoHull_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelDiscreteAlgoHull *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *inputList, GeogebraCommonKernelGeosGeoNumeric *percentage) {
  GeogebraCommonKernelAlgosAlgoElement_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelDiscreteAlgoHull_set_inputList_(self, inputList);
  GeogebraCommonKernelDiscreteAlgoHull_set_percentage_(self, percentage);
  GeogebraCommonKernelDiscreteAlgoHull_setAndConsume_locus_(self, new_GeogebraCommonKernelGeosGeoLocus_initWithGeogebraCommonKernelConstruction_(cons));
  [self setInputOutput];
  [self compute];
  [self->locus_ setLabelWithNSString:label];
}

GeogebraCommonKernelDiscreteAlgoHull *new_GeogebraCommonKernelDiscreteAlgoHull_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoList *inputList, GeogebraCommonKernelGeosGeoNumeric *percentage) {
  GeogebraCommonKernelDiscreteAlgoHull *self = [GeogebraCommonKernelDiscreteAlgoHull alloc];
  GeogebraCommonKernelDiscreteAlgoHull_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoList_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, inputList, percentage);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteAlgoHull)

@implementation GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper

- (void)beginAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points {
  [((JavaUtilArrayList *) nil_chk(circleevents_)) clear];
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ beginAlgorithmWithJavaUtilCollection:points];
  }
}

- (void)siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3 {
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n1 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n2 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n3];
  }
}

- (void)circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n1
                   withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n2
                   withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)n3
                                                                                            withInt:(jint)circle_x
                                                                                            withInt:(jint)circle_y {
  [((JavaUtilArrayList *) nil_chk(circleevents_)) addWithId:[new_GeogebraCommonKernelDiscreteSignalprocessorVoronoiVPoint_initWithDouble_withDouble_(circle_x, circle_y) autorelease]];
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n1 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n2 withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:n3 withInt:circle_x withInt:circle_y];
  }
}

- (void)endAlgorithmWithJavaUtilCollection:(id<JavaUtilCollection>)points
                                withDouble:(jdouble)lastsweeplineposition
withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode *)headnode {
  if (innerrepresentation_ != nil) {
    [innerrepresentation_ endAlgorithmWithJavaUtilCollection:points withDouble:lastsweeplineposition withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:headnode];
  }
}

- (instancetype)initWithGeogebraCommonKernelDiscreteAlgoHull:(GeogebraCommonKernelDiscreteAlgoHull *)outer$ {
  GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(circleevents_);
  RELEASE_(innerrepresentation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "beginAlgorithmWithJavaUtilCollection:", "beginAlgorithm", "V", 0x1, NULL, NULL },
    { "siteEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "siteEvent", "V", 0x1, NULL, NULL },
    { "circleEventWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:withInt:withInt:", "circleEvent", "V", 0x1, NULL, NULL },
    { "endAlgorithmWithJavaUtilCollection:withDouble:withGeogebraCommonKernelDiscreteSignalprocessorVoronoiStatusstructureVLinkedNode:", "endAlgorithm", "V", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelDiscreteAlgoHull:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "circleevents_", NULL, 0x12, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lgeogebra/common/kernel/discrete/signalprocessor/voronoi/VPoint;>;",  },
    { "innerrepresentation_", NULL, 0x0, "Lgeogebra.common.kernel.discrete.signalprocessor.voronoi.representation.RepresentationInterface;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper = { 2, "TestRepresentationWrapper", "geogebra.common.kernel.discrete", "AlgoHull", 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper;
}

@end

void GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithGeogebraCommonKernelDiscreteAlgoHull_(GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *self, GeogebraCommonKernelDiscreteAlgoHull *outer$) {
  NSObject_init(self);
  GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_setAndConsume_circleevents_(self, new_JavaUtilArrayList_init());
  GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_set_innerrepresentation_(self, nil);
}

GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *new_GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithGeogebraCommonKernelDiscreteAlgoHull_(GeogebraCommonKernelDiscreteAlgoHull *outer$) {
  GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper *self = [GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper alloc];
  GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper_initWithGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteAlgoHull_TestRepresentationWrapper)

@implementation GeogebraCommonKernelDiscreteAlgoHull_$1

- (jint)calculateCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:(GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *)rep {
  jdouble percent = (this$0_->percentage_ == nil || ![this$0_->percentage_ isDefined]) ? 1 : [this$0_->percentage_ getDouble];
  if (percent < 0) percent = 0;
  else if (percent > 1) percent = 1;
  jdouble min = [((GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation *) nil_chk(rep)) getMinLength];
  jdouble max = [rep getMaxLength];
  jint val = J2ObjCFpToInt((percent * (max - min) + min));
  return val;
}

- (instancetype)initWithGeogebraCommonKernelDiscreteAlgoHull:(GeogebraCommonKernelDiscreteAlgoHull *)outer$ {
  GeogebraCommonKernelDiscreteAlgoHull_$1_initWithGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "calculateCutOffWithGeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation:", "calculateCutOff", "I", 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelDiscreteAlgoHull:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lgeogebra.common.kernel.discrete.AlgoHull;", NULL, NULL,  },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "GeogebraCommonKernelDiscreteAlgoHull", "compute" };
  static const J2ObjcClassInfo _GeogebraCommonKernelDiscreteAlgoHull_$1 = { 2, "", "geogebra.common.kernel.discrete", "AlgoHull", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_GeogebraCommonKernelDiscreteAlgoHull_$1;
}

@end

void GeogebraCommonKernelDiscreteAlgoHull_$1_initWithGeogebraCommonKernelDiscreteAlgoHull_(GeogebraCommonKernelDiscreteAlgoHull_$1 *self, GeogebraCommonKernelDiscreteAlgoHull *outer$) {
  GeogebraCommonKernelDiscreteAlgoHull_$1_set_this$0_(self, outer$);
  GeogebraCommonKernelDiscreteSignalprocessorVoronoiRepresentationTriangulationTriangulationRepresentation_CalcCutOff_init(self);
}

GeogebraCommonKernelDiscreteAlgoHull_$1 *new_GeogebraCommonKernelDiscreteAlgoHull_$1_initWithGeogebraCommonKernelDiscreteAlgoHull_(GeogebraCommonKernelDiscreteAlgoHull *outer$) {
  GeogebraCommonKernelDiscreteAlgoHull_$1 *self = [GeogebraCommonKernelDiscreteAlgoHull_$1 alloc];
  GeogebraCommonKernelDiscreteAlgoHull_$1_initWithGeogebraCommonKernelDiscreteAlgoHull_(self, outer$);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelDiscreteAlgoHull_$1)
