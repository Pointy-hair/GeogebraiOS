//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/com/vividsolutions/jts/index/intervalrtree/IntervalRTreeNode.java
//


#include "J2ObjC_source.h"
#include "com/vividsolutions/jts/geom/Coordinate.h"
#include "com/vividsolutions/jts/index/ItemVisitor.h"
#include "com/vividsolutions/jts/index/intervalrtree/IntervalRTreeNode.h"
#include "com/vividsolutions/jts/io/WKTWriter.h"
#include "java/lang/Double.h"

@implementation ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode

- (jdouble)getMin {
  return min_;
}

- (jdouble)getMax {
  return max_;
}

- (void)queryWithDouble:(jdouble)queryMin
             withDouble:(jdouble)queryMax
withComVividsolutionsJtsIndexItemVisitor:(id<ComVividsolutionsJtsIndexItemVisitor>)visitor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)intersectsWithDouble:(jdouble)queryMin
                      withDouble:(jdouble)queryMax {
  if (min_ > queryMax || max_ < queryMin) return NO;
  return YES;
}

- (NSString *)description {
  return ComVividsolutionsJtsIoWKTWriter_toLineStringWithComVividsolutionsJtsGeomCoordinate_withComVividsolutionsJtsGeomCoordinate_([new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(min_, 0) autorelease], [new_ComVividsolutionsJtsGeomCoordinate_initWithDouble_withDouble_(max_, 0) autorelease]);
}

- (instancetype)init {
  ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getMin", NULL, "D", 0x1, NULL, NULL },
    { "getMax", NULL, "D", 0x1, NULL, NULL },
    { "queryWithDouble:withDouble:withComVividsolutionsJtsIndexItemVisitor:", "query", "V", 0x401, NULL, NULL },
    { "intersectsWithDouble:withDouble:", "intersects", "Z", 0x4, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "min_", NULL, 0x4, "D", NULL, NULL,  },
    { "max_", NULL, 0x4, "D", NULL, NULL,  },
  };
  static const char *inner_classes[] = {"Lcom.vividsolutions.jts.index.intervalrtree.IntervalRTreeNode$NodeComparator;"};
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode = { 2, "IntervalRTreeNode", "com.vividsolutions.jts.index.intervalrtree", NULL, 0x401, 6, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode;
}

@end

void ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_init(ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *self) {
  NSObject_init(self);
  self->min_ = JavaLangDouble_POSITIVE_INFINITY;
  self->max_ = JavaLangDouble_NEGATIVE_INFINITY;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode)

@implementation ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *n1 = (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) check_class_cast(o1, [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode class]);
  ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *n2 = (ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) check_class_cast(o2, [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode class]);
  jdouble mid1 = (((ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) nil_chk(n1))->min_ + n1->max_) / 2;
  jdouble mid2 = (((ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode *) nil_chk(n2))->min_ + n2->max_) / 2;
  if (mid1 < mid2) return -1;
  if (mid1 > mid2) return 1;
  return 0;
}

- (instancetype)init {
  ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator_init(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator = { 2, "NodeComparator", "com.vividsolutions.jts.index.intervalrtree", "IntervalRTreeNode", 0x9, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator;
}

@end

void ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator_init(ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator *self) {
  NSObject_init(self);
}

ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator *new_ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator_init() {
  ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator *self = [ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator alloc];
  ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComVividsolutionsJtsIndexIntervalrtreeIntervalRTreeNode_NodeComparator)
