//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/euclidian/draw/DrawListArray.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/euclidian/DrawableND.h"
#include "geogebra/common/euclidian/EuclidianViewInterfaceSlim.h"
#include "geogebra/common/euclidian/draw/DrawListArray.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "java/util/ArrayList.h"

#define GeogebraCommonEuclidianDrawDrawListArray_serialVersionUID 1LL

@interface GeogebraCommonEuclidianDrawDrawListArray ()

- (GeogebraCommonEuclidianDrawableND *)getDrawableWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)listElement
                                                   withGeogebraCommonEuclidianDrawableND:(GeogebraCommonEuclidianDrawableND *)drawList;

@end

J2OBJC_STATIC_FIELD_GETTER(GeogebraCommonEuclidianDrawDrawListArray, serialVersionUID, jlong)

__attribute__((unused)) static GeogebraCommonEuclidianDrawableND *GeogebraCommonEuclidianDrawDrawListArray_getDrawableWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonEuclidianDrawableND_(GeogebraCommonEuclidianDrawDrawListArray *self, GeogebraCommonKernelGeosGeoElement *listElement, GeogebraCommonEuclidianDrawableND *drawList);

@implementation GeogebraCommonEuclidianDrawDrawListArray

- (instancetype)initWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim:(id<GeogebraCommonEuclidianEuclidianViewInterfaceSlim>)view {
  GeogebraCommonEuclidianDrawDrawListArray_initWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(self, view);
  return self;
}

- (jboolean)addToDrawableListWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)listElement
                                                            withInt:(jint)drawablePos
                                                            withInt:(jint)oldDrawableSize
                              withGeogebraCommonEuclidianDrawableND:(GeogebraCommonEuclidianDrawableND *)drawList {
  GeogebraCommonEuclidianDrawableND *d = nil;
  jboolean inOldDrawableRange = drawablePos < oldDrawableSize;
  if (inOldDrawableRange) {
    GeogebraCommonEuclidianDrawableND *oldDrawable = [self getWithInt:drawablePos];
    if ([((GeogebraCommonEuclidianDrawableND *) nil_chk(oldDrawable)) getGeoElement] == listElement) {
      d = oldDrawable;
      [self updateWithGeogebraCommonEuclidianDrawableND:d];
    }
    else {
      d = [self getDrawableWithGeogebraCommonEuclidianDrawableND:oldDrawable withGeogebraCommonKernelGeosGeoElement:listElement withGeogebraCommonEuclidianDrawableND:drawList];
    }
  }
  else {
    d = GeogebraCommonEuclidianDrawDrawListArray_getDrawableWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonEuclidianDrawableND_(self, listElement, drawList);
  }
  if (d != nil) {
    if (inOldDrawableRange) {
      [self setWithInt:drawablePos withId:d];
    }
    else {
      [self addWithInt:drawablePos withId:d];
    }
    return YES;
  }
  return NO;
}

- (GeogebraCommonEuclidianDrawableND *)getDrawableWithGeogebraCommonEuclidianDrawableND:(GeogebraCommonEuclidianDrawableND *)oldDrawable
                                                 withGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)listElement
                                                  withGeogebraCommonEuclidianDrawableND:(GeogebraCommonEuclidianDrawableND *)drawList {
  return GeogebraCommonEuclidianDrawDrawListArray_getDrawableWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonEuclidianDrawableND_(self, listElement, drawList);
}

- (void)updateWithGeogebraCommonEuclidianDrawableND:(GeogebraCommonEuclidianDrawableND *)d {
  [((GeogebraCommonEuclidianDrawableND *) nil_chk(d)) update];
}

- (GeogebraCommonEuclidianDrawableND *)getDrawableWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)listElement
                                                   withGeogebraCommonEuclidianDrawableND:(GeogebraCommonEuclidianDrawableND *)drawList {
  return GeogebraCommonEuclidianDrawDrawListArray_getDrawableWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonEuclidianDrawableND_(self, listElement, drawList);
}

- (GeogebraCommonEuclidianDrawableND *)createDrawableNDWithGeogebraCommonKernelGeosGeoElement:(GeogebraCommonKernelGeosGeoElement *)listElement {
  return [((id<GeogebraCommonEuclidianEuclidianViewInterfaceSlim>) nil_chk(view_)) newDrawableWithGeogebraCommonKernelGeosGeoElement:listElement];
}

- (void)dealloc {
  RELEASE_(view_);
  [super dealloc];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim:", "DrawListArray", NULL, 0x1, NULL, NULL },
    { "addToDrawableListWithGeogebraCommonKernelGeosGeoElement:withInt:withInt:withGeogebraCommonEuclidianDrawableND:", "addToDrawableList", "Z", 0x1, NULL, NULL },
    { "getDrawableWithGeogebraCommonEuclidianDrawableND:withGeogebraCommonKernelGeosGeoElement:withGeogebraCommonEuclidianDrawableND:", "getDrawable", "Lgeogebra.common.euclidian.DrawableND;", 0x4, NULL, NULL },
    { "updateWithGeogebraCommonEuclidianDrawableND:", "update", "V", 0x4, NULL, NULL },
    { "getDrawableWithGeogebraCommonKernelGeosGeoElement:withGeogebraCommonEuclidianDrawableND:", "getDrawable", "Lgeogebra.common.euclidian.DrawableND;", 0x2, NULL, NULL },
    { "createDrawableNDWithGeogebraCommonKernelGeosGeoElement:", "createDrawableND", "Lgeogebra.common.euclidian.DrawableND;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = GeogebraCommonEuclidianDrawDrawListArray_serialVersionUID },
    { "view_", NULL, 0x4, "Lgeogebra.common.euclidian.EuclidianViewInterfaceSlim;", NULL, NULL,  },
  };
  static const char *superclass_type_args[] = {"Lgeogebra.common.euclidian.DrawableND;"};
  static const J2ObjcClassInfo _GeogebraCommonEuclidianDrawDrawListArray = { 2, "DrawListArray", "geogebra.common.euclidian.draw", NULL, 0x1, 6, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/ArrayList<Lgeogebra/common/euclidian/DrawableND;>;" };
  return &_GeogebraCommonEuclidianDrawDrawListArray;
}

@end

void GeogebraCommonEuclidianDrawDrawListArray_initWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(GeogebraCommonEuclidianDrawDrawListArray *self, id<GeogebraCommonEuclidianEuclidianViewInterfaceSlim> view) {
  JavaUtilArrayList_init(self);
  GeogebraCommonEuclidianDrawDrawListArray_set_view_(self, view);
}

GeogebraCommonEuclidianDrawDrawListArray *new_GeogebraCommonEuclidianDrawDrawListArray_initWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(id<GeogebraCommonEuclidianEuclidianViewInterfaceSlim> view) {
  GeogebraCommonEuclidianDrawDrawListArray *self = [GeogebraCommonEuclidianDrawDrawListArray alloc];
  GeogebraCommonEuclidianDrawDrawListArray_initWithGeogebraCommonEuclidianEuclidianViewInterfaceSlim_(self, view);
  return self;
}

GeogebraCommonEuclidianDrawableND *GeogebraCommonEuclidianDrawDrawListArray_getDrawableWithGeogebraCommonKernelGeosGeoElement_withGeogebraCommonEuclidianDrawableND_(GeogebraCommonEuclidianDrawDrawListArray *self, GeogebraCommonKernelGeosGeoElement *listElement, GeogebraCommonEuclidianDrawableND *drawList) {
  GeogebraCommonEuclidianDrawableND *d = [((id<GeogebraCommonEuclidianEuclidianViewInterfaceSlim>) nil_chk(self->view_)) getDrawableNDWithGeogebraCommonKernelGeosGeoElement:listElement];
  if (d == nil) {
    d = [self createDrawableNDWithGeogebraCommonKernelGeosGeoElement:listElement];
    if (d != nil) [d setCreatedByDrawListWithGeogebraCommonEuclidianDrawableND:drawList];
  }
  else {
    [self updateWithGeogebraCommonEuclidianDrawableND:d];
  }
  return d;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonEuclidianDrawDrawListArray)
