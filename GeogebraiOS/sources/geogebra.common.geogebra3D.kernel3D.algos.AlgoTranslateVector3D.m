//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoTranslateVector3D.java
//


#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoTranslateVector3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoVector3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/Matrix/Coords.h"
#include "geogebra/common/kernel/algos/AlgoTranslateVector.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"
#include "geogebra/common/kernel/kernelND/GeoVectorND.h"

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
             withGeogebraCommonKernelKernelNDGeoVectorND:(id<GeogebraCommonKernelKernelNDGeoVectorND>)v
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)A {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
  return self;
}

- (id<GeogebraCommonKernelKernelNDGeoVectorND>)newGeoVectorWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons1 {
  return [new_GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D_initWithGeogebraCommonKernelConstruction_(cons1) autorelease];
}

- (void)compute {
  [((GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *) nil_chk(((GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D *) check_class_cast(w_, [GeogebraCommonGeogebra3DKernel3DGeosGeoVector3D class])))) setCoordsWithGeogebraCommonKernelMatrixCoords:[((id<GeogebraCommonKernelKernelNDGeoVectorND>) nil_chk(v_)) getCoordsInD3]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoVectorND:withGeogebraCommonKernelKernelNDGeoPointND:", "AlgoTranslateVector3D", NULL, 0x1, NULL, NULL },
    { "newGeoVectorWithGeogebraCommonKernelConstruction:", "newGeoVector", "Lgeogebra.common.kernel.kernelND.GeoVectorND;", 0x4, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D = { 2, "AlgoTranslateVector3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D *self, GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoPointND> A) {
  GeogebraCommonKernelAlgosAlgoTranslateVector_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoPointND_(GeogebraCommonKernelConstruction *cons, NSString *label, id<GeogebraCommonKernelKernelNDGeoVectorND> v, id<GeogebraCommonKernelKernelNDGeoPointND> A) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoVectorND_withGeogebraCommonKernelKernelNDGeoPointND_(self, cons, label, v, A);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoTranslateVector3D)
