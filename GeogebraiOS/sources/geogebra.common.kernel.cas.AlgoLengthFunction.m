//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/kernel/cas/AlgoLengthFunction.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/cas/AlgoDerivative.h"
#include "geogebra/common/kernel/cas/AlgoIntegralDefinite.h"
#include "geogebra/common/kernel/cas/AlgoLengthFunction.h"
#include "geogebra/common/kernel/cas/AlgoUsingTempCASalgo.h"
#include "geogebra/common/kernel/cas/LengthFunction.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoFunction.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/roots/RealRootFunction.h"
#include "java/lang/Math.h"

@interface GeogebraCommonKernelCasAlgoLengthFunction () {
 @public
  GeogebraCommonKernelGeosGeoNumeric *A_, *B_;
  GeogebraCommonKernelGeosGeoFunction *f_;
  GeogebraCommonKernelGeosGeoNumeric *length_;
  id<GeogebraCommonKernelRootsRealRootFunction> lengthFunction_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthFunction, A_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthFunction, B_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthFunction, f_, GeogebraCommonKernelGeosGeoFunction *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthFunction, length_, GeogebraCommonKernelGeosGeoNumeric *)
J2OBJC_FIELD_SETTER(GeogebraCommonKernelCasAlgoLengthFunction, lengthFunction_, id<GeogebraCommonKernelRootsRealRootFunction>)

__attribute__((unused)) static void GeogebraCommonKernelCasAlgoLengthFunction_compute(GeogebraCommonKernelCasAlgoLengthFunction *self);

@implementation GeogebraCommonKernelCasAlgoLengthFunction

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                                            withNSString:(NSString *)label
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)A
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)B {
  GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, f, A, B);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)cons
                 withGeogebraCommonKernelGeosGeoFunction:(GeogebraCommonKernelGeosGeoFunction *)f
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)A
                  withGeogebraCommonKernelGeosGeoNumeric:(GeogebraCommonKernelGeosGeoNumeric *)B {
  GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, f, A, B);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Length();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:3 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, f_);
  IOSObjectArray_Set(input_, 1, A_);
  IOSObjectArray_Set(input_, 2, B_);
  [self setOutputLengthWithInt:1];
  [self setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:length_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getLength {
  return length_;
}

- (void)compute {
  GeogebraCommonKernelCasAlgoLengthFunction_compute(self);
}

- (void)refreshCASResults {
  GeogebraCommonKernelCasAlgoUsingTempCASalgo_setAndConsume_algoCAS_(self, new_GeogebraCommonKernelCasAlgoDerivative_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosCasEvaluableFunction_(cons_, f_));
  GeogebraCommonKernelGeosGeoFunction *f1 = (GeogebraCommonKernelGeosGeoFunction *) check_class_cast([((GeogebraCommonKernelCasAlgoDerivative *) check_class_cast(algoCAS_, [GeogebraCommonKernelCasAlgoDerivative class])) getResult], [GeogebraCommonKernelGeosGeoFunction class]);
  GeogebraCommonKernelCasAlgoLengthFunction_setAndConsume_lengthFunction_(self, new_GeogebraCommonKernelCasLengthFunction_initWithGeogebraCommonKernelGeosGeoFunction_(f1));
  [((GeogebraCommonKernelConstruction *) nil_chk(cons_)) removeFromConstructionListWithGeogebraCommonKernelAlgosConstructionElement:algoCAS_];
}

- (void)dealloc {
  RELEASE_(A_);
  RELEASE_(B_);
  RELEASE_(f_);
  RELEASE_(length_);
  RELEASE_(lengthFunction_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelGeosGeoFunction:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoLengthFunction", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelGeosGeoFunction:withGeogebraCommonKernelGeosGeoNumeric:withGeogebraCommonKernelGeosGeoNumeric:", "AlgoLengthFunction", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getLength", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x11, NULL, NULL },
    { "refreshCASResults", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "A_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "B_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "f_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoFunction;", NULL, NULL,  },
    { "length_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
    { "lengthFunction_", NULL, 0x2, "Lgeogebra.common.kernel.roots.RealRootFunction;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonKernelCasAlgoLengthFunction = { 2, "AlgoLengthFunction", "geogebra.common.kernel.cas", NULL, 0x1, 7, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonKernelCasAlgoLengthFunction;
}

@end

void GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCasAlgoLengthFunction *self, GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f, GeogebraCommonKernelGeosGeoNumeric *A, GeogebraCommonKernelGeosGeoNumeric *B) {
  GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, f, A, B);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->length_)) setLabelWithNSString:label];
}

GeogebraCommonKernelCasAlgoLengthFunction *new_GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, NSString *label, GeogebraCommonKernelGeosGeoFunction *f, GeogebraCommonKernelGeosGeoNumeric *A, GeogebraCommonKernelGeosGeoNumeric *B) {
  GeogebraCommonKernelCasAlgoLengthFunction *self = [GeogebraCommonKernelCasAlgoLengthFunction alloc];
  GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, label, f, A, B);
  return self;
}

void GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelCasAlgoLengthFunction *self, GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunction *f, GeogebraCommonKernelGeosGeoNumeric *A, GeogebraCommonKernelGeosGeoNumeric *B) {
  GeogebraCommonKernelCasAlgoUsingTempCASalgo_initWithGeogebraCommonKernelConstruction_(self, cons);
  GeogebraCommonKernelCasAlgoLengthFunction_set_A_(self, A);
  GeogebraCommonKernelCasAlgoLengthFunction_set_B_(self, B);
  GeogebraCommonKernelCasAlgoLengthFunction_set_f_(self, f);
  GeogebraCommonKernelCasAlgoLengthFunction_setAndConsume_length_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(cons));
  [self refreshCASResults];
  [self setInputOutput];
  GeogebraCommonKernelCasAlgoLengthFunction_compute(self);
}

GeogebraCommonKernelCasAlgoLengthFunction *new_GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(GeogebraCommonKernelConstruction *cons, GeogebraCommonKernelGeosGeoFunction *f, GeogebraCommonKernelGeosGeoNumeric *A, GeogebraCommonKernelGeosGeoNumeric *B) {
  GeogebraCommonKernelCasAlgoLengthFunction *self = [GeogebraCommonKernelCasAlgoLengthFunction alloc];
  GeogebraCommonKernelCasAlgoLengthFunction_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelGeosGeoFunction_withGeogebraCommonKernelGeosGeoNumeric_withGeogebraCommonKernelGeosGeoNumeric_(self, cons, f, A, B);
  return self;
}

void GeogebraCommonKernelCasAlgoLengthFunction_compute(GeogebraCommonKernelCasAlgoLengthFunction *self) {
  jdouble a = [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->A_)) getValue];
  jdouble b = [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->B_)) getValue];
  jdouble lenVal = JavaLangMath_absWithDouble_(GeogebraCommonKernelCasAlgoIntegralDefinite_numericIntegrationWithGeogebraCommonKernelRootsRealRootFunction_withDouble_withDouble_(self->lengthFunction_, a, b));
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->length_)) setValueWithDouble:lenVal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonKernelCasAlgoLengthFunction)
