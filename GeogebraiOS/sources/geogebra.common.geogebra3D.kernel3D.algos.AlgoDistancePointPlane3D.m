//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jacky/GSoC/geogebra_iOS/geogebra/geogebra/common/src/geogebra/common/geogebra3D/kernel3D/algos/AlgoDistancePointPlane3D.java
//


#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoDistancePointPlane3D.h"
#include "geogebra/common/geogebra3D/kernel3D/algos/AlgoElement3D.h"
#include "geogebra/common/geogebra3D/kernel3D/geos/GeoPlane3D.h"
#include "geogebra/common/kernel/Construction.h"
#include "geogebra/common/kernel/algos/AlgoElement.h"
#include "geogebra/common/kernel/commands/Commands.h"
#include "geogebra/common/kernel/geos/GeoElement.h"
#include "geogebra/common/kernel/geos/GeoNumeric.h"
#include "geogebra/common/kernel/kernelND/GeoPlaneND.h"
#include "geogebra/common/kernel/kernelND/GeoPointND.h"

@interface GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D () {
 @public
  id<GeogebraCommonKernelKernelNDGeoPointND> point_;
  GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *plane_;
  GeogebraCommonKernelGeosGeoNumeric *dist_;
}

@end

J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D, point_, id<GeogebraCommonKernelKernelNDGeoPointND>)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D, plane_, GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *)
J2OBJC_FIELD_SETTER(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D, dist_, GeogebraCommonKernelGeosGeoNumeric *)

@implementation GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
                                            withNSString:(NSString *)label
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point
              withGeogebraCommonKernelKernelNDGeoPlaneND:(id<GeogebraCommonKernelKernelNDGeoPlaneND>)plane {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(self, c, label, point, plane);
  return self;
}

- (instancetype)initWithGeogebraCommonKernelConstruction:(GeogebraCommonKernelConstruction *)c
              withGeogebraCommonKernelKernelNDGeoPointND:(id<GeogebraCommonKernelKernelNDGeoPointND>)point
              withGeogebraCommonKernelKernelNDGeoPlaneND:(id<GeogebraCommonKernelKernelNDGeoPlaneND>)plane {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(self, c, point, plane);
  return self;
}

- (GeogebraCommonKernelCommandsCommandsEnum *)getClassName {
  return GeogebraCommonKernelCommandsCommandsEnum_get_Distance();
}

- (void)setInputOutput {
  GeogebraCommonKernelAlgosAlgoElement_setAndConsume_input_(self, [IOSObjectArray newArrayWithLength:2 type:GeogebraCommonKernelGeosGeoElement_class_()]);
  IOSObjectArray_Set(input_, 0, (GeogebraCommonKernelGeosGeoElement *) check_class_cast(point_, [GeogebraCommonKernelGeosGeoElement class]));
  IOSObjectArray_Set(input_, 1, plane_);
  [super setOutputLengthWithInt:1];
  [super setOutputWithInt:0 withGeogebraCommonKernelGeosGeoElement:dist_];
  [self setDependencies];
}

- (GeogebraCommonKernelGeosGeoNumeric *)getDistance {
  return dist_;
}

- (void)compute {
  if (![((id<GeogebraCommonKernelKernelNDGeoPointND>) nil_chk(point_)) isDefined] || ![((GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(plane_)) isDefined]) {
    [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(dist_)) setUndefined];
    return;
  }
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(dist_)) setValueWithDouble:[((GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) nil_chk(plane_)) distanceWithGeogebraCommonKernelKernelNDGeoPointND:point_]];
}

- (void)dealloc {
  RELEASE_(point_);
  RELEASE_(plane_);
  RELEASE_(dist_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithGeogebraCommonKernelConstruction:withNSString:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPlaneND:", "AlgoDistancePointPlane3D", NULL, 0x1, NULL, NULL },
    { "initWithGeogebraCommonKernelConstruction:withGeogebraCommonKernelKernelNDGeoPointND:withGeogebraCommonKernelKernelNDGeoPlaneND:", "AlgoDistancePointPlane3D", NULL, 0x1, NULL, NULL },
    { "getClassName", NULL, "Lgeogebra.common.kernel.commands.Commands;", 0x1, NULL, NULL },
    { "setInputOutput", NULL, "V", 0x4, NULL, NULL },
    { "getDistance", NULL, "Lgeogebra.common.kernel.geos.GeoNumeric;", 0x1, NULL, NULL },
    { "compute", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "point_", NULL, 0x2, "Lgeogebra.common.kernel.kernelND.GeoPointND;", NULL, NULL,  },
    { "plane_", NULL, 0x2, "Lgeogebra.common.geogebra3D.kernel3D.geos.GeoPlane3D;", NULL, NULL,  },
    { "dist_", NULL, 0x2, "Lgeogebra.common.kernel.geos.GeoNumeric;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D = { 2, "AlgoDistancePointPlane3D", "geogebra.common.geogebra3D.kernel3D.algos", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D;
}

@end

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D *self, GeogebraCommonKernelConstruction *c, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> point, id<GeogebraCommonKernelKernelNDGeoPlaneND> plane) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(self, c, point, plane);
  [((GeogebraCommonKernelGeosGeoNumeric *) nil_chk(self->dist_)) setLabelWithNSString:label];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonKernelConstruction *c, NSString *label, id<GeogebraCommonKernelKernelNDGeoPointND> point, id<GeogebraCommonKernelKernelNDGeoPlaneND> plane) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withNSString_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(self, c, label, point, plane);
  return self;
}

void GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D *self, GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> point, id<GeogebraCommonKernelKernelNDGeoPlaneND> plane) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoElement3D_initWithGeogebraCommonKernelConstruction_(self, c);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_set_point_(self, point);
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_set_plane_(self, (GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D *) check_class_cast(plane, [GeogebraCommonGeogebra3DKernel3DGeosGeoPlane3D class]));
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_setAndConsume_dist_(self, new_GeogebraCommonKernelGeosGeoNumeric_initWithGeogebraCommonKernelConstruction_(self->cons_));
  [self setInputOutput];
  [self compute];
}

GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D *new_GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(GeogebraCommonKernelConstruction *c, id<GeogebraCommonKernelKernelNDGeoPointND> point, id<GeogebraCommonKernelKernelNDGeoPlaneND> plane) {
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D *self = [GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D alloc];
  GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D_initWithGeogebraCommonKernelConstruction_withGeogebraCommonKernelKernelNDGeoPointND_withGeogebraCommonKernelKernelNDGeoPlaneND_(self, c, point, plane);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GeogebraCommonGeogebra3DKernel3DAlgosAlgoDistancePointPlane3D)
